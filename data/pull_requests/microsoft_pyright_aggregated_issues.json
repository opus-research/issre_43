[
  {
    "_id": "66210f01ac254a19ac290486",
    "number": 7720,
    "body": null,
    "head_branch": "pull-pylance-2024.4.102",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Loc update from Pylance (#7720)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f02ac254a19ac290487",
    "number": 7719,
    "body": "- Get rid of `dispose` from `TempFile` -- https://github.com/microsoft/pyrx/pull/5038 / https://github.com/microsoft/pyrx/issues/4805\r\n- get rid of `GetEvaluator` -- https://github.com/microsoft/pyrx/pull/5034 / https://github.com/microsoft/pyrx/issues/4963\r\n- Remove unneeded npm dependencies -- https://github.com/microsoft/pyrx/pull/4989\r\n- Indexer uses its own file system with caches -- https://github.com/microsoft/pyrx/pull/5007 / https://github.com/microsoft/pyrx/issues/4809",
    "head_branch": "pull-pylance-2024.4.102",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Push pylance changes to pyright (#7719)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\nCo-authored-by: Stella Huang <stellahuang@microsoft.com>\r\nCo-authored-by: Kacie Kang <jikang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f03ac254a19ac290488",
    "number": 7709,
    "body": "…ances that involve unions of TypeVars in an invariant context. This addresses #6957.",
    "head_branch": "6957",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that results in false positive error under certain circumstances that involve unions of TypeVars in an invariant context. This addresses #6957. (#7709)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f04ac254a19ac290489",
    "number": 7705,
    "body": "…ion when assigning a tuple to another tuple that contains dependent type variables.",
    "head_branch": "tupleAssignment",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-         \"Literal['PSUTIL_ETHTOOL_MISSING_TYPES']\" is incompatible with type \"Literal['PSUTIL_VERSION']\" (reportArgumentType)\n+         \"Literal['PSUTIL_ETHTOOL_MISSING_TYPES']\" is incompatible with type \"Literal['PSUTIL_VERSION']\"\n+       Tuple entry 2 is incorrect type\n+         \"Literal[1]\" is incompatible with type \"Literal[567]\" (reportArgumentType)\n\nspack (https://github.com/spack/spack)\n-           Type \"(msg: Unknown, module: Unknown, name: Unknown, traceback: Unknown, log: Unknown, log_type: Unknown, context: Unknown) -> ChildError\" is incompatible with type \"type[Self@SpackError]\" (reportIncompatibleMethodOverride)\n+           Type \"(msg: Unknown, module: Unknown, name: Unknown, traceback: Unknown, log: Unknown, log_type: Unknown, context: Unknown) -> ChildError\" is incompatible with type \"type[Self@SpackError]\"\n+         Tuple entry 2 is incorrect type\n+           \"tuple[Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, Unknown]\" is incompatible with \"tuple[Unknown, Unknown | None]\"\n+             Tuple size mismatch; expected 2 but received 7 (reportIncompatibleMethodOverride)\n-             \"None\" is incompatible with \"str\" (reportIncompatibleMethodOverride)\n+             \"None\" is incompatible with \"str\"\n+         Tuple entry 2 is incorrect type\n+           Type \"Unknown | None\" is incompatible with type \"str\"\n+             \"None\" is incompatible with \"str\"\n+     ... (reportIncompatibleMethodOverride)\n+         Tuple entry 2 is incorrect type\n+           \"str\" is incompatible with type \"Literal['x86_64']\"\n-         Tuple entry 1 is incorrect type\n+         Tuple entry 1 is incorrect type (reportArgumentType)\n-           \"str\" is incompatible with type \"Literal['darwin']\"\n-       \"tuple[str, str, Unknown]\" is incompatible with \"tuple[Literal['darwin'], Literal['x86_64'], Literal['netlrts']]\" (reportArgumentType)\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-       \"tuple[str, Literal['short', 'long'], Unknown]\" is incompatible with \"tuple[Literal['entry'], Literal['long'], Literal['other']]\"\n-         Tuple entry 1 is incorrect type\n+         Tuple entry 2 is incorrect type\n+           Type \"Literal['short', 'long']\" is incompatible with type \"Literal['long']\"\n-           \"str\" is incompatible with type \"Literal['entry']\"\n+             \"Literal['short']\" is incompatible with type \"Literal['long']\"\n-       \"tuple[str, Literal['short', 'long'], Unknown]\" is incompatible with \"tuple[Literal['entry'], Literal['short'], Literal['same']]\" (reportArgumentType)\n+       \"tuple[str, Literal['short', 'long'], Unknown]\" is incompatible with \"tuple[Literal['entry'], Literal['long'], Literal['other']]\" (reportArgumentType)\n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n-           \"Literal[True]\" is incompatible with type \"Literal[False]\" (reportReturnType)\n+           \"Literal[True]\" is incompatible with type \"Literal[False]\"\n+         Tuple entry 2 is incorrect type\n+     ... (reportReturnType)\n-           \"Literal[True]\" is incompatible with type \"Literal[False]\" (reportReturnType)\n+           \"Literal[True]\" is incompatible with type \"Literal[False]\"\n+         Tuple entry 2 is incorrect type\n+     ... (reportReturnType)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f05ac254a19ac29048a",
    "number": 7704,
    "body": "… from its parent class but doesn't provide a default value (where its parent does). This can result in a type violation if the parent's default value is not compatible with the child's (covariant) field type. This addresses #7702.",
    "head_branch": "issue7702",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added a check for the case where a frozen dataclass overrides a field from its parent class but doesn't provide a default value (where its parent does). This can result in a type violation if the parent's default value is not compatible with the child's (covariant) field type. This addresses #7702. (#7704)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f06ac254a19ac29048b",
    "number": 7701,
    "body": "…conform to honor return type of the `__new__` method. This addresses #7687.",
    "head_branch": "issue7687-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Changed behavior of conversion from class constructor to callable to conform to honor return type of the `__new__` method. This addresses #7687. (#7701)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f06ac254a19ac29048c",
    "number": 7700,
    "body": "…conform to honor return type of the `__new__` method. This addresses #7687.",
    "head_branch": "issue7687",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:773:25 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     One or more overloads of \"\" is not assignable\n+       Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> dict[str, _VT@dict]\"\n+         Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> dict[str, _VT@dict]\"\n+           Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, _VT@dict]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, _VT@dict]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:828:25 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     One or more overloads of \"\" is not assignable\n+       Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> dict[str, _VT@dict]\"\n+         Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> dict[str, _VT@dict]\"\n+           Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, _VT@dict]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, _VT@dict]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:833:25 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     One or more overloads of \"\" is not assignable\n+       Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> dict[str, _VT@dict]\"\n+         Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> dict[str, _VT@dict]\"\n+           Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, _VT@dict]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, _VT@dict]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:932:25 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     One or more overloads of \"\" is not assignable\n+       Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> dict[str, _VT@dict]\"\n+         Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> dict[str, _VT@dict]\"\n+           Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, _VT@dict]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, _VT@dict]\" (reportArgumentType)\n- 1970 errors, 17 warnings, 0 informations \n+ 1974 errors, 17 warnings, 0 informations \n\nmkosi (https://github.com/systemd/mkosi)\n+ /tmp/mypy_primer/projects/mkosi/mkosi/manifest.py\n+   /tmp/mypy_primer/projects/mkosi/mkosi/manifest.py:88:91 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, SourcePackageManifest]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, SourcePackageManifest]\" (reportArgumentType)\n- 9 errors, 0 warnings, 0 informations \n+ 10 errors, 0 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators.py:405:86 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, Decorator[ValidatorDecoratorInfo]]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, Decorator[ValidatorDecoratorInfo]]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators.py:406:97 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, Decorator[FieldValidatorDecoratorInfo]]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, Decorator[FieldValidatorDecoratorInfo]]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators.py:407:95 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, Decorator[RootValidatorDecoratorInfo]]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, Decorator[RootValidatorDecoratorInfo]]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators.py:408:99 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, Decorator[FieldSerializerDecoratorInfo]]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, Decorator[FieldSerializerDecoratorInfo]]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators.py:409:99 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, Decorator[ModelSerializerDecoratorInfo]]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, Decorator[ModelSerializerDecoratorInfo]]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators.py:410:97 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, Decorator[ModelValidatorDecoratorInfo]]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, Decorator[ModelValidatorDecoratorInfo]]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators.py:411:86 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[str, Decorator[ComputedFieldInfo]]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[str, Decorator[ComputedFieldInfo]]\" (reportArgumentType)\n- 77 errors, 44 warnings, 0 informations \n+ 84 errors, 44 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/metrics_namespaces.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/metrics_namespaces.py:22:14 - error: Cannot assign to attribute \"_metrics_data\" for class \"MetricNamespace*\"\n+     \"defaultdict[Unknown, dict[_KT@dict, _VT@dict]]\" is incompatible with \"Dict[str, Dict[int, Metric]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"dict[_KT@dict, _VT@dict]\" is not the same as \"Dict[int, Metric]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type\n+     \"defaultdict[Unknown, dict[_KT@dict, _VT@dict]]\" is incompatible with \"Dict[str, Dict[int, Metric]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"dict[_KT@dict, _VT@dict]\" is not the same as \"Dict[int, Metric]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/metrics_namespaces.py:31:18 - error: Cannot assign to attribute \"_metrics_data\" for class \"MetricNamespace*\"\n+     \"defaultdict[Unknown, dict[_KT@dict, _VT@dict]]\" is incompatible with \"Dict[str, Dict[int, Metric]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"dict[_KT@dict, _VT@dict]\" is not the same as \"Dict[int, Metric]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type\n+     \"defaultdict[Unknown, dict[_KT@dict, _VT@dict]]\" is incompatible with \"Dict[str, Dict[int, Metric]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"dict[_KT@dict, _VT@dict]\" is not the same as \"Dict[int, Metric]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportAttributeAccessIssue)\n- 10839 errors, 487 warnings, 0 informations \n+ 10841 errors, 487 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_raw/onion.py:41:81 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"dict[ScopeVarCache, ScopeVarCache]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"dict[ScopeVarCache, ScopeVarCache]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:18:73 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"Dict[str, ScopeGlobalVar[str]]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"Dict[str, ScopeGlobalVar[str]]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:19:59 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"Dict[str, str]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"Dict[str, str]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject.py:496:57 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"Dict[str, object]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"Dict[str, object]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/lazy/test_lazy.py:168:57 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"Dict[str, object]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"Dict[str, object]\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/lazy/test_lazy.py:208:57 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"Dict[str, object]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"Dict[str, object]\" (reportArgumentType)\n- 736 errors, 77 warnings, 0 informations \n+ 742 errors, 77 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py:155:58 - error: Argument of type \"type[dict[_KT@dict, _VT@dict]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     Type \"Overload[() -> dict[_KT@dict, _VT@dict], (**kwargs: _VT@dict) -> dict[str, _VT@dict], (map: SupportsKeysAndGetItem[_KT@dict, _VT@dict], /) -> dict[_KT@dict, _VT@dict], (map: SupportsKeysAndGetItem[str, _VT@dict], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[tuple[_KT@dict, _VT@dict]], /) -> dict[_KT@dict, _VT@dict], (iterable: Iterable[tuple[str, _VT@dict]], /, **kwargs: _VT@dict) -> dict[str, _VT@dict], (iterable: Iterable[list[str]], /) -> dict[str, str], (iterable: Iterable[list[bytes]], /) -> dict[bytes, bytes]] | ((*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict])\" is incompatible with type \"() -> _T@field\"\n+       Type \"(*args: Any, **kwargs: Any) -> dict[_KT@dict, _VT@dict]\" is incompatible with type \"() -> _T@field\"\n+         Function return type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"_T@field\"\n+           Type \"dict[_KT@dict, _VT@dict]\" is incompatible with type \"Dict[str, AnyEntry]\"\n+             \"dict[_KT@dict, _VT@dict]\" is incompatible with \"Dict[str, AnyEntry]\" (reportArgumentType)\n- 57 errors, 158 warnings, 0 informations \n+ 58 errors, 158 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:959:51 - error: Cannot assign to attribute \"_trigger_cache\" for class \"SpackSolverSetup*\"\n+     \"defaultdict[Unknown, dict[_KT@dict, _VT@dict]]\" is incompatible with \"ConditionSpecCache\"\n+       Type parameter \"_VT@dict\" is invariant, but \"dict[_KT@dict, _VT@dict]\" is not the same as \"Dict[ConditionSpecKey, ConditionIdFunctionPair]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:960:50 - error: Cannot assign to attribute \"_effect_cache\" for class \"SpackSolverSetup*\"\n+     \"defaultdict[Unknown, dict[_KT@dict, _VT@dict]]\" is incompatible with \"ConditionSpecCache\"\n+       Type parameter \"_VT@dict\" is invariant, but \"dict[_KT@dict, _VT@dict]\" is not the same as \"Dict[ConditionSpecKey, ConditionIdFunctionPair]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/xlc/package.py:56:17 - error: Argument of type \"Literal['cxx']\" cannot be assigned to parameter \"key\" of type \"_KT@dict\" in function \"__setitem__\"\n+     Type \"Literal['cxx']\" is incompatible with type \"_KT@dict\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/xlc/package.py:60:17 - error: Argument of type \"Literal['c']\" cannot be assigned to parameter \"key\" of type \"_KT@dict\" in function \"__setitem__\"\n+     Type \"Literal['c']\" is incompatible with type \"_KT@dict\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/xlf/package.py:51:17 - error: Argument of type \"Literal['fortran']\" cannot be assigned to parameter \"key\" of type \"_KT@dict\" in function \"__setitem__\"\n+     Type \"Literal['fortran']\" is incompatible with type \"_KT@dict\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/xlf/package.py:55:17 - error: Argument of type \"Literal['fortran']\" cannot be assigned to parameter \"key\" of type \"_KT@dict\" in function \"__setitem__\"\n\n... (truncated 80 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f07ac254a19ac29048d",
    "number": 7699,
    "body": "…conform to honor the annotated type of `self` in the `__init__` method. This addresses #7688.",
    "head_branch": "issue7688",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ntrio (https://github.com/python-trio/trio)\n-   /tmp/mypy_primer/projects/trio/src/trio/_subprocess.py:412:9 - error: Type of \"popen\" is partially unknown\n-     Type of \"popen\" is \"Popen[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/trio/src/trio/_subprocess.py:413:13 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"sync_fn\" in function \"to_thread_run_sync\"\n-     Argument type is \"partial[Popen[Unknown]]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/trio/src/trio/_subprocess.py:425:28 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"args\" in function \"_create\"\n-     Argument type is \"Popen[Unknown]\" (reportUnknownArgumentType)\n- 3608 errors, 51 warnings, 0 informations \n+ 3605 errors, 51 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed behavior of conversion from class constructor to callable to conform to honor the annotated type of `self` in the `__init__` method. This addresses #7688. (#7699)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f08ac254a19ac29048e",
    "number": 7698,
    "body": "…conform with the typing spec in the case where the `__new__` method of the class returns a value that indicates the `__init__` method should be ignored. This addresses #7686.",
    "head_branch": "issue7686",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Changed behavior of conversion from class constructor to callable to conform with the typing spec in the case where the `__new__` method of the class returns a value that indicates the `__init__` method should be ignored. This addresses #7686. (#7698)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f09ac254a19ac29048f",
    "number": 7697,
    "body": "…` is a TypeVar with no explicit upper bound (and therefore has an implicit upper bound of `object`). According to the newly-clarified typing spec, this should enforce the constructor signature of `object`.",
    "head_branch": "issue7695",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_expressions.py:404:16 - error: Expected no arguments to \"DDExpression\" constructor (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_exception/auto_instrument.py:86:16 - error: Expected no arguments to \"SpanExceptionProbe\" constructor (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/runtime/container.py:91:16 - error: Expected no arguments to \"CGroupInfo\" constructor (reportCallIssue)\n- 10836 errors, 487 warnings, 0 informations \n+ 10839 errors, 487 warnings, 0 informations \n\nbidict (https://github.com/jab/bidict)\n+   /tmp/mypy_primer/projects/bidict/tests/test_bidict.py:181:37 - error: Expected no arguments to \"BidirectionalMapping\" constructor (reportCallIssue)\n+   /tmp/mypy_primer/projects/bidict/tests/test_bidict.py:182:41 - error: Expected no arguments to \"BidirectionalMapping\" constructor (reportCallIssue)\n- 32 errors, 3 warnings, 0 informations \n+ 34 errors, 3 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1047:50 - error: Expected no arguments to \"object\" constructor (reportCallIssue)\n- 171 errors, 15 warnings, 183 informations \n+ 172 errors, 15 warnings, 183 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/testing/_fake_net.py:105:16 - error: Expected no arguments to \"UDPEndpoint\" constructor (reportCallIssue)\n- 3607 errors, 51 warnings, 0 informations \n+ 3608 errors, 51 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed the behavior when invoking constructor for `type[T]` where `T` is a TypeVar with no explicit upper bound (and therefore has an implicit upper bound of `object`). According to the newly-clarified typing spec, this should enforce the constructor signature of `object`. (#7697)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f0aac254a19ac290490",
    "number": 7696,
    "body": "…signment expression is used in a dictionary key within a dictionary expression or comprehension. This addresses #7694.",
    "head_branch": "issue7694",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that leads to a false negative when an unparenthesized assignment expression is used in a dictionary key within a dictionary expression or comprehension. This addresses #7694. (#7696)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f0bac254a19ac290491",
    "number": 7693,
    "body": "…form to the newly-updated typing spec. This addresses #7684 and #7685.",
    "head_branch": "issue7684",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:127:54 - error: Type of \"interface\" is partially unknown\n+     Type of \"interface\" is \"Unknown | object\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:127:65 - error: Cannot access attribute \"interface\" for class \"object\"\n+     Attribute \"interface\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:134:27 - error: Type of \"constraints\" is partially unknown\n+     Type of \"constraints\" is \"Unknown | Sequence[Constraint[Any]]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:134:27 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"constraints\" in function \"match\"\n+     Argument type is \"Unknown | Sequence[Constraint[Any]]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:134:38 - error: Cannot access attribute \"constraints\" for class \"object\"\n+     Attribute \"constraints\" is unknown (reportAttributeAccessIssue)\n- 731 errors, 77 warnings, 0 informations \n+ 736 errors, 77 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1468:88 - error: Argument of type \"type[<subclass of Enum and float>]* | type[<subclass of Enum and int>]* | type[<subclass of Enum and str>]*\" cannot be assigned to parameter \"enum\" of type \"(str) -> Enum\" in function \"__init__\"\n+     Type \"type[<subclass of Enum and float>]* | type[<subclass of Enum and int>]* | type[<subclass of Enum and str>]*\" is incompatible with type \"(str) -> Enum\"\n+       No overloaded function matches type \"(str) -> Enum\" (reportArgumentType)\n- 2406 errors, 6732 warnings, 0 informations \n+ 2407 errors, 6732 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Updated logic for converting a class constructor to a callable to conform to the newly-updated typing spec. This addresses #7684 and #7685. (#7693)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f0bac254a19ac290492",
    "number": 7692,
    "body": "…ramSpec type when there are multiple constraints provided.",
    "head_branch": "paramSpec1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:483:31 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1972:37 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/autotools.py:598:51 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/cmake.py:546:51 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/meson.py:197:51 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/filesystem.py:698:41 - error: Expected 1 positional argument (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/filesystem.py:715:51 - error: Expected 1 positional argument (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/web.py:397:36 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/web.py:415:44 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/amdfftw/package.py:253:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/ants/package.py:40:73 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/apcomp/package.py:61:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/ascent/package.py:330:67 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/ascent/package.py:345:66 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/atk/package.py:62:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/atlas/package.py:116:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/axom/package.py:631:45 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/axom/package.py:641:45 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/bazel/package.py:217:57 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/boost/package.py:649:38 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/clingo-bootstrap/package.py:115:48 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/conduit/package.py:265:68 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/conduit/package.py:274:67 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/cosmomc/package.py:176:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/darshan-runtime/package.py:158:35 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/dray/package.py:116:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/evtgen/package.py:97:48 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/eztrace/package.py:83:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/ferret/package.py:79:36 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/ferret/package.py:176:36 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/fftw/package.py:192:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/fortrilinos/package.py:110:54 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/fujitsu-fftw/package.py:112:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/gcc/package.py:927:47 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/gdk-pixbuf/package.py:95:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/geant4-data/package.py:175:40 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/glib/package.py:238:49 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/glog/package.py:45:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/gmake/package.py:79:48 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/gmap-gsnap/package.py:86:36 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/hdf5/package.py:675:36 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/hdf5/package.py:732:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/hdf5-blosc/package.py:118:36 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/hip/package.py:600:40 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/hip-examples/package.py:40:40 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/hsakmt-roct/package.py:84:36 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/jasper/package.py:95:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/kadath/package.py:76:48 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/kokkos-kernels-legacy/package.py:44:35 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/kokkos-kernels-legacy/package.py:56:35 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/kokkos-legacy/package.py:237:35 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/libbson/package.py:59:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/libcatalyst/package.py:65:35 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/libdrm/package.py:76:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/libgridxc/package.py:41:35 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/libxml2/package.py:121:40 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/libxml2/package.py:208:44 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/libxslt/package.py:60:44 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/llvm/package.py:1003:38 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/llvm-doe/package.py:578:38 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/magma/package.py:182:36 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/memaxes/package.py:26:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/migraphx/package.py:146:36 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/mongo-c-driver/package.py:106:41 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/mpifileutils/package.py:126:43 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/mptensor/package.py:77:74 - error: No parameter named \"create\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/mptensor/package.py:82:65 - error: No parameter named \"create\" (reportCallIssue)\n\n... (truncated 55 lines) ...\n\n```"
    ],
    "commit_messages": [
      "Fixed bug that results in incorrect type evaluation when solving a ParamSpec type when there are multiple constraints provided. (#7692)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f0cac254a19ac290493",
    "number": 7691,
    "body": "… in a type annotation for the \"self\" parameter within an \"__init__\" method. The typing spec now clarifies that this is illegal and should generate an error. This addresses #7683.",
    "head_branch": "issue7683",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/type_adapter.py:129:15 - error: Type annotation for \"self\" parameter of \"__init__\" method cannot contain class-scoped type varaiables (reportGeneralTypeIssues)\n- 76 errors, 44 warnings, 0 informations \n+ 77 errors, 44 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/testing/_raises_group.py:155:15 - error: Type annotation for \"self\" parameter of \"__init__\" method cannot contain class-scoped type varaiables (reportGeneralTypeIssues)\n- 3606 errors, 51 warnings, 0 informations \n+ 3607 errors, 51 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Added missing check for the errant use of class-scoped type variables in a type annotation for the \"self\" parameter within an \"__init__\" method. The typing spec now clarifies that this is illegal and should generate an error. This addresses #7683. (#7691)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f0dac254a19ac290494",
    "number": 7690,
    "body": "…when evaluating constructor call so pyright conforms to the latest typing spec. This addresses #7682.",
    "head_branch": "issue7682-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Modified handling of annotated `self` parameter in `__init__` method when evaluating constructor call so pyright conforms to the latest typing spec. This addresses #7682. (#7690)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f0eac254a19ac290495",
    "number": 7689,
    "body": null,
    "head_branch": "issue7682",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f0fac254a19ac290496",
    "number": 7681,
    "body": "… an abstract class is captured through a `type[T]`. This addresses #7680.",
    "head_branch": "issue7680",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/moves.py:56:16 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/removals.py:243:12 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/updating.py:66:16 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/appsec/test_processor.py:174:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/appsec/test_processor.py:200:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/appsec/test_processor.py:308:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/appsec/test_processor.py:330:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/ci_visibility/api/test_api_fake_runners.py:44:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/ci_visibility/api/test_api_fake_runners.py:63:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/ci_visibility/api/test_api_fake_runners.py:82:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/ci_visibility/api/test_api_fake_runners.py:101:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/ci_visibility/api/test_api_fake_runners.py:120:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/ci_visibility/api/test_api_fake_runners.py:139:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/ci_visibility/api/test_api_fake_runners.py:158:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/ci_visibility/api/test_api_fake_runners.py:177:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/ci_visibility/api/test_api_fake_runners.py:196:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:503:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:511:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:519:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:525:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec_snapshots.py:64:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec_snapshots.py:85:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec_snapshots.py:106:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec_snapshots.py:135:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec_snapshots.py:172:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:67:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:76:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:93:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:123:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:228:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:245:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:256:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:265:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:278:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:293:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:307:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:312:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:325:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/dramatiq/test_integration.py:20:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/dramatiq/test_integration.py:65:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/dramatiq/test_integration.py:75:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/dramatiq/test_integration.py:85:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/dramatiq/test_integration.py:97:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/dramatiq/test_integration.py:109:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/elasticsearch/test_async.py:63:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/elasticsearch/test_async.py:68:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/elasticsearch/test_async.py:73:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/elasticsearch/test_elasticsearch_multi.py:51:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/elasticsearch/test_elasticsearch_multi.py:56:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/fastapi/test_fastapi.py:357:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/fastapi/test_fastapi.py:584:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/fastapi/test_fastapi.py:590:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/fastapi/test_fastapi.py:601:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/fastapi/test_fastapi.py:624:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n\n... (truncated 108 lines) ...\n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:239:9 - warning: Type of \"func\" is partially unknown\n+     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:281:9 - warning: Type of \"func\" is partially unknown\n+     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:323:9 - warning: Type of \"func\" is partially unknown\n+     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:369:9 - warning: Type of \"func\" is partially unknown\n+     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataset.py:240:9 - warning: Type of \"func\" is partially unknown\n+     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataset.py:282:9 - warning: Type of \"func\" is partially unknown\n+     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataset.py:324:9 - warning: Type of \"func\" is partially unknown\n+     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataset.py:370:9 - warning: Type of \"func\" is partially unknown\n+     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n- 57 errors, 150 warnings, 0 informations \n+ 57 errors, 158 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_subprocess.py:413:13 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"sync_fn\" in function \"to_thread_run_sync\"\n+     Argument type is \"partial[Popen[Unknown]]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_tests/test_guest_mode.py:64:13 - error: Type of \"crash\" is partially unknown\n+     Type of \"crash\" is \"partial[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_tests/test_guest_mode.py:73:13 - error: Type of \"crash\" is partially unknown\n+     Type of \"crash\" is \"partial[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_scheduler_determinism.py:24:12 - error: Return type, \"tuple[Unknown, ...]\", is partially unknown (reportUnknownVariableType)\n- 3602 errors, 51 warnings, 0 informations \n+ 3606 errors, 51 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:164:1 - warning: Type of \"_MENU_TYPES\" is partially unknown\n+     Type of \"_MENU_TYPES\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1043:13 - warning: Type of \"results\" is partially unknown\n+     Type of \"results\" is \"filter[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1044:13 - warning: Type of \"other_ids_iter\" is partially unknown\n+     Type of \"other_ids_iter\" is \"map[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1045:53 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"iterable\" in function \"__new__\"\n+     Argument type is \"map[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:83:35 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"iterable\" in function \"__new__\"\n+     Argument type is \"map[Unknown | None]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:356:1 - warning: Type of \"SUB_COMMAND_OPTION_TYPES\" is partially unknown\n+     Type of \"SUB_COMMAND_OPTION_TYPES\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/cache.py:47:1 - warning: Type of \"_THREAD_CHANNEL_TYPES\" is partially unknown\n+     Type of \"_THREAD_CHANNEL_TYPES\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py:325:1 - warning: Type of \"_VALID_TYPES\" is partially unknown\n+     Type of \"_VALID_TYPES\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py:56:1 - warning: Type of \"_VALID_TYPES\" is partially unknown\n+     Type of \"_VALID_TYPES\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py:68:1 - warning: Type of \"_SnowflakeOptions\" is partially unknown\n+     Type of \"_SnowflakeOptions\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:481:21 - warning: Type of \"roles\" is partially unknown\n+     Type of \"roles\" is \"filter[Unknown]\" (reportUnknownVariableType)\n- 2406 errors, 6721 warnings, 0 informations \n+ 2406 errors, 6732 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py:210:59 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"iterable\" in function \"__new__\"\n+     Argument type is \"enumerate[Unknown]\" (reportUnknownArgumentType)\n- 521 errors, 38 warnings, 7 informations \n+ 522 errors, 38 warnings, 7 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that results in a spurious `reportAbstractUsage` error when an abstract class is captured through a `type[T]`. This addresses #7680. (#7681)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f10ac254a19ac290497",
    "number": 7671,
    "body": "…pplying a `@property` decorator to a method that has already had a decorator applied to it. This addresses #7667.",
    "head_branch": "issue7667",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed recent regression that results in a false positive error when applying a `@property` decorator to a method that has already had a decorator applied to it. This addresses #7667. (#7671)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f11ac254a19ac290498",
    "number": 7670,
    "body": "…rget TypedDicts to also support constrained TypeVars that use TypedDicts as value constraints. This addresses #7666.",
    "head_branch": "issue7666",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Extended type narrowing logic for `in` and `not in` operators that target TypedDicts to also support constrained TypeVars that use TypedDicts as value constraints. This addresses #7666. (#7670)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f11ac254a19ac290499",
    "number": 7669,
    "body": "…eads to a type violation. When assigning to a local variable, the target expression is not \"narrowed\" to include the assigned type in this case. The new behavior applies this same behavior when assigning to instance or class variables. This addresses #7664.",
    "head_branch": "issue7664",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast_packages/packages/pkg_python_dateutil.py:26:30 - error: Cannot access attribute \"date\" for class \"str\"\n+     Attribute \"date\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast_packages/packages/pkg_python_dateutil.py:27:34 - error: Argument of type \"str\" cannot be assigned to parameter \"dtstart\" of type \"date | None\" in function \"__init__\"\n+     Type \"str\" is incompatible with type \"date | None\"\n+       \"str\" is incompatible with \"date\"\n+       \"str\" is incompatible with \"None\" (reportArgumentType)\n- 10606 errors, 487 warnings, 0 informations \n+ 10608 errors, 487 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/package_class.py:244:57 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/foam-extend/package.py:295:31 - error: Cannot access attribute \"update\" for class \"str\"\n+     Attribute \"update\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/foam-extend/package.py:299:13 - error: Argument of type \"dict[str, int | Unknown]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n+     \"dict[str, int | Unknown]\" is incompatible with \"str\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/foam-extend/package.py:309:13 - error: Argument of type \"dict[str, int | Unknown]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n+     \"dict[str, int | Unknown]\" is incompatible with \"str\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/foam-extend/package.py:319:13 - error: Argument of type \"dict[str, int | Unknown]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n+     \"dict[str, int | Unknown]\" is incompatible with \"str\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/foam-extend/package.py:329:13 - error: Argument of type \"dict[str, int | Unknown]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n+     \"dict[str, int | Unknown]\" is incompatible with \"str\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/foam-extend/package.py:338:13 - error: Argument of type \"dict[str, int | Unknown]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n+     \"dict[str, int | Unknown]\" is incompatible with \"str\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/foam-extend/package.py:343:13 - error: Argument of type \"dict[str, int | Unknown]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n+     \"dict[str, int | Unknown]\" is incompatible with \"str\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/openfoam/package.py:724:13 - error: Argument of type \"list[tuple[Literal['ADIOS2_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/openfoam/package.py:724:13 - error: Argument of type \"list[tuple[Literal['ADIOS2_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]]\" cannot be assigned to parameter \"value\" of type \"list[tuple[Literal['BOOST_ARCH_PATH'], Unknown] | tuple[Literal['CGAL_ARCH_PATH'], Unknown] | tuple[Literal['MPFR_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]] | list[tuple[Literal['FFTW_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]] | list[tuple[Literal['MPI_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]] | dict[Any, Any]\" in function \"__setitem__\"\n-     Type \"list[tuple[Literal['ADIOS2_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]]\" is incompatible with type \"list[tuple[Literal['BOOST_ARCH_PATH'], Unknown] | tuple[Literal['CGAL_ARCH_PATH'], Unknown] | tuple[Literal['MPFR_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]] | list[tuple[Literal['FFTW_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]] | list[tuple[Literal['MPI_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]] | dict[Any, Any]\"\n-       \"list[tuple[Literal['ADIOS2_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]]\" is incompatible with \"list[tuple[Literal['BOOST_ARCH_PATH'], Unknown] | tuple[Literal['CGAL_ARCH_PATH'], Unknown] | tuple[Literal['MPFR_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]]\"\n-         Type parameter \"_T@list\" is invariant, but \"tuple[Literal['ADIOS2_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]\" is not the same as \"tuple[Literal['BOOST_ARCH_PATH'], Unknown] | tuple[Literal['CGAL_ARCH_PATH'], Unknown] | tuple[Literal['MPFR_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]\"\n-         Consider switching from \"list\" to \"Sequence\" which is covariant\n-       \"list[tuple[Literal['ADIOS2_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]]\" is incompatible with \"list[tuple[Literal['FFTW_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]]\"\n+     \"list[tuple[Literal['ADIOS2_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]]\" is incompatible with \"str\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/openfoam/package.py:731:13 - error: Argument of type \"dict[str, Unknown | str]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n+     \"dict[str, Unknown | str]\" is incompatible with \"str\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/openfoam/package.py:738:13 - error: Argument of type \"dict[str, Unknown]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n+     \"dict[str, Unknown]\" is incompatible with \"str\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/openfoam/package.py:741:13 - error: Argument of type \"dict[str, Unknown]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n+     \"dict[str, Unknown]\" is incompatible with \"str\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/openfoam/package.py:746:13 - error: Argument of type \"list[tuple[Literal['ParaView_DIR'], Unknown] | tuple[Literal['ParaView_INCLUDE_DIR'], str] | tuple[Literal['PV_PLUGIN_PATH'], str] | tuple[Literal['PATH'], LiteralString]]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n-         Type parameter \"_T@list\" is invariant, but \"tuple[Literal['ADIOS2_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]\" is not the same as \"tuple[Literal['FFTW_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]\"\n-         Consider switching from \"list\" to \"Sequence\" which is covariant\n-       \"list[tuple[Literal['ADIOS2_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]]\" is incompatible with \"list[tuple[Literal['MPI_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]]\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/openfoam/package.py:746:13 - error: Argument of type \"list[tuple[Literal['ParaView_DIR'], Unknown] | tuple[Literal['ParaView_INCLUDE_DIR'], str] | tuple[Literal['PV_PLUGIN_PATH'], str] | tuple[Literal['PATH'], LiteralString]]\" cannot be assigned to parameter \"value\" of type \"list[tuple[Literal['BOOST_ARCH_PATH'], Unknown] | tuple[Literal['CGAL_ARCH_PATH'], Unknown] | tuple[Literal['MPFR_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]] | list[tuple[Literal['FFTW_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]] | list[tuple[Literal['MPI_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]] | dict[Any, Any]\" in function \"__setitem__\"\n-     Type \"list[tuple[Literal['ParaView_DIR'], Unknown] | tuple[Literal['ParaView_INCLUDE_DIR'], str] | tuple[Literal['PV_PLUGIN_PATH'], str] | tuple[Literal['PATH'], LiteralString]]\" is incompatible with type \"list[tuple[Literal['BOOST_ARCH_PATH'], Unknown] | tuple[Literal['CGAL_ARCH_PATH'], Unknown] | tuple[Literal['MPFR_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]] | list[tuple[Literal['FFTW_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]] | list[tuple[Literal['MPI_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString] | tuple[Literal['PATH'], LiteralString]] | dict[Any, Any]\"\n-       \"list[tuple[Literal['ParaView_DIR'], Unknown] | tuple[Literal['ParaView_INCLUDE_DIR'], str] | tuple[Literal['PV_PLUGIN_PATH'], str] | tuple[Literal['PATH'], LiteralString]]\" is incompatible with \"list[tuple[Literal['BOOST_ARCH_PATH'], Unknown] | tuple[Literal['CGAL_ARCH_PATH'], Unknown] | tuple[Literal['MPFR_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]]\"\n-         Type parameter \"_T@list\" is invariant, but \"tuple[Literal['ParaView_DIR'], Unknown] | tuple[Literal['ParaView_INCLUDE_DIR'], str] | tuple[Literal['PV_PLUGIN_PATH'], str] | tuple[Literal['PATH'], LiteralString]\" is not the same as \"tuple[Literal['BOOST_ARCH_PATH'], Unknown] | tuple[Literal['CGAL_ARCH_PATH'], Unknown] | tuple[Literal['MPFR_ARCH_PATH'], Unknown] | tuple[Literal['LD_LIBRARY_PATH'], LiteralString]\"\n-         Consider switching from \"list\" to \"Sequence\" which is covariant\n\n... (truncated 28 lines) ...\n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_run.py:1419:12 - error: Condition will always evaluate to True since the types \"CancelStatus\" and \"None\" have no overlap (reportUnnecessaryComparison)\n- 3601 errors, 51 warnings, 0 informations \n+ 3602 errors, 51 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that leads to inconsistent behaviors when an assignment leads to a type violation. When assigning to a local variable, the target expression is not \"narrowed\" to include the assigned type in this case. The new behavior applies this same behavior when assigning to instance or class variables. This addresses #7664. (#7669)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f12ac254a19ac29049a",
    "number": 7663,
    "body": "- Localization update\r\n- Pyright changes in support of \"implement abstract class\" code action -- https://github.com/microsoft/pylance-release/issues/5362",
    "head_branch": "pull-pylance-2024.4.101",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push pylance changes to pyright (#7663)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\nCo-authored-by: Stella Huang <stellahuang@microsoft.com>\r\nCo-authored-by: Kacie Kang <jikang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f13ac254a19ac29049b",
    "number": 7657,
    "body": "…uple) to support `<`, `<=`, `>` and `>=` comparisons as well. This addresses #7655.",
    "head_branch": "issue7655",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Expanded support for `len(x) == L` type guard pattern (where x is a tuple) to support `<`, `<=`, `>` and `>=` comparisons as well. This addresses #7655. (#7657)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f14ac254a19ac29049c",
    "number": 7654,
    "body": "fixes https://github.com/microsoft/pylance-release/issues/5740\r\n\r\nIt broke due to this change https://github.com/microsoft/pyrx/pull/4878\r\n\r\nDuring this update, we modified how Uri handles case sensitivity, identifying a specific problem where an `EmptyUri` was defaulting to case sensitivity: false. \r\n\r\nHowever, `EmptyUri` implemented functions like resolvePaths/combinePaths that ended up using incorrect case sensitivity.  To address this, we changed how `EmptyUri` behaves and changed the default workspace not to use `EmptyUri`. However, it appears that we missed its usage in this spot.",
    "head_branch": "defaultWorkspaceExtraPath",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't use Uri.Empty for default workspace. (#7654)\n\n* Don't use Uri.Empty for default workspace.\r\n\r\n* addressed PR feedback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f15ac254a19ac29049d",
    "number": 7652,
    "body": "In `importResolver`, it already checks if a `py.typed` file exists before calling `getPyTypedInfo`, using the file system cache, so there's no need to recheck it inside `getPyTypedInfo`. This minor improvement results in a 500~1000ms speed boost for certain cases where the `py.typed` file is checked across many folders, such as in `indexer`. \r\n\r\nIt would be beneficial to extend the cache to the file system itself so all code could benefit from it, but for now, the improvement is specific to the `importResolver`, where the cache exists.\r\n\r\n![image](https://github.com/microsoft/pyright/assets/1333179/e5dda039-1767-499f-9e1c-685daf125aea)\r\n\r\nvs\r\n\r\n![image](https://github.com/microsoft/pyright/assets/1333179/4cdfc7fb-142d-4d1d-985c-aa744303e020)\r\n",
    "head_branch": "pyTypedPerf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Skip unnecessary py.typed file exist checks. (#7652)\n\n* skip unnecessary py.typed file exist checks.\r\n\r\n* passed wrong uri\r\n\r\n* PR feedbacks\r\n\r\n* more comments\r\n\r\n* PR feedbacks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f16ac254a19ac29049e",
    "number": 7643,
    "body": "While handling [a recent Pylance issue](https://github.com/microsoft/pylance-release/issues/5732), I realized that I buried the lede when writing the editable install docs. The first paragraph was all technical background info. The second paragraph told you how to fix the issue that likely brought you to the docs.\r\n\r\nI've reorganized and simplified the text. I also added the word `pip` to the `setuptools` section. I'm hoping that this new text will be more helpful to typical users.",
    "head_branch": "editableInstallDocs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplify editable install docs (#7643)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f17ac254a19ac29049f",
    "number": 7641,
    "body": "…nd f-strings are not allowed according to the typing spec. This addresses #7640.",
    "head_branch": "issue7640",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improved error handling for quoted annotations. Bytes, raw strings, and f-strings are not allowed according to the typing spec. This addresses #7640. (#7641)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f18ac254a19ac2904a0",
    "number": 7638,
    "body": "…ased on whether the assignment occurs within the same statement that includes the (declared) type annotation for the variable and whether the type annotation is provided as a type comment. This addresses #7537.",
    "head_branch": "issue7537",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug that results in inconsistent type narrowing on assignment based on whether the assignment occurs within the same statement that includes the (declared) type annotation for the variable and whether the type annotation is provided as a type comment. This addresses #7537. (#7638)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f18ac254a19ac2904a1",
    "number": 7634,
    "body": "…returns a Callable type that is specialized to include a live (in-scope) type variable. This addresses #7542.",
    "head_branch": "issue7542",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed a bug that results in a false negative when a generic function returns a Callable type that is specialized to include a live (in-scope) type variable. This addresses #7542. (#7634)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f19ac254a19ac2904a2",
    "number": 7630,
    "body": "…generic function returns a callable, and the function is called with a higher-order generic function as an argument. This addresses #7386.",
    "head_branch": "issue7386",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug that results in incorrect type evaluation in cases where a generic function returns a callable, and the function is called with a higher-order generic function as an argument. This addresses #7386. (#7630)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f1aac254a19ac2904a3",
    "number": 7629,
    "body": "…umstances when a TypeVar or TypeVarTuple is being solved with literal values in both an invariant and non-invariant context. This addresses #7562.",
    "head_branch": "issue7562-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed a bug that results in a false positive error under certain circumstances when a TypeVar or TypeVarTuple is being solved with literal values in both an invariant and non-invariant context. This addresses #7562. (#7629)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f1bac254a19ac2904a4",
    "number": 7628,
    "body": null,
    "head_branch": "issue7562",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f1cac254a19ac2904a5",
    "number": 7625,
    "body": "…pendency\" error for fields within a dataclass. This addresses #7516.",
    "head_branch": "issue7516",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug that results in an intermittent false positive \"circular dependency\" error for fields within a dataclass. This addresses #7516. (#7625)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f1dac254a19ac2904a6",
    "number": 7623,
    "body": "…nger cache the file (text) contents unless the file is open in the editor. This should reduce memory usage significantly for large projects.",
    "head_branch": "fileContentsNoCache",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f1dac254a19ac2904a7",
    "number": 7621,
    "body": "…tatement for references to the subexpression after the completion of the match statement. This addresses #7620.",
    "head_branch": "issue7620",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added support for narrowing of subject subexpression within a match statement for references to the subexpression after the completion of the match statement. This addresses #7620. (#7621)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f1eac254a19ac2904a8",
    "number": 7616,
    "body": "… pattern in a `match` statement includes a `*` element and the subject includes a tuple with an element with indeterminate length. This addresses #7613.",
    "head_branch": "issue7613",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed a bug that results in incorrect type evaluation when a sequence pattern in a `match` statement includes a `*` element and the subject includes a tuple with an element with indeterminate length. This addresses #7613. (#7616)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f1fac254a19ac2904a9",
    "number": 7610,
    "body": "- Add `conda-meta` to `envMarkers` -- https://github.com/microsoft/pylance-release/issues/5191",
    "head_branch": "pull-pylance-2024.4.100-a",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pull Pylance with Pyright 1.1.357 (#7610)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f20ac254a19ac2904aa",
    "number": 7608,
    "body": "We're seeing this in our telemetry data as this crash here:\r\n\r\nError: Debug Failure. False expression.</br>at assert <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/program.ts#L1498'>pyright-internal/src/analyzer/program.ts:1498:8</a></br>at _addToSourceFileListAndMap <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/program.ts#L362'>pyright-internal/src/analyzer/program.ts:362:13</a></br>at addTrackedFile <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/program.ts#L1802'>pyright-internal/src/analyzer/program.ts:1802:29</a></br>at callback <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/common/timing.ts#L40'>pyright-internal/src/common/timing.ts:40:19</a></br>at importLookup <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/typeEvaluator.ts#L2983'>pyright-internal/src/analyzer/typeEvaluator.ts:2983:29</a></br>at getTypeOfModule <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/typeEvaluator.ts#L2978'>pyright-internal/src/analyzer/typeEvaluator.ts:2978:15</a></br>at getTypeshedType <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/typeEvaluator.ts#L957'>pyright-internal/src/analyzer/typeEvaluator.ts:957:28</a></br>at initializedBasicTypes <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/typeEvaluator.ts#L17279'>pyright-internal/src/analyzer/typeEvaluator.ts:17279:8</a></br>at callback <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/common/timing.ts#L40'>pyright-internal/src/common/timing.ts:40:19</a></br>at getTypeOfFunction <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/checker.ts#L407'>pyright-internal/src/analyzer/checker.ts:407:51</a></br>at visitFunction <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/parseTreeWalker.ts#L442'>pyright-internal/src/analyzer/parseTreeWalker.ts:442:28</a></br>at visit <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/parseTreeWalker.ts#L933'>pyright-internal/src/analyzer/parseTreeWalker.ts:933:20</a></br>at visitNode <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/parseTreeWalker.ts#L915'>pyright-internal/src/analyzer/parseTreeWalker.ts:915:36</a></br>at walk <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/checker.ts#L280'>pyright-internal/src/analyzer/checker.ts:280:18</a></br>at walk <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/checker.ts#L2784'>pyright-internal/src/analyzer/checker.ts:2784:17</a></br>at _walkStatementsAndReportUnreachable <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/checker.ts#L261'>pyright-internal/src/analyzer/checker.ts:261:13</a></br>    at callback <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/common/timing.ts#L40'>pyright-internal/src/common/timing.ts:40:19</a></br>at callback <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/common/logTracker.ts#L61'>pyright-internal/src/common/logTracker.ts:61:19</a></br>at log <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/sourceFile.ts#L823'>pyright-internal/src/analyzer/sourceFile.ts:823:32</a></br>at callback <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/common/logTracker.ts#L61'>pyright-internal/src/common/logTracker.ts:61:19</a></br>at log <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/program.ts#L1874'>pyright-internal/src/analyzer/program.ts:1874:32</a></br>at _checkTypes <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/program.ts#L1998'>pyright-internal/src/analyzer/program.ts:1998:25</a></br>at callback <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/common/logTracker.ts#L61'>pyright-internal/src/common/logTracker.ts:61:19</a></br>at log <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/program.ts#L1874'>pyright-internal/src/analyzer/program.ts:1874:32</a></br>at callback <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/typeEvaluator.ts#L626'>pyright-internal/src/analyzer/typeEvaluator.ts:626:19</a></br>at callback <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/common/timing.ts#L40'>pyright-internal/src/common/timing.ts:40:19</a></br>at runWithCancellationToken <a href='https://github.com/microsoft/pyrx/blob/ca5e67fa6216de93b79bafb18ff86985899d66e6/packages/pyright/packages/pyright-internal/src/analyzer/program.ts#L1027'>pyright-internal/src/analyzer/program.ts:1027:40</a></br>\r\n\r\nWhich I believe is caused by the invalid check for empty.",
    "head_branch": "rchiodo-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix crash when imports are not resolved (#7608)\n\n* Fix crash when imports are not resolved\r\n\r\n* Fix other usages of resolvedPath"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f21ac254a19ac2904ab",
    "number": 7605,
    "body": "VS code uses pointer compression which seems to share the heap with all the worker threads. This means the `getHeapStatistics` function is not returning the correct amount of memory in use for a thread.\r\n\r\nThis change shares this number with the other threads so they can take total usage into account when deciding whether or not to clean up the heap.",
    "head_branch": "rchiodo/sharedHeapStats",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Share heap usage numbers to support cache cleanup in VS code (#7605)\n\n* Pass shared array buffer around for shared heap stats\r\n\r\n* Put back skip logic for background analysis\r\n\r\n* Review feedback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f22ac254a19ac2904ac",
    "number": 7602,
    "body": "@rchiodo, this is an alternate approach to optimizing the tokenizer data structures. With this change, the tokens for a file are not cached in memory unless the file is currently open in the editor. They are recomputed on demand if/when needed. This should theoretically reduce the memory usage more than your proposed change. I think this change is less complex than yours — and therefore easier to maintain.\r\n\r\nCould you please run your memory benchmarks on this branch to confirm the memory savings and quantify the savings relative to your proposed change? We can then use this data to inform which change is preferable.",
    "head_branch": "reduceTokenOverhead",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Refactored tokenizer and parser output to help reduce the amount of memory needed. (#7602)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f23ac254a19ac2904ad",
    "number": 7601,
    "body": "This bug here led us to do a bunch of analysis of the memory in use by Pylance/Pyright:\r\n\r\nhttps://github.com/microsoft/pylance-release/issues/5440\r\n\r\nWhile analyzing the memory in use, it seemed like we were taking up a lot of memory with each token. Here's an example from opening the aws_cdk/__init__.py file\r\n\r\n![image](https://github.com/microsoft/pyright/assets/19672699/c842a222-900a-4f27-a02a-4f94f48333c7)\r\n\r\nThat's one of the larger tokens but most of them are around that size. 40 bytes for the class of the token itself, and 116 bytes if you include all the data it was storing. \r\n\r\nThat seems like an awful lot of memory to hold onto a token.\r\n\r\n## The Change \r\n\r\nThis change implements a compressed token storage that uses a single Int32Array to store all of the token data and one more to store the indices into the data array for each token.\r\n\r\nThat makes the data for a single object take only the storage needed for its data. So for a default token this would be:\r\n\r\n- 4 Bytes for type and comments length (comments length is limited to 2 Bytes or 32k possible comments hanging onto a token)\r\n- 4 Bytes for start position (4GB is the limit now for the size of files we can open, we'd crash long before this anyway)\r\n- 4 Bytes for length\r\n- 4 Bytes for the index\r\n\r\nGiven that a simple token before was at a minimum of 28 bytes, we save at least 12 bytes per token. \r\n\r\nHere's a grab of having both methods in place at the same time.\r\n\r\n![image](https://github.com/microsoft/pyright/assets/19672699/fc72f29a-3cb3-4643-93d6-63c0ac550366)\r\n\r\nThe red arrow is pointing to the total size using the old class based method.\r\n\r\nThe green arrow is pointing to the total size using the new Int32Array method\r\n\r\nThat was a degenerate case where we'd get a savings of 60%, but other files in the same workspace have at least a 30% improvement:\r\n\r\n(Improvement in Builtins)\r\n![image](https://github.com/microsoft/pyright/assets/19672699/63daf82c-f7ae-4194-be25-3a5d1c619274)\r\n\r\n## Perf differences\r\n\r\nSwitching things to this method isn't free though. Creating tokens from the array is slow. At least slower than just having the token objects already in memory. \r\n\r\nThat's why we implemented a two stage approach. Using the original Token object approach while parsing and binding, and then switch to the Int32Array method for storage and later lookup.\r\n\r\nCreation of the array does add some overhead too. In a bunch of tests, it added about 10-15% overhead time to parsing.\r\n\r\nHere's the output from a number of runs:\r\n\r\n\r\n[normal.txt](https://github.com/microsoft/pyright/files/14829209/normal.txt)\r\n\r\n[compressed.txt](https://github.com/microsoft/pyright/files/14829210/compressed.txt)\r\n\r\nI also did a pprof comparison and the offending difference was all in the compress method.\r\n",
    "head_branch": "rchiodo/tokens_as_array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f23ac254a19ac2904ae",
    "number": 7599,
    "body": "…ypeVarTuple is used in a function defined with PEP-695 syntax. This addresses #7588.",
    "head_branch": "issue7588",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed a bug that results in a false positive error when an unpacked TypeVarTuple is used in a function defined with PEP-695 syntax. This addresses #7588. (#7599)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f24ac254a19ac2904af",
    "number": 7598,
    "body": "…. This addresses #7586.",
    "head_branch": "issue7586-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed inconsistent handling of literal values in a list comprehension. This addresses #7586. (#7598)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f25ac254a19ac2904b0",
    "number": 7597,
    "body": "…. This addresses #7586.",
    "head_branch": "issue7586",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f26ac254a19ac2904b1",
    "number": 7592,
    "body": "…d values but also `None`. This addresses #7590.",
    "head_branch": "issue7590-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Enhanced discriminated class support to include not only literal field values but also `None`. This addresses #7590. (#7592)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f27ac254a19ac2904b2",
    "number": 7585,
    "body": "Test proposal to create a union of callables for a constructor conversion.",
    "head_branch": "constructorUnion",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f28ac254a19ac2904b3",
    "number": 7582,
    "body": "…expansion operator that acts on a non-closed TypedDict. This addresses #7577.",
    "head_branch": "issue7577-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed a type hole when a dictionary expression includes a dictionary expansion operator that acts on a non-closed TypedDict. This addresses #7577. (#7582)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f29ac254a19ac2904b4",
    "number": 7581,
    "body": "…expansion operator that acts on a non-closed TypedDict. This addresses #7577.",
    "head_branch": "issue7577",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f29ac254a19ac2904b5",
    "number": 7580,
    "body": "…rive from `enum.Flag`. In this case, we can't use enum expansion to a union of literals. This addresses #7576.",
    "head_branch": "issue7576",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed a bug that results in incorrect type narrowing of enums that derive from `enum.Flag`. In this case, we can't use enum expansion to a union of literals. This addresses #7576. (#7580)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f2aac254a19ac2904b6",
    "number": 7573,
    "body": "…_` method cannot be bound without a type violation. This bug was found when writing a chapter on \"constructors\" for the typing spec.",
    "head_branch": "Constructor1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug that results in false negative when a `__new__` or `__init__` method cannot be bound without a type violation. This bug was found when writing a chapter on \"constructors\" for the typing spec. (#7573)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f2bac254a19ac2904b7",
    "number": 7566,
    "body": "- Clarifying comment about when  `_bindFile` is called in `_checkTypes`",
    "head_branch": "pull-pylance-with-pyright-1.1.356-8444976018",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.356-8444976018 (#7566)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\nCo-authored-by: Stella Huang <stellahuang@microsoft.com>\r\nCo-authored-by: Kacie Kang <jikang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f2cac254a19ac2904b8",
    "number": 7565,
    "body": "I think that using a list for the various configuration options makes the file significantly easier to read",
    "head_branch": "improve_configuration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use a list for the configuration options (#7565)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f2dac254a19ac2904b9",
    "number": 7558,
    "body": "Rollup of the following changes:\r\n\r\nTweaks around Uri. https://github.com/microsoft/pyrx/pull/4878\r\nDebounce heap stats. https://github.com/microsoft/pyrx/pull/4883\r\nFix timing dependent problem in web https://github.com/microsoft/pyrx/pull/4860\r\n\r\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>",
    "head_branch": "pull-pylance-2024325",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "push pylance to pyright (#7558)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f2eac254a19ac2904ba",
    "number": 7554,
    "body": "…Var used within a method has a default that refers to another class-scoped TypeVar. This addresses #7553.",
    "head_branch": "issue7553",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed a bug that results in a false positive when a class-scoped TypeVar used within a method has a default that refers to another class-scoped TypeVar. This addresses #7553. (#7554)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f2fac254a19ac2904bb",
    "number": 7552,
    "body": "…all-through) case when a runtime-checkable protocol class is used as a class pattern with arguments within a match statement. This addresses #7550.",
    "head_branch": "issue7550",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug that results in incorrect type narrowing in the negative (fall-through) case when a runtime-checkable protocol class is used as a class pattern with arguments within a match statement. This addresses #7550. (#7552)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f30ac254a19ac2904bc",
    "number": 7549,
    "body": null,
    "head_branch": "private-import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f30ac254a19ac2904bd",
    "number": 7541,
    "body": "Hexadecimal is the canonical representation for Unicode character codes, so using hex here improves readability/searchability.\r\n\r\nI also added comments in the surrogate tables that show the equivalent UCS character code(s) for each surrogate pair.\r\n\r\nNow it's easy to see that the missing character from https://github.com/microsoft/pylance-release/issues/5656 (𣎴 == 0x233B4) is included in `unicodeLoSurrogate` without needing to translate decimal to hex and then UTF-16 to UCS.\r\n\r\n```typescript\r\nexport const unicodeLoSurrogate: UnicodeSurrogateRangeTable = {\r\n    ...\r\n    0xd84c: [\r\n        [0xdc00, 0xdfff], // 0x23000..0x233FF\r\n    ],\r\n```",
    "head_branch": "hexUnicodeTables",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use hex char codes and show code points for surrogate pairs (#7541)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f31ac254a19ac2904be",
    "number": 7539,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/5656\r\n\r\nThe user's specific complaint was that CJK Ideograph characters were not recognized by the tokenizer as Python identifier chars despite being part of Unicode's `Lo` (other letters) category. The reason was that the `unicodeLoSurrogate` table only contained the endpoints of the CJK ideograph ranges. See the exerpt below from our current `unicodeLoSurrogate` table which, for example, indicates that codes `55360 56320` (U+20000) and `55401 57053` (U+2A6DD) are in the `Lo` category, but in fact all of the characters between those two codes are also `Lo` and are therefore also valid identifier characters.\r\n\r\n```typescript\r\nexport const unicodeLoSurrogate: UnicodeSurrogateRangeTable = {\r\n    ...\r\n    55360: [56320],\r\n    55401: [57053, 57088],\r\n    55405: [57140, 57152],\r\n    55406: [56349, 56352],\r\n    55411: [56993, 57008],\r\n    55418: [57312],\r\n```\r\n\r\nIt's likely that this mistake happened because the CJK Ideographs are listed in the unicode metadata files using [an old range representation](https://www.unicode.org/reports/tr44/#Code_Point_Ranges) that is still supported for backwards compatibility. In this legacy approach, rather than declaring a range as `AAAA..BBBB`, the first and last characters of a range are listed on separate lines which makes them look like individual characters, but the presence of the \"First\" and \"Last\" keywords within the angle brackets indicates that they are actually the endpoints of a character range:\r\n\r\n```text\r\n20000;<CJK Ideograph Extension B, First>;Lo;0;L;;;;;N;;;;;\r\n2A6DF;<CJK Ideograph Extension B, Last>;Lo;0;L;;;;;N;;;;;\r\n2A700;<CJK Ideograph Extension C, First>;Lo;0;L;;;;;N;;;;;\r\n2B739;<CJK Ideograph Extension C, Last>;Lo;0;L;;;;;N;;;;;\r\n2B740;<CJK Ideograph Extension D, First>;Lo;0;L;;;;;N;;;;;\r\n2B81D;<CJK Ideograph Extension D, Last>;Lo;0;L;;;;;N;;;;;\r\n2B820;<CJK Ideograph Extension E, First>;Lo;0;L;;;;;N;;;;;\r\n2CEA1;<CJK Ideograph Extension E, Last>;Lo;0;L;;;;;N;;;;;\r\n2CEB0;<CJK Ideograph Extension F, First>;Lo;0;L;;;;;N;;;;;\r\n2EBE0;<CJK Ideograph Extension F, Last>;Lo;0;L;;;;;N;;;;;\r\n2EBF0;<CJK Ideograph Extension I, First>;Lo;0;L;;;;;N;;;;;\r\n2EE5D;<CJK Ideograph Extension I, Last>;Lo;0;L;;;;;N;;;;;\r\n```\r\n\r\nI wrote a Python script that transforms the official Unicode character database into the `unicode.ts` format. By default it uses Unicode 15.1 which is the version that CPython is currently using. This fixed the CJK Ideograph issue and also a number of other inconsistencies between our tables and Unicode 15.1.\r\n\r\nFYI, I found https://ucsx.org/convert-form very useful for translating between UCS character codes and their UTF-16 equivalents.",
    "head_branch": "pylance5656",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Update Unicode range tables to match Unicode 15.1 (#7539)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f32ac254a19ac2904bf",
    "number": 7528,
    "body": "…ertain inference cases. This addresses #7527.",
    "head_branch": "issue7527",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/hdf-eos2/package.py:60:29 - error: Argument of type \"str | bool\" cannot be assigned to parameter \"sha256\" of type \"str | None\" in function \"version\" (reportArgumentType)\n- 11209 errors, 74 warnings, 0 informations \n+ 11210 errors, 74 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py:996:16 - warning: Return type, \"tuple[list[Unknown], Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py:996:16 - warning: Return type, \"tuple[list[_T@_to_list], Unknown]\", is partially unknown (reportUnknownVariableType)\n\n```"
    ],
    "commit_messages": [
      "Tweaked bidirectional type inference behaviors for lists to improve certain inference cases. This addresses #7527. (#7528)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f33ac254a19ac2904c0",
    "number": 7526,
    "body": "- Upgrade to latest prerelease LSP 3.18\r\n- Remove LS root uri",
    "head_branch": "pull-pylance-20240320",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "holding off. more uri changes coming."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f34ac254a19ac2904c1",
    "number": 7518,
    "body": "…d in a metaclass uses PEP 692 (unpacked TypeDict) to annotate its `**kwargs` parameter. This addresses #7514.",
    "head_branch": "issue7514",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that results in false positive error when a `__new__` method in a metaclass uses PEP 692 (unpacked TypeDict) to annotate its `**kwargs` parameter. This addresses #7514. (#7518)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f35ac254a19ac2904c2",
    "number": 7510,
    "body": "…inor version numbers. Pyright now handles micro, releaseLevel, and serial numbers as well. This addresses #7132.",
    "head_branch": "issue7132-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Expanded handling of python versions to handle more than just major/minor version numbers. Pyright now handles micro, releaseLevel, and serial numbers as well. This addresses #7132. (#7510)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f36ac254a19ac2904c3",
    "number": 7509,
    "body": "…inor version numbers. Pyright now handles micro, releaseLevel, and serial numbers as well. This addresses #7132.",
    "head_branch": "issue7132",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f37ac254a19ac2904c4",
    "number": 7508,
    "body": null,
    "head_branch": "documentation-stuff",
    "is_a_fork": true,
    "comments": [
      "oops wrong repo"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f38ac254a19ac2904c5",
    "number": 7506,
    "body": "…hat involves generic protocols, properties, and mix-in classes. This addresses #7400.",
    "head_branch": "issue7400",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-       Return type mismatch: base method returns type \"type[Self@object]\", override returns type \"type[list[Unknown]]\"\n+       Return type mismatch: base method returns type \"type[LazyTaintList]\", override returns type \"type[list[Unknown]]\"\n+         \"type[list[Unknown]]\" is incompatible with \"type[LazyTaintList]\"\n-         Type \"type[list[Unknown]]\" cannot be assigned to type \"type[Self@object]\" (reportIncompatibleMethodOverride)\n+         Type \"type[list[Unknown]]\" cannot be assigned to type \"type[LazyTaintList]\" (reportIncompatibleMethodOverride)\n-       Return type mismatch: base method returns type \"type[Self@object]\", override returns type \"type[dict[Unknown, Unknown]]\"\n+       Return type mismatch: base method returns type \"type[LazyTaintDict]\", override returns type \"type[dict[Unknown, Unknown]]\"\n+         \"type[dict[Unknown, Unknown]]\" is incompatible with \"type[LazyTaintDict]\"\n-         Type \"type[dict[Unknown, Unknown]]\" cannot be assigned to type \"type[Self@object]\" (reportIncompatibleMethodOverride)\n+         Type \"type[dict[Unknown, Unknown]]\" cannot be assigned to type \"type[LazyTaintDict]\" (reportIncompatibleMethodOverride)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false positive in a complex situation that involves generic protocols, properties, and mix-in classes. This addresses #7400. (#7506)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f39ac254a19ac2904c6",
    "number": 7504,
    "body": "Bumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.15.5 to 1.15.6.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/35a517c5861d79dc8bff7db8626013d20b711b06\"><code>35a517c</code></a> Release version 1.15.6 of the npm package.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/c4f847f85176991f95ab9c88af63b1294de8649b\"><code>c4f847f</code></a> Drop Proxy-Authorization across hosts.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/8526b4a1b2ab3a2e4044299377df623a661caa76\"><code>8526b4a</code></a> Use GitHub for disclosure.</li>\n<li>See full diff in <a href=\"https://github.com/follow-redirects/follow-redirects/compare/v1.15.5...v1.15.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.15.5&new-version=1.15.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/follow-redirects-1.15.6",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump follow-redirects from 1.15.5 to 1.15.6 (#7504)\n\nBumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.15.5 to 1.15.6.\r\n- [Release notes](https://github.com/follow-redirects/follow-redirects/releases)\r\n- [Commits](https://github.com/follow-redirects/follow-redirects/compare/v1.15.5...v1.15.6)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: follow-redirects\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f3aac254a19ac2904c7",
    "number": 7501,
    "body": "…hat has keyword parameters with a method that has a `*args` parameter. This addresses #7480.",
    "head_branch": "issue7480",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n-     Positional parameter count mismatch; base method has 3, but override has 2 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 3, but override has 2\n+     Parameter 3 mismatch: base parameter \"key\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n-     Positional parameter count mismatch; base method has 3, but override has 3 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 3, but override has 3\n+     Parameter 3 mismatch: base parameter \"schema\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n-     Positional parameter count mismatch; base method has 3, but override has 4 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 3, but override has 4\n+     Parameter 3 mismatch: base parameter \"schema\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-     Positional parameter count mismatch; base method has 2, but override has 1 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 2, but override has 1\n+     Parameter 2 mismatch: base parameter \"run_module\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n-     Positional parameter count mismatch; base method has 2, but override has 1 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 2, but override has 1\n+     Parameter 2 mismatch: base parameter \"run_module\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n-     Parameter 1 name mismatch: base parameter is named \"self\", override parameter is named \"events\" (reportIncompatibleMethodOverride)\n+     Parameter 1 name mismatch: base parameter is named \"self\", override parameter is named \"events\"\n+     Parameter 2 mismatch: base parameter \"events\" is keyword parameter, override parameter is position-only\n+     Parameter 3 mismatch: base parameter \"start_time_ns\" is keyword parameter, override parameter is position-only\n+     Parameter 4 mismatch: base parameter \"end_time_ns\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n-     Parameter 1 name mismatch: base parameter is named \"self\", override parameter is named \"format\" (reportIncompatibleMethodOverride)\n+     Parameter 1 name mismatch: base parameter is named \"self\", override parameter is named \"format\"\n+     Parameter 2 mismatch: base parameter \"format\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n-     Parameter 1 name mismatch: base parameter is named \"self\", override parameter is named \"format\" (reportIncompatibleMethodOverride)\n+     Parameter 1 name mismatch: base parameter is named \"self\", override parameter is named \"format\"\n+     Parameter 2 mismatch: base parameter \"format\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n\nspack (https://github.com/spack/spack)\n-     Positional parameter count mismatch; base method has 2, but override has 1 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 2, but override has 1\n+     Parameter 2 mismatch: base parameter \"pkg\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_ssl_helpers.py:69:15 - error: Method \"getnameinfo\" overrides class \"HostnameResolver\" in an incompatible manner\n+     Parameter 2 mismatch: base parameter \"sockaddr\" is keyword parameter, override parameter is position-only\n+     Parameter 3 mismatch: base parameter \"flags\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n- 3595 errors, 51 warnings, 0 informations \n+ 3596 errors, 51 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py:66:9 - error: Method \"_generate_next_value_\" overrides class \"Enum\" in an incompatible manner\n+     Parameter 2 mismatch: base parameter \"start\" is keyword parameter, override parameter is position-only\n+     Parameter 3 mismatch: base parameter \"count\" is keyword parameter, override parameter is position-only\n+     Parameter 4 mismatch: base parameter \"last_values\" is keyword parameter, override parameter is position-only (reportIncompatibleMethodOverride)\n- 519 errors, 38 warnings, 7 informations \n+ 520 errors, 38 warnings, 7 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that results in a false negative when overriding a method that has keyword parameters with a method that has a `*args` parameter. This addresses #7480. (#7501)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f3bac254a19ac2904c8",
    "number": 7500,
    "body": "…me previously-undetected invalid cases. This addresses #7483.",
    "head_branch": "issue7483",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:509:12 - error: \"None\" is not a valid exception class (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:511:12 - error: \"None\" is not a valid exception class (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:252:16 - error: \"None\" is not a valid exception class (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:321:16 - error: \"None\" is not a valid exception class (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:323:16 - error: \"None\" is not a valid exception class (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:363:20 - error: \"None\" is not a valid exception class (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:472:16 - error: \"None\" is not a valid exception class (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:482:16 - error: \"None\" is not a valid exception class (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:783:20 - error: \"None\" is not a valid exception class (reportGeneralTypeIssues)\n- 10321 errors, 473 warnings, 0 informations \n+ 10330 errors, 473 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved validation for `except` and `except*` statements to catch some previously-undetected invalid cases. This addresses #7483. (#7500)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f3bac254a19ac2904c9",
    "number": 7499,
    "body": "…n is evaluated using bidirectional type inference when the expected type is `MutableSet` or `MutableSequence`. This addresses #7498.",
    "head_branch": "issue7498",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/bootstrap/config.py:126:66 - error: Expression of type \"list[InternalConfigScope]\" cannot be assigned to declared type \"MutableSequence[ConfigScope]\" (reportAssignmentType)\n- 11208 errors, 74 warnings, 0 informations \n+ 11207 errors, 74 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that results in false positive when a list or set expression is evaluated using bidirectional type inference when the expected type is `MutableSet` or `MutableSequence`. This addresses #7498. (#7499)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f3cac254a19ac2904ca",
    "number": 7493,
    "body": "…es the older-style positional-only parameters with PEP 570 syntax.",
    "head_branch": "typeshed_update",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npyinstrument (https://github.com/joerick/pyinstrument)\n- /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py\n-   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:40:31 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"__object\" in function \"append\"\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:41:31 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"__object\" in function \"append\"\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:42:31 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"__object\" in function \"append\"\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:57:35 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"__object\" in function \"append\"\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:60:35 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"__object\" in function \"append\"\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:71:31 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"__object\" in function \"append\"\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n-     Argument corresponds to parameter \"__value\" in function \"dumps\"\n+     Argument corresponds to parameter \"value\" in function \"dumps\"\n- 39 errors, 6 warnings, 0 informations \n+ 33 errors, 6 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n-     Argument corresponds to parameter \"__iterable\" in function \"__init__\"\n+     Argument corresponds to parameter \"iterable\" in function \"__init__\"\n-     Argument corresponds to parameter \"__iterable\" in function \"__init__\"\n+     Argument corresponds to parameter \"iterable\" in function \"__init__\"\n-     Argument corresponds to parameter \"__obj\" in function \"len\"\n+     Argument corresponds to parameter \"obj\" in function \"len\"\n-     Argument corresponds to parameter \"__obj\" in function \"len\"\n+     Argument corresponds to parameter \"obj\" in function \"len\"\n-     Argument corresponds to parameter \"__obj\" in function \"len\"\n+     Argument corresponds to parameter \"obj\" in function \"len\"\n-     Argument corresponds to parameter \"__obj\" in function \"len\"\n+     Argument corresponds to parameter \"obj\" in function \"len\"\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/_scenario.py:74:20 - error: Argument of type \"None\" cannot be assigned to parameter \"__i\" of type \"SupportsNext[_T@next]\" in function \"next\"\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/_scenario.py:74:20 - error: Argument of type \"None\" cannot be assigned to parameter \"i\" of type \"SupportsNext[_T@next]\" in function \"next\"\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/_scenario.py:80:18 - error: Argument of type \"None\" cannot be assigned to parameter \"__i\" of type \"SupportsNext[_T@next]\" in function \"next\"\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/_scenario.py:80:18 - error: Argument of type \"None\" cannot be assigned to parameter \"i\" of type \"SupportsNext[_T@next]\" in function \"next\"\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/flask_simple/app.py:16:25 - error: Argument of type \"bytes\" cannot be assigned to parameter \"__object\" of type \"float\" in function \"append\"\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/flask_simple/app.py:16:25 - error: Argument of type \"bytes\" cannot be assigned to parameter \"object\" of type \"float\" in function \"append\"\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:74:13 - error: Argument of type \"Literal['Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36…']\" cannot be assigned to parameter \"__value\" of type \"int\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:74:13 - error: Argument of type \"Literal['Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36…']\" cannot be assigned to parameter \"value\" of type \"int\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:80:13 - error: Argument of type \"Literal['8.8.8.8']\" cannot be assigned to parameter \"__value\" of type \"int\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:80:13 - error: Argument of type \"Literal['8.8.8.8']\" cannot be assigned to parameter \"value\" of type \"int\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/_span_link.py:89:13 - error: Argument of type \"dict[Any, Any]\" cannot be assigned to parameter \"__value\" of type \"str\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/_span_link.py:89:13 - error: Argument of type \"dict[Any, Any]\" cannot be assigned to parameter \"value\" of type \"str\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/tracer.py:680:46 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__key\" of type \"str\" in function \"get\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/tracer.py:680:46 - error: Argument of type \"str | None\" cannot be assigned to parameter \"key\" of type \"str\" in function \"get\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_asm_request_context.py:450:9 - error: Argument of type \"dict[Unknown, Unknown]\" cannot be assigned to parameter \"__value\" of type \"None\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_asm_request_context.py:450:9 - error: Argument of type \"dict[Unknown, Unknown]\" cannot be assigned to parameter \"value\" of type \"None\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/__init__.py:68:5 - error: Argument of type \"CodeType\" cannot be assigned to parameter \"__value\" of type \"ModuleType\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/__init__.py:68:5 - error: Argument of type \"CodeType\" cannot be assigned to parameter \"value\" of type \"ModuleType\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:447:25 - error: Argument of type \"Generator[Any | str | bytes | bytearray | LazyTaintDict | LazyTaintList | Unknown | Mapping[Unknown, Unknown] | Sequence[Unknown], Any, None]\" cannot be assigned to parameter \"__sequence\" of type \"SupportsLenAndGetItem[_T@reversed]\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:447:25 - error: Argument of type \"Generator[Any | str | bytes | bytearray | LazyTaintDict | LazyTaintList | Unknown | Mapping[Unknown, Unknown] | Sequence[Unknown], Any, None]\" cannot be assigned to parameter \"sequence\" of type \"SupportsLenAndGetItem[_T@reversed]\" in function \"__new__\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_tracking/aspects.py:78:35 - error: Argument of type \"str | memoryview\" cannot be assigned to parameter \"__sub\" of type \"str\" in function \"index\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_tracking/aspects.py:78:35 - error: Argument of type \"str | memoryview\" cannot be assigned to parameter \"sub\" of type \"str\" in function \"index\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_tracking/aspects.py:426:39 - error: Argument of type \"str | memoryview\" cannot be assigned to parameter \"__sub\" of type \"str\" in function \"index\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_tracking/aspects.py:426:39 - error: Argument of type \"str | memoryview\" cannot be assigned to parameter \"sub\" of type \"str\" in function \"index\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_tracking/_vendor/pybind11/pybind11/setup_helpers.py:494:26 - error: Argument of type \"(self: CCompiler, sources: list[str], output_dir: str | None = None, macros: list[_Macro] | None = None, include_dirs: list[str] | None = None, debug: bool = ..., extra_preargs: list[str] | None = None, extra_postargs: list[str] | None = None, depends: list[str] | None = None) -> list[str]\" cannot be assigned to parameter \"__object\" of type \"CCompilerMethod\" in function \"append\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_tracking/_vendor/pybind11/pybind11/setup_helpers.py:494:26 - error: Argument of type \"(self: CCompiler, sources: list[str], output_dir: str | None = None, macros: list[_Macro] | None = None, include_dirs: list[str] | None = None, debug: bool = ..., extra_preargs: list[str] | None = None, extra_postargs: list[str] | None = None, depends: list[str] | None = None) -> list[str]\" cannot be assigned to parameter \"object\" of type \"CCompilerMethod\" in function \"append\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:126:40 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__class_or_tuple\" of type \"_ClassInfo\" in function \"isinstance\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:126:40 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"class_or_tuple\" of type \"_ClassInfo\" in function \"isinstance\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/services/bedrock.py:234:29 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/services/bedrock.py:234:29 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/services/kinesis.py:93:19 - error: Argument of type \"Literal['Records']\" cannot be assigned to parameter \"__s\" of type \"slice\" in function \"__getitem__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/services/kinesis.py:93:19 - error: Argument of type \"Literal['Records']\" cannot be assigned to parameter \"s\" of type \"slice\" in function \"__getitem__\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/futures/patch.py:27:8 - error: Argument of type \"Any | ((self: ThreadPoolExecutor, __fn: ((**_P@submit) -> _T@submit), *args: _P@submit.args, **kwargs: _P@submit.kwargs) -> Future[_T@submit])\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/futures/patch.py:27:8 - error: Argument of type \"Any | ((self: ThreadPoolExecutor, fn: ((**_P@submit) -> _T@submit), /, *args: _P@submit.args, **kwargs: _P@submit.kwargs) -> Future[_T@submit])\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n-     Type \"Any | ((self: ThreadPoolExecutor, __fn: ((**_P@submit) -> _T@submit), *args: _P@submit.args, **kwargs: _P@submit.kwargs) -> Future[_T@submit])\" cannot be assigned to type \"FunctionType\"\n+     Type \"Any | ((self: ThreadPoolExecutor, fn: ((**_P@submit) -> _T@submit), /, *args: _P@submit.args, **kwargs: _P@submit.kwargs) -> Future[_T@submit])\" cannot be assigned to type \"FunctionType\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/kafka/patch.py:174:92 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__class_or_tuple\" of type \"_ClassInfo\" in function \"isinstance\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/kafka/patch.py:174:92 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"class_or_tuple\" of type \"_ClassInfo\" in function \"isinstance\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/langchain/patch.py:505:66 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__obj\" of type \"Sized\" in function \"len\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/langchain/patch.py:505:66 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"obj\" of type \"Sized\" in function \"len\"\n\n... (truncated 263 lines) ...\n\nspack (https://github.com/spack/spack)\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/multiproc.py\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/multiproc.py:35:20 - error: Cannot access member \"value\" for type \"SynchronizedBase[Any]\"\n-     Member \"value\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/multiproc.py:35:20 - error: Cannot assign member \"value\" for type \"SynchronizedBase[Any]\"\n-     Member \"value\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/multiproc.py:36:23 - error: Cannot access member \"value\" for type \"SynchronizedBase[Any]\"\n-     Member \"value\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/multiproc.py:48:20 - error: Cannot access member \"value\" for type \"SynchronizedBase[Any]\"\n-     Member \"value\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/multiproc.py:48:20 - error: Cannot assign member \"value\" for type \"SynchronizedBase[Any]\"\n-     Member \"value\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/multiproc.py:49:23 - error: Cannot access member \"value\" for type \"SynchronizedBase[Any]\"\n-     Member \"value\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:318:78 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"Buffer\" in function \"ioctl\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:318:78 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"arg\" of type \"Buffer\" in function \"ioctl\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:181:61 - error: Argument of type \"_AttrReturn | None\" cannot be assigned to parameter \"__attributes\" of type \"_Attr\" in function \"tcsetattr\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:181:61 - error: Argument of type \"_AttrReturn | None\" cannot be assigned to parameter \"attributes\" of type \"_Attr\" in function \"tcsetattr\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/pty.py:315:25 - error: Cannot access member \"value\" for type \"SynchronizedBase[Any]\"\n-     Member \"value\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/pty.py:329:62 - error: Argument of type \"int | None\" cannot be assigned to parameter \"__pid\" of type \"int\" in function \"getsid\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/pty.py:329:62 - error: Argument of type \"int | None\" cannot be assigned to parameter \"pid\" of type \"int\" in function \"getsid\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:409:27 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:409:27 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"iterable\" of type \"Iterable[str]\" in function \"join\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:1104:86 - error: Argument of type \"set[Spec]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:1104:86 - error: Argument of type \"set[Spec]\" cannot be assigned to parameter \"iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:1111:63 - error: Argument of type \"set[Spec]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:1111:63 - error: Argument of type \"set[Spec]\" cannot be assigned to parameter \"iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:245:21 - error: Argument of type \"list[Any]\" cannot be assigned to parameter \"__value\" of type \"dict[Unknown, Unknown]\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:245:21 - error: Argument of type \"list[Any]\" cannot be assigned to parameter \"value\" of type \"dict[Unknown, Unknown]\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:408:25 - error: Argument of type \"tuple[float, Literal[True]]\" cannot be assigned to parameter \"__value\" of type \"float\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:408:25 - error: Argument of type \"tuple[float, Literal[True]]\" cannot be assigned to parameter \"value\" of type \"float\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:413:25 - error: Argument of type \"tuple[float, Literal[False]]\" cannot be assigned to parameter \"__value\" of type \"float\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:413:25 - error: Argument of type \"tuple[float, Literal[False]]\" cannot be assigned to parameter \"value\" of type \"float\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:447:17 - error: Argument of type \"tuple[float, Literal[True]]\" cannot be assigned to parameter \"__value\" of type \"float\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:447:17 - error: Argument of type \"tuple[float, Literal[True]]\" cannot be assigned to parameter \"value\" of type \"float\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:452:17 - error: Argument of type \"tuple[float, Literal[False]]\" cannot be assigned to parameter \"__value\" of type \"float\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:452:17 - error: Argument of type \"tuple[float, Literal[False]]\" cannot be assigned to parameter \"value\" of type \"float\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:982:50 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__stream\" of type \"_ReadableStream\" in function \"__call__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:982:50 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"stream\" of type \"_ReadableStream\" in function \"__call__\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2178:55 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__stream\" of type \"_ReadableStream\" in function \"__call__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2178:55 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"stream\" of type \"_ReadableStream\" in function \"__call__\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2269:63 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__stream\" of type \"_ReadableStream\" in function \"__call__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2269:63 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"stream\" of type \"_ReadableStream\" in function \"__call__\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1054:34 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1054:34 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"a\" of type \"StrPath\" in function \"join\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1063:36 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1063:36 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"a\" of type \"StrPath\" in function \"join\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1398:20 - error: Argument of type \"None\" cannot be assigned to parameter \"__s\" of type \"str\" in function \"write\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1398:20 - error: Argument of type \"None\" cannot be assigned to parameter \"s\" of type \"str\" in function \"write\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1440:22 - error: Argument of type \"str | bytearray | memoryview\" cannot be assigned to parameter \"__s\" of type \"str\" in function \"write\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1440:22 - error: Argument of type \"str | bytearray | memoryview\" cannot be assigned to parameter \"s\" of type \"str\" in function \"write\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2117:22 - error: Argument of type \"None\" cannot be assigned to parameter \"__s\" of type \"str\" in function \"write\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2117:22 - error: Argument of type \"None\" cannot be assigned to parameter \"s\" of type \"str\" in function \"write\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2141:54 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__stream\" of type \"_ReadableStream\" in function \"__call__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2141:54 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"stream\" of type \"_ReadableStream\" in function \"__call__\"\n\n... (truncated 378 lines) ...\n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-     Argument corresponds to parameter \"__iterable\" in function \"__init__\" (reportUnknownArgumentType)\n+     Argument corresponds to parameter \"iterable\" in function \"__init__\" (reportUnknownArgumentType)\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:108:35 - error: Argument of type \"(...) -> Unknown\" cannot be assigned to parameter \"__class_or_tuple\" of type \"_ClassInfo\" in function \"isinstance\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:108:35 - error: Argument of type \"(...) -> Unknown\" cannot be assigned to parameter \"class_or_tuple\" of type \"_ClassInfo\" in function \"isinstance\"\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:227:6 - error: Argument of type \"(cls: TArraySchemaBase@_pydantic_validate, schema: Any) -> TArraySchemaBase@_pydantic_validate\" cannot be assigned to parameter \"__f\" of type \"(type[_T@classmethod], **_P@classmethod) -> _R_co@classmethod\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:227:6 - error: Argument of type \"(cls: TArraySchemaBase@_pydantic_validate, schema: Any) -> TArraySchemaBase@_pydantic_validate\" cannot be assigned to parameter \"f\" of type \"(type[_T@classmethod], **_P@classmethod) -> _R_co@classmethod\" in function \"__init__\"\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:149:6 - error: Argument of type \"(cls: TColumnSchemaBase@_pydantic_validate, schema: Any) -> TColumnSchemaBase@_pydantic_validate\" cannot be assigned to parameter \"__f\" of type \"(type[_T@classmethod], **_P@classmethod) -> _R_co@classmethod\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:149:6 - error: Argument of type \"(cls: TColumnSchemaBase@_pydantic_validate, schema: Any) -> TColumnSchemaBase@_pydantic_validate\" cannot be assigned to parameter \"f\" of type \"(type[_T@classmethod], **_P@classmethod) -> _R_co@classmethod\" in function \"__init__\"\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/polars/base.py:129:13 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__key\" of type \"str\" in function \"__getitem__\"\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/polars/base.py:129:13 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"key\" of type \"str\" in function \"__getitem__\"\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/polars/base.py:129:13 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__key\" of type \"str\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/polars/base.py:129:13 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"key\" of type \"str\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_model.py:641:16 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__obj\" of type \"Sized\" in function \"len\"\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_model.py:641:16 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"obj\" of type \"Sized\" in function \"len\"\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_schema_statistics.py:653:16 - error: Argument of type \"list[Unknown] | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[_T@set]\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_schema_statistics.py:653:16 - error: Argument of type \"list[Unknown] | None\" cannot be assigned to parameter \"iterable\" of type \"Iterable[_T@set]\" in function \"__init__\"\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_schema_statistics.py:669:16 - error: Argument of type \"list[Unknown] | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[_T@set]\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_schema_statistics.py:669:16 - error: Argument of type \"list[Unknown] | None\" cannot be assigned to parameter \"iterable\" of type \"Iterable[_T@set]\" in function \"__init__\"\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:802:5 - error: \"option_spec\" overrides symbol of same name in class \"Directive\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Dict[str, Any]\" is not the same as base type \"dict[str, (str) -> Any] | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:802:5 - error: Instance variable \"option_spec\" overrides class variable of same name in class \"Directive\" (reportIncompatibleVariableOverride)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:893:32 - error: Cannot access member \"run\" for type \"object\"\n-     Member \"run\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:846:9 - error: Method \"run\" overrides class \"Directive\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Sequence[Node]\", override returns type \"list[SystemMessage]\"\n+       \"list[SystemMessage]\" is incompatible with \"Sequence[Node]\"\n+         Type parameter \"_T_co@Sequence\" is covariant, but \"SystemMessage\" is not a subtype of \"Node\"\n+           \"SystemMessage\" is incompatible with \"Node\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:1120:5 - error: \"option_spec\" overrides symbol of same name in class \"Directive\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Dict[str, Any]\" is not the same as base type \"dict[str, (str) -> Any] | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:1120:5 - error: Instance variable \"option_spec\" overrides class variable of same name in class \"Directive\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:1232:19 - error: \"_roles\" is not a known member of module \"docutils.parsers.rst.roles\" (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:39:34 - error: \"body\" is not a known member of module \"docutils.parsers.rst.directives\" (reportAttributeAccessIssue)\n- 27 errors, 37 warnings, 0 informations \n+ 33 errors, 37 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-     Argument corresponds to parameter \"__o\" in function \"getattr\" (reportUnknownArgumentType)\n+     Argument corresponds to parameter \"o\" in function \"getattr\" (reportUnknownArgumentType)\n-     Argument corresponds to parameter \"__o\" in function \"getattr\" (reportUnknownArgumentType)\n+     Argument corresponds to parameter \"o\" in function \"getattr\" (reportUnknownArgumentType)\n-     Argument corresponds to parameter \"__obj\" in function \"hasattr\" (reportUnknownArgumentType)\n+     Argument corresponds to parameter \"obj\" in function \"hasattr\" (reportUnknownArgumentType)\n-     Argument corresponds to parameter \"__o\" in function \"getattr\" (reportUnknownArgumentType)\n+     Argument corresponds to parameter \"o\" in function \"getattr\" (reportUnknownArgumentType)\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n\n... (truncated 361 lines) ...```"
    ],
    "commit_messages": [
      "Updated typeshed stubs to the latest. This version of typeshed replaces the older-style positional-only parameters with PEP 570 syntax. (#7493)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f3dac254a19ac2904cb",
    "number": 7491,
    "body": "… a class parameterized by a TypeVarTuple when there is no default. This addresses #7489.",
    "head_branch": "Issue7489",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that results in false positive when implicitly specializing a class parameterized by a TypeVarTuple when there is no default. This addresses #7489. (#7491)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f3eac254a19ac2904cc",
    "number": 7486,
    "body": "…t is used in a class pattern. This addresses #7485.",
    "head_branch": "issue7485",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that results in a false negative when a TypeAliasType object is used in a class pattern. This addresses #7485. (#7486)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f3fac254a19ac2904cd",
    "number": 7477,
    "body": "See this comment here:\r\nhttps://github.com/microsoft/pyright/issues/7159#issuecomment-1992769774\r\n\r\nAfter some investigation I found that sympy is just evaluating a lot more types. This change allows a limit be set for expanding types. Internally in Pylance I was thinking we'd have a setting like so:\r\n\r\n```json\r\n\"python.analysis.minimizedPackages\": [\"sympy\"]\r\n```\r\n\r\nThis would be applied to the `type` argument on the filter to see what module the type comes from. If a package is in this list, the user will still get some information, but the package will analyze much faster.\r\n\r\nThe alternative would be to provide type stubs for these packages, but that can take a long time. This is more like a shortcut for when we know certain packages are slow to analyze.\r\n\r\n",
    "head_branch": "rchiodo/filter_packages",
    "is_a_fork": true,
    "comments": [
      "After using this setting for sympy, sympy analysis times are back to what they were before https://github.com/microsoft/pyright/commit/6753a5d30535ba9a5708ff62494f841519fc54ce",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Okay I'll look into generating stubs instead.",
      "Stubs are one answer, but there might be other solutions. It sounds like you have done some analysis on the problem. If you're able to write up the notes about what you've found and include them in [this issue](https://github.com/microsoft/pyright/issues/7159), I might be able to suggest other potential solutions. I haven't had time to do an in-depth analysis of the problem yet (and probably won't have time in the near future), but if you've already done the analysis, we might be able to tag-team.",
      "Thanks. I did add some comments but I'll try to add some more detail. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f40ac254a19ac2904ce",
    "number": 7476,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.354",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.354 (#7476)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f41ac254a19ac2904cf",
    "number": 7464,
    "body": null,
    "head_branch": "issue7462",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added new `reportUnhashable` diagnostic rule. This addresses #7462. (#7464)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f42ac254a19ac2904d0",
    "number": 7463,
    "body": "…inherits from a protocol that defines an instance variable but the child re-declares as a `ClassVar` without an explicit type. This addresses #7455.",
    "head_branch": "issue7455",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/wsgi/wsgi.py:236:5 - error: \"_request_span_name\" incorrectly overrides property of same name in class \"_DDWSGIMiddlewareBase\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/wsgi/wsgi.py:237:5 - error: \"_application_span_name\" incorrectly overrides property of same name in class \"_DDWSGIMiddlewareBase\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/wsgi/wsgi.py:238:5 - error: \"_response_span_name\" incorrectly overrides property of same name in class \"_DDWSGIMiddlewareBase\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/scheduler.py:79:18 - error: \"interval\" incorrectly overrides property of same name in class \"PeriodicService\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/wsgi/test_wsgi.py:54:5 - error: \"_request_span_name\" incorrectly overrides property of same name in class \"_DDWSGIMiddlewareBase\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/wsgi/test_wsgi.py:55:5 - error: \"_application_span_name\" incorrectly overrides property of same name in class \"_DDWSGIMiddlewareBase\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/wsgi/test_wsgi.py:56:5 - error: \"_response_span_name\" incorrectly overrides property of same name in class \"_DDWSGIMiddlewareBase\" (reportIncompatibleMethodOverride)\n- 10197 errors, 471 warnings, 0 informations \n+ 10204 errors, 471 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/aocc.py:105:5 - error: \"required_libs\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/arm.py:92:5 - error: \"required_libs\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/clang.py:97:5 - error: \"openmp_flag\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/clang.py:163:5 - error: \"required_libs\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/fj.py:35:5 - error: \"required_libs\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/gcc.py:156:5 - error: \"required_libs\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/intel.py:51:5 - error: \"required_libs\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/nvhpc.py:94:5 - error: \"required_libs\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/oneapi.py:45:5 - error: \"required_libs\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/pgi.py:76:5 - error: \"required_libs\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/compilers/basics.py:163:5 - error: \"required_libs\" incorrectly overrides property of same name in class \"Compiler\" (reportIncompatibleMethodOverride)\n- 11190 errors, 74 warnings, 0 informations \n+ 11201 errors, 74 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:122:14 - error: \"backpack\" incorrectly overrides property of same name in class \"GCState\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:161:14 - error: \"__class__\" incorrectly overrides property of same name in class \"object\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:212:18 - error: \"__class__\" incorrectly overrides property of same name in class \"object\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:297:14 - error: \"__class__\" incorrectly overrides property of same name in class \"object\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:322:14 - error: \"__class__\" incorrectly overrides property of same name in class \"object\" (reportIncompatibleMethodOverride)\n- 8433 errors, 88 warnings, 0 informations \n+ 8438 errors, 88 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_concat_tb.py:39:9 - error: Class variable \"_fields_\" overrides instance variable of same name in class \"_StructUnionMeta\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_socket.py:223:9 - error: \"type\" incorrectly overrides property of same name in class \"SocketType\" (reportIncompatibleMethodOverride)\n- 3600 errors, 51 warnings, 0 informations \n+ 3602 errors, 51 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false negative when a class explicitly inherits from a protocol that defines an instance variable but the child re-declares as a `ClassVar` without an explicit type. This addresses #7455. (#7463)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f43ac254a19ac2904d1",
    "number": 7458,
    "body": "…ces when defining a type alias using the old `typing.TypeAlias` annotation. This addresses #7457.",
    "head_branch": "issue7457",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false positive under certain circumstances when defining a type alias using the old `typing.TypeAlias` annotation. This addresses #7457. (#7458)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f43ac254a19ac2904d2",
    "number": 7454,
    "body": "…class that is not specialized. The class is now automatically specialized in the case using default type parameter values (from PEP 696) or Unknown. This change is required for conformance with PEP 696. It addresses #7445.",
    "head_branch": "issue7445",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:246:9 - error: Type of \"maybe_candidate\" is partially unknown\n+     Type of \"maybe_candidate\" is \"CandidateImplementation[Unknown] | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:246:27 - error: Type of \"create\" is partially unknown\n+     Type of \"create\" is \"(*, identifier: object, dependency: object, predicates: Sequence[Predicate[Unknown] | Predicate[NeutralWeight]], weights: Sequence[Unknown]) -> (CandidateImplementation[Unknown] | None)\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:255:45 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"candidate\" in function \"__unsafe_add_candidate\"\n+     Argument type is \"CandidateImplementation[Unknown]\" (reportUnknownArgumentType)\n- 728 errors, 77 warnings, 0 informations \n+ 731 errors, 77 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/seq.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/seq.py:893:12 - error: Type of \"of_seq\" is partially unknown\n+     Type of \"of_seq\" is \"(xs: Iterable[Unknown]) -> Block[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/seq.py:893:12 - error: Return type, \"Block[Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/option.py:188:24 - error: Type of \"of\" is partially unknown\n+     Type of \"of\" is \"(*args: Unknown) -> Seq[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/option.py:188:24 - error: Return type, \"Seq[Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/option.py:368:12 - error: Type of \"Some\" is partially unknown\n+     Type of \"Some\" is \"(value: Unknown) -> Option[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/option.py:368:12 - error: Return type, \"Option[Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:100:24 - error: Type of \"Ok\" is partially unknown\n+     Type of \"Ok\" is \"(value: Unknown) -> Result[Unknown, Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:100:24 - error: Return type, \"Result[Unknown, Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:130:24 - error: Type of \"Error\" is partially unknown\n+     Type of \"Error\" is \"(error: Unknown) -> Result[Unknown, Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:130:24 - error: Return type, \"Result[Unknown, Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_array.py:322:5 - error: Type of \"result\" is partially unknown\n+     Type of \"result\" is \"TypedArray[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_array.py:324:17 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"__init__\"\n+     Argument type is \"TypedArray[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_block.py:289:5 - error: Type of \"result\" is partially unknown\n+     Type of \"result\" is \"Block[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_block.py:291:17 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"__init__\"\n+     Argument type is \"Block[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:56:5 - error: Type of \"m\" is partially unknown\n+     Type of \"m\" is \"Map[Unknown, Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:56:9 - error: Type of \"of_seq\" is partially unknown\n+     Type of \"of_seq\" is \"(sequence: Iterable[tuple[Unknown, Unknown]]) -> Map[Unknown, Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:59:17 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__obj\" in function \"len\"\n+     Argument type is \"Map[Unknown, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:61:9 - error: Type of \"m\" is partially unknown\n+     Type of \"m\" is \"Map[Unknown, Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:61:13 - error: Type of \"remove\" is partially unknown\n+     Type of \"remove\" is \"(key: Unknown) -> Map[Unknown, Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:63:16 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__obj\" in function \"len\"\n+     Argument type is \"Map[Unknown, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:69:5 - error: Type of \"m\" is partially unknown\n+     Type of \"m\" is \"Map[Unknown, Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:69:9 - error: Type of \"of_seq\" is partially unknown\n+     Type of \"of_seq\" is \"(sequence: Iterable[tuple[Unknown, Unknown]]) -> Map[Unknown, Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:72:17 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__obj\" in function \"len\"\n+     Argument type is \"Map[Unknown, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:74:9 - error: Type of \"m\" is partially unknown\n+     Type of \"m\" is \"Map[str, Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:74:18 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__value\" in function \"pipe\"\n+     Argument type is \"Map[Unknown, Unknown] | Map[str, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:74:21 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__fn1\" in function \"pipe\"\n+     Argument type is \"(Map[str, Unknown]) -> Map[str, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:76:16 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__obj\" in function \"len\"\n+     Argument type is \"Map[Unknown, Unknown] | Map[str, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:136:18 - error: Type of \"of_seq\" is partially unknown\n+     Type of \"of_seq\" is \"(sequence: Iterable[tuple[Unknown, Unknown]]) -> Map[Unknown, Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:141:5 - error: Type of \"xs\" is partially unknown\n+     Type of \"xs\" is \"Map[str, Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:141:10 - error: Type of \"of\" is partially unknown\n+     Type of \"of\" is \"(**args: Unknown) -> Map[str, Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:142:12 - error: Type of \"try_get_value\" is partially unknown\n+     Type of \"try_get_value\" is \"(key: str, value: list[Unknown]) -> bool\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:143:12 - error: Type of \"try_get_value\" is partially unknown\n+     Type of \"try_get_value\" is \"(key: str, value: list[Unknown]) -> bool\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_map.py:144:12 - error: Type of \"try_get_value\" is partially unknown\n+     Type of \"try_get_value\" is \"(key: str, value: list[Unknown]) -> bool\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_result.py:27:28 - error: Type of \"Ok\" is partially unknown\n+     Type of \"Ok\" is \"(value: Unknown) -> Result[Unknown, Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_result.py:42:28 - error: Type of \"Ok\" is partially unknown\n+     Type of \"Ok\" is \"(value: Unknown) -> Result[Unknown, Unknown]\" (reportUnknownMemberType)\n- 299 errors, 6 warnings, 0 informations \n+ 334 errors, 6 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/spack_yaml.py:45:16 - error: Expression of type \"(self: list[_T@list]) -> str\" cannot be assigned to declared type \"(self: Self@object) -> str\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/spack_yaml.py:45:16 - error: Expression of type \"(self: list[Unknown]) -> str\" cannot be assigned to declared type \"(self: Self@object) -> str\"\n-     Type \"(self: list[_T@list]) -> str\" cannot be assigned to type \"(self: Self@object) -> str\"\n+     Type \"(self: list[Unknown]) -> str\" cannot be assigned to type \"(self: Self@object) -> str\"\n-       Parameter 1: type \"Self@object\" cannot be assigned to type \"list[_T@list]\"\n+       Parameter 1: type \"Self@object\" cannot be assigned to type \"list[Unknown]\"\n-         \"object*\" is incompatible with \"list[_T@list]\" (reportAssignmentType)\n+         \"object*\" is incompatible with \"list[Unknown]\" (reportAssignmentType)\n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_channel.py:241:16 - error: Return type, \"MemorySendChannel[Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_channel.py:388:16 - error: Return type, \"MemoryReceiveChannel[Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_local.py:69:13 - error: Type of \"token\" is partially unknown\n+     Type of \"token\" is \"RunVarToken[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_local.py:69:21 - error: Type of \"_empty\" is partially unknown\n+     Type of \"_empty\" is \"(var: RunVar[Unknown]) -> RunVarToken[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_local.py:76:16 - error: Return type, \"RunVarToken[T@RunVar] | RunVarToken[Unknown]\", is partially unknown (reportUnknownVariableType)\n- 3659 errors, 51 warnings, 0 informations \n+ 3664 errors, 51 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1316:17 - error: Type of \"_from_history\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1316:28 - error: Cannot access member \"_from_history\" for type \"type[TradeOffer[ReceivingAssetT@TradeOffer, SendingAssetT@TradeOffer, UserT@TradeOffer]]\"\n+     Could not bind method \"_from_history\" because \"type[TradeOffer[Item[User], Item[ClientUser], User]]\" is not assignable to parameter \"cls\"\n+       \"type[TradeOffer[Item[User], Item[ClientUser], User]]\" is incompatible with \"type[TradeOffer[MovedItem[User], MovedItem[ClientUser], User]]\"\n+       Type \"type[TradeOffer[Item[User], Item[ClientUser], User]]\" cannot be assigned to type \"type[TradeOffer[MovedItem[User], MovedItem[ClientUser], User]]\"\n+         Type parameter \"ReceivingAssetT@TradeOffer\" is covariant, but \"Item[User]\" is not a subtype of \"MovedItem[User]\"\n+           \"Item[User]\" is incompatible with \"MovedItem[User]\"\n+         Type parameter \"SendingAssetT@TradeOffer\" is covariant, but \"Item[ClientUser]\" is not a subtype of \"MovedItem[ClientUser]\"\n+           \"Item[ClientUser]\" is incompatible with \"MovedItem[ClientUser]\" (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1320:35 - error: Type of \"created_at\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1322:29 - error: Type of \"timestamp\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1323:78 - error: Type of \"user\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1323:78 - error: Type of \"id64\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1325:29 - error: Type of \"receiving\" is unknown (reportUnknownMemberType)\n- 8426 errors, 88 warnings, 0 informations \n+ 8433 errors, 88 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed the behavior when accessing a class attribute from a generic class that is not specialized. The class is now automatically specialized in the case using default type parameter values (from PEP 696) or Unknown. This change is required for conformance with PEP 696. It addresses #7445. (#7454)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f44ac254a19ac2904d3",
    "number": 7436,
    "body": "…mented assignment is used within an inner-scoped function to add a constant to a variable. Literal math should not be used in this case. This addresses #7431.",
    "head_branch": "issue7431",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in an incorrect type evaluation when an augmented assignment is used within an inner-scoped function to add a constant to a variable. Literal math should not be used in this case. This addresses #7431. (#7436)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f45ac254a19ac2904d4",
    "number": 7434,
    "body": "While investigating this issue:\r\nhttps://github.com/microsoft/pylance-release/issues/5440\r\n\r\nErik and I noticed that the `escapedValue` for a bunch of different tokens was not actually allocated from the original string. It was an entirely new string, meaning a new allocation.\r\n\r\nIt seems that it doesn't need to be that way. It can just point to the original string.\r\n\r\nI verified this uses less memory by snapshotting a run of pylance with a file with a lot of string literals in it.\r\n\r\nIn the original version, we end up with a parse tree like so:\r\n\r\n![image](https://github.com/microsoft/pyright/assets/19672699/c2f50f40-8d55-4f12-a225-262226de880b)\r\n\r\nYou can see that it's allocated 18.9 MB for the tokens themselves.\r\n\r\nIf we expand into these tokens, you can see one of the largest ones has its own copy of the giant literal string at the top of the file:\r\n\r\n![image](https://github.com/microsoft/pyright/assets/19672699/fa0e5b39-25c0-4d14-93ca-09bbac60e59c)\r\n\r\nThat token has 32K allocated to hold that large literal string.\r\n\r\nAfter this change, the amount of memory for the same run goes down by 800K:\r\n\r\n![image](https://github.com/microsoft/pyright/assets/19672699/9383b4dd-2000-4165-b124-3a17adbbdd4c)\r\n\r\nAnd if we find that same token with the escaped value, it's now a `sliced` value, which is really just a reference to the original string:\r\n\r\n![image](https://github.com/microsoft/pyright/assets/19672699/07940be1-ba46-40a8-a327-2fc33cd67f52)\r\n\r\n\r\n",
    "head_branch": "rchiodo/escaped_value_memory",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/utils.py:60:28 - error: Argument of type \"None\" cannot be assigned to parameter \"name\" of type \"str\" in function \"\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/encoder/utils.py:14:28 - error: Argument of type \"None\" cannot be assigned to parameter \"name\" of type \"str\" in function \"\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:83:14 - error: Cannot assign member \"_local_root\" for type \"Span\"\n+     Expression of type \"Unknown | Span\" cannot be assigned to member \"_local_root\" of class \"Span\"\n+       Member \"__set__\" is unknown\n+       Type \"Unknown | Span\" cannot be assigned to type \"None\"\n+         \"Span\" is incompatible with \"None\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:41 - error: Argument of type \"Config\" cannot be assigned to parameter \"integration_config\" of type \"IntegrationConfig\" in function \"set_http_meta\"\n-     \"Config\" is incompatible with \"IntegrationConfig\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"method\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"url\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"target_host\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"status_code\" of type \"int | str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"status_msg\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"query\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"parsed_query\" of type \"Mapping[str, str] | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"request_headers\" of type \"Mapping[str, str] | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"response_headers\" of type \"Mapping[str, str] | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"retries_remain\" of type \"int | str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"raw_uri\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"request_cookies\" of type \"Dict[str, str] | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"request_path_params\" of type \"Dict[str, str] | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"request_body\" of type \"str | Dict[str, List[str]] | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"peer_ip\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"route\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"response_cookies\" of type \"Dict[str, str] | None\" in function \"set_http_meta\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/threading/scenario.py:16:9 - error: Method \"recreate\" overrides class \"TraceWriter\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"NoopWriter\"\n+       \"NoopWriter\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n-     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(int) -> None, None, None]\"\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n-       \"Generator[(int) -> None, None, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/sampler.py:149:21 - error: Cannot access member \"sample_rate\" for type \"BaseSampler\"\n-     Member \"sample_rate\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/sampler.py:71:9 - error: Method \"sample\" overrides class \"BaseSampler\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Literal[True]\"\n+       \"Literal[True]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/sampling_rule.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/sampling_rule.py:80:54 - error: Cannot access member \"items\" for type \"object\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/span.py:312:40 - error: \"_metrics\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/span.py:313:38 - error: \"_metrics\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/span.py:312:40 - error: Cannot access member \"_metrics\" for type \"None\"\n+     Member \"_metrics\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/span.py:313:38 - error: Cannot access member \"_metrics\" for type \"None\"\n+     Member \"_metrics\" is unknown (reportAttributeAccessIssue)\n- /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/trace_handlers.py\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/trace_handlers.py:154:33 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/trace_handlers.py:158:98 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/trace_handlers.py:163:31 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/trace_handlers.py:166:27 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/trace_handlers.py:197:33 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/trace_handlers.py:203:40 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/trace_handlers.py:211:31 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/trace_handlers.py:215:27 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_trace/trace_handlers.py:400:26 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"integration_config\" of type \"IntegrationConfig\" in function \"_set_url_tag\"\n-     Type \"Any | None\" cannot be assigned to type \"IntegrationConfig\"\n-       \"None\" is incompatible with \"IntegrationConfig\" (reportArgumentType)\n\n... (truncated 4487 lines) ...\n\n```",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Save some memory in token creation (#7434)\n\n* Save some memory in token creation\r\n\r\n* Found another 200k\r\n\r\n* Fix wrong way to check for undefined\r\n\r\n* Back out unnecessary regex change\r\n\r\n* Remove 'ExceedsMaxSize'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f46ac254a19ac2904d5",
    "number": 7428,
    "body": "- [Fix # pyright: ignore code action to specify correct diagnostic rule  https://github.com/microsoft/pyrx/pull/4789](https://github.com/microsoft/pyrx/pull/4789)\r\n- https://github.com/microsoft/pyrx/pull/4674\r\n- https://github.com/microsoft/pyrx/pull/4742",
    "head_branch": "pull-pylance-with-pyright-1.1.353",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.353 (#7428)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f47ac254a19ac2904d6",
    "number": 7427,
    "body": "…ariable is captured by an inner scope under certain circumstances. This addresses #7384.",
    "head_branch": "issue7384",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/algoliasearch/patch.py:43:16 - error: \"algoliasearch\" is possibly unbound (reportPossiblyUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/algoliasearch/patch.py:46:5 - error: \"algoliasearch\" is possibly unbound (reportPossiblyUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/algoliasearch/patch.py:51:12 - error: \"algoliasearch\" is possibly unbound (reportPossiblyUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/algoliasearch/patch.py:52:18 - error: \"algoliasearch\" is possibly unbound (reportPossiblyUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/algoliasearch/patch.py:56:12 - error: \"algoliasearch\" is possibly unbound (reportPossiblyUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/algoliasearch/patch.py:66:16 - error: \"algoliasearch\" is possibly unbound (reportPossiblyUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/algoliasearch/patch.py:67:17 - error: \"algoliasearch\" is possibly unbound (reportPossiblyUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/algoliasearch/patch.py:70:16 - error: \"algoliasearch\" is possibly unbound (reportPossiblyUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/monotonic/__init__.py:159:34 - error: \"CLOCK_MONOTONIC\" is possibly unbound (reportPossiblyUnboundVariable)\n- 10181 errors, 470 warnings, 0 informations \n+ 10190 errors, 470 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:261:30 - error: Argument of type \"CheckType | str\" cannot be assigned to parameter \"__key\" of type \"CheckType\" in function \"__getitem__\"\n-     Type \"CheckType | str\" cannot be assigned to type \"CheckType\"\n-       \"str\" is incompatible with \"CheckType\" (reportArgumentType)\n- 1313 errors, 17 warnings, 0 informations \n+ 1312 errors, 17 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:181:61 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__attributes\" of type \"_Attr\" in function \"tcsetattr\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:181:61 - error: Argument of type \"_AttrReturn | None\" cannot be assigned to parameter \"__attributes\" of type \"_Attr\" in function \"tcsetattr\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py:816:47 - error: \"msg\" is possibly unbound (reportPossiblyUnboundVariable)\n- 11174 errors, 74 warnings, 0 informations \n+ 11173 errors, 74 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_subprocess.py:174:12 - error: \"can_try_pidfd_open\" is unbound (reportUnboundVariable)\n- 3646 errors, 51 warnings, 0 informations \n+ 3647 errors, 51 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that resulted in a false negative when a possibly-unbound variable is captured by an inner scope under certain circumstances. This addresses #7384. (#7427)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f48ac254a19ac2904d7",
    "number": 7426,
    "body": "…ber access expressions under certain circumstances. This addresses #7414.",
    "head_branch": "issue7414-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/variant.py:466:27 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n- 11175 errors, 74 warnings, 0 informations \n+ 11174 errors, 74 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:1239:62 - warning: Unnecessary \"# type: ignore\" comment\n- 35 errors, 75 warnings, 0 informations \n+ 35 errors, 76 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:210:17 - error: Argument of type \"int | AssetID\" cannot be assigned to parameter \"__key\" of type \"AssetID\" in function \"__getitem__\"\n+     Type \"int | AssetID\" cannot be assigned to type \"AssetID\"\n+       \"int\" is incompatible with \"AssetID\" (reportArgumentType)\n- 8425 errors, 88 warnings, 0 informations \n+ 8426 errors, 88 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that results in incorrect type narrowing behavior for member access expressions under certain circumstances. This addresses #7414. (#7426)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f49ac254a19ac2904d8",
    "number": 7425,
    "body": "…ber access expressions under certain circumstances. This addresses #7414.",
    "head_branch": "issue7414-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/variant.py:466:27 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n- 11175 errors, 74 warnings, 0 informations \n+ 11174 errors, 74 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:1239:62 - warning: Unnecessary \"# type: ignore\" comment\n- 35 errors, 75 warnings, 0 informations \n+ 35 errors, 76 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:210:17 - error: Argument of type \"int | AssetID\" cannot be assigned to parameter \"__key\" of type \"AssetID\" in function \"__getitem__\"\n+     Type \"int | AssetID\" cannot be assigned to type \"AssetID\"\n+       \"int\" is incompatible with \"AssetID\" (reportArgumentType)\n- 8425 errors, 88 warnings, 0 informations \n+ 8426 errors, 88 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f4aac254a19ac2904d9",
    "number": 7424,
    "body": null,
    "head_branch": "issue7414",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/variant.py:466:27 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n- 11175 errors, 74 warnings, 0 informations \n+ 11174 errors, 74 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:1239:62 - warning: Unnecessary \"# type: ignore\" comment\n- 35 errors, 75 warnings, 0 informations \n+ 35 errors, 76 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:210:17 - error: Argument of type \"int | AssetID\" cannot be assigned to parameter \"__key\" of type \"AssetID\" in function \"__getitem__\"\n+     Type \"int | AssetID\" cannot be assigned to type \"AssetID\"\n+       \"int\" is incompatible with \"AssetID\" (reportArgumentType)\n- 8425 errors, 88 warnings, 0 informations \n+ 8426 errors, 88 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f4bac254a19ac2904da",
    "number": 7409,
    "body": "… It should be `str | None` rather than `str`. This addresses #7408.",
    "head_branch": "issue7408",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pyramid/patch.py:35:43 - error: Argument of type \"str | None\" cannot be assigned to parameter \"distribution_name\" of type \"str\" in function \"version\"\n+     Type \"str | None\" cannot be assigned to type \"str\"\n+       \"None\" is incompatible with \"str\" (reportArgumentType)\n- 10170 errors, 470 warnings, 0 informations \n+ 10171 errors, 470 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/__init__.py:218:50 - error: Expression of type \"dict[str, tuple[str | None, Literal['__module__']] | tuple[str | None, Literal['.functional_validators']] | tuple[str | None, Literal['.json_schema']] | tuple[str | None, Literal['.functional_serializers']] | tuple[str | None, Literal['.config']] | tuple[str | None, Literal['.validate_call_decorator']] | tuple[str | None, Literal['.errors']] | tuple[str | None, Literal['.fields']] | tuple[str | None, Literal['.aliases']] | tuple[str | None, Literal['.main']] | tuple[str | None, Literal['.networks']] | tuple[str | None, Literal['.root_model']] | tuple[str | None, Literal['.types']] | tuple[str | None, Literal['.type_adapter']] | tuple[str | None, Literal['.warnings']] | tuple[str | None, Literal['.annotated_handlers']] | tuple[str | None, Literal['._internal._generate_schema']] | tuple[Literal['pydantic_core'], Literal['.']] | tuple[Literal['pydantic_core'], Literal['.core_schema']] | tuple[str | None, Literal['.deprecated.class_validators']] | tuple[str | None, Literal['.deprecated.config']] | tuple[str | None, Literal['.deprecated.tools']]]\" cannot be assigned to declared type \"dict[str, tuple[str, str]]\"\n+     Type \"str | None\" cannot be assigned to type \"str\"\n+       \"None\" is incompatible with \"str\"\n+     Type \"str | None\" cannot be assigned to type \"str\"\n+       \"None\" is incompatible with \"str\"\n+     Type \"str | None\" cannot be assigned to type \"str\"\n+       \"None\" is incompatible with \"str\"\n+     Type \"str | None\" cannot be assigned to type \"str\"\n+       \"None\" is incompatible with \"str\" (reportAssignmentType)\n- 74 errors, 44 warnings, 0 informations \n+ 75 errors, 44 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/mzexplore/common.py:110:39 - error: Argument of type \"str | None\" cannot be assigned to parameter \"package\" of type \"Package\" in function \"files\" (reportArgumentType)\n+ /tmp/mypy_primer/projects/materialize/misc/python/materialize/optbench/__init__.py\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/optbench/__init__.py:18:39 - error: Argument of type \"str | None\" cannot be assigned to parameter \"package\" of type \"Package\" in function \"files\" (reportArgumentType)\n- 11 errors, 300 warnings, 0 informations \n+ 13 errors, 300 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed hard-coded type information for module attribute `__package__`. It should be `str | None` rather than `str`. This addresses #7408. (#7409)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f4bac254a19ac2904db",
    "number": 7391,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f4cac254a19ac2904dc",
    "number": 7390,
    "body": "… type arguments to a TypeVarTuple under certain circumstances. This addresses #7389.",
    "head_branch": "issue7389",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false positive error when expanding the type arguments to a TypeVarTuple under certain circumstances. This addresses #7389. (#7390)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f4dac254a19ac2904dd",
    "number": 7388,
    "body": "Address https://github.com/microsoft/pylance-release/issues/5566\r\n\r\nPylance is failing to get the docstring for `str` methods when they are called on `LiteralString` objects. See https://github.com/microsoft/pylance-release/issues/5566#issuecomment-1974835169. It's [this `isInheritedFromBuiltin` check](https://github.com/microsoft/pyright/blob/c64f9b3f1f2dbe89af8346dfab2e69a5af1460bb/packages/pyright-internal/src/analyzer/typeDocStringUtils.ts#L82) that prevents the docstring from being used.\r\n\r\nI changed`isInheritedFromBuiltin` to return `false` if both the base class and derived class are builtins. From the comments where this function is called, I believe the intent is to avoid showing docstrings from builtin types on library/user types that inherit from them. But when the derived type is also a builtin, I'm thinking we should still show the docstring.\r\n\r\nI was also thinking about changing `isSameGenericClass` to think that `str` and `LiteralString` were the \"same\", but that caused a lot of test failures. Mainly false negatives I think, which in hindsight makes sense.",
    "head_branch": "pylance5566",
    "is_a_fork": true,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npyinstrument (https://github.com/joerick/pyinstrument)\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+     Argument type is \"LiteralString | Unknown\" (reportUnknownArgumentType)\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+     Argument type is \"LiteralString | Unknown\" (reportUnknownArgumentType)\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+     Argument type is \"LiteralString | Unknown\" (reportUnknownArgumentType)\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+     Argument type is \"LiteralString | Unknown\" (reportUnknownArgumentType)\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+     Argument type is \"LiteralString | Unknown\" (reportUnknownArgumentType)\n-     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+     Argument type is \"LiteralString | Unknown\" (reportUnknownArgumentType)\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:813:37 - error: Argument of type \"tuple[Literal['system'], str]\" cannot be assigned to parameter \"__object\" of type \"tuple[Literal['defaults'], str]\" in function \"append\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:813:37 - error: Argument of type \"tuple[Literal['system'], str]\" cannot be assigned to parameter \"__object\" of type \"tuple[Literal['defaults'], LiteralString]\" in function \"append\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:817:33 - error: Argument of type \"tuple[Literal['site'], str]\" cannot be assigned to parameter \"__object\" of type \"tuple[Literal['defaults'], str]\" in function \"append\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:817:33 - error: Argument of type \"tuple[Literal['site'], LiteralString]\" cannot be assigned to parameter \"__object\" of type \"tuple[Literal['defaults'], LiteralString]\" in function \"append\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:822:37 - error: Argument of type \"tuple[Literal['user'], str]\" cannot be assigned to parameter \"__object\" of type \"tuple[Literal['defaults'], str]\" in function \"append\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:822:37 - error: Argument of type \"tuple[Literal['user'], str]\" cannot be assigned to parameter \"__object\" of type \"tuple[Literal['defaults'], LiteralString]\" in function \"append\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/__init__.py:92:9 - error: Argument of type \"dict[str, Any | None]\" cannot be assigned to parameter \"__m\" of type \"Iterable[tuple[Unknown, str]]\" in function \"update\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/__init__.py:92:9 - error: Argument of type \"dict[str, Any | None]\" cannot be assigned to parameter \"__m\" of type \"Iterable[tuple[Unknown, LiteralString]]\" in function \"update\"\n-     \"dict[str, Any | None]\" is incompatible with \"Iterable[tuple[Unknown, str]]\"\n+     \"dict[str, Any | None]\" is incompatible with \"Iterable[tuple[Unknown, LiteralString]]\"\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"str\" is not a subtype of \"tuple[Unknown, str]\"\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"str\" is not a subtype of \"tuple[Unknown, LiteralString]\"\n-         \"str\" is incompatible with \"tuple[Unknown, str]\" (reportArgumentType)\n+         \"str\" is incompatible with \"tuple[Unknown, LiteralString]\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/cray_backend.py:108:42 - error: Argument of type \"str | None\" cannot be assigned to parameter \"string\" of type \"str | int\" in function \"Version\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/cray_backend.py:108:42 - error: Argument of type \"LiteralString | None\" cannot be assigned to parameter \"string\" of type \"str | int\" in function \"Version\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cray_manifest.py:357:13 - error: Argument of type \"list[LiteralString]\" cannot be assigned to parameter \"args\" of type \"str | List[str]\" in function \"parse_specs\"\n-     Type \"list[LiteralString]\" cannot be assigned to type \"str | List[str]\"\n-       \"list[LiteralString]\" is incompatible with \"str\"\n-       \"list[LiteralString]\" is incompatible with \"List[str]\"\n-         Type parameter \"_T@list\" is invariant, but \"LiteralString\" is not the same as \"str\"\n-         Consider switching from \"list\" to \"Sequence\" which is covariant (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/views.py:44:26 - error: Cannot access member \"subdir\" for type \"str\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/views.py:44:26 - error: Cannot access member \"subdir\" for type \"LiteralString\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/views.py:45:26 - error: Cannot access member \"subdir\" for type \"str\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/views.py:45:26 - error: Cannot access member \"subdir\" for type \"LiteralString\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/views.py:50:24 - error: Cannot access member \"file\" for type \"str\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/views.py:50:24 - error: Cannot access member \"file\" for type \"LiteralString\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/views.py:53:24 - error: Cannot access member \"subdir\" for type \"str\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/views.py:53:24 - error: Cannot access member \"subdir\" for type \"LiteralString\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/filesystem.py:371:12 - error: Operator \"in\" not supported for types \"str\" and \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/filesystem.py:371:12 - error: Operator \"in\" not supported for types \"LiteralString\" and \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\"\n-     Operator \"in\" not supported for types \"str\" and \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportOperatorIssue)\n+     Operator \"in\" not supported for types \"LiteralString\" and \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/filesystem.py:372:12 - error: Operator \"in\" not supported for types \"str\" and \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/filesystem.py:372:12 - error: Operator \"in\" not supported for types \"LiteralString\" and \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\"\n-     Operator \"in\" not supported for types \"str\" and \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportOperatorIssue)\n+     Operator \"in\" not supported for types \"LiteralString\" and \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/filesystem.py:373:12 - error: Operator \"in\" not supported for types \"str\" and \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/filesystem.py:373:12 - error: Operator \"in\" not supported for types \"LiteralString\" and \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\"\n-     Operator \"in\" not supported for types \"str\" and \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportOperatorIssue)\n+     Operator \"in\" not supported for types \"LiteralString\" and \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/filesystem.py:374:12 - error: Operator \"in\" not supported for types \"str\" and \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/filesystem.py:374:12 - error: Operator \"in\" not supported for types \"LiteralString\" and \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\"\n-     Operator \"in\" not supported for types \"str\" and \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportOperatorIssue)\n+     Operator \"in\" not supported for types \"LiteralString\" and \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/ld_so_conf.py:132:66 - error: Argument of type \"str | None\" cannot be assigned to parameter \"paths\" of type \"StrPath\" in function \"join\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/ld_so_conf.py:132:66 - error: Argument of type \"LiteralString | None\" cannot be assigned to parameter \"paths\" of type \"StrPath\" in function \"join\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/lvarray/package.py:12:27 - error: Import symbol \"cmake_cache_string\" has type \"(name: Unknown, value: Unknown, comment: str = \"\", force: bool = False) -> str\", which cannot be assigned to declared type \"(name: Unknown, string: Unknown, comment: str = \"\") -> str\"\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/lvarray/package.py:12:27 - error: Import symbol \"cmake_cache_string\" has type \"(name: Unknown, value: Unknown, comment: str = \"\", force: bool = False) -> LiteralString\", which cannot be assigned to declared type \"(name: Unknown, string: Unknown, comment: str = \"\") -> LiteralString\"\n-     Type \"(name: Unknown, value: Unknown, comment: str = \"\", force: bool = False) -> str\" cannot be assigned to type \"(name: Unknown, string: Unknown, comment: str = \"\") -> str\"\n+     Type \"(name: Unknown, value: Unknown, comment: str = \"\", force: bool = False) -> LiteralString\" cannot be assigned to type \"(name: Unknown, string: Unknown, comment: str = \"\") -> LiteralString\"\n\n... (truncated 18 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:49:21 - error: Cannot access member \"decode\" for type \"str\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:49:21 - error: Cannot access member \"decode\" for type \"LiteralString\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:779:78 - error: Argument of type \"str | Any | None\" cannot be assigned to parameter \"test_suite_name\" of type \"str\" in function \"_generate_fully_qualified_test_name\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:779:78 - error: Argument of type \"LiteralString | Any | None\" cannot be assigned to parameter \"test_suite_name\" of type \"str\" in function \"_generate_fully_qualified_test_name\"\n-     Type \"str | Any | None\" cannot be assigned to type \"str\"\n+     Type \"LiteralString | Any | None\" cannot be assigned to type \"str\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/compat.py:353:46 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"LiteralString\"\n-     \"str\" is incompatible with \"LiteralString\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/removals.py:234:18 - error: Operator \"+\" not supported for types \"Unbound | Literal['Using class', 'Using function/method']\" and \"str | Any | Unknown\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/removals.py:234:18 - error: Operator \"+\" not supported for types \"Unbound | Literal['Using class', 'Using function/method']\" and \"LiteralString | Any | Unknown\"\n-     Operator \"+\" not supported for types \"Unbound\" and \"str\" (reportOperatorIssue)\n+     Operator \"+\" not supported for types \"Unbound\" and \"LiteralString\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:380:52 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:380:52 - error: Argument of type \"LiteralString | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:515:12 - error: Operator \"in\" not supported for types \"Literal['no such process']\" and \"bytes | str\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:515:12 - error: Operator \"in\" not supported for types \"Literal['no such process']\" and \"LiteralString | bytes\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:707:24 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:707:24 - error: Argument of type \"LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:708:24 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:708:24 - error: Argument of type \"LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:709:24 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:709:24 - error: Argument of type \"LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1214:29 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1214:29 - error: Argument of type \"LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1236:30 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1236:30 - error: Argument of type \"LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1241:34 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1241:34 - error: Argument of type \"LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1255:33 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1255:33 - error: Argument of type \"LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1280:38 - error: Argument of type \"float | str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1280:38 - error: Argument of type \"float | LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1285:42 - error: Argument of type \"str | Unknown | object | float\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1285:42 - error: Argument of type \"LiteralString | Unknown | object | float\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1314:27 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1314:27 - error: Argument of type \"LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1342:28 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1342:28 - error: Argument of type \"LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1370:23 - error: Operator \"*\" not supported for types \"float\" and \"int | str | Unknown | object\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1370:23 - error: Operator \"*\" not supported for types \"float\" and \"int | LiteralString | Unknown | object\"\n-     Operator \"*\" not supported for types \"float\" and \"str\"\n+     Operator \"*\" not supported for types \"float\" and \"LiteralString\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1374:23 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1374:23 - error: Argument of type \"LiteralString | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1402:28 - error: Operator \"/\" not supported for types \"int | str | Unknown | object\" and \"int | str | Unknown | object\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1402:28 - error: Operator \"/\" not supported for types \"int | LiteralString | Unknown | object\" and \"int | LiteralString | Unknown | object\"\n-     Operator \"/\" not supported for types \"int\" and \"str\"\n+     Operator \"/\" not supported for types \"int\" and \"LiteralString\"\n-     Operator \"/\" not supported for types \"str\" and \"int\"\n+     Operator \"/\" not supported for types \"LiteralString\" and \"int\"\n-     Operator \"/\" not supported for types \"str\" and \"str\"\n+     Operator \"/\" not supported for types \"LiteralString\" and \"LiteralString\"\n-     Operator \"/\" not supported for types \"str\" and \"object\"\n\n... (truncated 13 lines) ...\n\ntrio (https://github.com/python-trio/trio)\n-     Argument type is \"Generator[str | Any | Unknown, None, None]\" (reportUnknownArgumentType)\n+     Argument type is \"Generator[LiteralString | Any | Unknown, None, None]\" (reportUnknownArgumentType)\n-     Type of \"k\" is \"str | Any | Unknown\" (reportUnknownVariableType)\n+     Type of \"k\" is \"LiteralString | Any | Unknown\" (reportUnknownVariableType)\n-     Type of \"symbol\" is \"str | Any | Unknown\" (reportUnknownVariableType)\n+     Type of \"symbol\" is \"LiteralString | Any | Unknown\" (reportUnknownVariableType)\n-     Argument type is \"str | Any | Unknown\" (reportUnknownArgumentType)\n+     Argument type is \"LiteralString | Any | Unknown\" (reportUnknownArgumentType)\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-     Type of \"capitalize\" is \"(() -> str) | Unknown\" (reportUnknownMemberType)\n+     Type of \"capitalize\" is \"Overload[() -> LiteralString, () -> str] | Unknown\" (reportUnknownMemberType)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-     Type of \"split\" is \"((sep: str | None = None, maxsplit: SupportsIndex = -1) -> list[str]) | Unknown\" (reportUnknownMemberType)\n+     Type of \"split\" is \"Overload[(sep: LiteralString | None = None, maxsplit: SupportsIndex = -1) -> list[LiteralString], (sep: str | None = None, maxsplit: SupportsIndex = -1) -> list[str]] | Unknown\" (reportUnknownMemberType)\n-     Type of \"split\" is \"((sep: str | None = None, maxsplit: SupportsIndex = -1) -> list[str]) | Unknown\" (reportUnknownMemberType)\n+     Type of \"split\" is \"Overload[(sep: LiteralString | None = None, maxsplit: SupportsIndex = -1) -> list[LiteralString], (sep: str | None = None, maxsplit: SupportsIndex = -1) -> list[str]] | Unknown\" (reportUnknownMemberType)\n-     Type of \"partition\" is \"((__sep: str, /) -> tuple[str, str, str]) | Unknown\" (reportUnknownMemberType)\n+     Type of \"partition\" is \"Overload[(__sep: LiteralString, /) -> tuple[LiteralString, LiteralString, LiteralString], (__sep: str, /) -> tuple[str, str, str]] | Unknown\" (reportUnknownMemberType)\n-     Type of \"message\" is \"str | Any | Unknown\" (reportUnknownMemberType)\n+     Type of \"message\" is \"LiteralString | Any | Unknown\" (reportUnknownMemberType)\n-     Type of \"replace\" is \"Unknown | ((__old: str, __new: str, __count: SupportsIndex = -1, /) -> str) | Any\" (reportUnknownMemberType)\n+     Type of \"replace\" is \"Unknown | Overload[(__old: LiteralString, __new: LiteralString, __count: SupportsIndex = -1, /) -> LiteralString, (__old: str, __new: str, __count: SupportsIndex = -1, /) -> str] | Any\" (reportUnknownMemberType)\n-     Type of \"strip\" is \"((__chars: str | None = None, /) -> str) | Any | Unknown\" (reportUnknownMemberType)\n+     Type of \"strip\" is \"Overload[(__chars: LiteralString | None = None, /) -> LiteralString, (__chars: str | None = None, /) -> str] | Any | Unknown\" (reportUnknownMemberType)\n-     Type of \"message\" is \"str | Any | Unknown\" (reportUnknownMemberType)\n+     Type of \"message\" is \"LiteralString | Any | Unknown\" (reportUnknownMemberType)\n-     Type of \"message\" is \"str | Any | Unknown\" (reportUnknownMemberType)\n+     Type of \"message\" is \"LiteralString | Any | Unknown\" (reportUnknownMemberType)\n-     Type of \"message\" is \"str | Any | Unknown\" (reportUnknownMemberType)\n+     Type of \"message\" is \"LiteralString | Any | Unknown\" (reportUnknownMemberType)\n\n```",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "tests?",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "> tests?\r\n\r\nAdded tests and also simplified `isInheritedFromBuiltin` to something that I believe is still correct. @heejaechang , can you take another look?",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Show `str` method docstrings when called on `LiteralString` (#7388)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f4eac254a19ac2904de",
    "number": 7387,
    "body": "…etaclass. Pyright now honors this type and enforces type consistency in derived classes. This addresses #7372.",
    "head_branch": "issue7372",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/utils.py:413:9 - error: \"__module__\" overrides symbol of same name in class \"FunctionWrapper\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/utils.py:413:9 - error: \"__module__\" overrides symbol of same name in class \"type\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:106:9 - error: \"__name__\" overrides symbol of same name in class \"type\"\n+     \"property\" is incompatible with \"str\" (reportIncompatibleVariableOverride)\n- 10230 errors, 474 warnings, 0 informations \n+ 10231 errors, 474 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:232:30 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"message\" of type \"str\" in function \"_print_installed_pkg\"\n-     Type \"Prefix | None\" cannot be assigned to type \"str\"\n-       \"None\" is incompatible with \"str\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:257:26 - error: \"bin\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:258:38 - error: \"bin\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:261:45 - error: \"bin\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:264:26 - error: \"include\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:265:38 - error: \"include\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:268:26 - error: \"lib\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:270:42 - error: \"lib\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:273:26 - error: \"man\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:411:26 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"message\" of type \"str\" in function \"_print_installed_pkg\"\n-     Type \"Prefix | None\" cannot be assigned to type \"str\"\n-       \"None\" is incompatible with \"str\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:982:53 - error: \"platform\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:983:47 - error: \"os\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:984:47 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:984:54 - error: \"microarchitecture\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1354:30 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"s\" of type \"FileDescriptorOrPath\" in function \"isdir\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1589:17 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__key\" of type \"CompilerSpec\" in function \"__setitem__\"\n-     Type \"Unknown | None\" cannot be assigned to type \"CompilerSpec\"\n-       \"None\" is incompatible with \"CompilerSpec\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1591:28 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__key\" of type \"CompilerSpec\" in function \"__getitem__\"\n-     Type \"Unknown | None\" cannot be assigned to type \"CompilerSpec\"\n-       \"None\" is incompatible with \"CompilerSpec\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1592:17 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__key\" of type \"CompilerSpec\" in function \"__getitem__\"\n-     Type \"Unknown | None\" cannot be assigned to type \"CompilerSpec\"\n-       \"None\" is incompatible with \"CompilerSpec\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1592:17 - error: Argument of type \"ArchSpec | Unknown | None\" cannot be assigned to parameter \"__key\" of type \"ArchSpec\" in function \"__setitem__\"\n-     Type \"ArchSpec | Unknown | None\" cannot be assigned to type \"ArchSpec\"\n-       \"None\" is incompatible with \"ArchSpec\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1594:13 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"__key\" of type \"CompilerSpec\" in function \"__getitem__\"\n-     Type \"Unknown | None\" cannot be assigned to type \"CompilerSpec\"\n-       \"None\" is incompatible with \"CompilerSpec\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1594:13 - error: Argument of type \"ArchSpec | Unknown | None\" cannot be assigned to parameter \"__key\" of type \"ArchSpec\" in function \"__getitem__\"\n-     Type \"ArchSpec | Unknown | None\" cannot be assigned to type \"ArchSpec\"\n-       \"None\" is incompatible with \"ArchSpec\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1633:45 - error: Argument of type \"list[Any | Prefix | None]\" cannot be assigned to parameter \"path_hints\" of type \"List[str] | None\" in function \"find_compilers\"\n-     Type \"Any | Prefix | None\" cannot be assigned to type \"str\"\n-       \"None\" is incompatible with \"str\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1837:31 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"exists\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1850:28 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"stat\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1853:26 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"chmod\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1983:31 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"exists\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2104:42 - error: Argument of type \"str | Prefix | None\" cannot be assigned to parameter \"message\" of type \"str\" in function \"_print_installed_pkg\"\n-     Type \"str | Prefix | None\" cannot be assigned to type \"str\"\n-       \"None\" is incompatible with \"str\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2314:15 - error: Cannot assign member \"keep\" for type \"DIYStage\"\n-     Member \"keep\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2361:30 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"message\" of type \"str\" in function \"_print_installed_pkg\"\n-     Type \"Prefix | None\" cannot be assigned to type \"str\"\n-       \"None\" is incompatible with \"str\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2372:22 - error: No overloads for \"join\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2372:35 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:718:72 - error: \"name\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:782:39 - error: Cannot access member \"values\" for type \"List[Any]\"\n-     Member \"values\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1265:35 - error: Cannot access member \"depflag\" for type \"Spec\"\n-     Member \"depflag\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1281:20 - error: Cannot access member \"name\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"name\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1348:23 - error: Argument of type \"set[Unknown | None]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n-     \"set[Unknown | None]\" is incompatible with \"Iterable[SupportsRichComparisonT@sorted]\"\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"Unknown | None\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n-         Type \"Unknown | None\" cannot be assigned to type \"SupportsRichComparison\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2021:45 - error: Argument of type \"AssertionError | BaseException\" cannot be assigned to parameter \"exception\" of type \"Exception\" in function \"add_failure\"\n-     Type \"AssertionError | BaseException\" cannot be assigned to type \"Exception\"\n-       \"BaseException\" is incompatible with \"Exception\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2405:35 - error: \"lib\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2405:52 - error: \"lib64\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2406:36 - error: \"lib\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2406:80 - error: \"lib\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2407:36 - error: \"lib64\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2407:82 - error: \"lib64\" is not a known member of \"None\" (reportOptionalMemberAccess)\n\n... (truncated 26582 lines) ...\n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_path.py:241:43 - error: \"_forward\" is protected and used outside of the class in which it is declared (reportPrivateUsage)\n- 3645 errors, 51 warnings, 0 informations \n+ 3646 errors, 51 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:184:5 - error: \"_member_map_\" overrides symbol of same name in class \"EnumMeta\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Mapping[str, Enum]\" is not the same as base type \"dict[str, Enum]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:189:20 - error: Expression of type \"Enum\" cannot be assigned to return type \"Self@Enum\"\n+     Type \"Enum\" cannot be assigned to type \"Self@Enum\" (reportReturnType)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:225:20 - error: Expression of type \"Enum\" cannot be assigned to return type \"Self@Enum\"\n+     Type \"Enum\" cannot be assigned to type \"Self@Enum\" (reportReturnType)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:260:20 - error: Expression of type \"Enum\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Enum\" cannot be assigned to type \"Self@Flags\" (reportReturnType)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:268:20 - error: Expression of type \"Enum\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Enum\" cannot be assigned to type \"Self@Flags\" (reportReturnType)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:317:35 - error: Argument of type \"ValuesView[Enum]\" cannot be assigned to parameter \"__sequence\" of type \"Iterable[_T@reduce]\" in function \"reduce\"\n+     \"ValuesView[Enum]\" is incompatible with \"Iterable[_T@reduce]\"\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"Enum\" is not a subtype of \"_T@reduce\"\n+         Type \"Enum\" cannot be assigned to type \"Self@Intents\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:877:20 - error: Expression of type \"Enum\" cannot be assigned to return type \"Self@Currency\"\n+     Type \"Enum\" cannot be assigned to type \"Self@Currency\" (reportReturnType)\n- 8418 errors, 88 warnings, 0 informations \n+ 8425 errors, 88 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved support for instance variables whose type is declared in a metaclass. Pyright now honors this type and enforces type consistency in derived classes. This addresses #7372. (#7387)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f4fac254a19ac2904df",
    "number": 7380,
    "body": "Previously if an LSP client didn't declare tagSupport in the client capabilities for publishDiagnostic, pyright didn't send diagnostics for unnecessary or deprecated diagnostics. I think it's still valuable to send these regardless of support for tags. When a client doesn't support tags, we can just skip attaching them.",
    "head_branch": "md-report-diags-without-tags",
    "is_a_fork": true,
    "comments": [
      "@microsoft-github-policy-service agree",
      "I don't agree with this change. These tagged hints are not meant to be presented as regular diagnostics, and they shouldn't be treated as such. There is no way to suppress them (e.g. through `# type: ignore`). They are meant to be subtle visual hints to the user. If the client doesn't support these tags, then they should not be generated.",
      "Can I suggest using an LSP extension for sending these hints, or the semantic tokens part of the spec instead? I don't use Python or Pyright with any regularity so I'm a little out of my depth here, but if these are not regular diagnostics then I believe it's improper to send them through textDocument/publishDiagnostic. Using tags this way is against the spirit of the spec in my interpretation:\r\n\r\n```typescript\r\nexport interface Diagnostic {\r\n  // ..\r\n\r\n\t/**\r\n\t * Additional metadata about the diagnostic.\r\n\t *\r\n\t * @since 3.15.0\r\n\t */\r\n\ttags?: DiagnosticTag[];\r\n\r\n  // ..\r\n}\r\n```\r\n\r\nI believe tags are meant to be additional context about a diagnostic - the diagnostic is still a diagnostic.\r\n\r\nOther clients like Neovim already present them as regular diagnostics with extra styling, and I think there is no way to supress the diagnostics there (though, again, I'm out of my water here - I'm not familiar with `# type: ignore`ing). Neovim's presentation, from a downstream bug report (https://github.com/helix-editor/helix/discussions/9765):\r\n\r\n![neovim-hint-deprecated](https://private-user-images.githubusercontent.com/53112668/309015995-e0894d65-15d1-4b85-88c6-fb881d28ef85.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDkyNTEwMjEsIm5iZiI6MTcwOTI1MDcyMSwicGF0aCI6Ii81MzExMjY2OC8zMDkwMTU5OTUtZTA4OTRkNjUtMTVkMS00Yjg1LTg4YzYtZmI4ODFkMjhlZjg1LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAyMjklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMjI5VDIzNTIwMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTNiZTVkOWE2ZWIzNDkwYjVlZjQ4MGQ5NGVkMzhjYjhiMGNhYjhlZWYwZGUyMWViYzIyMGRlOTI4NTA1N2NkNGYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.b2PtxQaY1yZulkmRmTo-oVVyHvJAlk0WSdD4dsYuMM8)\r\n\r\nIt's not a high priority suggestion at all as supporting tags in clients is very straightward. But I believe semantic tokens (specifically the [`SemanticTokenModifiers.deprecated`](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_semanticTokens) member) is a better fit for these hints.",
      "> [tagged hints]... are meant to be subtle visual hints to the user.\r\n\r\n@erictraut if that's the case then what is a user supposed to do if they're trying to enforce the `deprecateTypingAliases` code standard on a code base? The only recourse available is to set `typeCheckingMode` to strict which seems unnecessarily excessive for a simple deprecation warning.",
      "@kas2020-commits, you can enable the `reportDeprecated` diagnostic check independently of the type checking mode if you want pyright to return real diagnostics (not tagged hints) for the use of deprecated symbols.\r\n\r\n@the-mikedavis, I'm not interested in debating this. Please refer to [this thread](https://github.com/microsoft/pyright/issues/1118) where I made my perspective clear in this matter.\r\n\r\nAs for adding semantic token support, we have no plans to add any new LSP functionality to pyright at this time. Its LSP feature set is effectively frozen where it is. Pyright is focused on type checking. It has some basic LSP functionality, and that won't go away, but you shouldn't expect any new LSP functionality to be added in pyright. There is a full team at Microsoft building language server functionality on top of pyright in the Pylance language server."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f50ac254a19ac2904e0",
    "number": 7377,
    "body": "…ment is used in a loop and the subject expression is potentially narrowed as a result of the `match` statement. This addresses #7371.",
    "head_branch": "issue7371",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that leads to a false positive error when a `match` statement is used in a loop and the subject expression is potentially narrowed as a result of the `match` statement. This addresses #7371. (#7377)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f50ac254a19ac2904e1",
    "number": 7376,
    "body": "…verrides a base class method of the same name and uses different parameter names along with different types. This addresses #7373.",
    "head_branch": "issue7373",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/array.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/array.py:469:9 - error: Method \"__setitem__\" overrides class \"MutableSequence\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"slice\", override parameter is type \"int\"\n+       \"slice\" is incompatible with \"int\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/array.py:475:9 - error: Method \"__delitem__\" overrides class \"MutableSequence\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"slice\", override parameter is type \"int\"\n+       \"slice\" is incompatible with \"int\" (reportIncompatibleMethodOverride)\n- 297 errors, 6 warnings, 0 informations \n+ 299 errors, 6 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/multi.pyi:131:9 - error: Method \"__getitem__\" overrides class \"Index\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n- 1408 errors, 0 warnings, 0 informations \n+ 1409 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false negative when a dundered method overrides a base class method of the same name and uses different parameter names along with different types. This addresses #7373. (#7376)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f51ac254a19ac2904e2",
    "number": 7375,
    "body": "This commit https://github.com/microsoft/pyright/commit/e955fab18e5a2994c83d5909bbb644705dd4eb75 brought in a dependency change that requires node 14 or higher.\r\n\r\nThis change ups the minimum engine required to 14 so that we can use this dependency.",
    "head_branch": "rchiodo/drop_node_12",
    "is_a_fork": true,
    "comments": [
      "Oh and I did verify that node 14 works. At least I can run it like so:\r\n\r\n```\r\n(main) C:\\Users\\rchiodo\\source\\repos\\pyright\\packages\\pyright>nvm use 14\r\nNow using node v14.21.3 (64-bit)\r\n\r\n(main) C:\\Users\\rchiodo\\source\\repos\\pyright\\packages\\pyright>node --version\r\nv14.21.3\r\n\r\n(main) C:\\Users\\rchiodo\\source\\repos\\pyright\\packages\\pyright>node index.js --version\r\npyright 1.1.352\r\n```",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Drop support for node 12 (#7375)\n\n* Drop support for node 12\r\n\r\n* Forgot to update package-lock.json"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f52ac254a19ac2904e3",
    "number": 7374,
    "body": "…ameter name consistency. DO NOT MERGE - EXPERIMENT ONLY",
    "head_branch": "issue7373---experiment",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_redaction.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_redaction.py:128:9 - error: Method \"__getmember__\" overrides class \"DDCompiler\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"o\", override parameter is named \"s\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_redaction.py:142:9 - error: Method \"__ref__\" overrides class \"DDCompiler\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"x\", override parameter is named \"s\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/safety.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/safety.py:79:9 - error: Method \"__getitem__\" overrides class \"ObjectProxy\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"key\", override parameter is named \"item\" (reportIncompatibleMethodOverride)\n+     Parameter 1 name mismatch: base parameter is named \"self\", override parameter is named \"event\"\n- 10220 errors, 473 warnings, 0 informations \n+ 10223 errors, 473 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/array.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/array.py:469:9 - error: Method \"__setitem__\" overrides class \"MutableSequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"index\", override parameter is named \"key\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/array.py:472:9 - error: Method \"__getitem__\" overrides class \"MutableSequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"index\", override parameter is named \"key\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/array.py:475:9 - error: Method \"__delitem__\" overrides class \"MutableSequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"index\", override parameter is named \"key\" (reportIncompatibleMethodOverride)\n- 297 errors, 6 warnings, 0 informations \n+ 300 errors, 6 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1937:9 - error: Method \"__getitem__\" overrides class \"Sequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"index\", override parameter is named \"item\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lang.py:1018:9 - error: Method \"__getitem__\" overrides class \"MutableSequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"index\", override parameter is named \"item\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lang.py:1021:9 - error: Method \"__setitem__\" overrides class \"MutableSequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"index\", override parameter is named \"key\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lang.py:1024:9 - error: Method \"__delitem__\" overrides class \"MutableSequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"index\", override parameter is named \"key\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:120:9 - error: Method \"__getitem__\" overrides class \"Sequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"index\", override parameter is named \"item\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/builder.py:570:9 - error: Method \"__getitem__\" overrides class \"Sequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"index\", override parameter is named \"idx\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/variant.py:550:9 - error: Method \"__setitem__\" overrides class \"HashableMap\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"key\", override parameter is named \"name\"\n+     Parameter 3 name mismatch: base parameter is named \"value\", override parameter is named \"vspec\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/variant.py:779:9 - error: Method \"__getitem__\" overrides class \"Sequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"index\", override parameter is named \"idx\" (reportIncompatibleMethodOverride)\n+     Parameter 4 name mismatch: base parameter is named \"values\", override parameter is named \"jobs\"\n- 23797 errors, 74 warnings, 0 informations \n+ 23805 errors, 74 warnings, 0 informations \n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n+     Parameter 2 name mismatch: base parameter is named \"val\", override parameter is named \"data\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:54:9 - error: Method \"__call__\" overrides class \"Validator\" in an incompatible manner\n- 173 errors, 3 warnings, 0 informations \n+ 174 errors, 3 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py:34:9 - error: Method \"__contains__\" overrides class \"EnumMeta\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"obj\", override parameter is named \"other\" (reportIncompatibleMethodOverride)\n- 519 errors, 38 warnings, 7 informations \n+ 520 errors, 38 warnings, 7 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:172:9 - error: Method \"__contains__\" overrides class \"EnumMeta\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"obj\", override parameter is named \"member\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/trade.py:274:9 - error: Method \"__contains__\" overrides class \"Sequence\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"value\", override parameter is named \"item\" (reportIncompatibleMethodOverride)\n- 8418 errors, 88 warnings, 0 informations \n+ 8420 errors, 88 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/frame.pyi:143:9 - error: Method \"__getitem__\" overrides class \"_LocationIndexer\" in an incompatible manner\n+     No overload signature in override is compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/frame.pyi:152:9 - error: Method \"__setitem__\" overrides class \"_NDFrameIndexer\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"key\", override parameter is named \"idx\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/frame.pyi:213:9 - error: Method \"__getitem__\" overrides class \"_LocationIndexer\" in an incompatible manner\n+     No overload signature in override is compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/frame.pyi:221:9 - error: Method \"__setitem__\" overrides class \"_NDFrameIndexer\" in an incompatible manner\n+     No overload signature in override is compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:171:9 - error: Method \"__getitem__\" overrides class \"_LocationIndexer\" in an incompatible manner\n+     No overload signature in override is compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:176:9 - error: Method \"__setitem__\" overrides class \"_NDFrameIndexer\" in an incompatible manner\n+     No overload signature in override is compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:192:9 - error: Method \"__getitem__\" overrides class \"_LocationIndexer\" in an incompatible manner\n+     No overload signature in override is compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:219:9 - error: Method \"__setitem__\" overrides class \"_NDFrameIndexer\" in an incompatible manner\n+     No overload signature in override is compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/arrays/categorical.pyi:172:9 - error: Method \"__contains__\" overrides class \"ExtensionArray\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"item\", override parameter is named \"key\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/arrays/categorical.pyi:173:9 - error: Method \"__getitem__\" overrides class \"ExtensionArray\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"item\", override parameter is named \"key\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/arrays/datetimelike.pyi:43:9 - error: Method \"__getitem__\" overrides class \"ExtensionArray\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"item\", override parameter is named \"key\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/arrays/interval.pyi:37:9 - error: Method \"__getitem__\" overrides class \"ExtensionArray\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"item\", override parameter is named \"value\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/arrays/sparse/array.pyi:45:9 - error: Method \"__getitem__\" overrides class \"ExtensionArray\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"item\", override parameter is named \"key\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/groupby/generic.pyi:385:9 - error: Method \"__getattr__\" overrides class \"GroupBy\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"attr\", override parameter is named \"name\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/multi.pyi:131:9 - error: Method \"__getitem__\" overrides class \"Index\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n- 1408 errors, 0 warnings, 0 informations \n+ 1423 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f53ac254a19ac2904e4",
    "number": 7364,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.352",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f54ac254a19ac2904e5",
    "number": 7361,
    "body": "…r a variable assigned within a loop. This addresses #7217.",
    "head_branch": "issue7217",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in an incorrect \"Unbound\" type evaluation for a variable assigned within a loop. This addresses #7217. (#7361)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f55ac254a19ac2904e6",
    "number": 7360,
    "body": "…lution when an import within a `__init__.py` file uses the form `from .a import a`. This addresses #7233.",
    "head_branch": "issue7233",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in the import resolver that resulted in an incorrect resolution when an import within a `__init__.py` file uses the form `from .a import a`. This addresses #7233. (#7360)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f55ac254a19ac2904e7",
    "number": 7348,
    "body": "…r the RHS of `and` and `or` operators. This addresses #7245.",
    "head_branch": "issue7245-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/scripts/release.py:439:50 - error: Argument of type \"Literal[1]\" cannot be assigned to parameter \"default\" of type \"_T@getenv\" in function \"getenv\"\n-     \"Literal[1]\" is incompatible with \"bool\" (reportArgumentType)\n- 10199 errors, 471 warnings, 0 informations \n+ 10198 errors, 471 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/diff.py:232:29 - error: Argument of type \"Unknown | list[Unknown]\" cannot be assigned to parameter \"attributes\" of type \"str\" in function \"print_difference\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/diff.py:232:29 - error: Argument of type \"Unknown | list[str]\" cannot be assigned to parameter \"attributes\" of type \"str\" in function \"print_difference\"\n-     Type \"Unknown | list[Unknown]\" cannot be assigned to type \"str\"\n+     Type \"Unknown | list[str]\" cannot be assigned to type \"str\"\n-       \"list[Unknown]\" is incompatible with \"str\" (reportArgumentType)\n+       \"list[str]\" is incompatible with \"str\" (reportArgumentType)\n-     Operator \"<\" not supported for types \"Spec\" and \"Spec\" when expected type is \"Unknown\"\n+     Operator \"<\" not supported for types \"Spec\" and \"Spec\"\n-     Operator \"<\" not supported for types \"Spec\" and \"None\" when expected type is \"Unknown\"\n+     Operator \"<\" not supported for types \"Spec\" and \"None\"\n-     Operator \"<\" not supported for types \"None\" and \"Spec\" when expected type is \"Unknown\"\n+     Operator \"<\" not supported for types \"None\" and \"Spec\"\n-     Operator \"<\" not supported for types \"None\" and \"None\" when expected type is \"Unknown\" (reportOperatorIssue)\n+     Operator \"<\" not supported for types \"None\" and \"None\" (reportOperatorIssue)\n\noperator (https://github.com/canonical/operator)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2321:9 - error: Type of \"result\" is partially unknown\n+     Type of \"result\" is \"Any | list[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2322:36 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"d\" in function \"from_dict\"\n+     Argument type is \"Any | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2322:43 - error: Type of \"d\" is partially unknown\n+     Type of \"d\" is \"Any | Unknown\" (reportUnknownVariableType)\n+ /tmp/mypy_primer/projects/operator/test/pebble_cli.py\n+   /tmp/mypy_primer/projects/operator/test/pebble_cli.py:171:17 - error: Type of \"env\" is partially unknown\n+     Type of \"env\" is \"Any | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/pebble_cli.py:172:17 - error: Type of \"key\" is partially unknown\n+     Type of \"key\" is \"Any | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/pebble_cli.py:172:22 - error: Type of \"_\" is partially unknown\n+     Type of \"_\" is \"Any | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/pebble_cli.py:172:25 - error: Type of \"value\" is partially unknown\n+     Type of \"value\" is \"Any | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/pebble_cli.py:172:33 - error: Type of \"partition\" is partially unknown\n+     Type of \"partition\" is \"Any | Unknown\" (reportUnknownMemberType)\n- 37 errors, 0 warnings, 0 informations \n+ 45 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Refined the heuristic for when to use bidirectional type inference for the RHS of `and` and `or` operators. This addresses #7245. (#7348)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f56ac254a19ac2904e8",
    "number": 7347,
    "body": "…r the RHS of `and` and `or` operators. This addresses #7245.",
    "head_branch": "issue7245",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/scripts/release.py:439:50 - error: Argument of type \"Literal[1]\" cannot be assigned to parameter \"default\" of type \"_T@getenv\" in function \"getenv\"\n-     \"Literal[1]\" is incompatible with \"bool\" (reportArgumentType)\n- 10199 errors, 471 warnings, 0 informations \n+ 10198 errors, 471 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/diff.py:232:29 - error: Argument of type \"Unknown | list[Unknown]\" cannot be assigned to parameter \"attributes\" of type \"str\" in function \"print_difference\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/diff.py:232:29 - error: Argument of type \"Unknown | list[str]\" cannot be assigned to parameter \"attributes\" of type \"str\" in function \"print_difference\"\n-     Type \"Unknown | list[Unknown]\" cannot be assigned to type \"str\"\n+     Type \"Unknown | list[str]\" cannot be assigned to type \"str\"\n-       \"list[Unknown]\" is incompatible with \"str\" (reportArgumentType)\n+       \"list[str]\" is incompatible with \"str\" (reportArgumentType)\n-     Operator \"<\" not supported for types \"Spec\" and \"Spec\" when expected type is \"Unknown\"\n+     Operator \"<\" not supported for types \"Spec\" and \"Spec\"\n-     Operator \"<\" not supported for types \"Spec\" and \"None\" when expected type is \"Unknown\"\n+     Operator \"<\" not supported for types \"Spec\" and \"None\"\n-     Operator \"<\" not supported for types \"None\" and \"Spec\" when expected type is \"Unknown\"\n+     Operator \"<\" not supported for types \"None\" and \"Spec\"\n-     Operator \"<\" not supported for types \"None\" and \"None\" when expected type is \"Unknown\" (reportOperatorIssue)\n+     Operator \"<\" not supported for types \"None\" and \"None\" (reportOperatorIssue)\n\noperator (https://github.com/canonical/operator)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:814:13 - error: Type of \"d\" is partially unknown\n+     Type of \"d\" is \"LayerDict | dict[Unknown, Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1760:9 - error: Return type, \"dict[str | Unknown, str | Unknown]\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1767:9 - error: Type of \"params\" is partially unknown\n+     Type of \"params\" is \"list[tuple[str, str]] | dict[Unknown, Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1768:9 - error: Type of \"options\" is partially unknown\n+     Type of \"options\" is \"dict[str | Unknown, str | Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1768:35 - error: Type of \"key\" is partially unknown\n+     Type of \"key\" is \"str | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1768:40 - error: Type of \"value\" is partially unknown\n+     Type of \"value\" is \"str | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1771:16 - error: Return type, \"dict[str | Unknown, str | Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2137:9 - error: Type of \"options\" is partially unknown\n+     Type of \"options\" is \"dict[str | Unknown, str | Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2138:9 - error: Type of \"boundary\" is partially unknown\n+     Type of \"boundary\" is \"str | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2138:20 - error: Type of \"get\" is partially unknown\n+     Type of \"get\" is \"Overload[(__key: str | Unknown, /) -> (str | Unknown | None), (__key: str | Unknown, __default: str | Unknown, /) -> (str | Unknown), (__key: str | Unknown, __default: _T@get, /) -> (str | Unknown | _T@get)]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2142:31 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"boundary\" in function \"__init__\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2321:9 - error: Type of \"result\" is partially unknown\n+     Type of \"result\" is \"Any | list[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2322:36 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"d\" in function \"from_dict\"\n+     Argument type is \"Any | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2322:43 - error: Type of \"d\" is partially unknown\n+     Type of \"d\" is \"Any | Unknown\" (reportUnknownVariableType)\n+ /tmp/mypy_primer/projects/operator/test/pebble_cli.py\n+   /tmp/mypy_primer/projects/operator/test/pebble_cli.py:171:17 - error: Type of \"env\" is partially unknown\n+     Type of \"env\" is \"Any | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/pebble_cli.py:172:17 - error: Type of \"key\" is partially unknown\n+     Type of \"key\" is \"Any | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/pebble_cli.py:172:22 - error: Type of \"_\" is partially unknown\n+     Type of \"_\" is \"Any | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/pebble_cli.py:172:25 - error: Type of \"value\" is partially unknown\n+     Type of \"value\" is \"Any | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/pebble_cli.py:172:33 - error: Type of \"partition\" is partially unknown\n+     Type of \"partition\" is \"Any | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1009:9 - error: Type of \"errors\" is partially unknown\n+     Type of \"errors\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1013:9 - error: Type of \"dirs\" is partially unknown\n+     Type of \"dirs\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1014:9 - error: Type of \"want\" is partially unknown\n+     Type of \"want\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1015:9 - error: Type of \"want_dirs\" is partially unknown\n+     Type of \"want_dirs\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1105:35 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"path\" in function \"normpath\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1105:42 - error: Type of \"f\" is partially unknown\n+     Type of \"f\" is \"str | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1105:47 - error: Type of \"want\" is partially unknown\n+     Type of \"want\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1116:12 - error: Type of \"want\" is partially unknown\n+     Type of \"want\" is \"set[str | Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1116:76 - error: Type of \"want\" is partially unknown\n+     Type of \"want\" is \"set[str | Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1214:8 - error: Type of \"dirs\" is partially unknown\n+     Type of \"dirs\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1215:13 - error: Type of \"directory\" is partially unknown\n+     Type of \"directory\" is \"str | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1215:26 - error: Type of \"dirs\" is partially unknown\n+     Type of \"dirs\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1216:49 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"paths\" in function \"join\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1235:16 - error: Type of \"errors\" is partially unknown\n+     Type of \"errors\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1239:12 - error: Type of \"errors\" is partially unknown\n+     Type of \"errors\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1240:55 - error: Type of \"errors\" is partially unknown\n+     Type of \"errors\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1241:9 - error: Type of \"fpath\" is partially unknown\n+     Type of \"fpath\" is \"str | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1241:18 - error: Type of \"want\" is partially unknown\n+     Type of \"want\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1242:25 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"path\" in function \"exists\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1243:9 - error: Type of \"fdir\" is partially unknown\n+     Type of \"fdir\" is \"str | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1243:17 - error: Type of \"want_dirs\" is partially unknown\n+     Type of \"want_dirs\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1244:24 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"path\" in function \"isdir\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1250:8 - error: Type of \"dirs\" is partially unknown\n+     Type of \"dirs\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1251:13 - error: Type of \"directory\" is partially unknown\n+     Type of \"directory\" is \"str | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1251:26 - error: Type of \"dirs\" is partially unknown\n+     Type of \"dirs\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1252:24 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"path\" in function \"make_dir\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1259:16 - error: Type of \"errors\" is partially unknown\n+     Type of \"errors\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1263:12 - error: Type of \"errors\" is partially unknown\n+     Type of \"errors\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1264:55 - error: Type of \"errors\" is partially unknown\n+     Type of \"errors\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1265:9 - error: Type of \"fpath\" is partially unknown\n+     Type of \"fpath\" is \"str | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_model.py:1265:18 - error: Type of \"want\" is partially unknown\n+     Type of \"want\" is \"Set[str] | set[Unknown]\" (reportUnknownMemberType)\n\n... (truncated 19 lines) ...\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f57ac254a19ac2904e9",
    "number": 7341,
    "body": "… dict of the wrong type to a function that contains a positional-only parameter marker plus one or more keyword parameters. This addresses #7271.",
    "head_branch": "issue7271",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false negative when passing an unpacked dict of the wrong type to a function that contains a positional-only parameter marker plus one or more keyword parameters. This addresses #7271. (#7341)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f58ac254a19ac2904ea",
    "number": 7340,
    "body": "…gning a value within a loop and the target variable has a declared type of a constrained type variable. This addresses #7302.",
    "head_branch": "issue7302-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that leads to a false positive type violation when reassigning a value within a loop and the target variable has a declared type of a constrained type variable. This addresses #7302. (#7340)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f59ac254a19ac2904eb",
    "number": 7339,
    "body": "pull-pylance-with-pyright-1.1.283",
    "head_branch": "pull-pylance-with-pyright-1.1.283",
    "is_a_fork": true,
    "comments": [
      "\n@rpreslar4765 please read the following Contributor License Agreement(CLA). If you agree with the CLA, please reply with the following information.\n\n```\n@microsoft-github-policy-service agree [company=\"{your company}\"]\n```\n\n> Options:\n> - (default - no company specified) I have sole ownership of intellectual property rights to my Submissions and I am not making Submissions in the course of work for my employer.\n>```\n>@microsoft-github-policy-service agree\n>```\n> - (when company given) I am making Submissions in the course of work for my employer (or my employer has intellectual property rights in my Submissions by contract or applicable law). I have permission from my employer to make Submissions and enter into this Agreement on behalf of my employer. By signing below, the defined term “You” includes me and my employer.\n>```\n>@microsoft-github-policy-service agree company=\"Microsoft\"\n>```\n\n<details>\n    <summary>Contributor License Agreement</summary>\n    \n### Contribution License Agreement\nThis Contribution License Agreement (**“Agreement”**) is agreed to by the party signing below (**“You”**),\nand conveys certain license rights to Microsoft Corporation and its affiliates (“Microsoft”) for Your\ncontributions to Microsoft open source projects. This Agreement is effective as of the latest signature\ndate below.\n1. **Definitions**.\n**“Code”** means the computer software code, whether in human-readable or machine-executable form,\nthat is delivered by You to Microsoft under this Agreement.\n**“Project”** means any of the projects owned or managed by Microsoft and offered under a license\napproved by the Open Source Initiative (www.opensource.org).\n**“Submit”** is the act of uploading, submitting, transmitting, or distributing code or other content to any\nProject, including but not limited to communication on electronic mailing lists, source code control\nsystems, and issue tracking systems that are managed by, or on behalf of, the Project for the purpose of\ndiscussing and improving that Project, but excluding communication that is conspicuously marked or\notherwise designated in writing by You as “Not a Submission.”\n**“Submission”** means the Code and any other copyrightable material Submitted by You, including any\nassociated comments and documentation.\n2. **Your Submission**. You must agree to the terms of this Agreement before making a Submission to any\nProject. This Agreement covers any and all Submissions that You, now or in the future (except as\ndescribed in Section 4 below), Submit to any Project.\n3. **Originality of Work**. You represent that each of Your Submissions is entirely Your original work.\nShould You wish to Submit materials that are not Your original work, You may Submit them separately\nto the Project if You (a) retain all copyright and license information that was in the materials as You\nreceived them, (b) in the description accompanying Your Submission, include the phrase “Submission\ncontaining materials of a third party:” followed by the names of the third party and any licenses or other\nrestrictions of which You are aware, and (c) follow any other instructions in the Project’s written\nguidelines concerning Submissions.\n4. **Your Employer**. References to “employer” in this Agreement include Your employer or anyone else\nfor whom You are acting in making Your Submission, e.g. as a contractor, vendor, or agent. If Your\nSubmission is made in the course of Your work for an employer or Your employer has intellectual\nproperty rights in Your Submission by contract or applicable law, You must secure permission from Your\nemployer to make the Submission before signing this Agreement. In that case, the term “You” in this\nAgreement will refer to You and the employer collectively. If You change employers in the future and\ndesire to Submit additional Submissions for the new employer, then You agree to sign a new Agreement\nand secure permission from the new employer before Submitting those Submissions.\n5. **Licenses**.\n  * **Copyright License**. You grant Microsoft, and those who receive the Submission directly or\nindirectly from Microsoft, a perpetual, worldwide, non-exclusive, royalty-free, irrevocable license in the\nSubmission to reproduce, prepare derivative works of, publicly display, publicly perform, and distribute\nthe Submission and such derivative works, and to sublicense any or all of the foregoing rights to third\nparties.\n  * **Patent License**. You grant Microsoft, and those who receive the Submission directly or\nindirectly from Microsoft, a perpetual, worldwide, non-exclusive, royalty-free, irrevocable license under\nYour patent claims that are necessarily infringed by the Submission or the combination of the\nSubmission with the Project to which it was Submitted to make, have made, use, offer to sell, sell and\nimport or otherwise dispose of the Submission alone or with the Project.\n  * **Other Rights Reserved**. Each party reserves all rights not expressly granted in this Agreement.\nNo additional licenses or rights whatsoever (including, without limitation, any implied licenses) are\ngranted by implication, exhaustion, estoppel or otherwise.\n6. **Representations and Warranties**. You represent that You are legally entitled to grant the above\nlicenses. You represent that each of Your Submissions is entirely Your original work (except as You may\nhave disclosed under Section 3). You represent that You have secured permission from Your employer to\nmake the Submission in cases where Your Submission is made in the course of Your work for Your\nemployer or Your employer has intellectual property rights in Your Submission by contract or applicable\nlaw. If You are signing this Agreement on behalf of Your employer, You represent and warrant that You\nhave the necessary authority to bind the listed employer to the obligations contained in this Agreement.\nYou are not expected to provide support for Your Submission, unless You choose to do so. UNLESS\nREQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING, AND EXCEPT FOR THE WARRANTIES\nEXPRESSLY STATED IN SECTIONS 3, 4, AND 6, THE SUBMISSION PROVIDED UNDER THIS AGREEMENT IS\nPROVIDED WITHOUT WARRANTY OF ANY KIND, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY OF\nNONINFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE.\n7. **Notice to Microsoft**. You agree to notify Microsoft in writing of any facts or circumstances of which\nYou later become aware that would make Your representations in this Agreement inaccurate in any\nrespect.\n8. **Information about Submissions**. You agree that contributions to Projects and information about\ncontributions may be maintained indefinitely and disclosed publicly, including Your name and other\ninformation that You submit with Your Submission.\n9. **Governing Law/Jurisdiction**. This Agreement is governed by the laws of the State of Washington, and\nthe parties consent to exclusive jurisdiction and venue in the federal courts sitting in King County,\nWashington, unless no federal subject matter jurisdiction exists, in which case the parties consent to\nexclusive jurisdiction and venue in the Superior Court of King County, Washington. The parties waive all\ndefenses of lack of personal jurisdiction and forum non-conveniens.\n10. **Entire Agreement/Assignment**. This Agreement is the entire agreement between the parties, and\nsupersedes any and all prior agreements, understandings or communications, written or oral, between\nthe parties relating to the subject matter hereof. This Agreement may be assigned by Microsoft.\n\n</details>\n<!-- Policy app identification https://img.shields.io/static/v1?label=ContributorLicenseAgreement. -->",
      "@rpreslar4765, I'm assuming this PR was created by mistake. If you're actually trying to submit a PR, please clarify what you're attempting to change."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f5aac254a19ac2904ec",
    "number": 7338,
    "body": "…gning a value within a loop and the target variable has a declared type of a constrained type variable. This addresses #7302.",
    "head_branch": "issue7302",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:477:27 - error: Cannot access member \"signature\" for type \"GroupMixin[Any]\"\n+     Member \"signature\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:477:47 - error: Cannot access member \"invoke_without_command\" for type \"GroupMixin[Any]\"\n+     Member \"invoke_without_command\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:478:39 - error: Cannot access member \"name\" for type \"GroupMixin[Any]\"\n+     Member \"name\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:480:39 - error: Cannot access member \"name\" for type \"GroupMixin[Any]\"\n+     Member \"name\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:480:59 - error: Cannot access member \"signature\" for type \"GroupMixin[Any]\"\n+     Member \"signature\" is unknown (reportAttributeAccessIssue)\n- 35 errors, 75 warnings, 0 informations \n+ 40 errors, 75 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:477:27 - error: Cannot access member \"signature\" for type \"GroupMixin[Any]\"\n+     Member \"signature\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:477:47 - error: Cannot access member \"invoke_without_command\" for type \"GroupMixin[Any]\"\n+     Member \"invoke_without_command\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:478:39 - error: Cannot access member \"name\" for type \"GroupMixin[Any]\"\n+     Member \"name\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:480:39 - error: Cannot access member \"name\" for type \"GroupMixin[Any]\"\n+     Member \"name\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:480:59 - error: Cannot access member \"signature\" for type \"GroupMixin[Any]\"\n+     Member \"signature\" is unknown (reportAttributeAccessIssue)\n- 35 errors, 75 warnings, 0 informations \n+ 40 errors, 75 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f5bac254a19ac2904ed",
    "number": 7335,
    "body": "…nce methods. This addresses https://github.com/microsoft/pyright/issues/7343.",
    "head_branch": "issue5515",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for call-site return type inference for class and instance methods. This addresses https://github.com/microsoft/pylance-release/issues/5515. (#7335)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f5cac254a19ac2904ee",
    "number": 7332,
    "body": "I got a bit irritated in my edit-build-debug inner loop with the time to run webpack.\r\n\r\nThis commit adds a new launch target called \"Pyright CLI (pyright-internal)\" which bypasses webpack and just runs the package straight from the packages/pyright-internal/out directory where tsc has built it.",
    "head_branch": "debugging",
    "is_a_fork": true,
    "comments": [
      "\n@ljw1004 please read the following Contributor License Agreement(CLA). If you agree with the CLA, please reply with the following information.\n\n```\n@microsoft-github-policy-service agree [company=\"{your company}\"]\n```\n\n> Options:\n> - (default - no company specified) I have sole ownership of intellectual property rights to my Submissions and I am not making Submissions in the course of work for my employer.\n>```\n>@microsoft-github-policy-service agree\n>```\n> - (when company given) I am making Submissions in the course of work for my employer (or my employer has intellectual property rights in my Submissions by contract or applicable law). I have permission from my employer to make Submissions and enter into this Agreement on behalf of my employer. By signing below, the defined term “You” includes me and my employer.\n>```\n>@microsoft-github-policy-service agree company=\"Microsoft\"\n>```\n\n<details>\n    <summary>Contributor License Agreement</summary>\n    \n### Contribution License Agreement\nThis Contribution License Agreement (**“Agreement”**) is agreed to by the party signing below (**“You”**),\nand conveys certain license rights to Microsoft Corporation and its affiliates (“Microsoft”) for Your\ncontributions to Microsoft open source projects. This Agreement is effective as of the latest signature\ndate below.\n1. **Definitions**.\n**“Code”** means the computer software code, whether in human-readable or machine-executable form,\nthat is delivered by You to Microsoft under this Agreement.\n**“Project”** means any of the projects owned or managed by Microsoft and offered under a license\napproved by the Open Source Initiative (www.opensource.org).\n**“Submit”** is the act of uploading, submitting, transmitting, or distributing code or other content to any\nProject, including but not limited to communication on electronic mailing lists, source code control\nsystems, and issue tracking systems that are managed by, or on behalf of, the Project for the purpose of\ndiscussing and improving that Project, but excluding communication that is conspicuously marked or\notherwise designated in writing by You as “Not a Submission.”\n**“Submission”** means the Code and any other copyrightable material Submitted by You, including any\nassociated comments and documentation.\n2. **Your Submission**. You must agree to the terms of this Agreement before making a Submission to any\nProject. This Agreement covers any and all Submissions that You, now or in the future (except as\ndescribed in Section 4 below), Submit to any Project.\n3. **Originality of Work**. You represent that each of Your Submissions is entirely Your original work.\nShould You wish to Submit materials that are not Your original work, You may Submit them separately\nto the Project if You (a) retain all copyright and license information that was in the materials as You\nreceived them, (b) in the description accompanying Your Submission, include the phrase “Submission\ncontaining materials of a third party:” followed by the names of the third party and any licenses or other\nrestrictions of which You are aware, and (c) follow any other instructions in the Project’s written\nguidelines concerning Submissions.\n4. **Your Employer**. References to “employer” in this Agreement include Your employer or anyone else\nfor whom You are acting in making Your Submission, e.g. as a contractor, vendor, or agent. If Your\nSubmission is made in the course of Your work for an employer or Your employer has intellectual\nproperty rights in Your Submission by contract or applicable law, You must secure permission from Your\nemployer to make the Submission before signing this Agreement. In that case, the term “You” in this\nAgreement will refer to You and the employer collectively. If You change employers in the future and\ndesire to Submit additional Submissions for the new employer, then You agree to sign a new Agreement\nand secure permission from the new employer before Submitting those Submissions.\n5. **Licenses**.\n  * **Copyright License**. You grant Microsoft, and those who receive the Submission directly or\nindirectly from Microsoft, a perpetual, worldwide, non-exclusive, royalty-free, irrevocable license in the\nSubmission to reproduce, prepare derivative works of, publicly display, publicly perform, and distribute\nthe Submission and such derivative works, and to sublicense any or all of the foregoing rights to third\nparties.\n  * **Patent License**. You grant Microsoft, and those who receive the Submission directly or\nindirectly from Microsoft, a perpetual, worldwide, non-exclusive, royalty-free, irrevocable license under\nYour patent claims that are necessarily infringed by the Submission or the combination of the\nSubmission with the Project to which it was Submitted to make, have made, use, offer to sell, sell and\nimport or otherwise dispose of the Submission alone or with the Project.\n  * **Other Rights Reserved**. Each party reserves all rights not expressly granted in this Agreement.\nNo additional licenses or rights whatsoever (including, without limitation, any implied licenses) are\ngranted by implication, exhaustion, estoppel or otherwise.\n6. **Representations and Warranties**. You represent that You are legally entitled to grant the above\nlicenses. You represent that each of Your Submissions is entirely Your original work (except as You may\nhave disclosed under Section 3). You represent that You have secured permission from Your employer to\nmake the Submission in cases where Your Submission is made in the course of Your work for Your\nemployer or Your employer has intellectual property rights in Your Submission by contract or applicable\nlaw. If You are signing this Agreement on behalf of Your employer, You represent and warrant that You\nhave the necessary authority to bind the listed employer to the obligations contained in this Agreement.\nYou are not expected to provide support for Your Submission, unless You choose to do so. UNLESS\nREQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING, AND EXCEPT FOR THE WARRANTIES\nEXPRESSLY STATED IN SECTIONS 3, 4, AND 6, THE SUBMISSION PROVIDED UNDER THIS AGREEMENT IS\nPROVIDED WITHOUT WARRANTY OF ANY KIND, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY OF\nNONINFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE.\n7. **Notice to Microsoft**. You agree to notify Microsoft in writing of any facts or circumstances of which\nYou later become aware that would make Your representations in this Agreement inaccurate in any\nrespect.\n8. **Information about Submissions**. You agree that contributions to Projects and information about\ncontributions may be maintained indefinitely and disclosed publicly, including Your name and other\ninformation that You submit with Your Submission.\n9. **Governing Law/Jurisdiction**. This Agreement is governed by the laws of the State of Washington, and\nthe parties consent to exclusive jurisdiction and venue in the federal courts sitting in King County,\nWashington, unless no federal subject matter jurisdiction exists, in which case the parties consent to\nexclusive jurisdiction and venue in the Superior Court of King County, Washington. The parties waive all\ndefenses of lack of personal jurisdiction and forum non-conveniens.\n10. **Entire Agreement/Assignment**. This Agreement is the entire agreement between the parties, and\nsupersedes any and all prior agreements, understandings or communications, written or oral, between\nthe parties relating to the subject matter hereof. This Agreement may be assigned by Microsoft.\n\n</details>\n<!-- Policy app identification https://img.shields.io/static/v1?label=ContributorLicenseAgreement. -->",
      "I wonder if you could make this work like \"Pyright extension (watch)\" instead so it would do an incremental build whenever you saved a file, but otherwise no build would be required on relaunch.",
      "@microsoft-github-policy-service agree company=\"Meta\"",
      "> I wonder if you could make this work like \"Pyright extension (watch)\" instead so it would do an incremental build whenever you saved a file, but otherwise no build would be required on relaunch.\r\n\r\nOh that's beautiful. I hadn't understood this \"preLaunchTask / isBackground:true / beginsPattern+endsPattern\" until now. Thanks for the pointer. I'll create another PR for it."
    ],
    "commit_messages": [
      "Debugging (#7332)\n\n* launch.json CLI debug that bypasses webpack\r\n\r\nI got a bit irritated in my edit-build-debug inner loop with the time to run webpack.\r\n\r\nThis commit adds a new launch target called \"Pyright CLI (pyright-internal)\" which bypasses webpack and just runs the package straight from the packages/pyright-internal/out directory where tsc has built it.\r\n\r\n* fix outFiles directive\r\n\r\nThe VSCode docs say about outFiles:\r\n> By default, VS Code will search your entire workspace, excluding node_modules, for sourcemaps. In large workspaces, this search might be slow. You can configure the locations where VS Code will search for source maps by setting the outFiles attribute in your launch.json.\r\n\r\nI guess this is the right change to make? it didn't make any difference in VSCode debugger's ability to hit breakpoints, though.\r\n\r\n---------\r\n\r\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f5dac254a19ac2904ef",
    "number": 7313,
    "body": "…within TypedDicts). You must set enableExperimentalFeatures to true for now. This addresses #7232.",
    "head_branch": "pep728",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Implemented provisional support for PEP 728 (support for extra items within TypedDicts). You must set enableExperimentalFeatures to true for now. This addresses #7232. (#7313)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f5eac254a19ac2904f0",
    "number": 7305,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.351",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f5eac254a19ac2904f1",
    "number": 7304,
    "body": "Bumps [ip](https://github.com/indutny/node-ip) from 2.0.0 to 2.0.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/indutny/node-ip/commit/3b0994a74eca51df01f08c40d6a65ba0e1845d04\"><code>3b0994a</code></a> 2.0.1</li>\n<li><a href=\"https://github.com/indutny/node-ip/commit/32f468f1245574785ec080705737a579be1223aa\"><code>32f468f</code></a> lib: fixed CVE-2023-42282 and added unit test</li>\n<li>See full diff in <a href=\"https://github.com/indutny/node-ip/compare/v2.0.0...v2.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ip&package-manager=npm_and_yarn&previous-version=2.0.0&new-version=2.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/ip-2.0.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump ip from 2.0.0 to 2.0.1 (#7304)\n\nBumps [ip](https://github.com/indutny/node-ip) from 2.0.0 to 2.0.1.\r\n- [Commits](https://github.com/indutny/node-ip/compare/v2.0.0...v2.0.1)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: ip\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f5fac254a19ac2904f2",
    "number": 7298,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action\r\n\r\n- Remove diagnostics for unmatched #region/#endregion comments (https://github.com/microsoft/pyrx/pull/4685)\r\n- Fix looking for parent directories when no workspace (https://github.com/microsoft/pyrx/pull/4680)\r\n- Improve add import behaviors (https://github.com/microsoft/pyrx/pull/4644)\r\n- Move to node 18 as VS code is now using 18 (https://github.com/microsoft/pyrx/pull/4670)\r\n- Fix auto import grouping bug (https://github.com/microsoft/pyrx/pull/4672)",
    "head_branch": "pull-pylance-with-pyright-1.1.351",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.351 (#7298)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f60ac254a19ac2904f3",
    "number": 7297,
    "body": "…hat starts with a double underscore) that is located after a non-position-only parameter. This addresses #7290.",
    "head_branch": "issue7290",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_dataclasses.py:188:46 - error: Position-only parameter not allowed after parameter that is not position-only (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_dataclasses.py:188:60 - error: Position-only parameter not allowed after parameter that is not position-only (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_model_construction.py:100:66 - error: Position-only parameter not allowed after parameter that is not position-only (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_model_construction.py:264:46 - error: Position-only parameter not allowed after parameter that is not position-only (reportGeneralTypeIssues)\n- 71 errors, 0 warnings, 0 informations \n+ 75 errors, 0 warnings, 0 informations \n\nbidict (https://github.com/jab/bidict)\n+   /tmp/mypy_primer/projects/bidict/bidict/_orderedbase.py:50:40 - error: Position-only parameter not allowed after parameter that is not position-only (reportGeneralTypeIssues)\n- 36 errors, 2 warnings, 0 informations \n+ 37 errors, 2 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py:106:43 - error: Position-only parameter not allowed after parameter that is not position-only (reportGeneralTypeIssues)\n- 518 errors, 29 warnings, 7 informations \n+ 519 errors, 29 warnings, 7 informations \n\n```"
    ],
    "commit_messages": [
      "Added check for the use of an implicit position-only parameter (one that starts with a double underscore) that is located after a non-position-only parameter. This addresses #7290. (#7297)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f61ac254a19ac2904f4",
    "number": 7296,
    "body": "…gets a generic function that uses a default argument for one of the generic parameters. This addresses #7291.",
    "head_branch": "issue7291",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type evaluation for a call that targets a generic function that uses a default argument for one of the generic parameters. This addresses #7291. (#7296)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f62ac254a19ac2904f5",
    "number": 7287,
    "body": "…le value that includes an unpacked TypeVarTuple to another tuple that also includes an unpacked TypeVarTuple. This addresses #7285.",
    "head_branch": "issue7285",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that results in a false positive error when assigning a tuple value that includes an unpacked TypeVarTuple to another tuple that also includes an unpacked TypeVarTuple. This addresses #7285. (#7287)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f63ac254a19ac2904f6",
    "number": 7286,
    "body": "…ng an empty list or dict expression to an index expression subscripted with a slice. This addresses #7278.",
    "head_branch": "issue7278",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npyinstrument (https://github.com/joerick/pyinstrument)\n- /tmp/mypy_primer/projects/pyinstrument/pyinstrument/__main__.py\n-   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/__main__.py:52:9 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\"\n-     Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/__main__.py:53:9 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\"\n-     Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n- 41 errors, 5 warnings, 0 informations \n+ 39 errors, 5 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_class.py:400:64 - warning: Unnecessary \"# pyright: ignore\" comment\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_class.py:401:63 - warning: Unnecessary \"# pyright: ignore\" comment\n- 728 errors, 32 warnings, 0 informations \n+ 728 errors, 34 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataset.py:197:13 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n- 57 errors, 145 warnings, 0 informations \n+ 57 errors, 144 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1506:13 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2090:17 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:267:20 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:271:33 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:286:51 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:289:51 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:100:19 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:408:1 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:408:44 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:138:21 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:278:21 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:864:9 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:864:9 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3120:17 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3123:17 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3126:17 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3129:17 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3132:17 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/context/autocomplete.py:88:13 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/context/autocomplete.py:88:13 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/context/autocomplete.py:90:27 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:609:20 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:615:21 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__delitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:631:24 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:638:24 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:642:9 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:658:25 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__delitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:661:21 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__delitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:665:21 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__delitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_clients.py:1109:37 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_clients.py:1124:16 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_components.py:1073:33 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_components.py:1083:33 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_components.py:1084:39 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_components.py:1094:33 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_components.py:1106:21 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_components.py:1120:16 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_components.py:1136:37 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_components.py:1157:37 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:936:9 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:944:16 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:964:9 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:972:16 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:985:16 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:1016:9 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:1024:16 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:1030:9 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__setitem__\" (reportUnknownArgumentType)\n\n... (truncated 26 lines) ...\n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:56:1 - error: Argument type is unknown\n-     Argument corresponds to parameter \"value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/menu_bar.py:224:26 - error: Argument type is unknown\n-     Argument corresponds to parameter \"__i\" in function \"__getitem__\" (reportUnknownArgumentType)\n- 516 errors, 29 warnings, 7 informations \n+ 514 errors, 29 warnings, 7 informations \n\ntrio (https://github.com/python-trio/trio)\n-   /tmp/mypy_primer/projects/trio/src/trio/_socket.py:519:13 - error: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/trio/src/trio/_socket.py:521:13 - error: Argument type is unknown\n-     Argument corresponds to parameter \"__value\" in function \"__setitem__\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/trio/src/trio/_core/_tests/test_guest_mode.py:638:23 - error: Argument type is unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n- 3642 errors, 10 warnings, 0 informations \n+ 3639 errors, 10 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a false positive `reportUnknownArgumentType` error when assigning an empty list or dict expression to an index expression subscripted with a slice. This addresses #7278. (#7286)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f64ac254a19ac2904f7",
    "number": 7283,
    "body": "…at resulted in incorrect narrowing in the negative (fall-through) case. This addresses #7280.",
    "head_branch": "issue7280",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3008:18 - error: Pattern will never be matched for subject type \"Never\" (reportUnnecessaryComparison)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3010:18 - error: Pattern will never be matched for subject type \"Never\" (reportUnnecessaryComparison)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3012:18 - error: Pattern will never be matched for subject type \"Never\" (reportUnnecessaryComparison)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3014:18 - error: Pattern will never be matched for subject type \"Never\" (reportUnnecessaryComparison)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3016:18 - error: Pattern will never be matched for subject type \"Never\" (reportUnnecessaryComparison)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3018:18 - error: Pattern will never be matched for subject type \"Never\" (reportUnnecessaryComparison)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3020:18 - error: Pattern will never be matched for subject type \"Never\" (reportUnnecessaryComparison)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3022:18 - error: Pattern will never be matched for subject type \"Never\" (reportUnnecessaryComparison)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3024:18 - error: Pattern will never be matched for subject type \"Never\" (reportUnnecessaryComparison)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3026:18 - error: Pattern will never be matched for subject type \"Never\" (reportUnnecessaryComparison)\n- 8406 errors, 25 warnings, 0 informations \n+ 8416 errors, 25 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug in the type narrowing logic for class pattern matching that resulted in incorrect narrowing in the negative (fall-through) case. This addresses #7280. (#7283)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f65ac254a19ac2904f8",
    "number": 7266,
    "body": "…mber` value is assigned to a class-scoped variable with a type annotation in an Enum class. This addresses #7265.",
    "head_branch": "issue7265",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false positive error when a `enum.nonmember` value is assigned to a class-scoped variable with a type annotation in an Enum class. This addresses #7265. (#7266)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f66ac254a19ac2904f9",
    "number": 7259,
    "body": "…ned within a named tuple is overridden by a subclass. This addresses #7256.",
    "head_branch": "issue7256",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false positive error when a method defined within a named tuple is overridden by a subclass. This addresses #7256. (#7259)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f67ac254a19ac2904fa",
    "number": 7253,
    "body": "… an `Enum` subclass overrides `__new__` or `__init__` and then a subclass of that class assigns tuple values when defining enum members. This addresses #7252.",
    "head_branch": "issue7252",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1423:11 - error: Expected 1 positional argument (reportCallIssue)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1424:12 - error: Expected 1 positional argument (reportCallIssue)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1425:13 - error: Expected 1 positional argument (reportCallIssue)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1426:12 - error: Expected 1 positional argument (reportCallIssue)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1427:13 - error: Expected 1 positional argument (reportCallIssue)\n- 8401 errors, 25 warnings, 0 informations \n+ 8406 errors, 25 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a recent regression that results in a false positive error when an `Enum` subclass overrides `__new__` or `__init__` and then a subclass of that class assigns tuple values when defining enum members. This addresses #7252. (#7253)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f67ac254a19ac2904fb",
    "number": 7246,
    "body": "…n\" error if an overloaded function is passed through a decorator that uses a ParamSpec. This addresses #7221.",
    "head_branch": "issue7221",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that results in a false positive \"no overload implementation\" error if an overloaded function is passed through a decorator that uses a ParamSpec. This addresses #7221. (#7246)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f68ac254a19ac2904fc",
    "number": 7240,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action\r\n\r\n- fixed \"npm run update:all\" and update npm packages\r\n- updated some pipelines to set yaml variables the new way\r\n- fix cancellation in browser https://github.com/microsoft/pylance-release/issues/5420\r\n- Fix replaceExtension on WebUri to handle paths containing just a filename ",
    "head_branch": "pull-pylance-with-pyright-1.1.350",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.350 (#7240)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f69ac254a19ac2904fd",
    "number": 7231,
    "body": "Address https://github.com/microsoft/pyright/issues/7215\r\n\r\nThis will prevent VS Code from communicating with Pyright about Python documents with URI schemes other than `file` and `untitled`. For example: `vscode-notebook-cell`.\r\n\r\nI considered filtering out notebook cells in the textDocument didOpen, didChange, and didClose handlers, but then VS Code will still send requests (ex. hover) for the filtered out documents. So it seems best to tell VS Code more clearly what Pyright can handle.\r\n\r\nThis matches Pylance's document selector minus notebooks and virtual file systems. Pyright doesn't support virtual file systems, right?",
    "head_branch": "pyright7215",
    "is_a_fork": true,
    "comments": [
      "I have some concerns about this approach. I think I recall that some editors use a URI other than \"untitled\" for unsaved documents. This would break those clients.\r\n\r\nPerhaps we could blacklist notebooks rather than whitelisting just a few specific url types?",
      "> Pyright doesn't support virtual file systems, right?\r\n\r\nNo, it does not. It would need a way to send a request to read to a client. (The sync server support)",
      "> I think I recall that some editors use a URI other than \"untitled\" for unsaved documents. This would break those clients.\r\n\r\nThis change is in `vscode-pyright`. I was assuming that other editors would not use that package at all. Is that not true?\r\n\r\n> Perhaps we could blacklist notebooks rather than whitelisting just a few specific url types?\r\n\r\nDocument selector doesn't have an ability to exclude certain files unfortunately, so if we want to exclude notebooks we'd need to do it in code.",
      "> This change is in vscode-pyright. I was assuming that other editors would not use that package at all. Is that not true?\r\n\r\nThat should be fine then. Thanks."
    ],
    "commit_messages": [
      "Restrict vscode-pyright document selector to `file` and `untitled` schemes (#7231)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f6aac254a19ac2904fe",
    "number": 7227,
    "body": "I couldn't figure out how to use venv / venvPath from the docs, and had to step through with a debugger to figure out what it was looking for. I'm submitted this doc update in case other people might likewise benefit.\r\n\r\n(On the other hand, the \"venv\" technique is recommended against, so maybe this documentation shouldn't be added!)",
    "head_branch": "venv_doc",
    "is_a_fork": true,
    "comments": [
      "Thanks for taking the time to propose this change, but I'd prefer to leave it out of the documentation. As you pointed out, the venv mechanism is left in place for historical and backward compatibility reasons, but it's not the configuration technique that I recommend. It has many shortcomings, and there are much better (more robust) solutions."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f6bac254a19ac2904ff",
    "number": 7223,
    "body": "I found the venv documentation hard to follow, and had to debug-step through pyright code to discover what it was looking for. Here's a simple example to hopefully get the reader started.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Drat I'm not very good at git yet. I'll close this and try again."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f6cac254a19ac290500",
    "number": 7219,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action\r\n- Fix uri parsing for untitled files \r\n-  Speedup indexing by caching the normalized path\r\n- Skip pathEndsWith when not necessary\r\n- Make sure to check undefined only\r\n- Fix test failures and missed optimization\r\n- Potential bug with file watchers \r\n- loc update\r\n- Add support to show completions for typed dict keys in constructor\r\n\r\nsee pyrx 4533",
    "head_branch": "pull-pylance-with-pyright-1.1.350",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.350 (#7219)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f6dac254a19ac290501",
    "number": 7218,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action\r\n\r\n- Fix uri parsing for untitled files \r\n-  Speedup indexing by caching the normalized path\r\n- Skip pathEndsWith when not necessary\r\n- Make sure to check undefined only\r\n- Fix test failures and missed optimization\r\n- Potential bug with file watchers \r\n- Add support to show completions for typed dict keys in constructor\r\n\r\nsee pyrx 4533",
    "head_branch": "pull-pylance-with-pyright-1.1.350",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f6eac254a19ac290502",
    "number": 7216,
    "body": "The exclude directive overrides include directories *and* include files.\r\n\r\nI verified by experiment, and also by reading the source code https://github.com/microsoft/pyright/blob/main/packages/pyright-internal/src/common/uri/uriUtils.ts#L54",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Thanks for the contribution."
    ],
    "commit_messages": [
      "Clarify that \"exclude\" overrides include directories *and* files (#7216)\n\nThe exclude directive overrides include directories *and* include files.\r\n\r\nI verified by experiment, and also by reading the source code https://github.com/ljw1004/pyright/blob/main/packages/pyright-internal/src/common/uri/uriUtils.ts#L54"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f6fac254a19ac290503",
    "number": 7211,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f6fac254a19ac290504",
    "number": 7207,
    "body": "…nstances. This addresses #7196.",
    "head_branch": "issue7196",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added missing check for out-of-bound index accesses for named tuple instances. This addresses #7196. (#7207)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f70ac254a19ac290505",
    "number": 7206,
    "body": "… to `isinstance` call, which isn't allowed. This addresses #7203.",
    "head_branch": "issue7203",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added check for use of `TypedDict` or `NamedTuple` as second argument to `isinstance` call, which isn't allowed. This addresses #7203. (#7206)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f71ac254a19ac290506",
    "number": 7205,
    "body": "…ses #7197.",
    "head_branch": "issue7197",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added check for an attempt to delete a named tuple entry. This addresses #7197. (#7205)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f72ac254a19ac290507",
    "number": 7202,
    "body": "- fixes #35\r\n- fixes #29",
    "head_branch": "pylance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f73ac254a19ac290508",
    "number": 7199,
    "body": "…le within a subclass. This addresses #7198.",
    "head_branch": "issue7198",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added missing check for an attempt to override a field in a named tuple within a subclass. This addresses #7198. (#7199)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f74ac254a19ac290509",
    "number": 7194,
    "body": "…t narrowed type when the filter type (the second argument) and the test type (the first argument) are both type variables. This addresses #7081.",
    "head_branch": "issue7081",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug in `isinstance` type narrowing logic that leads to incorrect narrowed type when the filter type (the second argument) and the test type (the first argument) are both type variables. This addresses #7081. (#7194)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f74ac254a19ac29050a",
    "number": 7191,
    "body": "…n if/elif chain that is missing a final \"else\" clause). This addresses #7189.",
    "head_branch": "issue7189-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved handling of unreachability analysis for an \"implied else\" (an if/elif chain that is missing a final \"else\" clause). This addresses #7189. (#7191)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f75ac254a19ac29050b",
    "number": 7190,
    "body": "…n if/elif chain that is missing a final \"else\" clause). This addresses #7189.",
    "head_branch": "issue7189",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f76ac254a19ac29050c",
    "number": 7187,
    "body": "…nd to a union of literals is used in the specialization of a TypeAlias whose TypeVar is bound to a wider union of literals. This addresses #7184.",
    "head_branch": "issue7184",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false positive error when a TypeVar bound to a union of literals is used in the specialization of a TypeAlias whose TypeVar is bound to a wider union of literals. This addresses #7184. (#7187)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f77ac254a19ac29050d",
    "number": 7177,
    "body": "Dear all, this is by no means complete (hence the RFC), but before I spend any more time on this I would like to hear your opinions (especially @erictraut), if this patch can/will ever be merged.\r\n\r\nThis patch implements bare-bones semantic tokens for `pyright` to be used in open-source forks of `VSCode` that are prohibited from using the official `pylance` extension (i.e. `VSCodium`). I have irregularly updated this patch so far and the semantic tokens seem to be quite functional for my purposes. The mapping between `pyright` types and actual semantic tokens might need some more tweaking but I think other people could already benefit from the functionality as it right now. \r\n\r\nHaving maintained this patch doing this for many months, I can at the very least claim that the necessary changes were very uncomplicated to maintain (especially after the last rewrite of `languageServerBase.ts`).\r\n\r\nNow to address the elephant in the room: This clearly competes with the official implementation of semantic tokens in `pylance`, so I expect you will not be able to merge this patch. Am I correct or would it be alright to have this (potentially inferior) implementation in `pyright`?\r\n\r\nThanks!",
    "head_branch": "semantic-tokens",
    "is_a_fork": true,
    "comments": [
      "@microsoft-github-policy-service agree",
      "Sorry, but this patch won't be merged. We've been very clear that pyright is focused on type checking and that we don't have plans to add new language server functionality. We won't accept PRs that add new language server features. If you're interested in additional language server functionality, please check out Pylance. ",
      "@erictraut Thank you for your reply and your continued work on `pyright`. So unfortunately my assessment was correct. \r\n\r\n> We've been very clear that pyright is focused on type checking and that we don't have plans to add new language server functionality. \r\n\r\nI remembered something along the lines at the back of my head, but I could not find the exact source. From your reply I perceive that this has clearly happened more than once. Maybe it is worth adding a corresponding sentence to the \"Contributing\" section in the `README`?\r\n\r\n> If you're interested in additional language server functionality, please check out Pylance.\r\n\r\nThe license incompatibility between `Pylance` and `VSCodium` prevents me (and other people) form (legally) doing that. Besides, `pyright` already has most of the features we need thanks your efforts. I guess, I will continue irregularly rebasing my patchset for the foreseeable future...\r\n\r\nIt is kind of sad that `pyright` has all the information needed to provide this and other features, but they cannot be implemented due to policy decisions. \r\n\r\nWith your insight into how the merging with `pylance` code works, what would you recommend for this particular use case? A semi-fork like has been done for `VSCodium`?\r\n\r\nThanks & all the best\r\n",
      "Out of curiosity, why do you use VSCodium rather than VSCode? With Pylance you get way more than just semantic tokens (indexing, docstrings for stdlib, refactoring, code actions, Intellisense, notebook support, and much much more).",
      "@erictraut Having been burnt by the recent degradation of \"free\" services over the years, I started being very careful in the choice of tools I depend on for my everyday productivity. Therefore, I try to only use tools that I can have a reasonable degree of control over. The reason I use `VSCodium` rather than `VSCode` is the same why I use `pyright` rather than `pylance` (and `Linux` rather than `Windows` for that matter): I can change the tool to fit my needs and I can use the tool for as long as I like. If I do not like an aspect of the tool, I can always read the source, understand how it works and change it in any way I desire. (There is nothing like reading a well written code base on a rainy Saturday :smile:). I think this is the initial spirit that gave us the open source movement to begin with. Unfortunately, I cannot directly change anything about the proprietary parts `pylance` or the original `VSCode`. If Microsoft decided tomorrow to cease offering these products on my platform in general of for me in particular, there would be nothing I could do about that. Even if Microsoft behaves benevolently, I cannot audit the closed source effectively.\r\n\r\nThis is why I am very thankful to you and others for providing me with `pyright` - one of the best static analyzers for python - that allows me to bring at least some semblance of sanity into large python code bases. I never understood why Microsoft kept it open source from a business decision point of view, but I am thankful regardless.\r\n\r\nI hope that makes sense to you.\r\n\r\n> With Pylance you get way more than just semantic tokens (indexing, docstrings for stdlib, refactoring, code actions, Intellisense, notebook support, and much much more).\r\n\r\nOh do I know that. Semantic tokens is just the most visible, most useful to other people and the least controversial of my patches. It was also the feature I missed the most when I switched over from `pylance` to `pyright`. I do not know, if I ever find the time to rebase and polish the other ones into a state that is presentable to and is usable by other people. \r\n\r\nI can't imagine that I am the only person that has similar patches on their hard drive and hence my question. Where do you think would be the best place to host and aggregate these and similar patches?",
      "Thanks for the explanation. That's an interesting philosophy. I will admit that it doesn't resonate with me — especially when considering the limitations it imposes and the costs it involves. I'm guessing that you don't apply this philosophy to other tools you use in your daily life. Surely you don't run your own search engine, social media site, cloud hosting service, run your own video conferencing service, compile your own phone OS, or insist on being able to customize the firmware in your appliances, vehicles, etc. Anyway, if that's the philosophy you want to adopt for your development tools and you don't mind the limitations and added costs, so be it.\r\n\r\nIn case you didn't know, I no longer work for Microsoft. I worked there for about 18 years but left about a year ago. Even when I was at Microsoft, pyright was a side project for me, not part of my \"day job\". I continue to maintain it as a side project. Pyright is fully open-sourced because we wanted to be able to contribute to (and help steer) the Python typing standards and encourage library authors to include type information in their published packages. To facilitate these goals, we felt that it was important to open-source the core type checker code.\r\n\r\nPylance is not fully open-sourced for a number of reasons. It's highly unlikely that Microsoft would fund a sizable team to write a full-featured language server if the code were completely free for anyone to use for any purpose — even in ways that would compete against Microsoft's business interests. I think the current arrangement — where pyright is completely free, open, and unencumbered by licensing constraints while Pylance is offered free to VS Code users but has some licensing restrictions — strikes a good balance for the broader community and for Microsoft. I don't want to upset that balance.",
      "@erictraut Thank you for you insight and taking the time to answer my questions!\r\n\r\n> Thanks for the explanation. That's an interesting philosophy. I will admit that it doesn't resonate with me — especially when considering the limitations it imposes and the costs it involves. I'm guessing that you don't apply this philosophy to other tools you use in your daily life. Surely you don't run your own search engine, social media site, cloud hosting service, run your own video conferencing service, compile your own phone OS, or insist on being able to customize the firmware in your appliances, vehicles, etc. Anyway, if that's the philosophy you want to adopt for your development tools and you don't mind the limitations and added costs, so be it. \r\n\r\nYou are right that some aspects are more difficult to approach than others. However, I really, **really**, like to own my tools - not the other way around, if that makes sense. Funny that you mentioned it, but I do quite regularly modify the firmware of some appliances and I compiled Android for my phone (at least the OSS parts of it) at least once. So there is that :wink:. Sometimes it gets complicated, sometimes the right to repair legislation finally takes root and makes it a lot easier. I think, if I have the time and if the project falls within my capabilities, I will definitely try and modify it. I am pretty sure that I am not an extreme case here, as I know of many people in the maker community that have accomplished much more customization projects that I could ever dream of.\r\n\r\nSide note: I also quite vividly remember Linus Torvalds taking half a year off the Linux development to deal with BitKeeper trying a bait-and-switch with the \"free\" licence. This work resulted in `git`, I think it was worth it.\r\n\r\n> In case you didn't know, I no longer work for Microsoft. I worked there for about 18 years but left about a year ago. Even when I was at Microsoft, pyright was a side project for me, not part of my \"day job\". I continue to maintain it as a side project. Pyright is fully open-sourced because we wanted to be able to contribute to (and help steer) the Python typing standards and encourage library authors to include type information in their published packages. To facilitate these goals, we felt that it was important to open-source the core type checker code.\r\n\r\nI missed the point where you left Microsoft. I wish you all the best, wherever you are employed now. I saw your name on the typing proposal a couple of days ago and so that reminded me that I wanted to ask you my questions about `pyright`... Thank you all again for keeping `pyright` open and free.\r\n\r\n> Pylance is not fully open-sourced for a number of reasons. It's highly unlikely that Microsoft would fund a sizable team to write a full-featured language server if the code were completely free for anyone to use for any purpose — even in ways that would compete against Microsoft's business interests. I think the current arrangement — where pyright is completely free, open, and unencumbered by licensing constraints while Pylance is offered free to VS Code users but has some licensing restrictions — strikes a good balance for the broader community and for Microsoft. I don't want to upset that balance.\r\n\r\nI see. In that case let me try to approach it in a different way. Right now there is no way to configure additional features outside of the `LanguageServerBase` class. Would you be able to merge a patch that refactors the code in `LanguageServerBase` and a couple of other places to allow additional LSP features to be configured using an object passed all the way from the `main` function of `pyright`? I think this would enable an easy way to maintain a `pyright` fork with an extended LSP feature set without changing the internal `pyright` code base too much.",
      "> Would you be able to merge a patch that refactors the code in LanguageServerBase and a couple of other places to allow additional LSP features to be configured using an object passed all the way from the main function of pyright?\r\n\r\nSorry, but no. As I said, I think the status quo strikes the right balance, and I don't want to upset that balance. It will not serve the greater good to undermine Microsoft's investments in Pylance. I respect your personal philosophy, but you're making a personal choice, and there are costs associated with that choice.",
      "Thank you for your reply. It is unfortunate, but I will rely on your judgement and consider the issue closed for me.\r\nAll the best",
      "@xaberus fyi, [my fork of pyright](https://github.com/detachhead/basedpyright) has semantic tokens as well as some other pylance-exclusive features."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f78ac254a19ac29050e",
    "number": 7176,
    "body": "…cluded in an unpacked argument within a function call. This addresses #7175.",
    "head_branch": "issue7175",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/mirror.py:709:13 - error: No overloads for \"print_exception\" match the provided arguments (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/mirror.py:709:57 - error: Argument of type \"OptExcInfo | Unbound\" cannot be assigned to parameter \"__exc\" of type \"BaseException\" in function \"print_exception\"\n+     Type \"OptExcInfo | Unbound\" cannot be assigned to type \"BaseException\"\n+       \"ExcInfo\" is incompatible with \"BaseException\" (reportArgumentType)\n- 23782 errors, 78 warnings, 0 informations \n+ 23784 errors, 78 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_compat.py:151:50 - error: \"Unbound\" is not iterable (reportGeneralTypeIssues)\n- 10149 errors, 461 warnings, 0 informations \n+ 10148 errors, 461 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/mirror.py:709:13 - error: No overloads for \"print_exception\" match the provided arguments (reportCallIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/mirror.py:709:57 - error: Argument of type \"type[BaseException] | BaseException | TracebackType | None\" cannot be assigned to parameter \"__exc\" of type \"BaseException\" in function \"print_exception\"\n+     Type \"type[BaseException] | BaseException | TracebackType | None\" cannot be assigned to type \"BaseException\"\n+       \"TracebackType\" is incompatible with \"BaseException\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/aomp/package.py:517:26 - error: \"Unbound\" is not iterable (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/npb/package.py:191:28 - error: \"Unbound\" is not iterable (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/xsdk/package.py:44:17 - error: \"Unbound\" is not iterable (reportGeneralTypeIssues)\n- 23782 errors, 78 warnings, 0 informations \n+ 23781 errors, 78 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false negative when a `None` type is in… (#7176)\n\n* Fixed a bug that results in a false negative when a `None` type is included in an unpacked argument within a function call. This addresses #7175.\r\n\r\n* Improved logic for unpacked arguments that contain an \"Unbound\" type."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f79ac254a19ac29050f",
    "number": 7174,
    "body": "…Var with a default (PEP 696) was used in an overload but was not solved. This addresses #7173.",
    "head_branch": "issue7173",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in an incorrect type evaluation when a TypeVar with a default (PEP 696) was used in an overload but was not solved. This addresses #7173. (#7174)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f7aac254a19ac290510",
    "number": 7172,
    "body": "Fixes #6677 \r\n\r\nThis should make sure we don't break the background thread in any submissions.",
    "head_branch": "rchiodo/add_lsp_test",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Add test(s) that validate Pyright can talk over LSP (#7172)\n\n* Everything building, but not running\r\n\r\n* More tests passing\r\n\r\n* Fix test to open a file\r\n\r\n* Remove unused functions and consolidate others\r\n\r\n* Remove unused custom lsp messages\r\n\r\n* Add comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f7bac254a19ac290511",
    "number": 7168,
    "body": "… a protocol class. This pattern is used for annotating mix-ins. In this case, pyright should not generate an error if the protocol's method isn't implemented. This addresses #7160.",
    "head_branch": "issue7160",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Changed behavior of `super()` method call when `self` is annotated as a protocol class. This pattern is used for annotating mix-ins. In this case, pyright should not generate an error if the protocol's method isn't implemented. This addresses #7160. (#7168)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f7cac254a19ac290512",
    "number": 7165,
    "body": "Fixes https://github.com/microsoft/pyrx/issues/4535 in combination with https://github.com/microsoft/pyrx/pull/4584.\r\n\r\nOn Thursday (Feb 1), [`GITHUB_TOKEN` will become read-only within the `microsoft` org](https://docs.opensource.microsoft.com/github/apps/permission-changes/). The `build.yml` step that creates a GitHub release is the only place I found (in pyright) where we are using `GITHUB_TOKEN` to write to GitHub objects and we had not already provided explicit permissions. I made an identical change in pyrx and have confirmed that `contents: write` is sufficient here.",
    "head_branch": "pyrx4535",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Grant write permissions as needed to workflows that use GITHUB_TOKEN (#7165)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f7cac254a19ac290513",
    "number": 7156,
    "body": "…tterns when the subject expression contains a tuple with an unbounded component. This addresses #7117.",
    "head_branch": "issue7117",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect type narrowing for sequence patterns when the subject expression contains a tuple with an unbounded component. This addresses #7117. (#7156)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f7dac254a19ac290514",
    "number": 7155,
    "body": "… `tuple` constructor with bidirectional type inference and the value passed to the constructor is an `Iterable[Any]`. This addresses #7085.",
    "head_branch": "issue7085",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect type evaluation when calling a `tuple` constructor with bidirectional type inference and the value passed to the constructor is an `Iterable[Any]`. This addresses #7085. (#7155)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f7eac254a19ac290515",
    "number": 7154,
    "body": "…ns of literal types. This addresses #7143.",
    "head_branch": "issue7143",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added additional performance enhancements specifically for large unions of literal types. This addresses #7143. (#7154)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f7fac254a19ac290516",
    "number": 7153,
    "body": "….Any` is passed to a function that accepts a `type[T]`. `Any` is a special form and should not be compatible with `type`. This addresses #7082.",
    "head_branch": "issue7082",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:354:30 - error: Expression of type \"Any\" cannot be assigned to declared type \"type[Any]\" (reportAssignmentType)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1565:68 - error: Argument of type \"Any\" cannot be assigned to parameter \"annotation\" of type \"type[Any]\" in function \"_generate_parameter_schema\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_std_types_schema.py:413:60 - error: Argument of type \"Any\" cannot be assigned to parameter \"item_source_type\" of type \"type[Any]\" in function \"__init__\" (reportArgumentType)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_std_types_schema.py:592:45 - error: Argument of type \"Any\" cannot be assigned to parameter \"keys_source_type\" of type \"type[Any]\" in function \"__init__\" (reportArgumentType)\n- 67 errors, 0 warnings, 0 informations \n+ 71 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:514:33 - error: Expression of type \"Any\" cannot be assigned to declared type \"type[T@Greedy]\"\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:514:33 - error: Expression of type \"Any\" cannot be assigned to declared type \"type[T@Greedy]\" (reportAssignmentType)\n-     Type \"type[Any]\" cannot be assigned to type \"type[T@Greedy]\" (reportAssignmentType)\n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:629:18 - error: Expression of type \"Any\" cannot be assigned to declared type \"type\" (reportAssignmentType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:835:24 - error: Expression of type \"type[Any]\" cannot be assigned to return type \"type\" (reportReturnType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:842:28 - error: Expression of type \"type[Any]\" cannot be assigned to return type \"type\" (reportReturnType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:853:28 - error: Expression of type \"type[Any]\" cannot be assigned to return type \"type\" (reportReturnType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:906:20 - error: Expression of type \"type[Any]\" cannot be assigned to return type \"type\" (reportReturnType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:914:20 - error: Expression of type \"type[Any]\" cannot be assigned to return type \"type\" (reportReturnType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:941:16 - error: Expression of type \"type[Any]\" cannot be assigned to return type \"type\" (reportReturnType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:3167:26 - error: Argument of type \"Any\" cannot be assigned to parameter \"hint\" of type \"type\" in function \"__init__\" (reportArgumentType)\n- 148 errors, 0 warnings, 183 informations \n+ 156 errors, 0 warnings, 183 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false negative when the literal `typing.Any` is passed to a function that accepts a `type[T]`. `Any` is a special form and should not be compatible with `type`. This addresses #7082. (#7153)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f80ac254a19ac290517",
    "number": 7152,
    "body": "…negative when dest type includes an upacked unbounded tuple plus additional entries. This addresses #7115.\r\n\r\nFixed bug in tuple type compatibility logic that resulted in a false positive when dest type is `tuple[Any, ...]`. This addresses #7129. Improved error messages for tuple type mismatches that involve tuples with indeterminate types.",
    "head_branch": "issue7115",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug in tuple type compatibility logic that resulted in a false negative when dest type includes an upacked unbounded tuple plus additional entries. This addresses #7115. (#7152)\n\nFixed bug in tuple type compatibility logic that resulted in a false positive when dest type is `tuple[Any, ...]`. This addresses #7129.\r\nImproved error messages for tuple type mismatches that involve tuples with indeterminate types."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f81ac254a19ac290518",
    "number": 7150,
    "body": "…e to capture the parameters of a generic callable that includes one or more default argument values. This addresses #7146.",
    "head_branch": "issue7146",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false positive when using a TypeVarTuple to capture the parameters of a generic callable that includes one or more default argument values. This addresses #7146. (#7150)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f82ac254a19ac290519",
    "number": 7149,
    "body": "…his addresses #7142.",
    "head_branch": "Issue7142",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for enum member aliases defined within an enum class. This addresses #7142. (#7149)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f83ac254a19ac29051a",
    "number": 7148,
    "body": "…e variables defined in the `type` class so they are treated specially when accessed from a class instance. This addresses #7145.",
    "head_branch": "issue7145",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/starlette/patch.py:174:65 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1104:39 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/function/test_store.py:121:76 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+ /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/probe/test_status.py\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/probe/test_status.py:85:46 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 10134 errors, 459 warnings, 0 informations \n+ 10138 errors, 459 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1159:36 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1164:22 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/error.py:83:50 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/multimethod.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/multimethod.py:100:25 - error: Cannot access member \"__name__\" for type \"SpecMultiMethod*\"\n+     Member \"__name__\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/multimethod.py:139:47 - error: Cannot access member \"__name__\" for type \"SpecMultiMethod*\"\n+     Member \"__name__\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/multimethod.py:151:18 - error: Cannot access member \"__name__\" for type \"SpecMultiMethod*\"\n+     Member \"__name__\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/autotools.py:298:57 - error: Cannot access member \"name\" for type \"AutotoolsBuilder*\"\n+     Member \"name\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/common.py:901:46 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/common.py:967:39 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/conftest.py:1062:33 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/var/spack/repos/builtin/packages/gdal/package.py:609:53 - error: Cannot access member \"name\" for type \"AutotoolsBuilder*\"\n+     Member \"name\" is unknown (reportAttributeAccessIssue)\n- 23734 errors, 78 warnings, 0 informations \n+ 23745 errors, 78 warnings, 0 informations \n\npandas (https://github.com/pandas-dev/pandas)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/apply.py:1953:21 - error: Cannot assign member \"__name__\" for type \"partial[Any]\"\n+     Member \"__name__\" is unknown (reportAttributeAccessIssue)\n- 1934 errors, 3 warnings, 0 informations \n+ 1935 errors, 3 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:1048:77 - warning: Unnecessary \"# type: ignore\" comment\n- 61 errors, 14 warnings, 0 informations \n+ 61 errors, 13 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:559:46 - warning: Unnecessary \"# type: ignore\" comment\n- 8389 errors, 26 warnings, 0 informations \n+ 8389 errors, 25 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_util.py:280:56 - error: Type of \"__name__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_util.py:280:60 - error: Cannot access member \"__name__\" for type \"object\"\n+     Member \"__name__\" is unknown (reportAttributeAccessIssue)\n+   /tmp/mypy_primer/projects/trio/src/trio/_util.py:281:21 - error: Cannot assign member \"__name__\" for type \"object\"\n+     Member \"__name__\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_util.py:173:49 - error: Unnecessary \"# type: ignore\" comment\n- 3835 errors, 10 warnings, 0 informations \n+ 3837 errors, 10 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Added special-case logic to handle `__name__` and a few other instanc… (#7148)\n\n* Added special-case logic to handle `__name__` and a few other instance variables defined in the `type` class so they are treated specially when accessed from a class instance. This addresses #7145.\r\n\r\n* Fixed style issue."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f83ac254a19ac29051b",
    "number": 7138,
    "body": "See #7137",
    "head_branch": "add-multi-root-workspace-folder-support",
    "is_a_fork": true,
    "comments": [
      "@microsoft-github-policy-service agree",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "I ran prettier on the files, and it resolved one of the warnings.  I do not know why `npm run check` is reporting a warning about `server.ts`, since running prettier on the file yields no changes.\r\n\r\nEDIT:  The issue is that I was using the globally-installed version of prettier to update the file.  When I explicitly ran the local version, it resolved the issue.\r\n\r\nAs a side note, it might be good to add a section concerning PR requirements (such as prettier) in https://microsoft.github.io/pyright/#/build-debug.",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "> Thanks for adding the workspace:name support. This is great :)\r\n\r\nI'm glad I could contribute back, even if a small way."
    ],
    "commit_messages": [
      "Added multi-root workspaceFolder support in path variable expansion (#7138)\n\nCo-authored-by: Seairth Jacobs <sjacobs@wrsystems.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f84ac254a19ac29051c",
    "number": 7133,
    "body": "See proposed documentation change in https://github.com/microsoft/pyright/issues/4461#issuecomment-1911113643, clarifying `exclude` documentation, since it was unclear whether the user needs to explicitly exclude their virtual environments when overriding `exclude`. **I reworded my proposed change slightly since that comment, so please be sure to check the wording I used looks good.** Thanks!",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Clarify virtual environment language in `exclude` part (#7133)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f85ac254a19ac29051d",
    "number": 7127,
    "body": "… an abstract method on an abstract class that passes through the constraint solver (e.g. a generic decorator). This addresses #7105.",
    "head_branch": "issue7105",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_class.py:400:64 - warning: Unnecessary \"# pyright: ignore\" comment\n-   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_class.py:401:63 - warning: Unnecessary \"# pyright: ignore\" comment\n- 728 errors, 34 warnings, 0 informations \n+ 728 errors, 32 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+   /tmp/mypy_primer/projects/operator/test/test_pebble.py:3093:53 - error: Type of \"cm\" is partially unknown\n+     Type of \"cm\" is \"_AssertRaisesContext[ExecError[Unknown]]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_pebble.py:3095:50 - error: Type of \"exception\" is partially unknown\n+     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n+ /tmp/mypy_primer/projects/operator/test/test_real_pebble.py\n+   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:156:53 - error: Type of \"cm\" is partially unknown\n+     Type of \"cm\" is \"_AssertRaisesContext[ExecError[Unknown]]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:159:26 - error: Type of \"exception\" is partially unknown\n+     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:172:53 - error: Type of \"cm\" is partially unknown\n+     Type of \"cm\" is \"_AssertRaisesContext[ExecError[Unknown]]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:175:50 - error: Type of \"exception\" is partially unknown\n+     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_testing.py:5208:53 - error: Type of \"exc\" is partially unknown\n+     Type of \"exc\" is \"_AssertRaisesContext[ExecError[Unknown]]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_testing.py:5210:26 - error: Type of \"exception\" is partially unknown\n+     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n- 29 errors, 0 warnings, 0 informations \n+ 37 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed regression that resulted in a false positive error when calling an abstract method on an abstract class that passes through the constraint solver (e.g. a generic decorator). This addresses #7105. (#7127)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f86ac254a19ac29051e",
    "number": 7121,
    "body": "… type used as a runtime expression. The type should be `UnionType`, not `type[UnionType]`.",
    "head_branch": "issue7110",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in an incorrect type evaluation for a union type used as a runtime expression. The type should be `UnionType`, not `type[UnionType]`. (#7121)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f87ac254a19ac29051f",
    "number": 7120,
    "body": "…ype spec now clarifies this is OK as long as there are not multiple unbounded embedded tuples. This addresses #7114.",
    "head_branch": "issue7114",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Changed handling of `tuple` with multiple unpacked embedded tuples. Type spec now clarifies this is OK as long as there are not multiple unbounded embedded tuples. This addresses #7114. (#7120)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f88ac254a19ac290520",
    "number": 7119,
    "body": "…quence`. It used to translate it to `Sequence[Any]`, but the typing spec now clarifies that it should be `Sequence[Never]`. This addresses #7118.",
    "head_branch": "issue7118",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/seq.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/seq.py:133:16 - error: Expression of type \"Seq[Never]\" cannot be assigned to return type \"Seq[_TSource@Seq]\"\n+     \"Seq[Never]\" is incompatible with \"Seq[_TSource@Seq]\"\n+       Type parameter \"_TSource@Seq\" is invariant, but \"Never\" is not the same as \"_TSource@Seq\" (reportReturnType)\n- 297 errors, 0 warnings, 0 informations \n+ 298 errors, 0 warnings, 0 informations \n\npandas (https://github.com/pandas-dev/pandas)\n-     Type \"tuple[Unknown] | tuple[()] | Unknown | None\" cannot be assigned to type \"Iterable[Any]\"\n+     Type \"tuple[Unknown] | tuple[()] | Unknown | None\" cannot be assigned to type \"Iterable[Never]\"\n-       \"None\" is incompatible with protocol \"Iterable[Any]\"\n+       \"None\" is incompatible with protocol \"Iterable[Never]\"\n-     Type \"tuple[Unknown] | tuple[()] | Unknown | None\" cannot be assigned to type \"Iterable[Any]\"\n+     Type \"tuple[Unknown] | tuple[()] | Unknown | None\" cannot be assigned to type \"Iterable[Never]\"\n-       \"None\" is incompatible with protocol \"Iterable[Any]\"\n+       \"None\" is incompatible with protocol \"Iterable[Never]\"\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:473:84 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"__new__\"\n+     Argument type is \"zip[tuple[Unknown, Unknown]]\" (reportUnknownArgumentType)\n- 2382 errors, 6751 warnings, 0 informations \n+ 2382 errors, 6752 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed the way pyright translates `tuple[()]` into a specialized `Sequence`. It used to translate it to `Sequence[Any]`, but the typing spec now clarifies that it should be `Sequence[Never]`. This addresses #7118. (#7119)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f89ac254a19ac290521",
    "number": 7101,
    "body": null,
    "head_branch": "fix-reportUnreachable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f8aac254a19ac290522",
    "number": 7077,
    "body": "…t type compatibility checks, `reportAssignmentType` covers type compatibility checks for assignments, and `reportReturnType` covers type compatibility checks for return and yield statements. This partially addresses #6973.",
    "head_branch": "issue6973-10",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npyp (https://github.com/hauntsaninja/pyp)\n-       \"bytes\" is incompatible with \"None\" (reportGeneralTypeIssues)\n+       \"bytes\" is incompatible with \"None\" (reportAssignmentType)\n\npydantic (https://github.com/samuelcolvin/pydantic)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:302:37 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:302:37 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"__init__\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:343:83 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"_extract_metadata\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:343:83 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"_extract_metadata\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:359:90 - error: Argument of type \"type[Any] | Unknown | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"_extract_metadata\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:359:90 - error: Argument of type \"type[Any] | Unknown | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"_extract_metadata\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:385:41 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:385:41 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"__init__\" (reportArgumentType)\n-     Type \"type[Annotated]\" cannot be assigned to type \"type[int]\" (reportGeneralTypeIssues)\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[int]\" (reportReturnType)\n-     Type \"type[Annotated]\" cannot be assigned to type \"type[float]\" (reportGeneralTypeIssues)\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[float]\" (reportReturnType)\n-     Type \"type[Annotated]\" cannot be assigned to type \"type[bytes]\" (reportGeneralTypeIssues)\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[bytes]\" (reportReturnType)\n-     Type \"type[Annotated]\" cannot be assigned to type \"type[str]\" (reportGeneralTypeIssues)\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[str]\" (reportReturnType)\n-     Type \"type[Annotated]\" cannot be assigned to type \"type[set[HashableItemType@conset]]\" (reportGeneralTypeIssues)\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[set[HashableItemType@conset]]\" (reportReturnType)\n-     Type \"type[Annotated]\" cannot be assigned to type \"type[frozenset[HashableItemType@confrozenset]]\" (reportGeneralTypeIssues)\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[frozenset[HashableItemType@confrozenset]]\" (reportReturnType)\n-     Type \"type[Annotated]\" cannot be assigned to type \"type[list[AnyItemType@conlist]]\" (reportGeneralTypeIssues)\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[list[AnyItemType@conlist]]\" (reportReturnType)\n-     Type \"type[Annotated]\" cannot be assigned to type \"type[Decimal]\" (reportGeneralTypeIssues)\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[Decimal]\" (reportReturnType)\n-     Type \"type[Annotated]\" cannot be assigned to type \"type[date]\" (reportGeneralTypeIssues)\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[date]\" (reportReturnType)\n\npandera (https://github.com/pandera-dev/pandera)\n-     \"list[Any]\" is incompatible with \"Tuple[Any, ...]\" (reportGeneralTypeIssues)\n+     \"list[Any]\" is incompatible with \"Tuple[Any, ...]\" (reportAssignmentType)\n-     \"list[Any]\" is incompatible with \"Tuple[Any, ...]\" (reportGeneralTypeIssues)\n+     \"list[Any]\" is incompatible with \"Tuple[Any, ...]\" (reportAssignmentType)\n-       Function accepts too few positional parameters; expected 4 but received 1 (reportGeneralTypeIssues)\n+       Function accepts too few positional parameters; expected 4 but received 1 (reportReturnType)\n-       Function accepts too few positional parameters; expected 4 but received 1 (reportGeneralTypeIssues)\n+       Function accepts too few positional parameters; expected 4 but received 1 (reportReturnType)\n-     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportArgumentType)\n-     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportArgumentType)\n-     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportArgumentType)\n-     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportArgumentType)\n-       \"None\" is incompatible with \"List[Tuple[OutputGetter, Schemas]]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Tuple[OutputGetter, Schemas]]\" (reportArgumentType)\n-       Function accepts too few positional parameters; expected 4 but received 1 (reportGeneralTypeIssues)\n+       Function accepts too few positional parameters; expected 4 but received 1 (reportReturnType)\n-     \"None\" is incompatible with \"BaseException\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"BaseException\" (reportArgumentType)\n-     \"None\" is incompatible with \"BaseException\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"BaseException\" (reportArgumentType)\n-     \"None\" is incompatible with \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[str, Any]\" (reportArgumentType)\n-     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportArgumentType)\n-     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportArgumentType)\n-       \"str\" is incompatible with \"CheckType\" (reportGeneralTypeIssues)\n+       \"str\" is incompatible with \"CheckType\" (reportArgumentType)\n-     \"None\" is incompatible with \"Dict[Unknown, Unknown]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[Unknown, Unknown]\" (reportArgumentType)\n-     \"None\" is incompatible with \"Dict[Unknown, Unknown]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[Unknown, Unknown]\" (reportArgumentType)\n-     \"None\" is incompatible with \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[str, Any]\" (reportArgumentType)\n-     \"None\" is incompatible with \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[str, Any]\" (reportArgumentType)\n-       \"function\" is incompatible with \"None\" (reportGeneralTypeIssues)\n+       \"function\" is incompatible with \"None\" (reportArgumentType)\n-       \"function\" is incompatible with \"tuple[_ClassInfo, ...]\" (reportGeneralTypeIssues)\n+       \"function\" is incompatible with \"tuple[_ClassInfo, ...]\" (reportArgumentType)\n-     Generic type with type arguments not allowed for instance or class checks (reportGeneralTypeIssues)\n+     Generic type with type arguments not allowed for instance or class checks (reportArgumentType)\n-           \"type[type]\" is incompatible with \"type[ArraySchema]\" (reportGeneralTypeIssues)\n+           \"type[type]\" is incompatible with \"type[ArraySchema]\" (reportArgumentType)\n-       \"Check\" is incompatible with \"List[Check]\" (reportGeneralTypeIssues)\n+       \"Check\" is incompatible with \"List[Check]\" (reportArgumentType)\n-       \"pandera.dtypes.DataType\" is incompatible with \"pandera.engines.pandas_engine.DataType\" (reportGeneralTypeIssues)\n+       \"pandera.dtypes.DataType\" is incompatible with \"pandera.engines.pandas_engine.DataType\" (reportArgumentType)\n-     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportArgumentType)\n-       \"pandera.dtypes.DataType\" is incompatible with \"pandera.engines.pandas_engine.DataType\" (reportGeneralTypeIssues)\n+       \"pandera.dtypes.DataType\" is incompatible with \"pandera.engines.pandas_engine.DataType\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/components.py:227:18 - error: Argument of type \"str | Tuple[str, ...] | None\" cannot be assigned to parameter \"name\" of type \"str | None\" in function \"column_strategy\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/components.py:227:18 - error: Argument of type \"str | Tuple[str, ...] | None\" cannot be assigned to parameter \"name\" of type \"str | None\" in function \"column_strategy\" (reportArgumentType)\n-     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportArgumentType)\n-       \"pandera.dtypes.DataType\" is incompatible with \"pandera.engines.pandas_engine.DataType\" (reportGeneralTypeIssues)\n+       \"pandera.dtypes.DataType\" is incompatible with \"pandera.engines.pandas_engine.DataType\" (reportArgumentType)\n-     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportArgumentType)\n-     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportArgumentType)\n-     \"None\" is incompatible with \"List[str]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"List[str]\" (reportArgumentType)\n-         Type parameter \"_KT@dict\" is invariant, but \"Unknown | None\" is not the same as \"str\" (reportGeneralTypeIssues)\n+         Type parameter \"_KT@dict\" is invariant, but \"Unknown | None\" is not the same as \"str\" (reportAssignmentType)\n-       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportArgumentType)\n-       \"None\" is incompatible with \"DataFrameSchema\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"DataFrameSchema\" (reportReturnType)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:1371:20 - error: Argument of type \"str | List[str] | None\" cannot be assigned to parameter \"unique\" of type \"List[str] | None\" in function \"dataframe_strategy\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:1371:20 - error: Argument of type \"str | List[str] | None\" cannot be assigned to parameter \"unique\" of type \"List[str] | None\" in function \"dataframe_strategy\" (reportArgumentType)\n-     Type \"type[_]\" cannot be assigned to type \"type[TDataFrameModel@__class_getitem__]\" (reportGeneralTypeIssues)\n+     Type \"type[_]\" cannot be assigned to type \"type[TDataFrameModel@__class_getitem__]\" (reportReturnType)\n-       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportArgumentType)\n-       \"None\" is incompatible with \"List[Check]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Check]\" (reportArgumentType)\n-       \"None\" is incompatible with \"List[Check]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Check]\" (reportArgumentType)\n-     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportArgumentType)\n-       \"None\" is incompatible with \"List[Check]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Check]\" (reportArgumentType)\n-     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportArgumentType)\n-     \"None\" is incompatible with \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[str, Any]\" (reportArgumentType)\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"__iter__\" is not present (reportArgumentType)\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"__iter__\" is not present (reportArgumentType)\n-     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportArgumentType)\n-     \"None\" is incompatible with \"ErrorHandler\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"ErrorHandler\" (reportArgumentType)\n-           \"type[type]\" is incompatible with \"type[ColumnSchema]\" (reportGeneralTypeIssues)\n+           \"type[type]\" is incompatible with \"type[ColumnSchema]\" (reportArgumentType)\n-       \"Check\" is incompatible with \"List[Check]\" (reportGeneralTypeIssues)\n+       \"Check\" is incompatible with \"List[Check]\" (reportArgumentType)\n-     \"None\" is incompatible with \"ErrorHandler\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"ErrorHandler\" (reportArgumentType)\n-     \"None\" is incompatible with \"ErrorHandler\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"ErrorHandler\" (reportArgumentType)\n-       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportArgumentType)\n-       \"None\" is incompatible with \"DataFrameSchema\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"DataFrameSchema\" (reportReturnType)\n-     \"pandera.api.pandas.container.DataFrameSchema\" is incompatible with \"pandera.api.pyspark.container.DataFrameSchema\" (reportGeneralTypeIssues)\n+     \"pandera.api.pandas.container.DataFrameSchema\" is incompatible with \"pandera.api.pyspark.container.DataFrameSchema\" (reportReturnType)\n-     \"pandera.api.pandas.container.DataFrameSchema\" is incompatible with \"pandera.api.pyspark.container.DataFrameSchema\" (reportGeneralTypeIssues)\n\n... (truncated 235 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-       \"None\" is incompatible with \"ModuleSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"ModuleSpec\" (reportArgumentType)\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n+         \"__fspath__\" is not present (reportArgumentType)\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n+         \"__fspath__\" is not present (reportArgumentType)\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n+         \"__fspath__\" is not present (reportArgumentType)\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n+         \"__fspath__\" is not present (reportArgumentType)\n-     Type \"type[CleanLibraries]\" cannot be assigned to type \"type[Command]\" (reportGeneralTypeIssues)\n+     Type \"type[CleanLibraries]\" cannot be assigned to type \"type[Command]\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/setup.py:640:31 - error: Argument of type \"list[tuple[Literal['__BIG_ENDIAN__'], Literal['1']]] | list[tuple[Literal['__LITTLE_ENDIAN__'], Literal['1']]]\" cannot be assigned to parameter \"define_macros\" of type \"list[tuple[str, str | None]] | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/setup.py:640:31 - error: Argument of type \"list[tuple[Literal['__BIG_ENDIAN__'], Literal['1']]] | list[tuple[Literal['__LITTLE_ENDIAN__'], Literal['1']]]\" cannot be assigned to parameter \"define_macros\" of type \"list[tuple[str, str | None]] | None\" in function \"__init__\" (reportArgumentType)\n-       \"__next__\" is not present (reportGeneralTypeIssues)\n+       \"__next__\" is not present (reportArgumentType)\n-       \"__next__\" is not present (reportGeneralTypeIssues)\n+       \"__next__\" is not present (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/utils.py:60:28 - error: Argument of type \"None\" cannot be assigned to parameter \"name\" of type \"str\" in function \"\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/utils.py:60:28 - error: Argument of type \"None\" cannot be assigned to parameter \"name\" of type \"str\" in function \"\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/encoder/utils.py:14:28 - error: Argument of type \"None\" cannot be assigned to parameter \"name\" of type \"str\" in function \"\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/encoder/utils.py:14:28 - error: Argument of type \"None\" cannot be assigned to parameter \"name\" of type \"str\" in function \"\" (reportArgumentType)\n-     \"bytes\" is incompatible with \"float\" (reportGeneralTypeIssues)\n+     \"bytes\" is incompatible with \"float\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/flask_simple/gunicorn.conf.py:14:5 - error: Expected no arguments to \"LogLineProbe\" constructor (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/flask_simple/gunicorn.conf.py:14:5 - error: Expected no arguments to \"LogLineProbe\" constructor (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/flask_simple/gunicorn.conf.py:21:19 - error: Expected no arguments to \"LiteralTemplateSegment\" constructor (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/flask_simple/gunicorn.conf.py:21:19 - error: Expected no arguments to \"LiteralTemplateSegment\" constructor (reportCallIssue)\n-     \"Literal['Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36…']\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"Literal['Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36…']\" is incompatible with \"int\" (reportArgumentType)\n-     \"Literal['8.8.8.8']\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"Literal['8.8.8.8']\" is incompatible with \"int\" (reportArgumentType)\n-     \"Config\" is incompatible with \"IntegrationConfig\" (reportGeneralTypeIssues)\n+     \"Config\" is incompatible with \"IntegrationConfig\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"method\" of type \"str | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"method\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"url\" of type \"str | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"url\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"target_host\" of type \"str | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"target_host\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"status_code\" of type \"int | str | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"status_code\" of type \"int | str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"status_msg\" of type \"str | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"status_msg\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"query\" of type \"str | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"query\" of type \"str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"parsed_query\" of type \"Mapping[str, str] | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"parsed_query\" of type \"Mapping[str, str] | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"request_headers\" of type \"Mapping[str, str] | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"request_headers\" of type \"Mapping[str, str] | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"response_headers\" of type \"Mapping[str, str] | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"response_headers\" of type \"Mapping[str, str] | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"retries_remain\" of type \"int | str | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"retries_remain\" of type \"int | str | None\" in function \"set_http_meta\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:93:51 - error: Argument of type \"str | int | dict[str, str] | dict[str, int]\" cannot be assigned to parameter \"raw_uri\" of type \"str | None\" in function \"set_http_meta\" (reportGeneralTypeIssues)\n\n... (truncated 2871 lines) ...\n\nPyWinCtl (https://github.com/Kalmat/PyWinCtl)\n-       \"bytes\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"bytes\" is incompatible with \"str\" (reportAssignmentType)\n-       \"str\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+       \"str\" is incompatible with \"int\" (reportAssignmentType)\n-   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_pywinctl_linux.py:82:18 - error: Expression of type \"int | None\" cannot be assigned to declared type \"str | int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_pywinctl_linux.py:82:18 - error: Expression of type \"int | None\" cannot be assigned to declared type \"str | int\" (reportAssignmentType)\n-   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_pywinctl_linux.py:801:35 - error: Expression of type \"str | None\" cannot be assigned to declared type \"str | bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_pywinctl_linux.py:801:35 - error: Expression of type \"str | None\" cannot be assigned to declared type \"str | bytes\" (reportAssignmentType)\n-       \"bytearray\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"bytearray\" is incompatible with \"str\" (reportReturnType)\n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-       \"__dataclass_fields__\" is defined as a ClassVar in protocol (reportGeneralTypeIssues)\n+       \"__dataclass_fields__\" is defined as a ClassVar in protocol (reportAssignmentType)\n-       Type \"DataClass[PInit@eval_dataclass]\" cannot be assigned to type \"(...) -> Any\" (reportGeneralTypeIssues)\n+       Type \"DataClass[PInit@eval_dataclass]\" cannot be assigned to type \"(...) -> Any\" (reportArgumentType)\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:854:36 - error: Argument of type \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" cannot be assigned to parameter \"s\" of type \"FileDescriptorOrPath\" in function \"isdir\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:854:36 - error: Argument of type \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" cannot be assigned to parameter \"s\" of type \"FileDescriptorOrPath\" in function \"isdir\" (reportArgumentType)\n-     \"List[str]\" is incompatible with \"tuple[str, ...]\" (reportGeneralTypeIssues)\n+     \"List[str]\" is incompatible with \"tuple[str, ...]\" (reportAssignmentType)\n-             \"__iter__\" is not present (reportGeneralTypeIssues)\n+             \"__iter__\" is not present (reportArgumentType)\n-             \"__iter__\" is not present (reportGeneralTypeIssues)\n+             \"__iter__\" is not present (reportArgumentType)\n-             \"__iter__\" is not present (reportGeneralTypeIssues)\n+             \"__iter__\" is not present (reportArgumentType)\n-             \"__iter__\" is not present (reportGeneralTypeIssues)\n+             \"__iter__\" is not present (reportArgumentType)\n-             \"__iter__\" is not present (reportGeneralTypeIssues)\n+             \"__iter__\" is not present (reportArgumentType)\n-       \"bool\" is incompatible with \"None\" (reportGeneralTypeIssues)\n+       \"bool\" is incompatible with \"None\" (reportArgumentType)\n-       \"bool\" is incompatible with \"None\" (reportGeneralTypeIssues)\n+       \"bool\" is incompatible with \"None\" (reportArgumentType)\n-             \"__iter__\" is not present (reportGeneralTypeIssues)\n+             \"__iter__\" is not present (reportArgumentType)\n-             \"__iter__\" is not present (reportGeneralTypeIssues)\n+             \"__iter__\" is not present (reportArgumentType)\n-       \"None\" is incompatible with \"ModuleSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"ModuleSpec\" (reportArgumentType)\n-       \"function\" is incompatible with \"None\" (reportGeneralTypeIssues)\n+       \"function\" is incompatible with \"None\" (reportArgumentType)\n-       \"__buffer__\" is not present (reportGeneralTypeIssues)\n+       \"__buffer__\" is not present (reportArgumentType)\n-     \"Generator[Any, Any, None]\" is incompatible with \"List[Any]\" (reportGeneralTypeIssues)\n+     \"Generator[Any, Any, None]\" is incompatible with \"List[Any]\" (reportArgumentType)\n-       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportArgumentType)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:181:61 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__attributes\" of type \"_Attr\" in function \"tcsetattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:181:61 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__attributes\" of type \"_Attr\" in function \"tcsetattr\" (reportArgumentType)\n-     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportArgumentType)\n-       \"TextIO\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+       \"TextIO\" is incompatible with \"int\" (reportArgumentType)\n-       \"TextIO\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+       \"TextIO\" is incompatible with \"int\" (reportArgumentType)\n-       \"TextIO\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+       \"TextIO\" is incompatible with \"int\" (reportArgumentType)\n-       \"TextIO\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+       \"TextIO\" is incompatible with \"int\" (reportArgumentType)\n-       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportArgumentType)\n-       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportArgumentType)\n-       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportArgumentType)\n-         \"__iter__\" is not present (reportGeneralTypeIssues)\n+         \"__iter__\" is not present (reportArgumentType)\n-       \"None\" is incompatible with \"ArchSpec\" (reportGeneralTypeIssues)\n\n... (truncated 575 lines) ...```"
    ],
    "commit_messages": [
      "Added three new diagnostic rules: `reportArgumentType` covers argument type compatibility checks, `reportAssignmentType` covers type compatibility checks for assignments, and `reportReturnType` covers type compatibility checks for return and yield statements. This partially addresses #6973. (#7077)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f8bac254a19ac290523",
    "number": 7076,
    "body": "…ng to call expressions and arguments. This partially addresses #6973.",
    "head_branch": "issue6973-9",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:757:18 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:757:18 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:124:13 - error: No parameter named \"error_handler\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:124:13 - error: No parameter named \"error_handler\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/components.py:157:13 - error: No parameter named \"error_handler\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/components.py:157:13 - error: No parameter named \"error_handler\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/container.py:373:13 - error: No parameter named \"error_handler\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/container.py:373:13 - error: No parameter named \"error_handler\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:122:52 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:122:52 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:126:32 - error: Arguments missing for parameters \"column_name\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:126:32 - error: Arguments missing for parameters \"column_name\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/column.py:78:51 - error: No parameter named \"error_handler\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/column.py:78:51 - error: No parameter named \"error_handler\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/components.py:77:25 - error: No parameter named \"error_handler\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/components.py:77:25 - error: No parameter named \"error_handler\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1034:13 - error: No parameter named \"fill_value\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1034:13 - error: No parameter named \"fill_value\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:351:12 - error: Argument missing for parameter \"draw\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:351:12 - error: Argument missing for parameter \"draw\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:868:20 - error: Argument missing for parameter \"strategy\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:868:20 - error: Argument missing for parameter \"strategy\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:969:20 - error: Argument missing for parameter \"strategy\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:969:20 - error: Argument missing for parameter \"strategy\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1180:24 - error: Argument missing for parameter \"nullable_columns\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1180:24 - error: Argument missing for parameter \"nullable_columns\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1183:24 - error: Argument missing for parameter \"index\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1183:24 - error: Argument missing for parameter \"index\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1196:12 - error: Argument missing for parameter \"draw\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1196:12 - error: Argument missing for parameter \"draw\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1248:20 - error: Argument missing for parameter \"nullable_columns\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1248:20 - error: Argument missing for parameter \"nullable_columns\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_numpy_engine.py:40:19 - error: Argument missing for parameter \"dtype\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_numpy_engine.py:40:19 - error: Argument missing for parameter \"dtype\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_numpy_engine.py:45:30 - error: Argument missing for parameter \"dtype\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_numpy_engine.py:45:30 - error: Argument missing for parameter \"dtype\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_pandas_engine.py:182:9 - error: Argument missing for parameter \"dtype\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pandas_engine.py:182:9 - error: Argument missing for parameter \"dtype\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_pandas_engine.py:183:13 - error: No parameter named \"tz\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pandas_engine.py:183:13 - error: No parameter named \"tz\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_pandas_engine.py:183:26 - error: No parameter named \"tz_localize_kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pandas_engine.py:183:26 - error: No parameter named \"tz_localize_kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:614:9 - error: No overloads for \"write\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:614:9 - error: No overloads for \"write\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:721:18 - error: No overloads for \"to_yaml\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:721:18 - error: No overloads for \"to_yaml\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:778:18 - error: No overloads for \"to_json\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:778:18 - error: No overloads for \"to_json\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:806:18 - error: No overloads for \"to_json\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:806:18 - error: No overloads for \"to_json\" match the provided arguments (reportCallIssue)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/setup.py:141:24 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/setup.py:141:24 - error: No overloads for \"join\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/utils.py:78:43 - error: No parameter named \"start_worker_thread\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/utils.py:78:43 - error: No parameter named \"start_worker_thread\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/utils.py:86:45 - error: Parameter \"service\" is already assigned (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/utils.py:86:45 - error: Parameter \"service\" is already assigned (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/core_api/scenario.py:35:17 - error: Object of type \"ExecutionContext\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/core_api/scenario.py:35:17 - error: Object of type \"ExecutionContext\" is not callable (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/encoder/utils.py:59:54 - error: Parameter \"service\" is already assigned (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/encoder/utils.py:59:54 - error: Parameter \"service\" is already assigned (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/span/scenario.py:39:25 - error: Argument missing for parameter \"name\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/span/scenario.py:39:25 - error: Argument missing for parameter \"name\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:674:19 - error: No overloads for \"get\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:674:19 - error: No overloads for \"get\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:837:16 - error: Argument missing for parameter \"name\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:837:16 - error: Argument missing for parameter \"name\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_asm_request_context.py:448:9 - error: No overloads for \"__setitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_asm_request_context.py:448:9 - error: No overloads for \"__setitem__\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:447:16 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:447:16 - error: No overloads for \"__init__\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:546:70 - error: Expected 3 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:546:70 - error: Expected 3 positional arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/trace_utils.py:79:12 - error: No overloads for \"sub\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/trace_utils.py:79:12 - error: No overloads for \"sub\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiohttp/patch.py:130:47 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiohttp/patch.py:130:47 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiohttp/patch.py:131:47 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiohttp/patch.py:131:47 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiohttp_jinja2/patch.py:49:47 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiohttp_jinja2/patch.py:49:47 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:138:12 - error: Argument missing for parameter \"name\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:138:12 - error: Argument missing for parameter \"name\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/asyncpg/patch.py:130:30 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/asyncpg/patch.py:130:30 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/asyncpg/patch.py:132:56 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/asyncpg/patch.py:132:56 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:59:17 - error: Object of type \"Handlers\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:59:17 - error: Object of type \"Handlers\" is not callable (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:59:17 - error: Object of type \"int\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:59:17 - error: Object of type \"int\" is not callable (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/patch.py:89:81 - error: Arguments missing for parameters \"pin\", \"original_func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/patch.py:89:81 - error: Arguments missing for parameters \"pin\", \"original_func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/services/kinesis.py:123:19 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/services/kinesis.py:123:19 - error: No overloads for \"__getitem__\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:223:89 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:223:89 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:764:90 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:764:90 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:768:74 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:768:74 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:778:57 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:778:57 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:783:67 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:783:67 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:787:38 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:787:38 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:788:45 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:788:45 - error: Arguments missing for parameters \"pin\", \"func\", \"instance\", \"args\", \"kwargs\" (reportCallIssue)\n\n... (truncated 446 lines) ...\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:533:54 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:533:54 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:730:35 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:730:35 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:736:28 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:736:28 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:755:15 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:755:15 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:831:13 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:831:13 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:866:30 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:866:30 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:872:26 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:872:26 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:898:9 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:898:9 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1362:21 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1362:21 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1590:39 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1590:39 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1727:38 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1727:38 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1828:40 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1828:40 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1831:44 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1831:44 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:2390:35 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:2390:35 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:323:52 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:323:52 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:334:52 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:334:52 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:340:52 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:340:52 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:355:52 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:355:52 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:752:24 - error: Object of type \"ContextManager\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:752:24 - error: Object of type \"ContextManager\" is not callable (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:768:24 - error: Object of type \"ContextManager\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:768:24 - error: Object of type \"ContextManager\" is not callable (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:768:41 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:768:41 - error: Expected 0 positional arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:353:42 - error: No overloads for \"ioctl\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:353:42 - error: No overloads for \"ioctl\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:274:14 - error: No overloads for \"sub\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:274:14 - error: No overloads for \"sub\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:350:32 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:350:32 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:384:21 - error: No overloads for \"format\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:384:21 - error: No overloads for \"format\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:385:17 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:385:17 - error: No overloads for \"join\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1057:21 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1057:21 - error: No overloads for \"join\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1066:23 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1066:23 - error: No overloads for \"join\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1234:17 - error: No overloads for \"search\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1234:17 - error: No overloads for \"search\" match the provided arguments (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1459:66 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1459:66 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/builder.py:197:20 - error: Argument missing for parameter \"prefix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/builder.py:197:20 - error: Argument missing for parameter \"prefix\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:916:22 - error: Argument missing for parameter \"stream\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:916:22 - error: Argument missing for parameter \"stream\" (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1532:22 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1532:22 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2313:40 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2313:40 - error: Expected 1 positional argument (reportCallIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci_optimization.py:230:20 - error: Argument missing for parameter \"stream\" (reportGeneralTypeIssues)\n\n... (truncated 9919 lines) ...\n\npandas (https://github.com/pandas-dev/pandas)\n+   /tmp/mypy_primer/projects/pandas/pandas/compat/pickle_compat.py:181:32 - error: Expected 1 positional argument (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/compat/pickle_compat.py:184:32 - error: Expected 1 positional argument (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/compat/pickle_compat.py:186:32 - error: Expected 1 positional argument (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/algorithms.py:960:18 - error: No overloads for \"sort_values\" match the provided arguments\n+     Argument types: (bool) (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/algorithms.py:1756:16 - error: No overloads for \"map_infer\" match the provided arguments (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/algorithms.py:1758:16 - error: No overloads for \"map_infer_mask\" match the provided arguments (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/apply.py:102:46 - error: Argument expression after ** must be a mapping with a \"str\" key type (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/frame.py:4398:44 - error: Argument expression after ** must be a mapping with a \"str\" key type (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/frame.py:9815:22 - error: Argument missing for parameter \"column\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/frame.py:9822:36 - error: Argument missing for parameter \"column\" (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/generic.py:4275:13 - error: No overloads for \"__setitem__\" match the provided arguments (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/generic.py:10403:57 - error: Argument expression after ** must be a mapping with a \"str\" key type (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/generic.py:10423:57 - error: Argument expression after ** must be a mapping with a \"str\" key type (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/generic.py:10659:46 - error: Argument expression after ** must be a mapping with a \"str\" key type (reportCallIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/generic.py:10687:27 - error: Argument expression after ** must be a mapping with a \"str\" key type (reportCallIssue)\n\n... (truncated 183 lines) ...```"
    ],
    "commit_messages": [
      "Added new diagnostic rule `reportCallIssue` that covers issues relating to call expressions and arguments. This partially addresses #6973. (#7076)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f8cac254a19ac290524",
    "number": 7075,
    "body": "…ed to attribute accesses and `reportIndexIssue` is related to index operations and expressions. This partially addresses #6973.",
    "head_branch": "issue6973-8",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npyp (https://github.com/hauntsaninja/pyp)\n-     Member \"body\" is unknown (reportGeneralTypeIssues)\n+     Member \"body\" is unknown (reportAttributeAccessIssue)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-     Member \"get_package_name\" is unknown (reportGeneralTypeIssues)\n+     Member \"get_package_name\" is unknown (reportAttributeAccessIssue)\n-     Member \"get_package_name\" is unknown (reportGeneralTypeIssues)\n+     Member \"get_package_name\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:5:50 - error: \"OriginType\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:5:50 - error: \"OriginType\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:6:50 - error: \"Source\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:6:50 - error: \"Source\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:7:50 - error: \"TaintRange\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:7:50 - error: \"TaintRange\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:8:50 - error: \"create_context\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:8:50 - error: \"create_context\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:9:50 - error: \"reset_context\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:9:50 - error: \"reset_context\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:10:50 - error: \"set_ranges\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:10:50 - error: \"set_ranges\" is unknown import symbol (reportAttributeAccessIssue)\n-     Member \"is_periodic\" is unknown (reportGeneralTypeIssues)\n+     Member \"is_periodic\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:74:13 - error: \"__setitem__\" method not defined on type \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:74:13 - error: \"__setitem__\" method not defined on type \"str\" (reportIndexIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:74:13 - error: \"__setitem__\" method not defined on type \"int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:74:13 - error: \"__setitem__\" method not defined on type \"int\" (reportIndexIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:80:13 - error: \"__setitem__\" method not defined on type \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:80:13 - error: \"__setitem__\" method not defined on type \"str\" (reportIndexIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:80:13 - error: \"__setitem__\" method not defined on type \"int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:80:13 - error: \"__setitem__\" method not defined on type \"int\" (reportIndexIssue)\n-     Member \"sample_rate\" is unknown (reportGeneralTypeIssues)\n+     Member \"sample_rate\" is unknown (reportAttributeAccessIssue)\n-     \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"bool\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_asm_request_context.py:440:58 - error: \"OriginType\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_asm_request_context.py:440:58 - error: \"OriginType\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_asm_request_context.py:455:58 - error: \"OriginType\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_asm_request_context.py:455:58 - error: \"OriginType\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:167:23 - error: \"expat\" is not a known member of module \"xmltodict\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:167:23 - error: \"expat\" is not a known member of module \"xmltodict\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:186:62 - error: \"OriginType\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:186:62 - error: \"OriginType\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:212:62 - error: \"OriginType\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:212:62 - error: \"OriginType\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:263:58 - error: \"OriginType\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:263:58 - error: \"OriginType\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:314:58 - error: \"OriginType\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:314:58 - error: \"OriginType\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:335:58 - error: \"OriginType\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:335:58 - error: \"OriginType\" is unknown import symbol (reportAttributeAccessIssue)\n-     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+     Member \"decode\" is unknown (reportAttributeAccessIssue)\n-     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+     Member \"decode\" is unknown (reportAttributeAccessIssue)\n-     Member \"_log_limiter\" is unknown (reportGeneralTypeIssues)\n+     Member \"_log_limiter\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_metrics.py:119:34 - error: \"num_objects_tainted\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_metrics.py:119:34 - error: \"num_objects_tainted\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_dict.py:10:34 - error: \"Source\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_dict.py:10:34 - error: \"Source\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_utils.py:81:34 - error: \"OriginType\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_utils.py:81:34 - error: \"OriginType\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_utils.py:82:34 - error: \"origin_to_str\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_utils.py:82:34 - error: \"origin_to_str\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/processor.py:35:38 - error: \"create_context\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/processor.py:35:38 - error: \"create_context\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/processor.py:55:38 - error: \"reset_context\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/processor.py:55:38 - error: \"reset_context\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/reporter.py:25:54 - error: Object of type \"Module(\"Optional\")\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/reporter.py:25:54 - error: Object of type \"Module(\"Optional\")\" is not subscriptable (reportIndexIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/reporter.py:26:56 - error: Object of type \"Module(\"Optional\")\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/reporter.py:26:56 - error: Object of type \"Module(\"Optional\")\" is not subscriptable (reportIndexIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/reporter.py:27:60 - error: Object of type \"Module(\"Optional\")\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/reporter.py:27:60 - error: Object of type \"Module(\"Optional\")\" is not subscriptable (reportIndexIssue)\n\n... (truncated 10108 lines) ...\n\nmypy-protobuf (https://github.com/dropbox/mypy-protobuf)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:23:51 - error: \"Channel\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:23:51 - error: \"Channel\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:24:22 - error: \"UnaryUnaryMultiCallable\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:24:22 - error: \"UnaryUnaryMultiCallable\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:29:23 - error: \"UnaryStreamMultiCallable\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:29:23 - error: \"UnaryStreamMultiCallable\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:34:23 - error: \"StreamUnaryMultiCallable\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:34:23 - error: \"StreamUnaryMultiCallable\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:39:24 - error: \"StreamStreamMultiCallable\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:39:24 - error: \"StreamStreamMultiCallable\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:101:98 - error: \"Server\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:101:98 - error: \"Server\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:24:51 - error: \"Channel\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:24:51 - error: \"Channel\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:25:22 - error: \"UnaryUnaryMultiCallable\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:25:22 - error: \"UnaryUnaryMultiCallable\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:30:23 - error: \"UnaryUnaryMultiCallable\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:30:23 - error: \"UnaryUnaryMultiCallable\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:35:21 - error: \"UnaryUnaryMultiCallable\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:35:21 - error: \"UnaryUnaryMultiCallable\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:82:100 - error: \"Server\" is not a known member of module \"grpc\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:82:100 - error: \"Server\" is not a known member of module \"grpc\" (reportAttributeAccessIssue)\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:223:17 - error: \"__setitem__\" method not defined on type \"Tuple[Any, ...]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:223:17 - error: \"__setitem__\" method not defined on type \"Tuple[Any, ...]\" (reportIndexIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:245:17 - error: \"__setitem__\" method not defined on type \"Tuple[Any, ...]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:245:17 - error: \"__setitem__\" method not defined on type \"Tuple[Any, ...]\" (reportIndexIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/checks.py:17:32 - error: \"SearchStrategy\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/checks.py:17:32 - error: \"SearchStrategy\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:198:31 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:198:31 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:198:45 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:198:45 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:208:13 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:208:13 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:208:27 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:208:27 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:210:18 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:210:18 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:210:32 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:210:32 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/hypotheses.py:7:32 - error: \"SearchStrategy\" is unknown import symbol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/hypotheses.py:7:32 - error: \"SearchStrategy\" is unknown import symbol (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:35:8 - error: \"core\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:35:8 - error: \"core\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:36:8 - error: \"core\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:36:8 - error: \"core\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:39:27 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:39:27 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:39:48 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:39:48 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:40:30 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:40:30 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:40:54 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:40:54 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:143:29 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:143:29 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:143:40 - error: \"Index\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:143:40 - error: \"Index\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:144:19 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:144:19 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:144:30 - error: \"Index\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:144:30 - error: \"Index\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:195:29 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:195:29 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:195:43 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:195:43 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:202:19 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:202:19 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:202:33 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:202:33 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-         \"type[ABCMeta]\" is incompatible with \"type[ArraySchema]\" (reportGeneralTypeIssues)\n+         \"type[ABCMeta]\" is incompatible with \"type[ArraySchema]\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:284:46 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:284:46 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:284:57 - error: \"Index\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:284:57 - error: \"Index\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:284:67 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:284:67 - error: \"DataFrame\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-     Member \"example\" is unknown (reportGeneralTypeIssues)\n+     Member \"example\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:379:23 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:379:23 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:386:13 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:386:13 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:461:28 - error: \"Series\" is not a known member of module \"pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:461:28 - error: \"Series\" is not a known member of module \"pandas\" (reportAttributeAccessIssue)\n\n... (truncated 666 lines) ...\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:2699:20 - error: \"__getitem__\" method not defined on type \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:2699:20 - error: \"__getitem__\" method not defined on type \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportIndexIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:2699:31 - error: \"__getitem__\" method not defined on type \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:2699:31 - error: \"__getitem__\" method not defined on type \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportIndexIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:2699:41 - error: \"__getitem__\" method not defined on type \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:2699:41 - error: \"__getitem__\" method not defined on type \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportIndexIssue)\n-     Member \"__enter__\" is unknown (reportGeneralTypeIssues)\n+     Member \"__enter__\" is unknown (reportAttributeAccessIssue)\n-     Member \"__exit__\" is unknown (reportGeneralTypeIssues)\n+     Member \"__exit__\" is unknown (reportAttributeAccessIssue)\n-     Member \"value\" is unknown (reportGeneralTypeIssues)\n+     Member \"value\" is unknown (reportAttributeAccessIssue)\n-     Member \"value\" is unknown (reportGeneralTypeIssues)\n+     Member \"value\" is unknown (reportAttributeAccessIssue)\n-     Member \"value\" is unknown (reportGeneralTypeIssues)\n+     Member \"value\" is unknown (reportAttributeAccessIssue)\n-     Member \"value\" is unknown (reportGeneralTypeIssues)\n+     Member \"value\" is unknown (reportAttributeAccessIssue)\n-     Member \"value\" is unknown (reportGeneralTypeIssues)\n+     Member \"value\" is unknown (reportAttributeAccessIssue)\n-     Member \"value\" is unknown (reportGeneralTypeIssues)\n+     Member \"value\" is unknown (reportAttributeAccessIssue)\n-     Member \"iterkeys\" is unknown (reportGeneralTypeIssues)\n+     Member \"iterkeys\" is unknown (reportAttributeAccessIssue)\n-     Member \"color\" is unknown (reportGeneralTypeIssues)\n+     Member \"color\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:341:48 - error: \"connection\" is not a known member of module \"multiprocessing\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:341:48 - error: \"connection\" is not a known member of module \"multiprocessing\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:525:33 - error: \"color\" is not a known member of module \"llnl.util.tty\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:525:33 - error: \"color\" is not a known member of module \"llnl.util.tty\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:526:28 - error: \"color\" is not a known member of module \"llnl.util.tty\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:526:28 - error: \"color\" is not a known member of module \"llnl.util.tty\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:614:13 - error: \"color\" is not a known member of module \"llnl.util.tty\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:614:13 - error: \"color\" is not a known member of module \"llnl.util.tty\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:660:13 - error: \"color\" is not a known member of module \"llnl.util.tty\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:660:13 - error: \"color\" is not a known member of module \"llnl.util.tty\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:696:31 - error: \"WinDLL\" is not a known member of module \"ctypes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:696:31 - error: \"WinDLL\" is not a known member of module \"ctypes\" (reportAttributeAccessIssue)\n-     Member \"value\" is unknown (reportGeneralTypeIssues)\n+     Member \"value\" is unknown (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/abi.py:40:27 - error: \"compilers\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/abi.py:40:27 - error: \"compilers\" is not a known member of module \"spack\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:532:19 - error: \"fetch_strategy\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:532:19 - error: \"fetch_strategy\" is not a known member of module \"spack\" (reportAttributeAccessIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:534:30 - error: \"fetch_strategy\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:534:30 - error: \"fetch_strategy\" is not a known member of module \"spack\" (reportAttributeAccessIssue)\n\n... (truncated 521 lines) ...```"
    ],
    "commit_messages": [
      "Added two new diagnostic rules: `reportAttributeAccessIssue` is related to attribute accesses and `reportIndexIssue` is related to index operations and expressions. This partially addresses #6973. (#7075)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f8dac254a19ac290525",
    "number": 7074,
    "body": "… use of abstract classes and methods and `reportOperatorIssue` covers diagnostics related to unary and binary operators. This partially addresses #6973.",
    "head_branch": "issue6973-7",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/tests/core/test_data.py:207:20 - error: Method \"__antidote_parameter_dependency__\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_data.py:207:20 - error: Method \"__antidote_parameter_dependency__\" cannot be called because it is abstract and unimplemented (reportAbstractUsage)\n-   /tmp/mypy_primer/projects/antidote/tests/core/test_provider.py:20:20 - error: Method \"can_provide\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_provider.py:20:20 - error: Method \"can_provide\" cannot be called because it is abstract and unimplemented (reportAbstractUsage)\n-   /tmp/mypy_primer/projects/antidote/tests/core/test_provider.py:23:20 - error: Method \"unsafe_maybe_provide\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_provider.py:23:20 - error: Method \"unsafe_maybe_provide\" cannot be called because it is abstract and unimplemented (reportAbstractUsage)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/setup.py:185:66 - error: Operator \"+\" not supported for types \"Literal['lib']\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/setup.py:185:66 - error: Operator \"+\" not supported for types \"Literal['lib']\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"bytearray\" and \"str\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"bytearray\" and \"str\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Literal['Random.']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Literal['Random.']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['_datadog']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['_datadog']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['Messages']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['Messages']\" and \"None\" (reportOperatorIssue)\n-     Operator \">\" not supported for types \"int\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \">\" not supported for types \"int\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Literal['topic:']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Literal['topic:']\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Literal['topic:']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Literal['topic:']\" and \"None\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/collector/memalloc.py:166:23 - error: Operator \"/\" not supported for types \"tuple[TracebackType | int, ...]\" and \"Tuple[TracebackType, int]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/collector/memalloc.py:166:23 - error: Operator \"/\" not supported for types \"tuple[TracebackType | int, ...]\" and \"Tuple[TracebackType, int]\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/collector/memalloc.py:174:37 - error: Operator \"/\" not supported for types \"tuple[TracebackType | int, ...]\" and \"Tuple[TracebackType, int]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/collector/memalloc.py:174:37 - error: Operator \"/\" not supported for types \"tuple[TracebackType | int, ...]\" and \"Tuple[TracebackType, int]\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"str\" and \"memoryview\" when expected type is \"str | bytes\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"str\" and \"memoryview\" when expected type is \"str | bytes\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['datadog']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['datadog']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['b3multi']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['b3multi']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['b3']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['b3']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['tracecontext']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['tracecontext']\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Unbound\" and \"str\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Unbound\" and \"str\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:411:15 - error: Operator \"-\" not supported for type \"type[Infinity]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:411:15 - error: Operator \"-\" not supported for type \"type[Infinity]\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:419:16 - error: Operator \"-\" not supported for type \"type[Infinity]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:419:16 - error: Operator \"-\" not supported for type \"type[Infinity]\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:427:17 - error: Operator \"-\" not supported for type \"type[Infinity]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:427:17 - error: Operator \"-\" not supported for type \"type[Infinity]\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:437:49 - error: Operator \"-\" not supported for type \"type[Infinity]\" when expected type is \"int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:437:49 - error: Operator \"-\" not supported for type \"type[Infinity]\" when expected type is \"int\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['no such process']\" and \"bytes\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['no such process']\" and \"bytes\" (reportOperatorIssue)\n-     Operator \"*\" not supported for types \"float\" and \"object\" (reportGeneralTypeIssues)\n+     Operator \"*\" not supported for types \"float\" and \"object\" (reportOperatorIssue)\n-     Operator \"/\" not supported for types \"object\" and \"object\" (reportGeneralTypeIssues)\n+     Operator \"/\" not supported for types \"object\" and \"object\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['permission denied']\" and \"bytes\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['permission denied']\" and \"bytes\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['no such process']\" and \"bytes\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['no such process']\" and \"bytes\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"str\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"str\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['[dd.service=%(dd.service)s dd.env=%(dd.env)s dd.ve…']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['[dd.service=%(dd.service)s dd.env=%(dd.env)s dd.ve…']\" and \"None\" (reportOperatorIssue)\n-     Operator \"not in\" not supported for types \"Literal['[dd.service=%(dd.service)s dd.env=%(dd.env)s dd.ve…']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"not in\" not supported for types \"Literal['[dd.service=%(dd.service)s dd.env=%(dd.env)s dd.ve…']\" and \"None\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/patch.py:780:24 - error: Operator \"in\" not supported for types \"None\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/patch.py:780:24 - error: Operator \"in\" not supported for types \"None\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['Task class is failing']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['Task class is failing']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['Traceback (most recent call last)']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['Traceback (most recent call last)']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['Task class is failing']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['Task class is failing']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['Task class is failing']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['Task class is failing']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['Traceback (most recent call last)']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['Traceback (most recent call last)']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['Task class is failing']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['Task class is failing']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['ZeroDivisionError']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['ZeroDivisionError']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['by zero']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['by zero']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['Traceback (most recent call last)']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['Traceback (most recent call last)']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"str\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"str\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['test should fail']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['test should fail']\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"int\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"int\" and \"None\" (reportOperatorIssue)\n\n... (truncated 96 lines) ...\n\npandera (https://github.com/pandera-dev/pandera)\n-     Operator \"-\" not supported for types \"date\" and \"Literal[1]\" (reportGeneralTypeIssues)\n+     Operator \"-\" not supported for types \"date\" and \"Literal[1]\" (reportOperatorIssue)\n-     Operator \"-\" not supported for types \"date\" and \"Literal[1]\" (reportGeneralTypeIssues)\n+     Operator \"-\" not supported for types \"date\" and \"Literal[1]\" (reportOperatorIssue)\n\nspack (https://github.com/spack/spack)\n-     Operator \"<\" not supported for types \"object\" and \"object\" (reportGeneralTypeIssues)\n+     Operator \"<\" not supported for types \"object\" and \"object\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Unbound\" and \"str\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Unbound\" and \"str\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['image']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['image']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['tags']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['tags']\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Literal['ProcessError: Command exited with non-zero status:…']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Literal['ProcessError: Command exited with non-zero status:…']\" and \"None\" (reportOperatorIssue)\n-     Operator \"not in\" not supported for types \"str\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"not in\" not supported for types \"str\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"None\" and \"Literal[1]\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"None\" and \"Literal[1]\" (reportOperatorIssue)\n-     Operator \"*\" not supported for types \"Literal[' ']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"*\" not supported for types \"Literal[' ']\" and \"None\" (reportOperatorIssue)\n-     Operator \"-\" not supported for types \"int\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"-\" not supported for types \"int\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Unbound\" and \"Literal['_lp64']\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Unbound\" and \"Literal['_lp64']\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Unbound\" and \"list[Unknown]\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Unbound\" and \"list[Unknown]\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" and \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" and \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Unbound\" and \"Literal['.bkp']\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Unbound\" and \"Literal['.bkp']\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"list[Unknown]\" and \"tuple[Unknown, ...]\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"list[Unknown]\" and \"tuple[Unknown, ...]\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Literal['do not ']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Literal['do not ']\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Literal['do not ']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Literal['do not ']\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"Literal['do not ']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"Literal['do not ']\" and \"None\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"list[Unknown]\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"list[Unknown]\" and \"None\" (reportOperatorIssue)\n-     Operator \">=\" not supported for types \"str\" and \"Literal[16]\" (reportGeneralTypeIssues)\n+     Operator \">=\" not supported for types \"str\" and \"Literal[16]\" (reportOperatorIssue)\n-     Operator \">\" not supported for types \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" and \"float\" (reportGeneralTypeIssues)\n+     Operator \">\" not supported for types \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" and \"float\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['+stuff']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['+stuff']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['~mpi']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['~mpi']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['+dep']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['+dep']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['+foo+bar+baz']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['+foo+bar+baz']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['~foo']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['~foo']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['~bar']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['~bar']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['python']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['python']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['python']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['python']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['python']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['python']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['python']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['python']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['~external']\" and \"SpecBuildInterface\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['~external']\" and \"SpecBuildInterface\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"dict[Unknown, Unknown]\" and \"list[Unknown]\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"dict[Unknown, Unknown]\" and \"list[Unknown]\" (reportOperatorIssue)\n-     Operator \"+\" not supported for types \"list[Unknown]\" and \"dict[Unknown, Unknown]\" (reportGeneralTypeIssues)\n+     Operator \"+\" not supported for types \"list[Unknown]\" and \"dict[Unknown, Unknown]\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['test']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['test']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['debian']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['debian']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['x86_64']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['x86_64']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['fake']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['fake']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['zmpi']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['zmpi']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['zmpi']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['zmpi']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['zmpi']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['zmpi']\" and \"None\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"Literal['fake']\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"Literal['fake']\" and \"None\" (reportOperatorIssue)\n-     Operator \"<=\" not supported for types \"None\" and \"None\" (reportGeneralTypeIssues)\n+     Operator \"<=\" not supported for types \"None\" and \"None\" (reportOperatorIssue)\n-     Operator \"<\" not supported for types \"None\" and \"None\" when expected type is \"Unknown\" (reportGeneralTypeIssues)\n+     Operator \"<\" not supported for types \"None\" and \"None\" when expected type is \"Unknown\" (reportOperatorIssue)\n-     Operator \"in\" not supported for types \"None\" and \"str\" (reportGeneralTypeIssues)\n+     Operator \"in\" not supported for types \"None\" and \"str\" (reportOperatorIssue)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/url_fetch.py:349:20 - error: Operator \"in\" not supported for types \"LiteralString\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/url_fetch.py:349:20 - error: Operator \"in\" not supported for types \"LiteralString\" and \"None\" (reportOperatorIssue)\n-     Operator \"not in\" not supported for types \"None\" and \"str\" (reportGeneralTypeIssues)\n+     Operator \"not in\" not supported for types \"None\" and \"str\" (reportOperatorIssue)\n-     Operator \"not in\" not supported for types \"None\" and \"str\" (reportGeneralTypeIssues)\n\n... (truncated 209 lines) ...\n\npandas (https://github.com/pandas-dev/pandas)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/frame.py:2669:20 - error: Operator \"in\" not supported for types \"Hashable | str | Any | Unknown | Index\" and \"Unknown | None\"\n+     Operator \"in\" not supported for types \"Hashable\" and \"None\"\n+     Operator \"in\" not supported for types \"str\" and \"None\"\n+     Operator \"in\" not supported for types \"Index\" and \"None\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/frame.py:2671:22 - error: Operator \"in\" not supported for types \"int\" and \"Unknown | None\"\n+     Operator \"in\" not supported for types \"int\" and \"None\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/generic.py:4324:46 - error: Operator \"+\" not supported for types \"int | Unknown | slice | Any | None\" and \"Literal[1]\"\n+     Operator \"+\" not supported for types \"None\" and \"Literal[1]\" when expected type is \"Any\"\n+     Operator \"+\" not supported for types \"slice\" and \"Literal[1]\" when expected type is \"Any\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/generic.py:8691:44 - error: Operator \"~\" not supported for type \"ArrayLike\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/resample.py:2515:28 - error: Operator \"-\" not supported for types \"Period | NaTType\" and \"Period | NaTType\"\n+     Operator \"-\" not supported for types \"NaTType\" and \"Period\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/sample.py:69:8 - error: Operator \"<\" not supported for types \"ArrayLike | Any\" and \"Literal[0]\"\n+     Operator \"<\" not supported for types \"ExtensionArray\" and \"Literal[0]\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/sorting.py:675:44 - error: Operator \"*\" not supported for types \"float\" and \"Unknown | int | None\"\n+     Operator \"*\" not supported for types \"float\" and \"None\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:1397:54 - error: Operator \"*\" not supported for types \"DatetimeArray | TimedeltaArray | Unknown | Period\" and \"int\"\n+     Operator \"*\" not supported for types \"Period\" and \"int\" when expected type is \"Unknown | int\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:1425:53 - error: Operator \"-\" not supported for type \"DatetimeArray | TimedeltaArray | Unknown\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:1445:52 - error: Operator \"-\" not supported for type \"DatetimeArray | TimedeltaArray | Unknown\" when expected type is \"TimedeltaArray\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/interval.py:1553:17 - error: Operator \"<\" not supported for types \"DTScalarOrNaT | Unknown\" and \"DTScalarOrNaT | Unknown\"\n+     Operator \"<\" not supported for types \"Period\" and \"Period\"\n+     Operator \"<\" not supported for types \"Period\" and \"Timestamp\"\n+     Operator \"<\" not supported for types \"Period\" and \"Timedelta\"\n+     Operator \"<\" not supported for types \"Timestamp\" and \"Period\"\n+     Operator \"<\" not supported for types \"Timestamp\" and \"Timedelta\"\n+     Operator \"<\" not supported for types \"Timedelta\" and \"Period\"\n+     Operator \"<\" not supported for types \"Timedelta\" and \"Timestamp\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/interval.py:1554:20 - error: Operator \">\" not supported for types \"DTScalarOrNaT | Unknown\" and \"DTScalarOrNaT | Unknown\"\n+     Operator \">\" not supported for types \"Period\" and \"Period\"\n+     Operator \">\" not supported for types \"Period\" and \"Timestamp\"\n+     Operator \">\" not supported for types \"Period\" and \"Timedelta\"\n+     Operator \">\" not supported for types \"Timestamp\" and \"Period\"\n+     Operator \">\" not supported for types \"Timestamp\" and \"Timedelta\"\n+     Operator \">\" not supported for types \"Timedelta\" and \"Period\"\n+     Operator \">\" not supported for types \"Timedelta\" and \"Timestamp\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/interval.py:1560:13 - error: Operator \"<=\" not supported for types \"DTScalarOrNaT | Unknown\" and \"DTScalarOrNaT | Unknown\"\n+     Operator \"<=\" not supported for types \"Period\" and \"Period\"\n+     Operator \"<=\" not supported for types \"Period\" and \"Timestamp\"\n+     Operator \"<=\" not supported for types \"Period\" and \"Timedelta\"\n+     Operator \"<=\" not supported for types \"Timestamp\" and \"Period\"\n+     Operator \"<=\" not supported for types \"Timestamp\" and \"Timedelta\"\n+     Operator \"<=\" not supported for types \"Timedelta\" and \"Period\"\n+     Operator \"<=\" not supported for types \"Timedelta\" and \"Timestamp\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/interval.py:1561:16 - error: Operator \">=\" not supported for types \"DTScalarOrNaT | Unknown\" and \"DTScalarOrNaT | Unknown\"\n+     Operator \">=\" not supported for types \"Period\" and \"Period\"\n+     Operator \">=\" not supported for types \"Period\" and \"Timestamp\"\n+     Operator \">=\" not supported for types \"Period\" and \"Timedelta\"\n+     Operator \">=\" not supported for types \"Timestamp\" and \"Period\"\n+     Operator \">=\" not supported for types \"Timestamp\" and \"Timedelta\"\n+     Operator \">=\" not supported for types \"Timedelta\" and \"Period\"\n+     Operator \">=\" not supported for types \"Timedelta\" and \"Timestamp\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/dtypes/cast.py:1690:30 - error: Operator \"<\" not supported for types \"Unknown | list[Unknown]\" and \"Literal[0]\"\n+     Operator \"<\" not supported for types \"list[Unknown]\" and \"Literal[0]\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/groupby/grouper.py:757:26 - error: Operator \"<\" not supported for types \"Unknown | FrozenList | list[Unknown] | Any\" and \"Literal[0]\"\n+     Operator \"<\" not supported for types \"FrozenList\" and \"Literal[0]\"\n+     Operator \"<\" not supported for types \"list[Unknown]\" and \"Literal[0]\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/groupby/grouper.py:758:20 - error: Operator \"<\" not supported for types \"Unknown | FrozenList | Any\" and \"Literal[0]\"\n+     Operator \"<\" not supported for types \"FrozenList\" and \"Literal[0]\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/groupby/grouper.py:801:27 - error: Operator \"<\" not supported for types \"Unknown | FrozenList | list[Unknown] | Any\" and \"Literal[0]\"\n+     Operator \"<\" not supported for types \"FrozenList\" and \"Literal[0]\"\n+     Operator \"<\" not supported for types \"list[Unknown]\" and \"Literal[0]\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/groupby/grouper.py:813:42 - error: Operator \">=\" not supported for types \"Unknown | FrozenList | list[Unknown] | Any\" and \"int\"\n+     Operator \">=\" not supported for types \"FrozenList\" and \"int\"\n+     Operator \">=\" not supported for types \"list[Unknown]\" and \"int\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/groupby/grouper.py:813:60 - error: Operator \"+\" not supported for types \"Unknown | FrozenList | list[Unknown] | Any\" and \"Literal[1]\"\n+     Operator \"+\" not supported for types \"FrozenList\" and \"Literal[1]\"\n+     Operator \"+\" not supported for types \"list[Unknown]\" and \"Literal[1]\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/indexes/base.py:6362:16 - error: Operator \">=\" not supported for types \"Scalar | NaTType | object | Any | Index\" and \"Literal[0]\"\n+     Operator \">=\" not supported for types \"object\" and \"Literal[0]\"\n+     Operator \">=\" not supported for types \"str\" and \"Literal[0]\"\n+     Operator \">=\" not supported for types \"Period\" and \"Literal[0]\"\n+     Operator \">=\" not supported for types \"Timestamp\" and \"Literal[0]\"\n+     Operator \">=\" not supported for types \"Timedelta\" and \"Literal[0]\"\n+     Operator \">=\" not supported for types \"Interval[Unknown]\" and \"Literal[0]\"\n+     Operator \">=\" not supported for types \"date\" and \"Literal[0]\" (reportOperatorIssue)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/indexes/category.py:267:20 - error: Operator \"|\" not supported for types \"ArrayLike\" and \"bool\"\n+     Operator \"|\" not supported for types \"ExtensionArray\" and \"bool\" (reportOperatorIssue)\n\n... (truncated 96 lines) ...```"
    ],
    "commit_messages": [
      "Added two new diagnostic rules: `reportAbstractUsage` reports invalid use of abstract classes and methods and `reportOperatorIssue` covers diagnostics related to unary and binary operators. This partially addresses #6973. (#7074)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f8eac254a19ac290526",
    "number": 7073,
    "body": "…invalid type arg usage and `reportRedeclaration` reports attempts to redeclare the type of a symbol. This partially addresses #6973.",
    "head_branch": "issue6973-6",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/encoder/utils.py:21:9 - error: Function declaration \"init_encoder\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/encoder/utils.py:21:9 - error: Function declaration \"init_encoder\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:93:39 - error: Parameter declaration \"receive\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:93:39 - error: Parameter declaration \"receive\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:77:11 - error: Class declaration \"DDWaf\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:77:11 - error: Class declaration \"DDWaf\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:85:5 - error: Function declaration \"taint_structure\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:85:5 - error: Function declaration \"taint_structure\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/taint_sinks/_base.py:137:18 - error: Union requires two or more type arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/taint_sinks/_base.py:137:18 - error: Union requires two or more type arguments (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/asyncio/compat.py:6:9 - error: Function declaration \"asyncio_current_task\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/asyncio/compat.py:6:9 - error: Function declaration \"asyncio_current_task\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/gevent/greenlet.py:50:11 - error: Class declaration \"TracedIMap\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/gevent/greenlet.py:50:11 - error: Class declaration \"TracedIMap\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/openai/_endpoint_hooks.py:143:23 - error: Function declaration \"traced_streamed_response\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/openai/_endpoint_hooks.py:143:23 - error: Function declaration \"traced_streamed_response\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/tornado/stack_context.py:17:11 - error: Class declaration \"TracerStackContext\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/tornado/stack_context.py:17:11 - error: Class declaration \"TracerStackContext\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/monotonic/__init__.py:117:21 - error: Function declaration \"monotonic\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/monotonic/__init__.py:117:21 - error: Function declaration \"monotonic\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:226:9 - error: Function declaration \"per_cpu_times\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:226:9 - error: Function declaration \"per_cpu_times\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:260:9 - error: Function declaration \"cpu_count_physical\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:260:9 - error: Function declaration \"cpu_count_physical\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/asgi/test_asgi.py:531:15 - error: Function declaration \"test_app\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/asgi/test_asgi.py:531:15 - error: Function declaration \"test_app\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/celery/base.py:55:13 - error: Method declaration \"celery_test_setup\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/celery/base.py:55:13 - error: Method declaration \"celery_test_setup\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/django_app/appsec_urls.py:124:13 - error: Function declaration \"assert_origin_path\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/django_app/appsec_urls.py:124:13 - error: Function declaration \"assert_origin_path\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_blueprint.py:64:13 - error: Function declaration \"test_view\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_blueprint.py:64:13 - error: Function declaration \"test_view\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/sanic/test_sanic.py:134:9 - error: Function declaration \"client\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/sanic/test_sanic.py:134:9 - error: Function declaration \"client\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/tornado/web/app.py:211:11 - error: Class declaration \"ExecutorCustomHandler\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/tornado/web/app.py:211:11 - error: Class declaration \"ExecutorCustomHandler\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig.py:222:11 - error: Class declaration \"Callback\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig.py:222:11 - error: Class declaration \"Callback\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig.py:244:11 - error: Class declaration \"Callback\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig.py:244:11 - error: Class declaration \"Callback\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig.py:281:11 - error: Class declaration \"Callback\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig.py:281:11 - error: Class declaration \"Callback\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig_client.py:73:13 - error: Function declaration \"_mock_appsec_callback\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig_client.py:73:13 - error: Function declaration \"_mock_appsec_callback\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig_client.py:161:11 - error: Class declaration \"Callback1And2Class\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig_client.py:161:11 - error: Class declaration \"Callback1And2Class\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig_client.py:168:11 - error: Class declaration \"Callback3Class\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/remoteconfig/test_remoteconfig_client.py:168:11 - error: Class declaration \"Callback3Class\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_trace_utils.py:503:5 - error: Function declaration \"test_set_http_meta_headers_useragent\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n\n... (truncated 1 lines) ...\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:724:19 - error: Function declaration \"_wrapper\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:724:19 - error: Function declaration \"_wrapper\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:79:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:79:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:86:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:86:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:101:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:101:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:131:9 - error: Method declaration \"apply\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:131:9 - error: Method declaration \"apply\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:136:9 - error: Method declaration \"apply\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:136:9 - error: Method declaration \"apply\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:152:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:152:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:159:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:159:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:199:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:199:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:215:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:215:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:231:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:231:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:260:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:260:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/hypotheses.py:109:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/hypotheses.py:109:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/hypotheses.py:114:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/hypotheses.py:114:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:52:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:52:9 - error: Method declaration \"preprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:71:9 - error: Method declaration \"apply\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:71:9 - error: Method declaration \"apply\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:76:9 - error: Method declaration \"apply\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:76:9 - error: Method declaration \"apply\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:93:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:93:9 - error: Method declaration \"postprocess\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/numpy_engine.py:259:11 - error: Class declaration \"Float64\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/numpy_engine.py:259:11 - error: Class declaration \"Float64\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/numpy_engine.py:308:11 - error: Class declaration \"Complex128\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/numpy_engine.py:308:11 - error: Class declaration \"Complex128\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:218:26 - error: Parameter declaration \"pandera_dtype\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:218:26 - error: Parameter declaration \"pandera_dtype\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:633:11 - error: Class declaration \"STRING\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:633:11 - error: Class declaration \"STRING\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/type_aliases.py:26:21 - error: Union requires two or more type arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/type_aliases.py:26:21 - error: Union requires two or more type arguments (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_extensions.py:37:9 - error: Function declaration \"custom_check\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_extensions.py:37:9 - error: Function declaration \"custom_check\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_typing.py:316:11 - error: Class declaration \"SchemaAnnotatedIntervalDtype\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_typing.py:316:11 - error: Class declaration \"SchemaAnnotatedIntervalDtype\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/tests/geopandas/test_pydantic.py:53:11 - error: Class declaration \"Schema\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/geopandas/test_pydantic.py:53:11 - error: Class declaration \"Schema\" is obscured by a declaration of the same name (reportRedeclaration)\n-   /tmp/mypy_primer/projects/pandera/tests/geopandas/test_pydantic.py:57:11 - error: Class declaration \"MyModel\" is obscured by a declaration of the same name (reportGeneralTypeIssues)\n\n... (truncated 1 lines) ...\n\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:985:54 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:985:54 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:985:73 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:985:73 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:1033:29 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:1033:29 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-     Type \"F@__call__\" is incompatible with ParamSpec \"_P@staticmethod\" (reportGeneralTypeIssues)\n+     Type \"F@__call__\" is incompatible with ParamSpec \"_P@staticmethod\" (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:1042:23 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:1042:23 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-     Type \"F@__call__\" is incompatible with ParamSpec \"_P@staticmethod\" (reportGeneralTypeIssues)\n+     Type \"F@__call__\" is incompatible with ParamSpec \"_P@staticmethod\" (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:1048:28 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:1048:28 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:1057:22 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:1057:22 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:43:54 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:43:54 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:43:73 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:43:73 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:93:34 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:93:34 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-     Type \"F@rewire\" is incompatible with ParamSpec \"_P@staticmethod\" (reportGeneralTypeIssues)\n+     Type \"F@rewire\" is incompatible with ParamSpec \"_P@staticmethod\" (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:93:51 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:93:51 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:132:29 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:132:29 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-     Type \"F@__call__\" is incompatible with ParamSpec \"_P@staticmethod\" (reportGeneralTypeIssues)\n+     Type \"F@__call__\" is incompatible with ParamSpec \"_P@staticmethod\" (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:141:23 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:141:23 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-     Type \"F@__call__\" is incompatible with ParamSpec \"_P@staticmethod\" (reportGeneralTypeIssues)\n+     Type \"F@__call__\" is incompatible with ParamSpec \"_P@staticmethod\" (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:147:28 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:147:28 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:156:22 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:156:22 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:278:66 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:278:66 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:278:85 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:278:85 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_wiring.py:15:54 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_wiring.py:15:54 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_wiring.py:15:73 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_wiring.py:15:73 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:576:30 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:576:30 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-     Type \"LazyFunction[P@as_default, T@as_default]\" is incompatible with ParamSpec \"_P@staticmethod\" (reportGeneralTypeIssues)\n+     Type \"LazyFunction[P@as_default, T@as_default]\" is incompatible with ParamSpec \"_P@staticmethod\" (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1237:43 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1237:43 - error: Too few type arguments provided for \"classmethod\"; expected 3 but received 1 (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1241:44 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1241:44 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportInvalidTypeArguments)\n-     Type \"LazyFunction[P@__call__, T@__call__]\" is incompatible with ParamSpec \"_P@staticmethod\" (reportGeneralTypeIssues)\n+     Type \"LazyFunction[P@__call__, T@__call__]\" is incompatible with ParamSpec \"_P@staticmethod\" (reportInvalidTypeArguments)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1298:36 - error: Too few type arguments provided for \"staticmethod\"; expected 2 but received 1 (reportGeneralTypeIssues)\n\n... (truncated 71 lines) ...\n\nspack (https://github.com/spack/spack)\n\n... (truncated 145 lines) ...```"
    ],
    "commit_messages": [
      "Added two new diagnostic rules: `reportInvalidTypeArguments` reports invalid type arg usage and `reportRedeclaration` reports attempts to redeclare the type of a symbol. This partially addresses #6973. (#7073)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f8eac254a19ac290527",
    "number": 7072,
    "body": "…inconsistencies between overload signatures and/or implementation and `reportNoOverloadImplementation` reports an overloaded function with a missing implementation. This partially addresses #6973.",
    "head_branch": "issue6973-5",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n-       Position-only parameter mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+       Position-only parameter mismatch; expected 1 but received 0 (reportInconsistentOverload)\n\npandas (https://github.com/pandas-dev/pandas)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:371:9 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(self: Self@DatetimeLikeArrayMixin, key: PositionalIndexer2D) -> (DTScalarOrNaT | Self@DatetimeLikeArrayMixin)\" cannot be assigned to type \"(self: Self@DatetimeLikeArrayMixin, item: ScalarIndexer) -> DTScalarOrNaT\"\n+       Parameter name mismatch: \"item\" versus \"key\" (reportInconsistentOverload)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:371:9 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Type \"(self: Self@DatetimeLikeArrayMixin, key: PositionalIndexer2D) -> (DTScalarOrNaT | Self@DatetimeLikeArrayMixin)\" cannot be assigned to type \"(self: Self@DatetimeLikeArrayMixin, item: SequenceIndexer | PositionalIndexerTuple) -> Self@DatetimeLikeArrayMixin\"\n+       Parameter name mismatch: \"item\" versus \"key\" (reportInconsistentOverload)\n- 574 errors, 3 warnings, 0 informations \n+ 576 errors, 3 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n-   /tmp/mypy_primer/projects/trio/src/trio/_subprocess.py:1068:19 - error: \"open_process\" is marked as overload, but no implementation is provided (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_subprocess.py:1068:19 - error: \"open_process\" is marked as overload, but no implementation is provided (reportNoOverloadImplementation)\n-   /tmp/mypy_primer/projects/trio/src/trio/_subprocess.py:1104:19 - error: \"run_process\" is marked as overload, but no implementation is provided (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_subprocess.py:1104:19 - error: \"run_process\" is marked as overload, but no implementation is provided (reportNoOverloadImplementation)\n\n```"
    ],
    "commit_messages": [
      "Added two new diagnostic rules: `reportInconsistentOverload` reports inconsistencies between overload signatures and/or implementation and `reportNoOverloadImplementation` reports an overloaded function with a missing implementation. This partially addresses #6973. (#7072)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f8fac254a19ac290528",
    "number": 7071,
    "body": "…plit off from `reportUnboundVariable`. This addresses #6896.",
    "head_branch": "issue6896",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npyp (https://github.com/hauntsaninja/pyp)\n-   /tmp/mypy_primer/projects/pyp/tests/test_pyp.py:50:25 - error: \"old_stdin\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pyp/tests/test_pyp.py:50:25 - error: \"old_stdin\" is possibly unbound (reportPossiblyUnboundVariable)\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:200:36 - error: \"ps\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:200:36 - error: \"ps\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:208:35 - error: \"ps\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:208:35 - error: \"ps\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:215:37 - error: \"_handler\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:215:37 - error: \"_handler\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:215:47 - error: \"GetCoreSchemaHandler\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:215:47 - error: \"GetCoreSchemaHandler\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:216:14 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:216:14 - error: \"core_schema\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:217:20 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:217:20 - error: \"core_schema\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:534:20 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:534:20 - error: \"core_schema\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:578:37 - error: \"_handler\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:578:37 - error: \"_handler\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:578:47 - error: \"GetCoreSchemaHandler\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:578:47 - error: \"GetCoreSchemaHandler\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:579:14 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:579:14 - error: \"core_schema\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:580:20 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:580:20 - error: \"core_schema\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:587:27 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:587:27 - error: \"core_schema\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:588:13 - error: \"_handler\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:588:13 - error: \"_handler\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:588:23 - error: \"GetJsonSchemaHandler\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:588:23 - error: \"GetJsonSchemaHandler\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:591:27 - error: \"_handler\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:591:27 - error: \"_handler\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:592:27 - error: \"_handler\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:592:27 - error: \"_handler\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/container.py:506:20 - error: \"next_ordered_col\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/container.py:506:20 - error: \"next_ordered_col\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/column.py:204:25 - error: \"reason_code\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/column.py:204:25 - error: \"reason_code\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/container.py:377:20 - error: \"next_ordered_col\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/container.py:377:20 - error: \"next_ordered_col\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1077:34 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1077:34 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1077:49 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1077:49 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1118:32 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1118:32 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1119:48 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1119:48 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1167:39 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1167:39 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1170:40 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1170:40 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1194:59 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1194:59 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1195:36 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1195:36 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1197:36 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1197:36 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1231:48 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1231:48 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1238:47 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1238:47 - error: \"gpd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1438:22 - error: \"RootModel\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1438:22 - error: \"RootModel\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/type_aliases.py:26:27 - error: \"DataFrame\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/type_aliases.py:26:27 - error: \"DataFrame\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:94:22 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:94:22 - error: \"st\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:94:31 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:94:31 - error: \"st\" is possibly unbound (reportPossiblyUnboundVariable)\n\n... (truncated 286 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_monkey.py:172:17 - error: \"telemetry\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_monkey.py:172:17 - error: \"telemetry\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_monkey.py:173:17 - error: \"telemetry\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_monkey.py:173:17 - error: \"telemetry\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_monkey.py:182:25 - error: \"telemetry\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_monkey.py:182:25 - error: \"telemetry\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_monkey.py:187:21 - error: \"telemetry\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/_monkey.py:187:21 - error: \"telemetry\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:174:20 - error: \"seekable\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:174:20 - error: \"seekable\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:177:56 - error: \"body\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:177:56 - error: \"body\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_processor.py:344:80 - error: \"info\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_processor.py:344:80 - error: \"info\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:154:106 - error: \"address\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:154:106 - error: \"address\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:158:25 - error: \"address\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:158:25 - error: \"address\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:160:30 - error: \"value\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:160:30 - error: \"value\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:84:22 - error: \"ddwaf_config\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:84:22 - error: \"ddwaf_config\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:87:27 - error: \"ddwaf_object\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:87:27 - error: \"ddwaf_object\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:88:34 - error: \"ddwaf_object\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:88:34 - error: \"ddwaf_object\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:89:28 - error: \"py_ddwaf_init\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:89:28 - error: \"py_ddwaf_init\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:101:13 - error: \"ddwaf_object_free\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:101:13 - error: \"ddwaf_object_free\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:105:20 - error: \"py_ddwaf_known_addresses\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:105:20 - error: \"py_ddwaf_known_addresses\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:107:29 - error: \"diagnostics\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:107:29 - error: \"diagnostics\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:107:42 - error: \"ddwaf_object\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:107:42 - error: \"ddwaf_object\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:108:27 - error: \"diagnostics\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:108:27 - error: \"diagnostics\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:113:13 - error: \"ddwaf_object_free\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:113:13 - error: \"ddwaf_object_free\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:113:31 - error: \"diagnostics\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:113:31 - error: \"diagnostics\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:119:53 - error: \"DDWafRulesType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:119:53 - error: \"DDWafRulesType\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:121:21 - error: \"ddwaf_object\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:121:21 - error: \"ddwaf_object\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:122:27 - error: \"ddwaf_object\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:122:27 - error: \"ddwaf_object\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:123:22 - error: \"py_ddwaf_update\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:123:22 - error: \"py_ddwaf_update\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:125:13 - error: \"ddwaf_object_free\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:125:13 - error: \"ddwaf_object_free\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:134:49 - error: \"ddwaf_context_capsule\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:134:49 - error: \"ddwaf_context_capsule\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:137:23 - error: \"py_ddwaf_context_init\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:137:23 - error: \"py_ddwaf_context_init\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:147:13 - error: \"ctx\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:147:13 - error: \"ctx\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:147:18 - error: \"ddwaf_context_capsule\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:147:18 - error: \"ddwaf_context_capsule\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:148:13 - error: \"data\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:148:13 - error: \"data\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:148:19 - error: \"DDWafRulesType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:148:19 - error: \"DDWafRulesType\" is possibly unbound (reportPossiblyUnboundVariable)\n\n... (truncated 396 lines) ...\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:138:31 - error: \"key\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:138:31 - error: \"key\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:353:42 - error: \"fcntl\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:353:42 - error: \"fcntl\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:353:58 - error: \"termios\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:353:58 - error: \"termios\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:569:16 - error: \"input_multiprocess_fd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:569:16 - error: \"input_multiprocess_fd\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:797:25 - error: \"error_msg\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:797:25 - error: \"error_msg\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1292:34 - error: \"key\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1292:34 - error: \"key\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1995:35 - error: \"tarfile_path\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1995:35 - error: \"tarfile_path\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2006:15 - error: \"tarfile_path\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2006:15 - error: \"tarfile_path\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2452:72 - error: \"description_url\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2452:72 - error: \"description_url\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1140:28 - error: \"pkg\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1140:28 - error: \"pkg\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1141:31 - error: \"pkg\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1141:31 - error: \"pkg\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1146:36 - error: \"pkg\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1146:36 - error: \"pkg\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1146:58 - error: \"pkg\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1146:58 - error: \"pkg\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1146:87 - error: \"pkg\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1146:87 - error: \"pkg\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1157:22 - error: \"pkg\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1157:22 - error: \"pkg\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:993:40 - error: \"affected_specs\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:993:40 - error: \"affected_specs\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1093:17 - error: \"buildcache_copies\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1093:17 - error: \"buildcache_copies\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1096:29 - error: \"buildcache_copy_src_prefix\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1096:29 - error: \"buildcache_copy_src_prefix\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1101:29 - error: \"buildcache_copy_dest_prefix\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1101:29 - error: \"buildcache_copy_dest_prefix\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1108:29 - error: \"buildcache_copy_src_prefix\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1108:29 - error: \"buildcache_copy_src_prefix\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1113:29 - error: \"buildcache_copy_dest_prefix\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1113:29 - error: \"buildcache_copy_dest_prefix\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1355:37 - error: \"buildcache_copies\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1355:37 - error: \"buildcache_copies\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1789:63 - error: \"yf\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1789:63 - error: \"yf\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1863:66 - error: \"rel_gpg_path\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1863:66 - error: \"rel_gpg_path\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1925:66 - error: \"mount_as_dir\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1925:66 - error: \"mount_as_dir\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1926:28 - error: \"mount_as_dir\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1926:28 - error: \"mount_as_dir\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1927:35 - error: \"mounted_gpg_path\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1927:35 - error: \"mounted_gpg_path\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1928:38 - error: \"mounted_env_dir\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1928:38 - error: \"mounted_env_dir\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1929:23 - error: \"mounted_repro_dir\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1929:23 - error: \"mounted_repro_dir\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1941:38 - error: \"mounted_repro_dir\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1941:38 - error: \"mounted_repro_dir\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1964:37 - error: \"mounted_workdir\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1964:37 - error: \"mounted_workdir\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1969:38 - error: \"mount_as_dir\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1969:38 - error: \"mount_as_dir\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1974:60 - error: \"mount_as_dir\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1974:60 - error: \"mount_as_dir\" is possibly unbound (reportPossiblyUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1976:30 - error: \"mounted_workdir\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1976:30 - error: \"mounted_workdir\" is possibly unbound (reportPossiblyUnboundVariable)\n\n... (truncated 161 lines) ...```"
    ],
    "commit_messages": [
      "Added new diagnostic rule `reportPossiblyUnboundVariable`, which is split off from `reportUnboundVariable`. This addresses #6896. (#7071)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f90ac254a19ac290529",
    "number": 7070,
    "body": "…smatches detected by `typing.assert_type` and `reportUnusedExcept` for situations where an except statement is determined to be unreachable.",
    "head_branch": "issue6973-4",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n-     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportGeneralTypeIssues)\n+     \"TemporaryClass\" is a subclass of \"TemporaryClass\" (reportUnusedExcept)\n\nspack (https://github.com/spack/spack)\n-     \"error\" is a subclass of \"IOError\" (reportGeneralTypeIssues)\n+     \"error\" is a subclass of \"IOError\" (reportUnusedExcept)\n\ntrio (https://github.com/python-trio/trio)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/type_tests/raisesgroup.py:120:9 - error: \"assert_type\" mismatch: expected \"RaisesGroup | Unknown\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/type_tests/raisesgroup.py:120:9 - error: \"assert_type\" mismatch: expected \"RaisesGroup | Unknown\" but received \"Unknown\" (reportAssertTypeFailure)\n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:210:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:210:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:211:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:211:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:215:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:215:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:216:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:216:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:569:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:569:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:570:23 - error: \"assert_type\" mismatch: expected \"Series[str]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:570:23 - error: \"assert_type\" mismatch: expected \"Series[str]\" but received \"DataFrame\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:580:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:580:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:584:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:584:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"DataFrame\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:595:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:595:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:600:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:600:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[tuple[int, int, int]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:605:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:605:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[dict[str, int]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:620:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[Series[Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:620:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[Series[Unknown]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:624:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:624:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:628:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:628:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:637:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:637:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:638:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:638:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:639:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:639:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:653:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:653:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:659:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:659:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[tuple[int, int, int]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:664:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:664:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[dict[str, int]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:682:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:682:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:688:13 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:688:13 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:693:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:693:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:755:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:755:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:761:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:761:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:767:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:767:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportAssertTypeFailure)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:773:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n\n... (truncated 1282 lines) ...\n\n```"
    ],
    "commit_messages": [
      "Added two new diagnostic rules: `reportAssertTypeFailure` for type mismatches detected by `typing.assert_type` and `reportUnusedExcept` for situations where an except statement is determined to be unreachable. (#7070)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f91ac254a19ac29052a",
    "number": 7069,
    "body": "…ting of invalid type expression forms. This partly addresses #6973.",
    "head_branch": "issue6973-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:68:45 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:68:45 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:76:45 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:76:45 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:83:45 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:83:45 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:106:22 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:106:22 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:116:29 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:116:29 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:52:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:52:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:61:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:61:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:77:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:77:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:93:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:93:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:107:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:107:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/propagation/http.py:661:47 - error: Type annotation not supported for this statement (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/propagation/http.py:661:47 - error: Type annotation not supported for this statement (reportInvalidTypeForm)\n-     \"AsyncGenerator[Any, Any, Any]\" is incompatible with \"Generator[Unknown, None, None]\" (reportGeneralTypeIssues)\n+     \"AsyncGenerator[Any, Any, Any]\" is incompatible with \"Generator[Unknown, None, None]\" (reportInvalidTypeForm)\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:20 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:20 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:47 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:47 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:24 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:51 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:51 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:24 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:55 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:55 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:36 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:36 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:67 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:67 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:21 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:52 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:52 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:33 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:33 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:64 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:64 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:141:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:141:11 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:16 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:16 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:57 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:57 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:60 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:60 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:214:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:214:11 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:216:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:216:6 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:230:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:230:11 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:232:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:232:6 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:26 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:26 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:54 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:54 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:24 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:52 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:52 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:271:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:271:11 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:274:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:274:6 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:296:28 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:296:28 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:15:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:15:21 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:37:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:37:21 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:784:18 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:784:18 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n\n... (truncated 74 lines) ...\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py:225:28 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py:225:28 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n\ntrio (https://github.com/python-trio/trio)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:171:41 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:171:41 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n\n```"
    ],
    "commit_messages": [
      "Added new diagnostic rule `reportInvalidTypeForm` that controls reporting of invalid type expression forms. This partly addresses #6973. (#7069)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f92ac254a19ac29052b",
    "number": 7068,
    "body": "…ting of invalid type expression forms. This partly addresses #6973.",
    "head_branch": "issue6973-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:20 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:20 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:47 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:47 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:24 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:51 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:51 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:24 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:55 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:55 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:36 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:36 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:67 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:67 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:21 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:52 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:52 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:33 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:33 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:64 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:64 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:141:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:141:11 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:16 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:16 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:57 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:57 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:60 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:60 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:214:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:214:11 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:216:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:216:6 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:230:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:230:11 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:232:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:232:6 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:26 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:26 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:54 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:54 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:24 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:52 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:52 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:271:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:271:11 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:274:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:274:6 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:296:28 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:296:28 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:15:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:15:21 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:37:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:37:21 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:784:18 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:784:18 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n\n... (truncated 74 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:68:45 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:68:45 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:76:45 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:76:45 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:83:45 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:83:45 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:106:22 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:106:22 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:116:29 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:116:29 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:52:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:52:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:61:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:61:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:77:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:77:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:93:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:93:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:107:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:107:17 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/propagation/http.py:661:47 - error: Type annotation not supported for this statement (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/propagation/http.py:661:47 - error: Type annotation not supported for this statement (reportInvalidTypeForm)\n-     \"AsyncGenerator[Any, Any, Any]\" is incompatible with \"Generator[Unknown, None, None]\" (reportGeneralTypeIssues)\n+     \"AsyncGenerator[Any, Any, Any]\" is incompatible with \"Generator[Unknown, None, None]\" (reportInvalidTypeForm)\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py:225:28 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py:225:28 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n\ntrio (https://github.com/python-trio/trio)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:171:41 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:171:41 - error: Variable not allowed in type expression (reportInvalidTypeForm)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f93ac254a19ac29052c",
    "number": 7067,
    "body": "…orting of invalid type expression forms. This partly addresses #6973.",
    "head_branch": "issue6973-1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:68:45 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:68:45 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:76:45 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:76:45 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:83:45 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:83:45 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:106:22 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:106:22 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:116:29 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:116:29 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:52:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:52:17 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:61:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:61:17 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:77:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:77:17 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:93:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:93:17 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:107:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:107:17 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/propagation/http.py:661:47 - error: Type annotation not supported for this statement (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/propagation/http.py:661:47 - error: Type annotation not supported for this statement (reportInvalidAnnotation)\n-     \"AsyncGenerator[Any, Any, Any]\" is incompatible with \"Generator[Unknown, None, None]\" (reportGeneralTypeIssues)\n+     \"AsyncGenerator[Any, Any, Any]\" is incompatible with \"Generator[Unknown, None, None]\" (reportInvalidAnnotation)\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:20 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:20 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:47 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:47 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:24 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:51 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:51 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:24 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:55 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:55 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:36 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:36 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:67 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:67 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:21 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:52 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:52 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:33 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:33 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:64 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:64 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:141:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:141:11 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:16 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:16 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:57 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:57 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:17 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:60 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:60 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:214:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:214:11 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:216:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:216:6 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:230:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:230:11 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:232:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:232:6 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:26 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:26 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:54 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:54 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:24 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:52 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:52 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:271:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:271:11 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:274:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:274:6 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:296:28 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:296:28 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:15:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:15:21 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:37:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:37:21 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:784:18 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n\n... (truncated 75 lines) ...\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py:225:28 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py:225:28 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n\ntrio (https://github.com/python-trio/trio)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:171:41 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:171:41 - error: Variable not allowed in type expression (reportInvalidAnnotation)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f94ac254a19ac29052d",
    "number": 7066,
    "body": "…e was used: `tuple[*tuple[str], ...]`.",
    "head_branch": "tupleEllipsis",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false negative when an illegal form of tuple was used: `tuple[*tuple[str], ...]`. (#7066)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f95ac254a19ac29052e",
    "number": 7064,
    "body": "…e evaluation when an assignment expression (walrus operator) is used in a comprehension. This addresses #6992.",
    "head_branch": "issue6992",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive error and incorrect type evaluation when an assignment expression (walrus operator) is used in a comprehension. This addresses #6992. (#7064)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f96ac254a19ac29052f",
    "number": 7059,
    "body": "…mstances when evaluating a lambda. This addresses #7012.",
    "head_branch": "issue7012",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that masked an error (false negative) under certain circumstances when evaluating a lambda. This addresses #7012. (#7059)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f97ac254a19ac290530",
    "number": 7058,
    "body": "…bare\" TypeVar is used as a base class in a class statement. This addresses #7023.",
    "head_branch": "issue7023",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Addressed a bug that led to a false positive (missing error) when a \"bare\" TypeVar is used as a base class in a class statement. This addresses #7023. (#7058)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f97ac254a19ac290531",
    "number": 7057,
    "body": "…able is accessed through a class object. This addresses #7051.",
    "head_branch": "issue7051-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:386:31 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n- 8388 errors, 25 warnings, 0 informations \n+ 8389 errors, 25 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:386:31 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n- 8388 errors, 25 warnings, 0 informations \n+ 8389 errors, 25 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Added error reporting for the situation where a generic instance vari… (#7057)\n\n* Added error reporting for the situation where a generic instance variable is accessed through a class object. This addresses #7051.\r\n\r\n* Fixed style issue."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f98ac254a19ac290532",
    "number": 7056,
    "body": "…able is accessed through a class object. This addresses #7051.",
    "head_branch": "issue7051-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1597:34 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n- 23866 errors, 78 warnings, 0 informations \n+ 23867 errors, 78 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:386:31 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n- 8388 errors, 25 warnings, 0 informations \n+ 8389 errors, 25 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/deps.py:18:26 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n- 596 errors, 38 warnings, 0 informations \n+ 597 errors, 38 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f99ac254a19ac290533",
    "number": 7055,
    "body": "…able is accessed through a class object. This addresses #7051.",
    "head_branch": "issue7051",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:303:45 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:314:47 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:756:41 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n- 10094 errors, 459 warnings, 0 informations \n+ 10097 errors, 459 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1597:34 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n- 23866 errors, 78 warnings, 0 informations \n+ 23867 errors, 78 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/deps.py:18:26 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n- 596 errors, 38 warnings, 0 informations \n+ 597 errors, 38 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cog.py:378:28 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n- 67 errors, 13 warnings, 0 informations \n+ 68 errors, 13 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:189:24 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:225:24 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:262:24 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:270:24 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:319:39 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:879:24 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/id.py:117:43 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3029:17 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3036:25 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3038:25 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/steam/_gc/state.py\n+   /tmp/mypy_primer/projects/steam.py/steam/_gc/state.py:97:17 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:386:31 - error: Access to generic instance variable through class is ambiguous (reportGeneralTypeIssues)\n- 8388 errors, 25 warnings, 0 informations \n+ 8400 errors, 25 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f9aac254a19ac290534",
    "number": 7054,
    "body": "… bidirectionally type compatible with all tuples regardless of length. This addresses #7053.",
    "head_branch": "issue7053",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-         \"tuple[Unknown, ...]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+         \"tuple[tuple[MemoryHeapSampleEvent, ...]]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:386:34 - error: Index 0 is out of range for type tuple[()] (reportGeneralTypeIssues)\n- 23865 errors, 78 warnings, 0 informations \n+ 23866 errors, 78 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_socket.py:517:30 - error: Index 2 is out of range for type tuple[Unknown, Unknown] (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_socket.py:519:30 - error: Index 3 is out of range for type tuple[Unknown, Unknown] (reportGeneralTypeIssues)\n- 3842 errors, 10 warnings, 0 informations \n+ 3844 errors, 10 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n-   /tmp/mypy_primer/projects/materialize/misc/python/materialize/data_ingest/executor.py:482:45 - error: Argument of type \"tuple[Any, ...]\" cannot be assigned to parameter \"__element\" of type \"tuple[str]\" in function \"add\"\n-     \"tuple[Any, ...]\" is incompatible with \"tuple[str]\"\n-       Tuple size mismatch; expected 1 but received indeterminate (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/materialize/misc/python/materialize/data_ingest/executor.py:520:49 - error: Argument of type \"tuple[Any, ...]\" cannot be assigned to parameter \"__element\" of type \"tuple[str]\" in function \"add\"\n-     \"tuple[Any, ...]\" is incompatible with \"tuple[str]\"\n-       Tuple size mismatch; expected 1 but received indeterminate (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/materialize/misc/python/materialize/data_ingest/executor.py:535:49 - error: Argument of type \"tuple[Any, ...]\" cannot be assigned to parameter \"__element\" of type \"tuple[str]\" in function \"discard\"\n-     \"tuple[Any, ...]\" is incompatible with \"tuple[str]\"\n-       Tuple size mismatch; expected 1 but received indeterminate (reportGeneralTypeIssues)\n- 13 errors, 299 warnings, 0 informations \n+ 10 errors, 299 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed handling of `tuple[Any, ...]` so it is treated as though it's bidirectionally type compatible with all tuples regardless of length. This addresses #7053. (#7054)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f9bac254a19ac290535",
    "number": 7052,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action\r\n\r\n- Loc changes\r\n- Some perf improvements for URIs that indexing found\r\n- Fix small issue where program creates a temp file that's not needed\r\n\r\n   Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>",
    "head_branch": "pull-pylance-with-pyright-",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright- (#7052)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>\r\nCo-authored-by: rchiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f9cac254a19ac290536",
    "number": 7050,
    "body": "…e used in runtime value expressions rather than annotations. This addresses #7049.",
    "head_branch": "issue7049",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:226:12 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[int]\"\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[int]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:472:12 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[float]\"\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[float]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:660:12 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[bytes]\"\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[bytes]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:783:12 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[str]\"\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[str]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:818:12 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[set[HashableItemType@conset]]\"\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[set[HashableItemType@conset]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:834:12 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[frozenset[HashableItemType@confrozenset]]\"\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[frozenset[HashableItemType@confrozenset]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:869:12 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[list[AnyItemType@conlist]]\"\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[list[AnyItemType@conlist]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:1090:12 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[Decimal]\"\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[Decimal]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:1941:12 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[date]\"\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[date]\" (reportGeneralTypeIssues)\n- 58 errors, 0 warnings, 0 informations \n+ 67 errors, 0 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1616:20 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[_T@__getitem__]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1619:16 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[_T@__getitem__]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1790:16 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[_T@__getitem__]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1823:16 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[_T@__getitem__]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1862:16 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[str]\"\n+     Type \"type[Annotated]\" cannot be assigned to type \"type[str]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2287:16 - warning: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2287:16 - error: Expression of type \"type[Annotated]\" cannot be assigned to return type \"type[Unknown]\" (reportGeneralTypeIssues)\n- 2376 errors, 6752 warnings, 0 informations \n+ 2382 errors, 6751 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:856:24 - error: Expression of type \"type | type[None]\" cannot be assigned to return type \"type\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:856:24 - error: Expression of type \"type[UnionType]\" cannot be assigned to return type \"type\" (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Improved handling of `Annotated` and other special forms when they are used in runtime value expressions rather than annotations. This addresses #7049. (#7050)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f9dac254a19ac290537",
    "number": 7047,
    "body": "This is basically a copy from [downstream](https://github.com/SchemaStore/schemastore/blob/master/src/schemas/json/partial-pyright.json), most content of which was originally copied from this file and [`configuration.md`](https://github.com/microsoft/pyright/blob/main/docs/configuration.md). I'm not sure about `overrides`; I could have sworn I saw it mapping to an empty object at the very end of the schema, but after checking recent commits of this repo, now I think I just hallucinated.\r\n\r\nI changed the formatting for `title` and `description` a bit; inline code are now delimited by backticks (similar to Markdown, partly because I wanted to make the transpilation to Markdown easier). [`markdownDescription`](https://code.visualstudio.com/docs/languages/json#_json-schemas-and-settings) is for VSCode and [`x-intellij-html-description`](https://www.jetbrains.com/help/pycharm/json.html#ws_json_show_doc_in_html) is for PyCharm; the latter is automatically generated from the former using [`marked`](https://www.npmjs.com/package/marked)`.parseInline()`. Regardless, it still doubles the maintenance efforts required, so this might be [considered](https://xkcd.com/1172/) a breaking change.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Why do you repeat the description under both a \"description\" and a \"x-intellij-html-description\" key? I'd prefer not to duplicate information like this because it will become a maintenance burden to keep it in sync. I'm also not sure that we should be duplicating full documentation here. A summary of each option (like we use in package.json) is probably more appropriate.",
      "@erictraut This is just how IDEs differ from each other (see the links in the original post), and I wanted to provide tailored support for them. Here's the state of affairs:\r\n\r\n* VSCode seems to render `description` as either Markdown or reStructuredText, which ever more applicable. If `markdownDescription` presents, it would use that.\r\n* PyCharm render both `title` and `description` as plain text, providing `x-intellij-html-description` as a way to allow rich formatting; this is also preferred over `description`.\r\n* I haven't tried other IDEs, which may or may not have their own derivations.\r\n* I omitted these properties whenever there are no differences between them and the original `description`, which, as stated, already written in a Markdown-like format to minify the duplication.\r\n\r\nThe same schema was already submitted to SchemaStore as a subschema of [PyProject](https://github.com/SchemaStore/schemastore/blob/master/src/schemas/json/pyproject.json), and would be used for `pyproject.toml` files. This does not apply to `pyrightconfig.json`, however. I [was told](https://github.com/SchemaStore/schemastore/pull/3526#discussion_r1454896598) to keep the original URL intact, which led me here.\r\n\r\nPerhaps the actual schema could be saved at another file and an action could be configured to automatically convert `description` fields to `x-intellij-html-description` fields, provided that the former is written in Markdown? This would help VSCode and PyCharm users, but might be a bit hard on the eyes of other IDEs' users.\r\n\r\nI understand that duplication is better avoided. Feel free to reject this PR.",
      "Yeah, sorry, but I don't think I want to accept this change. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f9eac254a19ac290538",
    "number": 7044,
    "body": "…added enforcement for custom `__new__` and `__init__` method signatures. This addresses #7030 and #7029.",
    "head_branch": "issue7030-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added type enforcement for the `_value_` type in an Enum class. Also added enforcement for custom `__new__` and `__init__` method signatures. This addresses #7030 and #7029. (#7044)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f9fac254a19ac290539",
    "number": 7043,
    "body": "…added enforcement for custom `__new__` and `__init__` method signatures. This addresses #7030 and #7029.",
    "head_branch": "issue7030",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_capabilities.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_capabilities.py:77:29 - error: Object of type \"int\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_capabilities.py:77:45 - error: Object of type \"int\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/remoteconfig/client.py:234:33 - error: Object of type \"int\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/remoteconfig/client.py:234:56 - error: Object of type \"int\" is not callable (reportGeneralTypeIssues)\n- 10076 errors, 459 warnings, 0 informations \n+ 10080 errors, 459 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/ops/testing.py\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:3361:44 - error: Argument of type \"int\" cannot be assigned to parameter \"status\" of type \"str\" in function \"__init__\"\n+     \"int\" is incompatible with \"str\" (reportGeneralTypeIssues)\n- 29 errors, 0 warnings, 0 informations \n+ 30 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210f9fac254a19ac29053a",
    "number": 7042,
    "body": "…they are being constructed. This addresses #7027.",
    "head_branch": "issue7027",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added special-case logic for enum classes that are invoked as though they are being constructed. This addresses #7027. (#7042)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa0ac254a19ac29053b",
    "number": 7041,
    "body": null,
    "head_branch": "issue7024",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved handling of custom Enum classes. This addresses #7024. (#7041)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa1ac254a19ac29053c",
    "number": 7040,
    "body": "…e spec indicates that if a TypeVarTuple is used multiple times in a callee's signature, the tuple must \"match exactly\". This addresses #6888.",
    "head_branch": "issue6888",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed spec conformance issue with TypeVarTuple constraint solving. The spec indicates that if a TypeVarTuple is used multiple times in a callee's signature, the tuple must \"match exactly\". This addresses #6888. (#7040)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa2ac254a19ac29053d",
    "number": 7038,
    "body": "…tional syntax. This addresses #7025.",
    "head_branch": "issue7025",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added check for name mismatch for enum classes defined using the functional syntax. This addresses #7025. (#7038)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa3ac254a19ac29053e",
    "number": 7037,
    "body": "Addresses #7016 ",
    "head_branch": "rchiodo/allow_rooted_paths",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fix combining paths with empty uri (#7037)\n\n* Fix combining paths with empty uri\r\n\r\n* Force empty to be case sensitive\r\n\r\n* Remove unneeded code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa4ac254a19ac29053f",
    "number": 7036,
    "body": null,
    "head_branch": "enum_experiment_draft5",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2659:34 - warning: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:1 - warning: Type of \"_KEYWORD_TYPES\" is partially unknown\n+     Type of \"_KEYWORD_TYPES\" is \"set[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:19 - warning: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:51 - warning: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:186:30 - warning: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:195:1 - warning: Type of \"_POSITIONAL_TYPES\" is partially unknown\n+     Type of \"_POSITIONAL_TYPES\" is \"set[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:196:5 - warning: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:197:5 - warning: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:198:5 - warning: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n- 2376 errors, 6752 warnings, 0 informations \n+ 2376 errors, 6761 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa5ac254a19ac290540",
    "number": 7035,
    "body": null,
    "head_branch": "enum_experiment_draft4",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2659:34 - warning: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:1 - warning: Type of \"_KEYWORD_TYPES\" is partially unknown\n+     Type of \"_KEYWORD_TYPES\" is \"set[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:19 - warning: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:51 - warning: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:186:30 - warning: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:195:1 - warning: Type of \"_POSITIONAL_TYPES\" is partially unknown\n+     Type of \"_POSITIONAL_TYPES\" is \"set[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:196:5 - warning: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:197:5 - warning: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:198:5 - warning: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n- 2376 errors, 6752 warnings, 0 informations \n+ 2376 errors, 6761 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_ssl.py:82:41 - error: Argument of type \"_ASN1Object\" cannot be assigned to parameter \"purpose\" of type \"Purpose\" in function \"create_default_context\"\n+     \"_ASN1Object\" is incompatible with \"Purpose\" (reportGeneralTypeIssues)\n- 3842 errors, 10 warnings, 0 informations \n+ 3843 errors, 10 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa6ac254a19ac290541",
    "number": 7034,
    "body": "DO NOT MERGE",
    "head_branch": "enum_experiment_draft3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_listeners.py:252:16 - error: Expression of type \"list[tuple[AddressFamily, int, Literal[0], Literal[''], tuple[str, int]]]\" cannot be assigned to return type \"list[tuple[AddressFamily, SocketKind, int, str, tuple[str, int] | tuple[str, int, int, int]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_stream.py:63:16 - error: Expression of type \"tuple[int, int, int, Literal[''], tuple[str, Literal[80]]]\" cannot be assigned to return type \"tuple[AddressFamily, SocketKind, int, str, tuple[str, int]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_stream.py:74:16 - error: Expression of type \"tuple[int, int, int, Literal[''], tuple[str, Literal[80]]]\" cannot be assigned to return type \"tuple[AddressFamily, SocketKind, int, str, tuple[str, int]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_stream.py:295:16 - error: Expression of type \"tuple[int, int, int, Literal[''], tuple[str, int, Literal[0], Literal[0]] | tuple[str, int]]\" cannot be assigned to return type \"tuple[AddressFamily, SocketKind, int, str, tuple[str, int, int, int] | tuple[str, int]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_socket.py:223:16 - error: Expression of type \"Literal[SocketKind.SOCK_STREAM]\" cannot be assigned to declared type \"property\"\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_socket.py:223:16 - error: Expression of type \"int\" cannot be assigned to declared type \"property\"\n-     \"Literal[SocketKind.SOCK_STREAM]\" is incompatible with \"property\" (reportGeneralTypeIssues)\n+     \"int\" is incompatible with \"property\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_ssl_helpers.py:67:16 - error: Expression of type \"list[tuple[int, int, int, Literal[''], tuple[str, int] | tuple[str, int, int, int]]]\" cannot be assigned to return type \"list[tuple[AddressFamily, SocketKind, int, str, tuple[str, int] | tuple[str, int, int, int]]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_socket.py:159:9 - error: Argument of type \"list[tuple[int, int, int, Literal[''], tuple[Literal['127.0.0.1'], Literal[12345]]]]\" cannot be assigned to parameter \"expected\" of type \"GetAddrInfoResponse\" in function \"check\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_socket.py:174:9 - error: Argument of type \"list[tuple[int, int, int, Literal[''], tuple[Literal['::1'], Literal[12345], Literal[0], Literal[0]]]]\" cannot be assigned to parameter \"expected\" of type \"GetAddrInfoResponse\" in function \"check\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_ssl.py:82:41 - error: Argument of type \"_ASN1Object\" cannot be assigned to parameter \"purpose\" of type \"Purpose\" in function \"create_default_context\"\n+     \"_ASN1Object\" is incompatible with \"Purpose\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/testing/_fake_net.py:208:22 - error: Expression of type \"int\" cannot be assigned to declared type \"AddressFamily\"\n+     \"int\" is incompatible with \"AddressFamily\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/testing/_fake_net.py:210:20 - error: Expression of type \"int\" cannot be assigned to declared type \"SocketKind\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n- 3842 errors, 10 warnings, 0 informations \n+ 3852 errors, 10 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2659:34 - warning: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:1 - warning: Type of \"_KEYWORD_TYPES\" is partially unknown\n+     Type of \"_KEYWORD_TYPES\" is \"set[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:19 - warning: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:51 - warning: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:186:30 - warning: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:195:1 - warning: Type of \"_POSITIONAL_TYPES\" is partially unknown\n+     Type of \"_POSITIONAL_TYPES\" is \"set[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:196:5 - warning: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:197:5 - warning: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:198:5 - warning: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n- 2376 errors, 6752 warnings, 0 informations \n+ 2376 errors, 6761 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa6ac254a19ac290542",
    "number": 7033,
    "body": "DO NOT MERGE!",
    "head_branch": "enum_experiment_draft2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:153:1 - error: Type of \"KW_ONLY_PARAMETERS\" is partially unknown\n+     Type of \"KW_ONLY_PARAMETERS\" is \"list[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:154:5 - error: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:155:5 - error: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:156:5 - error: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:158:1 - error: Type of \"KW_PARAMETERS\" is partially unknown\n+     Type of \"KW_PARAMETERS\" is \"list[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:159:5 - error: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:160:5 - error: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:566:26 - error: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:566:71 - error: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n- 728 errors, 34 warnings, 0 informations \n+ 737 errors, 34 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:471:30 - error: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:473:32 - error: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:476:32 - error: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:479:32 - error: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n- 8388 errors, 25 warnings, 0 informations \n+ 8392 errors, 25 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:63:13 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:64:13 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:65:13 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:66:13 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:67:13 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:126:34 - warning: Unnecessary \"# type: ignore\" comment\n- 67 errors, 13 warnings, 0 informations \n+ 72 errors, 14 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_listeners.py:252:16 - error: Expression of type \"list[tuple[AddressFamily, int, Literal[0], Literal[''], tuple[str, int]]]\" cannot be assigned to return type \"list[tuple[AddressFamily, SocketKind, int, str, tuple[str, int] | tuple[str, int, int, int]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_stream.py:63:16 - error: Expression of type \"tuple[int, int, int, Literal[''], tuple[str, Literal[80]]]\" cannot be assigned to return type \"tuple[AddressFamily, SocketKind, int, str, tuple[str, int]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_stream.py:74:16 - error: Expression of type \"tuple[int, int, int, Literal[''], tuple[str, Literal[80]]]\" cannot be assigned to return type \"tuple[AddressFamily, SocketKind, int, str, tuple[str, int]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_stream.py:295:16 - error: Expression of type \"tuple[int, int, int, Literal[''], tuple[str, int, Literal[0], Literal[0]] | tuple[str, int]]\" cannot be assigned to return type \"tuple[AddressFamily, SocketKind, int, str, tuple[str, int, int, int] | tuple[str, int]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_socket.py:223:16 - error: Expression of type \"Literal[SocketKind.SOCK_STREAM]\" cannot be assigned to declared type \"property\"\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_socket.py:223:16 - error: Expression of type \"int\" cannot be assigned to declared type \"property\"\n-     \"Literal[SocketKind.SOCK_STREAM]\" is incompatible with \"property\" (reportGeneralTypeIssues)\n+     \"int\" is incompatible with \"property\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_ssl_helpers.py:67:16 - error: Expression of type \"list[tuple[int, int, int, Literal[''], tuple[str, int] | tuple[str, int, int, int]]]\" cannot be assigned to return type \"list[tuple[AddressFamily, SocketKind, int, str, tuple[str, int] | tuple[str, int, int, int]]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_socket.py:159:9 - error: Argument of type \"list[tuple[int, int, int, Literal[''], tuple[Literal['127.0.0.1'], Literal[12345]]]]\" cannot be assigned to parameter \"expected\" of type \"GetAddrInfoResponse\" in function \"check\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_socket.py:174:9 - error: Argument of type \"list[tuple[int, int, int, Literal[''], tuple[Literal['::1'], Literal[12345], Literal[0], Literal[0]]]]\" cannot be assigned to parameter \"expected\" of type \"GetAddrInfoResponse\" in function \"check\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_ssl.py:82:41 - error: Argument of type \"_ASN1Object\" cannot be assigned to parameter \"purpose\" of type \"Purpose\" in function \"create_default_context\"\n+     \"_ASN1Object\" is incompatible with \"Purpose\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_ssl.py:106:31 - error: Cannot assign member \"maximum_version\" for type \"SSLContext\"\n+     \"int\" is incompatible with \"TLSVersion\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/testing/_fake_net.py:208:22 - error: Expression of type \"int\" cannot be assigned to declared type \"AddressFamily\"\n+     \"int\" is incompatible with \"AddressFamily\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/testing/_fake_net.py:210:20 - error: Expression of type \"int\" cannot be assigned to declared type \"SocketKind\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n- 3842 errors, 10 warnings, 0 informations \n+ 3853 errors, 10 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_make_custom_builds.py:38:18 - error: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:99:5 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"__new__\"\n+     Argument type is \"tuple[Unknown, Unknown, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:99:6 - error: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:99:33 - error: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:99:56 - error: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:218:23 - error: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:323:23 - error: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n- 155 errors, 0 warnings, 183 informations \n+ 162 errors, 0 warnings, 183 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2659:34 - warning: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:1 - warning: Type of \"_KEYWORD_TYPES\" is partially unknown\n+     Type of \"_KEYWORD_TYPES\" is \"set[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:19 - warning: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:51 - warning: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:186:30 - warning: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:195:1 - warning: Type of \"_POSITIONAL_TYPES\" is partially unknown\n+     Type of \"_POSITIONAL_TYPES\" is \"set[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:196:5 - warning: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:197:5 - warning: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:198:5 - warning: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n- 2376 errors, 6752 warnings, 0 informations \n+ 2376 errors, 6761 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa7ac254a19ac290543",
    "number": 7031,
    "body": "… an Enum class defined in a stub file. DO NOT MERGE",
    "head_branch": "enum_experiment_draft",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:153:1 - error: Type of \"KW_ONLY_PARAMETERS\" is partially unknown\n+     Type of \"KW_ONLY_PARAMETERS\" is \"list[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:154:5 - error: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:155:5 - error: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:156:5 - error: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:158:1 - error: Type of \"KW_PARAMETERS\" is partially unknown\n+     Type of \"KW_PARAMETERS\" is \"list[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:159:5 - error: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:160:5 - error: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:566:26 - error: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:566:71 - error: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n- 728 errors, 34 warnings, 0 informations \n+ 737 errors, 34 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:471:30 - error: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:473:32 - error: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:476:32 - error: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:479:32 - error: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n- 8388 errors, 25 warnings, 0 informations \n+ 8392 errors, 25 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:63:13 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:64:13 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:65:13 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:66:13 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:67:13 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:126:34 - warning: Unnecessary \"# type: ignore\" comment\n- 67 errors, 13 warnings, 0 informations \n+ 72 errors, 14 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2659:34 - warning: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:1 - warning: Type of \"_KEYWORD_TYPES\" is partially unknown\n+     Type of \"_KEYWORD_TYPES\" is \"set[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:19 - warning: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:158:51 - warning: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:186:30 - warning: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:195:1 - warning: Type of \"_POSITIONAL_TYPES\" is partially unknown\n+     Type of \"_POSITIONAL_TYPES\" is \"set[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:196:5 - warning: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:197:5 - warning: Type of \"POSITIONAL_OR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:198:5 - warning: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n- 2376 errors, 6752 warnings, 0 informations \n+ 2376 errors, 6761 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_listeners.py:252:16 - error: Expression of type \"list[tuple[AddressFamily, int, Literal[0], Literal[''], tuple[str, int]]]\" cannot be assigned to return type \"list[tuple[AddressFamily, SocketKind, int, str, tuple[str, int] | tuple[str, int, int, int]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_stream.py:63:16 - error: Expression of type \"tuple[int, int, int, Literal[''], tuple[str, Literal[80]]]\" cannot be assigned to return type \"tuple[AddressFamily, SocketKind, int, str, tuple[str, int]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_stream.py:74:16 - error: Expression of type \"tuple[int, int, int, Literal[''], tuple[str, Literal[80]]]\" cannot be assigned to return type \"tuple[AddressFamily, SocketKind, int, str, tuple[str, int]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_open_tcp_stream.py:295:16 - error: Expression of type \"tuple[int, int, int, Literal[''], tuple[str, int, Literal[0], Literal[0]] | tuple[str, int]]\" cannot be assigned to return type \"tuple[AddressFamily, SocketKind, int, str, tuple[str, int, int, int] | tuple[str, int]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_socket.py:223:16 - error: Expression of type \"Literal[SocketKind.SOCK_STREAM]\" cannot be assigned to declared type \"property\"\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_socket.py:223:16 - error: Expression of type \"int\" cannot be assigned to declared type \"property\"\n-     \"Literal[SocketKind.SOCK_STREAM]\" is incompatible with \"property\" (reportGeneralTypeIssues)\n+     \"int\" is incompatible with \"property\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_highlevel_ssl_helpers.py:67:16 - error: Expression of type \"list[tuple[int, int, int, Literal[''], tuple[str, int] | tuple[str, int, int, int]]]\" cannot be assigned to return type \"list[tuple[AddressFamily, SocketKind, int, str, tuple[str, int] | tuple[str, int, int, int]]]\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_socket.py:159:9 - error: Argument of type \"list[tuple[int, int, int, Literal[''], tuple[Literal['127.0.0.1'], Literal[12345]]]]\" cannot be assigned to parameter \"expected\" of type \"GetAddrInfoResponse\" in function \"check\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_socket.py:174:9 - error: Argument of type \"list[tuple[int, int, int, Literal[''], tuple[Literal['::1'], Literal[12345], Literal[0], Literal[0]]]]\" cannot be assigned to parameter \"expected\" of type \"GetAddrInfoResponse\" in function \"check\"\n+     \"int\" is incompatible with \"AddressFamily\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_ssl.py:82:41 - error: Argument of type \"_ASN1Object\" cannot be assigned to parameter \"purpose\" of type \"Purpose\" in function \"create_default_context\"\n+     \"_ASN1Object\" is incompatible with \"Purpose\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_ssl.py:106:31 - error: Cannot assign member \"maximum_version\" for type \"SSLContext\"\n+     \"int\" is incompatible with \"TLSVersion\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/testing/_fake_net.py:208:22 - error: Expression of type \"int\" cannot be assigned to declared type \"AddressFamily\"\n+     \"int\" is incompatible with \"AddressFamily\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/testing/_fake_net.py:210:20 - error: Expression of type \"int\" cannot be assigned to declared type \"SocketKind\"\n+     \"int\" is incompatible with \"SocketKind\" (reportGeneralTypeIssues)\n- 3842 errors, 10 warnings, 0 informations \n+ 3853 errors, 10 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_make_custom_builds.py:38:18 - error: Type of \"KEYWORD_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:99:5 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"__new__\"\n+     Argument type is \"tuple[Unknown, Unknown, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:99:6 - error: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:99:33 - error: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:99:56 - error: Type of \"VAR_POSITIONAL\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:218:23 - error: Type of \"VAR_KEYWORD\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:323:23 - error: Type of \"POSITIONAL_ONLY\" is unknown (reportUnknownMemberType)\n- 155 errors, 0 warnings, 183 informations \n+ 162 errors, 0 warnings, 183 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa8ac254a19ac290544",
    "number": 7021,
    "body": "Fix a simple typo and a copy & paste error. The new description is derived from that in [the configuration documentation file](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#type-check-diagnostics-settings).",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Thanks for the contribution."
    ],
    "commit_messages": [
      "Typos in pyrightconfig.schema.json (#7021)\n\n* Fix copy & paste error\r\n\r\n* Fix typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fa9ac254a19ac290545",
    "number": 7017,
    "body": null,
    "head_branch": "fix-basedpyright-config",
    "is_a_fork": true,
    "comments": [
      "oops, github keeps defaulting to the upstream repo when these PRs are only meant for my fork"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210faaac254a19ac290546",
    "number": 7015,
    "body": "…iltered using a metaclass instance. This addresses #7008.",
    "head_branch": "issue7008",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:354:90 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"_extract_metadata\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:354:90 - error: Argument of type \"type[Any] | Unknown | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"_extract_metadata\" (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug in the `isinstance` type narrowing logic when `type` is filtered using a metaclass instance. This addresses #7008. (#7015)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fabac254a19ac290547",
    "number": 7013,
    "body": "…rator uses an `await` operator within the left-most `for`. This shouldn't result in an `AsyncGenerator` despite what the Python documentation indicates. This addresses #6999.",
    "head_branch": "issue6999",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:120:21 - error: Argument of type \"AsyncGenerator[bytes, None]\" cannot be assigned to parameter \"__iterable_of_bytes\" of type \"Iterable[ReadableBuffer]\" in function \"join\"\n-     \"AsyncGenerator[bytes, None]\" is incompatible with protocol \"Iterable[ReadableBuffer]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/state.py:2410:19 - error: Argument of type \"AsyncGenerator[bool, None]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[object]\" in function \"all\"\n-     \"AsyncGenerator[bool, None]\" is incompatible with protocol \"Iterable[object]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/state.py:2473:20 - error: Type of \"_cs_servers\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/state.py:2475:13 - error: Type of \"_cs_servers\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/state.py:2475:32 - error: No overloads for \"sorted\" match the provided arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/state.py:2476:17 - error: Argument of type \"AsyncGenerator[Any, None]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[_T@sorted]\" in function \"sorted\"\n-     \"AsyncGenerator[Any, None]\" is incompatible with protocol \"Iterable[Any]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/state.py:2487:20 - error: Type of \"_cs_servers\" is unknown (reportUnknownMemberType)\n- 8395 errors, 25 warnings, 0 informations \n+ 8388 errors, 25 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in an incorrect type evaluation when a generator uses an `await` operator within the left-most `for`. This shouldn't result in an `AsyncGenerator` despite what the Python documentation indicates. This addresses #6999. (#7013)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fabac254a19ac290548",
    "number": 6997,
    "body": null,
    "head_branch": "fix-exit-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210facac254a19ac290549",
    "number": 6993,
    "body": "…iable when it is scoped to a generic function or type alias.",
    "head_branch": "varianceEnforcement",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/typing.py:140:1 - error: Type variables scoped to a type alias cannot be covariant or contravariant: TDims, TDType (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/typing.py:191:1 - error: Type variables scoped to a type alias cannot be covariant or contravariant: TDims, TDType (reportInvalidTypeVarUse)\n- 57 errors, 145 warnings, 0 informations \n+ 59 errors, 145 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py:86:5 - warning: Type variables scoped to a type alias cannot be covariant or contravariant: BotT (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py:87:5 - warning: Type variables scoped to a type alias cannot be covariant or contravariant: BotT (reportInvalidTypeVarUse)\n+ /tmp/mypy_primer/projects/discord.py/discord/ui/item.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/item.py:45:1 - warning: Type variables scoped to a type alias cannot be covariant or contravariant: V (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:110:1 - warning: Type variables scoped to a type alias cannot be covariant or contravariant: V (reportInvalidTypeVarUse)\n- 67 errors, 13 warnings, 0 informations \n+ 67 errors, 17 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:151:5 - error: Type variables scoped to a type alias cannot be covariant or contravariant: _ContextT_contra (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:179:5 - error: Type variables scoped to a type alias cannot be covariant or contravariant: _ContextT_contra (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:195:5 - error: Type variables scoped to a type alias cannot be covariant or contravariant: _ContextT_contra (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:212:5 - error: Type variables scoped to a type alias cannot be covariant or contravariant: _ContextT_contra (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:228:5 - error: Type variables scoped to a type alias cannot be covariant or contravariant: _ContextT_contra (reportInvalidTypeVarUse)\n- 2376 errors, 6752 warnings, 0 informations \n+ 2381 errors, 6752 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:220:1 - warning: Type variables scoped to a type alias cannot be covariant or contravariant: T_co (reportInvalidTypeVarUse)\n+ /tmp/mypy_primer/projects/steam.py/steam/ext/commands/cog.py\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/cog.py:25:1 - warning: Type variables scoped to a type alias cannot be covariant or contravariant: CogT (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:64:1 - warning: Type variables scoped to a type alias cannot be covariant or contravariant: R (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:65:1 - warning: Type variables scoped to a type alias cannot be covariant or contravariant: R (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:578:1 - warning: Type variables scoped to a type alias cannot be covariant or contravariant: CogT, R (reportInvalidTypeVarUse)\n- 8395 errors, 25 warnings, 0 informations \n+ 8395 errors, 30 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_implementations.py:73:1 - error: Type variables scoped to a type alias cannot be covariant or contravariant: T (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_implementations.py:187:1 - error: Type variables scoped to a type alias cannot be covariant or contravariant: T (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_implementations.py:189:1 - error: Type variables scoped to a type alias cannot be covariant or contravariant: T (reportInvalidTypeVarUse)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_implementations.py:191:1 - error: Type variables scoped to a type alias cannot be covariant or contravariant: T (reportInvalidTypeVarUse)\n- 155 errors, 0 warnings, 183 informations \n+ 159 errors, 0 warnings, 183 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fadac254a19ac29054a",
    "number": 6989,
    "body": "…nonmember`. This addresses #6867.",
    "head_branch": "issue6867",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210faeac254a19ac29054b",
    "number": 6988,
    "body": null,
    "head_branch": "diag_rules",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:439:5 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:439:5 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_catalog.py:363:5 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_catalog.py:363:5 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_catalog.py:470:5 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_catalog.py:470:5 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_catalog.py:471:5 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_catalog.py:471:5 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_catalog.py:472:5 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_catalog.py:472:5 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_raw/onion.py:177:5 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_raw/onion.py:177:5 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_raw/onion.py:178:5 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_raw/onion.py:178:5 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:212:5 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:212:5 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/qualifier.py:145:5 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/qualifier.py:145:5 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:18:9 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:18:9 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:19:9 - error: Dataclass field cannot use private name\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:19:9 - error: Dataclass field cannot use private name (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:381:20 - error: \"tuple[None, None]\" is not a valid exception class\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:381:20 - error: \"tuple[None, None]\" is not a valid exception class (reportGeneralTypeIssues)\n\ntrio (https://github.com/python-trio/trio)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_ssl.py:728:8 - error: A TypeAlias can be defined only within a module or class scope\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_ssl.py:728:8 - error: A TypeAlias can be defined only within a module or class scope (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Diag rules (#6988)\n\n* Added support for @no_type_check decorator. This addresses #1448.\r\n\r\n* Changed all diagnostics (other than syntax errors and a few special informations) to have an associated diagnostic rule. Previously, some diagnostics had no associated rule."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fafac254a19ac29054c",
    "number": 6987,
    "body": null,
    "head_branch": "issue1448",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:129:33 - error: Argument of type \"str* | None\" cannot be assigned to parameter \"__name\" of type \"str\" in function \"hasattr\"\n-     Type \"str* | None\" cannot be assigned to type \"str\"\n-       \"None*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n- 1314 errors, 10 warnings, 0 informations \n+ 1313 errors, 10 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Added support for @no_type_check decorator. This addresses #1448. (#6987)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb0ac254a19ac29054d",
    "number": 6986,
    "body": "…ls (and for PEP inferred-variance TypeVars in PEP 695) when a `self` or `cls` parameter is explicitly annotated with a type that includes the type parameter. This addresses #6883.",
    "head_branch": "issue6883",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:1300:7 - error: Type variable \"T\" used in generic protocol \"InjectedMethod\" should be covariant (reportInvalidTypeVarUse)\n- 727 errors, 34 warnings, 0 informations \n+ 728 errors, 34 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect variance inference for protocols (and for PEP inferred-variance TypeVars in PEP 695) when a `self` or `cls` parameter is explicitly annotated with a type that includes the type parameter. This addresses #6883. (#6986)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb1ac254a19ac29054e",
    "number": 6984,
    "body": "…rotocol but don't implement all of the unimplemented symbols in the protocol. Previously, pyright reported the error on the class declaration. Now, it reports it at instantiation time. This is more consistent with what other type checkers do.",
    "head_branch": "explicitProtocol",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nmypy-protobuf (https://github.com/dropbox/mypy-protobuf)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:14:7 - error: Class derives from one or more protocol classes but does not implement all required members\n-     Member \"__anext__\" is declared in protocol class \"AsyncIterator\"\n-     Member \"__next__\" is declared in protocol class \"Iterator\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:15:7 - error: Class derives from one or more protocol classes but does not implement all required members\n-     Member \"__anext__\" is declared in protocol class \"AsyncIterator\"\n-     Member \"__next__\" is declared in protocol class \"Iterator\" (reportGeneralTypeIssues)\n- 23 errors, 24 warnings, 0 informations \n+ 21 errors, 24 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n-     \"ArgparseWriter.format\" is abstract (reportGeneralTypeIssues)\n+     \"ArgparseWriter.format\" is not implemented (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-     \"TraceFilter.process_trace\" is abstract (reportGeneralTypeIssues)\n+     \"TraceFilter.process_trace\" is not implemented (reportGeneralTypeIssues)\n-     \"SpanProcessor.on_span_start\" is abstract\n+     \"SpanProcessor.on_span_start\" is not implemented\n-     \"SpanProcessor.on_span_finish\" is abstract (reportGeneralTypeIssues)\n+     \"SpanProcessor.on_span_finish\" is not implemented (reportGeneralTypeIssues)\n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/test/test_main.py\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:372:23 - error: Cannot instantiate abstract class \"Charm\"\n+     \"_HasStored._stored\" is not implemented (reportGeneralTypeIssues)\n- 28 errors, 0 warnings, 0 informations \n+ 29 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:474:42 - error: Cannot instantiate abstract class \"ClanMember\"\n+     \"_PartialMemberProto.add_role\" is not implemented\n+     \"_PartialMemberProto.remove_role\" is not implemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:504:38 - error: Cannot instantiate abstract class \"ClanMember\"\n+     \"_PartialMemberProto.add_role\" is not implemented\n+     \"_PartialMemberProto.remove_role\" is not implemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:509:20 - error: Cannot instantiate abstract class \"PartialMember\"\n+     \"_PartialMemberProto.add_role\" is not implemented\n+     \"_PartialMemberProto.remove_role\" is not implemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:512:20 - error: Cannot instantiate abstract class \"PartialMember\"\n+     \"_PartialMemberProto.add_role\" is not implemented\n+     \"_PartialMemberProto.remove_role\" is not implemented (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/steam/group.py\n+   /tmp/mypy_primer/projects/steam.py/steam/group.py:46:22 - error: Cannot instantiate abstract class \"GroupMember\"\n+     \"_PartialMemberProto.add_role\" is not implemented\n+     \"_PartialMemberProto.remove_role\" is not implemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/group.py:51:16 - error: Cannot instantiate abstract class \"PartialMember\"\n+     \"_PartialMemberProto.add_role\" is not implemented\n+     \"_PartialMemberProto.remove_role\" is not implemented (reportGeneralTypeIssues)\n- 8389 errors, 25 warnings, 0 informations \n+ 8395 errors, 25 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed error reporting for non-protocol classes that derive from a protocol but don't implement all of the unimplemented symbols in the protocol. Previously, pyright reported the error on the class declaration. Now, it reports it at instantiation time. This is more consistent with what other type checkers do. (#6984)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb2ac254a19ac29054f",
    "number": 6983,
    "body": "…types when using a `str()` class pattern and a `LiteralString` subject. This addresses #6982.",
    "head_branch": "issue6982",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in class pattern matching logic that incorrectly narrows types when using a `str()` class pattern and a `LiteralString` subject. This addresses #6982. (#6983)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb3ac254a19ac290550",
    "number": 6980,
    "body": "… generic type alias that is parameterized by a TypeVarTuple. The implied type argument should be `*tuple[Unknown, ...]` in this case. This addresses #6902.",
    "head_branch": "issue6902-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in an incorrect implied specialization of a generic type alias that is parameterized by a TypeVarTuple. The implied type argument should be `*tuple[Unknown, ...]` in this case. This addresses #6902. (#6980)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb3ac254a19ac290551",
    "number": 6979,
    "body": "… generic type alias that is parameterized by a TypeVarTuple. The implied type argument should be `*tuple[Unknown, ...]` in this case. This addresses #6902.",
    "head_branch": "issue6902",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb4ac254a19ac290552",
    "number": 6978,
    "body": "…longer allowed as an argument for another `NewType`. This addresses #6976.",
    "head_branch": "issue6976",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed recent regression whereby a type created with `NewType` was no longer allowed as an argument for another `NewType`. This addresses #6976. (#6978)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb5ac254a19ac290553",
    "number": 6977,
    "body": "…This addresses #6879.",
    "head_branch": "issue6879",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py:213:21 - error: Expression of type \"type[DataclassInstance]\" cannot be assigned to declared type \"AnyDataClass[PInit@eval_dataclass]\"\n+     Type \"type[DataclassInstance]\" cannot be assigned to type \"AnyDataClass[PInit@eval_dataclass]\"\n+       \"DataclassInstance\" is incompatible with protocol \"DataClass[PInit@eval_dataclass]\"\n+       Type \"type[DataclassInstance]\" cannot be assigned to type \"type[DataClass[PInit@eval_dataclass]]\"\n+         Type parameter \"PInit@DataClass\" is invariant, but \"()\" is not the same as \"PInit@eval_dataclass\"\n+       \"__dataclass_fields__\" is defined as a ClassVar in protocol\n+       \"__dataclass_fields__\" is defined as a ClassVar in protocol\n+       \"__dataclass_fields__\" is defined as a ClassVar in protocol\n+       \"__dataclass_fields__\" is defined as a ClassVar in protocol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py:215:28 - error: Argument of type \"AnyDataClass[PInit@eval_dataclass] | type[DataClass[PInit@eval_dataclass]] | type[DataclassInstance]\" cannot be assigned to parameter \"obj\" of type \"(...) -> Any\" in function \"get_type_hints\"\n+     Type \"AnyDataClass[PInit@eval_dataclass] | type[DataClass[PInit@eval_dataclass]] | type[DataclassInstance]\" cannot be assigned to type \"(...) -> Any\"\n+       Type \"DataClass[PInit@eval_dataclass]\" cannot be assigned to type \"(...) -> Any\" (reportGeneralTypeIssues)\n- 55 errors, 145 warnings, 0 informations \n+ 57 errors, 145 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1043:5 - error: No overloads for \"builds\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1053:13 - error: Argument of type \"list[str | dict[str, str] | dict[str, None] | dict[str, Unknown] | dict[str, list[str]] | Unknown | type[DataClass]]\" cannot be assigned to parameter \"hydra_defaults\" of type \"DefaultsList | None\" in function \"builds\"\n+     Type \"type[DataClass]\" cannot be assigned to type \"str | DataClass_ | Mapping[str, str | Sequence[str] | None]\"\n+       \"type[type]\" is incompatible with \"type[str]\"\n+       \"__dataclass_fields__\" is defined as a ClassVar in protocol\n+       \"type[type]\" is incompatible with \"type[Mapping[str, str | Sequence[str] | None]]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:80:32 - error: Argument of type \"type[Just[T@Just]]\" cannot be assigned to parameter \"x\" of type \"HasTarget\" in function \"_get_target\"\n+     \"_target_\" is defined as a ClassVar in protocol (reportGeneralTypeIssues)\n- 152 errors, 0 warnings, 183 informations \n+ 155 errors, 0 warnings, 183 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that led to incorrect protocol matching for class objects. This addresses #6879. (#6977)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb6ac254a19ac290554",
    "number": 6974,
    "body": "…as includes an unpacked TypeVarTuple and the specialization list includes an unpacked unbounded tuple. This addresses #6930.",
    "head_branch": "issue6930",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for generic type alias specialization when the type alias includes an unpacked TypeVarTuple and the specialization list includes an unpacked unbounded tuple. This addresses #6930. (#6974)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb7ac254a19ac290555",
    "number": 6972,
    "body": "…ey are treated correctly when used as runtime objects.\r\n\r\nFixed false negative when a special form is assigned to a value declared as type[T] or when instantiated. This addresses #6895 and #6868.",
    "head_branch": "issue6895-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:297:37 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:331:83 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"_extract_metadata\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:347:90 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"_extract_metadata\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:372:41 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"__init__\" (reportGeneralTypeIssues)\n- 52 errors, 0 warnings, 0 informations \n+ 56 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:514:33 - error: Expression of type \"Any\" cannot be assigned to declared type \"type[T@Greedy]\"\n+     Type \"type[Any]\" cannot be assigned to type \"type[T@Greedy]\" (reportGeneralTypeIssues)\n- 8388 errors, 25 warnings, 0 informations \n+ 8389 errors, 25 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:429:14 - error: Argument of type \"type[(...) -> Any]\" cannot be assigned to parameter \"hint\" of type \"type\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:856:24 - error: Expression of type \"type | type[None]\" cannot be assigned to return type \"type\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:2405:25 - error: Argument of type \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" cannot be assigned to parameter \"__object\" of type \"Tuple[str, Type[Any]] | Tuple[str, Type[Any], Any]\" in function \"append\"\n+     Type \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" cannot be assigned to type \"Tuple[str, Type[Any]] | Tuple[str, Type[Any], Any]\"\n+       \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" is incompatible with \"Tuple[str, Type[Any]]\"\n+         Tuple size mismatch; expected 2 but received 3\n+       \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" is incompatible with \"Tuple[str, Type[Any], Any]\"\n+         Tuple entry 2 is incorrect type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:2416:25 - error: Argument of type \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" cannot be assigned to parameter \"__object\" of type \"Tuple[str, Type[Any]] | Tuple[str, Type[Any], Any]\" in function \"append\"\n+     Type \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" cannot be assigned to type \"Tuple[str, Type[Any]] | Tuple[str, Type[Any], Any]\"\n+       \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" is incompatible with \"Tuple[str, Type[Any]]\"\n+         Tuple size mismatch; expected 2 but received 3\n+       \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" is incompatible with \"Tuple[str, Type[Any], Any]\"\n+         Tuple entry 2 is incorrect type (reportGeneralTypeIssues)\n- 148 errors, 0 warnings, 183 informations \n+ 152 errors, 0 warnings, 183 informations \n\n```"
    ],
    "commit_messages": [
      "Improved handling of special forms defined in the typing module so they are treated correctly when used as runtime objects. (#6972)\n\nFixed false negative when a special form is assigned to a value declared as type[T] or when instantiated. This addresses #6895 and #6868."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb8ac254a19ac290556",
    "number": 6971,
    "body": "…ey are treated correctly when used as runtime objects.\r\n\r\nFixed false negative when a special form is assigned to a value declared as type[T] or when instantiated. This addresses #6895 and #6868.",
    "head_branch": "issue6895-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/dataclasses.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/dataclasses.py:211:32 - error: Argument of type \"type[Generic]\" cannot be assigned to parameter \"__class_or_tuple\" of type \"_ClassInfo\" in function \"issubclass\"\n+     Type \"type[Generic]\" cannot be assigned to type \"_ClassInfo\"\n+       \"type[type]\" is incompatible with \"type[UnionType]\"\n+       \"type[type]\" is incompatible with \"type[tuple[_ClassInfo, ...]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:297:37 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:331:83 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"_extract_metadata\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:347:90 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"_extract_metadata\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:372:41 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"annotation\" of type \"type[Any] | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/main.py:412:32 - error: Argument of type \"type[Generic]\" cannot be assigned to parameter \"__class_or_tuple\" of type \"_ClassInfo\" in function \"issubclass\"\n+     Type \"type[Generic]\" cannot be assigned to type \"_ClassInfo\"\n+       \"type[type]\" is incompatible with \"type[UnionType]\"\n+       \"type[type]\" is incompatible with \"type[tuple[_ClassInfo, ...]]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_repr.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_repr.py:99:28 - error: Argument of type \"tuple[Unknown, tuple[Unknown, type[GenericAlias], type[UnionType]], type[type]]\" cannot be assigned to parameter \"__class_or_tuple\" of type \"_ClassInfo\" in function \"isinstance\"\n+     Type \"tuple[Unknown, tuple[Unknown, type[GenericAlias], type[UnionType]], type[type]]\" cannot be assigned to type \"_ClassInfo\"\n+       \"tuple[Unknown, tuple[Unknown, type[GenericAlias], type[UnionType]], type[type]]\" is incompatible with \"type\"\n+       \"tuple[Unknown, tuple[Unknown, type[GenericAlias], type[UnionType]], type[type]]\" is incompatible with \"UnionType\"\n+       \"tuple[Unknown, tuple[Unknown, type[GenericAlias], type[UnionType]], type[type]]\" is incompatible with \"tuple[_ClassInfo, ...]\"\n+         Tuple entry 1 is incorrect type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_repr.py:105:26 - error: Argument of type \"tuple[Unknown, type[GenericAlias], type[UnionType]]\" cannot be assigned to parameter \"__class_or_tuple\" of type \"_ClassInfo\" in function \"isinstance\"\n+     Type \"tuple[Unknown, type[GenericAlias], type[UnionType]]\" cannot be assigned to type \"_ClassInfo\"\n+       \"tuple[Unknown, type[GenericAlias], type[UnionType]]\" is incompatible with \"type\"\n+       \"tuple[Unknown, type[GenericAlias], type[UnionType]]\" is incompatible with \"UnionType\"\n+       \"tuple[Unknown, type[GenericAlias], type[UnionType]]\" is incompatible with \"tuple[_ClassInfo, ...]\"\n+         Tuple entry 1 is incorrect type (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_utils.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_utils.py:78:28 - error: Argument of type \"tuple[Unknown, type[GenericAlias], type[UnionType]]\" cannot be assigned to parameter \"__class_or_tuple\" of type \"_ClassInfo\" in function \"isinstance\"\n+     Type \"tuple[Unknown, type[GenericAlias], type[UnionType]]\" cannot be assigned to type \"_ClassInfo\"\n+       \"tuple[Unknown, type[GenericAlias], type[UnionType]]\" is incompatible with \"type\"\n+       \"tuple[Unknown, type[GenericAlias], type[UnionType]]\" is incompatible with \"UnionType\"\n+       \"tuple[Unknown, type[GenericAlias], type[UnionType]]\" is incompatible with \"tuple[_ClassInfo, ...]\"\n+         Tuple entry 1 is incorrect type (reportGeneralTypeIssues)\n- 52 errors, 0 warnings, 0 informations \n+ 61 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:514:33 - error: Expression of type \"Any\" cannot be assigned to declared type \"type[T@Greedy]\"\n+     Type \"type[Any]\" cannot be assigned to type \"type[T@Greedy]\" (reportGeneralTypeIssues)\n- 8388 errors, 25 warnings, 0 informations \n+ 8389 errors, 25 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:1192:52 - error: Argument of type \"type[Generic]\" cannot be assigned to parameter \"__class_or_tuple\" of type \"_ClassInfo\" in function \"issubclass\"\n+     Type \"type[Generic]\" cannot be assigned to type \"_ClassInfo\"\n+       \"type[type]\" is incompatible with \"type[tuple[_ClassInfo, ...]]\" (reportGeneralTypeIssues)\n- 67 errors, 13 warnings, 0 informations \n+ 68 errors, 13 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:429:14 - error: Argument of type \"type[(...) -> Any]\" cannot be assigned to parameter \"hint\" of type \"type\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:856:24 - error: Expression of type \"type | type[None]\" cannot be assigned to return type \"type\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:2405:25 - error: Argument of type \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" cannot be assigned to parameter \"__object\" of type \"Tuple[str, Type[Any]] | Tuple[str, Type[Any], Any]\" in function \"append\"\n+     Type \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" cannot be assigned to type \"Tuple[str, Type[Any]] | Tuple[str, Type[Any], Any]\"\n+       \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" is incompatible with \"Tuple[str, Type[Any]]\"\n+         Tuple size mismatch; expected 2 but received 3\n+       \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" is incompatible with \"Tuple[str, Type[Any], Any]\"\n+         Tuple entry 2 is incorrect type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:2416:25 - error: Argument of type \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" cannot be assigned to parameter \"__object\" of type \"Tuple[str, Type[Any]] | Tuple[str, Type[Any], Any]\" in function \"append\"\n+     Type \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" cannot be assigned to type \"Tuple[str, Type[Any]] | Tuple[str, Type[Any], Any]\"\n+       \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" is incompatible with \"Tuple[str, Type[Any]]\"\n+         Tuple size mismatch; expected 2 but received 3\n+       \"tuple[str, type[str] | type[Builds[Any]] | type[Tuple[str | Builds[Any], ...]], Field[Any]]\" is incompatible with \"Tuple[str, Type[Any], Any]\"\n+         Tuple entry 2 is incorrect type (reportGeneralTypeIssues)\n- 148 errors, 0 warnings, 183 informations \n+ 152 errors, 0 warnings, 183 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fb9ac254a19ac290557",
    "number": 6970,
    "body": "…ey are treated correctly when used as runtime objects.",
    "head_branch": "issue6895-1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1265:32 - error: Cannot access member \"get\" for type \"type[UnionType]\"\n+     Member \"get\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1267:27 - error: Cannot access member \"get\" for type \"type[UnionType]\"\n+     Member \"get\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1269:27 - error: Cannot access member \"get\" for type \"type[UnionType]\"\n+     Member \"get\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1455:30 - error: Cannot access member \"get\" for type \"type[UnionType]\"\n+     Member \"get\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_metadata.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_metadata.py:48:27 - error: Cannot access member \"get\" for type \"type[UnionType]\"\n+     Member \"get\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_metadata.py:59:33 - error: Cannot access member \"get\" for type \"type[UnionType]\"\n+     Member \"get\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_discriminated_union.py:436:23 - error: Cannot access member \"get\" for type \"type[UnionType]\"\n+     Member \"get\" is unknown (reportGeneralTypeIssues)\n- 52 errors, 0 warnings, 0 informations \n+ 59 errors, 0 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:212:21 - error: Cannot access member \"force_echo\" for type \"type[UnionType]\"\n+     Member \"force_echo\" is unknown (reportGeneralTypeIssues)\n- 3991 errors, 49 warnings, 0 informations \n+ 3992 errors, 49 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/mypy.py:101:42 - error: Cannot access member \"default_signature\" for type \"type[UnionType]\"\n+     Member \"default_signature\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/mypy.py:103:32 - error: Cannot access member \"default_signature\" for type \"type[UnionType]\"\n+     Member \"default_signature\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/mypy.py:111:18 - error: Cannot access member \"default_signature\" for type \"type[UnionType]\"\n+     Member \"default_signature\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/mypy.py:113:20 - error: Cannot access member \"default_signature\" for type \"type[UnionType]\"\n+     Member \"default_signature\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/mypy.py:159:12 - error: Cannot access member \"fullname\" for type \"type[UnionType]\"\n+     Member \"fullname\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/components.py:193:35 - error: Argument of type \"Unknown\" cannot be assigned to parameter \"columns\" of type \"Index | MultiIndex\" in function \"get_regex_columns\"\n+     Type \"type[UnionType]\" cannot be assigned to type \"Index | MultiIndex\"\n+       \"type[type]\" is incompatible with \"type[Index]\"\n+       \"type[type]\" is incompatible with \"type[MultiIndex]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:34:30 - error: Cannot access member \"groupby\" for type \"type[UnionType]\"\n+     Member \"groupby\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:60:60 - error: Argument of type \"Unknown\" cannot be assigned to parameter \"__obj\" of type \"Sized\" in function \"len\"\n+     \"__len__\" is not present (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/checks.py:300:33 - error: Argument of type \"Unknown\" cannot be assigned to parameter \"check_obj\" of type \"dict[Unknown, Unknown]\" in function \"postprocess\"\n+     \"type[type]\" is incompatible with \"type[dict[Unknown, Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:198:26 - error: Cannot access member \"apply\" for type \"type[UnionType]\"\n+     Member \"apply\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:265:36 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:271:23 - error: Cannot assign member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:271:61 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:273:27 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:276:41 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:406:23 - error: Cannot assign member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:420:50 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:421:35 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:421:62 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:424:48 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/components.py:437:47 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/error_formatters.py:88:39 - error: Cannot access member \"columns\" for type \"type[UnionType]\"\n+     Member \"columns\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/error_formatters.py:89:45 - error: Cannot access member \"columns\" for type \"type[UnionType]\"\n+     Member \"columns\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/error_formatters.py:92:66 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/error_formatters.py:105:66 - error: Cannot access member \"index\" for type \"type[UnionType]\"\n+     Member \"index\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/error_formatters.py:117:48 - error: Cannot access member \"unstack\" for type \"type[UnionType]\"\n+     Member \"unstack\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:67:25 - error: Object of type \"Unknown\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/numpy_engine.py:51:34 - error: Cannot access member \"astype\" for type \"type[UnionType]\"\n+     Member \"astype\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/numpy_engine.py:353:41 - error: Cannot access member \"astype\" for type \"type[UnionType]\"\n+     Member \"astype\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/numpy_engine.py:358:55 - error: Cannot access member \"astype\" for type \"type[UnionType]\"\n+     Member \"astype\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:117:34 - error: Cannot access member \"astype\" for type \"type[UnionType]\"\n+     Member \"astype\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:134:17 - error: Argument missing for parameter \"self\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:605:34 - error: Cannot access member \"astype\" for type \"type[UnionType]\"\n+     Member \"astype\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:721:63 - error: Cannot access member \"isna\" for type \"type[UnionType]\"\n+     Member \"isna\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:844:38 - error: Cannot access member \"dtype\" for type \"type[UnionType]\"\n+     Member \"dtype\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:847:28 - error: Cannot access member \"dt\" for type \"type[UnionType]\"\n+     Member \"dt\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:849:35 - error: Cannot access member \"dt\" for type \"type[UnionType]\"\n+     Member \"dt\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:854:35 - error: Cannot access member \"dt\" for type \"type[UnionType]\"\n+     Member \"dt\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:857:29 - error: Cannot access member \"tz\" for type \"type[UnionType]\"\n+     Member \"tz\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:860:28 - error: Cannot access member \"tz\" for type \"type[UnionType]\"\n+     Member \"tz\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:862:35 - error: Cannot access member \"tz_localize\" for type \"type[UnionType]\"\n+     Member \"tz_localize\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:867:35 - error: Cannot access member \"tz_convert\" for type \"type[UnionType]\"\n+     Member \"tz_convert\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:868:24 - error: Cannot access member \"astype\" for type \"type[UnionType]\"\n+     Member \"astype\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:873:35 - error: Cannot access member \"transform\" for type \"type[UnionType]\"\n+     Member \"transform\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:933:24 - error: Cannot access member \"astype\" for type \"type[UnionType]\"\n+     Member \"astype\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:938:35 - error: Cannot access member \"transform\" for type \"type[UnionType]\"\n+     Member \"transform\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1120:53 - error: Cannot access member \"dtypes\" for type \"type[UnionType]\"\n+     Member \"dtypes\" is unknown (reportGeneralTypeIssues)\n\n... (truncated 78 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/grpc/aio_client_interceptor.py:155:31 - error: Cannot access member \"code\" for type \"type[UnionType]\"\n+     Member \"code\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/grpc/aio_client_interceptor.py:156:34 - error: Cannot access member \"details\" for type \"type[UnionType]\"\n+     Member \"details\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/grpc/aio_client_interceptor.py:159:18 - error: Cannot access member \"add_done_callback\" for type \"type[UnionType]\"\n+     Member \"add_done_callback\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/grpc/aio_client_interceptor.py:180:31 - error: Cannot access member \"code\" for type \"type[UnionType]\"\n+     Member \"code\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/grpc/aio_client_interceptor.py:181:34 - error: Cannot access member \"details\" for type \"type[UnionType]\"\n+     Member \"details\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/grpc/aio_client_interceptor.py:185:18 - error: Cannot access member \"add_done_callback\" for type \"type[UnionType]\"\n+     Member \"add_done_callback\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/opentelemetry/_span.py:198:34 - error: Cannot access member \"status_code\" for type \"type[UnionType]\"\n+     Member \"status_code\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/opentelemetry/_span.py:199:30 - error: Cannot access member \"description\" for type \"type[UnionType]\"\n+     Member \"description\" is unknown (reportGeneralTypeIssues)\n- 9983 errors, 458 warnings, 0 informations \n+ 9991 errors, 458 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/RL/BaseReinforcementLearningModel.py:371:28 - error: Cannot access member \"close\" for type \"type[UnionType]\"\n+     Member \"close\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/RL/BaseReinforcementLearningModel.py:374:27 - error: Cannot access member \"close\" for type \"type[UnionType]\"\n+     Member \"close\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/prediction_models/ReinforcementLearner_multiproc.py:39:28 - error: Cannot access member \"close\" for type \"type[UnionType]\"\n+     Member \"close\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/prediction_models/ReinforcementLearner_multiproc.py:41:27 - error: Cannot access member \"close\" for type \"type[UnionType]\"\n+     Member \"close\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:25:36 - error: Cannot access member \"remote_address\" for type \"type[UnionType]\"\n+     Member \"remote_address\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:27:32 - error: Cannot access member \"client\" for type \"type[UnionType]\"\n+     Member \"client\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:28:48 - error: Cannot access member \"client\" for type \"type[UnionType]\"\n+     Member \"client\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:28:77 - error: Cannot access member \"client\" for type \"type[UnionType]\"\n+     Member \"client\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:37:35 - error: Cannot access member \"send_text\" for type \"type[UnionType]\"\n+     Member \"send_text\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:39:35 - error: Cannot access member \"send\" for type \"type[UnionType]\"\n+     Member \"send\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:46:42 - error: Cannot access member \"receive_text\" for type \"type[UnionType]\"\n+     Member \"receive_text\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:48:42 - error: Cannot access member \"recv\" for type \"type[UnionType]\"\n+     Member \"recv\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:55:42 - error: Cannot access member \"ping\" for type \"type[UnionType]\"\n+     Member \"ping\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:64:46 - error: Cannot access member \"close\" for type \"type[UnionType]\"\n+     Member \"close\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/ws/proxy.py:73:42 - error: Cannot access member \"accept\" for type \"type[UnionType]\"\n+     Member \"accept\" is unknown (reportGeneralTypeIssues)\n- 598 errors, 38 warnings, 0 informations \n+ 613 errors, 38 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:478:32 - error: Object of type \"Callable\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:487:42 - error: Object of type \"Callable\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:514:33 - error: Expression of type \"Any\" cannot be assigned to declared type \"type[T@Greedy]\"\n+     Type \"type[Any]\" cannot be assigned to type \"type[T@Greedy]\" (reportGeneralTypeIssues)\n- 8388 errors, 25 warnings, 0 informations \n+ 8391 errors, 25 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fbaac254a19ac290558",
    "number": 6969,
    "body": "…ons. The typing spec was recently amended to allow this. This addresses #6968.",
    "head_branch": "issue6968",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for `+` unary operator in `Literal` `int` type annotations. The typing spec was recently amended to allow this. This addresses #6968. (#6969)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fbbac254a19ac290559",
    "number": 6967,
    "body": "This is pulling back the rest of the changes I made for URI support in Pylance.\r\n\r\nThere's also some refactoring changes that Heejae made.",
    "head_branch": "pull-pylance-with-pyright-",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright- (#6967)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fbcac254a19ac29055a",
    "number": 6954,
    "body": "Instead of waiting for me to finish all the URI changes in pylance, I wanted to push this part of the changes to Pyright. \n\nI was debugging the pyright extension without this change and was noticing there were still issues serializing data to the background thread. This change fixes those problems. ",
    "head_branch": "rchiodo/port_uri_fixes",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Port some of the URI fixes made in pylance back to pyright (#6954)\n\n* Port some of the URI fixes made in pylance back to pyright\r\n\r\n* Fix and add tests too\r\n\r\n* Review feedback\r\n\r\n* Forgot to add the unit tests for the serialization"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fbdac254a19ac29055b",
    "number": 6951,
    "body": "Bumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.15.2 to 1.15.4.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/65858205e59f1e23c9bf173348a7a7cbb8ac47f5\"><code>6585820</code></a> Release version 1.15.4 of the npm package.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/7a6567e16dfa9ad18a70bfe91784c28653fbf19d\"><code>7a6567e</code></a> Disallow bracketed hostnames.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/05629af696588b90d64e738bc2e809a97a5f92fc\"><code>05629af</code></a> Prefer native URL instead of deprecated url.parse.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/1cba8e85fa73f563a439fe460cf028688e4358df\"><code>1cba8e8</code></a> Prefer native URL instead of legacy url.resolve.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/72bc2a4229bc18dc9fbd57c60579713e6264cb92\"><code>72bc2a4</code></a> Simplify _processResponse error handling.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/3d42aecdca39b144a0a2f27ea134b4cf67dd796a\"><code>3d42aec</code></a> Add bracket tests.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/bcbb096b32686ecad6cd34235358ed6f2217d4f0\"><code>bcbb096</code></a> Do not directly set Error properties.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/192dbe7ce671ecad813c074bffe3b3f5d3680fee\"><code>192dbe7</code></a> Release version 1.15.3 of the npm package.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/bd8c81e4f32d12f28a35d265f88b1716703687c6\"><code>bd8c81e</code></a> Fix resource leak on destroy.</li>\n<li><a href=\"https://github.com/follow-redirects/follow-redirects/commit/9c728c314b06f9595dcd7f245d40731e8a27d79f\"><code>9c728c3</code></a> Split linting and testing.</li>\n<li>Additional commits viewable in <a href=\"https://github.com/follow-redirects/follow-redirects/compare/v1.15.2...v1.15.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=follow-redirects&package-manager=npm_and_yarn&previous-version=1.15.2&new-version=1.15.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/follow-redirects-1.15.4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump follow-redirects from 1.15.2 to 1.15.4 (#6951)\n\nBumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.15.2 to 1.15.4.\r\n- [Release notes](https://github.com/follow-redirects/follow-redirects/releases)\r\n- [Commits](https://github.com/follow-redirects/follow-redirects/compare/v1.15.2...v1.15.4)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: follow-redirects\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fbeac254a19ac29055c",
    "number": 6950,
    "body": null,
    "head_branch": "documentation_typo",
    "is_a_fork": true,
    "comments": [
      "Thanks for the contribution."
    ],
    "commit_messages": [
      "corrected typo in configuration.md (#6950)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fbfac254a19ac29055d",
    "number": 6949,
    "body": "…r expression if an `await` keyword was used in a `for` iterator expression. This addresses #6948.",
    "head_branch": "issue6948",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:120:21 - error: Argument of type \"AsyncGenerator[bytes, None]\" cannot be assigned to parameter \"__iterable_of_bytes\" of type \"Iterable[ReadableBuffer]\" in function \"join\"\n+     \"AsyncGenerator[bytes, None]\" is incompatible with protocol \"Iterable[ReadableBuffer]\"\n+       \"__iter__\" is not present (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2410:19 - error: Argument of type \"AsyncGenerator[bool, None]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[object]\" in function \"all\"\n+     \"AsyncGenerator[bool, None]\" is incompatible with protocol \"Iterable[object]\"\n+       \"__iter__\" is not present (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2473:20 - error: Type of \"_cs_servers\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2475:13 - error: Type of \"_cs_servers\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2475:32 - error: No overloads for \"sorted\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2476:17 - error: Argument of type \"AsyncGenerator[Any, None]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[_T@sorted]\" in function \"sorted\"\n+     \"AsyncGenerator[Any, None]\" is incompatible with protocol \"Iterable[Any]\"\n+       \"__iter__\" is not present (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2487:20 - error: Type of \"_cs_servers\" is unknown (reportUnknownMemberType)\n- 8381 errors, 25 warnings, 0 informations \n+ 8388 errors, 25 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect inference of an async generator expression if an `await` keyword was used in a `for` iterator expression. This addresses #6948. (#6949)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc0ac254a19ac29055e",
    "number": 6947,
    "body": "… within a stub file. It now looks at whether the method is decorated with `@abstractmethod`. Previously, it assumed all such methods were potentially implemented. This addresses #6946.",
    "head_branch": "issue6946",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nmypy-protobuf (https://github.com/dropbox/mypy-protobuf)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:14:7 - error: Class derives from one or more protocol classes but does not implement all required members\n+     Member \"__anext__\" is declared in protocol class \"AsyncIterator\"\n+     Member \"__next__\" is declared in protocol class \"Iterator\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:15:7 - error: Class derives from one or more protocol classes but does not implement all required members\n+     Member \"__anext__\" is declared in protocol class \"AsyncIterator\"\n+     Member \"__next__\" is declared in protocol class \"Iterator\" (reportGeneralTypeIssues)\n- 21 errors, 24 warnings, 0 informations \n+ 23 errors, 24 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed the way pyright identifies an \"unimplemented protocol method\" within a stub file. It now looks at whether the method is decorated with `@abstractmethod`. Previously, it assumed all such methods were potentially implemented. This addresses #6946. (#6947)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc1ac254a19ac29055f",
    "number": 6945,
    "body": "…d TypeVar in an `except` statement. This addresses #6944.",
    "head_branch": "issue6944",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive error when using a bound TypeVar in an `except` statement. This addresses #6944. (#6945)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc2ac254a19ac290560",
    "number": 6933,
    "body": "…en used in an `issubclass` or `isinstance` check. This addresses #6882.",
    "head_branch": "issue-6882-4",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added check for \"unsafe overlaps\" for a runtime-checkable protocol when used in an `issubclass` or `isinstance` check. This addresses #6882. (#6933)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc2ac254a19ac290561",
    "number": 6932,
    "body": "…en used in an `issubclass` or `isinstance` check. This addresses #6882.",
    "head_branch": "issue6882-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict)\n+   /tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py:27:15 - error: Class overlaps \"Reversible\" unsafely and could produce a match at runtime\n+     Attributes of \"dict\" have the same names as the protocol (reportGeneralTypeIssues)\n- 13 errors, 0 warnings, 0 informations \n+ 14 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc3ac254a19ac290562",
    "number": 6931,
    "body": null,
    "head_branch": "issue6882",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict)\n+   /tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py:27:15 - error: Class overlaps \"Reversible\" unsafely and could produce a match at runtime\n+     Attributes of \"dict\" have the same names as the protocol (reportGeneralTypeIssues)\n- 13 errors, 0 warnings, 0 informations \n+ 14 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc4ac254a19ac290563",
    "number": 6929,
    "body": "…TypeVar includes literal types as constraints. This addresses #6917.",
    "head_branch": "issue6917",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type evaluation when a constrained TypeVar includes literal types as constraints. This addresses #6917. (#6929)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc5ac254a19ac290564",
    "number": 6928,
    "body": "…efined within a protocol. This addresses #6877.",
    "head_branch": "issue6877-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that leads to a false positive when a generic property is defined within a protocol. This addresses #6877. (#6928)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc6ac254a19ac290565",
    "number": 6927,
    "body": null,
    "head_branch": "issue6877",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc7ac254a19ac290566",
    "number": 6926,
    "body": "…indicates that this isn't allowed. This addresses #6881.",
    "head_branch": "issue6881",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added check for data protocols used in an `issubclass` call. PEP 544 indicates that this isn't allowed. This addresses #6881. (#6926)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc8ac254a19ac290567",
    "number": 6925,
    "body": "…a base class that explicitly calls it. This addresses #6880.",
    "head_branch": "issue6880-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_data.py:207:20 - error: Method \"__antidote_parameter_dependency__\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_provider.py:20:20 - error: Method \"can_provide\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_provider.py:23:20 - error: Method \"unsafe_maybe_provide\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n- 724 errors, 34 warnings, 0 informations \n+ 727 errors, 34 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-     Type of \"asdataarray\" is \"Overload[(dataclass: OptionedClass[PInit@asdataarray, TDataArray@asdataarray], reference: Unknown | None = None, dataoptions: None = None) -> TDataArray@asdataarray, (dataclass: DataClass[PInit@asdataarray], reference: Unknown | None = None, dataoptions: None = None) -> Unknown, (dataclass: Any, reference: Unknown | None = None, dataoptions: DataOptions[TDataArray@asdataarray] = DataOptions(xr.DataArray)) -> TDataArray@asdataarray, (dataclass: Any, reference: Unknown | None = None, dataoptions: Any = None) -> Any]\" (reportUnknownVariableType)\n+     Type of \"asdataarray\" is \"Overload[(dataclass: OptionedClass[PInit@asdataarray, TDataArray@asdataarray], reference: Unknown | None = None, dataoptions: None = None) -> TDataArray@asdataarray, (dataclass: DataClass[PInit@asdataarray], reference: Unknown | None = None, dataoptions: None = None) -> Unknown, (dataclass: Any, reference: Unknown | None = None, dataoptions: DataOptions[TDataArray@asdataarray] = DataOptions(xr.DataArray)) -> TDataArray@asdataarray]\" (reportUnknownVariableType)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+ /tmp/mypy_primer/projects/steam.py/steam/invite.py\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:134:22 - error: Method \"accept\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n- 8380 errors, 25 warnings, 0 informations \n+ 8381 errors, 25 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-     Type of \"instantiate\" is \"Overload[(config: _TightBind, *args: Any, **kwargs: Any) -> Any, (config: ConfigPath | type[ConfigPath], *args: Any, **kwargs: Any) -> Path, (config: ConfigComplex | type[ConfigComplex], *args: Any, **kwargs: Any) -> complex, (config: Just[T@instantiate] | type[Just[T@instantiate]], *args: Any, **kwargs: Any) -> T@instantiate, (config: ZenPartialMixin[(...) -> T@instantiate] | HydraPartialMixin[(...) -> T@instantiate] | type[ZenPartialMixin[(...) -> T@instantiate]] | type[HydraPartialMixin[(...) -> T@instantiate]], *args: Any, **kwargs: Any) -> Partial[T@instantiate], (config: Builds[(...) -> T@instantiate] | type[Builds[(...) -> T@instantiate]], *args: Any, **kwargs: Any) -> T@instantiate, (config: HasTarget | Unknown | DataClass_ | type[DataClass_] | Dict[Any, Any] | List[Any], *args: Any, **kwargs: Any) -> Any, (config: Any, *args: Any, **kwargs: Any) -> Any]\" (reportUnknownVariableType)\n+     Type of \"instantiate\" is \"Overload[(config: _TightBind, *args: Any, **kwargs: Any) -> Any, (config: ConfigPath | type[ConfigPath], *args: Any, **kwargs: Any) -> Path, (config: ConfigComplex | type[ConfigComplex], *args: Any, **kwargs: Any) -> complex, (config: Just[T@instantiate] | type[Just[T@instantiate]], *args: Any, **kwargs: Any) -> T@instantiate, (config: ZenPartialMixin[(...) -> T@instantiate] | HydraPartialMixin[(...) -> T@instantiate] | type[ZenPartialMixin[(...) -> T@instantiate]] | type[HydraPartialMixin[(...) -> T@instantiate]], *args: Any, **kwargs: Any) -> Partial[T@instantiate], (config: Builds[(...) -> T@instantiate] | type[Builds[(...) -> T@instantiate]], *args: Any, **kwargs: Any) -> T@instantiate, (config: HasTarget | Unknown | DataClass_ | type[DataClass_] | Dict[Any, Any] | List[Any], *args: Any, **kwargs: Any) -> Any]\" (reportUnknownVariableType)\n\n```"
    ],
    "commit_messages": [
      "Added check for a call to an unimplemented method in a protocol from a base class that explicitly calls it. This addresses #6880. (#6925)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fc9ac254a19ac290568",
    "number": 6924,
    "body": "…a base class that explicitly calls it. This addresses #6880.",
    "head_branch": "issue6880-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_data.py:207:20 - error: Method \"__antidote_parameter_dependency__\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_provider.py:20:20 - error: Method \"can_provide\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_provider.py:23:20 - error: Method \"unsafe_maybe_provide\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n- 724 errors, 34 warnings, 0 informations \n+ 727 errors, 34 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-     Type of \"ones\" is \"(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown\" (reportUnknownMemberType)\n+     Type of \"ones\" is \"Overload[(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown]\" (reportUnknownMemberType)\n-     Type of \"ones\" is \"(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown\" (reportUnknownMemberType)\n+     Type of \"ones\" is \"Overload[(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown]\" (reportUnknownMemberType)\n-     Type of \"ones\" is \"(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown\" (reportUnknownMemberType)\n+     Type of \"ones\" is \"Overload[(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown]\" (reportUnknownMemberType)\n-     Type of \"asdataarray\" is \"Overload[(dataclass: OptionedClass[PInit@asdataarray, TDataArray@asdataarray], reference: Unknown | None = None, dataoptions: None = None) -> TDataArray@asdataarray, (dataclass: DataClass[PInit@asdataarray], reference: Unknown | None = None, dataoptions: None = None) -> Unknown, (dataclass: Any, reference: Unknown | None = None, dataoptions: DataOptions[TDataArray@asdataarray] = DataOptions(xr.DataArray)) -> TDataArray@asdataarray, (dataclass: Any, reference: Unknown | None = None, dataoptions: Any = None) -> Any]\" (reportUnknownVariableType)\n+     Type of \"asdataarray\" is \"Overload[(dataclass: OptionedClass[PInit@asdataarray, TDataArray@asdataarray], reference: Unknown | None = None, dataoptions: None = None) -> TDataArray@asdataarray, (dataclass: DataClass[PInit@asdataarray], reference: Unknown | None = None, dataoptions: None = None) -> Unknown, (dataclass: Any, reference: Unknown | None = None, dataoptions: DataOptions[TDataArray@asdataarray] = DataOptions(xr.DataArray)) -> TDataArray@asdataarray]\" (reportUnknownVariableType)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+ /tmp/mypy_primer/projects/steam.py/steam/invite.py\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:134:22 - error: Method \"accept\" cannot be called because it is abstract and unimplemented (reportGeneralTypeIssues)\n- 8380 errors, 25 warnings, 0 informations \n+ 8381 errors, 25 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-     Type of \"instantiate\" is \"Overload[(config: _TightBind, *args: Any, **kwargs: Any) -> Any, (config: ConfigPath | type[ConfigPath], *args: Any, **kwargs: Any) -> Path, (config: ConfigComplex | type[ConfigComplex], *args: Any, **kwargs: Any) -> complex, (config: Just[T@instantiate] | type[Just[T@instantiate]], *args: Any, **kwargs: Any) -> T@instantiate, (config: ZenPartialMixin[(...) -> T@instantiate] | HydraPartialMixin[(...) -> T@instantiate] | type[ZenPartialMixin[(...) -> T@instantiate]] | type[HydraPartialMixin[(...) -> T@instantiate]], *args: Any, **kwargs: Any) -> Partial[T@instantiate], (config: Builds[(...) -> T@instantiate] | type[Builds[(...) -> T@instantiate]], *args: Any, **kwargs: Any) -> T@instantiate, (config: HasTarget | Unknown | DataClass_ | type[DataClass_] | Dict[Any, Any] | List[Any], *args: Any, **kwargs: Any) -> Any, (config: Any, *args: Any, **kwargs: Any) -> Any]\" (reportUnknownVariableType)\n+     Type of \"instantiate\" is \"Overload[(config: _TightBind, *args: Any, **kwargs: Any) -> Any, (config: ConfigPath | type[ConfigPath], *args: Any, **kwargs: Any) -> Path, (config: ConfigComplex | type[ConfigComplex], *args: Any, **kwargs: Any) -> complex, (config: Just[T@instantiate] | type[Just[T@instantiate]], *args: Any, **kwargs: Any) -> T@instantiate, (config: ZenPartialMixin[(...) -> T@instantiate] | HydraPartialMixin[(...) -> T@instantiate] | type[ZenPartialMixin[(...) -> T@instantiate]] | type[HydraPartialMixin[(...) -> T@instantiate]], *args: Any, **kwargs: Any) -> Partial[T@instantiate], (config: Builds[(...) -> T@instantiate] | type[Builds[(...) -> T@instantiate]], *args: Any, **kwargs: Any) -> T@instantiate, (config: HasTarget | Unknown | DataClass_ | type[DataClass_] | Dict[Any, Any] | List[Any], *args: Any, **kwargs: Any) -> Any]\" (reportUnknownVariableType)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fcaac254a19ac290569",
    "number": 6922,
    "body": "… code flow graphs and \"truthy\" conditional statements. This addresses #6890.",
    "head_branch": "issue6890",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved type analysis performance in certain cases involving complex code flow graphs and \"truthy\" conditional statements. This addresses #6890. (#6922)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fcbac254a19ac29056a",
    "number": 6921,
    "body": "…col method when called through a `super()` in a derived class. This addresses #6880.",
    "head_branch": "issue6880",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n-     Type of \"value\" is \"Overload[(*, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> ((((() -> T@value) | staticmethod[() -> T@value, Unknown])) -> LazyProperty[T@value]), (__func: (() -> T@value) | staticmethod[() -> T@value, Unknown], *, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> LazyValue[T@value]]\" (reportUnknownMemberType)\n+     Type of \"value\" is \"Overload[(*, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> ((((() -> T@value) | staticmethod[() -> T@value, Unknown])) -> LazyProperty[T@value]), (__func: (() -> T@value) | staticmethod[() -> T@value, Unknown], *, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> LazyValue[T@value], (self: Lazy, __func: object = None, *, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = \"transient\", inject: Default | None = Default.sentinel, type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = Default.sentinel, catalog: Catalog = world) -> object]\" (reportUnknownMemberType)\n-     Type of \"value\" is \"Overload[(*, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> ((((() -> T@value) | staticmethod[() -> T@value, Unknown])) -> LazyProperty[T@value]), (__func: (() -> T@value) | staticmethod[() -> T@value, Unknown], *, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> LazyValue[T@value]]\" (reportUnknownMemberType)\n+     Type of \"value\" is \"Overload[(*, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> ((((() -> T@value) | staticmethod[() -> T@value, Unknown])) -> LazyProperty[T@value]), (__func: (() -> T@value) | staticmethod[() -> T@value, Unknown], *, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> LazyValue[T@value], (self: Lazy, __func: object = None, *, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = \"transient\", inject: Default | None = Default.sentinel, type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = Default.sentinel, catalog: Catalog = world) -> object]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_data.py:207:20 - error: Method \"__antidote_parameter_dependency__\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_provider.py:20:20 - error: Method \"can_provide\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_provider.py:23:20 - error: Method \"unsafe_maybe_provide\" cannot be called because it is abstract (reportGeneralTypeIssues)\n-     Type of \"value\" is \"Overload[(*, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> ((((() -> T@value) | staticmethod[() -> T@value, Unknown])) -> LazyProperty[T@value]), (__func: (() -> T@value) | staticmethod[() -> T@value, Unknown], *, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> LazyValue[T@value]]\" (reportUnknownMemberType)\n+     Type of \"value\" is \"Overload[(*, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> ((((() -> T@value) | staticmethod[() -> T@value, Unknown])) -> LazyProperty[T@value]), (__func: (() -> T@value) | staticmethod[() -> T@value, Unknown], *, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = ..., inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = ...) -> LazyValue[T@value], (self: Lazy, __func: object = None, *, lifetime: LifeTime | Literal['singleton', 'scoped', 'transient'] = \"transient\", inject: Default | None = Default.sentinel, type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = Default.sentinel, catalog: Catalog = world) -> object]\" (reportUnknownMemberType)\n-     Type of \"as_default\" is \"Overload[(*, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> InterfaceLazyAsDefaultDecorator, (__func: staticmethod[LazyFunction[P@as_default, T@as_default], Unknown], *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default], (__func: LazyMethod[P@as_default, T@as_default], *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default], (__func: LazyFunction[P@as_default, T@as_default], *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default], (__func: (**P@as_default) -> T@as_default, *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default]]\" (reportUnknownMemberType)\n+     Type of \"as_default\" is \"Overload[(*, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> InterfaceLazyAsDefaultDecorator, (__func: staticmethod[LazyFunction[P@as_default, T@as_default], Unknown], *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default], (__func: LazyMethod[P@as_default, T@as_default], *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default], (__func: LazyFunction[P@as_default, T@as_default], *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default], (__func: (**P@as_default) -> T@as_default, *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default], (self: InterfaceLazy, __func: object = None, *, inject: Default | None = Default.sentinel, type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = Default.sentinel, catalog: Catalog = world) -> object]\" (reportUnknownMemberType)\n-     Type of \"as_default\" is \"Overload[(*, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> InterfaceLazyAsDefaultDecorator, (__func: staticmethod[LazyFunction[P@as_default, T@as_default], Unknown], *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default], (__func: LazyMethod[P@as_default, T@as_default], *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default], (__func: LazyFunction[P@as_default, T@as_default], *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default], (__func: (**P@as_default) -> T@as_default, *, inject: None = ..., type_hints_locals: Mapping[str, object] | Default | Literal['auto'] | None = ..., catalog: Catalog = world) -> LazyInterface[P@as_default, T@as_default]]\" (reportUnknownMemberType)\n\n... (truncated 43 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/provider.py:132:9 - error: Method \"activate\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/provider.py:165:9 - error: Method \"activate\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/asyncio/provider.py:26:13 - error: Method \"activate\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/asyncio/provider.py:51:20 - error: Method \"_has_active_context\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/asyncio/provider.py:65:20 - error: Method \"active\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/gevent/provider.py:34:13 - error: Method \"activate\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/periodic.py:148:9 - error: Method \"_stop_service\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/collector/_lock.py:204:9 - error: Method \"_start_service\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/collector/_lock.py:209:9 - error: Method \"_stop_service\" cannot be called because it is abstract (reportGeneralTypeIssues)\n- 12717 errors, 453 warnings, 0 informations \n+ 12726 errors, 453 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-     Type of \"ones\" is \"Overload[(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Custom, (shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown]\" (reportUnknownMemberType)\n+     Type of \"ones\" is \"Overload[(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Custom, (shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown, (cls: Any, shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Any]\" (reportUnknownMemberType)\n-     Type of \"ones\" is \"(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown\" (reportUnknownMemberType)\n+     Type of \"ones\" is \"Overload[(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown, (cls: Any, shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Any]\" (reportUnknownMemberType)\n-     Type of \"ones\" is \"(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown\" (reportUnknownMemberType)\n+     Type of \"ones\" is \"Overload[(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown, (cls: Any, shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Any]\" (reportUnknownMemberType)\n-     Type of \"ones\" is \"(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown\" (reportUnknownMemberType)\n+     Type of \"ones\" is \"Overload[(shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Unknown, (cls: Any, shape: Sequence[int] | int | Dict[str, int], order: Literal['C', 'F'] = \"C\", **kwargs: Any) -> Any]\" (reportUnknownMemberType)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:476:26 - error: Method \"chunk\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:505:22 - error: Method \"chunk\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/steam/group.py\n+   /tmp/mypy_primer/projects/steam.py/steam/group.py:48:22 - error: Method \"chunk\" cannot be called because it is abstract (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/steam/invite.py\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:134:22 - error: Method \"accept\" cannot be called because it is abstract (reportGeneralTypeIssues)\n- 8380 errors, 25 warnings, 0 informations \n+ 8384 errors, 25 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-     Type of \"from_gateway_bot\" is \"Overload[(bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client]\" (reportUnknownMemberType)\n+     Type of \"from_gateway_bot\" is \"Overload[(bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (cls: type[Client], bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client]\" (reportUnknownMemberType)\n-     Type of \"from_rest_bot\" is \"Overload[(bot: Unknown, /, *, bot_managed: bool = False, declare_global_commands: Unknown | bool = False, injector: Unknown | None = None, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (bot: Unknown, /, *, bot_managed: bool = False, declare_global_commands: Unknown | bool = False, injector: Unknown | None = None, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client]\" (reportUnknownMemberType)\n+     Type of \"from_rest_bot\" is \"Overload[(bot: Unknown, /, *, bot_managed: bool = False, declare_global_commands: Unknown | bool = False, injector: Unknown | None = None, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (bot: Unknown, /, *, bot_managed: bool = False, declare_global_commands: Unknown | bool = False, injector: Unknown | None = None, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (cls: type[Client], bot: Unknown, /, *, bot_managed: bool = False, declare_global_commands: Unknown | bool = False, injector: Unknown | None = None, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client]\" (reportUnknownMemberType)\n-     Type of \"from_gateway_bot\" is \"Overload[(bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client]\" (reportUnknownMemberType)\n+     Type of \"from_gateway_bot\" is \"Overload[(bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (cls: type[Client], bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client]\" (reportUnknownMemberType)\n-     Type of \"from_gateway_bot\" is \"Overload[(bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client]\" (reportUnknownMemberType)\n+     Type of \"from_gateway_bot\" is \"Overload[(bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (cls: type[Client], bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client]\" (reportUnknownMemberType)\n-     Type of \"from_gateway_bot\" is \"Overload[(bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client]\" (reportUnknownMemberType)\n+     Type of \"from_gateway_bot\" is \"Overload[(bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client, (cls: type[Client], bot: _GatewayBotProto, /, *, event_managed: bool = True, injector: Unknown | None = None, mention_prefix: bool = False, declare_global_commands: Unknown | bool = False, set_global_commands: Unknown | bool = False, command_ids: Mapping[str, Unknown] | None = None, message_ids: Mapping[str, Unknown] | None = None, user_ids: Mapping[str, Unknown] | None = None) -> Client]\" (reportUnknownMemberType)\n\n... (truncated 96 lines) ...\n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n\n... (truncated 14 lines) ...\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fcbac254a19ac29056b",
    "number": 6920,
    "body": "…variable is a `ClassVar` in the protocol but not in the concrete class (or vice versa). This addresses #6869.",
    "head_branch": "issue6869",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:3499:5 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(obj: HasTarget) -> Any\" cannot be assigned to type \"(obj: InstOrType[Builds[_T@get_target]]) -> _T@get_target\"\n+       Parameter 1: type \"InstOrType[Builds[_T@get_target]]\" cannot be assigned to type \"HasTarget\"\n+         Type \"InstOrType[Builds[_T@get_target]]\" cannot be assigned to type \"HasTarget\"\n+           \"Builds[_T@get_target]\" is incompatible with protocol \"HasTarget\"\n+             \"_target_\" is not defined as a ClassVar in protocol (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:79:28 - error: Argument of type \"Builds[Any]\" cannot be assigned to parameter \"x\" of type \"HasTarget\" in function \"_get_target\"\n+     \"Builds[Any]\" is incompatible with protocol \"HasTarget\"\n+       \"_target_\" is not defined as a ClassVar in protocol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:80:32 - error: Argument of type \"type[Just[T@Just]]\" cannot be assigned to parameter \"x\" of type \"HasTarget\" in function \"_get_target\"\n+     \"_target_\" is not defined as a ClassVar in protocol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:101:28 - error: Argument of type \"Builds[Any]\" cannot be assigned to parameter \"x\" of type \"HasTarget\" in function \"_get_target\"\n+     \"Builds[Any]\" is incompatible with protocol \"HasTarget\"\n+       \"_target_\" is not defined as a ClassVar in protocol (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:164:24 - error: Argument of type \"Builds[Any]\" cannot be assigned to parameter \"x\" of type \"HasTarget\" in function \"_get_target\"\n+     \"Builds[Any]\" is incompatible with protocol \"HasTarget\"\n+       \"_target_\" is not defined as a ClassVar in protocol (reportGeneralTypeIssues)\n- 148 errors, 0 warnings, 183 informations \n+ 153 errors, 0 warnings, 183 informations \n\n```",
      "@rsokl, this bug fix in pyright (which is required to pass the newly-created type checker conformance tests) triggers some new type violations in the hydra-zen source base. See the changes above. Looks like an easy fix. Just wanted to give you a heads up."
    ],
    "commit_messages": [
      "Fixed bug in protocol matching logic to reject a protocol match if a variable is a `ClassVar` in the protocol but not in the concrete class (or vice versa). This addresses #6869. (#6920)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fccac254a19ac29056c",
    "number": 6918,
    "body": "… function. Added missing check for override of an overloaded method marked `@final`. This addresses #6860 and #6866.",
    "head_branch": "issue6860",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added missing check for inconsistent use of `@final` in an overloaded function. Added missing check for override of an overloaded method marked `@final`. This addresses #6860 and #6866. (#6918)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fcdac254a19ac29056d",
    "number": 6913,
    "body": "…re the tuple includes unbounded entries or unpacked TypeVarTuples. This addresses #6906.",
    "head_branch": "issue6906",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved evaluation logic for tuple slices. It now works in cases where the tuple includes unbounded entries or unpacked TypeVarTuples. This addresses #6906. (#6913)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fceac254a19ac29056e",
    "number": 6912,
    "body": "…ionality was included in an early draft of PEP 646 but was dropped in the final spec. The functionality can still be used in pyright if `useExperimentalFeatures` is set to true, but it will likely be removed entirely in the future. This addresses #6892.",
    "head_branch": "issue6892",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/type_aliases.py:26:21 - error: Union requires two or more type arguments\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/type_aliases.py:26:21 - error: Union requires two or more type arguments (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/taint_sinks/_base.py:137:18 - error: Union requires two or more type arguments\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/taint_sinks/_base.py:137:18 - error: Union requires two or more type arguments (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Removed support for `Union[*Ts]` and `Union[*tuple[...]]`. This functionality was included in an early draft of PEP 646 but was dropped in the final spec. The functionality can still be used in pyright if `useExperimentalFeatures` is set to true, but it will likely be removed entirely in the future. This addresses #6892. (#6912)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fcfac254a19ac29056f",
    "number": 6911,
    "body": "…ypeVar is shadowed by an identifier of the same name within an inner scope. This addresses #6900.",
    "head_branch": "issue6900",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that resulted in incorrect type evaluation when a PEP-695 TypeVar is shadowed by an identifier of the same name within an inner scope. This addresses #6900. (#6911)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd0ac254a19ac290570",
    "number": 6910,
    "body": "…an illegal context. This addresses #6898.",
    "head_branch": "issue6898",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added code to report when the `Concatentate` special form is used in an illegal context. This addresses #6898. (#6910)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd1ac254a19ac290571",
    "number": 6909,
    "body": "…y-specialized class parameterized with a ParamSpec. This addresses #6899.",
    "head_branch": "issue6899",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to an incorrect type evaluation for an explicitly-specialized class parameterized with a ParamSpec. This addresses #6899. (#6909)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd2ac254a19ac290572",
    "number": 6889,
    "body": "Addresses https://github.com/microsoft/pyright/issues/6887.",
    "head_branch": "rchiodo/fix_config_send",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Potential fix for config options crash (#6889)\n\n* Potential fix for config options crash\r\n\r\n* Fix problem with json stringifying a map"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd3ac254a19ac290573",
    "number": 6884,
    "body": "Follow up to https://github.com/microsoft/pyright/pull/6790\n\nPyright cannot handle non file URIs, hence the original reason for the assert. However the old pre URI change Pyright would just silently fail on these files. This makes it more explicit.",
    "head_branch": "rchiodo/web_files",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Will this prevent us from calling `WebUri.getFilePath`? Just wondering if the assert should be added back.",
      "> Will this prevent us from calling `WebUri.getFilePath`? Just wondering if the assert should be added back.\r\n\r\nI'm not sure. I could also change isInZip to not call getFilePath for web uris, but I feel like if we want to maintain the old behavior, we should not assert. The old code would just silently fail for web uri stuff. "
    ],
    "commit_messages": [
      "Make sure web uris aren't read from disk (#6884)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd3ac254a19ac290574",
    "number": 6862,
    "body": null,
    "head_branch": "sortDiags",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Changed CLI to sort diagnostics by location within a file. (#6862)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd4ac254a19ac290575",
    "number": 6859,
    "body": "…aluation when a \"NoReturn\" call is made within a code block protected by an exception-suppressing context manager. This addresses #6850.",
    "head_branch": "issue6850",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug in code flow analysis that resulted in an incorrect type evaluation when a \"NoReturn\" call is made within a code block protected by an exception-suppressing context manager. This addresses #6850. (#6859)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd5ac254a19ac290576",
    "number": 6856,
    "body": "…eter types include unions that intersect. This addresses #6825.",
    "head_branch": "issue6825-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/frame.pyi:559:9 - error: Overload 1 for \"__getitem__\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/frame.pyi:1213:9 - error: Overload 4 for \"apply\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 3 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 4 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 6 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:69:9 - error: Overload 1 for \"__new__\" overlaps overload 3 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:80:9 - error: Overload 2 for \"__new__\" overlaps overload 4 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:69:9 - error: Overload 1 for \"__new__\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:80:9 - error: Overload 2 for \"__new__\" overlaps overload 6 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/interval.pyi:371:5 - error: Overload 7 for \"interval_range\" overlaps overload 10 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/interval.pyi:380:5 - error: Overload 8 for \"interval_range\" overlaps overload 11 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/interval.pyi:390:5 - error: Overload 9 for \"interval_range\" overlaps overload 12 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/reshape/tile.pyi:53:5 - error: Overload 3 for \"cut\" overlaps overload 7 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/reshape/tile.pyi:154:5 - error: Overload 10 for \"cut\" overlaps overload 12 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/reshape/tile.pyi:245:5 - error: Overload 5 for \"qcut\" overlaps overload 6 and returns an incompatible type (reportOverlappingOverload)\n- 1333 errors, 0 warnings, 0 informations \n+ 1344 errors, 0 warnings, 0 informations \n\n```",
      "@Dr-Irv and @twoertwein, just a heads up... This change better aligns pyright's overload overlap detection to mypy's algorithm. That means you're going to see some new errors from pyright that previously were only reported by mypy. If you have `reportOverlappingOverload` enabled in your tests, you'll probably want to add some `# pyright: ignore[reportOverlappingOverload]` as appropriate.",
      "> @Dr-Irv and @twoertwein, just a heads up... This change better aligns pyright's overload overlap detection to mypy's algorithm. That means you're going to see some new errors from pyright that previously were only reported by mypy. If you have `reportOverlappingOverload` enabled in your tests, you'll probably want to add some `# pyright: ignore[reportOverlappingOverload]` as appropriate.\r\n\r\nPlease ping when released.  Thanks.",
      "> @Dr-Irv and @twoertwein, just a heads up... This change better aligns pyright's overload overlap detection to mypy's algorithm. That means you're going to see some new errors from pyright that previously were only reported by mypy. If you have `reportOverlappingOverload` enabled in your tests, you'll probably want to add some `# pyright: ignore[reportOverlappingOverload]` as appropriate.\r\n\r\nAddressed in https://github.com/pandas-dev/pandas-stubs/pull/847"
    ],
    "commit_messages": [
      "Improved overload overlap logic to detect partial overlaps when parameter types include unions that intersect. This addresses #6825. (#6856)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd6ac254a19ac290577",
    "number": 6855,
    "body": "…eter types include unions that intersect. This addresses #6825.",
    "head_branch": "issue6825",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nmypy-protobuf (https://github.com/dropbox/mypy-protobuf)\n+ /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/test3_pb2.pyi\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/test3_pb2.pyi:201:9 - error: Overload 1 for \"WhichOneof\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/test3_pb2.pyi:201:9 - error: Overload 1 for \"WhichOneof\" overlaps overload 3 and returns an incompatible type (reportOverlappingOverload)\n- 21 errors, 24 warnings, 0 informations \n+ 23 errors, 24 warnings, 0 informations \n\npandas (https://github.com/pandas-dev/pandas)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/reshape/concat.py:73:5 - error: Overload 1 for \"concat\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n- 562 errors, 3 warnings, 0 informations \n+ 563 errors, 3 warnings, 0 informations \n\nbidict (https://github.com/jab/bidict)\n+   /tmp/mypy_primer/projects/bidict/bidict/_iter.py:23:5 - error: Overload 1 for \"iteritems\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n- 13 errors, 0 warnings, 0 informations \n+ 14 errors, 0 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_file_io.py:405:11 - error: Overload 4 for \"open_file\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/trio/src/trio/_path.py:294:15 - error: Overload 4 for \"open\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n- 3818 errors, 10 warnings, 0 informations \n+ 3820 errors, 10 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/frame.pyi:559:9 - error: Overload 1 for \"__getitem__\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/frame.pyi:1213:9 - error: Overload 4 for \"apply\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/resample.pyi:79:9 - error: Overload 3 for \"pipe\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:227:9 - error: Overload 1 for \"__new__\" overlaps overload 4 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:728:9 - error: Overload 1 for \"compare\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 3 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 4 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 6 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 7 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1183:9 - error: Overload 1 for \"astype\" overlaps overload 8 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:69:9 - error: Overload 1 for \"__new__\" overlaps overload 3 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:80:9 - error: Overload 2 for \"__new__\" overlaps overload 4 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:69:9 - error: Overload 1 for \"__new__\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:80:9 - error: Overload 2 for \"__new__\" overlaps overload 6 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:69:9 - error: Overload 1 for \"__new__\" overlaps overload 7 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:80:9 - error: Overload 2 for \"__new__\" overlaps overload 8 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:69:9 - error: Overload 1 for \"__new__\" overlaps overload 11 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:80:9 - error: Overload 2 for \"__new__\" overlaps overload 12 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/interval.pyi:371:5 - error: Overload 7 for \"interval_range\" overlaps overload 10 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/interval.pyi:380:5 - error: Overload 8 for \"interval_range\" overlaps overload 11 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/interval.pyi:390:5 - error: Overload 9 for \"interval_range\" overlaps overload 12 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/timedeltas.pyi:60:9 - error: Overload 1 for \"__truediv__\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/timedeltas.pyi:67:9 - error: Overload 1 for \"__floordiv__\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n+ /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/reshape/concat.pyi\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/reshape/concat.pyi:26:5 - error: Overload 1 for \"concat\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/reshape/tile.pyi:53:5 - error: Overload 3 for \"cut\" overlaps overload 7 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/reshape/tile.pyi:154:5 - error: Overload 10 for \"cut\" overlaps overload 12 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/reshape/tile.pyi:245:5 - error: Overload 5 for \"qcut\" overlaps overload 6 and returns an incompatible type (reportOverlappingOverload)\n- 1333 errors, 0 warnings, 0 informations \n+ 1356 errors, 0 warnings, 0 informations \n\n```",
      "Thanks for the fix, Eric! At first, I hesitated to create a new AssignTypeFlags, but during my last attempt to fix my PR, I ended up propagating a new AssignTypeFlags flag to also enable the partial overload overlap check."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd7ac254a19ac290578",
    "number": 6854,
    "body": "…tibility between two callables and the source has a position-only parameter corresponding to a non-position-only parameter in the dest. This addresses #6833.",
    "head_branch": "issue6833-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n+       Position-only parameter mismatch; parameter \"self\" is not position-only\n\ntrio (https://github.com/python-trio/trio)\n+ /tmp/mypy_primer/projects/trio/src/trio/_tests/type_tests/path.py\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/type_tests/path.py:141:33 - error: Cannot access member \"readlines\" for type \"AsyncIOWrapper[TextIOWrapper]\"\n+     Could not bind method \"readlines\" because \"AsyncIOWrapper[TextIOWrapper]\" is not assignable to parameter \"self\"\n+       \"AsyncIOWrapper[TextIOWrapper]\" is incompatible with \"AsyncIOWrapper[_CanReadLines[AnyStr@readlines]]\"\n+         Type parameter \"FileT_co@AsyncIOWrapper\" is covariant, but \"TextIOWrapper\" is not a subtype of \"_CanReadLines[AnyStr@readlines]\"\n+           \"TextIOWrapper\" is incompatible with protocol \"_CanReadLines[AnyStr@readlines]\"\n+             \"readlines\" is an incompatible type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/type_tests/path.py:141:23 - error: Type of \"readlines\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/type_tests/path.py:141:17 - error: \"assert_type\" mismatch: expected \"List[str]\" but received \"Unknown\" (reportGeneralTypeIssues)\n- 3815 errors, 10 warnings, 0 informations \n+ 3818 errors, 10 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that leads to a false negative when validating type compatibility between two callables and the source has a position-only parameter corresponding to a non-position-only parameter in the dest. This addresses #6833. (#6854)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd8ac254a19ac290579",
    "number": 6853,
    "body": "…tibility between two callables and the source has a position-only parameter corresponding to a non-position-only parameter in the dest. This addresses #6833.",
    "head_branch": "issue6833",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n+       Destination parameter \"self\" is not position-only\n\ntrio (https://github.com/python-trio/trio)\n+ /tmp/mypy_primer/projects/trio/src/trio/_tests/type_tests/path.py\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/type_tests/path.py:141:33 - error: Cannot access member \"readlines\" for type \"AsyncIOWrapper[TextIOWrapper]\"\n+     Could not bind method \"readlines\" because \"AsyncIOWrapper[TextIOWrapper]\" is not assignable to parameter \"self\"\n+       \"AsyncIOWrapper[TextIOWrapper]\" is incompatible with \"AsyncIOWrapper[_CanReadLines[AnyStr@readlines]]\"\n+         Type parameter \"FileT_co@AsyncIOWrapper\" is covariant, but \"TextIOWrapper\" is not a subtype of \"_CanReadLines[AnyStr@readlines]\"\n+           \"TextIOWrapper\" is incompatible with protocol \"_CanReadLines[AnyStr@readlines]\"\n+             \"readlines\" is an incompatible type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/type_tests/path.py:141:23 - error: Type of \"readlines\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/type_tests/path.py:141:17 - error: \"assert_type\" mismatch: expected \"List[str]\" but received \"Unknown\" (reportGeneralTypeIssues)\n- 3815 errors, 10 warnings, 0 informations \n+ 3818 errors, 10 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fd9ac254a19ac29057a",
    "number": 6848,
    "body": "…overlapping unions. This addresses #6825",
    "head_branch": "fix_union_overlap",
    "is_a_fork": true,
    "comments": [
      "This is currently breaking overlapping overload detection of overloads that return the same type. Will look into it later.",
      "I appreciate your attempt to help with PRs, but it's much faster for me to fix issues myself rather than try to understand and validate fixes submitted by other people.\r\n\r\nThis particular change isn't the correct fix for the bug you reported, so I'm going to close it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fdaac254a19ac29057b",
    "number": 6847,
    "body": "…specializing a generic class or type alias with a ParamSpec. This addresses #6826.",
    "head_branch": "issue6826",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to an incorrect type evaluation when explicitly specializing a generic class or type alias with a ParamSpec. This addresses #6826. (#6847)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fdbac254a19ac29057c",
    "number": 6846,
    "body": "…verlapping unions\r\n\r\nThis is a tentative fix of the specific case of #6845 regarding detection of overlapping unions. Further improvements on detection of overlapping unions are tracked by #6825",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "I appreciate your attempt to help with PRs, but it's much faster for me to fix issues myself rather than try to understand and validate fixes submitted by other people.\r\n\r\nThis particular change isn't the correct fix for the bug you reported, so I'm going to close it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fdcac254a19ac29057d",
    "number": 6842,
    "body": "…aditional) type aliases. This addresses #6827.",
    "head_branch": "issue6827",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/ops/model.py\n+   /tmp/mypy_primer/projects/operator/ops/model.py:290:25 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:300:18 - error: Type of \"_weakrefs\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:300:18 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:300:9 - error: Type of \"entity\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:302:20 - error: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:305:9 - error: Type of \"_weakrefs\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:297:9 - error: Return type, \"Unknown | Application | Unit\", is partially unknown (reportUnknownParameterType)\n+ /tmp/mypy_primer/projects/operator/test/test_framework.py\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1126:38 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1136:26 - error: Type of \"update\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1142:26 - error: Type of \"update\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1148:26 - error: Type of \"update\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1154:26 - error: Type of \"pop\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1160:26 - error: Type of \"add\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1166:26 - error: Type of \"discard\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1178:26 - error: Type of \"append\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1184:26 - error: Type of \"append\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1187:39 - error: Argument type is unknown\n+     Argument corresponds to parameter \"obj\" in function \"assertIsInstance\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1193:26 - error: Type of \"insert\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1199:26 - error: Type of \"insert\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1202:39 - error: Argument type is unknown\n+     Argument corresponds to parameter \"obj\" in function \"assertIsInstance\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1209:26 - error: Type of \"__setitem__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1212:39 - error: Argument type is unknown\n+     Argument corresponds to parameter \"obj\" in function \"assertIsInstance\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1218:26 - error: Type of \"pop\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1224:26 - error: Type of \"remove\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1230:26 - error: Type of \"append\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1236:26 - error: Type of \"pop\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1242:26 - error: Type of \"insert\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1248:26 - error: Type of \"remove\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1260:26 - error: Type of \"add\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1266:26 - error: Type of \"discard\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1273:55 - error: Type of \"add\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1273:55 - error: Argument type is unknown\n+     Argument corresponds to parameter \"callable\" in function \"assertRaises\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1126:9 - error: Type of \"test_operations\" is partially unknown\n+     Type of \"test_operations\" is \"list[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1127:21 - error: Return type of lambda, \"dict[Unknown, Unknown]\", is partially unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1130:20 - error: Type of parameter \"a\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1130:23 - error: Type of parameter \"b\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1131:20 - error: Type of parameter \"res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1131:25 - error: Type of parameter \"expected_res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1133:21 - error: Return type of lambda, \"dict[Unknown, Unknown]\", is partially unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1136:20 - error: Type of parameter \"a\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1136:23 - error: Type of parameter \"b\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1136:26 - error: Return type of lambda is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1137:20 - error: Type of parameter \"res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1137:25 - error: Type of parameter \"expected_res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1139:21 - error: Return type of lambda, \"dict[str, dict[Unknown, Unknown]]\", is partially unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1142:20 - error: Type of parameter \"a\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1142:23 - error: Type of parameter \"b\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1142:26 - error: Return type of lambda is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1143:20 - error: Type of parameter \"res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1143:25 - error: Type of parameter \"expected_res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1148:20 - error: Type of parameter \"a\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1148:23 - error: Type of parameter \"b\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1148:26 - error: Return type of lambda is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1149:20 - error: Type of parameter \"res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1149:25 - error: Type of parameter \"expected_res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1154:20 - error: Type of parameter \"a\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1154:23 - error: Type of parameter \"b\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1154:26 - error: Return type of lambda is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1155:20 - error: Type of parameter \"res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1155:25 - error: Type of parameter \"expected_res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1160:20 - error: Type of parameter \"a\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1160:23 - error: Type of parameter \"b\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1160:26 - error: Return type of lambda is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1161:20 - error: Type of parameter \"res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1161:25 - error: Type of parameter \"expected_res\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1166:20 - error: Type of parameter \"a\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1166:23 - error: Type of parameter \"b\" is unknown (reportUnknownLambdaType)\n+   /tmp/mypy_primer/projects/operator/test/test_framework.py:1166:26 - error: Return type of lambda is unknown (reportUnknownLambdaType)\n\n... (truncated 205 lines) ...\n\n```"
    ],
    "commit_messages": [
      "Improved detection of invalid type alias expressions for implicit (traditional) type aliases. This addresses #6827. (#6842)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fddac254a19ac29057e",
    "number": 6841,
    "body": "…6830, #6829 and #6828.",
    "head_branch": "issue6830",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added additional checks for invalid `NewType` calls. This addresses #6830, #6829 and #6828. (#6841)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fdeac254a19ac29057f",
    "number": 6840,
    "body": null,
    "head_branch": "issue6832",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added LSP exemption for `__post_init__` method. (#6840)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fdeac254a19ac290580",
    "number": 6839,
    "body": "…ss valid attributes from a type alias created via a call to the `TypeAliasType` constructor. This addresses #6834.",
    "head_branch": "issue6834",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false negative when attempting to access valid attributes from a type alias created via a call to the `TypeAliasType` constructor. This addresses #6834. (#6839)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fdfac254a19ac290581",
    "number": 6838,
    "body": "…e` statement or a call to `TypeAliasType` is a valid type expression. This addresses #6836 and #6831.",
    "head_branch": "issue6836",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved logic that determines whether the expression used for a `type` statement or a call to `TypeAliasType` is a valid type expression. This addresses #6836 and #6831. (#6838)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe0ac254a19ac290582",
    "number": 6808,
    "body": "… a class definition statement. PEP 637 explicitly rejects this usage of `Self`. This addresses #6805.\r\n\r\nFixed a bug that leads to a false negative when `Self` is used within a metaclass. PEP 637 explicitly rejects this usage of `Self`. This addresses #6806.",
    "head_branch": "issue6806",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/enums.py\n+   /tmp/mypy_primer/projects/discord.py/discord/enums.py:107:113 - error: \"Self\" cannot be used within a metaclass (a subclass of \"type\") (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cog.py:172:52 - error: \"Self\" cannot be used within a metaclass (a subclass of \"type\") (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/flags.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/flags.py:283:10 - error: \"Self\" cannot be used within a metaclass (a subclass of \"type\") (reportGeneralTypeIssues)\n- 64 errors, 13 warnings, 0 informations \n+ 67 errors, 13 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:118:23 - error: \"Self\" cannot be used within a metaclass (a subclass of \"type\") (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:124:14 - warning: Unnecessary \"# type: ignore\" comment\n- 8378 errors, 24 warnings, 0 informations \n+ 8379 errors, 25 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that leads to a false negative when `Self` is used within a class definition statement. PEP 637 explicitly rejects this usage of `Self`. This addresses #6805. (#6808)\n\nFixed a bug that leads to a false negative when `Self` is used within a metaclass. PEP 637 explicitly rejects this usage of `Self`. This addresses #6806."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe1ac254a19ac290583",
    "number": 6804,
    "body": "…tors within a type annotation. This addresses #6800.",
    "head_branch": "issue6800-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Add error checking for illegal use of unary, binary, or ternary operators within a type annotation. This addresses #6800. (#6804)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe2ac254a19ac290584",
    "number": 6803,
    "body": "…tors within a type annotation. This addresses #6800.",
    "head_branch": "issue6800-1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandas (https://github.com/pandas-dev/pandas)\n+   /tmp/mypy_primer/projects/pandas/pandas/_libs/tslibs/nattype.pyi:33:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/algorithms.py:1253:6 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/base.py:1339:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/nanops.py:653:13 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/nanops.py:653:13 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/nanops.py:657:6 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/nanops.py:657:6 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/nanops.py:1463:6 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/sample.py:122:19 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/series.py:3252:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/array_algos/masked_accumulations.py:42:17 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/_mixins.py:246:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/base.py:1262:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/boolean.py:103:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:257:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:257:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:716:32 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:716:32 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:716:32 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/masked.py:985:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/numeric.py:63:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/period.py:804:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/string_.py:209:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/string_.py:558:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/string_arrow.py:158:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:261:32 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:422:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:362:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:362:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:109:50 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:120:15 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:120:15 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:121:16 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:121:16 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:1169:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:2056:17 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/sparse/array.py:1146:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/computation/pytables.py:237:21 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/dtypes/dtypes.py:892:37 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/dtypes/dtypes.py:1128:37 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/dtypes/dtypes.py:1381:37 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/dtypes/dtypes.py:2340:37 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/indexes/multi.py:2919:18 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/internals/construction.py:162:11 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/io/orc.py:45:17 - error: Binary operator not allowed in type annotation\n- 561 errors, 3 warnings, 0 informations \n+ 606 errors, 3 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/functional_validators.py:71:11 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/functional_validators.py:115:11 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/functional_validators.py:153:11 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/functional_validators.py:203:11 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1751:23 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1751:23 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:863:42 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1439:16 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1439:16 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py:82:5 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py:82:5 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py:82:5 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py:276:23 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py:285:23 - error: Binary operator not allowed in type annotation\n- 60 errors, 0 warnings, 0 informations \n+ 74 errors, 0 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/typing.py:67:25 - error: Binary operator not allowed in type annotation\n- 55 errors, 145 warnings, 0 informations \n+ 56 errors, 145 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_run.py:1542:25 - error: Binary operator not allowed in type annotation\n- 3817 errors, 10 warnings, 0 informations \n+ 3818 errors, 10 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/nattype.pyi:30:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:240:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:267:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:298:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:342:22 - error: Binary operator not allowed in type annotation\n- 1329 errors, 0 warnings, 0 informations \n+ 1334 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe3ac254a19ac290585",
    "number": 6801,
    "body": null,
    "head_branch": "issue6800",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/functional_validators.py:71:11 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/functional_validators.py:115:11 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/functional_validators.py:153:11 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/functional_validators.py:203:11 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1751:23 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1751:23 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:863:42 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1439:16 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1439:16 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py:82:5 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py:82:5 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py:82:5 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py:276:23 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py:285:23 - error: Binary operator not allowed in type annotation\n- 60 errors, 0 warnings, 0 informations \n+ 74 errors, 0 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/typing.py:67:25 - error: Binary operator not allowed in type annotation\n- 55 errors, 145 warnings, 0 informations \n+ 56 errors, 145 warnings, 0 informations \n\npandas (https://github.com/pandas-dev/pandas)\n+   /tmp/mypy_primer/projects/pandas/pandas/_libs/tslibs/nattype.pyi:33:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/algorithms.py:1253:6 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/base.py:1339:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/nanops.py:653:13 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/nanops.py:653:13 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/nanops.py:657:6 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/nanops.py:657:6 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/nanops.py:1463:6 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/sample.py:122:19 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/series.py:3252:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/array_algos/masked_accumulations.py:42:17 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/_mixins.py:246:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/base.py:1262:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/boolean.py:103:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:257:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:257:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:716:32 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:716:32 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:716:32 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/masked.py:985:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/numeric.py:63:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/period.py:804:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/string_.py:209:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/string_.py:558:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/string_arrow.py:158:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:261:32 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:422:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:362:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:362:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:109:50 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:120:15 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:120:15 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:121:16 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:121:16 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:1169:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/arrow/array.py:2056:17 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/sparse/array.py:1146:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/computation/pytables.py:237:21 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/dtypes/dtypes.py:892:37 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/dtypes/dtypes.py:1128:37 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/dtypes/dtypes.py:1381:37 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/dtypes/dtypes.py:2340:37 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/indexes/multi.py:2919:18 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/core/internals/construction.py:162:11 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas/pandas/io/orc.py:45:17 - error: Binary operator not allowed in type annotation\n- 561 errors, 3 warnings, 0 informations \n+ 606 errors, 3 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_run.py:1542:25 - error: Binary operator not allowed in type annotation\n- 3817 errors, 10 warnings, 0 informations \n+ 3818 errors, 10 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/nattype.pyi:30:10 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:240:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:267:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:298:22 - error: Binary operator not allowed in type annotation\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:342:22 - error: Binary operator not allowed in type annotation\n- 1329 errors, 0 warnings, 0 informations \n+ 1334 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe4ac254a19ac290586",
    "number": 6797,
    "body": "…se positive under certain circumstances involving a ParamSpec in an overload with a callback that includes a positional-only parameter separator. This addresses #6796.",
    "head_branch": "issue6796",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in the function type assignment logic that leads to a false positive under certain circumstances involving a ParamSpec in an overload with a callback that includes a positional-only parameter separator. This addresses #6796. (#6797)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe5ac254a19ac290587",
    "number": 6793,
    "body": "…thin a loop under certain conditions. This addresses #6764.",
    "head_branch": "issue6764-5",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that resulted in incorrect type evaluation of a variable within a loop under certain conditions. This addresses #6764. (#6793)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe6ac254a19ac290588",
    "number": 6790,
    "body": "Addresses #6787 \r\n\r\n`WebUri.getFilePath` currently asserts, but it is called in [a number of scenarios](https://github.com/microsoft/pyright/issues/6787#issuecomment-1866880452). This change works around the problem by returning an empty string from `WebUri.getFilePath` (rather than asserting) just as `EmptyUri` does.\r\n\r\nI think this is just a stop-gap solution. I'm guessing that @rchiodo was not expecting to see virtual file system URIs in Pyright. Rich should take a look when he gets back from vacation and see if we need to do something bigger to address virtual file system usage in Pyright. He's in the middle of merging the URI refactoring into Pylance. There may be some virtual file system work he was planning to do there that needs to come over to Pyright.",
    "head_branch": "6787",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Return invalid path from getFilePath rather than asserting (#6790)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe7ac254a19ac290589",
    "number": 6786,
    "body": "…of a symbol that doesn't have a declared type. When evaluated in the context of a particular usage, it's unnecessary to evaluate any assignments within the same execution scope.",
    "head_branch": "issue6764-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1199:18 - error: Argument of type \"dict[str, dict[str, dict[str, None] | None] | None] | None\" cannot be assigned to parameter \"data\" of type \"YamlConfigDict\" in function \"validate\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1199:18 - error: Argument of type \"dict[str, dict[str, None] | None] | None\" cannot be assigned to parameter \"data\" of type \"YamlConfigDict\" in function \"validate\"\n-     Type \"dict[str, dict[str, dict[str, None] | None] | None] | None\" cannot be assigned to type \"YamlConfigDict\"\n+     Type \"dict[str, dict[str, None] | None] | None\" cannot be assigned to type \"YamlConfigDict\"\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:42:31 - error: Type of \"receive\" could not be determined because it refers to itself (reportGeneralTypeIssues)\n- 12294 errors, 487 warnings, 0 informations \n+ 12293 errors, 487 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_exports.py:382:50 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"args\" in function \"__call__\"\n+     Argument type is \"Any | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_exports.py:388:38 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"args\" in function \"__call__\"\n+     Argument type is \"str | Any | Unknown\" (reportUnknownArgumentType)\n- 3931 errors, 10 warnings, 0 informations \n+ 3933 errors, 10 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:779:31 - error: Cannot access member \"parent\" for type \"GroupMixin[Any]\"\n+     Member \"parent\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:797:31 - error: Cannot access member \"parent\" for type \"GroupMixin[Any]\"\n+     Member \"parent\" is unknown (reportGeneralTypeIssues)\n- 62 errors, 13 warnings, 0 informations \n+ 64 errors, 13 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:211:61 - error: Type argument for \"Generic\" must be a type variable\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:424:25 - error: Argument of type \"ClanMessage[PartialMember | ClanMember]* | GroupMessage[PartialMember | GroupMember]*\" cannot be assigned to parameter \"message\" of type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\" in function \"__init__\"\n+     Type \"ClanMessage[PartialMember | ClanMember]* | GroupMessage[PartialMember | GroupMember]*\" cannot be assigned to type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+       \"ClanMessage[PartialMember | ClanMember]*\" is incompatible with \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+         Type parameter \"ChannelT@Message\" is covariant, but \"ClanMember\" is not a subtype of \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\"\n+           \"ClanMember\" is incompatible with \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:596:16 - error: Expression of type \"MemberT@ChatGroup\" cannot be assigned to return type \"MemberT@ChatGroup\"\n-     Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:669:16 - error: Expression of type \"list[MemberT@ChatGroup]\" cannot be assigned to return type \"Sequence[MemberT@ChatGroup]\"\n-     \"list[MemberT@ChatGroup]\" is incompatible with \"Sequence[MemberT@ChatGroup]\"\n-       Type parameter \"_T_co@Sequence\" is covariant, but \"MemberT@ChatGroup\" is not a subtype of \"MemberT@ChatGroup\"\n-         Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:679:16 - error: Expression of type \"MemberT@ChatGroup | None\" cannot be assigned to return type \"MemberT@ChatGroup | None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:733:16 - error: Expression of type \"MemberT@ChatGroup\" cannot be assigned to return type \"MemberT@ChatGroup\"\n-     Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:803:20 - error: Expression of type \"list[MemberT@ChatGroup]\" cannot be assigned to return type \"Sequence[MemberT@ChatGroup]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:805:16 - error: Expression of type \"list[MemberT@ChatGroup]\" cannot be assigned to return type \"Sequence[MemberT@ChatGroup]\"\n-     \"list[MemberT@ChatGroup]\" is incompatible with \"Sequence[MemberT@ChatGroup]\"\n-       Type parameter \"_T_co@Sequence\" is covariant, but \"MemberT@ChatGroup\" is not a subtype of \"MemberT@ChatGroup\"\n-         Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:87:68 - error: Too many type arguments provided for \"ChatMessage\"; expected 2 but received 3 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:104:65 - error: Too many type arguments provided for \"ChatMessage\"; expected 2 but received 3 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:96:33 - error: Argument of type \"GroupChannel\" cannot be assigned to parameter \"channel\" of type \"GroupMember\" in function \"__init__\"\n+     \"GroupChannel\" is incompatible with \"GroupMember\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:113:33 - error: Argument of type \"ClanChannel\" cannot be assigned to parameter \"channel\" of type \"ClanMember\" in function \"__init__\"\n+     \"ClanChannel\" is incompatible with \"ClanMember\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1480:31 - error: Argument of type \"ClanMessage[GroupMember | PartialMember | ClanMember] | GroupMessage[PartialMember | GroupMember]\" cannot be assigned to parameter \"__x\" of type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\" in function \"append\"\n+     Type \"ClanMessage[GroupMember | PartialMember | ClanMember] | GroupMessage[PartialMember | GroupMember]\" cannot be assigned to type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+       \"ClanMessage[GroupMember | PartialMember | ClanMember]\" is incompatible with \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+         Type parameter \"ChannelT@Message\" is covariant, but \"ClanMember\" is not a subtype of \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\"\n+           \"ClanMember\" is incompatible with \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1519:31 - error: Argument of type \"ClanMessage[GroupMember | ClanMember] | GroupMessage[PartialMember | GroupMember]\" cannot be assigned to parameter \"__x\" of type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\" in function \"append\"\n+     Type \"ClanMessage[GroupMember | ClanMember] | GroupMessage[PartialMember | GroupMember]\" cannot be assigned to type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+       \"ClanMessage[GroupMember | ClanMember]\" is incompatible with \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+         Type parameter \"ChannelT@Message\" is covariant, but \"ClanMember\" is not a subtype of \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\"\n+           \"ClanMember\" is incompatible with \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/mocks.py:69:7 - error: Base classes of MockClanMessage are mutually incompatible\n+     Base class \"ClanMessage[PartialMember | ClanMember]\" derives from \"Message[PartialMember | ClanMember, ClanMember]\" which is incompatible with type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/mocks.py:73:7 - error: Base classes of MockGroupMessage are mutually incompatible\n+     Base class \"GroupMessage[PartialMember | GroupMember]\" derives from \"Message[PartialMember | GroupMember, GroupMember]\" which is incompatible with type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\" (reportGeneralTypeIssues)\n- 8393 errors, 23 warnings, 0 informations \n+ 8397 errors, 23 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Eliminated some unnecessary work when determining the effective type of a symbol that doesn't have a declared type. When evaluated in the context of a particular usage, it's unnecessary to evaluate any assignments within the same execution scope. (#6786)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe8ac254a19ac29058a",
    "number": 6785,
    "body": "…of a symbol that doesn't have a declared type. When evaluated in the context of a particular usage, it's unnecessary to evaluate any assignments within the same execution scope.",
    "head_branch": "issue6764-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1199:18 - error: Argument of type \"dict[str, dict[str, dict[str, None] | None] | None] | None\" cannot be assigned to parameter \"data\" of type \"YamlConfigDict\" in function \"validate\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1199:18 - error: Argument of type \"dict[str, dict[str, None] | None] | None\" cannot be assigned to parameter \"data\" of type \"YamlConfigDict\" in function \"validate\"\n-     Type \"dict[str, dict[str, dict[str, None] | None] | None] | None\" cannot be assigned to type \"YamlConfigDict\"\n+     Type \"dict[str, dict[str, None] | None] | None\" cannot be assigned to type \"YamlConfigDict\"\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:42:31 - error: Type of \"receive\" could not be determined because it refers to itself (reportGeneralTypeIssues)\n- 12294 errors, 487 warnings, 0 informations \n+ 12293 errors, 487 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:15:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_hypotheses.py:37:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n- 1314 errors, 10 warnings, 0 informations \n+ 1312 errors, 10 warnings, 0 informations \n\nalectryon (https://github.com/cpitclaudel/alectryon)\n- /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py\n-   /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py:225:28 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n- 22 errors, 37 warnings, 0 informations \n+ 21 errors, 37 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:211:61 - error: Type argument for \"Generic\" must be a type variable\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:424:25 - error: Argument of type \"ClanMessage[PartialMember | ClanMember]* | GroupMessage[PartialMember | GroupMember]*\" cannot be assigned to parameter \"message\" of type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\" in function \"__init__\"\n+     Type \"ClanMessage[PartialMember | ClanMember]* | GroupMessage[PartialMember | GroupMember]*\" cannot be assigned to type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+       \"ClanMessage[PartialMember | ClanMember]*\" is incompatible with \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+         Type parameter \"ChannelT@Message\" is covariant, but \"ClanMember\" is not a subtype of \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\"\n+           \"ClanMember\" is incompatible with \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:596:16 - error: Expression of type \"MemberT@ChatGroup\" cannot be assigned to return type \"MemberT@ChatGroup\"\n-     Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:669:16 - error: Expression of type \"list[MemberT@ChatGroup]\" cannot be assigned to return type \"Sequence[MemberT@ChatGroup]\"\n-     \"list[MemberT@ChatGroup]\" is incompatible with \"Sequence[MemberT@ChatGroup]\"\n-       Type parameter \"_T_co@Sequence\" is covariant, but \"MemberT@ChatGroup\" is not a subtype of \"MemberT@ChatGroup\"\n-         Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:679:16 - error: Expression of type \"MemberT@ChatGroup | None\" cannot be assigned to return type \"MemberT@ChatGroup | None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:733:16 - error: Expression of type \"MemberT@ChatGroup\" cannot be assigned to return type \"MemberT@ChatGroup\"\n-     Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:803:20 - error: Expression of type \"list[MemberT@ChatGroup]\" cannot be assigned to return type \"Sequence[MemberT@ChatGroup]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:805:16 - error: Expression of type \"list[MemberT@ChatGroup]\" cannot be assigned to return type \"Sequence[MemberT@ChatGroup]\"\n-     \"list[MemberT@ChatGroup]\" is incompatible with \"Sequence[MemberT@ChatGroup]\"\n-       Type parameter \"_T_co@Sequence\" is covariant, but \"MemberT@ChatGroup\" is not a subtype of \"MemberT@ChatGroup\"\n-         Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:87:68 - error: Too many type arguments provided for \"ChatMessage\"; expected 2 but received 3 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:104:65 - error: Too many type arguments provided for \"ChatMessage\"; expected 2 but received 3 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:96:33 - error: Argument of type \"GroupChannel\" cannot be assigned to parameter \"channel\" of type \"GroupMember\" in function \"__init__\"\n+     \"GroupChannel\" is incompatible with \"GroupMember\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:113:33 - error: Argument of type \"ClanChannel\" cannot be assigned to parameter \"channel\" of type \"ClanMember\" in function \"__init__\"\n+     \"ClanChannel\" is incompatible with \"ClanMember\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1480:31 - error: Argument of type \"ClanMessage[GroupMember | PartialMember | ClanMember] | GroupMessage[PartialMember | GroupMember]\" cannot be assigned to parameter \"__x\" of type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\" in function \"append\"\n+     Type \"ClanMessage[GroupMember | PartialMember | ClanMember] | GroupMessage[PartialMember | GroupMember]\" cannot be assigned to type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+       \"ClanMessage[GroupMember | PartialMember | ClanMember]\" is incompatible with \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+         Type parameter \"ChannelT@Message\" is covariant, but \"ClanMember\" is not a subtype of \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\"\n+           \"ClanMember\" is incompatible with \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1519:31 - error: Argument of type \"ClanMessage[GroupMember | ClanMember] | GroupMessage[PartialMember | GroupMember]\" cannot be assigned to parameter \"__x\" of type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\" in function \"append\"\n+     Type \"ClanMessage[GroupMember | ClanMember] | GroupMessage[PartialMember | GroupMember]\" cannot be assigned to type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+       \"ClanMessage[GroupMember | ClanMember]\" is incompatible with \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\"\n+         Type parameter \"ChannelT@Message\" is covariant, but \"ClanMember\" is not a subtype of \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\"\n+           \"ClanMember\" is incompatible with \"Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/mocks.py:69:7 - error: Base classes of MockClanMessage are mutually incompatible\n+     Base class \"ClanMessage[PartialMember | ClanMember]\" derives from \"Message[PartialMember | ClanMember, ClanMember]\" which is incompatible with type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/mocks.py:73:7 - error: Base classes of MockGroupMessage are mutually incompatible\n+     Base class \"GroupMessage[PartialMember | GroupMember]\" derives from \"Message[PartialMember | GroupMember, GroupMember]\" which is incompatible with type \"Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]]\" (reportGeneralTypeIssues)\n- 8393 errors, 23 warnings, 0 informations \n+ 8397 errors, 23 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:779:31 - error: Cannot access member \"parent\" for type \"GroupMixin[Any]\"\n+     Member \"parent\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:797:31 - error: Cannot access member \"parent\" for type \"GroupMixin[Any]\"\n+     Member \"parent\" is unknown (reportGeneralTypeIssues)\n- 62 errors, 13 warnings, 0 informations \n+ 64 errors, 13 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_exports.py:382:50 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"args\" in function \"__call__\"\n+     Argument type is \"Any | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_exports.py:388:38 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"args\" in function \"__call__\"\n+     Argument type is \"str | Any | Unknown\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:171:41 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:171:41 - error: \"Handle\" is possibly unbound (reportUnboundVariable)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:171:33 - error: Type of parameter \"handle\" is unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:171:33 - error: \"handle\" is possibly unbound (reportUnboundVariable)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:173:27 - error: Argument type is unknown\n-     Argument corresponds to parameter \"handle\" in function \"SetEvent\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:173:27 - error: \"handle\" is possibly unbound (reportUnboundVariable)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:182:28 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"async_fn\" in function \"start_soon\"\n-     Argument type is \"(handle: Unknown) -> Coroutine[Any, Any, None]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/trio/src/trio/_tests/test_wait_for_object.py:197:28 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"async_fn\" in function \"start_soon\"\n-     Argument type is \"(handle: Unknown) -> Coroutine[Any, Any, None]\" (reportUnknownArgumentType)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe8ac254a19ac29058b",
    "number": 6784,
    "body": "…n be captured by a ParamSpec from 64 to 1024. This addresses #6781.",
    "head_branch": "issue6781",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Increased internal limit of the number of overload signatures that can be captured by a ParamSpec from 64 to 1024. This addresses #6781. (#6784)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fe9ac254a19ac29058c",
    "number": 6778,
    "body": "…ching with a method that uses `Self` in its signature. This addresses #6760.",
    "head_branch": "issue6770-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:225:23 - error: Cannot access member \"_pydantic_validate\" for type \"type[ArraySchema]\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:225:23 - error: Cannot access member \"_pydantic_validate\" for type \"type[ArraySchema]*\"\n-     Could not bind method \"_pydantic_validate\" because \"type[ArraySchema]\" is not assignable to parameter \"cls\"\n+     Could not bind method \"_pydantic_validate\" because \"type[ArraySchema]*\" is not assignable to parameter \"cls\"\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:147:19 - error: Cannot access member \"_pydantic_validate\" for type \"type[ColumnSchema]\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:147:19 - error: Cannot access member \"_pydantic_validate\" for type \"type[ColumnSchema]*\"\n-     Could not bind method \"_pydantic_validate\" because \"type[ColumnSchema]\" is not assignable to parameter \"cls\"\n+     Could not bind method \"_pydantic_validate\" because \"type[ColumnSchema]*\" is not assignable to parameter \"cls\"\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:342:37 - error: Cannot access member \"color\" for type \"ColorStream\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:342:37 - error: Cannot access member \"color\" for type \"ColorStream*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py:631:18 - error: Cannot access member \"name\" for type \"Compiler\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py:631:18 - error: Cannot access member \"name\" for type \"Compiler*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:843:55 - error: Cannot access member \"_record_fields\" for type \"Database\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:843:55 - error: Cannot access member \"_record_fields\" for type \"Database*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:787:49 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:787:49 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:787:64 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:787:64 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:790:21 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:790:21 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:790:36 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:790:36 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:25 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:25 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:40 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:40 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:52 - error: Cannot access member \"branch\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:52 - error: Cannot access member \"branch\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:802:17 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:802:17 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:803:49 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:803:49 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:804:19 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:804:19 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:805:46 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:805:46 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:806:19 - error: Cannot access member \"branch\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:806:19 - error: Cannot access member \"branch\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:807:49 - error: Cannot access member \"branch\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:807:49 - error: Cannot access member \"branch\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:32 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:32 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:52 - error: Cannot access member \"branch\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:52 - error: Cannot access member \"branch\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:69 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:69 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:919:49 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:919:49 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1245:49 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1245:49 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1248:21 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1248:21 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1251:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1251:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1253:62 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1253:62 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1263:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1263:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1264:49 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1264:49 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1272:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1272:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1273:37 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1273:37 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1293:21 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1293:21 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1294:37 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1294:37 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:291:37 - error: Cannot access member \"namespace\" for type \"DetectablePackageMeta\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:291:37 - error: Cannot access member \"namespace\" for type \"DetectablePackageMeta*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:291:59 - error: Cannot access member \"name\" for type \"DetectablePackageMeta\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:291:59 - error: Cannot access member \"name\" for type \"DetectablePackageMeta*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:304:52 - error: Cannot access member \"name\" for type \"DetectablePackageMeta\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:304:52 - error: Cannot access member \"name\" for type \"DetectablePackageMeta*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:304:62 - error: Cannot access member \"namespace\" for type \"DetectablePackageMeta\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:304:62 - error: Cannot access member \"namespace\" for type \"DetectablePackageMeta*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:385:21 - error: Cannot access member \"spec\" for type \"PackageViewMixin\"\n\n... (truncated 77 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/setup.py:147:31 - error: Cannot access member \"get_package_name\" for type \"type[LibraryDownload]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/setup.py:147:31 - error: Cannot access member \"get_package_name\" for type \"type[LibraryDownload]*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/setup.py:196:20 - error: Cannot access member \"get_package_name\" for type \"type[LibraryDownload]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/setup.py:196:20 - error: Cannot access member \"get_package_name\" for type \"type[LibraryDownload]*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/wsgi/wsgi.py:103:29 - error: Cannot access member \"_request_call_name\" for type \"_DDWSGIMiddlewareBase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/wsgi/wsgi.py:103:29 - error: Cannot access member \"_request_call_name\" for type \"_DDWSGIMiddlewareBase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_probe/model.py:80:45 - error: Cannot access member \"__attrs_attrs__\" for type \"Probe\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_probe/model.py:80:45 - error: Cannot access member \"__attrs_attrs__\" for type \"Probe*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/compat.py:327:22 - error: Cannot access member \"_warn\" for type \"TemporaryDirectory\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/compat.py:327:22 - error: Cannot access member \"_warn\" for type \"TemporaryDirectory*\"\n-     Could not bind method \"warn\" because \"TemporaryDirectory\" is not assignable to parameter \"message\"\n+     Could not bind method \"warn\" because \"TemporaryDirectory*\" is not assignable to parameter \"message\"\n-     Could not bind method \"warn\" because \"TemporaryDirectory\" is not assignable to parameter \"message\"\n+     Could not bind method \"warn\" because \"TemporaryDirectory*\" is not assignable to parameter \"message\"\n-       \"TemporaryDirectory\" is incompatible with \"str\"\n+       \"TemporaryDirectory*\" is incompatible with \"str\"\n-       \"TemporaryDirectory\" is incompatible with \"Warning\" (reportGeneralTypeIssues)\n+       \"TemporaryDirectory*\" is incompatible with \"Warning\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/runtime/runtime_metrics.py:30:41 - error: Cannot access member \"ENABLED\" for type \"RuntimeCollectorsIterable\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/runtime/runtime_metrics.py:30:41 - error: Cannot access member \"ENABLED\" for type \"RuntimeCollectorsIterable*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/runtime/runtime_metrics.py:32:47 - error: Cannot access member \"COLLECTORS\" for type \"RuntimeCollectorsIterable\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/runtime/runtime_metrics.py:32:47 - error: Cannot access member \"COLLECTORS\" for type \"RuntimeCollectorsIterable*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:45:26 - error: Cannot access member \"_key\" for type \"_BaseVersion\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:45:26 - error: Cannot access member \"_key\" for type \"_BaseVersion*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:69:28 - error: Cannot access member \"_key\" for type \"_BaseVersion\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:69:28 - error: Cannot access member \"_key\" for type \"_BaseVersion*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:34:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:34:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:38:14 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:38:14 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:42:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:42:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:46:14 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:46:14 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:53:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:53:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:62:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:62:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:27:21 - error: Cannot access member \"repr\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:27:21 - error: Cannot access member \"repr\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:51:21 - error: Cannot access member \"extend\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:51:21 - error: Cannot access member \"extend\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:57:21 - error: Cannot access member \"decode\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:57:21 - error: Cannot access member \"decode\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:60:21 - error: Cannot access member \"str\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:60:21 - error: Cannot access member \"str\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:63:21 - error: Cannot access member \"bytes\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:63:21 - error: Cannot access member \"bytes\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:66:21 - error: Cannot access member \"bytearray\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:66:21 - error: Cannot access member \"bytearray\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:13:29 - error: Cannot access member \"client\" for type \"FalconTestMixin\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:13:29 - error: Cannot access member \"client\" for type \"FalconTestMixin*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:32:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:32:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:39:37 - error: Cannot access member \"_service\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:39:37 - error: Cannot access member \"_service\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:58:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:58:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:65:37 - error: Cannot access member \"_service\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:65:37 - error: Cannot access member \"_service\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:78:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:78:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:85:37 - error: Cannot access member \"_service\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:85:37 - error: Cannot access member \"_service\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:107:19 - error: Cannot access member \"override_http_config\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:107:19 - error: Cannot access member \"override_http_config\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:111:19 - error: Cannot access member \"override_http_config\" for type \"FalconTestCase\"\n\n... (truncated 323 lines) ...\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-   /tmp/mypy_primer/projects/discord.py/discord/client.py:288:14 - error: Cannot assign member \"_connection\" for type \"Client\"\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:288:14 - error: Cannot assign member \"_connection\" for type \"Client*\"\n-   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:641:41 - error: Cannot assign member \"_types\" for type \"BaseChannelTransformer\"\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:641:41 - error: Cannot assign member \"_types\" for type \"BaseChannelTransformer*\"\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:252:24 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n-     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:1570:16 - error: Expression of type \"AppType\" cannot be assigned to return type \"Self@AppType\"\n-     Type \"AppType\" cannot be assigned to type \"Self@AppType\" (reportGeneralTypeIssues)\n-     Type \"UserNewsType\" cannot be assigned to type \"Self@UserNewsType\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:2161:23 - error: Argument of type \"(self: Self@UserNewsType, other: SupportsInt) -> Self@UserNewsType\" cannot be assigned to parameter \"__function\" of type \"(_T@reduce, _T@reduce) -> _T@reduce\" in function \"reduce\"\n-     Type \"(self: Self@UserNewsType, other: SupportsInt) -> Self@UserNewsType\" cannot be assigned to type \"(_T@reduce, _T@reduce) -> _T@reduce\"\n-       Parameter 1: type \"_T@reduce\" cannot be assigned to type \"Self@UserNewsType\"\n-         Type \"UserNewsType\" cannot be assigned to type \"Self@UserNewsType\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:2161:16 - error: Expression of type \"UserNewsType\" cannot be assigned to return type \"Self@UserNewsType\"\n- 8397 errors, 23 warnings, 0 informations \n+ 8393 errors, 23 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n-   /tmp/mypy_primer/projects/trio/src/trio/_core/_run.py:395:23 - error: Cannot assign member \"parent\" for type \"CancelStatus\"\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_run.py:395:23 - error: Cannot assign member \"parent\" for type \"CancelStatus*\"\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:1373:28 - error: Cannot assign member \"results\" for type \"Backtesting\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:1373:28 - error: Cannot assign member \"results\" for type \"Backtesting*\"\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/base_analysis.py:61:14 - error: Cannot access member \"prepare_data\" for type \"BaseAnalysis\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/base_analysis.py:61:14 - error: Cannot access member \"prepare_data\" for type \"BaseAnalysis*\"\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/webserver.py:100:20 - error: Cannot assign member \"_rpc\" for type \"type[ApiServer]\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/webserver.py:100:20 - error: Cannot assign member \"_rpc\" for type \"type[ApiServer]*\"\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to false negative errors when doing protocol matching with a method that uses `Self` in its signature. This addresses #6760. (#6778)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210feaac254a19ac29058d",
    "number": 6777,
    "body": "…ching with a method that uses `Self` in its signature. This addresses #6760.",
    "head_branch": "issue6760-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:225:23 - error: Cannot access member \"_pydantic_validate\" for type \"type[ArraySchema]\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:225:23 - error: Cannot access member \"_pydantic_validate\" for type \"type[ArraySchema]*\"\n-     Could not bind method \"_pydantic_validate\" because \"type[ArraySchema]\" is not assignable to parameter \"cls\"\n+     Could not bind method \"_pydantic_validate\" because \"type[ArraySchema]*\" is not assignable to parameter \"cls\"\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:147:19 - error: Cannot access member \"_pydantic_validate\" for type \"type[ColumnSchema]\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:147:19 - error: Cannot access member \"_pydantic_validate\" for type \"type[ColumnSchema]*\"\n-     Could not bind method \"_pydantic_validate\" because \"type[ColumnSchema]\" is not assignable to parameter \"cls\"\n+     Could not bind method \"_pydantic_validate\" because \"type[ColumnSchema]*\" is not assignable to parameter \"cls\"\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:342:37 - error: Cannot access member \"color\" for type \"ColorStream\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:342:37 - error: Cannot access member \"color\" for type \"ColorStream*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py:631:18 - error: Cannot access member \"name\" for type \"Compiler\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py:631:18 - error: Cannot access member \"name\" for type \"Compiler*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:843:55 - error: Cannot access member \"_record_fields\" for type \"Database\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:843:55 - error: Cannot access member \"_record_fields\" for type \"Database*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:787:49 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:787:49 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:787:64 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:787:64 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:790:21 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:790:21 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:790:36 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:790:36 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:25 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:25 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:40 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:40 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:52 - error: Cannot access member \"branch\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:793:52 - error: Cannot access member \"branch\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:802:17 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:802:17 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:803:49 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:803:49 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:804:19 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:804:19 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:805:46 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:805:46 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:806:19 - error: Cannot access member \"branch\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:806:19 - error: Cannot access member \"branch\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:807:49 - error: Cannot access member \"branch\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:807:49 - error: Cannot access member \"branch\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:32 - error: Cannot access member \"commit\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:32 - error: Cannot access member \"commit\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:52 - error: Cannot access member \"branch\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:52 - error: Cannot access member \"branch\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:69 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:817:69 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:919:49 - error: Cannot access member \"tag\" for type \"GitFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:919:49 - error: Cannot access member \"tag\" for type \"GitFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1245:49 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1245:49 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1248:21 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1248:21 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1251:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1251:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1253:62 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1253:62 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1263:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1263:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1264:49 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1264:49 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1272:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1272:17 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1273:37 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1273:37 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1293:21 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1293:21 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1294:37 - error: Cannot access member \"revision\" for type \"HgFetchStrategy\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1294:37 - error: Cannot access member \"revision\" for type \"HgFetchStrategy*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:291:37 - error: Cannot access member \"namespace\" for type \"DetectablePackageMeta\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:291:37 - error: Cannot access member \"namespace\" for type \"DetectablePackageMeta*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:291:59 - error: Cannot access member \"name\" for type \"DetectablePackageMeta\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:291:59 - error: Cannot access member \"name\" for type \"DetectablePackageMeta*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:304:52 - error: Cannot access member \"name\" for type \"DetectablePackageMeta\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:304:52 - error: Cannot access member \"name\" for type \"DetectablePackageMeta*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:304:62 - error: Cannot access member \"namespace\" for type \"DetectablePackageMeta\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:304:62 - error: Cannot access member \"namespace\" for type \"DetectablePackageMeta*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:385:21 - error: Cannot access member \"spec\" for type \"PackageViewMixin\"\n\n... (truncated 77 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/setup.py:147:31 - error: Cannot access member \"get_package_name\" for type \"type[LibraryDownload]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/setup.py:147:31 - error: Cannot access member \"get_package_name\" for type \"type[LibraryDownload]*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/setup.py:196:20 - error: Cannot access member \"get_package_name\" for type \"type[LibraryDownload]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/setup.py:196:20 - error: Cannot access member \"get_package_name\" for type \"type[LibraryDownload]*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/wsgi/wsgi.py:103:29 - error: Cannot access member \"_request_call_name\" for type \"_DDWSGIMiddlewareBase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/wsgi/wsgi.py:103:29 - error: Cannot access member \"_request_call_name\" for type \"_DDWSGIMiddlewareBase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_probe/model.py:80:45 - error: Cannot access member \"__attrs_attrs__\" for type \"Probe\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_probe/model.py:80:45 - error: Cannot access member \"__attrs_attrs__\" for type \"Probe*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/compat.py:327:22 - error: Cannot access member \"_warn\" for type \"TemporaryDirectory\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/compat.py:327:22 - error: Cannot access member \"_warn\" for type \"TemporaryDirectory*\"\n-     Could not bind method \"warn\" because \"TemporaryDirectory\" is not assignable to parameter \"message\"\n+     Could not bind method \"warn\" because \"TemporaryDirectory*\" is not assignable to parameter \"message\"\n-     Could not bind method \"warn\" because \"TemporaryDirectory\" is not assignable to parameter \"message\"\n+     Could not bind method \"warn\" because \"TemporaryDirectory*\" is not assignable to parameter \"message\"\n-       \"TemporaryDirectory\" is incompatible with \"str\"\n+       \"TemporaryDirectory*\" is incompatible with \"str\"\n-       \"TemporaryDirectory\" is incompatible with \"Warning\" (reportGeneralTypeIssues)\n+       \"TemporaryDirectory*\" is incompatible with \"Warning\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/runtime/runtime_metrics.py:30:41 - error: Cannot access member \"ENABLED\" for type \"RuntimeCollectorsIterable\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/runtime/runtime_metrics.py:30:41 - error: Cannot access member \"ENABLED\" for type \"RuntimeCollectorsIterable*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/runtime/runtime_metrics.py:32:47 - error: Cannot access member \"COLLECTORS\" for type \"RuntimeCollectorsIterable\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/runtime/runtime_metrics.py:32:47 - error: Cannot access member \"COLLECTORS\" for type \"RuntimeCollectorsIterable*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:45:26 - error: Cannot access member \"_key\" for type \"_BaseVersion\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:45:26 - error: Cannot access member \"_key\" for type \"_BaseVersion*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:69:28 - error: Cannot access member \"_key\" for type \"_BaseVersion\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/packaging/version.py:69:28 - error: Cannot access member \"_key\" for type \"_BaseVersion*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:34:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:34:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:38:14 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:38:14 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:42:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:42:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:46:14 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:46:14 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:53:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:53:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:62:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:62:21 - error: Cannot access member \"__wrapped__\" for type \"_ObjectProxyMethods*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:27:21 - error: Cannot access member \"repr\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:27:21 - error: Cannot access member \"repr\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:51:21 - error: Cannot access member \"extend\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:51:21 - error: Cannot access member \"extend\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:57:21 - error: Cannot access member \"decode\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:57:21 - error: Cannot access member \"decode\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:60:21 - error: Cannot access member \"str\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:60:21 - error: Cannot access member \"str\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:63:21 - error: Cannot access member \"bytes\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:63:21 - error: Cannot access member \"bytes\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:66:21 - error: Cannot access member \"bytearray\" for type \"FakeStr\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/_ast/fixtures/misleading_methods.py:66:21 - error: Cannot access member \"bytearray\" for type \"FakeStr*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:13:29 - error: Cannot access member \"client\" for type \"FalconTestMixin\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:13:29 - error: Cannot access member \"client\" for type \"FalconTestMixin*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:32:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:32:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:39:37 - error: Cannot access member \"_service\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:39:37 - error: Cannot access member \"_service\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:58:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:58:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:65:37 - error: Cannot access member \"_service\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:65:37 - error: Cannot access member \"_service\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:78:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:78:23 - error: Cannot access member \"tracer\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:85:37 - error: Cannot access member \"_service\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:85:37 - error: Cannot access member \"_service\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:107:19 - error: Cannot access member \"override_http_config\" for type \"FalconTestCase\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:107:19 - error: Cannot access member \"override_http_config\" for type \"FalconTestCase*\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/falcon/test_suite.py:111:19 - error: Cannot access member \"override_http_config\" for type \"FalconTestCase\"\n\n... (truncated 323 lines) ...\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:1373:28 - error: Cannot assign member \"results\" for type \"Backtesting\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:1373:28 - error: Cannot assign member \"results\" for type \"Backtesting*\"\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/base_analysis.py:61:14 - error: Cannot access member \"prepare_data\" for type \"BaseAnalysis\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/base_analysis.py:61:14 - error: Cannot access member \"prepare_data\" for type \"BaseAnalysis*\"\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/webserver.py:100:20 - error: Cannot assign member \"_rpc\" for type \"type[ApiServer]\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/api_server/webserver.py:100:20 - error: Cannot assign member \"_rpc\" for type \"type[ApiServer]*\"\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:252:24 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n-     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:1570:16 - error: Expression of type \"AppType\" cannot be assigned to return type \"Self@AppType\"\n-     Type \"AppType\" cannot be assigned to type \"Self@AppType\" (reportGeneralTypeIssues)\n-     Type \"UserNewsType\" cannot be assigned to type \"Self@UserNewsType\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:2161:23 - error: Argument of type \"(self: Self@UserNewsType, other: SupportsInt) -> Self@UserNewsType\" cannot be assigned to parameter \"__function\" of type \"(_T@reduce, _T@reduce) -> _T@reduce\" in function \"reduce\"\n-     Type \"(self: Self@UserNewsType, other: SupportsInt) -> Self@UserNewsType\" cannot be assigned to type \"(_T@reduce, _T@reduce) -> _T@reduce\"\n-       Parameter 1: type \"_T@reduce\" cannot be assigned to type \"Self@UserNewsType\"\n-         Type \"UserNewsType\" cannot be assigned to type \"Self@UserNewsType\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:2161:16 - error: Expression of type \"UserNewsType\" cannot be assigned to return type \"Self@UserNewsType\"\n- 8397 errors, 23 warnings, 0 informations \n+ 8393 errors, 23 warnings, 0 informations \n\ntrio (https://github.com/python-trio/trio)\n-   /tmp/mypy_primer/projects/trio/src/trio/_core/_run.py:395:23 - error: Cannot assign member \"parent\" for type \"CancelStatus\"\n+   /tmp/mypy_primer/projects/trio/src/trio/_core/_run.py:395:23 - error: Cannot assign member \"parent\" for type \"CancelStatus*\"\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-   /tmp/mypy_primer/projects/discord.py/discord/client.py:288:14 - error: Cannot assign member \"_connection\" for type \"Client\"\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:288:14 - error: Cannot assign member \"_connection\" for type \"Client*\"\n-   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:641:41 - error: Cannot assign member \"_types\" for type \"BaseChannelTransformer\"\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:641:41 - error: Cannot assign member \"_types\" for type \"BaseChannelTransformer*\"\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210febac254a19ac29058e",
    "number": 6775,
    "body": "… in certain edge cases involving a class with an untyped constructor and methods that return recursive types. This addresses #6770.",
    "head_branch": "issue6770",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pymongo/parse.py:109:17 - error: Cannot assign member \"coll\" for type \"Command\"\n-     Expression of type \"str | None\" cannot be assigned to member \"coll\" of class \"Command\"\n-       Member \"__set__\" is unknown\n-       Type \"str | None\" cannot be assigned to type \"str\"\n-         \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n- 12223 errors, 480 warnings, 0 informations \n+ 12222 errors, 480 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a combinatoric explosion and an infinite loop in certain edge cases involving a class with an untyped constructor and methods that return recursive types. This addresses #6770. (#6775)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fecac254a19ac29058f",
    "number": 6771,
    "body": "…en docstrings are missing from a class or function that is defined in a private module but re-exported from a public module. This addresses #6758.",
    "head_branch": "issue6758-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/httplib/patch.py:211:13 - error: \"__datadog_patch\" is not a known member of module \"http_client\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/httplib/patch.py:211:13 - error: \"__datadog_patch\" is not a known member of module \"..http_client\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/httplib/patch.py:225:13 - error: \"__datadog_patch\" is not a known member of module \"http_client\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/httplib/patch.py:225:13 - error: \"__datadog_patch\" is not a known member of module \"..http_client\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/redis/patch.py:99:33 - error: \"BasePipeline\" is not a known member of module \"client\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/redis/patch.py:99:33 - error: \"BasePipeline\" is not a known member of module \"..client\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/redis/patch.py:100:33 - error: \"BasePipeline\" is not a known member of module \"client\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/redis/patch.py:100:33 - error: \"BasePipeline\" is not a known member of module \"..client\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/sqlalchemy/patch.py:17:23 - error: \"__datadog_patch\" is not a known member of module \"engine\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/sqlalchemy/patch.py:17:23 - error: \"__datadog_patch\" is not a known member of module \".engine\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/sqlalchemy/patch.py:27:27 - error: \"__datadog_patch\" is not a known member of module \"engine\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/sqlalchemy/patch.py:27:27 - error: \"__datadog_patch\" is not a known member of module \".engine\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \"_psbsd\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \".._psbsd\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \"_pssunos\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \".._pssunos\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1244:34 - error: \"pmmap_grouped\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1244:34 - error: \"pmmap_grouped\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1244:34 - error: \"pmmap_grouped\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1244:34 - error: \"pmmap_grouped\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1247:34 - error: \"pmmap_ext\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1247:34 - error: \"pmmap_ext\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1247:34 - error: \"pmmap_ext\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1247:34 - error: \"pmmap_ext\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1984:27 - error: \"cpu_freq\" is not a known member of module \"_pssunos\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1984:27 - error: \"cpu_freq\" is not a known member of module \".._pssunos\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1984:27 - error: \"cpu_freq\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1984:27 - error: \"cpu_freq\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \"_pslinux\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \".._pslinux\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \"_psbsd\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \".._psbsd\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \"_pssunos\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \".._pssunos\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \"_pswindows\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \".._pswindows\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \"_pssunos\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \".._pssunos\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2379:28 - error: \"sensors_fans\" is not a known member of module \"_pswindows\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2379:28 - error: \"sensors_fans\" is not a known member of module \".._pswindows\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2379:28 - error: \"sensors_fans\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2379:28 - error: \"sensors_fans\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2379:28 - error: \"sensors_fans\" is not a known member of module \"_psbsd\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2379:28 - error: \"sensors_fans\" is not a known member of module \".._psbsd\" (reportGeneralTypeIssues)\n\n... (truncated 36 lines) ...\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug in the type verifier that resulted in a false negative when docstrings are missing from a class or function that is defined in a private module but re-exported from a public module. This addresses #6758. (#6771)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fedac254a19ac290590",
    "number": 6768,
    "body": "…en docstrings are missing from a class or function that is defined in a private module but re-exported from a public module. This addresses #6758.",
    "head_branch": "issue6758",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/abi.py:40:27 - error: \"compilers\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/abi.py:40:27 - error: \"compilers\" is not a known member of module \"spack.spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:532:19 - error: \"fetch_strategy\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:532:19 - error: \"fetch_strategy\" is not a known member of module \"spack.config\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:534:30 - error: \"fetch_strategy\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:534:30 - error: \"fetch_strategy\" is not a known member of module \"spack.config\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:595:29 - error: \"fetch_strategy\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:595:29 - error: \"fetch_strategy\" is not a known member of module \"spack.config\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:619:36 - error: \"builder\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:619:36 - error: \"builder\" is not a known member of module \"spack.config\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:991:31 - error: \"repo\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:991:31 - error: \"repo\" is not a known member of module \"spack.config\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:1014:37 - error: \"repo\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:1014:37 - error: \"repo\" is not a known member of module \"spack.detection\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:1028:61 - error: \"repo\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:1028:61 - error: \"repo\" is not a known member of module \"spack.detection\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:381:21 - error: \"config\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:381:21 - error: \"config\" is not a known member of module \"spack.caches\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:791:30 - error: \"paths\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:791:30 - error: \"paths\" is not a known member of module \"spack.caches\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1867:34 - error: \"paths\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1867:34 - error: \"paths\" is not a known member of module \"spack.caches\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2475:32 - error: \"web\" is not a known member of module \"spack.util\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2475:32 - error: \"web\" is not a known member of module \"spack.caches.util\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2635:26 - error: \"spec\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2635:26 - error: \"spec\" is not a known member of module \"spack.caches\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1483:23 - error: \"error\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1483:23 - error: \"error\" is not a known member of module \"spack.build_systems.cmake\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1141:35 - error: \"multimethod\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1141:35 - error: \"multimethod\" is not a known member of module \"spack.build_systems.cmake\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1297:70 - error: \"_checks\" is not a known member of module \"spack.build_systems\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1297:70 - error: \"_checks\" is not a known member of module \"spack.build_systems.cmake.build_systems\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py:667:30 - error: \"environment\" is not a known member of module \"spack.util\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py:667:30 - error: \"environment\" is not a known member of module \"spack.compilers.util\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py:668:30 - error: \"schema\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py:668:30 - error: \"schema\" is not a known member of module \"spack.compilers\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:118:35 - error: \"UnsatisfiableProviderSpecError\" is not a known member of module \"spack.error\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:118:35 - error: \"UnsatisfiableProviderSpecError\" is not a known member of module \"spack.abi.error\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:747:30 - error: \"config\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:747:30 - error: \"config\" is not a known member of module \"spack.solver.asp\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:72:33 - error: \"definitions\" is not a known member of module \"spack.schema\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:72:33 - error: \"definitions\" is not a known member of module \"spack.compilers.schema\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:73:29 - error: \"develop\" is not a known member of module \"spack.schema\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:73:29 - error: \"develop\" is not a known member of module \"spack.compilers.schema\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:974:15 - error: \"config\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:974:15 - error: \"config\" is not a known member of module \"spack.compilers\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:987:15 - error: \"config\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:987:15 - error: \"config\" is not a known member of module \"spack.compilers\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:994:11 - error: \"config\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:994:11 - error: \"config\" is not a known member of module \"spack.compilers\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1006:19 - error: \"config\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1006:19 - error: \"config\" is not a known member of module \"spack.compilers\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1230:38 - error: \"config\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1230:38 - error: \"config\" is not a known member of module \"spack.compilers\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:44:42 - error: \"compilers\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:44:42 - error: \"compilers\" is not a known member of module \"spack.cmd\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:47:21 - error: \"compilers\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:47:21 - error: \"compilers\" is not a known member of module \"spack.cmd\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:81:26 - error: \"compilers\" is not a known member of module \"spack\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:81:26 - error: \"compilers\" is not a known member of module \"spack.cmd\" (reportGeneralTypeIssues)\n\n... (truncated 1048 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiopg/patch.py:26:11 - error: \"_datadog_patch\" is not a known member of module \"aiopg\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiopg/patch.py:26:11 - error: \"_datadog_patch\" is not a known member of module \"aiopg.connection\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiopg/patch.py:34:15 - error: \"_datadog_patch\" is not a known member of module \"aiopg\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiopg/patch.py:34:15 - error: \"_datadog_patch\" is not a known member of module \"aiopg.connection\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/boto/patch.py:59:21 - error: \"_datadog_patch\" is not a known member of module \"boto.connection\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/boto/patch.py:59:21 - error: \"_datadog_patch\" is not a known member of module \"boto.connection.connection\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/boto/patch.py:72:25 - error: \"_datadog_patch\" is not a known member of module \"boto.connection\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/boto/patch.py:72:25 - error: \"_datadog_patch\" is not a known member of module \"boto.connection.connection\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/httplib/patch.py:211:13 - error: \"__datadog_patch\" is not a known member of module \"http_client\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/httplib/patch.py:211:13 - error: \"__datadog_patch\" is not a known member of module \"..http_client\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/httplib/patch.py:225:13 - error: \"__datadog_patch\" is not a known member of module \"http_client\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/httplib/patch.py:225:13 - error: \"__datadog_patch\" is not a known member of module \"..http_client\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/redis/patch.py:99:33 - error: \"BasePipeline\" is not a known member of module \"client\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/redis/patch.py:99:33 - error: \"BasePipeline\" is not a known member of module \"..client\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/redis/patch.py:100:33 - error: \"BasePipeline\" is not a known member of module \"client\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/redis/patch.py:100:33 - error: \"BasePipeline\" is not a known member of module \"..client\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/sqlalchemy/patch.py:17:23 - error: \"__datadog_patch\" is not a known member of module \"engine\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/sqlalchemy/patch.py:17:23 - error: \"__datadog_patch\" is not a known member of module \".engine\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/sqlalchemy/patch.py:27:27 - error: \"__datadog_patch\" is not a known member of module \"engine\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/sqlalchemy/patch.py:27:27 - error: \"__datadog_patch\" is not a known member of module \".engine\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \"_psbsd\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \".._psbsd\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \"_pssunos\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \".._pssunos\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:370:29 - error: \"ppid_map\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1244:34 - error: \"pmmap_grouped\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1244:34 - error: \"pmmap_grouped\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1244:34 - error: \"pmmap_grouped\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1244:34 - error: \"pmmap_grouped\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1247:34 - error: \"pmmap_ext\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1247:34 - error: \"pmmap_ext\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1247:34 - error: \"pmmap_ext\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1247:34 - error: \"pmmap_ext\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1984:27 - error: \"cpu_freq\" is not a known member of module \"_pssunos\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1984:27 - error: \"cpu_freq\" is not a known member of module \".._pssunos\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1984:27 - error: \"cpu_freq\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1984:27 - error: \"cpu_freq\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \"_pslinux\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \".._pslinux\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \"_psbsd\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \".._psbsd\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \"_pssunos\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \".._pssunos\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \"_psaix\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2025:34 - error: \"getloadavg\" is not a known member of module \".._psaix\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \"_pswindows\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \".._pswindows\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \"_psosx\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \".._psosx\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \"_pssunos\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2349:31 - error: \"sensors_temperatures\" is not a known member of module \".._pssunos\" (reportGeneralTypeIssues)\n\n... (truncated 58 lines) ...\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_pandas_accessor.py:62:17 - error: \"backends\" is not a known member of module \"pandera\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pandas_accessor.py:62:17 - error: \"backends\" is not a known member of module \"pandera.api.pandas.container\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/tests/core/test_pandas_accessor.py:67:32 - error: \"array\" is not a known member of module \"pandera.api.pandas\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pandas_accessor.py:67:32 - error: \"array\" is not a known member of module \"pandera.api.pandas.container.api.pandas\" (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210feeac254a19ac290591",
    "number": 6762,
    "body": "…stances when calling an inner function that uses a ParamSpec defined scoped to an outer function. This addresses #6759.",
    "head_branch": "issue6759-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:109:17 - error: Arguments for ParamSpec \"P@_flat_call\" are missing (reportGeneralTypeIssues)\n- 149 errors, 0 warnings, 183 informations \n+ 148 errors, 0 warnings, 183 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that results in a false positive error under certain circumstances when calling an inner function that uses a ParamSpec defined scoped to an outer function. This addresses #6759. (#6762)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210feeac254a19ac290592",
    "number": 6761,
    "body": "…ching with a method that uses `Self` in its signature. This addresses #6759.",
    "head_branch": "issue6759",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-       Type \"(self: list[Unknown]) -> Iterator[Unknown]\" cannot be assigned to type \"() -> Iterator[_T_co@Iterable]\" (reportGeneralTypeIssues)\n+       Type \"(self: Self@list[_T@list]) -> Iterator[Unknown]\" cannot be assigned to type \"() -> Iterator[_T_co@Iterable]\" (reportGeneralTypeIssues)\n-       Type \"(self: list[Unknown]) -> Iterator[Unknown]\" cannot be assigned to type \"() -> Iterator[_T_co@Iterable]\" (reportGeneralTypeIssues)\n+       Type \"(self: Self@list[_T@list]) -> Iterator[Unknown]\" cannot be assigned to type \"() -> Iterator[_T_co@Iterable]\" (reportGeneralTypeIssues)\n-       Type \"(self: list[Unknown]) -> Iterator[Unknown]\" cannot be assigned to type \"() -> Iterator[_T_co@Iterable]\" (reportGeneralTypeIssues)\n+       Type \"(self: Self@list[_T@list]) -> Iterator[Unknown]\" cannot be assigned to type \"() -> Iterator[_T_co@Iterable]\" (reportGeneralTypeIssues)\n-         Type \"(cm: WriteContextManager) -> tuple[TextIOWrapper | None, TextIOWrapper]\" cannot be assigned to type \"() -> _T_co@AbstractContextManager\"\n+         Type \"(cm: Self@WriteContextManager) -> tuple[TextIOWrapper | None, TextIOWrapper]\" cannot be assigned to type \"() -> _T_co@AbstractContextManager\"\n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1019:36 - error: Type \"Weight@when | NeutralWeight\" cannot be assigned to type variable \"OutWeight@Predicate\"\n+     Type \"Weight@when | NeutralWeight\" is incompatible with bound type \"ImplementationWeight\" for type variable \"OutWeight@Predicate\"\n+       Type \"ImplementationWeight* | NeutralWeight\" cannot be assigned to type \"ImplementationWeight\"\n+         \"NeutralWeight\" is incompatible with protocol \"ImplementationWeight\"\n+           \"neutral\" is an incompatible type\n+             Type \"() -> NeutralWeight\" cannot be assigned to type \"() -> Self@NeutralWeight\"\n+           \"of_neutral_predicate\" is an incompatible type\n+             Type \"(predicate: Predicate[Any]) -> NeutralWeight\" cannot be assigned to type \"(predicate: Predicate[Any]) -> Self@NeutralWeight\"\n+           \"__add__\" is an incompatible type\n+     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1038:21 - error: Type \"NeutralWeight\" cannot be assigned to type variable \"OutWeight@Predicate\"\n+     Type \"NeutralWeight\" is incompatible with bound type \"ImplementationWeight\" for type variable \"OutWeight@Predicate\"\n+       \"NeutralWeight\" is incompatible with protocol \"ImplementationWeight\"\n+         \"neutral\" is an incompatible type\n+           Type \"() -> NeutralWeight\" cannot be assigned to type \"() -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+         \"of_neutral_predicate\" is an incompatible type\n+           Type \"(predicate: Predicate[Any]) -> NeutralWeight\" cannot be assigned to type \"(predicate: Predicate[Any]) -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1348:21 - error: Type \"NeutralWeight\" cannot be assigned to type variable \"OutWeight@Predicate\"\n+     Type \"NeutralWeight\" is incompatible with bound type \"ImplementationWeight\" for type variable \"OutWeight@Predicate\"\n+       \"NeutralWeight\" is incompatible with protocol \"ImplementationWeight\"\n+         \"neutral\" is an incompatible type\n+           Type \"() -> NeutralWeight\" cannot be assigned to type \"() -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+         \"of_neutral_predicate\" is an incompatible type\n+           Type \"(predicate: Predicate[Any]) -> NeutralWeight\" cannot be assigned to type \"(predicate: Predicate[Any]) -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1269:21 - error: Type \"NeutralWeight\" cannot be assigned to type variable \"OutWeight@Predicate\"\n+     Type \"NeutralWeight\" is incompatible with bound type \"ImplementationWeight\" for type variable \"OutWeight@Predicate\"\n+       \"NeutralWeight\" is incompatible with protocol \"ImplementationWeight\"\n+         \"neutral\" is an incompatible type\n+           Type \"() -> NeutralWeight\" cannot be assigned to type \"() -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+         \"of_neutral_predicate\" is an incompatible type\n+           Type \"(predicate: Predicate[Any]) -> NeutralWeight\" cannot be assigned to type \"(predicate: Predicate[Any]) -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1375:21 - error: Type \"NeutralWeight\" cannot be assigned to type variable \"OutWeight@Predicate\"\n+     Type \"NeutralWeight\" is incompatible with bound type \"ImplementationWeight\" for type variable \"OutWeight@Predicate\"\n+       \"NeutralWeight\" is incompatible with protocol \"ImplementationWeight\"\n+         \"neutral\" is an incompatible type\n+           Type \"() -> NeutralWeight\" cannot be assigned to type \"() -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+         \"of_neutral_predicate\" is an incompatible type\n+           Type \"(predicate: Predicate[Any]) -> NeutralWeight\" cannot be assigned to type \"(predicate: Predicate[Any]) -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:457:53 - error: Type \"NeutralWeight\" cannot be assigned to type variable \"OutWeight@Predicate\"\n+     Type \"NeutralWeight\" is incompatible with bound type \"ImplementationWeight\" for type variable \"OutWeight@Predicate\"\n+       \"NeutralWeight\" is incompatible with protocol \"ImplementationWeight\"\n+         \"neutral\" is an incompatible type\n+           Type \"() -> NeutralWeight\" cannot be assigned to type \"() -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+         \"of_neutral_predicate\" is an incompatible type\n+           Type \"(predicate: Predicate[Any]) -> NeutralWeight\" cannot be assigned to type \"(predicate: Predicate[Any]) -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:511:43 - error: Type \"NeutralWeight\" cannot be assigned to type variable \"OutWeight@Predicate\"\n+     Type \"NeutralWeight\" is incompatible with bound type \"ImplementationWeight\" for type variable \"OutWeight@Predicate\"\n+       \"NeutralWeight\" is incompatible with protocol \"ImplementationWeight\"\n+         \"neutral\" is an incompatible type\n+           Type \"() -> NeutralWeight\" cannot be assigned to type \"() -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+         \"of_neutral_predicate\" is an incompatible type\n+           Type \"(predicate: Predicate[Any]) -> NeutralWeight\" cannot be assigned to type \"(predicate: Predicate[Any]) -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_internal.py:120:17 - error: Type \"NeutralWeight\" cannot be assigned to type variable \"OutWeight@Predicate\"\n+     Type \"NeutralWeight\" is incompatible with bound type \"ImplementationWeight\" for type variable \"OutWeight@Predicate\"\n+       \"NeutralWeight\" is incompatible with protocol \"ImplementationWeight\"\n+         \"neutral\" is an incompatible type\n+           Type \"() -> NeutralWeight\" cannot be assigned to type \"() -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+         \"of_neutral_predicate\" is an incompatible type\n+           Type \"(predicate: Predicate[Any]) -> NeutralWeight\" cannot be assigned to type \"(predicate: Predicate[Any]) -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_internal.py:126:45 - error: Type \"NeutralWeight\" cannot be assigned to type variable \"OutWeight@Predicate\"\n+     Type \"NeutralWeight\" is incompatible with bound type \"ImplementationWeight\" for type variable \"OutWeight@Predicate\"\n+       \"NeutralWeight\" is incompatible with protocol \"ImplementationWeight\"\n+         \"neutral\" is an incompatible type\n+           Type \"() -> NeutralWeight\" cannot be assigned to type \"() -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+         \"of_neutral_predicate\" is an incompatible type\n+           Type \"(predicate: Predicate[Any]) -> NeutralWeight\" cannot be assigned to type \"(predicate: Predicate[Any]) -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_internal.py:128:39 - error: Type \"NeutralWeight\" cannot be assigned to type variable \"OutWeight@Predicate\"\n+     Type \"NeutralWeight\" is incompatible with bound type \"ImplementationWeight\" for type variable \"OutWeight@Predicate\"\n+       \"NeutralWeight\" is incompatible with protocol \"ImplementationWeight\"\n+         \"neutral\" is an incompatible type\n+           Type \"() -> NeutralWeight\" cannot be assigned to type \"() -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+         \"of_neutral_predicate\" is an incompatible type\n+           Type \"(predicate: Predicate[Any]) -> NeutralWeight\" cannot be assigned to type \"(predicate: Predicate[Any]) -> Self@NeutralWeight\"\n+             Function return type \"NeutralWeight\" is incompatible with type \"Self@NeutralWeight\"\n+     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_internal.py:132:27 - error: Argument of type \"QualifiedBy\" cannot be assigned to parameter \"__object\" of type \"Predicate[Weight@create_conditions] | Predicate[NeutralWeight] | Weight@create_conditions | NeutralWeight | bool | None\" in function \"append\"\n+     Type \"QualifiedBy\" cannot be assigned to type \"Predicate[Weight@create_conditions] | Predicate[NeutralWeight] | Weight@create_conditions | NeutralWeight | bool | None\"\n\n... (truncated 477 lines) ...\n\nmkosi (https://github.com/systemd/mkosi)\n+ /tmp/mypy_primer/projects/mkosi/mkosi/qemu.py\n+   /tmp/mypy_primer/projects/mkosi/mkosi/qemu.py:618:25 - error: Argument of type \"str\" cannot be assigned to parameter \"s\" of type \"AnyStr@_TemporaryFileWrapper\" in function \"write\"\n+     Type \"str\" cannot be assigned to type \"AnyStr@_TemporaryFileWrapper\" (reportGeneralTypeIssues)\n- 8 errors, 0 warnings, 0 informations \n+ 9 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:177:20 - error: Expression of type \"Self@Event[EventTypeT@Event, ClanT@Event]\" cannot be assigned to return type \"Event[EventType, Self@PartialClan]\"\n+     \"Event[EventTypeT@Event, ClanT@Event]\" is incompatible with \"Event[EventType, Self@PartialClan]\"\n+       Type parameter \"ClanT@Event\" is covariant, but \"ClanT@Event\" is not a subtype of \"Self@PartialClan\"\n+         Type \"ClanT@Event\" cannot be assigned to type \"Self@PartialClan\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:190:16 - error: Expression of type \"Self@Announcement[ClanT@Announcement]\" cannot be assigned to return type \"Announcement[Self@PartialClan]\"\n+     \"Announcement[ClanT@Announcement]\" is incompatible with \"Announcement[Self@PartialClan]\"\n+       Type parameter \"ClanT@Announcement\" is covariant, but \"ClanT@Announcement\" is not a subtype of \"Self@PartialClan\"\n+         Type \"ClanT@Announcement\" cannot be assigned to type \"Self@PartialClan\" (reportGeneralTypeIssues)\n- 8397 errors, 23 warnings, 0 informations \n+ 8399 errors, 23 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:807:21 - error: \"assert_type\" mismatch: expected \"tuple[DataFrame, DataFrame]\" but received \"tuple[Self@DataFrame, Self@DataFrame]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:737:23 - error: \"assert_type\" mismatch: expected \"tuple[Index[int], Index[int]]\" but received \"tuple[Self@Index[S1@Index], Self@Index[S1@Index]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:738:23 - error: \"assert_type\" mismatch: expected \"tuple[Index[int], Index[int]]\" but received \"tuple[Self@Index[S1@Index], Self@Index[S1@Index]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:739:23 - error: \"assert_type\" mismatch: expected \"tuple[Index[int], Index[int]]\" but received \"tuple[Self@Index[S1@Index], Self@Index[S1@Index]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:558:23 - error: \"assert_type\" mismatch: expected \"tuple[Series[int], Series[int]]\" but received \"tuple[TimestampSeries, TimestampSeries]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:558:23 - error: \"assert_type\" mismatch: expected \"tuple[Series[int], Series[int]]\" but received \"tuple[Self@TimestampSeries, Self@TimestampSeries]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:2843:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Self@DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:2844:23 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Self@Series[S1@Series]\" (reportGeneralTypeIssues)\n- 1328 errors, 0 warnings, 0 informations \n+ 1334 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fefac254a19ac290593",
    "number": 6755,
    "body": "Address https://github.com/microsoft/pylance-release/issues/4966\r\n\r\nGiven this code:\r\n\r\n```python\r\nA = True\r\nif(A):\r\n    pass\r\n```\r\n\r\nCurrently, if you rename `A` to `B`, because the parens wrapping `A` in the `if`expression are removed, you'll get the following, which is invalid:\r\n\r\n```python\r\nB = True\r\nifB:\r\n    pass\r\n```\r\n\r\nThis change fixes the issue, but is it the best/correct fix?",
    "head_branch": "pylance4966",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Leave enclosing parens when renaming parenthesized identifier (#6755)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff0ac254a19ac290594",
    "number": 6753,
    "body": "…hat are used to discriminate between tagged unions of objects that can be discriminated based on a field with a literal type. This addresses #6752.",
    "head_branch": "issue6752",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added narrowing support for literal patterns in a `match` statement that are used to discriminate between tagged unions of objects that can be discriminated based on a field with a literal type. This addresses #6752. (#6753)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff1ac254a19ac290595",
    "number": 6751,
    "body": "…ontains an unpacked tuple followed by one or more positional-only parameters as in `Callable[[*Ts, int], None]`. This addresses #6724.",
    "head_branch": "issue6724",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug related to function type compatibility when the dest type contains an unpacked tuple followed by one or more positional-only parameters as in `Callable[[*Ts, int], None]`. This addresses #6724. (#6751)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff2ac254a19ac290596",
    "number": 6749,
    "body": "Address #6727 ",
    "head_branch": "6727",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Oops, I merged the wrong PR. Looks like this one was ready to merge, but if you'd like me to undo, let me know.",
      "This was ready to merge. I was just waiting for the mac tests to run."
    ],
    "commit_messages": [
      "Fix isEmpty check for partially resolved namespace packages (#6749)\n\n* Fix\r\n\r\n* Unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff3ac254a19ac290597",
    "number": 6743,
    "body": "Addresses https://github.com/microsoft/pyright/issues/6742\nAddresses https://github.com/microsoft/pyright/issues/6740",
    "head_branch": "rchiodo/fix_output_json",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fix pyright output schema and file watching (#6743)\n\n* Fix pyright output schema and file watching\r\n\r\n* Fix build error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff4ac254a19ac290598",
    "number": 6738,
    "body": "Addresses https://github.com/microsoft/pyright/issues/6737.\r\n\r\nThe old logic would have just passed an empty path here, so make `EmptyUri.getFilePath` return an empty path.",
    "head_branch": "rchiodo/fixEmpty",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Pylance LSP tests are catching this as I'm working on porting the URI changes there. Another case where an LSP based test would have likely caught this issue."
    ],
    "commit_messages": [
      "Fix emptyUri being used as a file path (#6738)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff5ac254a19ac290599",
    "number": 6730,
    "body": "```python\r\n# filename: test.py\r\nfrom typing import Mapping\r\nM = Mapping\r\n\r\ndef foo(m: M):\r\n    return m\r\n\r\n# filename: test1.py\r\nfrom test import foo\r\na = { \"hello\": 10 }\r\n\r\nb = foo(a)\r\n```\r\n\r\nWhen querying the type of `b`, it returns a `Mapping` type with `M` as a `TypeAliasInfo`. However, the `TypeAliasInfo` lacks sufficient details about where `M` is defined.\r\n\r\nTo address this, I have added `moduleName` and `fileUri` to `TypeAliasInfo`.\r\n\r\nAn alternative approach could be to add a decl to the `TypeAliasInfo`. But this would require storing the `VariableDecl for type alias` in the parse tree. So, I chose to add `moduleName` and `fileUri` instead. Another possibility is to create a `synthesized decl` and add that into the `TypeAliasInfo`.\r\n\r\nthis change is intended for use in Language Services features like `go to type definition` for `b`, or any functionality that needs to trace back to where a `type alias` is defined.",
    "head_branch": "typeAliasModuleName",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "added moduleName and fileUri to `TypeAliasInfo` (#6730)\n\n* Fix type alias handling in source mapper\r\n\r\n* Add tests for finding type alias declarations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff6ac254a19ac29059a",
    "number": 6728,
    "body": "Addresses https://github.com/microsoft/pyright/issues/6725\n\nRoot cause was using the fileuri.key value as the return value for the uri of a document. However the tests were running the same logic on the expected changes so it wasn't verifying the URIs were actually URIs, just that the changes were the same.",
    "head_branch": "rchiodo/rename_problem",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fix URI return value on renames (#6728)\n\n* Fix rename URI\r\n\r\n* Update test to check for invalid URIs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff6ac254a19ac29059b",
    "number": 6726,
    "body": "`module` just happens to be an object in Javascript so that this used to work, but `module` is not defined at the location this is being used. I believe the intent was to use the declPath.\n\nAddresses https://github.com/microsoft/pyright/issues/6722",
    "head_branch": "rchiodo/fix_package_type_verifier",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Yikes indeed!"
    ],
    "commit_messages": [
      "Fix usage of invalid path in packageTypeVerifier (#6726)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff7ac254a19ac29059c",
    "number": 6719,
    "body": "…ings, string chains, and escaped strings cannot be used within `Annotated` expressions when using an alias of `Annotated`. This addresses #6714.",
    "head_branch": "issue6714-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Eliminated the limitation that `await`, assignment expressions, f-strings, string chains, and escaped strings cannot be used within `Annotated` expressions when using an alias of `Annotated`. This addresses #6714. (#6719)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff8ac254a19ac29059d",
    "number": 6718,
    "body": "… `Annotated` expressions when using an alias of `Annotated`. This partially addresses #6714.",
    "head_branch": "issue6714",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Eliminated the limitation that unpack operators cannot be used within `Annotated` expressions when using an alias of `Annotated`. This partially addresses #6714. (#6718)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ff9ac254a19ac29059e",
    "number": 6712,
    "body": "`declaration` is added to `ClassDetail` so that IDE features can go back to source location if possible from `type`\r\n\r\ncurrently, it doesn't handle `dynamic cases` such as `E = Enum('E', ...)`, `N = NamedTuple('N', ...)`, `T = TypedDict('T', ...)`, `I = NewType('I'...)` or `CF = type('CF', ...)`\r\n\r\nbut if needed, we could handle some common patterns such as `DynamicName = ....` by adding some synthesized (and cached) decl.\r\n\r\nalso, it currently doesn't support experimental `inline typed dict` case. and any synthesized type such as `temporary type from type guard` or `dataclass converterDescriptor` won't have decl.\r\n\r\n....\r\n\r\ncurrently `SpecialBuiltInClassDeclaration` is set for some cases in `binder` but not all cases handled by `typeEvaluator` (`handleTypingStubTypeAnnotation` and `handleTypingStubAssignment`). not sure whether that is intentional or not. for now, I didn't update `binder` to match `typeEvaluator` behavior.\r\n\r\n",
    "head_branch": "addClassDecl",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "added `declaration` to `classDetail` (#6712)\n\n* add class declaration to ClassDetail\r\n\r\n* added test\r\n\r\n* add Metaclass case\r\n\r\n* added test covering property case\r\n\r\n* cover property case\r\n\r\n* updated property test to check all 3 cases, setter, getter, deleter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ffaac254a19ac29059f",
    "number": 6709,
    "body": "Address https://github.com/microsoft/pylance-release/issues/4977\r\n\r\nIt's unclear to me why aliases are currently excluded from document/workspace symbols requests. Simplicity? But this ask to include them seems reasonable to me.",
    "head_branch": "pylance4977",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Yeah, I don't know why it was written this way. I can tell I didn't write this code because it's using \"yoda\" conventions, which is not something I do. If I had written this code, it would have been `declaration.type === DeclarationType.Alias`. I'm guessing that Jake Bailey wrote this initially.",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "2 things. for `document symbol` it might be fine to include `alias` but for `workspace symbol`, it would cause hundreds of same symbols to show up? for example, `pd` in every files that uses `pandas` will now show up in `go to symbol`.\r\n\r\n..\r\n\r\nsecond, change here won't affect `pylance`, `pylance` has its own implementation since it uses `indexing`. this change will only affect `pyright` (or when `indexing` is turned `off` - and now we have UX difference between when indexing is on and off for document symbol and workspace symbol)",
      "if we are going to make the same change in `pylance`, there are other considerations to make before including `alias` in user files in indices since we do `alias deduplication` in `pylance` to make sure we don't show multiple same import aliases from multiple files or between different packages.\r\n\r\nalso, we should open big project like pandas and etc and see user experiences."
    ],
    "commit_messages": [
      "Include import aliases in document/workspace symbols (#6709)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ffbac254a19ac2905a0",
    "number": 6708,
    "body": "… that always raises an exception rather than returning. This addresses #6707.",
    "head_branch": "issue6707",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/test_wrapping.py:183:10 - error: Argument of type \"() -> Generator[Literal[0, 1], Any, None]\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/test_wrapping.py:183:10 - error: Argument of type \"() -> Generator[Literal[0, 1], Any, NoReturn]\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n\n```"
    ],
    "commit_messages": [
      "Fixed bug that led to incorrect return type inference for a generator that always raises an exception rather than returning. This addresses #6707. (#6708)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ffcac254a19ac2905a1",
    "number": 6705,
    "body": "…ertain circumstances in a `finally` clause. This addresses #6704.",
    "head_branch": "issue6704",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/sqlalchemy/mixins.py:47:13 - error: \"conn\" is possibly unbound (reportUnboundVariable)\n- 9630 errors, 447 warnings, 0 informations \n+ 9631 errors, 447 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to an improper \"unbound\" type evaluation under certain circumstances in a `finally` clause. This addresses #6704. (#6705)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ffdac254a19ac2905a2",
    "number": 6702,
    "body": null,
    "head_branch": "issue6699-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added `__qualname__` back as an implicit attribute of a class. (#6702)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ffeac254a19ac2905a3",
    "number": 6701,
    "body": "…It doesn't exist at runtime, so this was leading to a false negative. This addresses #6699.",
    "head_branch": "issue6699",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Removed implicit `__qualname__` attribute from the module namespace. It doesn't exist at runtime, so this was leading to a false negative. This addresses #6699. (#6701)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210ffeac254a19ac2905a4",
    "number": 6698,
    "body": "…ving a union of two callables. This addresses #6695.",
    "head_branch": "issue6695",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive error in certain cases involving a union of two callables. This addresses #6695. (#6698)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66210fffac254a19ac2905a5",
    "number": 6697,
    "body": null,
    "head_branch": "issue6654",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Issue6654 (#6697)\n\n* Extended support for \"partially unbound\" variable detection to cases that involve comprehension and class scopes. This addresses #6685.\r\n\r\n* Fixed bug that led to a false positive when a tuple of indeterminate length was used in a callback function. This addresses #6654."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211000ac254a19ac2905a6",
    "number": 6693,
    "body": "…that involve comprehension and class scopes. This addresses #6685.",
    "head_branch": "issue6685",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npyinstrument (https://github.com/joerick/pyinstrument)\n+ /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:40:31 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__object\" in function \"append\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:41:31 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__object\" in function \"append\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:42:31 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__object\" in function \"append\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:57:35 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__object\" in function \"append\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:60:35 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__object\" in function \"append\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/jsonrenderer.py:71:31 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__object\" in function \"append\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n- 35 errors, 5 warnings, 0 informations \n+ 41 errors, 5 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:217:20 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:534:20 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:580:20 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1118:32 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1119:48 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1167:39 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1170:40 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1194:59 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1195:36 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1197:36 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1231:48 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:1238:47 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/fastapi.py:65:24 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/fastapi.py:80:40 - error: \"starlette\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/fastapi.py:107:40 - error: \"starlette\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/geopandas.py:73:24 - error: \"_GenericAlias\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/geopandas.py:79:36 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/geopandas.py:92:27 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/geopandas.py:95:27 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/geopandas.py:109:40 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/geopandas.py:131:35 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/geopandas.py:133:45 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/geopandas.py:183:35 - error: \"gpd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/geopandas.py:208:24 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/pandas.py:204:20 - error: \"core_schema\" is possibly unbound (reportUnboundVariable)\n- 1289 errors, 10 warnings, 0 informations \n+ 1314 errors, 10 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:181:61 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__attributes\" of type \"_Attr\" in function \"tcsetattr\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:179:39 - error: Argument of type \"Spec | Unknown | tuple[Unknown, Unknown]\" cannot be assigned to parameter \"constraint\" of type \"Spec\" in function \"compatible\"\n-     Type \"Spec | Unknown | tuple[Unknown, Unknown]\" cannot be assigned to type \"Spec\"\n-       \"tuple[Unknown, Unknown]\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:180:39 - error: Argument of type \"Spec | Unknown | tuple[Unknown, Unknown]\" cannot be assigned to parameter \"constraint\" of type \"Spec\" in function \"compatible\"\n-     Type \"Spec | Unknown | tuple[Unknown, Unknown]\" cannot be assigned to type \"Spec\"\n-       \"tuple[Unknown, Unknown]\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:1077:40 - error: \"uuid\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/compression.py:511:45 - error: \"bz2\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/compression.py:544:31 - error: \"gzip\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/compression.py:566:31 - error: \"lzma\" is possibly unbound (reportUnboundVariable)\n- 4022 errors, 48 warnings, 0 informations \n+ 4025 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:84:22 - error: \"ddwaf_config\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:87:27 - error: \"ddwaf_object\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:88:34 - error: \"ddwaf_object\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:89:28 - error: \"py_ddwaf_init\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:101:13 - error: \"ddwaf_object_free\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:105:20 - error: \"py_ddwaf_known_addresses\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:113:13 - error: \"ddwaf_object_free\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:121:21 - error: \"ddwaf_object\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:122:27 - error: \"ddwaf_object\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:123:22 - error: \"py_ddwaf_update\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:125:13 - error: \"ddwaf_object_free\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:137:23 - error: \"py_ddwaf_context_init\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:156:22 - error: \"ddwaf_result\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:157:26 - error: \"_observator\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:158:23 - error: \"ddwaf_object\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_ddwaf/__init__.py:159:21 - error: \"ddwaf_run\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pymongo/client.py:212:40 - error: \"_unpack_response\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:811:16 - error: \"PROC_STATUSES\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1985:38 - error: \"IOPRIO_CLASS_IDLE\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1985:57 - error: \"IOPRIO_CLASS_NONE\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:1051:32 - error: \"IOPRIO_VERYLOW\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:1051:48 - error: \"IOPRIO_LOW\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:1051:60 - error: \"IOPRIO_NORMAL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:1052:32 - error: \"IOPRIO_HIGH\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/decorators.py:103:20 - error: \"signature\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/decorators.py:121:20 - error: \"signature\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:282:17 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:283:14 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:283:47 - error: \"Literal\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:283:64 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:283:97 - error: \"Literal\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:311:21 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:311:61 - error: \"Identifier\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:311:79 - error: \"Identifier\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:311:99 - error: \"Identifier\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:329:17 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:329:42 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:329:72 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:479:24 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:480:28 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:504:24 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:505:28 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:507:13 - error: \"Composed\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:509:21 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:510:21 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:515:13 - error: \"Composed\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:517:21 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg.py:518:21 - error: \"SQL\" is possibly unbound (reportUnboundVariable)\n- 9590 errors, 447 warnings, 0 informations \n+ 9638 errors, 447 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/strategy/parameters.py:136:16 - error: \"Integer\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/strategy/parameters.py:180:16 - error: \"Real\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/strategy/parameters.py:214:16 - error: \"SKDecimal\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/strategy/parameters.py:264:16 - error: \"Categorical\" is possibly unbound (reportUnboundVariable)\n- 591 errors, 38 warnings, 0 informations \n+ 595 errors, 38 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/voice_client.py\n+   /tmp/mypy_primer/projects/discord.py/discord/voice_client.py:384:15 - error: \"nacl\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/discord.py/discord/voice_client.py:391:15 - error: \"nacl\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/discord.py/discord/voice_client.py:392:17 - error: \"nacl\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/discord.py/discord/voice_client.py:392:35 - error: \"nacl\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/discord.py/discord/voice_client.py:397:15 - error: \"nacl\" is possibly unbound (reportUnboundVariable)\n- 57 errors, 13 warnings, 0 informations \n+ 62 errors, 13 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:805:16 - error: Expression of type \"list[MemberT@ChatGroup]\" cannot be assigned to return type \"Sequence[MemberT@ChatGroup]\"\n+     \"list[MemberT@ChatGroup]\" is incompatible with \"Sequence[MemberT@ChatGroup]\"\n+       Type parameter \"_T_co@Sequence\" is covariant, but \"MemberT@ChatGroup\" is not a subtype of \"MemberT@ChatGroup\"\n+         Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n- 8397 errors, 23 warnings, 0 informations \n+ 8398 errors, 23 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Extended support for \"partially unbound\" variable detection to cases that involve comprehension and class scopes. This addresses #6685. (#6693)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211001ac254a19ac2905a7",
    "number": 6692,
    "body": "…t narrowing of tuple subject types based on sequence subpatterns. This addresses #6691.",
    "head_branch": "issue6691",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Enhanced type narrowing logic for sequence pattern matching to support narrowing of tuple subject types based on sequence subpatterns. This addresses #6691. (#6692)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211002ac254a19ac2905a8",
    "number": 6688,
    "body": "Thanks to @insilications for pointing this out in https://github.com/microsoft/pyright/pull/6683",
    "head_branch": "rchiodo-patch-1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Another case where background is sent incorrect URI (#6688)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211003ac254a19ac2905a9",
    "number": 6683,
    "body": "Fixes additional `Uri` conversion problems for the background thread, specifically `DiagnosticRelatedInfo`, which was missed in #6678 after the implementation of the `Uri` class (#6519).",
    "head_branch": "patched",
    "is_a_fork": true,
    "comments": [
      "@microsoft-github-policy-service agree",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "It seems that this also needs a `fileUri: fileUri.toString()` conversion as well. I will test it later:\r\n\r\nhttps://github.com/microsoft/pyright/blob/a2e462e6b07d4299410350e288201d0034f81035/packages/pyright-internal/src/backgroundAnalysisBase.ts#L88 ",
      "> It seems that this also needs a `fileUri: fileUri.toString()` conversion as well. I will test it later:\r\n> \r\n> https://github.com/microsoft/pyright/blob/a2e462e6b07d4299410350e288201d0034f81035/packages/pyright-internal/src/backgroundAnalysisBase.ts#L88\r\n\r\nSorry I hit submit before reading this. I'll submit another PR with this change. I agree, this should be `toString`"
    ],
    "commit_messages": [
      "Fix additional URI conversion problems for background thread (#6683)\n\nFixes additional `Uri` conversion problems for the background thread, specifically `DiagnosticRelatedInfo`, which was missed in #6678 after the implementation of the `Uri` class (#6519)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211004ac254a19ac2905aa",
    "number": 6682,
    "body": "…super` is called within an inner function or lambda. This addresses #6093.",
    "head_branch": "issue6093",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to a false positive when a zero-argument form of `super` is called within an inner function or lambda. This addresses #6093. (#6682)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211005ac254a19ac2905ab",
    "number": 6680,
    "body": "… the new URI code when hover or \"go to declaration\" target a symbol those module couldn't be resolved.",
    "head_branch": "unresolvedModuleCrash",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a couple of code paths that crash (due to a failed assert) with… (#6680)\n\n* Fixed a couple of code paths that crash (due to a failed assert) with the new URI code when hover or \"go to declaration\" target a symbol those module couldn't be resolved.\r\n\r\n* Restored old (pre-URI) behavior for unresolved modules."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211005ac254a19ac2905ac",
    "number": 6678,
    "body": "Addresses #6676 \r\n\r\nThis really needs a BG test, but I was thinking I could do that when I write the tests for running the language server. ",
    "head_branch": "rchiodo/background_bug",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fix URI conversion problems for background thread (#6678)\n\n* Fix URI conversion problems for background thread\r\n\r\n* Fix prettier and simplify conversion of results"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211006ac254a19ac2905ad",
    "number": 6671,
    "body": "… cases of `str`, `bytes`, and `bytearray` were not handled correctly. This addresses #6670.",
    "head_branch": "issue6670",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug in narrowing logic for sequence pattern magic where special cases of `str`, `bytes`, and `bytearray` were not handled correctly. This addresses #6670. (#6671)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211007ac254a19ac2905ae",
    "number": 6662,
    "body": "…ide of an attribute access expression. It now employs a heuristic whereby it evaluates to the next base class of the bound type. This addresses #6660.",
    "head_branch": "issue6660-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/builder.py:535:17 - error: Cannot access member \"setup_build_environment\" for type \"Sequence[Unknown]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/builder.py:535:17 - error: Cannot access member \"setup_build_environment\" for type \"object\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/builder.py:568:17 - error: Cannot access member \"setup_dependent_build_environment\" for type \"Sequence[Unknown]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/builder.py:568:17 - error: Cannot access member \"setup_dependent_build_environment\" for type \"object\"\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:893:32 - error: Cannot access member \"run\" for type \"object\"\n+     Member \"run\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:1408:17 - error: Cannot access member \"apply_transforms\" for type \"object\"\n+     Member \"apply_transforms\" is unknown (reportGeneralTypeIssues)\n- 20 errors, 37 warnings, 0 informations \n+ 22 errors, 37 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/trade.py:193:66 - warning: Unnecessary \"# type: ignore\" comment\n- 8397 errors, 24 warnings, 0 informations \n+ 8397 errors, 23 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed behavior of two-argument form of `super` when it is used outside of an attribute access expression. It now employs a heuristic whereby it evaluates to the next base class of the bound type. This addresses #6660. (#6662)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211008ac254a19ac2905af",
    "number": 6661,
    "body": "…ide of an attribute access expression. It now employs a heuristic whereby it evaluates to the next base class of the bound type. This addresses #6660.",
    "head_branch": "issue6660",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_uploader.py:31:52 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/log_writer.py:52:43 - error: No parameter named \"interval\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datastreams/processor.py:103:52 - error: No parameter named \"interval\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/llmobs/writer.py:45:44 - error: No parameter named \"interval\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/processor/stats.py:97:53 - error: No parameter named \"interval\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/remoteconfig/_subscribers.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/remoteconfig/_subscribers.py:24:26 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/remoteconfig/worker.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/remoteconfig/worker.py:32:50 - error: No parameter named \"interval\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/writer.py:181:47 - error: No parameter named \"interval\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/writer/writer.py:171:42 - error: No parameter named \"interval\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/test_forksafe.py:310:47 - error: No parameter named \"interval\" (reportGeneralTypeIssues)\n- 9566 errors, 447 warnings, 0 informations \n+ 9576 errors, 447 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:171:24 - error: Cannot access member \"__post_init__\" for type \"MessageBase\"\n+     Member \"__post_init__\" is unknown (reportGeneralTypeIssues)\n- 8397 errors, 24 warnings, 0 informations \n+ 8398 errors, 24 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211009ac254a19ac2905b0",
    "number": 6653,
    "body": "…ain circumstances involving certain code flow graph structures. This addresses #6645.",
    "head_branch": "issue6645-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/maintainers.py:73:47 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n- 4025 errors, 48 warnings, 0 informations \n+ 4026 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/setup.py:141:37 - error: Argument of type \"None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\"\n+     Type \"None\" cannot be assigned to type \"BytesPath\"\n+       \"None\" is incompatible with \"bytes\"\n+       \"None\" is incompatible with protocol \"PathLike[bytes]\"\n+         \"__fspath__\" is not present (reportGeneralTypeIssues)\n- 9563 errors, 447 warnings, 0 informations \n+ 9564 errors, 447 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:778:46 - warning: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:780:45 - warning: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:796:46 - warning: Unnecessary \"# type: ignore\" comment\n- 57 errors, 16 warnings, 0 informations \n+ 57 errors, 13 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that resulted in incorrect narrowed type evaluation in certain circumstances involving certain code flow graph structures. This addresses #6645. (#6653)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621100aac254a19ac2905b1",
    "number": 6652,
    "body": null,
    "head_branch": "issue6645",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/maintainers.py:73:47 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n- 4025 errors, 48 warnings, 0 informations \n+ 4026 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/setup.py:141:37 - error: Argument of type \"None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\"\n+     Type \"None\" cannot be assigned to type \"BytesPath\"\n+       \"None\" is incompatible with \"bytes\"\n+       \"None\" is incompatible with protocol \"PathLike[bytes]\"\n+         \"__fspath__\" is not present (reportGeneralTypeIssues)\n- 9563 errors, 447 warnings, 0 informations \n+ 9564 errors, 447 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:778:46 - warning: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:780:45 - warning: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:796:46 - warning: Unnecessary \"# type: ignore\" comment\n- 57 errors, 16 warnings, 0 informations \n+ 57 errors, 13 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621100bac254a19ac2905b2",
    "number": 6650,
    "body": "… `Callable` is used. This addresses #6648.",
    "head_branch": "issue6648",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to improper type narrowing for class patterns when `Callable` is used. This addresses #6648. (#6650)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621100cac254a19ac2905b3",
    "number": 6644,
    "body": "after the discussion in https://github.com/microsoft/pyright/issues/6633#issuecomment-1837113310 about adding this option to pylance, i decided to try adding it to the pyright extension instead.\r\n\r\nspecifically, it looks for the [pyright pipi package](https://pypi.org/project/pyright/) in the project and falls back to the bundled one if it can't be found.\r\n\r\ncurrently there are a couple issues however:\r\n\r\n- [ ] the setting currently requires the vscode window to be reloaded to take effect (`Developer: Reload Window`)\r\n- [ ] when i try to use my new `fromEnvironment` option, errors are not displayed, even though the language server from the pypi package seems to be running, and other language server commands such as organize imports seem to work:\r\n  ![image](https://github.com/microsoft/pyright/assets/57028336/9a6c4d1d-1c74-4913-9c22-05a3593c1c3f)\r\n  ![image](https://github.com/microsoft/pyright/assets/57028336/20ba4208-46e5-4b24-ab78-22795aeb1dfd)\r\n  \r\n  i can't see any errors in the log either:\r\n  ```\r\n  [Info  - 6:09:37 PM] Pyright language server 1.1.337 starting\r\n  [Info  - 6:09:37 PM] Server root directory: C:\\Users\\user\\.cache\\pyright-python\\1.1.337\\node_modules\\pyright\\dist\r\n  [Info  - 6:09:37 PM] Starting service instance \"project\"\r\n  Received pythonPath from Python extension: c:\\Users\\user\\Documents\\project\\.venv\\Scripts\\python.exe\r\n  [Info  - 6:09:42 PM] Setting pythonPath for service \"project\": \"c:\\Users\\user\\Documents\\project\\.venv\\Scripts\\python.exe\"\r\n  [Info  - 6:09:42 PM] Loading pyproject.toml file at C:\\Users\\user\\Documents\\project\\pyproject.toml\r\n  [Info  - 6:09:42 PM] Assuming Python version 3.12\r\n  [Info  - 6:09:42 PM] Found 671 source files\r\n  ```\r\n\r\n  any idea what could be causing this?\r\n",
    "head_branch": "importStrategy",
    "is_a_fork": true,
    "comments": [
      "I'm not interested in adding feature this to pyright, so I'm closing this PR.\r\n\r\nThe approach you're taking here is a big hack — not something we would support. Also, the pypi wrapper is a community-maintained piece of code, and we're not going to take a dependency on it. ",
      "> I'm not interested in adding feature this to pyright, so I'm closing this PR.\r\n\r\nwhy not? this seems like a pretty important feature, and every other python vscode extension i'm aware of supports it (mypy, pylint, black, flake8, ruff, etc.)\r\n\r\nwithout it, it's impossible to configure your project such that you're guaranteed to see the same type errors in your IDE as you are in the CI, because the version of pyright can only be pinned in the CI but not in vscode. this is a big problem imo and kind of a dealbreaker for me and my team who were considering switching from mypy to pyright.\r\n\r\n> The approach you're taking here is a big hack — not something we would support.\r\n\r\ni'd be happy to do it differently based on your feedback. this is my first contribution and i'm trying to familiarize myself with the project. closing it just saying it's a \"big hack\" instead of providing feedback isnt really helpful\r\n\r\n> Also, the pypi wrapper is a community-maintained piece of code, and we're not going to take a dependency on it.\r\n\r\nthis is another big problem imo. i have high hopes for pyright since it seems much faster and more stable than mypy, but i don't see it reaching mypy's popularity when it doesn't have an official pypi package (especially since the unofficial community one is quite unreliable too since it downloads node and installs the package on the spot the first time you run it). imo, being able to run a type checker in the CLI is an essential feature and should be officially supported",
      "Am I correct in assuming that you run your CI script on a server (e.g. as part of a GitHub action)? If so, then the only way to get 100% consistent results between your local dev environment and your CI is to pin the version of the type checker you're using in both places.\r\n\r\nPyright includes basic language server features, and we have historically published a VS Code extension for pyright, but we recommend against using this if you're a VS Code user. Instead, we recommend you use Pylance. We will not add any functionality in the Pyright VS Code extension that is not also available in Pylance, and in general, most new language server features are developed only in Pylance. Any solution of the sort you're proposing should be discussed and resolved with the Pylance team.",
      "> If so, then the only way to get 100% consistent results between your local dev environment and your CI is to pin the version of the type checker you're using in both places.\r\n\r\nthat's the problem. as far as i'm aware there's no actual way to pin the version used locally by vscode. the closest thing you can do to that is disable extension auto updates and have users manually install specific extension versions (https://github.com/microsoft/pylance-release/issues/5201#issuecomment-1839083165) which isn't ideal\r\n\r\n> Pyright includes basic language server features, and we have historically published a VS Code extension for pyright, but we recommend against using this if you're a VS Code user. Instead, we recommend you use Pylance. We will not add any functionality in the Pyright VS Code extension that is not also available in Pylance, and in general, most new language server features are developed only in Pylance. Any solution of the sort you're proposing should be discussed and resolved with the Pylance team.\r\n\r\ncurrently there's a message in [the pyright extension description that says \"For most VS Code users, we recommend using the Pylance extension rather than Pyright\"](https://marketplace.visualstudio.com/items?itemName=ms-pyright.pyright), but that seems to imply that there are reasons not to use pylance, and i figured this could potentially be added to that list of reasons.\r\n\r\nbut if that's not the case, is it fair to say that the pyright vscode extension is deprecated? in that case, i think the extension description should be updated to clearly say so"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621100cac254a19ac2905b4",
    "number": 6642,
    "body": "… for a variable whose type is narrowed within an inner loop. This addresses #6417.",
    "head_branch": "issue6417",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:951:38 - error: \"read\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2183:21 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2183:43 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"paths\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2227:21 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2227:43 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"paths\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2341:21 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2341:43 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"paths\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n- 4021 errors, 48 warnings, 0 informations \n+ 4028 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:514:40 - error: \"_suite_skipping_mode\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:526:40 - error: \"_should_skip_path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1280:38 - error: Argument of type \"float | str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1285:42 - error: Argument of type \"str | Unknown | object | float\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportGeneralTypeIssues)\n- 9555 errors, 443 warnings, 0 informations \n+ 9559 errors, 443 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:779:31 - error: Cannot access member \"parent\" for type \"GroupMixin[Any]\"\n-     Member \"parent\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:797:31 - error: Cannot access member \"parent\" for type \"GroupMixin[Any]\"\n-     Member \"parent\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:778:46 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:780:45 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:796:46 - warning: Unnecessary \"# type: ignore\" comment\n- 59 errors, 13 warnings, 0 informations \n+ 57 errors, 16 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/freqai_interface.py:870:58 - error: \"pair\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/freqai_interface.py:872:47 - error: Argument of type \"FreqaiDataKitchen | None\" cannot be assigned to parameter \"dk\" of type \"FreqaiDataKitchen\" in function \"fit_live_predictions\"\n+     Type \"FreqaiDataKitchen | None\" cannot be assigned to type \"FreqaiDataKitchen\"\n+       \"None\" is incompatible with \"FreqaiDataKitchen\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/freqai_interface.py:872:64 - error: \"pair\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 588 errors, 38 warnings, 0 informations \n+ 591 errors, 38 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug in the code flow engine that resulted in a false negative for a variable whose type is narrowed within an inner loop. This addresses #6417. (#6642)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621100dac254a19ac2905b5",
    "number": 6641,
    "body": "…es involving generic protocols and bound TypeVars. This addresses #6579.",
    "head_branch": "issue6579-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect type evaluation in certain cases involving generic protocols and bound TypeVars. This addresses #6579. (#6641)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621100eac254a19ac2905b6",
    "number": 6640,
    "body": "…es involving generic protocols and bound TypeVars. This addresses #6579.",
    "head_branch": "issue6579",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nrclip (https://github.com/yurijmikhalevich/rclip)\n+ /tmp/mypy_primer/projects/rclip/rclip/utils/snap.py\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/snap.py:11:9 - error: No overloads for \"scandir\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/snap.py:11:20 - error: Argument of type \"str\" cannot be assigned to parameter \"path\" of type \"GenericPath[AnyStr@scandir]\" in function \"scandir\"\n+     Type \"str\" cannot be assigned to type \"GenericPath[AnyStr@scandir]\"\n+       Type \"str\" is incompatible with constrained type variable \"AnyStr@_ScandirIterator\"\n+       \"str\" is incompatible with protocol \"PathLike[AnyStr@scandir]\"\n+         \"__fspath__\" is not present (reportGeneralTypeIssues)\n- 30 errors, 14 warnings, 0 informations \n+ 32 errors, 14 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1496:19 - error: No overloads for \"sorted\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1496:26 - error: No overloads for \"scandir\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1496:37 - error: Argument of type \"str\" cannot be assigned to parameter \"path\" of type \"GenericPath[AnyStr@scandir]\" in function \"scandir\"\n+     Type \"str\" cannot be assigned to type \"GenericPath[AnyStr@scandir]\"\n+       Type \"str\" is incompatible with constrained type variable \"AnyStr@_ScandirIterator\"\n+       \"str\" is incompatible with protocol \"PathLike[AnyStr@scandir]\"\n+         \"__fspath__\" is not present (reportGeneralTypeIssues)\n- 4023 errors, 48 warnings, 0 informations \n+ 4026 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-     \"list[List[Any] | Text]\" is incompatible with \"Sequence[tuple[SupportsRichComparisonT@commonprefix, ...]]\"\n+     \"list[List[Any] | Text]\" is incompatible with \"Sequence[tuple[Unknown, ...]]\"\n-       Type parameter \"_T_co@Sequence\" is covariant, but \"List[Any] | Text\" is not a subtype of \"tuple[SupportsRichComparisonT@commonprefix, ...]\"\n+       Type parameter \"_T_co@Sequence\" is covariant, but \"List[Any] | Text\" is not a subtype of \"tuple[Unknown, ...]\"\n-         Type \"List[Any] | Text\" cannot be assigned to type \"tuple[SupportsRichComparisonT@commonprefix, ...]\"\n+         Type \"List[Any] | Text\" cannot be assigned to type \"tuple[Unknown, ...]\"\n-           \"Text\" is incompatible with \"tuple[SupportsRichComparisonT@commonprefix, ...]\" (reportGeneralTypeIssues)\n+           \"Text\" is incompatible with \"tuple[Unknown, ...]\" (reportGeneralTypeIssues)\n-     \"Set[int]\" is incompatible with protocol \"_GetItemIterable[_T@iter]\"\n+     \"Set[int]\" is incompatible with protocol \"_GetItemIterable[Unknown]\"\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:484:56 - error: Cannot access member \"position\" for type \"object*\"\n+     Member \"position\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:484:82 - error: Cannot access member \"id\" for type \"object*\"\n+     Member \"id\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:484:44 - warning: Argument type is partially unknown\n-     Argument corresponds to parameter \"key\" in function \"sorted\"\n-     Argument type is \"(r: Unknown) -> Unknown\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:484:26 - warning: Argument type is partially unknown\n-     Argument corresponds to parameter \"__object\" in function \"iter\"\n-     Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:484:21 - warning: Argument type is partially unknown\n-     Argument corresponds to parameter \"__i\" in function \"next\"\n-     Argument type is \"Iterator[Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:484:51 - warning: Type of parameter \"r\" is unknown (reportUnknownLambdaType)\n- 2381 errors, 10546 warnings, 0 informations \n+ 2383 errors, 10542 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621100fac254a19ac2905b7",
    "number": 6638,
    "body": "…teral arguments. This addresses #6635.",
    "head_branch": "issue6635",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Enhanced support for TypeVarTuple capture of a callable to support literal arguments. This addresses #6635. (#6638)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211010ac254a19ac2905b8",
    "number": 6637,
    "body": "…ment is applied to a class member implemented with a descriptor. This addresses #6636.",
    "head_branch": "issue6636",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that resulted in incorrect type evaluation when `del` statement is applied to a class member implemented with a descriptor. This addresses #6636. (#6637)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211011ac254a19ac2905b9",
    "number": 6631,
    "body": "…hen used with a type alias defined with forward references. This addresses #6629.",
    "head_branch": "issue6629-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to incorrect type evaluation with unary operator when used with a type alias defined with forward references. This addresses #6629. (#6631)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211012ac254a19ac2905ba",
    "number": 6630,
    "body": null,
    "head_branch": "issue6629",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211013ac254a19ac2905bb",
    "number": 6627,
    "body": "…ict\" but a superset of \"basic\". It is the new default mode, and it should cover all of the required checks for conformance with the Python typing standard. This addresses #66607.",
    "head_branch": "issue6607",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nmypy-protobuf (https://github.com/dropbox/mypy-protobuf)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/test_grpc_async_usage.py:26:15 - error: Method \"StreamUnary\" overrides class \"DummyServiceServicer\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"request_iterator\", override parameter is named \"request\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/test_grpc_async_usage.py:34:15 - error: Method \"StreamStream\" overrides class \"DummyServiceServicer\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"request_iterator\", override parameter is named \"request\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/test_grpc_usage.py:26:9 - error: Method \"StreamUnary\" overrides class \"DummyServiceServicer\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"request_iterator\", override parameter is named \"request\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/test_grpc_usage.py:33:9 - error: Method \"StreamStream\" overrides class \"DummyServiceServicer\" in an incompatible manner\n+     Parameter 2 name mismatch: base parameter is named \"request_iterator\", override parameter is named \"request\" (reportIncompatibleMethodOverride)\n- 17 errors, 24 warnings, 0 informations \n+ 21 errors, 24 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/main.py:167:14 - error: Cannot assign member \"__pydantic_base_init__\" for type \"function\"\n+     Member \"__pydantic_base_init__\" is unknown (reportFunctionMemberAccess)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/root_model.py:65:14 - error: Cannot assign member \"__pydantic_base_init__\" for type \"function\"\n+     Member \"__pydantic_base_init__\" is unknown (reportFunctionMemberAccess)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/root_model.py:68:9 - error: Method \"model_construct\" overrides class \"BaseModel\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"set[str] | None\", override parameter is type \"RootModelRootType@RootModel\"\n+     Parameter 2 mismatch: base parameter has default argument value, override parameter does not\n+     Parameter \"**values\" has no corresponding parameter\n+       Type \"set[str] | None\" cannot be assigned to type \"RootModelRootType@RootModel\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/root_model.py:113:13 - error: Method \"model_dump\" overrides class \"BaseModel\" in an incompatible manner\n+     Return type mismatch: base method returns type \"dict[str, Any]\", override returns type \"RootModelRootType@RootModel\"\n+       \"object*\" is incompatible with \"dict[str, Any]\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/type_adapter.py:125:13 - error: Overload 2 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/type_adapter.py:142:13 - error: Overload 2 for \"__init__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators.py:191:26 - error: Cannot access member \"__set_name__\" for type \"function\"\n+     Member \"__set_name__\" is unknown (reportFunctionMemberAccess)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1993:56 - error: Cannot access member \"__func__\" for type \"function\"\n+     Member \"__func__\" is unknown (reportFunctionMemberAccess)\n- 52 errors, 0 warnings, 0 informations \n+ 60 errors, 0 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n+ /tmp/mypy_primer/projects/pandera/pandera/dtypes.py\n+   /tmp/mypy_primer/projects/pandera/pandera/dtypes.py:407:5 - error: \"exact\" overrides symbol of same name in class \"_Number\"\n+     Variable is mutable so its type is invariant\n+       Override type \"bool\" is not the same as base type \"bool | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/dtypes.py:408:5 - error: \"continuous\" overrides symbol of same name in class \"DataType\"\n+     Variable is mutable so its type is invariant\n+       Override type \"bool\" is not the same as base type \"bool | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/components.py:312:9 - error: Method \"strategy\" overrides class \"ArraySchema\" in an incompatible manner\n+     Keyword parameter \"size\" type mismatch: base parameter is type \"Unknown | None\", override parameter is type \"int\"\n+       Type \"Unknown | None\" cannot be assigned to type \"int\"\n+         \"None\" is incompatible with \"int\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/components.py:337:9 - error: Method \"example\" overrides class \"ArraySchema\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"Unknown | None\", override parameter is type \"int\"\n+       Type \"Unknown | None\" cannot be assigned to type \"int\"\n+         \"None\" is incompatible with \"int\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:167:17 - error: \"Config\" overrides symbol of same name in class \"BaseModel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"type[BaseConfig]\" is not the same as base type \"type[BaseModelConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:179:13 - error: \"__config__\" overrides symbol of same name in class \"BaseModel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"type[BaseConfig] | None\" is not the same as base type \"type[BaseModelConfig] | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:236:13 - error: \"__fields__\" overrides symbol of same name in class \"BaseModel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Mapping[str, Tuple[AnnotationInfo, FieldInfo]]\" is not the same as base type \"Mapping[str, Tuple[AnnotationInfo, BaseFieldInfo]]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/model.py:158:17 - error: \"Config\" overrides symbol of same name in class \"BaseModel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"type[BaseConfig]\" is not the same as base type \"type[BaseModelConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/model.py:169:13 - error: \"__config__\" overrides symbol of same name in class \"BaseModel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"type[BaseConfig] | None\" is not the same as base type \"type[BaseModelConfig] | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/model.py:221:13 - error: \"__fields__\" overrides symbol of same name in class \"BaseModel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Mapping[str, Tuple[AnnotationInfo, FieldInfo]]\" is not the same as base type \"Mapping[str, Tuple[AnnotationInfo, BaseFieldInfo]]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/base.py:110:9 - error: Method \"failure_cases_metadata\" overrides class \"BaseSchemaBackend\" in an incompatible manner\n+     Parameter 3 type mismatch: base parameter is type \"List[SchemaError]\", override parameter is type \"List[Dict[str, Any]]\"\n+       \"List[SchemaError]\" is incompatible with \"List[Dict[str, Any]]\"\n+         Type parameter \"_T@list\" is invariant, but \"SchemaError\" is not the same as \"Dict[str, Any]\"\n+         Consider switching from \"list\" to \"Sequence\" which is covariant (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/checks.py:64:9 - error: Method \"preprocess\" overrides class \"BaseCheckBackend\" in an incompatible manner\n+     Positional parameter count mismatch; base method has 3, but override has 2 (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/column.py:96:9 - error: Method \"coerce_dtype\" overrides class \"BaseSchemaBackend\" in an incompatible manner\n+     Positional parameter count mismatch; base method has 3, but override has 3 (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/column.py:212:9 - error: Method \"run_checks\" overrides class \"BaseSchemaBackend\" in an incompatible manner\n+     Positional parameter count mismatch; base method has 3, but override has 5 (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/container.py:189:9 - error: Method \"run_schema_component_checks\" overrides class \"BaseSchemaBackend\" in an incompatible manner\n+     Positional parameter count mismatch; base method has 4, but override has 5 (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/container.py:220:9 - error: Method \"run_checks\" overrides class \"BaseSchemaBackend\" in an incompatible manner\n+     Positional parameter count mismatch; base method has 3, but override has 4 (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/container.py:397:9 - error: Method \"coerce_dtype\" overrides class \"BaseSchemaBackend\" in an incompatible manner\n+     Positional parameter count mismatch; base method has 3, but override has 4 (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandera/pandera/schema_inference/pandas.py:18:5 - error: Overload 1 for \"infer_schema\" overlaps overload 2 and returns an incompatible type (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:587:11 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:604:11 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:805:15 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:811:15 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:817:15 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_decorators.py:966:15 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_extensions.py:257:15 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_from_to_format_conversions.py:21:11 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_from_to_format_conversions.py:26:11 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_from_to_format_conversions.py:31:11 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_from_to_format_conversions.py:36:11 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n+     Type \"type[Config]\" cannot be assigned to type \"type[BaseConfig]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_from_to_format_conversions.py:42:11 - error: \"Config\" overrides symbol of same name in class \"DataFrameModel\"\n+     \"type[Config]\" is incompatible with \"type[BaseConfig]\"\n\n... (truncated 178 lines) ...\n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lang.py:1030:9 - error: Method \"insert\" overrides class \"MutableSequence\" in an incompatible manner\n+     Parameter 3 name mismatch: base parameter is named \"value\", override parameter is named \"item\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:79:9 - error: Method \"before_visit_dir\" overrides class \"BaseDirectoryVisitor\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Literal[False]\", override returns type \"bool\"\n+       \"bool\" cannot be assigned to type \"Literal[False]\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:107:9 - error: Method \"before_visit_symlinked_dir\" overrides class \"BaseDirectoryVisitor\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Literal[False]\", override returns type \"bool\"\n+       \"bool\" cannot be assigned to type \"Literal[False]\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py:217:9 - error: Method \"before_visit_dir\" overrides class \"BaseDirectoryVisitor\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Literal[False]\", override returns type \"bool\"\n+       \"bool\" cannot be assigned to type \"Literal[False]\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:684:9 - error: Method \"before_visit_dir\" overrides class \"BaseDirectoryVisitor\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Literal[False]\", override returns type \"bool\"\n+       \"bool\" cannot be assigned to type \"Literal[False]\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1262:9 - error: Method \"read\" overrides class \"BufferedIOBase\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"int | None\", override parameter is type \"int\"\n+       Type \"int | None\" cannot be assigned to type \"int\"\n+         \"None\" is incompatible with \"int\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1303:9 - error: Method \"seek\" overrides class \"IOBase\" in an incompatible manner\n+     Return type mismatch: base method returns type \"int\", override returns type \"None\"\n+       \"None\" is incompatible with \"int\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1310:9 - error: Method \"readline\" overrides class \"IOBase\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"int | None\", override parameter is type \"int\"\n+       Type \"int | None\" cannot be assigned to type \"int\"\n+         \"None\" is incompatible with \"int\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1461:9 - error: Method \"__reduce__\" overrides class \"SpackError\" in an incompatible manner\n+     Return type mismatch: base method returns type \"tuple[type[Self@SpackError], tuple[Unknown, Unknown | None]]\", override returns type \"tuple[(msg: Unknown, module: Unknown, name: Unknown, traceback: Unknown, log: Unknown, log_type: Unknown, context: Unknown) -> ChildError, tuple[Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, Unknown]]\"\n+       \"tuple[(msg: Unknown, module: Unknown, name: Unknown, traceback: Unknown, log: Unknown, log_type: Unknown, context: Unknown) -> ChildError, tuple[Unknown, Unknown, Unknown, Unknown, Unknown, Unknown, Unknown]]\" is incompatible with \"tuple[type[Self@SpackError], tuple[Unknown, Unknown | None]]\"\n+         Tuple entry 1 is incorrect type\n+           Type \"(msg: Unknown, module: Unknown, name: Unknown, traceback: Unknown, log: Unknown, log_type: Unknown, context: Unknown) -> ChildError\" cannot be assigned to type \"type[Self@SpackError]\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1552:9 - error: Method \"__setattr__\" overrides class \"object\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"AttributeError | None\"\n+       Type \"AttributeError | None\" cannot be assigned to type \"None\"\n+         \"AttributeError\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:217:9 - error: Method \"fetch\" overrides class \"FetchStrategy\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Literal[True]\"\n+       \"Literal[True]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:222:9 - error: \"cachable\" incorrectly overrides property of same name in class \"FetchStrategy\"\n+     Property method \"fget\" is incompatible\n+       Return type mismatch: base method returns type \"None\", override returns type \"Literal[False]\"\n+         \"Literal[False]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:421:9 - error: \"cachable\" incorrectly overrides property of same name in class \"FetchStrategy\"\n+     Property method \"fget\" is incompatible\n+       Return type mismatch: base method returns type \"None\", override returns type \"bool\"\n+         \"bool\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:502:9 - error: Method \"__str__\" overrides class \"FetchStrategy\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Literal['FetchStrategy.__str___']\", override returns type \"Unknown | Literal['[no url]']\"\n+       Type \"Unknown | Literal['[no url]']\" cannot be assigned to type \"Literal['FetchStrategy.__str___']\"\n+         \"Literal['[no url]']\" cannot be assigned to type \"Literal['FetchStrategy.__str___']\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:684:9 - error: Method \"archive\" overrides class \"VCSFetchStrategy\" in an incompatible manner\n+     Parameter \"**kwargs\" has no corresponding parameter (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:786:9 - error: \"cachable\" incorrectly overrides property of same name in class \"FetchStrategy\"\n+     Property method \"fget\" is incompatible\n+       Return type mismatch: base method returns type \"None\", override returns type \"bool\"\n+         \"bool\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:954:9 - error: Method \"archive\" overrides class \"VCSFetchStrategy\" in an incompatible manner\n+     Parameter \"**kwargs\" has no corresponding parameter (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1019:9 - error: \"cachable\" incorrectly overrides property of same name in class \"FetchStrategy\"\n+     Property method \"fget\" is incompatible\n+       Return type mismatch: base method returns type \"None\", override returns type \"bool\"\n+         \"bool\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1083:9 - error: Method \"archive\" overrides class \"VCSFetchStrategy\" in an incompatible manner\n+     Parameter \"**kwargs\" has no corresponding parameter (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1133:9 - error: \"cachable\" incorrectly overrides property of same name in class \"FetchStrategy\"\n+     Property method \"fget\" is incompatible\n+       Return type mismatch: base method returns type \"None\", override returns type \"bool\"\n+         \"bool\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1178:9 - error: Method \"archive\" overrides class \"VCSFetchStrategy\" in an incompatible manner\n+     Parameter \"**kwargs\" has no corresponding parameter (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1244:9 - error: \"cachable\" incorrectly overrides property of same name in class \"FetchStrategy\"\n+     Property method \"fget\" is incompatible\n+       Return type mismatch: base method returns type \"None\", override returns type \"bool\"\n+         \"bool\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1283:9 - error: Method \"archive\" overrides class \"VCSFetchStrategy\" in an incompatible manner\n+     Parameter \"**kwargs\" has no corresponding parameter (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/graph.py:493:9 - error: Method \"edge_entry\" overrides class \"DotGraphBuilder\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Tuple[str, str, str]\", override returns type \"tuple[Unknown | str | Any, Unknown | str | Any, None]\"\n+       \"tuple[Unknown | str | Any, Unknown | str | Any, None]\" is incompatible with \"Tuple[str, str, str]\"\n+         Tuple entry 3 is incorrect type\n+           \"None\" is incompatible with \"str\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/graph.py:500:9 - error: Method \"node_entry\" overrides class \"DotGraphBuilder\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Tuple[str, str]\", override returns type \"tuple[Unknown | None, str]\"\n+       \"tuple[Unknown | None, str]\" is incompatible with \"Tuple[str, str]\"\n+         Tuple entry 1 is incorrect type\n+           Type \"Unknown | None\" cannot be assigned to type \"str\"\n\n... (truncated 612 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/appsec_iast_propagation/scenario.py:71:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/di_utils.py\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/di_utils.py:9:9 - error: Method \"enable\" overrides class \"Debugger\" in an incompatible manner\n+     Positional parameter count mismatch; base method has 2, but override has 1 (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/benchmarks/ddtrace_run/scenario.py\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/ddtrace_run/scenario.py:17:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/benchmarks/django_simple/scenario.py\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/django_simple/scenario.py:11:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/benchmarks/encoder/scenario.py\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/encoder/scenario.py:14:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/benchmarks/flask_simple/scenario.py\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/flask_simple/scenario.py:15:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/benchmarks/flask_sqli/scenario.py\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/flask_sqli/scenario.py:15:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/benchmarks/http_propagation_extract/scenario.py\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/http_propagation_extract/scenario.py:29:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/benchmarks/http_propagation_inject/scenario.py\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/http_propagation_inject/scenario.py:14:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/otel_span/scenario.py:26:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/sampling_rule_matches/scenario.py:33:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/set_http_meta/scenario.py:57:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/span/scenario.py:17:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(loops: Unknown) -> None, Any, None]\"\n+       \"Generator[(loops: Unknown) -> None, Any, None]\" is incompatible with \"None\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/dd-trace-py/benchmarks/threading/scenario.py\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/threading/scenario.py:46:9 - error: Method \"run\" overrides class \"Scenario\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Generator[(int) -> None, None, None]\"\n\n... (truncated 164 lines) ...```",
      "#6607"
    ],
    "commit_messages": [
      "Added a new typeCheckingMode called \"standard\". It's a subset of \"strict\" but a superset of \"basic\". It is the new default mode, and it should cover all of the required checks for conformance with the Python typing standard. This addresses #66607. (#6627)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211014ac254a19ac2905bc",
    "number": 6625,
    "body": "There's a couple of **typos** in the **Spanish localization** that change the meaning of the addressed error.\r\n\r\nIn Spanish, when you say \"_No se tiene acceso_ ...\" or \"_No se puede acceder_ ...\" there's some kind permission implied. You are really saying \"You're not allowed to ...\".\r\n\r\nHowever, the translated variables refer to \"lack of access to ...\". I suggest changing the translation in accordance with the rest of the variables of the \"_unaccessed_\" type.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@microsoft-github-policy-service agree",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Thanks for the contribution!"
    ],
    "commit_messages": [
      "Update package.nls.es.json (#6625)\n\nFixed a couple of typos in Spanish localization."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211014ac254a19ac2905bd",
    "number": 6623,
    "body": "…h an indeterminate number of positional parameters because some of them have default arguments. This addresses #6613.",
    "head_branch": "issue6613",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for `*args: *Ts` parameter that captures a callable with an indeterminate number of positional parameters because some of them have default arguments. This addresses #6613. (#6623)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211015ac254a19ac2905be",
    "number": 6621,
    "body": "…atement is used within a context manager that swallows exceptions. This addresses #6620.",
    "head_branch": "issue6620",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that results in incorrect type evaluation when a `raise` statement is used within a context manager that swallows exceptions. This addresses #6620. (#6621)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211016ac254a19ac2905bf",
    "number": 6618,
    "body": "…ortGeneralTypeIssue to reportIncompatibleVariableOverride for consistency. Added checks for Required/NotRequired and Readonly incompatibilities in the multiple inheritance case.\r\n\r\nThis addresses #6589.",
    "head_branch": "issue6589",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/models.py:170:7 - error: Base classes for class \"User\" define variable \"_state\" in incompatible way (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/models.py:174:7 - error: Base classes for class \"ClientUser\" define variable \"_state\" in incompatible way (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/models.py:194:7 - error: Base classes for class \"MatchPlayer\" define variable \"_state\" in incompatible way (reportIncompatibleVariableOverride)\n- 8393 errors, 24 warnings, 0 informations \n+ 8396 errors, 24 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Moved checks for Required/NotRequired and ReadOnly overrides from reportGeneralTypeIssue to reportIncompatibleVariableOverride for consistency. Added checks for Required/NotRequired and Readonly incompatibilities in the multiple inheritance case. (#6618)\n\nThis addresses #6589."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211017ac254a19ac2905c0",
    "number": 6608,
    "body": "…e `reportUnknown...` family) to not report a partially-unknown type if it refers to an unspecialized class. This addresses #6582.",
    "head_branch": "issue6582",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/moves.py:56:16 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/removals.py:243:12 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/updating.py:66:16 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/appsec/test_processor.py:173:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/appsec/test_processor.py:197:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/appsec/test_processor.py:310:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/appsec/test_processor.py:328:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:502:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:510:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:518:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:524:6 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec_snapshots.py:63:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec_snapshots.py:80:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec_snapshots.py:97:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec_snapshots.py:122:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec_snapshots.py:155:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:65:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:74:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:91:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:121:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:224:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:240:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:251:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:260:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:273:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:288:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:302:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_snapshots.py:307:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/elasticsearch/test_async.py:63:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/elasticsearch/test_async.py:68:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/elasticsearch/test_async.py:73:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/elasticsearch/test_elasticsearch_multi.py:51:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/elasticsearch/test_elasticsearch_multi.py:56:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/fastapi/test_fastapi.py:340:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/fastapi/test_fastapi.py:567:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/fastapi/test_fastapi.py:573:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/fastapi/test_fastapi.py:584:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/fastapi/test_fastapi.py:635:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask_login/test_flask_login_appsec.py:106:65 - error: Argument of type \"int\" cannot be assigned to parameter \"user_id\" of type \"str | None\" in function \"track_user_login_failure_event\"\n+     Type \"int\" cannot be assigned to type \"str | None\"\n+       \"int\" is incompatible with \"str\"\n+       \"int\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/graphql/test_graphql.py:88:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/graphql/test_graphql.py:96:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/graphql/test_graphql.py:109:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/graphql/test_graphql.py:118:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/graphql/test_graphql.py:126:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/graphql/test_graphql.py:133:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/graphql/test_graphql.py:145:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc/test_grpc.py:797:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/mariadb/test_mariadb.py:214:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/mariadb/test_mariadb.py:223:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/mariadb/test_mariadb.py:231:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/mariadb/test_mariadb.py:241:2 - error: Arguments missing for parameters \"instance\", \"args\", \"kwargs\" (reportGeneralTypeIssues)\n\n... (truncated 85 lines) ...\n\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:43:1 - error: Type of \"AnyF\" is partially unknown\n-     Type of \"AnyF\" is \"type[(...) -> Any] | type[staticmethod[Any, Unknown]] | type[classmethod[Any, ..., Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_wiring.py:15:1 - error: Type of \"AnyF\" is partially unknown\n-     Type of \"AnyF\" is \"type[(...) -> Any] | type[staticmethod[Any, Unknown]] | type[classmethod[Any, ..., Unknown]]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_class.py:400:64 - warning: Unnecessary \"# pyright: ignore\" comment\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_class.py:401:63 - warning: Unnecessary \"# pyright: ignore\" comment\n- 711 errors, 31 warnings, 0 informations \n+ 709 errors, 33 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:239:9 - warning: Type of \"func\" is partially unknown\n-     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:281:9 - warning: Type of \"func\" is partially unknown\n-     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:323:9 - warning: Type of \"func\" is partially unknown\n-     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:369:9 - warning: Type of \"func\" is partially unknown\n-     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataset.py:240:9 - warning: Type of \"func\" is partially unknown\n-     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataset.py:282:9 - warning: Type of \"func\" is partially unknown\n-     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataset.py:324:9 - warning: Type of \"func\" is partially unknown\n-     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataset.py:370:9 - warning: Type of \"func\" is partially unknown\n-     Type of \"func\" is \"partial[Unknown]\" (reportUnknownVariableType)\n- 55 errors, 150 warnings, 0 informations \n+ 55 errors, 142 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2883:53 - error: Type of \"cm\" is partially unknown\n-     Type of \"cm\" is \"_AssertRaisesContext[ExecError[Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2885:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2886:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2887:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2888:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:150:53 - error: Type of \"cm\" is partially unknown\n-     Type of \"cm\" is \"_AssertRaisesContext[ExecError[Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:153:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:166:53 - error: Type of \"cm\" is partially unknown\n-     Type of \"cm\" is \"_AssertRaisesContext[ExecError[Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:169:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:170:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:171:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_testing.py:5161:53 - error: Type of \"exc\" is partially unknown\n-     Type of \"exc\" is \"_AssertRaisesContext[ExecError[Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/operator/test/test_testing.py:5163:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n- 58 errors, 0 warnings, 0 informations \n+ 45 errors, 0 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:276:5 - warning: Type of \"_ChannelTypeIsh\" is partially unknown\n-     Type of \"_ChannelTypeIsh\" is \"type[type[Unknown]] | type[int]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:482:33 - warning: Type of \"SfGuildBound\" is partially unknown\n-     Type of \"SfGuildBound\" is \"type[GuildBoundCache[Unknown, _ValueT@SfGuildBound]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:164:1 - warning: Type of \"_MENU_TYPES\" is partially unknown\n-     Type of \"_MENU_TYPES\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:398:16 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:398:1 - warning: Type of \"_EmojiCacheT\" is partially unknown\n-     Type of \"_EmojiCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:614:17 - warning: Type of \"SfGuildBound\" is partially unknown\n-     Type of \"SfGuildBound\" is \"type[GuildBoundCache[Unknown, _ValueT@SfGuildBound]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:614:1 - warning: Type of \"_MemberCacheT\" is partially unknown\n-     Type of \"_MemberCacheT\" is \"type[GuildBoundCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:796:15 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:796:1 - warning: Type of \"_UserCacheT\" is partially unknown\n-     Type of \"_UserCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:744:15 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:744:1 - warning: Type of \"_RoleCacheT\" is partially unknown\n-     Type of \"_RoleCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:234:23 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:234:1 - warning: Type of \"_GuildChannelCacheT\" is partially unknown\n-     Type of \"_GuildChannelCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:233:13 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:233:1 - warning: Type of \"_DmCacheT\" is partially unknown\n-     Type of \"_DmCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:235:17 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:235:1 - warning: Type of \"_ThreadCacheT\" is partially unknown\n-     Type of \"_ThreadCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:464:16 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:464:1 - warning: Type of \"_GuildCacheT\" is partially unknown\n-     Type of \"_GuildCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:518:1 - warning: Type of \"_InviteCacheT\" is partially unknown\n-     Type of \"_InviteCacheT\" is \"type[AsyncCache[str, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:687:19 - warning: Type of \"SfGuildBound\" is partially unknown\n-     Type of \"SfGuildBound\" is \"type[GuildBoundCache[Unknown, _ValueT@SfGuildBound]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:687:1 - warning: Type of \"_PresenceCacheT\" is partially unknown\n-     Type of \"_PresenceCacheT\" is \"type[GuildBoundCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:851:18 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:851:1 - warning: Type of \"_MessageCacheT\" is partially unknown\n-     Type of \"_MessageCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:904:21 - warning: Type of \"SfGuildBound\" is partially unknown\n-     Type of \"SfGuildBound\" is \"type[GuildBoundCache[Unknown, _ValueT@SfGuildBound]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:904:1 - warning: Type of \"_VoiceStateCacheT\" is partially unknown\n-     Type of \"_VoiceStateCacheT\" is \"type[GuildBoundCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1037:13 - warning: Type of \"results\" is partially unknown\n-     Type of \"results\" is \"filter[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1038:13 - warning: Type of \"other_ids_iter\" is partially unknown\n-     Type of \"other_ids_iter\" is \"map[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1039:53 - warning: Argument type is partially unknown\n-     Argument corresponds to parameter \"__iterable\" in function \"__new__\"\n-     Argument type is \"map[Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:83:35 - warning: Argument type is partially unknown\n-     Argument corresponds to parameter \"__iterable\" in function \"__new__\"\n-     Argument type is \"map[Unknown | None]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:172:16 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:172:1 - warning: Type of \"_GuildCacheT\" is partially unknown\n-     Type of \"_GuildCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:173:15 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:173:1 - warning: Type of \"_RoleCacheT\" is partially unknown\n-     Type of \"_RoleCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:174:19 - warning: Type of \"SfGuildBound\" is partially unknown\n-     Type of \"SfGuildBound\" is \"type[GuildBoundCache[Unknown, _ValueT@SfGuildBound]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:174:1 - warning: Type of \"_GuldRoleCacheT\" is partially unknown\n-     Type of \"_GuldRoleCacheT\" is \"type[GuildBoundCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:356:1 - warning: Type of \"SUB_COMMAND_OPTION_TYPES\" is partially unknown\n-     Type of \"SUB_COMMAND_OPTION_TYPES\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/cache.py:45:18 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/cache.py:45:1 - warning: Type of \"_ChannelCacheT\" is partially unknown\n-     Type of \"_ChannelCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/cache.py:46:17 - warning: Type of \"SfCache\" is partially unknown\n-     Type of \"SfCache\" is \"type[AsyncCache[Unknown, _ValueT@SfCache]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/cache.py:46:1 - warning: Type of \"_ThreadCacheT\" is partially unknown\n-     Type of \"_ThreadCacheT\" is \"type[AsyncCache[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/cache.py:47:1 - warning: Type of \"_THREAD_CHANNEL_TYPES\" is partially unknown\n-     Type of \"_THREAD_CHANNEL_TYPES\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py:327:1 - warning: Type of \"_VALID_TYPES\" is partially unknown\n-     Type of \"_VALID_TYPES\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py:56:1 - warning: Type of \"_VALID_TYPES\" is partially unknown\n-     Type of \"_VALID_TYPES\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py:68:1 - warning: Type of \"_SnowflakeOptions\" is partially unknown\n-     Type of \"_SnowflakeOptions\" is \"frozenset[Unknown]\" (reportUnknownVariableType)\n\n... (truncated 96 lines) ...\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/utils.py:702:46 - error: Type of \"islice\" is partially unknown\n-     Type of \"islice\" is \"type[islice[Unknown]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:247:42 - error: Type of \"Greedy\" is partially unknown\n-     Type of \"Greedy\" is \"type[Greedy[Unknown]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:415:53 - error: Type of \"Greedy\" is partially unknown\n-     Type of \"Greedy\" is \"type[Greedy[Unknown]]\" (reportUnknownMemberType)\n- 8396 errors, 24 warnings, 0 informations \n+ 8393 errors, 24 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed behavior of `reportUnknownMemberType` (and other checks in the `reportUnknown...` family) to not report a partially-unknown type if it refers to an unspecialized class. This addresses #6582. (#6608)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211018ac254a19ac2905c1",
    "number": 6606,
    "body": "…ype` or `type[Any]` is not considered type compatible with `Callable`. This addresses #6600.",
    "head_branch": "issue6600-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:611:9 - error: Type of \"dependency\" is partially unknown\n-     Type of \"dependency\" is \"LazyValue[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:618:42 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"dependency\" in function \"set_default\"\n-     Argument type is \"LazyValue[object] | LazyValue[Unknown]\" (reportUnknownArgumentType)\n- 713 errors, 31 warnings, 0 informations \n+ 711 errors, 31 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:241:14 - error: Argument of type \"Unknown | type | Any\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n+     Type \"Unknown | type | Any\" cannot be assigned to type \"FunctionType\"\n+       \"type\" is incompatible with \"FunctionType\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:264:16 - error: Argument of type \"Unknown | type | Any\" cannot be assigned to parameter \"wf\" of type \"WrappedFunction\" in function \"unwrap\"\n+     Type \"Unknown | type | Any\" cannot be assigned to type \"WrappedFunction\"\n+       \"type\" is incompatible with protocol \"WrappedFunction\"\n+         \"__dd_wrapped__\" is not present\n+         \"__dd_wrappers__\" is not present (reportGeneralTypeIssues)\n- 9300 errors, 443 warnings, 0 informations \n+ 9302 errors, 443 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:81:34 - error: Argument of type \"type | ((...) -> Any) | _Wrapper\" cannot be assigned to parameter \"__object\" of type \"_Wrapper\" in function \"append\"\n-     Type \"type | ((...) -> Any) | _Wrapper\" cannot be assigned to type \"_Wrapper\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:92:23 - error: Argument of type \"type | ((...) -> Any)\" cannot be assigned to parameter of type \"(...) -> Any\"\n-     Type \"type | ((...) -> Any)\" cannot be assigned to type \"(...) -> Any\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:99:35 - error: Argument of type \"type | ((...) -> Any)\" cannot be assigned to parameter \"__func\" of type \"(...) -> _T@partial\" in function \"__new__\"\n-     Type \"type | ((...) -> Any)\" cannot be assigned to type \"(...) -> _T@partial\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/_utils/coerce.py:115:29 - error: Argument of type \"type[Any]* | _T@coerce_sequences\" cannot be assigned to parameter \"obj\" of type \"_IntrospectableCallable\" in function \"signature\"\n-     Type \"type[Any]* | ((...) -> Unknown)\" cannot be assigned to type \"_IntrospectableCallable\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/_utils/coerce.py:181:12 - error: Argument of type \"type[Any]* | _T@coerce_sequences\" cannot be assigned to parameter \"wrapped\" of type \"(**_PWrapped@wraps) -> _RWrapped@wraps\" in function \"wraps\"\n-     Type \"type[Any]* | ((...) -> Unknown)\" cannot be assigned to type \"(**_PWrapped@wraps) -> _RWrapped@wraps\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1188:48 - error: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1189:61 - error: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1190:43 - error: Unnecessary \"# type: ignore\" comment\n- 156 errors, 0 warnings, 182 informations \n+ 148 errors, 0 warnings, 182 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__class__\" is partially unknown\n+     Type of \"__class__\" is \"type[BasicConverter[Any]] | type[function] | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__name__\" is partially unknown\n+     Type of \"__name__\" is \"str | Unknown\" (reportUnknownMemberType)\n- 8394 errors, 24 warnings, 0 informations \n+ 8396 errors, 24 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed recent regression that results in false positive error where `type` or `type[Any]` is not considered type compatible with `Callable`. This addresses #6600. (#6606)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211019ac254a19ac2905c2",
    "number": 6604,
    "body": "…ype` or `type[Any]` is not considered type compatible with `Callable`. This addresses #6600.",
    "head_branch": "issue6600-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:199:20 - error: Expression of type \"type[Any]*\" cannot be assigned to return type \"type[_DataType@register_dtype]\"\n+     Type \"type[Any]*\" cannot be assigned to type \"type[_DataType@register_dtype]\" (reportGeneralTypeIssues)\n- 1198 errors, 10 warnings, 0 informations \n+ 1199 errors, 10 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:611:9 - error: Type of \"dependency\" is partially unknown\n-     Type of \"dependency\" is \"LazyValue[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:618:42 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"dependency\" in function \"set_default\"\n-     Argument type is \"LazyValue[object] | LazyValue[Unknown]\" (reportUnknownArgumentType)\n- 713 errors, 31 warnings, 0 informations \n+ 711 errors, 31 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:241:14 - error: Argument of type \"Unknown | type | Any\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n+     Type \"Unknown | type | Any\" cannot be assigned to type \"FunctionType\"\n+       \"type\" is incompatible with \"FunctionType\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:264:16 - error: Argument of type \"Unknown | type | Any\" cannot be assigned to parameter \"wf\" of type \"WrappedFunction\" in function \"unwrap\"\n+     Type \"Unknown | type | Any\" cannot be assigned to type \"WrappedFunction\"\n+       \"type\" is incompatible with protocol \"WrappedFunction\"\n+         \"__dd_wrapped__\" is not present\n+         \"__dd_wrappers__\" is not present (reportGeneralTypeIssues)\n- 9300 errors, 443 warnings, 0 informations \n+ 9302 errors, 443 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:81:34 - error: Argument of type \"type | ((...) -> Any) | _Wrapper\" cannot be assigned to parameter \"__object\" of type \"_Wrapper\" in function \"append\"\n-     Type \"type | ((...) -> Any) | _Wrapper\" cannot be assigned to type \"_Wrapper\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:92:23 - error: Argument of type \"type | ((...) -> Any)\" cannot be assigned to parameter of type \"(...) -> Any\"\n-     Type \"type | ((...) -> Any)\" cannot be assigned to type \"(...) -> Any\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:99:35 - error: Argument of type \"type | ((...) -> Any)\" cannot be assigned to parameter \"__func\" of type \"(...) -> _T@partial\" in function \"__new__\"\n-     Type \"type | ((...) -> Any)\" cannot be assigned to type \"(...) -> _T@partial\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/_utils/coerce.py:115:29 - error: Argument of type \"type[Any]* | _T@coerce_sequences\" cannot be assigned to parameter \"obj\" of type \"_IntrospectableCallable\" in function \"signature\"\n-     Type \"type[Any]* | ((...) -> Unknown)\" cannot be assigned to type \"_IntrospectableCallable\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/_utils/coerce.py:181:12 - error: Argument of type \"type[Any]* | _T@coerce_sequences\" cannot be assigned to parameter \"wrapped\" of type \"(**_PWrapped@wraps) -> _RWrapped@wraps\" in function \"wraps\"\n-     Type \"type[Any]* | ((...) -> Unknown)\" cannot be assigned to type \"(**_PWrapped@wraps) -> _RWrapped@wraps\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1188:48 - error: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1189:61 - error: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1190:43 - error: Unnecessary \"# type: ignore\" comment\n- 156 errors, 0 warnings, 182 informations \n+ 148 errors, 0 warnings, 182 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__class__\" is partially unknown\n+     Type of \"__class__\" is \"type[BasicConverter[Any]] | type[function] | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__name__\" is partially unknown\n+     Type of \"__name__\" is \"str | Unknown\" (reportUnknownMemberType)\n- 8394 errors, 24 warnings, 0 informations \n+ 8396 errors, 24 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621101aac254a19ac2905c3",
    "number": 6603,
    "body": "…ype` or `type[Any]` is not considered type compatible with `Callable`. This addresses #6600.",
    "head_branch": "issue6600",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:626:27 - error: Argument of type \"PackageObjectOrClass[Unknown]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"PackageObjectOrClass[Unknown]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:628:73 - error: Argument of type \"PackageObjectOrClass[Unknown]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\"\n+     Type \"PackageObjectOrClass[Unknown]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:649:19 - error: No overloads for \"getmembers\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:649:38 - error: Argument of type \"PackageObjectOrClass[Unknown] | Type[Unknown]\" cannot be assigned to parameter \"object\" of type \"object\" in function \"getmembers\"\n+     Type \"PackageObjectOrClass[Unknown] | Type[Unknown]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:808:25 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:808:33 - error: Argument of type \"type\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:134:28 - error: Argument of type \"type\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"hasattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1255:28 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1255:36 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1256:41 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1256:49 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1260:21 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"setattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1262:21 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"delattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1271:24 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"hasattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1272:53 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1276:21 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"setattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1278:21 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"setattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1279:22 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"hasattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1280:21 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"delattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1282:21 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"setattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1283:22 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"hasattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1284:21 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"delattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/report.py:46:38 - error: Argument of type \"Type[Unknown]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/subprocess_context.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/subprocess_context.py:139:31 - error: Argument of type \"type\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/variant.py:77:21 - error: Argument of type \"type | Unknown | Literal['*']\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"callable\"\n+     Type \"type | Unknown | Literal['*']\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n- 3835 errors, 48 warnings, 0 informations \n+ 3860 errors, 48 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:202:19 - error: Argument of type \"list[Unknown] | type | Tuple[Unknown, ...]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"list[Unknown] | type | Tuple[Unknown, ...]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:204:25 - error: Argument of type \"type | Tuple[Unknown, ...]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"type | Tuple[Unknown, ...]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:214:29 - error: No overloads for \"format\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:214:40 - error: Argument of type \"Unknown | type\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\"\n+     Type \"Unknown | type\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:193:27 - error: Argument of type \"Type[Any] | Tuple[Type[Any], ...]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"Type[Any] | Tuple[Type[Any], ...]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:209:27 - error: Argument of type \"Unknown | Any | Type[Unknown] | None\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"Unknown | Any | Type[Unknown] | None\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model.py:238:27 - error: Argument of type \"Unknown | Any | Type[Unknown] | None\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"Unknown | Any | Type[Unknown] | None\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/model.py:183:27 - error: Argument of type \"Type[Any] | Tuple[Type[Any], ...]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"Type[Any] | Tuple[Type[Any], ...]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/model.py:199:27 - error: Argument of type \"Unknown | Any | Type[Unknown] | None\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"Unknown | Any | Type[Unknown] | None\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/model.py:224:27 - error: Argument of type \"Unknown | Any | Type[Unknown] | None\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"Unknown | Any | Type[Unknown] | None\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:64:21 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:64:29 - error: Argument of type \"Type[Unknown]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:65:9 - error: Argument of type \"Type[Unknown]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"hasattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:199:20 - error: Expression of type \"type[Any]*\" cannot be assigned to return type \"type[_DataType@register_dtype]\"\n+     Type \"type[Any]*\" cannot be assigned to type \"type[_DataType@register_dtype]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:214:29 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"hasattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:260:25 - error: Argument of type \"Any | type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"Any | type[Any]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:80:23 - error: Argument of type \"PandasDataType\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"PandasDataType\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/pandas_engine.py:81:20 - error: Argument of type \"PandasDataType\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"PandasDataType\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/common.py:273:30 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/common.py:273:38 - error: Argument of type \"Unknown | Type[Unknown] | type[SeriesBase[GenericDtype, GenericDtype]]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\"\n+     Type \"Unknown | Type[Unknown] | type[SeriesBase[GenericDtype, GenericDtype]]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/common.py:264:27 - error: Argument of type \"Unknown | Type[Unknown]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"Unknown | Type[Unknown]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n- 1198 errors, 10 warnings, 0 informations \n+ 1219 errors, 10 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:196:27 - error: Argument of type \"type | Any\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"type | Any\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:241:14 - error: Argument of type \"Unknown | type | Any\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n+     Type \"Unknown | type | Any\" cannot be assigned to type \"FunctionType\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:264:16 - error: Argument of type \"Unknown | type | Any\" cannot be assigned to parameter \"wf\" of type \"WrappedFunction\" in function \"unwrap\"\n+     Type \"Unknown | type | Any\" cannot be assigned to type \"WrappedFunction\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:376:28 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"hasattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:381:24 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"hasattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_function/discovery.py:67:23 - error: Argument of type \"FunctionContainerType\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"FunctionContainerType\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_function/discovery.py:225:15 - error: Argument of type \"type | ModuleType | Tuple[Unknown, ...] | property | classmethod[Unknown, ..., Unknown] | staticmethod[..., Unknown]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"id\"\n+     Type \"type | ModuleType | Tuple[Unknown, ...] | property | classmethod[Unknown, ..., Unknown] | staticmethod[..., Unknown]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_function/discovery.py:227:32 - error: Argument of type \"type | ModuleType | Tuple[Unknown, ...] | property | classmethod[Unknown, ..., Unknown] | staticmethod[..., Unknown]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"id\"\n+     Type \"type | ModuleType | Tuple[Unknown, ...] | property | classmethod[Unknown, ..., Unknown] | staticmethod[..., Unknown]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_signal/utils.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_signal/utils.py:43:25 - error: Argument of type \"Type[Unknown]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"repr\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/safety.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/safety.py:34:50 - error: Argument of type \"Type[Unknown]\" cannot be assigned to parameter \"self\" of type \"object\" in function \"__getattribute__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/_utils.py:121:36 - error: Argument of type \"Any | type\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"hasattr\"\n+     Type \"Any | type\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/removals.py:205:36 - error: Argument of type \"type[Any] | Unknown\" cannot be assigned to parameter \"object\" of type \"object\" in function \"isclass\"\n+     Type \"type[Any] | Unknown\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/removals.py:208:73 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"object\" of type \"object\" in function \"getmodule\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/removals.py:218:73 - error: Argument of type \"type[Any] | Unknown\" cannot be assigned to parameter \"object\" of type \"object\" in function \"getmodule\"\n+     Type \"type[Any] | Unknown\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/decorators.py:324:28 - error: Argument of type \"Unknown | type[Any]\" cannot be assigned to parameter \"object\" of type \"object\" in function \"isclass\"\n+     Type \"Unknown | type[Any]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/wrapt/wrappers.py:804:32 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1250:20 - error: Argument of type \"FunctionType | type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"hasattr\"\n+     Type \"FunctionType | type[Any]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n- 9300 errors, 443 warnings, 0 informations \n+ 9317 errors, 443 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+ /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:42:71 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:43:13 - error: Argument of type \"type\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:42:16 - error: Return type, \"Unknown | Literal[False]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:50:27 - error: Argument of type \"type\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:50:50 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:50:58 - error: Argument of type \"type\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:50:16 - error: Return type, \"Unknown | Literal[False]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:54:19 - error: Argument of type \"C@enforce_subclass_if_possible\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:54:48 - error: Argument of type \"type\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:61:12 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/_internal/typing.py:61:20 - error: Argument of type \"type\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_catalog.py:302:27 - error: Argument of type \"Any | type\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"callable\"\n+     Type \"Any | type\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_debug.py:23:26 - error: Argument of type \"type\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:53:13 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:53:21 - error: Argument of type \"type\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:50:12 - error: Return type, \"Unknown | Literal[False]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:51:9 - error: Expression will always evaluate to True since the types \"object\" and \"type\" have no overlap (reportUnnecessaryContains)\n+ /tmp/mypy_primer/projects/antidote/src/antidote/core/_scope.py\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_scope.py:67:60 - error: Argument of type \"type\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"debug_repr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_wiring.py:66:25 - error: Argument of type \"type\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"setattr\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/antidote/src/antidote/core/exceptions.py\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/exceptions.py:78:37 - error: Argument of type \"type\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"debug_repr\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/antidote/src/antidote/core/wiring.py\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/wiring.py:190:27 - error: Argument of type \"type\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/wiring.py:209:58 - error: Argument of type \"type\" cannot be assigned to parameter \"__default\" of type \"object\" in function \"setdefault\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/antidote/src/antidote/lib/injectable_ext/__init__.py\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/injectable_ext/__init__.py:181:27 - error: Argument of type \"C@injectable\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/antidote/src/antidote/lib/injectable_ext/_internal.py\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/injectable_ext/_internal.py:28:24 - error: Argument of type \"type\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/injectable_ext/_internal.py:39:20 - error: Argument of type \"type\" cannot be assigned to parameter \"dependency\" of type \"object\" in function \"register\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/injectable_ext/_internal.py:39:35 - error: Argument of type \"() -> type\" cannot be assigned to parameter \"factory\" of type \"() -> object\" in function \"register\"\n+     Type \"() -> type\" cannot be assigned to type \"() -> object\"\n+       Function return type \"type\" is incompatible with type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:373:9 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(self: Self@Interface, __obj: object = None, *, catalog: Catalog = world) -> object\" cannot be assigned to type \"(self: Self@Interface, __obj: C@__call__, *, catalog: Catalog = ...) -> C@__call__\"\n+       Parameter 2: type \"C@__call__\" cannot be assigned to type \"object\"\n+         Type \"type\" cannot be assigned to type \"object\"\n+           \"object\" is incompatible with \"type\"\n+       Function return type \"C@__call__\" is incompatible with type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:428:9 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(self: Self@Interface, __obj: object = None, *, inject: Default | None = Default.sentinel, wiring: Wiring | Default | None = Default.sentinel, type_hints_locals: TypeHintsLocals = Default.sentinel, catalog: Catalog = world) -> object\" cannot be assigned to type \"(self: Self@Interface, __obj: C@as_default, *, wiring: Wiring | None = ..., type_hints_locals: TypeHintsLocals = ..., catalog: Catalog = ...) -> C@as_default\"\n+       Parameter 2: type \"C@as_default\" cannot be assigned to type \"object\"\n+         Type \"type\" cannot be assigned to type \"object\"\n+           \"object\" is incompatible with \"type\"\n+       Function return type \"C@as_default\" is incompatible with type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/__init__.py:1214:9 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(self: Self@InterfaceDecorator, __obj: object, /) -> object\" cannot be assigned to type \"(self: Self@InterfaceDecorator, __obj: C@__call__, /) -> C@__call__\"\n+       Parameter 2: type \"C@__call__\" cannot be assigned to type \"object\"\n+         Type \"type\" cannot be assigned to type \"object\"\n+           \"object\" is incompatible with \"type\"\n+       Function return type \"C@__call__\" is incompatible with type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:105:35 - error: Argument of type \"type\" cannot be assigned to parameter \"interface\" of type \"object\" in function \"register\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:365:20 - error: Operator \"not in\" not supported for types \"type\" and \"Catalog\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:476:34 - error: Argument of type \"object* | type*\" cannot be assigned to parameter \"object\" of type \"object\" in function \"isfunction\"\n+     Type \"object* | type*\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:476:63 - error: Argument of type \"object* | type*\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"is_lazy\"\n+     Type \"object* | type*\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:477:32 - error: Argument of type \"T@ImplementsImpl | type*\" cannot be assigned to parameter \"object\" of type \"object\" in function \"isfunction\"\n+     Type \"object* | type*\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:477:70 - error: Argument of type \"T@ImplementsImpl | type*\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"is_lazy\"\n+     Type \"object* | type*\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n\n... (truncated 26 lines) ...\n\npydantic (https://github.com/samuelcolvin/pydantic)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/dataclasses.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/dataclasses.py:156:43 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/dataclasses.py:161:29 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"setattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/dataclasses.py:183:26 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/dataclasses.py:183:34 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:343:29 - error: Argument of type \"type[Any] | type[Final]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"type[Any] | type[Final]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/main.py:412:44 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/main.py:638:27 - error: Argument of type \"type[Any] | tuple[type[Any], ...]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"type[Any] | tuple[type[Any], ...]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_config.py:110:22 - error: No overloads for \"getattr\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_config.py:110:30 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_config.py:270:23 - error: Argument of type \"ConfigDict | dict[str, Any] | type[Any]\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\"\n+     Type \"ConfigDict | dict[str, Any] | type[Any]\" cannot be assigned to type \"object\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_config.py:272:54 - error: Argument of type \"type[Any]\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"dir\" (reportGeneralTypeIssues)\n\n... (truncated 175 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621101bac254a19ac2905c4",
    "number": 6601,
    "body": "… value of type `AsyncIterator`. This addresses #6598.",
    "head_branch": "issue6598",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false positive when `anext` is passed a value of type `AsyncIterator`. This addresses #6598. (#6601)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621101cac254a19ac2905c5",
    "number": 6599,
    "body": "…method` in overloads. This addresses #6592.",
    "head_branch": "issue6592",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Implemented check for inconsistent use of `@staticmethod` and `@classmethod` in overloads. This addresses #6592. (#6599)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621101dac254a19ac2905c6",
    "number": 6597,
    "body": "… or `type[Any]` was used as a type annotation for a field in a dataclass. This addresses #6596.",
    "head_branch": "issue6596",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:430:22 - error: Unnecessary \"# type: ignore\" comment\n- 157 errors, 0 warnings, 182 informations \n+ 156 errors, 0 warnings, 182 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed recent regression that resulted in a false negative when `type` or `type[Any]` was used as a type annotation for a field in a dataclass. This addresses #6596. (#6597)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621101dac254a19ac2905c7",
    "number": 6593,
    "body": "…ypedDict field when the overridden type was `Any` or vice versa. This addresses #6590.\r\n\r\nFixed bug that resulted in a false negative when overriding a TypedDict field with an incompatible `Required` or `NotRequired` attribute. This addresses #6588.",
    "head_branch": "issue6590",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_implementations.py:439:5 - error: TypedDict field \"cls_name\" cannot be redefined as Required (reportGeneralTypeIssues)\n- 156 errors, 0 warnings, 182 informations \n+ 157 errors, 0 warnings, 182 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/types/scheduled_event.py\n+   /tmp/mypy_primer/projects/discord.py/discord/types/scheduled_event.py:81:5 - error: TypedDict field \"user_count\" cannot be redefined as Required (reportGeneralTypeIssues)\n- 59 errors, 13 warnings, 0 informations \n+ 60 errors, 13 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that resulted in a false positive error when overriding a TypedDict field when the overridden type was `Any` or vice versa. This addresses #6590. (#6593)\n\nFixed bug that resulted in a false negative when overriding a TypedDict field with an incompatible `Required` or `NotRequired` attribute. This addresses #6588."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621101eac254a19ac2905c8",
    "number": 6578,
    "body": "…cumstances involving inferred variance, decorators and generic type aliases. This addresses #6574.",
    "head_branch": "issue6574",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:489:117 - warning: Unnecessary \"# type: ignore\" comment\n- 8394 errors, 23 warnings, 0 informations \n+ 8394 errors, 24 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive error under certain circumstances involving inferred variance, decorators and generic type aliases. This addresses #6574. (#6578)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621101fac254a19ac2905c9",
    "number": 6569,
    "body": "…method to a `Callable` type where the first parameter of the method is typed as `Self`, but the callback requires the class itself. This addresses #6568.",
    "head_branch": "issue6568",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/test/test_charm.py\n+   /tmp/mypy_primer/projects/operator/test/test_charm.py:120:14 - error: Argument of type \"(self: Self@MyCharm, event: EventBase) -> None\" cannot be assigned to parameter \"fn\" of type \"(MyCharm, EventBase) -> None\" in function \"dec\"\n+     Type \"(self: Self@MyCharm, event: EventBase) -> None\" cannot be assigned to type \"(MyCharm, EventBase) -> None\"\n+       Parameter 1: type \"MyCharm\" cannot be assigned to type \"Self@MyCharm\"\n+         Type \"MyCharm\" cannot be assigned to type \"Self@MyCharm\" (reportGeneralTypeIssues)\n- 57 errors, 0 warnings, 0 informations \n+ 58 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:2161:23 - error: Argument of type \"(self: Self@UserNewsType, other: SupportsInt) -> Self@UserNewsType\" cannot be assigned to parameter \"function\" of type \"(_T@reduce, _T@reduce) -> _T@reduce\" in function \"reduce\"\n+     Type \"(self: Self@UserNewsType, other: SupportsInt) -> Self@UserNewsType\" cannot be assigned to type \"(_T@reduce, _T@reduce) -> _T@reduce\"\n+       Parameter 1: type \"_T@reduce\" cannot be assigned to type \"Self@UserNewsType\"\n+         Type \"UserNewsType\" cannot be assigned to type \"Self@UserNewsType\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/currency.py:147:23 - error: Argument of type \"(self: Self@Metal, other: SupportsMetal) -> Metal\" cannot be assigned to parameter \"function\" of type \"(_T@reduce, _T@reduce) -> _T@reduce\" in function \"reduce\"\n+     Type \"(self: Self@Metal, other: SupportsMetal) -> Metal\" cannot be assigned to type \"(_T@reduce, _T@reduce) -> _T@reduce\"\n+       Parameter 1: type \"_T@reduce\" cannot be assigned to type \"Self@Metal\"\n+         Type \"Metal\" cannot be assigned to type \"Self@Metal\" (reportGeneralTypeIssues)\n- 8392 errors, 23 warnings, 0 informations \n+ 8394 errors, 23 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that produces a false negative when attempting to assign a method to a `Callable` type where the first parameter of the method is typed as `Self`, but the callback requires the class itself. This addresses #6568. (#6569)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211020ac254a19ac2905ca",
    "number": 6563,
    "body": "…rs include default arguments. This is analogous to the logic used for unannotated function parameters with default arguments. This addresses #6558.",
    "head_branch": "issue6558",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for parameter type inference for lambdas whose parameters include default arguments. This is analogous to the logic used for unannotated function parameters with default arguments. This addresses #6558. (#6563)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211021ac254a19ac2905cb",
    "number": 6562,
    "body": "…licit type argument for a generic class or type alias if the corresponding type parameter is a constrained TypeVar. This addresses #6557.",
    "head_branch": "issue6557",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to a false negative when `Never` is used as an explicit type argument for a generic class or type alias if the corresponding type parameter is a constrained TypeVar. This addresses #6557. (#6562)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211022ac254a19ac2905cc",
    "number": 6561,
    "body": "… type alias. This was a long-standing bug that was exposed by a recent change. It addresses #6559.",
    "head_branch": "issue6559",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed regression that results in incorrect handling of `type[T]` in a type alias. This was a long-standing bug that was exposed by a recent change. It addresses #6559. (#6561)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211023ac254a19ac2905cd",
    "number": 6560,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/5139\r\n\r\nRoot cause was we weren't adding mapped entries for the directories for the stubs, just for the files. This means the directory had to exist in the real package in order for the mapped stubs to be found.\r\n\r\nSpecifically for the bug, the `keras` folder is not in the `site-packages\\tensorflow` folder.\r\n\r\nThanks to @heejaechang for pointing out how this all works.",
    "head_branch": "rchiodo/fix_partial_stubs",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Include directories in the folder map for mapped partial stubs (#6560)\n\n* Include directories in the folder map for mapped partial stubs\r\n\r\n* Remove debug only code\r\n\r\n* Fix formatting\r\n\r\n* Review feedback - move logic to recordMovedEntry\r\n\r\n* Further simplification\r\n\r\n* Add some more comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211024ac254a19ac2905ce",
    "number": 6556,
    "body": "…ing deeply-nested or recursive type definitions such as `_NestedSequence` in numpy. This addresses #6523.",
    "head_branch": "issue6523",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that can result in spurious false positive errors when using deeply-nested or recursive type definitions such as `_NestedSequence` in numpy. This addresses #6523. (#6556)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211025ac254a19ac2905cf",
    "number": 6553,
    "body": "…[Any]` where the target attribute is not explicitly declared in the `type` or `object` class. Previously, pyright emitted an error in this case. This addresses #6552.",
    "head_branch": "issue6552",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1524:26 - error: Cannot access member \"module\" for type \"type\"\n-     Member \"module\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:810:60 - error: Cannot access member \"name\" for type \"type\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:140:59 - error: Cannot access member \"module\" for type \"type\"\n-     Member \"module\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:148:59 - error: Cannot access member \"namespace\" for type \"type[Any]*\"\n-     Member \"namespace\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:148:74 - error: Cannot access member \"name\" for type \"type[Any]*\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1130:48 - error: Cannot access member \"name\" for type \"type[Any]\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1128:45 - error: Cannot access member \"name\" for type \"type[Any]\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1226:74 - error: Cannot access member \"virtual\" for type \"type[Any]\"\n-     Member \"virtual\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/build_environment.py:575:34 - error: Cannot access member \"module\" for type \"type\"\n-     Member \"module\" is unknown (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3834 errors, 48 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_dataclasses.py:280:22 - error: Cannot access member \"__dataclass_fields__\" for type \"type[Any]\"\n-     Member \"__dataclass_fields__\" is unknown (reportGeneralTypeIssues)\n- 53 errors, 0 warnings, 0 informations \n+ 52 errors, 0 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:57:27 - error: Cannot access member \"CHECK_FUNCTION_REGISTRY\" for type \"Type[Unknown]\"\n-     Member \"CHECK_FUNCTION_REGISTRY\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:47:34 - error: Cannot access member \"typeName\" for type \"Type[Unknown]\"\n-     Member \"typeName\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:67:27 - error: Cannot access member \"typeName\" for type \"Type[Unknown]\"\n-     Member \"typeName\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:193:21 - error: Cannot access member \"_register_equivalents\" for type \"_EngineType[Unknown]\"\n-     Member \"_register_equivalents\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:196:21 - error: Cannot access member \"_register_from_parametrized_dtype\" for type \"_EngineType[Unknown]\"\n-     Member \"_register_from_parametrized_dtype\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:198:17 - error: Cannot access member \"_registered_dtypes\" for type \"_EngineType[Unknown]\"\n-     Member \"_registered_dtypes\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:209:38 - error: Cannot access member \"_base_pandera_dtypes\" for type \"_EngineType[Unknown]\"\n-     Member \"_base_pandera_dtypes\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:215:43 - error: Cannot access member \"_base_pandera_dtypes\" for type \"_EngineType[Unknown]\"\n-     Member \"_base_pandera_dtypes\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:228:24 - error: Cannot access member \"_registry\" for type \"_EngineType[Unknown]\"\n-     Member \"_registry\" is unknown (reportGeneralTypeIssues)\n- 1207 errors, 10 warnings, 0 informations \n+ 1198 errors, 10 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:724:41 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:783:39 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:787:41 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:795:35 - warning: Unnecessary \"# type: ignore\" comment\n- 59 errors, 9 warnings, 0 informations \n+ 59 errors, 13 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1256:14 - error: Cannot assign member \"pytestmark\" for type \"type[Any]\"\n-     Member \"pytestmark\" is unknown (reportGeneralTypeIssues)\n-     Member \"pytestmark\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1258:10 - error: Cannot access member \"pytestmark\" for type \"type[Any]\"\n- 9457 errors, 464 warnings, 0 informations \n+ 9455 errors, 464 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:430:22 - error: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1117:48 - error: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1118:61 - error: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1119:43 - error: Unnecessary \"# type: ignore\" comment\n- 149 errors, 0 warnings, 174 informations \n+ 153 errors, 0 warnings, 174 informations \n\n```"
    ],
    "commit_messages": [
      "Changed type evaluation logic for member access expressions for `type[Any]` where the target attribute is not explicitly declared in the `type` or `object` class. Previously, pyright emitted an error in this case. This addresses #6552. (#6553)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211025ac254a19ac2905d0",
    "number": 6551,
    "body": "…`. These should be treated the same under all circumstances. This addresses #6252.",
    "head_branch": "issue6252-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:148:59 - error: Cannot access member \"namespace\" for type \"type*\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:148:59 - error: Cannot access member \"namespace\" for type \"type[Any]*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:148:74 - error: Cannot access member \"name\" for type \"type*\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:148:74 - error: Cannot access member \"name\" for type \"type[Any]*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1130:48 - error: Cannot access member \"name\" for type \"type\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1130:48 - error: Cannot access member \"name\" for type \"type[Any]\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1128:45 - error: Cannot access member \"name\" for type \"type\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1128:45 - error: Cannot access member \"name\" for type \"type[Any]\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1226:74 - error: Cannot access member \"virtual\" for type \"type\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1226:74 - error: Cannot access member \"virtual\" for type \"type[Any]\"\n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_dataclasses.py:280:22 - error: Cannot access member \"__dataclass_fields__\" for type \"type[Any]\"\n+     Member \"__dataclass_fields__\" is unknown (reportGeneralTypeIssues)\n- 52 errors, 0 warnings, 0 informations \n+ 53 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:77:9 - error: Type of parameter \"__multi_dict\" is partially unknown\n+     Parameter type is \"type[Unknown]\" (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:91:9 - error: Type of parameter \"__mapper\" is partially unknown\n+     Parameter type is \"type[Unknown]\" (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:101:9 - error: Type of parameter \"__mapper\" is partially unknown\n+     Parameter type is \"type[Unknown]\" (reportUnknownParameterType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__class__\" is partially unknown\n-     Type of \"__class__\" is \"type[BasicConverter[Any]] | type[function] | Unknown\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__name__\" is partially unknown\n-     Type of \"__name__\" is \"str | Unknown\" (reportUnknownMemberType)\n- 8391 errors, 23 warnings, 0 informations \n+ 8392 errors, 23 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/docs_src/usage.py:61:6 - warning: Type of \"with_listener\" is partially unknown\n+     Type of \"with_listener\" is \"(*event_types: type[Unknown]) -> ((_ListenerCallbackSigT@with_listener) -> _ListenerCallbackSigT@with_listener)\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py:249:23 - warning: Type of \"with_channel_slash_option\" is partially unknown\n+     Type of \"with_channel_slash_option\" is \"(name: str | Mapping[str, str], description: str | Mapping[str, str], /, *, types: Collection[type[Unknown] | int] | None = None, default: Any = tanjun.NO_DEFAULT, key: str | None = None, pass_as_kwarg: bool = True) -> ((_SlashCommandT@with_channel_slash_option) -> _SlashCommandT@with_channel_slash_option)\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:3321:9 - error: Return type, \"Mapping[type[Unknown], Collection[(Any, ...) -> Coroutine[Any, Any, None]]]\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:3585:16 - error: Type of parameter \"event_types\" is partially unknown\n+     Parameter type is \"type[Unknown]\" (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:3979:9 - error: Return type, \"Mapping[type[Unknown], Collection[(Any, ...) -> Coroutine[Any, Any, None]]]\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:4524:16 - error: Type of parameter \"event_types\" is partially unknown\n+     Parameter type is \"type[Unknown]\" (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:276:5 - warning: Type of \"_ChannelTypeIsh\" is partially unknown\n+     Type of \"_ChannelTypeIsh\" is \"type[type[Unknown]] | type[int]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:415:9 - error: Type of parameter \"channel_types\" is partially unknown\n+     Parameter type is \"Sequence[type[Unknown] | int]\" (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:457:32 - warning: Type of \"_channel_types\" is partially unknown\n+     Type of \"_channel_types\" is \"Sequence[type[Unknown] | int]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:457:55 - warning: Type of \"channel_types\" is partially unknown\n+     Type of \"channel_types\" is \"Sequence[type[Unknown] | int]\" (reportUnknownMemberType)\n-     Type of \"new\" is \"(option_type: type[_T@new], /, *, channel_types: Sequence[type | int] = (), choices: Mapping[str, int | float | str] | None = None, default: Any = tanjun.NO_DEFAULT, description: str = \"\", empty_value: Any = tanjun.NO_DEFAULT, greedy: bool | None = None, message_names: Sequence[str] = (), min_length: int | None = None, max_length: int | None = None, min_value: int | float | None = None, max_value: int | float | None = None, positional: bool | None = None, slash_name: str = \"\", snowflake_converter: ((str) -> Unknown) | None = None, str_converters: ((str, ...) -> (Coroutine[Any, Any, Any] | Any)) | Sequence[(str, ...) -> (Coroutine[Any, Any, Any] | Any)] = ()) -> _T@new\" (reportUnknownMemberType)\n+     Type of \"new\" is \"(option_type: type[_T@new], /, *, channel_types: Sequence[type[Unknown] | int] = (), choices: Mapping[str, int | float | str] | None = None, default: Any = tanjun.NO_DEFAULT, description: str = \"\", empty_value: Any = tanjun.NO_DEFAULT, greedy: bool | None = None, message_names: Sequence[str] = (), min_length: int | None = None, max_length: int | None = None, min_value: int | float | None = None, max_value: int | float | None = None, positional: bool | None = None, slash_name: str = \"\", snowflake_converter: ((str) -> Unknown) | None = None, str_converters: ((str, ...) -> (Coroutine[Any, Any, Any] | Any)) | Sequence[(str, ...) -> (Coroutine[Any, Any, Any] | Any)] = ()) -> _T@new\" (reportUnknownMemberType)\n-     Type of \"new\" is \"(option_type: type[_T@new], /, *, channel_types: Sequence[type | int] = (), choices: Mapping[str, int | float | str] | None = None, default: Any = tanjun.NO_DEFAULT, description: str = \"\", empty_value: Any = tanjun.NO_DEFAULT, greedy: bool | None = None, message_names: Sequence[str] = (), min_length: int | None = None, max_length: int | None = None, min_value: int | float | None = None, max_value: int | float | None = None, positional: bool | None = None, slash_name: str = \"\", snowflake_converter: ((str) -> Unknown) | None = None, str_converters: ((str, ...) -> (Coroutine[Any, Any, Any] | Any)) | Sequence[(str, ...) -> (Coroutine[Any, Any, Any] | Any)] = ()) -> _T@new\" (reportUnknownMemberType)\n+     Type of \"new\" is \"(option_type: type[_T@new], /, *, channel_types: Sequence[type[Unknown] | int] = (), choices: Mapping[str, int | float | str] | None = None, default: Any = tanjun.NO_DEFAULT, description: str = \"\", empty_value: Any = tanjun.NO_DEFAULT, greedy: bool | None = None, message_names: Sequence[str] = (), min_length: int | None = None, max_length: int | None = None, min_value: int | float | None = None, max_value: int | float | None = None, positional: bool | None = None, slash_name: str = \"\", snowflake_converter: ((str) -> Unknown) | None = None, str_converters: ((str, ...) -> (Coroutine[Any, Any, Any] | Any)) | Sequence[(str, ...) -> (Coroutine[Any, Any, Any] | Any)] = ()) -> _T@new\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:601:5 - error: Type of parameter \"channel_types\" is partially unknown\n+     Parameter type is \"Sequence[type[Unknown] | int]\" (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:617:5 - error: Type of parameter \"channel_types\" is partially unknown\n+     Parameter type is \"Sequence[type[Unknown] | int]\" (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:632:5 - error: Type of parameter \"channel_types\" is partially unknown\n+     Parameter type is \"Sequence[type[Unknown] | int]\" (reportUnknownParameterType)\n-     Type of \"new\" is \"(option_type: type[_T@new], /, *, channel_types: Sequence[type | int] = (), choices: Mapping[str, int | float | str] | None = None, default: Any = tanjun.NO_DEFAULT, description: str = \"\", empty_value: Any = tanjun.NO_DEFAULT, greedy: bool | None = None, message_names: Sequence[str] = (), min_length: int | None = None, max_length: int | None = None, min_value: int | float | None = None, max_value: int | float | None = None, positional: bool | None = None, slash_name: str = \"\", snowflake_converter: ((str) -> Unknown) | None = None, str_converters: ((str, ...) -> (Coroutine[Any, Any, Any] | Any)) | Sequence[(str, ...) -> (Coroutine[Any, Any, Any] | Any)] = ()) -> _T@new\" (reportUnknownMemberType)\n+     Type of \"new\" is \"(option_type: type[_T@new], /, *, channel_types: Sequence[type[Unknown] | int] = (), choices: Mapping[str, int | float | str] | None = None, default: Any = tanjun.NO_DEFAULT, description: str = \"\", empty_value: Any = tanjun.NO_DEFAULT, greedy: bool | None = None, message_names: Sequence[str] = (), min_length: int | None = None, max_length: int | None = None, min_value: int | float | None = None, max_value: int | float | None = None, positional: bool | None = None, slash_name: str = \"\", snowflake_converter: ((str) -> Unknown) | None = None, str_converters: ((str, ...) -> (Coroutine[Any, Any, Any] | Any)) | Sequence[(str, ...) -> (Coroutine[Any, Any, Any] | Any)] = ()) -> _T@new\" (reportUnknownMemberType)\n-     Type of \"new\" is \"(option_type: type[_T@new], /, *, channel_types: Sequence[type | int] = (), choices: Mapping[str, int | float | str] | None = None, default: Any = tanjun.NO_DEFAULT, description: str = \"\", empty_value: Any = tanjun.NO_DEFAULT, greedy: bool | None = None, message_names: Sequence[str] = (), min_length: int | None = None, max_length: int | None = None, min_value: int | float | None = None, max_value: int | float | None = None, positional: bool | None = None, slash_name: str = \"\", snowflake_converter: ((str) -> Unknown) | None = None, str_converters: ((str, ...) -> (Coroutine[Any, Any, Any] | Any)) | Sequence[(str, ...) -> (Coroutine[Any, Any, Any] | Any)] = ()) -> _T@new\" (reportUnknownMemberType)\n+     Type of \"new\" is \"(option_type: type[_T@new], /, *, channel_types: Sequence[type[Unknown] | int] = (), choices: Mapping[str, int | float | str] | None = None, default: Any = tanjun.NO_DEFAULT, description: str = \"\", empty_value: Any = tanjun.NO_DEFAULT, greedy: bool | None = None, message_names: Sequence[str] = (), min_length: int | None = None, max_length: int | None = None, min_value: int | float | None = None, max_value: int | float | None = None, positional: bool | None = None, slash_name: str = \"\", snowflake_converter: ((str) -> Unknown) | None = None, str_converters: ((str, ...) -> (Coroutine[Any, Any, Any] | Any)) | Sequence[(str, ...) -> (Coroutine[Any, Any, Any] | Any)] = ()) -> _T@new\" (reportUnknownMemberType)\n-     Type of \"new\" is \"(option_type: type[_T@new], /, *, channel_types: Sequence[type | int] = (), choices: Mapping[str, int | float | str] | None = None, default: Any = tanjun.NO_DEFAULT, description: str = \"\", empty_value: Any = tanjun.NO_DEFAULT, greedy: bool | None = None, message_names: Sequence[str] = (), min_length: int | None = None, max_length: int | None = None, min_value: int | float | None = None, max_value: int | float | None = None, positional: bool | None = None, slash_name: str = \"\", snowflake_converter: ((str) -> Unknown) | None = None, str_converters: ((str, ...) -> (Coroutine[Any, Any, Any] | Any)) | Sequence[(str, ...) -> (Coroutine[Any, Any, Any] | Any)] = ()) -> _T@new\" (reportUnknownMemberType)\n\n... (truncated 336 lines) ...\n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:611:9 - error: Type of \"dependency\" is partially unknown\n+     Type of \"dependency\" is \"LazyValue[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:618:42 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"dependency\" in function \"set_default\"\n+     Argument type is \"LazyValue[object] | LazyValue[Unknown]\" (reportUnknownArgumentType)\n- 711 errors, 31 warnings, 0 informations \n+ 713 errors, 31 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:81:34 - error: Argument of type \"type | ((...) -> Any) | _Wrapper\" cannot be assigned to parameter \"__object\" of type \"_Wrapper\" in function \"append\"\n+     Type \"type | ((...) -> Any) | _Wrapper\" cannot be assigned to type \"_Wrapper\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:92:23 - error: Argument of type \"type | ((...) -> Any)\" cannot be assigned to parameter of type \"(...) -> Any\"\n+     Type \"type | ((...) -> Any)\" cannot be assigned to type \"(...) -> Any\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:99:35 - error: Argument of type \"type | ((...) -> Any)\" cannot be assigned to parameter \"__func\" of type \"(...) -> _T@partial\" in function \"__new__\"\n+     Type \"type | ((...) -> Any)\" cannot be assigned to type \"(...) -> _T@partial\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/_utils/coerce.py:115:29 - error: Argument of type \"type[Any]* | _T@coerce_sequences\" cannot be assigned to parameter \"obj\" of type \"_IntrospectableCallable\" in function \"signature\"\n+     Type \"type[Any]* | ((...) -> Unknown)\" cannot be assigned to type \"_IntrospectableCallable\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/_utils/coerce.py:181:12 - error: Argument of type \"type[Any]* | _T@coerce_sequences\" cannot be assigned to parameter \"wrapped\" of type \"(**_PWrapped@wraps) -> _RWrapped@wraps\" in function \"wraps\"\n+     Type \"type[Any]* | ((...) -> Unknown)\" cannot be assigned to type \"(**_PWrapped@wraps) -> _RWrapped@wraps\" (reportGeneralTypeIssues)\n- 144 errors, 0 warnings, 174 informations \n+ 149 errors, 0 warnings, 174 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-     Type \"tuple[type] | tuple[type, ...]\" cannot be assigned to type \"Tuple[type]\"\n+     Type \"tuple[Type[Any]] | tuple[Type[Any], ...]\" cannot be assigned to type \"Tuple[Type[Any]]\"\n-       \"tuple[type, ...]\" is incompatible with \"Tuple[type]\"\n+       \"tuple[Type[Any], ...]\" is incompatible with \"Tuple[Type[Any]]\"\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:26:61 - error: Expression of type \"None\" cannot be assigned to parameter of type \"List[type]\"\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:26:61 - error: Expression of type \"None\" cannot be assigned to parameter of type \"List[Type[Unknown]]\"\n-     \"None\" is incompatible with \"List[type]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"List[Type[Unknown]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:47:34 - error: Cannot access member \"typeName\" for type \"type\"\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:47:34 - error: Cannot access member \"typeName\" for type \"Type[Unknown]\"\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:67:27 - error: Cannot access member \"typeName\" for type \"type\"\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:67:27 - error: Cannot access member \"typeName\" for type \"Type[Unknown]\"\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:199:20 - error: Expression of type \"type*\" cannot be assigned to return type \"type[_DataType@register_dtype]\"\n-     Type \"type*\" cannot be assigned to type \"type[_DataType@register_dtype]\" (reportGeneralTypeIssues)\n-     \"None\" is incompatible with \"type\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Type[Unknown]\" (reportGeneralTypeIssues)\n- 1208 errors, 10 warnings, 0 informations \n+ 1207 errors, 10 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:241:14 - error: Argument of type \"Unknown | type | Any\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n-     Type \"Unknown | type | Any\" cannot be assigned to type \"FunctionType\"\n-       \"type\" is incompatible with \"FunctionType\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:264:16 - error: Argument of type \"Unknown | type | Any\" cannot be assigned to parameter \"wf\" of type \"WrappedFunction\" in function \"unwrap\"\n-     Type \"Unknown | type | Any\" cannot be assigned to type \"WrappedFunction\"\n-       \"type\" is incompatible with protocol \"WrappedFunction\"\n-         \"__dd_wrapped__\" is not present\n-         \"__dd_wrappers__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1256:14 - error: Cannot assign member \"pytestmark\" for type \"type\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1256:14 - error: Cannot assign member \"pytestmark\" for type \"type[Any]\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1258:10 - error: Cannot access member \"pytestmark\" for type \"type\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1258:10 - error: Cannot access member \"pytestmark\" for type \"type[Any]\"\n- 9459 errors, 464 warnings, 0 informations \n+ 9457 errors, 464 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Eliminated some differences between the treatment of `type` and `Type`. These should be treated the same under all circumstances. This addresses #6252. (#6551)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211026ac254a19ac2905d1",
    "number": 6550,
    "body": "…`. These should be treated the same under all circumstances. This addresses #6252.",
    "head_branch": "issue6252",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\noperator (https://github.com/canonical/operator): typechecking got 3.75x faster (19.9s -> 5.3s)\n(Performance measurements are based on a single noisy sample)\n- /tmp/mypy_primer/projects/operator/ops/charm.py\n-   /tmp/mypy_primer/projects/operator/ops/charm.py:469:5 - error: \"unit\" overrides symbol of same name in class \"RelationEvent\"\n-     Variable is mutable so its type is invariant\n-       Override type \"None\" is not the same as base type \"Unit | None\" (reportIncompatibleVariableOverride)\n-   /tmp/mypy_primer/projects/operator/ops/charm.py:484:5 - error: \"unit\" overrides symbol of same name in class \"RelationEvent\"\n-     Variable is mutable so its type is invariant\n-       Override type \"Unit\" is not the same as base type \"Unit | None\" (reportIncompatibleVariableOverride)\n-   /tmp/mypy_primer/projects/operator/ops/charm.py:526:5 - error: \"unit\" overrides symbol of same name in class \"RelationEvent\"\n-     Variable is mutable so its type is invariant\n-       Override type \"Unit\" is not the same as base type \"Unit | None\" (reportIncompatibleVariableOverride)\n-   /tmp/mypy_primer/projects/operator/ops/charm.py:583:5 - error: \"unit\" overrides symbol of same name in class \"RelationEvent\"\n-     Variable is mutable so its type is invariant\n-       Override type \"None\" is not the same as base type \"Unit | None\" (reportIncompatibleVariableOverride)\n- /tmp/mypy_primer/projects/operator/ops/pebble.py\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:1928:74 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"query\" in function \"_request\"\n-     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:2589:9 - error: Type of \"connect\" is partially unknown\n-     Type of \"connect\" is \"Unknown | ((url: str, socket: socket) -> None)\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:2590:16 - error: Return type, \"Unknown | _WebSocket\", is partially unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:2645:51 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"query\" in function \"_request\"\n-     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:2815:52 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"buf\" of type \"bytes\" in function \"_next_part_boundary\"\n-     \"bytearray\" is incompatible with \"bytes\"\n-     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:2835:57 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"buf\" of type \"bytes\" in function \"_next_part_boundary\"\n-     \"bytearray\" is incompatible with \"bytes\"\n-     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:2831:37 - error: Argument of type \"bytearray\" cannot be assigned to parameter of type \"bytes\"\n-     \"bytearray\" is incompatible with \"bytes\"\n-     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:2839:39 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"__call__\"\n-     \"bytearray\" is incompatible with \"bytes\"\n-     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:2846:28 - error: Expression of type \"bytearray\" cannot be assigned to declared type \"bytes\"\n-     \"bytearray\" is incompatible with \"bytes\"\n-     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/operator/ops/storage.py\n-   /tmp/mypy_primer/projects/operator/ops/storage.py:208:23 - error: Return type of generator function must be compatible with \"Generator[tuple[str, ...], Any, Any]\"\n-     \"tuple[str, ...]\" is incompatible with \"_Notice\"\n-       Tuple size mismatch; expected 3 but received indeterminate (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/operator/test/test_lib.py\n-   /tmp/mypy_primer/projects/operator/test/test_lib.py:27:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/operator/test/test_lib.py:32:36 - error: Type of \"mark\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_lib.py:32:36 - error: Type of \"filterwarnings\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_lib.py:32:13 - error: Type of \"MarkDecorator\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_lib.py:32:1 - error: Type of \"pytestmark\" is unknown (reportUnknownVariableType)\n- /tmp/mypy_primer/projects/operator/test/test_model.py\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:29:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:915:14 - error: Type of \"raises\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:1029:2 - error: Type of \"mark\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:1029:2 - error: Type of \"parametrize\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:1029:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:1173:2 - error: Type of \"mark\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:1173:2 - error: Type of \"parametrize\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:1173:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:1250:2 - error: Type of \"mark\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:1250:2 - error: Type of \"parametrize\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_model.py:1250:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n- /tmp/mypy_primer/projects/operator/test/test_pebble.py\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:28:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2883:53 - error: Type of \"cm\" is partially unknown\n-     Type of \"cm\" is \"_AssertRaisesContext[ExecError[Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2885:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2886:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2887:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2887:26 - error: Type of \"stdout\" is partially unknown\n-     Type of \"stdout\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2888:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:2888:26 - error: Type of \"stderr\" is partially unknown\n-     Type of \"stderr\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:3316:23 - error: Type of \"WebSocketException\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:3358:38 - error: Type of \"mark\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:3358:38 - error: Type of \"filterwarnings\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:3358:9 - error: Type of \"test_websocket_send_raises\" is partially unknown\n-     Type of \"test_websocket_send_raises\" is \"Unknown | ((self: Self@TestExec) -> None)\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:3389:38 - error: Type of \"mark\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:3389:38 - error: Type of \"filterwarnings\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_pebble.py:3389:9 - error: Type of \"test_websocket_recv_raises\" is partially unknown\n-     Type of \"test_websocket_recv_raises\" is \"Unknown | ((self: Self@TestExec) -> None)\" (reportUnknownVariableType)\n- /tmp/mypy_primer/projects/operator/test/test_real_pebble.py\n-   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:150:53 - error: Type of \"cm\" is partially unknown\n-     Type of \"cm\" is \"_AssertRaisesContext[ExecError[Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/operator/test/test_real_pebble.py:153:26 - error: Type of \"exception\" is partially unknown\n-     Type of \"exception\" is \"ExecError[Unknown]\" (reportUnknownMemberType)\n\n... (truncated 150 lines) ...\n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_dataclasses.py:280:22 - error: Cannot access member \"__dataclass_fields__\" for type \"type[Any]\"\n+     Member \"__dataclass_fields__\" is unknown (reportGeneralTypeIssues)\n- 52 errors, 0 warnings, 0 informations \n+ 53 errors, 0 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:148:59 - error: Cannot access member \"namespace\" for type \"type*\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:148:59 - error: Cannot access member \"namespace\" for type \"type[Any]*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:148:74 - error: Cannot access member \"name\" for type \"type*\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:148:74 - error: Cannot access member \"name\" for type \"type[Any]*\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1130:48 - error: Cannot access member \"name\" for type \"type\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1130:48 - error: Cannot access member \"name\" for type \"type[Any]\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1128:45 - error: Cannot access member \"name\" for type \"type\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1128:45 - error: Cannot access member \"name\" for type \"type[Any]\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1226:74 - error: Cannot access member \"virtual\" for type \"type\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1226:74 - error: Cannot access member \"virtual\" for type \"type[Any]\"\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:77:9 - error: Type of parameter \"__multi_dict\" is partially unknown\n+     Parameter type is \"type[Unknown]\" (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:91:9 - error: Type of parameter \"__mapper\" is partially unknown\n+     Parameter type is \"type[Unknown]\" (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:101:9 - error: Type of parameter \"__mapper\" is partially unknown\n+     Parameter type is \"type[Unknown]\" (reportUnknownParameterType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__class__\" is partially unknown\n-     Type of \"__class__\" is \"type[BasicConverter[Any]] | type[function] | Unknown\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__name__\" is partially unknown\n-     Type of \"__name__\" is \"str | Unknown\" (reportUnknownMemberType)\n- 8391 errors, 23 warnings, 0 informations \n+ 8392 errors, 23 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun): typechecking got 2.31x faster (42.3s -> 18.4s)\n(Performance measurements are based on a single noisy sample)\n+ An internal error occurred while type checking file \"/tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py\": TypeError: Cannot read properties of undefined (reading 'computedVariance')\n+     at Object.getVariance (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/types.ts:2640:31)\n+     at map (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3934:46)\n+     at Array.map (<anonymous>)\n+     at applyConditionFilterToType (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3929:57)\n+     at callback (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3849:46)\n+     at doForEachSubtype (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeUtils.ts:726:9)\n+     at expandSubtype (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3845:13)\n+     at forEach (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3886:17)\n+     at Array.forEach (<anonymous>)\n+     at mapSubtypesExpandTypeVars (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3885:22)\n+     at map (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3939:41)\n+     at Array.map (<anonymous>)\n+     at applyConditionFilterToType (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3929:57)\n+     at callback (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3849:46)\n+     at doForEachSubtype (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeUtils.ts:726:9)\n+     at expandSubtype (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3845:13)\n+     at forEach (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3886:17)\n+     at Array.forEach (<anonymous>)\n+     at mapSubtypesExpandTypeVars (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3885:22)\n+     at validateArgType (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:11791:23)\n+     at forEach (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:11164:31)\n+     at Array.forEach (<anonymous>)\n+     at validateFunctionArgumentTypes (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:11163:32)\n+     at validateFunctionArgumentTypesWithContext (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:11019:16)\n+     at validateFunctionArguments (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:11500:16)\n+     at validateCallForFunction (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:9304:32)\n+     at validateCallArgumentsForSubtype (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:9138:24)\n+     at callback (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:9056:44)\n+     at useSpeculativeMode (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:19943:20)\n+     at callback (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:9053:24)\n+     at callback (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3857:43)\n+     at doForEachSubtype (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeUtils.ts:726:9)\n+     at expandSubtype (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3845:13)\n+     at mapSubtypesExpandTypeVars (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3889:13)\n+     at validateCallArguments (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:9049:26)\n+     at getTypeOfCall (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:7915:36)\n+     at getTypeOfExpression (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:1028:30)\n+     at callback (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:13903:42)\n+     at useSpeculativeMode (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:19943:20)\n+     at getTypeOfLambdaWithExpectedType (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:13898:9)\n+     at getTypeOfLambda (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:13730:20)\n+     at getTypeOfExpression (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:1121:30)\n+     at evaluateTypesForExpressionInContext (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:18904:21)\n+     at callback (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:854:13)\n+     at evaluateTypeForSubnode (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:19143:9)\n+     at callback (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:853:16)\n+     at a.getTypeResult (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/common/timing.ts:40:20)\n+     at j.visitReturn (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/checker.ts:909:48)\n+     at j.visit (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/parseTreeWalker.ts:526:29)\n+     at j.visitNode (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/parseTreeWalker.ts:933:21)\n+     at j.walk (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/parseTreeWalker.ts:915:37)\n+     at j.walk (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/checker.ts:268:19)\n+     at forEach (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/parseTreeWalker.ts:924:22)\n+     at Array.forEach (<anonymous>)\n+     at j.walkMultiple (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/parseTreeWalker.ts:922:15)\n+     at j.walk (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/parseTreeWalker.ts:917:18)\n+     at j.walk (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/checker.ts:268:19)\n+     at j._walkStatementsAndReportUnreachable (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/checker.ts:2713:18)\n+     at j.visitSuite (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/checker.ts:277:14)\n+     at j.visit (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/parseTreeWalker.ts:544:29)\n+     at j.visitNode (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/parseTreeWalker.ts:933:21)\n+     at j.walk (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/parseTreeWalker.ts:915:37)\n+     at j.walk (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/checker.ts:268:19)\n+     at j.visitFunction (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/checker.ts:644:18)\n+ Error performing analysis: TypeError: Cannot read properties of undefined (reading 'computedVariance')\n+     at Object.getVariance (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/types.ts:2640:31)\n+     at map (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3934:46)\n+     at Array.map (<anonymous>)\n+     at applyConditionFilterToType (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3929:57)\n+     at callback (/tmp/mypy_primer/new_pyright/pyright_to_test/packages/pyright/dist/pyright-internal/src/analyzer/typeEvaluator.ts:3849:46)\n\n... (truncated 16817 lines) ...\n\nAutoSplit (https://github.com/Toufool/AutoSplit): typechecking got 8.55x faster (57.2s -> 6.7s)\n(Performance measurements are based on a single noisy sample)\n\npandas (https://github.com/pandas-dev/pandas): typechecking got 1.17x slower (69.7s -> 81.5s)\n(Performance measurements are based on a single noisy sample)\n\nkoda-validate (https://github.com/keithasaurus/koda-validate): typechecking got 3360.98x faster (14.6s -> 0.0s)\n(Performance measurements are based on a single noisy sample)\n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:81:34 - error: Argument of type \"type | ((...) -> Any) | _Wrapper\" cannot be assigned to parameter \"__object\" of type \"_Wrapper\" in function \"append\"\n+     Type \"type | ((...) -> Any) | _Wrapper\" cannot be assigned to type \"_Wrapper\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:92:23 - error: Argument of type \"type | ((...) -> Any)\" cannot be assigned to parameter of type \"(...) -> Any\"\n+     Type \"type | ((...) -> Any)\" cannot be assigned to type \"(...) -> Any\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/funcs.py:99:35 - error: Argument of type \"type | ((...) -> Any)\" cannot be assigned to parameter \"__func\" of type \"(...) -> _T@partial\" in function \"__new__\"\n+     Type \"type | ((...) -> Any)\" cannot be assigned to type \"(...) -> _T@partial\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/_utils/coerce.py:115:29 - error: Argument of type \"type[Any]* | _T@coerce_sequences\" cannot be assigned to parameter \"obj\" of type \"_IntrospectableCallable\" in function \"signature\"\n+     Type \"type[Any]* | ((...) -> Unknown)\" cannot be assigned to type \"_IntrospectableCallable\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/_utils/coerce.py:181:12 - error: Argument of type \"type[Any]* | _T@coerce_sequences\" cannot be assigned to parameter \"wrapped\" of type \"(**_PWrapped@wraps) -> _RWrapped@wraps\" in function \"wraps\"\n+     Type \"type[Any]* | ((...) -> Unknown)\" cannot be assigned to type \"(**_PWrapped@wraps) -> _RWrapped@wraps\" (reportGeneralTypeIssues)\n- 144 errors, 0 warnings, 174 informations \n+ 149 errors, 0 warnings, 174 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-     Type \"tuple[type] | tuple[type, ...]\" cannot be assigned to type \"Tuple[type]\"\n+     Type \"tuple[Type[Any]] | tuple[Type[Any], ...]\" cannot be assigned to type \"Tuple[Type[Any]]\"\n-       \"tuple[type, ...]\" is incompatible with \"Tuple[type]\"\n+       \"tuple[Type[Any], ...]\" is incompatible with \"Tuple[Type[Any]]\"\n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:611:9 - error: Type of \"dependency\" is partially unknown\n+     Type of \"dependency\" is \"LazyValue[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:618:42 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"dependency\" in function \"set_default\"\n+     Argument type is \"LazyValue[object] | LazyValue[Unknown]\" (reportUnknownArgumentType)\n- 711 errors, 31 warnings, 0 informations \n+ 713 errors, 31 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:26:61 - error: Expression of type \"None\" cannot be assigned to parameter of type \"List[type]\"\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:26:61 - error: Expression of type \"None\" cannot be assigned to parameter of type \"List[Type[Unknown]]\"\n-     \"None\" is incompatible with \"List[type]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"List[Type[Unknown]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:47:34 - error: Cannot access member \"typeName\" for type \"type\"\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:47:34 - error: Cannot access member \"typeName\" for type \"Type[Unknown]\"\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:67:27 - error: Cannot access member \"typeName\" for type \"type\"\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pyspark/decorators.py:67:27 - error: Cannot access member \"typeName\" for type \"Type[Unknown]\"\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:199:20 - error: Expression of type \"type*\" cannot be assigned to return type \"type[_DataType@register_dtype]\"\n-     Type \"type*\" cannot be assigned to type \"type[_DataType@register_dtype]\" (reportGeneralTypeIssues)\n-     \"None\" is incompatible with \"type\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Type[Unknown]\" (reportGeneralTypeIssues)\n- 1208 errors, 10 warnings, 0 informations \n+ 1207 errors, 10 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:241:14 - error: Argument of type \"Unknown | type | Any\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n-     Type \"Unknown | type | Any\" cannot be assigned to type \"FunctionType\"\n-       \"type\" is incompatible with \"FunctionType\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aws_lambda/patch.py:264:16 - error: Argument of type \"Unknown | type | Any\" cannot be assigned to parameter \"wf\" of type \"WrappedFunction\" in function \"unwrap\"\n-     Type \"Unknown | type | Any\" cannot be assigned to type \"WrappedFunction\"\n-       \"type\" is incompatible with protocol \"WrappedFunction\"\n-         \"__dd_wrapped__\" is not present\n-         \"__dd_wrappers__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1256:14 - error: Cannot assign member \"pytestmark\" for type \"type\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1256:14 - error: Cannot assign member \"pytestmark\" for type \"type[Any]\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1258:10 - error: Cannot access member \"pytestmark\" for type \"type\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1258:10 - error: Cannot access member \"pytestmark\" for type \"type[Any]\"\n- 9459 errors, 464 warnings, 0 informations \n+ 9457 errors, 464 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize): typechecking got 1.80x slower (12.8s -> 23.0s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211027ac254a19ac2905d2",
    "number": 6547,
    "body": "…a variable initialized with `{}` or `[]` was not flagged as \"partially unknown\" by the `reportUnknownArgument` check when used as an argument to a call. This resulted in a small type hole. This addresses #6514.",
    "head_branch": "issue6514-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\noperator (https://github.com/canonical/operator)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1928:74 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"query\" in function \"_request\"\n+     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2645:51 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"query\" in function \"_request\"\n+     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n- 55 errors, 0 warnings, 0 informations \n+ 57 errors, 0 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:576:73 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"dummy_splits_array\" in function \"__similarity_threshold_loop\"\n+     Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n- 508 errors, 30 warnings, 7 informations \n+ 509 errors, 30 warnings, 7 informations \n\npyinstrument (https://github.com/joerick/pyinstrument)\n+ /tmp/mypy_primer/projects/pyinstrument/pyinstrument/__main__.py\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/__main__.py:52:9 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__value\" in function \"__setitem__\"\n+     Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/__main__.py:53:9 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__value\" in function \"__setitem__\"\n+     Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n+ /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:81:34 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"stats\" in function \"render_frame\"\n+     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:85:30 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__value\" in function \"dumps\"\n+     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n- 31 errors, 5 warnings, 0 informations \n+ 35 errors, 5 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed the behavior for empty dict or list expressions. Previously, a variable initialized with `{}` or `[]` was not flagged as \"partially unknown\" by the `reportUnknownArgument` check when used as an argument to a call. This resulted in a small type hole. This addresses #6514. (#6547)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211028ac254a19ac2905d3",
    "number": 6546,
    "body": "… expressions.",
    "head_branch": "bidiAssignment",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_debugger.py:576:99 - error: Argument of type \"dict[Unknown, <subclass of Probe and FunctionLocationMixin>]\" cannot be assigned to parameter \"wrappers\" of type \"Dict[str, FunctionProbe]\" in function \"_dd_debugger_wrapper\"\n-     \"dict[Unknown, <subclass of Probe and FunctionLocationMixin>]\" is incompatible with \"Dict[str, FunctionProbe]\"\n-       Type parameter \"_VT@dict\" is invariant, but \"<subclass of Probe and FunctionLocationMixin>\" is not the same as \"FunctionProbe\"\n-       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n- 9460 errors, 464 warnings, 0 informations \n+ 9459 errors, 464 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Added support for bidirectional type inference for chained assignment expressions. (#6546)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211029ac254a19ac2905d4",
    "number": 6545,
    "body": "…a variable initialized with `{}` or `[]` was not flagged as \"partially unknown\" by the `reportUnknownArgument` check when used as an argument to a call. This resulted in a small type hole. This addresses #6514.",
    "head_branch": "issue6514",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/ops/model.py\n+   /tmp/mypy_primer/projects/operator/ops/model.py:1931:28 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__value\" in function \"__setitem__\"\n+     Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1928:74 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"query\" in function \"_request\"\n+     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2645:51 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"query\" in function \"_request\"\n+     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n- 55 errors, 0 warnings, 0 informations \n+ 58 errors, 0 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:576:73 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"dummy_splits_array\" in function \"__similarity_threshold_loop\"\n+     Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n- 508 errors, 30 warnings, 7 informations \n+ 509 errors, 30 warnings, 7 informations \n\npyinstrument (https://github.com/joerick/pyinstrument)\n+ /tmp/mypy_primer/projects/pyinstrument/pyinstrument/__main__.py\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/__main__.py:52:9 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__value\" in function \"__setitem__\"\n+     Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/__main__.py:53:9 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__value\" in function \"__setitem__\"\n+     Argument type is \"list[Unknown]\" (reportUnknownArgumentType)\n+ /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:81:34 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"stats\" in function \"render_frame\"\n+     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:85:30 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__value\" in function \"dumps\"\n+     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n- 31 errors, 5 warnings, 0 informations \n+ 35 errors, 5 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621102aac254a19ac2905d5",
    "number": 6541,
    "body": "…o a function when it involves a `__new__` method that returns `Self`. This addresses #6529.",
    "head_branch": "issue6529",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to incorrect conversion from a class constructor to a function when it involves a `__new__` method that returns `Self`. This addresses #6529. (#6541)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621102bac254a19ac2905d6",
    "number": 6540,
    "body": "…eneric type alias. Improved diagnostic message for `assert_type` failures when printed types look the same when not using the full name of the type. This addresses #6531.",
    "head_branch": "issue6531",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1033:21 - error: \"assert_type\" mismatch: expected \"bool\" but received \"Scalar\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1033:21 - error: \"assert_type\" mismatch: expected \"bool\" but received \"str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1730:23 - error: \"assert_type\" mismatch: expected \"Scalar\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1730:23 - error: \"assert_type\" mismatch: expected \"str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex\" but received \"DataFrame\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2037:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[tuple[Unknown, ...], DataFrame]]\" but received \"Iterator[tuple[Scalar, DataFrame]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2037:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[tuple[Unknown, ...], DataFrame]]\" but received \"Iterator[tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2039:17 - error: \"assert_type\" mismatch: expected \"tuple[tuple[Unknown, ...], DataFrame]\" but received \"tuple[Scalar, DataFrame]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2039:17 - error: \"assert_type\" mismatch: expected \"tuple[tuple[Unknown, ...], DataFrame]\" but received \"tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2041:23 - error: \"assert_type\" mismatch: expected \"tuple[Unknown, ...]\" but received \"Scalar\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2041:23 - error: \"assert_type\" mismatch: expected \"tuple[Unknown, ...]\" but received \"str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2056:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[tuple[Unknown, ...], DataFrame]]\" but received \"Iterator[tuple[Scalar, DataFrame]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2056:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[tuple[Unknown, ...], DataFrame]]\" but received \"Iterator[tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2058:17 - error: \"assert_type\" mismatch: expected \"tuple[tuple[Unknown, ...], DataFrame]\" but received \"tuple[Scalar, DataFrame]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2058:17 - error: \"assert_type\" mismatch: expected \"tuple[tuple[Unknown, ...], DataFrame]\" but received \"tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2060:23 - error: \"assert_type\" mismatch: expected \"tuple[Unknown, ...]\" but received \"Scalar\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2060:23 - error: \"assert_type\" mismatch: expected \"tuple[Unknown, ...]\" but received \"str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2080:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[Period, DataFrame]]\" but received \"Iterator[tuple[Scalar, DataFrame]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2080:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[Period, DataFrame]]\" but received \"Iterator[tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2082:17 - error: \"assert_type\" mismatch: expected \"tuple[Period, DataFrame]\" but received \"tuple[Scalar, DataFrame]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2082:17 - error: \"assert_type\" mismatch: expected \"tuple[Period, DataFrame]\" but received \"tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2084:23 - error: \"assert_type\" mismatch: expected \"Period\" but received \"Scalar\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2084:23 - error: \"assert_type\" mismatch: expected \"Period\" but received \"str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2089:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[Timestamp, DataFrame]]\" but received \"Iterator[tuple[Scalar, DataFrame]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2089:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[Timestamp, DataFrame]]\" but received \"Iterator[tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2091:17 - error: \"assert_type\" mismatch: expected \"tuple[Timestamp, DataFrame]\" but received \"tuple[Scalar, DataFrame]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2091:17 - error: \"assert_type\" mismatch: expected \"tuple[Timestamp, DataFrame]\" but received \"tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2093:23 - error: \"assert_type\" mismatch: expected \"Timestamp\" but received \"Scalar\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2093:23 - error: \"assert_type\" mismatch: expected \"Timestamp\" but received \"str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2098:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[Timedelta, DataFrame]]\" but received \"Iterator[tuple[Scalar, DataFrame]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2098:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[Timedelta, DataFrame]]\" but received \"Iterator[tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2100:17 - error: \"assert_type\" mismatch: expected \"tuple[Timedelta, DataFrame]\" but received \"tuple[Scalar, DataFrame]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2100:17 - error: \"assert_type\" mismatch: expected \"tuple[Timedelta, DataFrame]\" but received \"tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2102:23 - error: \"assert_type\" mismatch: expected \"Timedelta\" but received \"Scalar\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2102:23 - error: \"assert_type\" mismatch: expected \"Timedelta\" but received \"str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2111:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[Interval[Timestamp], DataFrame]]\" but received \"Iterator[tuple[Scalar, DataFrame]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2111:17 - error: \"assert_type\" mismatch: expected \"Iterator[tuple[Interval[Timestamp], DataFrame]]\" but received \"Iterator[tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2113:17 - error: \"assert_type\" mismatch: expected \"tuple[Interval[Timestamp], DataFrame]\" but received \"tuple[Scalar, DataFrame]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2113:17 - error: \"assert_type\" mismatch: expected \"tuple[Interval[Timestamp], DataFrame]\" but received \"tuple[str | bytes | date | datetime | timedelta | Unknown | bool | int | float | Timestamp | Timedelta | complex, DataFrame]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2115:23 - error: \"assert_type\" mismatch: expected \"Interval[Timestamp]\" but received \"Scalar\" (reportGeneralTypeIssues)\n\n... (truncated 121 lines) ...\n\n```"
    ],
    "commit_messages": [
      "Improved error handling for failures when explicitly specializing a generic type alias. Improved diagnostic message for `assert_type` failures when printed types look the same when not using the full name of the type. This addresses #6531. (#6540)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621102cac254a19ac2905d7",
    "number": 6539,
    "body": "…owing when the subject was typed with a constrained TypeVar.",
    "head_branch": "issue6532",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug in literal pattern matching that resulted in incorrect narrowing when the subject was typed with a constrained TypeVar. (#6539)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621102dac254a19ac2905d8",
    "number": 6520,
    "body": "…es where a recursive type alias was used and hit an internal recursion limit. This addresses #6511.",
    "head_branch": "issue6511",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n\n... (truncated 14 lines) ...\n\n```"
    ],
    "commit_messages": [
      "Fixed bug that resulted in a false positive under certain circumstances where a recursive type alias was used and hit an internal recursion limit. This addresses #6511. (#6520)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621102eac254a19ac2905d9",
    "number": 6519,
    "body": "This should allow Pylance (and Pyright) to support files that come from locations other than the local file system.\r\n\r\nAll locations that used to refer to a file path have now been changed to a URI with the following exceptions:\r\n\r\n- command line arguments still use strings. They're converted to URIs when being consumed by the Pyright server.\r\n- tests still use strings. This meant changing a lot less code in the tests. Conversion happens in the testState layer and in some of the other setup code\r\n- realFileSystem converts URIs to their file path, so it's making an assumption that all URIs are actually files. This will be addressed at a future point (in Pylance actually).\r\n\r\nSome other caveats:\r\n- Empty string is not allowed as a filePath anymore (importResolver used this to distinguish unresolved paths). This has been replaced with an 'Empty' URI.\r\n- Performance is slightly slower. For running against Pandas, Resolving imports now takes about 800ms vs 500ms. This could potentially be improved with more work on optimization.\r\n- Optimization was done mostly with caching (or memoization). This _shouldnt_ have much memory overhead as the number of unique items is actually rather small compared to the number of calls, but it may need more testing on larger code bases to make sure.",
    "head_branch": "rchiodo/uri_for_file",
    "is_a_fork": true,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nrclip (https://github.com/yurijmikhalevich/rclip)\n- /tmp/mypy_primer/projects/rclip/benchmarks/similarity_search.py\n+ file:///tmp/mypy_primer/projects/rclip/benchmarks/similarity_search.py\n-   /tmp/mypy_primer/projects/rclip/benchmarks/similarity_search.py:3:8 - error: Import \"numpy\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/benchmarks/similarity_search.py:3:8 - error: Import \"numpy\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/benchmarks/similarity_search.py:4:6 - warning: Import \"tqdm\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/benchmarks/similarity_search.py:4:6 - warning: Import \"tqdm\" could not be resolved from source (reportMissingModuleSource)\n- /tmp/mypy_primer/projects/rclip/rclip/main.py\n+ file:///tmp/mypy_primer/projects/rclip/rclip/main.py\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:8:8 - error: Import \"numpy\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/main.py:8:8 - error: Import \"numpy\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:9:6 - warning: Import \"tqdm\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/main.py:9:6 - warning: Import \"tqdm\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:10:8 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/main.py:10:8 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/main.py:11:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/main.py:11:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:24 - warning: Import \"PIL.ImageFile\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/main.py:11:24 - warning: Import \"PIL.ImageFile\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:30:27 - error: Expected type arguments for generic class \"DirEntry\" (reportMissingTypeArgument)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/main.py:30:27 - error: Expected type arguments for generic class \"DirEntry\" (reportMissingTypeArgument)\n- /tmp/mypy_primer/projects/rclip/rclip/model.py\n+ file:///tmp/mypy_primer/projects/rclip/rclip/model.py\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:5:8 - error: Import \"numpy\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:5:8 - error: Import \"numpy\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:6:8 - error: Import \"numpy.typing\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:6:8 - error: Import \"numpy.typing\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:28:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:28:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:35:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:35:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:46:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:46:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:56:12 - error: Import \"torch\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:56:12 - error: Import \"torch\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:64:12 - error: Import \"torch\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:64:12 - error: Import \"torch\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:7:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:7:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:7:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:7:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:140:95 - error: Type of parameter \"x\" is partially unknown (reportUnknownLambdaType)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:140:95 - error: Type of parameter \"x\" is partially unknown (reportUnknownLambdaType)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:140:98 - error: Return type of lambda is unknown (reportUnknownLambdaType)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/model.py:140:98 - error: Return type of lambda is unknown (reportUnknownLambdaType)\n- /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py\n+ file:///tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:144:12 - error: Import \"torch.backends.mps\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:144:12 - error: Import \"torch.backends.mps\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:7:8 - warning: Import \"requests\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:7:8 - warning: Import \"requests\" could not be resolved from source (reportMissingModuleSource)\n- /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py\n+ file:///tmp/mypy_primer/projects/rclip/rclip/utils/preview.py\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n- /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py\n+ file:///tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py\n-   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:3:8 - error: Import \"jinja2\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:3:8 - error: Import \"jinja2\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:4:8 - error: Import \"poet\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:4:8 - error: Import \"poet\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:5:8 - warning: Import \"requests\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:5:8 - warning: Import \"requests\" could not be resolved from source (reportMissingModuleSource)\n- /tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py\n+ file:///tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py\n-   /tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py:5:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py:5:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py:17:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n\n... (truncated 25 lines) ...\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n- /tmp/mypy_primer/projects/alectryon/alectryon/cli.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/cli.py\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:238:10 - error: Import \"dominate.util\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/cli.py:238:10 - error: Import \"dominate.util\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:297:10 - error: Import \"dominate\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/cli.py:297:10 - error: Import \"dominate\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:298:10 - error: Import \"dominate.util\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/cli.py:298:10 - error: Import \"dominate.util\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:114:10 - warning: Import \"docutils.core\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/cli.py:114:10 - warning: Import \"docutils.core\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:115:10 - warning: Import \"docutils.io\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/cli.py:115:10 - warning: Import \"docutils.io\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:166:10 - warning: Import \"docutils.core\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/cli.py:166:10 - warning: Import \"docutils.core\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:228:10 - warning: Import \"bs4\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/cli.py:228:10 - warning: Import \"bs4\" could not be resolved from source (reportMissingModuleSource)\n- /tmp/mypy_primer/projects/alectryon/alectryon/core.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/core.py\n-   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:277:23 - error: No overloads for \"finditer\" match the provided arguments (reportGeneralTypeIssues)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/core.py:277:23 - error: No overloads for \"finditer\" match the provided arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:277:35 - error: Argument of type \"Literal['^', b\"^\"]\" cannot be assigned to parameter \"pattern\" of type \"str | Pattern[str]\" in function \"finditer\" (reportGeneralTypeIssues)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/core.py:277:35 - error: Argument of type \"Literal['^', b\"^\"]\" cannot be assigned to parameter \"pattern\" of type \"str | Pattern[str]\" in function \"finditer\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:458:14 - error: No overloads for \"check_output\" match the provided arguments (reportGeneralTypeIssues)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/core.py:458:14 - error: No overloads for \"check_output\" match the provided arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:458:58 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"binpath\" of type \"str\" in function \"resolve_driver\"\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/core.py:458:58 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"binpath\" of type \"str\" in function \"resolve_driver\"\n- /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:71:8 - warning: Import \"docutils\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:71:8 - warning: Import \"docutils\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:72:8 - warning: Import \"docutils.frontend\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:72:8 - warning: Import \"docutils.frontend\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:73:8 - warning: Import \"docutils.transforms\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:73:8 - warning: Import \"docutils.transforms\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:74:8 - warning: Import \"docutils.utils\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:74:8 - warning: Import \"docutils.utils\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:75:8 - warning: Import \"docutils.writers\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:75:8 - warning: Import \"docutils.writers\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:6 - warning: Import \"docutils\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:6 - warning: Import \"docutils\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:22 - warning: Import \"docutils.nodes\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:22 - warning: Import \"docutils.nodes\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:81:6 - warning: Import \"docutils.readers.standalone\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:81:6 - warning: Import \"docutils.readers.standalone\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:82:6 - warning: Import \"docutils.transforms\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:82:6 - warning: Import \"docutils.transforms\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:6 - warning: Import \"docutils.writers\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:6 - warning: Import \"docutils.writers\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:30 - warning: Import \"docutils.writers.html4css1\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:30 - warning: Import \"docutils.writers.html4css1\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:41 - warning: Import \"docutils.writers.html5_polyglot\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:41 - warning: Import \"docutils.writers.html5_polyglot\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:57 - warning: Import \"docutils.writers.latex2e\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:57 - warning: Import \"docutils.writers.latex2e\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:66 - warning: Import \"docutils.writers.xetex\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:66 - warning: Import \"docutils.writers.xetex\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:148:40 - error: Cannot access member \"rawsource\" for type \"Node\"\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:148:40 - error: Cannot access member \"rawsource\" for type \"Node\"\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:1197:14 - warning: Import \"docutils.statemachine\" could not be resolved from source (reportMissingModuleSource)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:1197:14 - warning: Import \"docutils.statemachine\" could not be resolved from source (reportMissingModuleSource)\n- /tmp/mypy_primer/projects/alectryon/alectryon/html.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/html.py\n-   /tmp/mypy_primer/projects/alectryon/alectryon/html.py:25:6 - error: Import \"dominate\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/alectryon/alectryon/html.py:25:6 - error: Import \"dominate\" could not be resolved (reportMissingImports)\n\n... (truncated 62 lines) ...\n\nbidict (https://github.com/jab/bidict)\n- /tmp/mypy_primer/projects/bidict/bidict/_iter.py\n+ file:///tmp/mypy_primer/projects/bidict/bidict/_iter.py\n-   /tmp/mypy_primer/projects/bidict/bidict/_iter.py:29:20 - error: Return type of generator function must be compatible with \"Generator[tuple[KT@iteritems, VT@iteritems] | tuple[tuple[KT@iteritems, VT@iteritems], Unknown], Any, Any]\"\n+   file:///tmp/mypy_primer/projects/bidict/bidict/_iter.py:29:20 - error: Return type of generator function must be compatible with \"Generator[tuple[KT@iteritems, VT@iteritems] | tuple[tuple[KT@iteritems, VT@iteritems], Unknown], Any, Any]\"\n- /tmp/mypy_primer/projects/bidict/docs/conf.py\n+ file:///tmp/mypy_primer/projects/bidict/docs/conf.py\n-   /tmp/mypy_primer/projects/bidict/docs/conf.py:50:12 - error: Import \"sphinx_copybutton\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/bidict/docs/conf.py:50:12 - error: Import \"sphinx_copybutton\" could not be resolved (reportMissingImports)\n- /tmp/mypy_primer/projects/bidict/docs/conftest.py\n+ file:///tmp/mypy_primer/projects/bidict/docs/conftest.py\n-   /tmp/mypy_primer/projects/bidict/docs/conftest.py:14:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/bidict/docs/conftest.py:14:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n- /tmp/mypy_primer/projects/bidict/tests/conftest.py\n+ file:///tmp/mypy_primer/projects/bidict/tests/conftest.py\n-   /tmp/mypy_primer/projects/bidict/tests/conftest.py:7:6 - error: Import \"hypothesis\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/bidict/tests/conftest.py:7:6 - error: Import \"hypothesis\" could not be resolved (reportMissingImports)\n- /tmp/mypy_primer/projects/bidict/tests/test_class_relationships.py\n+ file:///tmp/mypy_primer/projects/bidict/tests/test_class_relationships.py\n-   /tmp/mypy_primer/projects/bidict/tests/test_class_relationships.py:19:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/bidict/tests/test_class_relationships.py:19:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n- /tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py\n+ file:///tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py\n-   /tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py:16:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py:16:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n- /tmp/mypy_primer/projects/bidict/tests/property_tests/_strategies.py\n+ file:///tmp/mypy_primer/projects/bidict/tests/property_tests/_strategies.py\n-   /tmp/mypy_primer/projects/bidict/tests/property_tests/_strategies.py:17:8 - error: Import \"hypothesis.strategies\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/bidict/tests/property_tests/_strategies.py:17:8 - error: Import \"hypothesis.strategies\" could not be resolved (reportMissingImports)\n- /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py\n+ file:///tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py\n-   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:27:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:27:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:28:6 - error: Import \"hypothesis\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:28:6 - error: Import \"hypothesis\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:29:6 - error: Import \"hypothesis\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:29:6 - error: Import \"hypothesis\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:30:6 - error: Import \"hypothesis\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:30:6 - error: Import \"hypothesis\" could not be resolved (reportMissingImports)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n- /tmp/mypy_primer/projects/steam.py/poetry_build.py\n+ file:///tmp/mypy_primer/projects/steam.py/poetry_build.py\n-   /tmp/mypy_primer/projects/steam.py/poetry_build.py:8:12 - error: Import \"tomllib\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/steam.py/poetry_build.py:8:12 - error: Import \"tomllib\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/steam.py/poetry_build.py:10:12 - error: Import \"tomli\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/steam.py/poetry_build.py:10:12 - error: Import \"tomli\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/steam.py/poetry_build.py:14:13 - error: Type of \"loads\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/poetry_build.py:14:13 - error: Type of \"loads\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/poetry_build.py:46:23 - error: Type of \"split\" is partially unknown\n+   file:///tmp/mypy_primer/projects/steam.py/poetry_build.py:46:23 - error: Type of \"split\" is partially unknown\n-   /tmp/mypy_primer/projects/steam.py/poetry_build.py:47:9 - error: Type of \"split\" is partially unknown\n+   file:///tmp/mypy_primer/projects/steam.py/poetry_build.py:47:9 - error: Type of \"split\" is partially unknown\n- /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py\n+ file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:3:8 - error: Import \"discord\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:3:8 - error: Import \"discord\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:4:6 - error: Import \"discord.ext\" could not be resolved (reportMissingImports)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:4:6 - error: Import \"discord.ext\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:9:18 - error: Type of \"Bot\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:9:18 - error: Type of \"Bot\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:11:9 - error: Type of \"__init__\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:11:9 - error: Type of \"__init__\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:12:28 - error: Type of \"when_mentioned_or\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:12:28 - error: Type of \"when_mentioned_or\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:13:21 - error: Type of \"Intents\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:13:21 - error: Type of \"Intents\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:13:21 - error: Type of \"all\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:13:21 - error: Type of \"all\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:24:13 - error: Type of \"start\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:24:13 - error: Type of \"start\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:30:15 - error: Type of \"close\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:30:15 - error: Type of \"close\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:33:20 - error: Type of \"BadArgument\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:33:20 - error: Type of \"BadArgument\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:38:9 - error: Type of \"__init__\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:38:9 - error: Type of \"__init__\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:44:34 - error: Type of \"Context\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:44:34 - error: Type of \"Context\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:44:29 - error: Type of parameter \"ctx\" is unknown (reportUnknownParameterType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:44:29 - error: Type of parameter \"ctx\" is unknown (reportUnknownParameterType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:46:26 - error: Type of \"bot\" is unknown (reportUnknownMemberType)\n+   file:///tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:46:26 - error: Type of \"bot\" is unknown (reportUnknownMemberType)\n\n... (truncated 1619 lines) ...```",
      "@rchiodo, I think it would be preferable not to output the `file://` part of the URI in errors output by the CLI. It's redundant since the CLI deals only with files, not other URI types.",
      "> @rchiodo, I think it would be preferable not to output the `file://` part of the URI in errors output by the CLI. It's redundant since the CLI deals only with files, not other URI types.\r\n\r\nWill do.",
      "I'll also need to see why those imports aren't found. And potentially add tests for those cases.",
      "Don't worry about the imports. These \"mypy_primer\" tests produce many errors. The import errors are expected because \"mypy_primer\" doesn't install dependencies for most of these code bases before it runs the type checker. The purpose of \"mypy_primer\" is to run before and after a change to see if there are any differences in the output.",
      "> Don't worry about the imports. These \"mypy_primer\" tests produce many errors. The import errors are expected because \"mypy_primer\" doesn't install dependencies for most of these code bases before it runs the type checker. The purpose of \"mypy_primer\" is to run before and after a change to see if there are any differences in the output.\r\n\r\nOh I initially thought these were bugs. I should have looked closer, it was just a difference in the output paths. ",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nrclip (https://github.com/yurijmikhalevich/rclip)\n- /tmp/mypy_primer/projects/rclip/benchmarks/similarity_search.py\n+ file:///tmp/mypy_primer/projects/rclip/benchmarks/similarity_search.py\n- /tmp/mypy_primer/projects/rclip/rclip/main.py\n+ file:///tmp/mypy_primer/projects/rclip/rclip/main.py\n- /tmp/mypy_primer/projects/rclip/rclip/model.py\n+ file:///tmp/mypy_primer/projects/rclip/rclip/model.py\n- /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py\n+ file:///tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py\n- /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py\n+ file:///tmp/mypy_primer/projects/rclip/rclip/utils/preview.py\n- /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py\n+ file:///tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py\n- /tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py\n+ file:///tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n- /tmp/mypy_primer/projects/alectryon/alectryon/cli.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/cli.py\n- /tmp/mypy_primer/projects/alectryon/alectryon/core.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/core.py\n- /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/docutils.py\n- /tmp/mypy_primer/projects/alectryon/alectryon/html.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/html.py\n- /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/minimal.py\n- /tmp/mypy_primer/projects/alectryon/alectryon/myst.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/myst.py\n- /tmp/mypy_primer/projects/alectryon/alectryon/pygments.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/pygments.py\n- /tmp/mypy_primer/projects/alectryon/alectryon/pygments_lexer.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/pygments_lexer.py\n- /tmp/mypy_primer/projects/alectryon/alectryon/pygments_style.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/pygments_style.py\n- /tmp/mypy_primer/projects/alectryon/alectryon/sphinx.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/sphinx.py\n- /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py\n+ file:///tmp/mypy_primer/projects/alectryon/alectryon/transforms.py\n\nbidict (https://github.com/jab/bidict)\n- /tmp/mypy_primer/projects/bidict/bidict/_iter.py\n+ file:///tmp/mypy_primer/projects/bidict/bidict/_iter.py\n- /tmp/mypy_primer/projects/bidict/docs/conf.py\n+ file:///tmp/mypy_primer/projects/bidict/docs/conf.py\n- /tmp/mypy_primer/projects/bidict/docs/conftest.py\n+ file:///tmp/mypy_primer/projects/bidict/docs/conftest.py\n- /tmp/mypy_primer/projects/bidict/tests/conftest.py\n+ file:///tmp/mypy_primer/projects/bidict/tests/conftest.py\n- /tmp/mypy_primer/projects/bidict/tests/test_class_relationships.py\n+ file:///tmp/mypy_primer/projects/bidict/tests/test_class_relationships.py\n- /tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py\n+ file:///tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py\n- /tmp/mypy_primer/projects/bidict/tests/property_tests/_strategies.py\n+ file:///tmp/mypy_primer/projects/bidict/tests/property_tests/_strategies.py\n- /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py\n+ file:///tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py\n\npydantic (https://github.com/samuelcolvin/pydantic)\n- /tmp/mypy_primer/projects/pydantic/pydantic/__init__.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/__init__.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/annotated_handlers.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/annotated_handlers.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/color.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/color.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/fields.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/fields.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/functional_serializers.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/functional_serializers.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/functional_validators.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/functional_validators.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/main.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/main.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/networks.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/networks.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/root_model.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/root_model.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/type_adapter.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/type_adapter.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/types.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/types.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/version.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/version.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_config.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_config.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_utils.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_dataclasses.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_dataclasses.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators_v1.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_decorators_v1.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_discriminated_union.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_discriminated_union.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_fields.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_fields.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_known_annotated_metadata.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_known_annotated_metadata.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_mock_val_ser.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_mock_val_ser.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_model_construction.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_model_construction.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_schema_generation_shared.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_schema_generation_shared.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_std_types_schema.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_std_types_schema.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_validate_call.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_validate_call.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_validators.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/_internal/_validators.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/plugin/__init__.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/plugin/__init__.py\n- /tmp/mypy_primer/projects/pydantic/pydantic/plugin/_schema_validator.py\n+ file:///tmp/mypy_primer/projects/pydantic/pydantic/plugin/_schema_validator.py\n\nspack (https://github.com/spack/spack)\n- /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py\n- /tmp/mypy_primer/projects/spack/lib/spack/docs/_pygments/style.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/docs/_pygments/style.py\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lang.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lang.py\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/llnl/util/link_tree.py\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/multiproc.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/llnl/util/multiproc.py\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/colify.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/colify.py\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py\n- /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/pty.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/pty.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/abi.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/abi.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/builder.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/builder.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/ci_optimization.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/ci_optimization.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/config.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/database.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/dependency.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/dependency.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/directory_layout.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/directory_layout.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/error.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/error.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/extensions.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/extensions.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/filesystem_view.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/filesystem_view.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/graph.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/graph.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/main.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/main.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/mirror.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/mirror.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/package.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/package.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/package_prefs.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/package_prefs.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/package_test.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/package_test.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/parser.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/parser.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/paths.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/paths.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/provider_index.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/provider_index.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/relocate.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate_text.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/relocate_text.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/report.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/report.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/rewiring.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/rewiring.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1287:2 - error: Argument missing for parameter \"cls\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:223:31 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:224:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:345:39 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:383:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4990:26 - error: Cannot access member \"name_and_data\" for type \"type[SpecfileReaderBase]\"\n-     Member \"name_and_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:5068:47 - error: Cannot access member \"dependencies_from_node_dict\" for type \"type[SpecfileReaderBase]\"\n-     Member \"dependencies_from_node_dict\" is unknown (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/spec_list.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/spec_list.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/stage.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/stage.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/store.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/store.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/tag.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/tag.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/target.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/target.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/tengine.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/tengine.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:221:51 - error: Argument of type \"None\" cannot be assigned to parameter \"parent\" of type \"Spec\" in function \"__init__\"\n-     \"None\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:530:58 - error: Cannot access member \"spec\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/url.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/url.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/user_environment.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/user_environment.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/variant.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/variant.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/bootstrap/_common.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/bootstrap/_common.py\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/bootstrap/config.py\n+ file:///tmp/mypy_primer/projects/spack/lib/spack/spack/bootstrap/config.py\n\n... (truncated 638 lines) ...\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n- /tmp/mypy_primer/projects/Tanjun/docs_src/usage.py\n+ file:///tmp/mypy_primer/projects/Tanjun/docs_src/usage.py\n- /tmp/mypy_primer/projects/Tanjun/examples/checks.py\n+ file:///tmp/mypy_primer/projects/Tanjun/examples/checks.py\n- /tmp/mypy_primer/projects/Tanjun/examples/error_handling.py\n+ file:///tmp/mypy_primer/projects/Tanjun/examples/error_handling.py\n- /tmp/mypy_primer/projects/Tanjun/examples/impls.py\n+ file:///tmp/mypy_primer/projects/Tanjun/examples/impls.py\n- /tmp/mypy_primer/projects/Tanjun/examples/injection.py\n+ file:///tmp/mypy_primer/projects/Tanjun/examples/injection.py\n- /tmp/mypy_primer/projects/Tanjun/examples/message_commands.py\n+ file:///tmp/mypy_primer/projects/Tanjun/examples/message_commands.py\n- /tmp/mypy_primer/projects/Tanjun/examples/run_gateway.py\n+ file:///tmp/mypy_primer/projects/Tanjun/examples/run_gateway.py\n- /tmp/mypy_primer/projects/Tanjun/examples/run_rest.py\n+ file:///tmp/mypy_primer/projects/Tanjun/examples/run_rest.py\n- /tmp/mypy_primer/projects/Tanjun/examples/slash_commands.py\n+ file:///tmp/mypy_primer/projects/Tanjun/examples/slash_commands.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/errors.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py (reportImportCycles)\n- /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/checks.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/clients.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/components.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/components.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/errors.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/injecting.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/injecting.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/schedules.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/schedules.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/utilities.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/utilities.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/cache.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/_internal/cache.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py (reportImportCycles)\n- /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/commands/message.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/message.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py (reportImportCycles)\n- /tmp/mypy_primer/projects/Tanjun/tanjun/context/autocomplete.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/autocomplete.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/context/base.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/base.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n- /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/async_cache.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/async_cache.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/data.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/data.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/locales.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/locales.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py\n- /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/reloaders.py\n+ file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/reloaders.py\n- /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py\n\n... (truncated 65 lines) ...\n\noperator (https://github.com/canonical/operator)\n- /tmp/mypy_primer/projects/operator/ops/charm.py\n+ file:///tmp/mypy_primer/projects/operator/ops/charm.py\n- /tmp/mypy_primer/projects/operator/ops/pebble.py\n+ file:///tmp/mypy_primer/projects/operator/ops/pebble.py\n- /tmp/mypy_primer/projects/operator/ops/storage.py\n+ file:///tmp/mypy_primer/projects/operator/ops/storage.py\n- /tmp/mypy_primer/projects/operator/test/test_lib.py\n+ file:///tmp/mypy_primer/projects/operator/test/test_lib.py\n- /tmp/mypy_primer/projects/operator/test/test_model.py\n+ file:///tmp/mypy_primer/projects/operator/test/test_model.py\n- /tmp/mypy_primer/projects/operator/test/test_pebble.py\n+ file:///tmp/mypy_primer/projects/operator/test/test_pebble.py\n- /tmp/mypy_primer/projects/operator/test/test_real_pebble.py\n+ file:///tmp/mypy_primer/projects/operator/test/test_real_pebble.py\n- /tmp/mypy_primer/projects/operator/test/test_testing.py\n+ file:///tmp/mypy_primer/projects/operator/test/test_testing.py\n\nmkosi (https://github.com/systemd/mkosi)\n- /tmp/mypy_primer/projects/mkosi/mkosi/config.py\n+ file:///tmp/mypy_primer/projects/mkosi/mkosi/config.py\n- /tmp/mypy_primer/projects/mkosi/tests/test_config.py\n+ file:///tmp/mypy_primer/projects/mkosi/tests/test_config.py\n- /tmp/mypy_primer/projects/mkosi/tests/test_json.py\n+ file:///tmp/mypy_primer/projects/mkosi/tests/test_json.py\n- /tmp/mypy_primer/projects/mkosi/tests/test_versioncomp.py\n+ file:///tmp/mypy_primer/projects/mkosi/tests/test_versioncomp.py\n\npandas (https://github.com/pandas-dev/pandas)\n- /tmp/mypy_primer/projects/pandas/pandas/_typing.py\n+ file:///tmp/mypy_primer/projects/pandas/pandas/_typing.py\n- /tmp/mypy_primer/projects/pandas/pandas/conftest.py\n+ file:///tmp/mypy_primer/projects/pandas/pandas/conftest.py\n- /tmp/mypy_primer/projects/pandas/pandas/_libs/algos.pyi\n+ file:///tmp/mypy_primer/projects/pandas/pandas/_libs/algos.pyi\n- /tmp/mypy_primer/projects/pandas/pandas/_libs/arrays.pyi\n+ file:///tmp/mypy_primer/projects/pandas/pandas/_libs/arrays.pyi\n- /tmp/mypy_primer/projects/pandas/pandas/_libs/groupby.pyi\n+ file:///tmp/mypy_primer/projects/pandas/pandas/_libs/groupby.pyi\n- /tmp/mypy_primer/projects/pandas/pandas/_libs/hashing.pyi\n\n... (truncated 1527 lines) ...```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1287:2 - error: Argument missing for parameter \"cls\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:223:31 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:224:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:345:39 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:383:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4990:26 - error: Cannot access member \"name_and_data\" for type \"type[SpecfileReaderBase]\"\n-     Member \"name_and_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:5068:47 - error: Cannot access member \"dependencies_from_node_dict\" for type \"type[SpecfileReaderBase]\"\n-     Member \"dependencies_from_node_dict\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:221:51 - error: Argument of type \"None\" cannot be assigned to parameter \"parent\" of type \"Spec\" in function \"__init__\"\n-     \"None\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:530:58 - error: Cannot access member \"spec\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:33:29 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:34:33 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:74:46 - error: \"microarchitecture\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:76:48 - error: \"path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:245:41 - error: Cannot access member \"_start_mark\" for type \"syaml_str\"\n-     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3829 errors, 48 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/errors.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/CaptureMethodBase.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/CaptureMethodBase.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py (reportImportCycles)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:6 - error: Import \"win32con\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:6 - warning: Import \"win32con\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:22 - error: Type of \"SM_CXVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:42 - error: Type of \"SM_CYVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:62 - error: Type of \"SM_XVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:81 - error: Type of \"SM_YVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:14:8 - error: Import \"win32ui\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:25:10 - error: Import \"_win32typing\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:14:8 - warning: Import \"win32ui\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:25:30 - error: Type of \"PyCDC\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:87:19 - error: Type of parameter \"dc\" is unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:25:55 - error: Unnecessary \"# pyright: ignore\" rule: \"reportMissingModuleSource\"\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:8:8 - error: Import \"pywintypes\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:9:8 - error: Import \"win32con\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:10:8 - error: Import \"win32ui\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:8:8 - warning: Import \"pywintypes\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:9:8 - warning: Import \"win32con\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:10:8 - warning: Import \"win32ui\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:16:73 - error: Type of \"try_delete_dc\" is partially unknown\n+     Type of \"try_delete_dc\" is \"(dc: Unknown) -> None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:49:13 - error: Type of \"dc_object\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:58:13 - error: Type of \"compatible_dc\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:59:13 - error: Type of \"bitmap\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:76:23 - error: Argument type is unknown\n+     Argument corresponds to parameter \"dc\" in function \"try_delete_dc\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:77:23 - error: Argument type is unknown\n+     Argument corresponds to parameter \"dc\" in function \"try_delete_dc\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:79:31 - error: Argument type is unknown\n+     Argument corresponds to parameter \"handle\" in function \"DeleteObject\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py:9:8 - error: Import \"win32con\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py:9:8 - warning: Import \"win32con\" could not be resolved from source (reportMissingModuleSource)\n- 508 errors, 30 warnings, 7 informations \n+ 529 errors, 24 warnings, 7 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-     /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py\n+     file:///tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py\n-     /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py (reportImportCycles)\n\nmypy-protobuf (https://github.com/dropbox/mypy-protobuf)\n- venv venv_3.8.17 subdirectory not found in venv path /tmp/mypy_primer/projects/mypy-protobuf.\n+ venv venv_3.8.17 subdirectory not found in venv path file:///tmp/mypy_primer/projects/mypy-protobuf.\n\nspeedrun.com_global_scoreboard_webapp (https://github.com/Avasam/speedrun.com_global_scoreboard_webapp)\n-     /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py\n+     file:///tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py\n-     /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py (reportImportCycles)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:5:8 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:5:8 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:82:23 - error: \"expat\" is not a known member of module \"xmltodict\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:21:12 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:57:40 - error: Argument of type \"str | Unknown | bytes | list[Unknown]\" cannot be assigned to parameter \"xml_input\" of type \"str | ReadableBuffer | SupportsRead[bytes] | GeneratorType[ReadableBuffer, Any, Any]\" in function \"parse\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:21:12 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/utils.py:12:8 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/utils.py:12:8 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pylons/middleware.py:10:8 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pylons/middleware.py:10:8 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pylons/middleware.py:133:31 - error: \"expat\" is not a known member of module \"xmltodict\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:25:16 - warning: Import \"uwsgi\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:49:24 - warning: Import \"uwsgidecorators\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:49:24 - error: Import \"uwsgidecorators\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:29:18 - error: \"opt\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:39:14 - error: \"numproc\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:39:40 - error: \"opt\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:39:71 - error: \"worker_id\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:40:22 - error: \"opt\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:386:12 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:386:12 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:410:16 - error: Expression of type \"dict[Any, Unknown] | Any | OrderedDict[str, Any] | Literal['']\" cannot be assigned to return type \"Dict[str, Any]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:410:16 - error: Expression of type \"dict[Any, Unknown] | Any | Unknown | Literal['']\" cannot be assigned to return type \"Dict[str, Any]\"\n-     Type \"dict[Any, Unknown] | Any | OrderedDict[str, Any] | Literal['']\" cannot be assigned to type \"Dict[str, Any]\"\n+     Type \"dict[Any, Unknown] | Any | Unknown | Literal['']\" cannot be assigned to type \"Dict[str, Any]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9440 errors, 464 warnings, 0 informations \n+ 9453 errors, 457 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n- venv venv subdirectory not found in venv path /tmp/mypy_primer/projects/materialize/misc/python.\n+ venv venv subdirectory not found in venv path file:///tmp/mypy_primer/projects/materialize/misc/python.\n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1287:2 - error: Argument missing for parameter \"cls\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:223:31 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:224:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:345:39 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:383:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4990:26 - error: Cannot access member \"name_and_data\" for type \"type[SpecfileReaderBase]\"\n-     Member \"name_and_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:5068:47 - error: Cannot access member \"dependencies_from_node_dict\" for type \"type[SpecfileReaderBase]\"\n-     Member \"dependencies_from_node_dict\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:221:51 - error: Argument of type \"None\" cannot be assigned to parameter \"parent\" of type \"Spec\" in function \"__init__\"\n-     \"None\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:530:58 - error: Cannot access member \"spec\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:33:29 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:34:33 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:74:46 - error: \"microarchitecture\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:76:48 - error: \"path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:245:41 - error: Cannot access member \"_start_mark\" for type \"syaml_str\"\n-     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3829 errors, 48 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/errors.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/CaptureMethodBase.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/CaptureMethodBase.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py (reportImportCycles)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:6 - error: Import \"win32con\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:6 - warning: Import \"win32con\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:22 - error: Type of \"SM_CXVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:42 - error: Type of \"SM_CYVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:62 - error: Type of \"SM_XVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:81 - error: Type of \"SM_YVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:14:8 - error: Import \"win32ui\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:25:10 - error: Import \"_win32typing\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:14:8 - warning: Import \"win32ui\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:25:30 - error: Type of \"PyCDC\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:87:19 - error: Type of parameter \"dc\" is unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:25:55 - error: Unnecessary \"# pyright: ignore\" rule: \"reportMissingModuleSource\"\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:8:8 - error: Import \"pywintypes\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:9:8 - error: Import \"win32con\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:10:8 - error: Import \"win32ui\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:8:8 - warning: Import \"pywintypes\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:9:8 - warning: Import \"win32con\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:10:8 - warning: Import \"win32ui\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:16:73 - error: Type of \"try_delete_dc\" is partially unknown\n+     Type of \"try_delete_dc\" is \"(dc: Unknown) -> None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:49:13 - error: Type of \"dc_object\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:58:13 - error: Type of \"compatible_dc\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:59:13 - error: Type of \"bitmap\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:76:23 - error: Argument type is unknown\n+     Argument corresponds to parameter \"dc\" in function \"try_delete_dc\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:77:23 - error: Argument type is unknown\n+     Argument corresponds to parameter \"dc\" in function \"try_delete_dc\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:79:31 - error: Argument type is unknown\n+     Argument corresponds to parameter \"handle\" in function \"DeleteObject\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py:9:8 - error: Import \"win32con\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py:9:8 - warning: Import \"win32con\" could not be resolved from source (reportMissingModuleSource)\n- 508 errors, 30 warnings, 7 informations \n+ 529 errors, 24 warnings, 7 informations \n\nmypy-protobuf (https://github.com/dropbox/mypy-protobuf)\n- venv venv_3.8.17 subdirectory not found in venv path /tmp/mypy_primer/projects/mypy-protobuf.\n+ venv venv_3.8.17 subdirectory not found in venv path file:///tmp/mypy_primer/projects/mypy-protobuf.\n\nspeedrun.com_global_scoreboard_webapp (https://github.com/Avasam/speedrun.com_global_scoreboard_webapp)\n-     /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py\n+     file:///tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py\n-     /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py (reportImportCycles)\n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-     /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py\n+     file:///tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py\n-     /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py (reportImportCycles)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:5:8 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:5:8 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:82:23 - error: \"expat\" is not a known member of module \"xmltodict\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:21:12 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:57:40 - error: Argument of type \"str | Unknown | bytes | list[Unknown]\" cannot be assigned to parameter \"xml_input\" of type \"str | ReadableBuffer | SupportsRead[bytes] | GeneratorType[ReadableBuffer, Any, Any]\" in function \"parse\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:21:12 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/utils.py:12:8 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/utils.py:12:8 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pylons/middleware.py:10:8 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pylons/middleware.py:10:8 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pylons/middleware.py:133:31 - error: \"expat\" is not a known member of module \"xmltodict\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:25:16 - warning: Import \"uwsgi\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:49:24 - warning: Import \"uwsgidecorators\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:49:24 - error: Import \"uwsgidecorators\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:29:18 - error: \"opt\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:39:14 - error: \"numproc\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:39:40 - error: \"opt\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:39:71 - error: \"worker_id\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:40:22 - error: \"opt\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:386:12 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:386:12 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:410:16 - error: Expression of type \"dict[Any, Unknown] | Any | OrderedDict[str, Any] | Literal['']\" cannot be assigned to return type \"Dict[str, Any]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:410:16 - error: Expression of type \"dict[Any, Unknown] | Any | Unknown | Literal['']\" cannot be assigned to return type \"Dict[str, Any]\"\n-     Type \"dict[Any, Unknown] | Any | OrderedDict[str, Any] | Literal['']\" cannot be assigned to type \"Dict[str, Any]\"\n+     Type \"dict[Any, Unknown] | Any | Unknown | Literal['']\" cannot be assigned to type \"Dict[str, Any]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9440 errors, 464 warnings, 0 informations \n+ 9453 errors, 457 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n- venv venv subdirectory not found in venv path /tmp/mypy_primer/projects/materialize/misc/python.\n+ venv venv subdirectory not found in venv path file:///tmp/mypy_primer/projects/materialize/misc/python.\n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1287:2 - error: Argument missing for parameter \"cls\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:223:31 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:224:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:345:39 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:383:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4990:26 - error: Cannot access member \"name_and_data\" for type \"type[SpecfileReaderBase]\"\n-     Member \"name_and_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:5068:47 - error: Cannot access member \"dependencies_from_node_dict\" for type \"type[SpecfileReaderBase]\"\n-     Member \"dependencies_from_node_dict\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:221:51 - error: Argument of type \"None\" cannot be assigned to parameter \"parent\" of type \"Spec\" in function \"__init__\"\n-     \"None\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:530:58 - error: Cannot access member \"spec\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:33:29 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:34:33 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:74:46 - error: \"microarchitecture\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:76:48 - error: \"path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:245:41 - error: Cannot access member \"_start_mark\" for type \"syaml_str\"\n-     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3829 errors, 48 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/errors.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/CaptureMethodBase.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/CaptureMethodBase.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py (reportImportCycles)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:6 - error: Import \"win32con\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:6 - warning: Import \"win32con\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:22 - error: Type of \"SM_CXVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:42 - error: Type of \"SM_CYVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:62 - error: Type of \"SM_XVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:17:81 - error: Type of \"SM_YVIRTUALSCREEN\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:14:8 - error: Import \"win32ui\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:25:10 - error: Import \"_win32typing\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:14:8 - warning: Import \"win32ui\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:25:30 - error: Type of \"PyCDC\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:87:19 - error: Type of parameter \"dc\" is unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/utils.py:25:55 - error: Unnecessary \"# pyright: ignore\" rule: \"reportMissingModuleSource\"\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:8:8 - error: Import \"pywintypes\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:9:8 - error: Import \"win32con\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:10:8 - error: Import \"win32ui\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:8:8 - warning: Import \"pywintypes\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:9:8 - warning: Import \"win32con\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:10:8 - warning: Import \"win32ui\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:16:73 - error: Type of \"try_delete_dc\" is partially unknown\n+     Type of \"try_delete_dc\" is \"(dc: Unknown) -> None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:49:13 - error: Type of \"dc_object\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:58:13 - error: Type of \"compatible_dc\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:59:13 - error: Type of \"bitmap\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:76:23 - error: Argument type is unknown\n+     Argument corresponds to parameter \"dc\" in function \"try_delete_dc\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:77:23 - error: Argument type is unknown\n+     Argument corresponds to parameter \"dc\" in function \"try_delete_dc\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:79:31 - error: Argument type is unknown\n+     Argument corresponds to parameter \"handle\" in function \"DeleteObject\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py:9:8 - error: Import \"win32con\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py:9:8 - warning: Import \"win32con\" could not be resolved from source (reportMissingModuleSource)\n- 508 errors, 30 warnings, 7 informations \n+ 529 errors, 24 warnings, 7 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-     /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py\n+     file:///tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py\n-     /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py (reportImportCycles)\n\nspeedrun.com_global_scoreboard_webapp (https://github.com/Avasam/speedrun.com_global_scoreboard_webapp)\n-     /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py\n+     file:///tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py\n-     /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py (reportImportCycles)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:5:8 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:5:8 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_handlers.py:82:23 - error: \"expat\" is not a known member of module \"xmltodict\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:21:12 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:57:40 - error: Argument of type \"str | Unknown | bytes | list[Unknown]\" cannot be assigned to parameter \"xml_input\" of type \"str | ReadableBuffer | SupportsRead[bytes] | GeneratorType[ReadableBuffer, Any, Any]\" in function \"parse\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:21:12 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/utils.py:12:8 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/utils.py:12:8 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pylons/middleware.py:10:8 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pylons/middleware.py:10:8 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pylons/middleware.py:133:31 - error: \"expat\" is not a known member of module \"xmltodict\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:25:16 - warning: Import \"uwsgi\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:49:24 - warning: Import \"uwsgidecorators\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:49:24 - error: Import \"uwsgidecorators\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:29:18 - error: \"opt\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:39:14 - error: \"numproc\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:39:40 - error: \"opt\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:39:71 - error: \"worker_id\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/uwsgi.py:40:22 - error: \"opt\" is not a known member of module \"uwsgi\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:386:12 - error: Import \"xmltodict\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:386:12 - warning: Import \"xmltodict\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:410:16 - error: Expression of type \"dict[Any, Unknown] | Any | OrderedDict[str, Any] | Literal['']\" cannot be assigned to return type \"Dict[str, Any]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:410:16 - error: Expression of type \"dict[Any, Unknown] | Any | Unknown | Literal['']\" cannot be assigned to return type \"Dict[str, Any]\"\n-     Type \"dict[Any, Unknown] | Any | OrderedDict[str, Any] | Literal['']\" cannot be assigned to type \"Dict[str, Any]\"\n+     Type \"dict[Any, Unknown] | Any | Unknown | Literal['']\" cannot be assigned to type \"Dict[str, Any]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9440 errors, 464 warnings, 0 informations \n+ 9453 errors, 457 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1287:2 - error: Argument missing for parameter \"cls\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:223:31 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:224:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:345:39 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:383:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4990:26 - error: Cannot access member \"name_and_data\" for type \"type[SpecfileReaderBase]\"\n-     Member \"name_and_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:5068:47 - error: Cannot access member \"dependencies_from_node_dict\" for type \"type[SpecfileReaderBase]\"\n-     Member \"dependencies_from_node_dict\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:221:51 - error: Argument of type \"None\" cannot be assigned to parameter \"parent\" of type \"Spec\" in function \"__init__\"\n-     \"None\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:530:58 - error: Cannot access member \"spec\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:33:29 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:34:33 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:74:46 - error: \"microarchitecture\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:76:48 - error: \"path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:245:41 - error: Cannot access member \"_start_mark\" for type \"syaml_str\"\n-     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3829 errors, 48 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/abc.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/errors.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/menu.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/context/message.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/callbacks.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/__init__.py\n-     /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/owners.py (reportImportCycles)\n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoControlledThread.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/error_messages.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/error_messages.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/CaptureMethodBase.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/CaptureMethodBase.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py (reportImportCycles)\n-     /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/user_profile.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py\n-     /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py (reportImportCycles)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9440 errors, 464 warnings, 0 informations \n+ 9445 errors, 464 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n-     /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py\n+     file:///tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py\n-     /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py (reportImportCycles)\n\nspeedrun.com_global_scoreboard_webapp (https://github.com/Avasam/speedrun.com_global_scoreboard_webapp)\n-     /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py\n+     file:///tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py\n-     /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py (reportImportCycles)\n+     file:///tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py (reportImportCycles)\n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon): typechecking got 8058.78x slower (0.0s -> 13.2s)\n(Performance measurements are based on a single noisy sample)\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1287:2 - error: Argument missing for parameter \"cls\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:223:31 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:224:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:345:39 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:383:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4990:26 - error: Cannot access member \"name_and_data\" for type \"type[SpecfileReaderBase]\"\n-     Member \"name_and_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:5068:47 - error: Cannot access member \"dependencies_from_node_dict\" for type \"type[SpecfileReaderBase]\"\n-     Member \"dependencies_from_node_dict\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:221:51 - error: Argument of type \"None\" cannot be assigned to parameter \"parent\" of type \"Spec\" in function \"__init__\"\n-     \"None\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:530:58 - error: Cannot access member \"spec\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:33:29 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:34:33 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:74:46 - error: \"microarchitecture\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:76:48 - error: \"path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:245:41 - error: Cannot access member \"_start_mark\" for type \"syaml_str\"\n-     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3829 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9440 errors, 464 warnings, 0 informations \n+ 9445 errors, 464 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize): typechecking got 2.17x slower (10.7s -> 23.3s)\n(Performance measurements are based on a single noisy sample)\n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1287:2 - error: Argument missing for parameter \"cls\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:223:31 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:224:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:345:39 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:383:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4990:26 - error: Cannot access member \"name_and_data\" for type \"type[SpecfileReaderBase]\"\n-     Member \"name_and_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:5068:47 - error: Cannot access member \"dependencies_from_node_dict\" for type \"type[SpecfileReaderBase]\"\n-     Member \"dependencies_from_node_dict\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:221:51 - error: Argument of type \"None\" cannot be assigned to parameter \"parent\" of type \"Spec\" in function \"__init__\"\n-     \"None\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:530:58 - error: Cannot access member \"spec\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:33:29 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:34:33 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:74:46 - error: \"microarchitecture\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:76:48 - error: \"path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:245:41 - error: Cannot access member \"_start_mark\" for type \"syaml_str\"\n-     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3829 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9440 errors, 464 warnings, 0 informations \n+ 9445 errors, 464 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1287:2 - error: Argument missing for parameter \"cls\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:223:31 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:224:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:345:39 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:383:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4990:26 - error: Cannot access member \"name_and_data\" for type \"type[SpecfileReaderBase]\"\n-     Member \"name_and_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:5068:47 - error: Cannot access member \"dependencies_from_node_dict\" for type \"type[SpecfileReaderBase]\"\n-     Member \"dependencies_from_node_dict\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:221:51 - error: Argument of type \"None\" cannot be assigned to parameter \"parent\" of type \"Spec\" in function \"__init__\"\n-     \"None\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:530:58 - error: Cannot access member \"spec\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:33:29 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:34:33 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:74:46 - error: \"microarchitecture\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:76:48 - error: \"path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:245:41 - error: Cannot access member \"_start_mark\" for type \"syaml_str\"\n-     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3829 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9440 errors, 464 warnings, 0 informations \n+ 9445 errors, 464 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1287:2 - error: Argument missing for parameter \"cls\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:223:31 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:224:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:345:39 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:383:35 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4990:26 - error: Cannot access member \"name_and_data\" for type \"type[SpecfileReaderBase]\"\n-     Member \"name_and_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:5068:47 - error: Cannot access member \"dependencies_from_node_dict\" for type \"type[SpecfileReaderBase]\"\n-     Member \"dependencies_from_node_dict\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:221:51 - error: Argument of type \"None\" cannot be assigned to parameter \"parent\" of type \"Spec\" in function \"__init__\"\n-     \"None\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:530:58 - error: Cannot access member \"spec\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:33:29 - error: \"operating_system\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:34:33 - error: \"target\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:74:46 - error: \"microarchitecture\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:76:48 - error: \"path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:245:41 - error: Cannot access member \"_start_mark\" for type \"syaml_str\"\n-     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3829 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9440 errors, 464 warnings, 0 informations \n+ 9445 errors, 464 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/gcs.py:28:34 - error: \"storage\" is unknown import symbol (reportGeneralTypeIssues)\n- 3828 errors, 48 warnings, 0 informations \n+ 3827 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask_login/test_flask_login_appsec.py:3:25 - error: \"LoginManager\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask_login/test_flask_login_appsec.py:4:25 - error: \"UserMixin\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask_login/test_flask_login_appsec.py:5:25 - error: \"current_user\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_buffer.py:4:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_case.py:4:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:6:21 - error: \"FormatError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:7:21 - error: \"OutOfData\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:8:21 - error: \"StackError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:9:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:10:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:8:21 - error: \"Packer\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:9:21 - error: \"PackOverflowError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:10:21 - error: \"PackValueError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:11:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:12:21 - error: \"UnpackValueError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:13:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_newspec.py:3:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_pack.py:11:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_pack.py:12:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_read_size.py:2:21 - error: \"OutOfData\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_read_size.py:3:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_unpack.py:4:21 - error: \"OutOfData\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_unpack.py:5:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n- 9386 errors, 456 warnings, 0 informations \n+ 9368 errors, 456 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/gcs.py:28:34 - error: \"storage\" is unknown import symbol (reportGeneralTypeIssues)\n- 3828 errors, 48 warnings, 0 informations \n+ 3827 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask_login/test_flask_login_appsec.py:3:25 - error: \"LoginManager\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask_login/test_flask_login_appsec.py:4:25 - error: \"UserMixin\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask_login/test_flask_login_appsec.py:5:25 - error: \"current_user\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_buffer.py:4:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_case.py:4:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:6:21 - error: \"FormatError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:7:21 - error: \"OutOfData\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:8:21 - error: \"StackError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:9:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:10:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:8:21 - error: \"Packer\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:9:21 - error: \"PackOverflowError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:10:21 - error: \"PackValueError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:11:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:12:21 - error: \"UnpackValueError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:13:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_newspec.py:3:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_pack.py:11:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_pack.py:12:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_read_size.py:2:21 - error: \"OutOfData\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_read_size.py:3:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_unpack.py:4:21 - error: \"OutOfData\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_unpack.py:5:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n- 9386 errors, 456 warnings, 0 informations \n+ 9368 errors, 456 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/gcs.py:28:34 - error: \"storage\" is unknown import symbol (reportGeneralTypeIssues)\n- 3834 errors, 48 warnings, 0 informations \n+ 3833 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask_login/test_flask_login_appsec.py:3:25 - error: \"LoginManager\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask_login/test_flask_login_appsec.py:4:25 - error: \"UserMixin\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask_login/test_flask_login_appsec.py:5:25 - error: \"current_user\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_buffer.py:4:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_case.py:4:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:6:21 - error: \"FormatError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:7:21 - error: \"OutOfData\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:8:21 - error: \"StackError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:9:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_except.py:10:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:8:21 - error: \"Packer\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:9:21 - error: \"PackOverflowError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:10:21 - error: \"PackValueError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:11:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:12:21 - error: \"UnpackValueError\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_limits.py:13:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_newspec.py:3:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_pack.py:11:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_pack.py:12:21 - error: \"unpackb\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_read_size.py:2:21 - error: \"OutOfData\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_read_size.py:3:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_unpack.py:4:21 - error: \"OutOfData\" is unknown import symbol (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/vendor/msgpack/test_unpack.py:5:21 - error: \"Unpacker\" is unknown import symbol (reportGeneralTypeIssues)\n- 9370 errors, 455 warnings, 0 informations \n+ 9352 errors, 455 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize): typechecking got 1.96x slower (11.2s -> 22.0s)\n(Performance measurements are based on a single noisy sample)\n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9370 errors, 455 warnings, 0 informations \n+ 9375 errors, 455 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:105:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:118:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:132:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:144:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:158:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9370 errors, 455 warnings, 0 informations \n+ 9375 errors, 455 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:104:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:117:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:131:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:143:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:157:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9560 errors, 443 warnings, 0 informations \n+ 9565 errors, 443 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:104:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:117:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:131:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:143:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:157:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9563 errors, 447 warnings, 0 informations \n+ 9568 errors, 447 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:104:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:117:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:131:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:143:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:157:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9563 errors, 447 warnings, 0 informations \n+ 9568 errors, 447 warnings, 0 informations \n\n```",
      "There seems to be no cache misses with the current code. I added a counter to the import resolver for when a cache miss happened in both this version and the current main. That counter came out the same for both.\r\n\r\nI may have at one point had problems with the cache, but seems like those are fixed. Next step is to see if the memoization is worth the effort or not.",
      "Seems with the cache working, memoization is no longer necessary. It doesn't buy us any noticeable difference. I'm removing it.",
      "I also ran a bunch of memory analysis with pandas and some other repositories (by dumping V8 heap stats after running the CLI version of Pyright)\r\n\r\nThe memory usage is like 5-10% worse with the URIs than with strings. Memoization doubled that number. ",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:104:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:117:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:131:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:143:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:157:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9563 errors, 447 warnings, 0 informations \n+ 9568 errors, 447 warnings, 0 informations \n\n```",
      "> The memory usage is like 5-10% worse with the URIs than with strings\r\n\r\nI'm really surprised by this. My intuition is that it should be in the noise — less than 0.1%. These URIs should not be created very often, especially with aggressive caching in the import resolution code paths. Any idea where these are getting created on a regular basis?",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:104:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:117:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:131:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:143:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:157:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9563 errors, 447 warnings, 0 informations \n+ 9568 errors, 447 warnings, 0 informations \n\n```",
      "> > The memory usage is like 5-10% worse with the URIs than with strings\r\n> \r\n> I'm really surprised by this. My intuition is that it should be in the noise — less than 0.1%. These URIs should not be created very often, especially with aggressive caching in the import resolution code paths. Any idea where these are getting created on a regular basis?\r\n\r\nMaybe I should have given more detail. Here's an example difference:\r\n\r\nWhat's in main:\r\n\r\n```\r\nHeap stats: {\r\n    \"total_heap_size\": 1512943616,\r\n    \"total_heap_size_executable\": 12058624,\r\n    \"total_physical_size\": 1512458160,\r\n    \"total_available_size\": 1404477464,\r\n    \"used_heap_size\": 767038960,\r\n    \"heap_size_limit\": 2197815296,\r\n    \"malloced_memory\": 532552,\r\n    \"peak_malloced_memory\": 19791200,\r\n    \"does_zap_garbage\": 0,\r\n    \"number_of_native_contexts\": 1,\r\n    \"number_of_detached_contexts\": 0,\r\n    \"total_global_handles_size\": 8192,\r\n    \"used_global_handles_size\": 4288,\r\n    \"external_memory\": 795519\r\n}\r\n```\r\n\r\nWhat's in this branch:\r\n\r\n```\r\nHeap stats: {\r\n    \"total_heap_size\": 1539198976,\r\n    \"total_heap_size_executable\": 12058624,\r\n    \"total_physical_size\": 1538550136,\r\n    \"total_available_size\": 1394446176,\r\n    \"used_heap_size\": 776694152,\r\n    \"heap_size_limit\": 2197815296,\r\n    \"malloced_memory\": 270408,\r\n    \"peak_malloced_memory\": 21914768,\r\n    \"does_zap_garbage\": 0,\r\n    \"number_of_native_contexts\": 1,\r\n    \"number_of_detached_contexts\": 0,\r\n    \"total_global_handles_size\": 8192,\r\n    \"used_global_handles_size\": 4288,\r\n    \"external_memory\": 795519\r\n}\r\n```\r\n\r\n5-10% for that example is an exaggeration, it's more like 1%.\r\n\r\nI added some instrumentation to see how many URIs get created for this example:\r\n\r\n```\r\nAnalysis stats\r\nTotal files parsed and bound: 1867\r\nTotal files checked: 1547\r\nTotal URIs created: 201216\r\n```\r\n\r\nSo 200K URIs.\r\n",
      "I'm working on adding more instrumentation to see what the most common call sites are. I'm guessing combinePath",
      "I was close. Most of it was getDirectory(), then combinePath():\r\n\r\n```\r\nAnalysis stats\r\nTotal files parsed and bound: 1867\r\nTotal files checked: 1547\r\nTotal URIs created: 201216\r\nURI call sites and count:\r\n FileUri.getDirectoryImpl  : 101100\r\n FileUri.combinePathsImpl  : 53829\r\n FileUri.addPath  : 33917\r\n Object.file  : 12362\r\n FileUri.getRootImpl  : 6\r\n __webpack_require__  : 1\r\n Object.parse  : 1\r\n```",
      "I did some more instrumentation to see what the first caller of the functions were:\r\n\r\nHere's like the top 15 spots:\r\n```\r\nTotal URIs created: 201216\r\n FileUri.getDirectory  -> ImportResolver.fileExistsCached  : 37406\r\n FileUri.addPath  -> ImportResolver._resolveAbsoluteImport  : 33913\r\n FileUri.getDirectory  -> ImportResolver.dirExistsCached  : 21785\r\n FileUri.combinePaths  -> ImportResolver._resolveAbsoluteImport  : 15536\r\n FileUri.getDirectory  -> ImportResolver.getModuleNameInfoFromPath  : 15502\r\n FileUri.combinePaths  -> ImportResolver.getModuleNameInfoFromPath  : 15431\r\n FileUri.getDirectory  -> ImportResolver._resolveAbsoluteImport  : 14132\r\n Object.file  -> RealFileSystem.realCasePath  : 12348\r\n FileUri.combinePaths  -> ImportResolver._getPyTypedInfo  : 10427\r\n FileUri.getDirectory  -> ImportResolver.resolveImportInternal  : 10388\r\n FileUri.combinePaths  -> /home/rich/source/pyright/packages/pyright/dist/pyright-internal.js:92649:48 : 5496\r\n FileUri.combinePaths  -> getFileSystemEntriesFromDirEntries  : 4248\r\n FileUri.getDirectory  -> ImportResolver._getModuleNameForImport  : 1693\r\n FileUri.combinePaths  -> /home/rich/source/pyright/packages/pyright/dist/pyright-internal.js:29553:76 : 840\r\n```\r\n\r\n",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:104:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:117:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:131:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:143:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:157:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9563 errors, 447 warnings, 0 informations \n+ 9568 errors, 447 warnings, 0 informations \n\n```",
      "> I did some more instrumentation to see what the first caller of the functions were\r\n\r\nIt looks like the vast majority of these are related to the `getDirectory` code path. Am I correct in assuming that a `Url` object is immutable once it's created? If so, then you should be able to cache the results of `getDirectory` and return it for all subsequent calls rather than constructing a new one. Looks like you're already doing this for `toString`, which caches `_formattedString`. My guess is that if you also cache the `_directory`, it will eliminate the vast majority of constructor calls.",
      "> > I did some more instrumentation to see what the first caller of the functions were\r\n> \r\n> It looks like the vast majority of these are related to the `getDirectory` code path. Am I correct in assuming that a `Url` object is immutable once it's created? If so, then you should be able to cache the results of `getDirectory` and return it for all subsequent calls rather than constructing a new one. Looks like you're already doing this for `toString`, which caches `_formattedString`. My guess is that if you also cache the `_directory`, it will eliminate the vast majority of constructor calls.\r\n\r\nYeah the memoization was doing this for me before, but some of the values could be cached internally as well. ",
      "Actually I think I'll add the memoization back. It's a much faster implementation of caching as it replaces the entire function with just the result. I can use this for all the properties.",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/maptree.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/maptree.py:502:7 - error: Class derives from one or more protocol classes but does not implement all required members\n+     Member \"__iter__\" is declared in protocol class \"Iterator\" (reportGeneralTypeIssues)\n- 202 errors, 0 warnings, 0 informations \n+ 203 errors, 0 warnings, 0 informations \n\nmypy-protobuf (https://github.com/dropbox/mypy-protobuf)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/dummy_pb2_grpc.pyi:14:7 - error: Class derives from one or more protocol classes but does not implement all required members\n+     Member \"__aiter__\" is declared in protocol class \"AsyncIterator\"\n+     Member \"__anext__\" is declared in protocol class \"AsyncIterator\"\n+     Member \"__iter__\" is declared in protocol class \"Iterator\"\n+     Member \"__next__\" is declared in protocol class \"Iterator\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mypy-protobuf/test/generated/testproto/grpc/import_pb2_grpc.pyi:15:7 - error: Class derives from one or more protocol classes but does not implement all required members\n+     Member \"__aiter__\" is declared in protocol class \"AsyncIterator\"\n+     Member \"__anext__\" is declared in protocol class \"AsyncIterator\"\n+     Member \"__iter__\" is declared in protocol class \"Iterator\"\n+     Member \"__next__\" is declared in protocol class \"Iterator\" (reportGeneralTypeIssues)\n- 21 errors, 24 warnings, 0 informations \n+ 23 errors, 24 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:104:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:117:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:131:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:143:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:157:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9563 errors, 447 warnings, 0 informations \n+ 9568 errors, 447 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+ /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/io/stata.pyi\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/io/stata.pyi:79:7 - error: Class derives from one or more protocol classes but does not implement all required members\n+     Member \"__iter__\" is declared in protocol class \"Iterator\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/io/parsers/readers.pyi\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/io/parsers/readers.pyi:435:7 - error: Class derives from one or more protocol classes but does not implement all required members\n+     Member \"__iter__\" is declared in protocol class \"Iterator\" (reportGeneralTypeIssues)\n- 1328 errors, 0 warnings, 0 informations \n+ 1330 errors, 0 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n+ /tmp/mypy_primer/projects/materialize/misc/python/stubs/pg8000/__init__.pyi\n+   /tmp/mypy_primer/projects/materialize/misc/python/stubs/pg8000/__init__.pyi:26:7 - error: Class derives from one or more protocol classes but does not implement all required members\n+     Member \"__enter__\" is declared in protocol class \"AbstractContextManager\" (reportGeneralTypeIssues)\n- 12 errors, 294 warnings, 0 informations \n+ 13 errors, 294 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:104:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:117:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:131:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:143:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:157:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9567 errors, 447 warnings, 0 informations \n+ 9572 errors, 447 warnings, 0 informations \n\n```",
      "After adding memoization back, the number of URIs came out to 16K instead of 200K. Memory usage so far is about the same as before. Although seems to be less than main in some aspects.\r\n\r\nHere's an example run:\r\n\r\nMain:\r\n\r\n```\r\nHeap stats: {\r\n    \"total_heap_size\": 1087954944,\r\n    \"total_heap_size_executable\": 21757952,\r\n    \"total_physical_size\": 1086502560,\r\n    \"total_available_size\": 1134131216,\r\n    \"used_heap_size\": 1044040584,\r\n    \"heap_size_limit\": 2197815296,\r\n    \"malloced_memory\": 270408,\r\n    \"peak_malloced_memory\": 22843392,\r\n    \"does_zap_garbage\": 0,\r\n    \"number_of_native_contexts\": 1,\r\n    \"number_of_detached_contexts\": 0,\r\n    \"total_global_handles_size\": 8192,\r\n    \"used_global_handles_size\": 4288,\r\n    \"external_memory\": 1278493\r\n}\r\n```\r\n\r\nURI branch:\r\n\r\n```\r\nHeap stats: {\r\n    \"total_heap_size\": 1126420480,\r\n    \"total_heap_size_executable\": 21757952,\r\n    \"total_physical_size\": 1124671088,\r\n    \"total_available_size\": 1100920840,\r\n    \"used_heap_size\": 1076603168,\r\n    \"heap_size_limit\": 2197815296,\r\n    \"malloced_memory\": 270408,\r\n    \"peak_malloced_memory\": 24030776,\r\n    \"does_zap_garbage\": 0,\r\n    \"number_of_native_contexts\": 1,\r\n    \"number_of_detached_contexts\": 0,\r\n    \"total_global_handles_size\": 8192,\r\n    \"used_global_handles_size\": 4288,\r\n    \"external_memory\": 1268986\r\n}\r\n```\r\n\r\nWithin 5% of main. That may be the noise level though, so it's hard to tell. This isn't exactly the most precise method for tracking memory usage :)",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:104:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:117:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:131:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:143:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/taint_sinks/test_weak_hash.py:157:12 - error: Import \"_md5\" could not be resolved (reportMissingImports)\n- 9567 errors, 447 warnings, 0 informations \n+ 9572 errors, 447 warnings, 0 informations \n\n```",
      "I believe @debonte and @heejaechang are finished?",
      "I can't seem to reproduce the mypy primer difference locally. I get the same output from what's in main and from this branch. Might have to actually run this with mypy primer.",
      "Seems there's no difference running it with mypy primer either. @erictraut can you run this locally?\r\n\r\nThe command to run it (after downloading mypy primer) would be:\r\n\r\n```\r\npython -m mypy_primer --repo https://github.com//rchiodo/pyright.git --new rchiodo/uri_for_file --old main -k dd-trace-py --debug --type-checker pyright -o diff\r\n```\r\n\r\n",
      "@rchiodo, yes, I'm able to repro the diff locally. It's a legit bug in the PR.\r\n\r\nThe problem shows up in the statement `import _md5`. The `_md5` refers to a native library (a `.so` file on my Mac). The actual file name is '_md5.cpython-311-darwin.so'. The bug was introduced in the method `_isNativeModuleFileName`. The old code was:\r\n\r\n```ts\r\n        // Strip off the final file extension and the part of the file name\r\n        // that excludes all (multi-part) file extensions. This allows us to\r\n        // handle file names like \"foo.cpython-32m.so\".\r\n        const fileExtension = getFileExtension(fileName, /* multiDotExtension */ false).toLowerCase();\r\n        const withoutExtension = stripFileExtension(fileName, /* multiDotExtension */ true);\r\n```\r\n\r\nWith the old logic, `withoutExtension` produced the value \"_md5\". \r\n\r\nHere's the new logic in your PR:\r\n\r\n```ts\r\n        const fileExtension = fileUri.extension.toLowerCase();\r\n        const withoutExtension = fileUri.fileNameWithoutExtension;\r\n```\r\n\r\nWith the new logic, `withoutExtension` produces the value \"_md5.cpython-311-darwin\", which doesn't match the import name.",
      "Looks like it's an easy fix. Just change the code in `_isNativeModuleFileName` to:\r\n\r\n```ts\r\n        const withoutExtension = fileUri.stripAllExtensions().fileName;\r\n```",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Change all file paths to use a new `URI` class. (#6519)\n\n* Preliminary idea\r\n\r\n* First commit\r\n\r\n* Refactor all uri based path functions to uriUtils\r\n\r\n* Most of real code building\r\n\r\n* More tests working\r\n\r\n* More progress on the tests\r\n\r\n* Rest of typecheck errors\r\n\r\n* Move URIs even further to prevent accidental issues\r\n\r\n* More tests\r\n\r\n* Relative path fixes\r\n\r\n* More test fixes and changes to 'startsWith'\r\n\r\n* Uri tests all passing\r\n\r\n* remove uri tests from path utils tests\r\n\r\n* Fix relative paths for partial stub remapping\r\n\r\n* Make isEmpty look empty and fix empty check for resolved paths\r\n\r\n* Fix module name retrieval issue\r\n\r\n* Use map instead of set for URI list\r\n\r\n* Another path is empty fix.\r\n\r\n* Fix importresolver finding source files for stubs\r\n\r\n* Fixup actual defs to match expected format\r\n\r\n* Relative path differences again\r\n\r\n* Fix some comparisons\r\n\r\n* More comparison fixes\r\n\r\n* Config of ('.') was using current directory to find module names\r\n\r\n* Shortcut empty URI for existence\r\n\r\n* Add back ignoring case\r\n\r\n* Fix regex matching\r\n\r\n* All tests passing\r\n\r\n* Fix build after merge\r\n\r\n* Fix failing tests\r\n\r\n* Fix rootDirectory and python path from interpreter\r\n\r\n* Some perf improvements\r\n\r\n* Don't bother reparsing in file system\r\n\r\n* More tests and some logging output\r\n\r\n* Extra data for analyzing slowness\r\n\r\n* Fix build problems\r\n\r\n* Refactor to not use vscode.URI except for initial parse\r\n\r\n* Try without vscode uri validation\r\n\r\n* Rework to new perf idea\r\n\r\n* Split out class and interface\r\n\r\n* All uri tests passing\r\n\r\n* Fix other tests\r\n\r\n* Cache results for faster perf\r\n\r\n* Add memoization decorator\r\n\r\n* combinePath remove one layer and make key gen faster\r\n\r\n* Move caches local\r\n\r\n* Generalize the memoization and optimize zero arg funcs\r\n\r\n* Cache more stuff\r\n\r\n* slight speedup for cache saving\r\n\r\n* slight improvement by just returning the cached item\r\n\r\n* Small optimization to skip loop if possible\r\n\r\n* Further speedup for similar calls of combinePath\r\n\r\n* Make it possible to switch between profiled and not\r\n\r\n* Another small optimization\r\n\r\n* Cache files in directory\r\n\r\n* Small opt for isNativeModuleFileName\r\n\r\n* Speed up getting pytyped info\r\n\r\n* Fix command line parsing to expand ~\r\nSlight perf improvement for exists cached by not splitting\r\n\r\n* Split out instrumenting memoization\r\n\r\n* Remove instrumented memoizationin\r\n\r\n* Fix comment\r\n\r\n* Fix build on ubuntu/mac\r\n\r\n* Fix windows specific problems with tests\r\nFix auto import to work with windows file paths\r\n\r\n* Fix command line output\r\n\r\n* Try fixing CI path for failing test\r\n\r\n* fix output paths in other spots\r\n\r\n* More file output locations\r\n\r\n* Output more data for failing test\r\n\r\n* Put validation back and fix test\r\n\r\n* Fix import cycles message to not show URI path\r\n\r\n* Remove printing of config options\r\n\r\n* More review feedback\r\n\r\n* Missed a spot in the review feedback\r\n\r\n* Fix build error\r\n\r\n* Update packages/pyright-internal/src/analyzer/importResolver.ts\r\n\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n\r\n* Update packages/pyright-internal/src/analyzer/analyzerFileInfo.ts\r\n\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n\r\n* Update packages/pyright-internal/src/analyzer/backgroundAnalysisProgram.ts\r\n\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n\r\n* Review feedback from Erik\r\n\r\n* Revert changes to launch.json\r\n\r\n* Fixup config options to use same roots as before\r\n\r\n* Fix casing for cwd test on windows\r\n\r\n* Fix spack differences\r\n\r\n* Add back in the instrumentation until figure import resolve cache\r\n\r\n* Fixup after merge\r\n\r\n* Fix another equals comparison\r\n\r\n* Merge error\r\n\r\n* Fix after merge\r\n\r\n* Fixup after merge\r\n\r\n* Keep track of case sensitivity in the URIs\r\n\r\n* Fix test failures on windows/mac\r\n\r\n* Switch to the faster version\r\n\r\n* Remove memoization\r\n\r\n* Review feedback for some renames\r\n\r\n* Review feedback\r\n\r\n* Feedback from Erik, put back memoization for simple stuff\r\n\r\n* fix prettier\r\n\r\n* Fix typo and cache URI creations\r\n\r\n* Add a comment\r\n\r\n* Review feedback from Eric\r\n\r\n* Fix crash in config options\r\n\r\n* Missed a piece of feedback\r\n\r\n---------\r\n\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621102fac254a19ac2905da",
    "number": 6518,
    "body": "…ression when the LHS is unbound. It should produce `Unknown` rather than `Never`. This addresses #6512.",
    "head_branch": "issue6512-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in incorrect type evaluation of an index expression when the LHS is unbound. It should produce `Unknown` rather than `Never`. This addresses #6512. (#6518)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211030ac254a19ac2905db",
    "number": 6517,
    "body": "…ression when the LHS is unbound. It should produce `Unknown` rather than `Never`. This addresses #6512.",
    "head_branch": "issue6512",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/optimize_reports/bt_output.py:379:29 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/optimize_reports/bt_output.py:379:60 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/optimize_reports/bt_output.py:380:37 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n- 559 errors, 38 warnings, 0 informations \n+ 562 errors, 38 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1093:17 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1562:32 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/spec_semantics.py:1311:12 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/spec_semantics.py:1312:12 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/spec_semantics.py:1315:24 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/s3.py:179:15 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3849 errors, 48 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/patch.py:607:40 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/patch.py:608:66 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/profiling/collector/test_stack.py:484:9 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n- 9439 errors, 464 warnings, 0 informations \n+ 9442 errors, 464 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:836:18 - error: Object of type \"Unbound\" is not subscriptable (reportGeneralTypeIssues)\n- 1208 errors, 10 warnings, 0 informations \n+ 1209 errors, 10 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211031ac254a19ac2905dc",
    "number": 6515,
    "body": "…in places where it's not allowed. This addresses https://github.com/python/mypy/issues/16535.",
    "head_branch": "invalidLiteral",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added check for the use of a bare `Literal` (with no type arguments) in places where it's not allowed. This addresses https://github.com/python/mypy/issues/16535. (#6515)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211031ac254a19ac2905dd",
    "number": 6509,
    "body": "… different types were concatenated using a `+` operator in a bidirectional inference context. This addresses #6273.",
    "head_branch": "issue6273",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type evaluation when two lists with different types were concatenated using a `+` operator in a bidirectional inference context. This addresses #6273. (#6509)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211032ac254a19ac2905de",
    "number": 6506,
    "body": "…mpatibility of two TypedDict definitions whose keys were typed with unions that included two other (compatible) TypedDict definitions. This addresses #6416.",
    "head_branch": "issue6416-4",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive when determining the type compatibility of two TypedDict definitions whose keys were typed with unions that included two other (compatible) TypedDict definitions. This addresses #6416. (#6506)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211033ac254a19ac2905df",
    "number": 6505,
    "body": "…thin a TypeVar bound or within a type annotation. This addresses #6503.",
    "head_branch": "issue6503",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "@erictraut I won't file a an issue because trying the same thing in [the mypy playground](https://mypy-play.net/?mypy=latest&python=3.12&flags=strict) seems to also result in an error. But I would like to get a sense of whether this behavior should be reconsidered, or there should be a test for it.\r\n\r\nHere's a code sample in [pyright playground](https://pyright-play.net/?strict=true&enableExperimentalFeatures=true&code=FAMwTg9gtgBALgTwA4EsB2BzGKpImOGAFWQFMATAERQGM4AaGGgQwGcHtWB9RJC82nGDBypEJx4Q4zADYAKOAC4YEAEYArUnQCUMALQA%2BGKogQZi4DCswwpOAFcwaCb36CFu5mnJM2cBWQA2iR8VIIAuoxw2gB0XJLSMvHAQA)\r\n\r\n```python\r\nfrom typing import TypedDict, cast, is_typeddict\r\n\r\ndef is_total(t: object) -> bool:\r\n    return is_typeddict(t) and cast(type[TypedDict], t).__total__\r\n    #                                    ~~~~~~~~~\r\n    # \"TypedDict\" cannot be used in this context\r\n```\r\n\r\nI wrote this code because I wanted to get to the `__total__` property of a `TypedDict`, but as of 1.1.337 this no longer works.\r\n\r\n`typing.is_typeddict` is not a type guard of any sort. There is also no protocol to describe the shape of a `TypedDict` subclass. So while it's \"weird\", `cast(type[TypedDict], ...)` seemed like the right call.\r\n\r\nI can accept working-as-intended, but it might be worth adding a test.\r\n\r\n\r\n",
      "`TypedDict` is a special form that's intended to be used to define new structural classes. It's not meant to be used as a runtime object. You're using it in a way that it was not intended to be used here, and I think it's correct for a type checker to report an error here. It looks like you're playing with some of the internal implementation details of Python's runtime. Such hackery will require some workarounds (like `# type: ignore`) if you want your code to type check without errors."
    ],
    "commit_messages": [
      "Added error reporting for illegal use of `TypedDict` or `Protocol` within a TypeVar bound or within a type annotation. This addresses #6503. (#6505)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211034ac254a19ac2905e0",
    "number": 6504,
    "body": "…mpatibility of two TypedDict definitions whose keys were typed with unions that included two other (compatible) TypedDict definitions. This addresses #6416.",
    "head_branch": "issue6416-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/graph.py:533:43 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/graph.py:533:52 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderLT[Any]*, ...]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderLT[Any]*, ...]\" cannot be assigned to type \"Iterable[str]\"\n+       \"tuple[str | SupportsDunderLT[Any]*, ...]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str | SupportsDunderLT[Any]*\" is not a subtype of \"str\"\n+           Type \"str | SupportsDunderLT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderLT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:767:86 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderLT[Any]*, ...]\" cannot be assigned to parameter \"virtuals\" of type \"Tuple[str, ...]\" in function \"__init__\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderLT[Any]*, ...]\" cannot be assigned to type \"Tuple[str, ...]\"\n+       \"tuple[str | SupportsDunderLT[Any]*, ...]\" is incompatible with \"Tuple[str, ...]\"\n+         Tuple entry 1 is incorrect type\n+           Type \"str | SupportsDunderLT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderLT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:778:52 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:778:61 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderLT[Any]*, ...]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderLT[Any]*, ...]\" cannot be assigned to type \"Iterable[str]\"\n+       \"tuple[str | SupportsDunderLT[Any]*, ...]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str | SupportsDunderLT[Any]*\" is not a subtype of \"str\"\n+           Type \"str | SupportsDunderLT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderLT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1481:36 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1481:45 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderLT[Any]*, ...]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderLT[Any]*, ...]\" cannot be assigned to type \"Iterable[str]\"\n+       \"tuple[str | SupportsDunderLT[Any]*, ...]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str | SupportsDunderLT[Any]*\" is not a subtype of \"str\"\n+           Type \"str | SupportsDunderLT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderLT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3850 errors, 48 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:569:23 - error: \"Coro[Iterable[str]]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n- 8391 errors, 23 warnings, 0 informations \n+ 8392 errors, 23 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/frame.pyi:1189:9 - error: Overload 2 for \"apply\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n- 1328 errors, 0 warnings, 0 informations \n+ 1329 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211035ac254a19ac2905e1",
    "number": 6502,
    "body": "…urns `Self`. This addresses #6500.",
    "head_branch": "issue6500",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to a false positive error when a `__getitem__` returns `Self`. This addresses #6500. (#6502)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211036ac254a19ac2905e2",
    "number": 6501,
    "body": "…mpatibility of two TypedDict definitions whose keys were typed with unions that included two other (compatible) TypedDict definitions. This addresses #6416.",
    "head_branch": "issue6416-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/graph.py:533:43 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/graph.py:533:52 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to type \"Iterable[str]\"\n+       \"tuple[str | SupportsDunderGT[Any]*, ...]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str | SupportsDunderGT[Any]*\" is not a subtype of \"str\"\n+           Type \"str | SupportsDunderGT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderGT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:767:86 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to parameter \"virtuals\" of type \"Tuple[str, ...]\" in function \"__init__\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to type \"Tuple[str, ...]\"\n+       \"tuple[str | SupportsDunderGT[Any]*, ...]\" is incompatible with \"Tuple[str, ...]\"\n+         Tuple entry 1 is incorrect type\n+           Type \"str | SupportsDunderGT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderGT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:778:52 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:778:61 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to type \"Iterable[str]\"\n+       \"tuple[str | SupportsDunderGT[Any]*, ...]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str | SupportsDunderGT[Any]*\" is not a subtype of \"str\"\n+           Type \"str | SupportsDunderGT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderGT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1481:36 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1481:45 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to type \"Iterable[str]\"\n+       \"tuple[str | SupportsDunderGT[Any]*, ...]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str | SupportsDunderGT[Any]*\" is not a subtype of \"str\"\n+           Type \"str | SupportsDunderGT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderGT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3850 errors, 48 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:569:23 - error: \"Coro[Iterable[str]]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n- 8391 errors, 23 warnings, 0 informations \n+ 8392 errors, 23 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+ /tmp/mypy_primer/projects/hydra-zen/tests/annotations/mypy_checks.py\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/mypy_checks.py:21:17 - error: \"assert_type\" mismatch: expected \"A\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/mypy_checks.py:47:17 - error: \"assert_type\" mismatch: expected \"A\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:241:9 - error: Overloaded implementation is not consistent with signature of overload 3\n+     Function return type \"type[Builds[Importable@__call__]]\" is incompatible with type \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[HydraPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[BuildsWithSig[type[R@__call__], P@__call__]]\"\n+       Type \"type[Builds[Importable@__call__]]\" cannot be assigned to type \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[HydraPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[BuildsWithSig[type[R@__call__], P@__call__]]\"\n+         \"type[Builds[Importable@__call__]]\" is incompatible with \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]]\"\n+         Type \"type[Builds[Importable@__call__]]\" cannot be assigned to type \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]]\"\n+           Type parameter \"T@Builds\" is covariant, but \"Importable@__call__\" is not a subtype of \"type[BuildsWithSig[Importable@__call__, Any]]\"\n+             Type \"Importable@__call__\" cannot be assigned to type \"type[BuildsWithSig[Importable@__call__, Any]]\"\n+         \"Builds[Importable@__call__]\" is incompatible with protocol \"ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]\"\n+         Type \"type[Builds[Importable@__call__]]\" cannot be assigned to type \"type[ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:241:9 - error: Overloaded implementation is not consistent with signature of overload 5\n+     Function return type \"type[ZenPartialBuilds[Importable@__call__]] | type[HydraPartialBuilds[Importable@__call__]]\" is incompatible with type \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[HydraPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[BuildsWithSig[type[R@__call__], P@__call__]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:241:9 - error: Overloaded implementation is not consistent with signature of overload 7\n+     Function return type \"type[Builds[Importable@__call__]] | type[ZenPartialBuilds[Importable@__call__]] | type[HydraPartialBuilds[Importable@__call__]]\" is incompatible with type \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[HydraPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[BuildsWithSig[type[R@__call__], P@__call__]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:485:9 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Function return type \"type[Builds[Importable@__call__]]\" is incompatible with type \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[HydraPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[BuildsWithSig[type[R@__call__], P@__call__]]\"\n+       Type \"type[Builds[Importable@__call__]]\" cannot be assigned to type \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[HydraPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[BuildsWithSig[type[R@__call__], P@__call__]]\"\n+         \"type[Builds[Importable@__call__]]\" is incompatible with \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]]\"\n+         Type \"type[Builds[Importable@__call__]]\" cannot be assigned to type \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]]\"\n+           Type parameter \"T@Builds\" is covariant, but \"Importable@__call__\" is not a subtype of \"type[BuildsWithSig[Importable@__call__, Any]]\"\n+             Type \"Importable@__call__\" cannot be assigned to type \"type[BuildsWithSig[Importable@__call__, Any]]\"\n+         \"Builds[Importable@__call__]\" is incompatible with protocol \"ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]\"\n+         Type \"type[Builds[Importable@__call__]]\" cannot be assigned to type \"type[ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:485:9 - error: Overloaded implementation is not consistent with signature of overload 6\n+     Function return type \"type[ZenPartialBuilds[Importable@__call__]] | type[HydraPartialBuilds[Importable@__call__]]\" is incompatible with type \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[HydraPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[BuildsWithSig[type[R@__call__], P@__call__]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:485:9 - error: Overloaded implementation is not consistent with signature of overload 8\n+     Function return type \"type[Builds[Importable@__call__]] | type[ZenPartialBuilds[Importable@__call__]] | type[HydraPartialBuilds[Importable@__call__]]\" is incompatible with type \"type[Builds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[ZenPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[HydraPartialBuilds[type[BuildsWithSig[Importable@__call__, Any]]]] | type[BuildsWithSig[type[R@__call__], P@__call__]]\" (reportGeneralTypeIssues)\n- 143 errors, 0 warnings, 171 informations \n+ 151 errors, 0 warnings, 171 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211037ac254a19ac2905e3",
    "number": 6499,
    "body": "…mpatibility of two TypedDict definitions whose keys were typed with unions that included two other (compatible) TypedDict definitions. This addresses #6416.",
    "head_branch": "issue6416",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/graph.py:533:43 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/graph.py:533:52 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to type \"Iterable[str]\"\n+       \"tuple[str | SupportsDunderGT[Any]*, ...]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str | SupportsDunderGT[Any]*\" is not a subtype of \"str\"\n+           Type \"str | SupportsDunderGT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderGT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:767:86 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to parameter \"virtuals\" of type \"Tuple[str, ...]\" in function \"__init__\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to type \"Tuple[str, ...]\"\n+       \"tuple[str | SupportsDunderGT[Any]*, ...]\" is incompatible with \"Tuple[str, ...]\"\n+         Tuple entry 1 is incorrect type\n+           Type \"str | SupportsDunderGT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderGT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:778:52 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:778:61 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to type \"Iterable[str]\"\n+       \"tuple[str | SupportsDunderGT[Any]*, ...]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str | SupportsDunderGT[Any]*\" is not a subtype of \"str\"\n+           Type \"str | SupportsDunderGT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderGT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1481:36 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1481:45 - error: Argument of type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"tuple[str, ...] | tuple[str | SupportsDunderGT[Any]*, ...]\" cannot be assigned to type \"Iterable[str]\"\n+       \"tuple[str | SupportsDunderGT[Any]*, ...]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str | SupportsDunderGT[Any]*\" is not a subtype of \"str\"\n+           Type \"str | SupportsDunderGT[Any]*\" cannot be assigned to type \"str\"\n+             \"SupportsDunderGT[Any]*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n- 3843 errors, 48 warnings, 0 informations \n+ 3850 errors, 48 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:569:23 - error: \"Coro[Iterable[str]]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n- 8391 errors, 23 warnings, 0 informations \n+ 8392 errors, 23 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:97:60 - error: Type text mismatch; expected \"Partial[A]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:97:17 - information: Type of \"instantiate(conf_a_partial)\" is \"Partial[A]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:97:17 - information: Type of \"instantiate(conf_a_partial)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:98:62 - error: Type text mismatch; expected \"A\" but received \"Unknown\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:98:17 - information: Type of \"instantiate(conf_a_partial)()\" is \"A\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:98:17 - information: Type of \"instantiate(conf_a_partial)()\" is \"Unknown\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:118:60 - error: Type text mismatch; expected \"Partial[int]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:118:17 - information: Type of \"instantiate(conf_f_partial)\" is \"Partial[int]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:118:17 - information: Type of \"instantiate(conf_f_partial)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:120:62 - error: Type text mismatch; expected \"int\" but received \"Unknown\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:120:17 - information: Type of \"instantiate(conf_f_partial)()\" is \"int\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:120:17 - information: Type of \"instantiate(conf_f_partial)()\" is \"Unknown\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:501:47 - error: Type text mismatch; expected \"Partial[int]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:501:17 - information: Type of \"instantiate(b)\" is \"Partial[int]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:501:17 - information: Type of \"instantiate(b)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1311:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1311:17 - information: Type of \"instantiate(pc1)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1311:17 - information: Type of \"instantiate(pc1)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1315:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1315:17 - information: Type of \"instantiate(pc2)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1315:17 - information: Type of \"instantiate(pc2)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1319:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1319:17 - information: Type of \"instantiate(pc3)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1319:17 - information: Type of \"instantiate(pc3)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1347:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1347:17 - information: Type of \"instantiate(pc1)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1347:17 - information: Type of \"instantiate(pc1)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1351:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1351:17 - information: Type of \"instantiate(pc2)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1351:17 - information: Type of \"instantiate(pc2)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1355:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1355:17 - information: Type of \"instantiate(pc3)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1355:17 - information: Type of \"instantiate(pc3)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1383:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1383:17 - information: Type of \"instantiate(pc1)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1383:17 - information: Type of \"instantiate(pc1)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1387:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1387:17 - information: Type of \"instantiate(pc2)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1387:17 - information: Type of \"instantiate(pc2)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1391:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1391:17 - information: Type of \"instantiate(pc3)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1391:17 - information: Type of \"instantiate(pc3)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1406:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1406:17 - information: Type of \"instantiate(pc1)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1406:17 - information: Type of \"instantiate(pc1)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1410:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1410:17 - information: Type of \"instantiate(pc2)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1410:17 - information: Type of \"instantiate(pc2)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1414:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1414:17 - information: Type of \"instantiate(pc3)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1414:17 - information: Type of \"instantiate(pc3)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1431:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1431:17 - information: Type of \"instantiate(pc4)\" is \"Partial[str]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1431:17 - information: Type of \"instantiate(pc4)\" is \"Partial[Unknown]\"\n+ /tmp/mypy_primer/projects/hydra-zen/tests/annotations/mypy_checks.py\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/mypy_checks.py:22:17 - error: \"assert_type\" mismatch: expected \"A\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/mypy_checks.py:26:17 - error: \"assert_type\" mismatch: expected \"str\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/mypy_checks.py:48:17 - error: \"assert_type\" mismatch: expected \"A\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/mypy_checks.py:52:17 - error: \"assert_type\" mismatch: expected \"str\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:241:9 - error: Overloaded implementation is not consistent with signature of overload 9\n+     Function return type \"type[Builds[Importable@__call__]] | type[ZenPartialBuilds[Importable@__call__]] | type[HydraPartialBuilds[Importable@__call__]] | type[BuildsWithSig[type[R@__call__], P@__call__]]\" is incompatible with type \"type[Builds[type[BuildsWithSig[(**P@__call__) -> Any, Any]]]] | type[ZenPartialBuilds[type[BuildsWithSig[(**P@__call__) -> Any, Any]]]] | type[HydraPartialBuilds[type[BuildsWithSig[(**P@__call__) -> Any, Any]]]] | type[BuildsWithSig[Any, P@__call__]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:485:9 - error: Overloaded implementation is not consistent with signature of overload 10\n\n... (truncated 3 lines) ...\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211038ac254a19ac2905e4",
    "number": 6498,
    "body": "… type is a callable that accepts a generic callable as a parameter. This addresses #6326.",
    "head_branch": "issue6326-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/test.py:256:55 - error: Cannot access member \"package_class\" for type \"object*\"\n-     Member \"package_class\" is unknown (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/versions.py\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/versions.py:76:36 - error: Argument of type \"list[_T@list]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@max]\" in function \"max\"\n-     \"list[_T@list]\" is incompatible with \"Iterable[SupportsRichComparisonT@max]\"\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"_T@list\" is not a subtype of \"SupportsRichComparisonT@max\"\n-         Type \"_T@list\" cannot be assigned to type \"SupportsRichComparison\"\n-           Type \"_T@list\" cannot be assigned to type \"SupportsRichComparison\"\n-             \"object*\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n-             \"object*\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n- 3845 errors, 48 warnings, 0 informations \n+ 3843 errors, 48 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved lambda inference logic to handle the case where the expected type is a callable that accepts a generic callable as a parameter. This addresses #6326. (#6498)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211039ac254a19ac2905e5",
    "number": 6497,
    "body": "… type is a callable that accepts a generic callable as a parameter. This addresses #6326.",
    "head_branch": "issue6326",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:191:18 - error: No overloads for \"__new__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:191:35 - error: Operator \"in\" not supported for types \"Literal['dependencies']\" and \"_T@filter\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/common/arguments.py:586:35 - error: Cannot access member \"strip\" for type \"object*\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2018:13 - error: No overloads for \"__new__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2018:30 - error: Operator \"in\" not supported for types \"Literal['packages']\" and \"_T@filter\" (reportGeneralTypeIssues)\n- 3845 errors, 48 warnings, 0 informations \n+ 3850 errors, 48 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/base_models/BasePyTorchClassifier.py:139:62 - error: Cannot access member \"item\" for type \"object*\"\n+     Member \"item\" is unknown (reportGeneralTypeIssues)\n- 559 errors, 38 warnings, 0 informations \n+ 560 errors, 38 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/processor/trace.py:351:29 - error: Cannot access member \"get_tag\" for type \"object*\"\n+     Member \"get_tag\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/processor/trace.py:351:65 - error: Cannot access member \"get_tag\" for type \"object*\"\n+     Member \"get_tag\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/telemetry/test_telemetry_metrics_e2e.py:95:41 - error: \"__getitem__\" method not defined on type \"object*\" (reportGeneralTypeIssues)\n- 9937 errors, 465 warnings, 0 informations \n+ 9940 errors, 465 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621103aac254a19ac2905e6",
    "number": 6496,
    "body": "…hension expression is used with bidirectional type inference and the expected type includes a type variable. This addresses #6455.",
    "head_branch": "issue6455",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to an incorrect type evaluation when a list comprehension expression is used with bidirectional type inference and the expected type includes a type variable. This addresses #6455. (#6496)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621103bac254a19ac2905e7",
    "number": 6495,
    "body": "…n a parent class defines a property with a getter and a child class extends the property with a setter. This addresses #6456.",
    "head_branch": "issue6456-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a recent regression that resulted in a false positive error when a parent class defines a property with a getter and a child class extends the property with a setter. This addresses #6456. (#6495)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621103cac254a19ac2905e8",
    "number": 6494,
    "body": "…n a parent class defines a property with a getter and a child class extends the property with a setter. This addresses #6456.",
    "head_branch": "issue6456",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_function.py:97:34 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_function.py:227:12 - error: Arguments for ParamSpec \"P@FunctionInterface\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_function.py:228:12 - error: Arguments for ParamSpec \"P@FunctionInterface\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_function.py:229:12 - error: Arguments for ParamSpec \"P@FunctionInterface\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:53:39 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:85:44 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:110:34 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:174:32 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:193:33 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:224:41 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:242:38 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:269:41 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:288:38 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:334:12 - error: Arguments for ParamSpec \"P@LazyInterface\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:335:12 - error: Arguments for ParamSpec \"P@LazyInterface\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:336:12 - error: Arguments for ParamSpec \"P@LazyInterface\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:337:12 - error: Arguments for ParamSpec \"P@LazyInterface\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:365:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:366:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:367:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:368:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:396:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:397:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:398:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:399:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:427:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:428:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:429:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_lazy.py:430:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/lazy/test_lazy.py:62:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/lazy/test_lazy.py:145:37 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/lazy/test_lazy.py:146:36 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/lazy/test_lazy.py:192:53 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/lazy/test_lazy.py:625:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/lazy/test_lazy.py:627:12 - error: Arguments for ParamSpec \"P@LazyMethod\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/lazy/test_lazy.py:629:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/lazy/test_lazy.py:630:12 - error: Arguments for ParamSpec \"P@LazyFunction\" are missing (reportGeneralTypeIssues)\n- 725 errors, 31 warnings, 0 informations \n+ 762 errors, 31 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621103dac254a19ac2905e9",
    "number": 6493,
    "body": null,
    "head_branch": "issue6492",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Issue6492 (#6493)\n\n* Fixed a bug that resulted in a false positive error when a higher-order generic function is passed another generic function as an argument along with another argument that dictates the type of the first argument's type variable(s). This shouldn't depend on the order in which the arguments are passed. This addresses #6461.\r\n\r\n* Added support for discriminated TypedDict pattern matching when union patterns are used. This addresses #6492."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621103dac254a19ac2905ea",
    "number": 6491,
    "body": "…er generic function is passed another generic function as an argument along with another argument that dictates the type of the first argument's type variable(s). This shouldn't depend on the order in which the arguments are passed. This addresses #6461.",
    "head_branch": "issue6461",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive error when a higher-order generic function is passed another generic function as an argument along with another argument that dictates the type of the first argument's type variable(s). This shouldn't depend on the order in which the arguments are passed. This addresses #6461. (#6491)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621103eac254a19ac2905eb",
    "number": 6485,
    "body": "…ng logic so it better handles type variables with bounds that are unions. This addresses #6475.",
    "head_branch": "issue6475",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:934:18 - warning: Cannot access member \"checks\" for type \"function\"\n-     Member \"checks\" is unknown (reportFunctionMemberAccess)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:1019:21 - warning: Cannot access member \"cooldown\" for type \"function\"\n-     Member \"cooldown\" is unknown (reportFunctionMemberAccess)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:224:25 - warning: Cannot access member \"special_converters\" for type \"function\"\n-     Member \"special_converters\" is unknown (reportFunctionMemberAccess)\n- 8391 errors, 26 warnings, 0 informations \n+ 8391 errors, 23 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Modified recent bug fix in `isinstance` and `issubclass` type narrowing logic so it better handles type variables with bounds that are unions. This addresses #6475. (#6485)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621103fac254a19ac2905ec",
    "number": 6480,
    "body": "Adding a new workflow help keep Pylance and Pyright in sync",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update .github/workflows/trigger_pylance.yaml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211040ac254a19ac2905ed",
    "number": 6477,
    "body": "Non file URIs don't ever indicate diskPathRoot, so double check we're not going to loop forever.\r\nFixes #6465 \r\n\r\nShould also fix https://github.com/microsoft/pyright/issues/6314",
    "head_branch": "rchiodo-patch-1",
    "is_a_fork": false,
    "comments": [
      "Hold on, I should add a test for this case too. Pylance tests catch this, but there's no Pyright tests for it at the moment.",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nmaterialize (https://github.com/MaterializeInc/materialize): typechecking got 2.09x slower (10.5s -> 22.1s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fix infinite loop in _tryWalkUp (#6477)\n\n* Fix infinite loop in _tryWalkUp\r\n\r\nNon file URIs can return the wrong value for isDiskPathRoot\r\n\r\n* Fix build error\r\n\r\n* Fix replace failure\r\n\r\n* Add test to verify infinite loop doesn't exist\r\n\r\n* Update placeholder.txt\r\n\r\n* Update placeholder.txt"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211041ac254a19ac2905ee",
    "number": 6471,
    "body": "…us operator in a call expression that targets an overloaded function. This addresses #6470.",
    "head_branch": "issue6470",
    "is_a_fork": false,
    "comments": [
      "Now that's fast! Many thanks 🥳",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n-   /tmp/mypy_primer/projects/koda-validate/tests/test_310_plus.py:131:20 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n- 167 errors, 5 warnings, 0 informations \n+ 166 errors, 5 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:211:65 - error: Argument of type \"_GuildCacheT\" cannot be assigned to parameter \"type_\" of type \"type[_T@get_type_dependency]\" in function \"get_type_dependency\"\n+     \"_GuildCacheT\" is incompatible with \"type[bool]\"\n+     Type \"_GuildCacheT\" cannot be assigned to type \"type[bool]\" (reportGeneralTypeIssues)\n-     Type of \"guild_cache\" is \"AsyncCache[Unknown, Unknown] | Unknown\" (reportUnknownVariableType)\n+     Type of \"guild_cache\" is \"bool | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:213:39 - error: Cannot access member \"get\" for type \"Literal[True]\"\n+     Member \"get\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:213:27 - warning: Type of \"get\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:213:27 - warning: Type of \"get\" is unknown (reportUnknownMemberType)\n-     Type of \"get\" is \"((key: Unknown, /, *, default: _DefaultT@get = ...) -> Coroutine[Any, Any, Unknown | _DefaultT@get]) | Unknown\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:213:43 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"key\" in function \"get\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:230:64 - error: Argument of type \"_GuldRoleCacheT\" cannot be assigned to parameter \"type_\" of type \"type[_T@get_type_dependency]\" in function \"get_type_dependency\"\n+     \"_GuldRoleCacheT\" is incompatible with \"type[bool]\"\n+     Type \"_GuldRoleCacheT\" cannot be assigned to type \"type[bool]\" (reportGeneralTypeIssues)\n-     Type of \"role_cache\" is \"GuildBoundCache[Unknown, Unknown] | Unknown\" (reportUnknownVariableType)\n+     Type of \"role_cache\" is \"bool | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:231:61 - error: Cannot access member \"iter_for_guild\" for type \"Literal[True]\"\n+     Member \"iter_for_guild\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:231:50 - warning: Type of \"iter_for_guild\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:231:50 - warning: Type of \"iter_for_guild\" is unknown (reportUnknownMemberType)\n-     Type of \"iter_for_guild\" is \"((guild_id: Unknown, /) -> CacheIterator) | Unknown\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:231:76 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"guild_id\" in function \"iter_for_guild\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:231:50 - error: \"CacheIterator\" is not awaitable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:321:63 - error: Argument of type \"_RoleCacheT\" cannot be assigned to parameter \"type_\" of type \"type[_T@get_type_dependency]\" in function \"get_type_dependency\"\n+     \"_RoleCacheT\" is incompatible with \"type[bool]\"\n+     Type \"_RoleCacheT\" cannot be assigned to type \"type[bool]\" (reportGeneralTypeIssues)\n-     Type of \"role_cache\" is \"AsyncCache[Unknown, Unknown] | Unknown\" (reportUnknownVariableType)\n+     Type of \"role_cache\" is \"bool | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:323:37 - error: Cannot access member \"get\" for type \"Literal[True]\"\n+     Member \"get\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:323:26 - warning: Type of \"get\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:323:26 - warning: Type of \"get\" is unknown (reportUnknownMemberType)\n-     Type of \"get\" is \"((key: Unknown, /, *, default: _DefaultT@get = ...) -> Coroutine[Any, Any, Unknown | _DefaultT@get]) | Unknown\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:323:41 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"key\" in function \"get\" (reportUnknownArgumentType)\n- 2347 errors, 10515 warnings, 0 informations \n+ 2352 errors, 10512 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive error when using a walrus operator in a call expression that targets an overloaded function. This addresses #6470. (#6471)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211042ac254a19ac2905ef",
    "number": 6469,
    "body": "…method (e.g. `__lt__` or `__add__`) are implemented with a callable protocol object. This addresses #6466.",
    "head_branch": "issue6466-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandas-stubs (https://github.com/pandas-dev/pandas-stubs): typechecking got 1.55x slower (18.3s -> 28.4s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed regression that resulted in false positive errors when a magic method (e.g. `__lt__` or `__add__`) are implemented with a callable protocol object. This addresses #6466. (#6469)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211043ac254a19ac2905f0",
    "number": 6467,
    "body": "…method (e.g. `__lt__` or `__add__`) are implemented with a callable protocol object. This addresses #6466.",
    "head_branch": "issue6466",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211043ac254a19ac2905f1",
    "number": 6464,
    "body": "…of type `type[Protocol]` as the second argument to `isinstance` or `issubclass` if the protocol isn't `@runtime_checkable`. This addresses #6463.",
    "head_branch": "issue6463",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed regression that results in a false positive when using a value of type `type[Protocol]` as the second argument to `isinstance` or `issubclass` if the protocol isn't `@runtime_checkable`. This addresses #6463. (#6464)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211044ac254a19ac2905f2",
    "number": 6459,
    "body": "… an unpacked tuple in a call expression. This addresses #6458.",
    "head_branch": "issue6458",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to a spurious \"unknown argument type\" when passing an unpacked tuple in a call expression. This addresses #6458. (#6459)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211045ac254a19ac2905f3",
    "number": 6457,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action\r\n\r\npylance loc update 20231114.1 https://github.com/microsoft/pyrx/pull/4331\r\nEnabling Type hierarchy feature https://github.com/microsoft/pyrx/pull/4285\r\n",
    "head_branch": "pull-pylance-with-pyright-1.1.336",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.336 (#6457)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211046ac254a19ac2905f4",
    "number": 6453,
    "body": "…tor whose `__get__` method whose `owner` parameter is annotated with `type[T]`. This addresses #6452.",
    "head_branch": "issue6452",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:404:32 - error: Cannot access member \"_type_args\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]], tuple[type[ChatMessageT@Chat], type[ClanT@Chat], type[GroupT@Chat]]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:404:27 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:415:32 - error: Type of \"created_at\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:645:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:645:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:596:16 - error: Expression of type \"MemberT@ChatGroup\" cannot be assigned to return type \"MemberT@ChatGroup\"\n+     Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:591:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:591:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:610:31 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:610:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:616:32 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:690:37 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:690:32 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:698:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:698:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:871:31 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:871:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:321:20 - error: Cannot access member \"All\" for type \"type[Intents]\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@Intents], Self@Intents]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:321:16 - error: Type of \"All\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:2156:16 - error: Expression of type \"UserNewsType\" cannot be assigned to return type \"Self@UserNewsType\"\n+     Type \"UserNewsType\" cannot be assigned to type \"Self@UserNewsType\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:2156:38 - error: Cannot access member \"App\" for type \"type[UserNewsType]\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@UserNewsType], Self@UserNewsType]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:2156:34 - error: Type of \"App\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/enums.py:150:21 - error: Cannot access member \"DISPLAY_NAMES\" for type \"Rank\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@Rank], Mapping[Self@Rank, str]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/enums.py:150:16 - error: Type of \"DISPLAY_NAMES\" is unknown (reportUnknownMemberType)\n- 8411 errors, 26 warnings, 0 informations \n+ 8391 errors, 26 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-   /tmp/mypy_primer/projects/discord.py/discord/automod.py:412:61 - error: Cannot access member \"actions\" for type \"AutoModRule\"\n-     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@AutoModRule, List[AutoModRuleAction]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/discord.py/discord/interactions.py:582:25 - error: Cannot access member \"command\" for type \"Interaction[ClientT@Interaction]\"\n-     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Interaction[ClientT@Interaction], Command[Any, ..., Any] | ContextMenu | None]\" (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/discord.py/discord/message.py\n-   /tmp/mypy_primer/projects/discord.py/discord/message.py:1912:65 - error: Cannot access member \"raw_channel_mentions\" for type \"Message\"\n-     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Message, List[int]]\" (reportGeneralTypeIssues)\n- 62 errors, 9 warnings, 0 informations \n+ 59 errors, 9 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize): typechecking got 2.05x slower (11.0s -> 22.5s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive when applying a descriptor whose `__get__` method whose `owner` parameter is annotated with `type[T]`. This addresses #6452. (#6453)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211047ac254a19ac2905f5",
    "number": 6450,
    "body": "…rn type. Also fixed an existing bug in the contravariant return type check where a contravariant used in a union was not reported. This addresses #6414.",
    "head_branch": "issue6414",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nmaterialize (https://github.com/MaterializeInc/materialize): typechecking got 2.02x slower (11.1s -> 22.4s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Added check for the use of contravariant TypeVars in an inferred return type. Also fixed an existing bug in the contravariant return type check where a contravariant used in a union was not reported. This addresses #6414. (#6450)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211048ac254a19ac2905f6",
    "number": 6449,
    "body": "…thod return type includes a union where the subtypes are conditioned on constraints of a constrained TypeVar that parameterizes the class. In this case, one or more of these subtypes should be eliminated when a specialized class is bound to the method. This addresses #6446.",
    "head_branch": "issue6446-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict): typechecking got 4385.20x slower (0.0s -> 11.9s)\n(Performance measurements are based on a single noisy sample)\n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/store.py:222:70 - error: \"values\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/store.py:230:21 - error: Argument of type \"syaml_dict | Unknown | Any | None\" cannot be assigned to parameter \"hash_length\" of type \"int | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/store.py:230:21 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"hash_length\" of type \"int | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/create.py:932:31 - error: Cannot access member \"namespace\" for type \"object\"\n+     Member \"namespace\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/create.py:954:21 - error: Cannot access member \"filename_for_package_name\" for type \"object\"\n+     Member \"filename_for_package_name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/verify.py:81:17 - error: Operator \"+=\" not supported for types \"Unknown | list[Unknown]\" and \"list[Unknown] | Unknown | Any | None\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/verify.py:81:17 - error: Operator \"+=\" not supported for types \"Unknown | list[Unknown]\" and \"Unknown | list[Unknown] | Any | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/cpus.py:52:20 - error: Expression of type \"syaml_dict | Unknown | Any\" cannot be assigned to return type \"int\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/cpus.py:52:20 - error: Expression of type \"Unknown | syaml_dict | Any\" cannot be assigned to return type \"int\"\n-     Type \"syaml_dict | Unknown | Any\" cannot be assigned to type \"int\"\n+     Type \"Unknown | syaml_dict | Any\" cannot be assigned to type \"int\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/cpus.py:56:26 - error: Argument of type \"syaml_dict | Unknown | Any | Literal[16]\" cannot be assigned to parameter \"__arg2\" of type \"SupportsRichComparisonT@min\" in function \"min\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/cpus.py:56:26 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"__arg2\" of type \"SupportsRichComparisonT@min\" in function \"min\"\n-     Type \"syaml_dict | Unknown | Any | Literal[16]\" cannot be assigned to type \"int\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"int\"\n- 3840 errors, 48 warnings, 0 informations \n+ 3843 errors, 48 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/message.py:514:20 - error: Expression of type \"MessageCommand[(MessageContext, ...) -> _CoroT[None]]* | MessageCommand[_OtherCallbackSigT@decorator]\" cannot be assigned to return type \"MessageCommand[_OtherCallbackSigT@decorator]\"\n+     Type \"MessageCommand[(MessageContext, ...) -> _CoroT[None]]* | MessageCommand[_OtherCallbackSigT@decorator]\" cannot be assigned to type \"MessageCommand[_OtherCallbackSigT@decorator]\"\n+       \"MessageCommand[(MessageContext, ...) -> _CoroT[None]]*\" is incompatible with \"MessageCommand[_OtherCallbackSigT@decorator]\"\n+         Type parameter \"_MessageCallbackSigT@MessageCommand\" is invariant, but \"(MessageContext, ...) -> _CoroT[None]\" is not the same as \"_OtherCallbackSigT@decorator\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/message.py:548:20 - error: Expression of type \"MessageCommandGroup[_OtherCallbackSigT@decorator] | MessageCommandGroup[(MessageContext, ...) -> _CoroT[None]]*\" cannot be assigned to return type \"MessageCommandGroup[_OtherCallbackSigT@decorator]\"\n+     Type \"MessageCommandGroup[_OtherCallbackSigT@decorator] | MessageCommandGroup[(MessageContext, ...) -> _CoroT[None]]*\" cannot be assigned to type \"MessageCommandGroup[_OtherCallbackSigT@decorator]\"\n+       \"MessageCommandGroup[(MessageContext, ...) -> _CoroT[None]]*\" is incompatible with \"MessageCommandGroup[_OtherCallbackSigT@decorator]\"\n+         Type parameter \"_MessageCallbackSigT@MessageCommandGroup\" is invariant, but \"(MessageContext, ...) -> _CoroT[None]\" is not the same as \"_OtherCallbackSigT@decorator\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1326:20 - error: Expression of type \"SlashCommand[(SlashContext, ...) -> _CoroT[None]]* | SlashCommand[_SlashCallbackSigT@decorator]\" cannot be assigned to return type \"SlashCommand[_SlashCallbackSigT@decorator]\"\n+     Type \"SlashCommand[(SlashContext, ...) -> _CoroT[None]]* | SlashCommand[_SlashCallbackSigT@decorator]\" cannot be assigned to type \"SlashCommand[_SlashCallbackSigT@decorator]\"\n+       \"SlashCommand[(SlashContext, ...) -> _CoroT[None]]*\" is incompatible with \"SlashCommand[_SlashCallbackSigT@decorator]\"\n+         Type parameter \"_SlashCallbackSigT@SlashCommand\" is invariant, but \"(SlashContext, ...) -> _CoroT[None]\" is not the same as \"_SlashCallbackSigT@decorator\" (reportGeneralTypeIssues)\n- 2344 errors, 10515 warnings, 0 informations \n+ 2347 errors, 10515 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type evaluation when an inferred method return type includes a union where the subtypes are conditioned on constraints of a constrained TypeVar that parameterizes the class. In this case, one or more of these subtypes should be eliminated when a specialized class is bound to the method. This addresses #6446. (#6449)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211049ac254a19ac2905f7",
    "number": 6448,
    "body": "…thod return type includes a union where the subtypes are conditioned on constraints of a constrained TypeVar that parameterizes the class. In this case, one or more of these subtypes should be eliminated when a specialized class is bound to the method. This addresses #6446.",
    "head_branch": "issue6446",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/store.py:222:70 - error: \"values\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/store.py:230:21 - error: Argument of type \"syaml_dict | Unknown | Any | None\" cannot be assigned to parameter \"hash_length\" of type \"int | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/store.py:230:21 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"hash_length\" of type \"int | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/create.py:932:31 - error: Cannot access member \"namespace\" for type \"object\"\n+     Member \"namespace\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/create.py:954:21 - error: Cannot access member \"filename_for_package_name\" for type \"object\"\n+     Member \"filename_for_package_name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/verify.py:81:17 - error: Operator \"+=\" not supported for types \"Unknown | list[Unknown]\" and \"list[Unknown] | Unknown | Any | None\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/verify.py:81:17 - error: Operator \"+=\" not supported for types \"Unknown | list[Unknown]\" and \"Unknown | list[Unknown] | Any | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/cpus.py:52:20 - error: Expression of type \"syaml_dict | Unknown | Any\" cannot be assigned to return type \"int\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/cpus.py:52:20 - error: Expression of type \"Unknown | syaml_dict | Any\" cannot be assigned to return type \"int\"\n-     Type \"syaml_dict | Unknown | Any\" cannot be assigned to type \"int\"\n+     Type \"Unknown | syaml_dict | Any\" cannot be assigned to type \"int\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/cpus.py:56:26 - error: Argument of type \"syaml_dict | Unknown | Any | Literal[16]\" cannot be assigned to parameter \"__arg2\" of type \"SupportsRichComparisonT@min\" in function \"min\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/cpus.py:56:26 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"__arg2\" of type \"SupportsRichComparisonT@min\" in function \"min\"\n-     Type \"syaml_dict | Unknown | Any | Literal[16]\" cannot be assigned to type \"int\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"int\"\n- 3840 errors, 48 warnings, 0 informations \n+ 3843 errors, 48 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/message.py:514:20 - error: Expression of type \"MessageCommand[(MessageContext, ...) -> _CoroT[None]]* | MessageCommand[_OtherCallbackSigT@decorator]\" cannot be assigned to return type \"MessageCommand[_OtherCallbackSigT@decorator]\"\n+     Type \"MessageCommand[(MessageContext, ...) -> _CoroT[None]]* | MessageCommand[_OtherCallbackSigT@decorator]\" cannot be assigned to type \"MessageCommand[_OtherCallbackSigT@decorator]\"\n+       \"MessageCommand[(MessageContext, ...) -> _CoroT[None]]*\" is incompatible with \"MessageCommand[_OtherCallbackSigT@decorator]\"\n+         Type parameter \"_MessageCallbackSigT@MessageCommand\" is invariant, but \"(MessageContext, ...) -> _CoroT[None]\" is not the same as \"_OtherCallbackSigT@decorator\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/message.py:548:20 - error: Expression of type \"MessageCommandGroup[_OtherCallbackSigT@decorator] | MessageCommandGroup[(MessageContext, ...) -> _CoroT[None]]*\" cannot be assigned to return type \"MessageCommandGroup[_OtherCallbackSigT@decorator]\"\n+     Type \"MessageCommandGroup[_OtherCallbackSigT@decorator] | MessageCommandGroup[(MessageContext, ...) -> _CoroT[None]]*\" cannot be assigned to type \"MessageCommandGroup[_OtherCallbackSigT@decorator]\"\n+       \"MessageCommandGroup[(MessageContext, ...) -> _CoroT[None]]*\" is incompatible with \"MessageCommandGroup[_OtherCallbackSigT@decorator]\"\n+         Type parameter \"_MessageCallbackSigT@MessageCommandGroup\" is invariant, but \"(MessageContext, ...) -> _CoroT[None]\" is not the same as \"_OtherCallbackSigT@decorator\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1326:20 - error: Expression of type \"SlashCommand[(SlashContext, ...) -> _CoroT[None]]* | SlashCommand[_SlashCallbackSigT@decorator]\" cannot be assigned to return type \"SlashCommand[_SlashCallbackSigT@decorator]\"\n+     Type \"SlashCommand[(SlashContext, ...) -> _CoroT[None]]* | SlashCommand[_SlashCallbackSigT@decorator]\" cannot be assigned to type \"SlashCommand[_SlashCallbackSigT@decorator]\"\n+       \"SlashCommand[(SlashContext, ...) -> _CoroT[None]]*\" is incompatible with \"SlashCommand[_SlashCallbackSigT@decorator]\"\n+         Type parameter \"_SlashCallbackSigT@SlashCommand\" is invariant, but \"(SlashContext, ...) -> _CoroT[None]\" is not the same as \"_SlashCallbackSigT@decorator\" (reportGeneralTypeIssues)\n- 2344 errors, 10515 warnings, 0 informations \n+ 2347 errors, 10515 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621104aac254a19ac2905f8",
    "number": 6439,
    "body": "…en narrowing in the positive case and the value is not a constrained TypeVar. This addresses #6434.",
    "head_branch": "issue6434",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:934:18 - warning: Cannot access member \"checks\" for type \"function\"\n+     Member \"checks\" is unknown (reportFunctionMemberAccess)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:1019:21 - warning: Cannot access member \"cooldown\" for type \"function\"\n+     Member \"cooldown\" is unknown (reportFunctionMemberAccess)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:224:25 - warning: Cannot access member \"special_converters\" for type \"function\"\n+     Member \"special_converters\" is unknown (reportFunctionMemberAccess)\n- 8411 errors, 23 warnings, 0 informations \n+ 8411 errors, 26 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Modified the `isinstance` type narrowing logic to retain a TypeVar when narrowing in the positive case and the value is not a constrained TypeVar. This addresses #6434. (#6439)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621104bac254a19ac2905f9",
    "number": 6438,
    "body": "…re `x` is a `dict` or `Mapping` and `y` is an iterable of `TypedDict`s. This addresses #6436.",
    "head_branch": "issue6436",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.24x faster (79.0s -> 63.9s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Added special-case handling `x in y` narrowing logic for the case where `x` is a `dict` or `Mapping` and `y` is an iterable of `TypedDict`s. This addresses #6436. (#6438)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621104bac254a19ac2905fa",
    "number": 6435,
    "body": "…o non-runtime-checkable protocol classes are rejected. This addresses #6433.",
    "head_branch": "issue6433",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-     TypeVar or generic type with type arguments not allowed (reportGeneralTypeIssues)\n+     None cannot be used for instance or class checks (reportGeneralTypeIssues)\n\npandera (https://github.com/pandera-dev/pandera)\n-     TypeVar or generic type with type arguments not allowed (reportGeneralTypeIssues)\n+     Generic type with type arguments not allowed for instance or class checks (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-     TypeVar or generic type with type arguments not allowed (reportGeneralTypeIssues)\n+     None cannot be used for instance or class checks (reportGeneralTypeIssues)\n-     TypeVar or generic type with type arguments not allowed (reportGeneralTypeIssues)\n+     None cannot be used for instance or class checks (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Improved check for second argument to `isinstance` and `issubclass` so non-runtime-checkable protocol classes are rejected. This addresses #6433. (#6435)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621104cac254a19ac2905fb",
    "number": 6427,
    "body": "…has no `__init__` or `__new__` method in its class hierarchy (other than those provided by `object`), pyright previously converted the constructor to a signature of `(*args: Any, **kwargs: Any)`. It now converts it to a signature of `()` (i.e. no params) unless it's a `type[T]` or a protocol class. This addresses #6426.",
    "head_branch": "issue6426",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Changed behavior when converting a class to a callable. If the class has no `__init__` or `__new__` method in its class hierarchy (other than those provided by `object`), pyright previously converted the constructor to a signature of `(*args: Any, **kwargs: Any)`. It now converts it to a signature of `()` (i.e. no params) unless it's a `type[T]` or a protocol class. This addresses #6426. (#6427)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621104dac254a19ac2905fc",
    "number": 6421,
    "body": "Bumps [axios](https://github.com/axios/axios) from 1.4.0 to 1.6.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/axios/axios/releases\">axios's releases</a>.</em></p>\n<blockquote>\n<h2>Release v1.6.1</h2>\n<h2>Release notes:</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>formdata:</strong> fixed content-type header normalization for non-standard browser environments; (<a href=\"https://redirect.github.com/axios/axios/issues/6056\">#6056</a>) (<a href=\"https://github.com/axios/axios/commit/dd465ab22bbfa262c6567be6574bf46a057d5288\">dd465ab</a>)</li>\n<li><strong>platform:</strong> fixed emulated browser detection in node.js environment; (<a href=\"https://redirect.github.com/axios/axios/issues/6055\">#6055</a>) (<a href=\"https://github.com/axios/axios/commit/3dc8369e505e32a4e12c22f154c55fd63ac67fbb\">3dc8369</a>)</li>\n</ul>\n<h3>Contributors to this release</h3>\n<ul>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DigitalBrainJS\" title=\"+432/-65 ([#6059](https://github.com/axios/axios/issues/6059) [#6056](https://github.com/axios/axios/issues/6056) [#6055](https://github.com/axios/axios/issues/6055) )\">Dmitriy Mozgovoy</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/meyfa\" title=\"+5/-2 ([#5835](https://github.com/axios/axios/issues/5835) )\">Fabian Meyer</a></li>\n</ul>\n<h2>Release v1.6.0</h2>\n<h2>Release notes:</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>CSRF:</strong> fixed CSRF vulnerability CVE-2023-45857 (<a href=\"https://redirect.github.com/axios/axios/issues/6028\">#6028</a>) (<a href=\"https://github.com/axios/axios/commit/96ee232bd3ee4de2e657333d4d2191cd389e14d0\">96ee232</a>)</li>\n<li><strong>dns:</strong> fixed lookup function decorator to work properly in node v20; (<a href=\"https://redirect.github.com/axios/axios/issues/6011\">#6011</a>) (<a href=\"https://github.com/axios/axios/commit/5aaff532a6b820bb9ab6a8cd0f77131b47e2adb8\">5aaff53</a>)</li>\n<li><strong>types:</strong> fix AxiosHeaders types; (<a href=\"https://redirect.github.com/axios/axios/issues/5931\">#5931</a>) (<a href=\"https://github.com/axios/axios/commit/a1c8ad008b3c13d53e135bbd0862587fb9d3fc09\">a1c8ad0</a>)</li>\n</ul>\n<h3>PRs</h3>\n<ul>\n<li>CVE 2023 45857 ( <a href=\"https://api.github.com/repos/axios/axios/pulls/6028\">#6028</a> )</li>\n</ul>\n<pre><code>\n⚠️ Critical vulnerability fix. See https://security.snyk.io/vuln/SNYK-JS-AXIOS-6032459\n</code></pre>\n<h3>Contributors to this release</h3>\n<ul>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DigitalBrainJS\" title=\"+449/-114 ([#6032](https://github.com/axios/axios/issues/6032) [#6021](https://github.com/axios/axios/issues/6021) [#6011](https://github.com/axios/axios/issues/6011) [#5932](https://github.com/axios/axios/issues/5932) [#5931](https://github.com/axios/axios/issues/5931) )\">Dmitriy Mozgovoy</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/valentin-panov\" title=\"+4/-4 ([#6028](https://github.com/axios/axios/issues/6028) )\">Valentin Panov</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/therealrinku\" title=\"+1/-1 ([#5889](https://github.com/axios/axios/issues/5889) )\">Rinku Chaudhari</a></li>\n</ul>\n<h2>Release v1.5.1</h2>\n<h2>Release notes:</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>adapters:</strong> improved adapters loading logic to have clear error messages; (<a href=\"https://redirect.github.com/axios/axios/issues/5919\">#5919</a>) (<a href=\"https://github.com/axios/axios/commit/e4107797a7a1376f6209fbecfbbce73d3faa7859\">e410779</a>)</li>\n<li><strong>formdata:</strong> fixed automatic addition of the <code>Content-Type</code> header for FormData in non-browser environments; (<a href=\"https://redirect.github.com/axios/axios/issues/5917\">#5917</a>) (<a href=\"https://github.com/axios/axios/commit/bc9af51b1886d1b3529617702f2a21a6c0ed5d92\">bc9af51</a>)</li>\n<li><strong>headers:</strong> allow <code>content-encoding</code> header to handle case-insensitive values (<a href=\"https://redirect.github.com/axios/axios/issues/5890\">#5890</a>) (<a href=\"https://redirect.github.com/axios/axios/issues/5892\">#5892</a>) (<a href=\"https://github.com/axios/axios/commit/4c89f25196525e90a6e75eda9cb31ae0a2e18acd\">4c89f25</a>)</li>\n<li><strong>types:</strong> removed duplicated code (<a href=\"https://github.com/axios/axios/commit/9e6205630e1c9cf863adf141c0edb9e6d8d4b149\">9e62056</a>)</li>\n</ul>\n<h3>Contributors to this release</h3>\n<ul>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DigitalBrainJS\" title=\"+89/-18 ([#5919](https://github.com/axios/axios/issues/5919) [#5917](https://github.com/axios/axios/issues/5917) )\">Dmitriy Mozgovoy</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DavidJDallas\" title=\"+11/-5 ()\">David Dallas</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/fb-sean\" title=\"+2/-8 ()\">Sean Sattler</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/0o001\" title=\"+4/-4 ()\">Mustafa Ateş Uzun</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/sfc-gh-pmotacki\" title=\"+2/-1 ([#5892](https://github.com/axios/axios/issues/5892) )\">Przemyslaw Motacki</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/Cadienvan\" title=\"+1/-1 ()\">Michael Di Prisco</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/axios/axios/blob/v1.x/CHANGELOG.md\">axios's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/axios/axios/compare/v1.6.0...v1.6.1\">1.6.1</a> (2023-11-08)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>formdata:</strong> fixed content-type header normalization for non-standard browser environments; (<a href=\"https://redirect.github.com/axios/axios/issues/6056\">#6056</a>) (<a href=\"https://github.com/axios/axios/commit/dd465ab22bbfa262c6567be6574bf46a057d5288\">dd465ab</a>)</li>\n<li><strong>platform:</strong> fixed emulated browser detection in node.js environment; (<a href=\"https://redirect.github.com/axios/axios/issues/6055\">#6055</a>) (<a href=\"https://github.com/axios/axios/commit/3dc8369e505e32a4e12c22f154c55fd63ac67fbb\">3dc8369</a>)</li>\n</ul>\n<h3>Contributors to this release</h3>\n<ul>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DigitalBrainJS\" title=\"+432/-65 ([#6059](https://github.com/axios/axios/issues/6059) [#6056](https://github.com/axios/axios/issues/6056) [#6055](https://github.com/axios/axios/issues/6055) )\">Dmitriy Mozgovoy</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/meyfa\" title=\"+5/-2 ([#5835](https://github.com/axios/axios/issues/5835) )\">Fabian Meyer</a></li>\n</ul>\n<h1><a href=\"https://github.com/axios/axios/compare/v1.5.1...v1.6.0\">1.6.0</a> (2023-10-26)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>CSRF:</strong> fixed CSRF vulnerability CVE-2023-45857 (<a href=\"https://redirect.github.com/axios/axios/issues/6028\">#6028</a>) (<a href=\"https://github.com/axios/axios/commit/96ee232bd3ee4de2e657333d4d2191cd389e14d0\">96ee232</a>)</li>\n<li><strong>dns:</strong> fixed lookup function decorator to work properly in node v20; (<a href=\"https://redirect.github.com/axios/axios/issues/6011\">#6011</a>) (<a href=\"https://github.com/axios/axios/commit/5aaff532a6b820bb9ab6a8cd0f77131b47e2adb8\">5aaff53</a>)</li>\n<li><strong>types:</strong> fix AxiosHeaders types; (<a href=\"https://redirect.github.com/axios/axios/issues/5931\">#5931</a>) (<a href=\"https://github.com/axios/axios/commit/a1c8ad008b3c13d53e135bbd0862587fb9d3fc09\">a1c8ad0</a>)</li>\n</ul>\n<h3>PRs</h3>\n<ul>\n<li>CVE 2023 45857 ( <a href=\"https://api.github.com/repos/axios/axios/pulls/6028\">#6028</a> )</li>\n</ul>\n<pre><code>\n⚠️ Critical vulnerability fix. See https://security.snyk.io/vuln/SNYK-JS-AXIOS-6032459\n</code></pre>\n<h3>Contributors to this release</h3>\n<ul>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DigitalBrainJS\" title=\"+449/-114 ([#6032](https://github.com/axios/axios/issues/6032) [#6021](https://github.com/axios/axios/issues/6021) [#6011](https://github.com/axios/axios/issues/6011) [#5932](https://github.com/axios/axios/issues/5932) [#5931](https://github.com/axios/axios/issues/5931) )\">Dmitriy Mozgovoy</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/valentin-panov\" title=\"+4/-4 ([#6028](https://github.com/axios/axios/issues/6028) )\">Valentin Panov</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/therealrinku\" title=\"+1/-1 ([#5889](https://github.com/axios/axios/issues/5889) )\">Rinku Chaudhari</a></li>\n</ul>\n<h2><a href=\"https://github.com/axios/axios/compare/v1.5.0...v1.5.1\">1.5.1</a> (2023-09-26)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>adapters:</strong> improved adapters loading logic to have clear error messages; (<a href=\"https://redirect.github.com/axios/axios/issues/5919\">#5919</a>) (<a href=\"https://github.com/axios/axios/commit/e4107797a7a1376f6209fbecfbbce73d3faa7859\">e410779</a>)</li>\n<li><strong>formdata:</strong> fixed automatic addition of the <code>Content-Type</code> header for FormData in non-browser environments; (<a href=\"https://redirect.github.com/axios/axios/issues/5917\">#5917</a>) (<a href=\"https://github.com/axios/axios/commit/bc9af51b1886d1b3529617702f2a21a6c0ed5d92\">bc9af51</a>)</li>\n<li><strong>headers:</strong> allow <code>content-encoding</code> header to handle case-insensitive values (<a href=\"https://redirect.github.com/axios/axios/issues/5890\">#5890</a>) (<a href=\"https://redirect.github.com/axios/axios/issues/5892\">#5892</a>) (<a href=\"https://github.com/axios/axios/commit/4c89f25196525e90a6e75eda9cb31ae0a2e18acd\">4c89f25</a>)</li>\n<li><strong>types:</strong> removed duplicated code (<a href=\"https://github.com/axios/axios/commit/9e6205630e1c9cf863adf141c0edb9e6d8d4b149\">9e62056</a>)</li>\n</ul>\n<h3>Contributors to this release</h3>\n<ul>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DigitalBrainJS\" title=\"+89/-18 ([#5919](https://github.com/axios/axios/issues/5919) [#5917](https://github.com/axios/axios/issues/5917) )\">Dmitriy Mozgovoy</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/DavidJDallas\" title=\"+11/-5 ()\">David Dallas</a></li>\n<li><!-- raw HTML omitted --> <a href=\"https://github.com/fb-sean\" title=\"+2/-8 ()\">Sean Sattler</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/axios/axios/commit/f6d2cf9763bfa124f15c2dc6a5d5d5d9d3e26169\"><code>f6d2cf9</code></a> chore(ci): fix publish action content permission; (<a href=\"https://redirect.github.com/axios/axios/issues/6061\">#6061</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/a22f4b918a71a4d4caa57ff23d8247eac93765de\"><code>a22f4b9</code></a> chore(release): v1.6.1 (<a href=\"https://redirect.github.com/axios/axios/issues/6060\">#6060</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/cb8bb2beb215a94a29f19b0d66ab05d32b390230\"><code>cb8bb2b</code></a> chore(ci): Publish to NPM with provenance (<a href=\"https://redirect.github.com/axios/axios/issues/5835\">#5835</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/37cbf9214a1140d25c2c1a5ff097666c96721d6a\"><code>37cbf92</code></a> chore(ci): added labeling and notification for published PRs; (<a href=\"https://redirect.github.com/axios/axios/issues/6059\">#6059</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/dd465ab22bbfa262c6567be6574bf46a057d5288\"><code>dd465ab</code></a> fix(formdata): fixed content-type header normalization for non-standard brows...</li>\n<li><a href=\"https://github.com/axios/axios/commit/3dc8369e505e32a4e12c22f154c55fd63ac67fbb\"><code>3dc8369</code></a> fix(platform): fixed emulated browser detection in node.js environment; (<a href=\"https://redirect.github.com/axios/axios/issues/6055\">#6055</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/f7adacdbaa569281253c8cfc623ad3f4dc909c60\"><code>f7adacd</code></a> chore(release): v1.6.0 (<a href=\"https://redirect.github.com/axios/axios/issues/6031\">#6031</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/9917e67cbb6c157382863bad8c741de58e3f3c2b\"><code>9917e67</code></a> chore(ci): fix release-it arg; (<a href=\"https://redirect.github.com/axios/axios/issues/6032\">#6032</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/96ee232bd3ee4de2e657333d4d2191cd389e14d0\"><code>96ee232</code></a> fix(CSRF): fixed CSRF vulnerability CVE-2023-45857 (<a href=\"https://redirect.github.com/axios/axios/issues/6028\">#6028</a>)</li>\n<li><a href=\"https://github.com/axios/axios/commit/7d45ab2e2ad6e59f5475e39afd4b286b1f393fc0\"><code>7d45ab2</code></a> chore(tests): fixed tests to pass in node v19 and v20 with <code>keep-alive</code> enabl...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/axios/axios/compare/v1.4.0...v1.6.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=axios&package-manager=npm_and_yarn&previous-version=1.4.0&new-version=1.6.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/axios-1.6.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump axios from 1.4.0 to 1.6.1 (#6421)\n\nBumps [axios](https://github.com/axios/axios) from 1.4.0 to 1.6.1.\r\n- [Release notes](https://github.com/axios/axios/releases)\r\n- [Changelog](https://github.com/axios/axios/blob/v1.x/CHANGELOG.md)\r\n- [Commits](https://github.com/axios/axios/compare/v1.4.0...v1.6.1)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: axios\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621104eac254a19ac2905fd",
    "number": 6419,
    "body": "…ing a property that returns `Self` or `type[Self]`.",
    "head_branch": "propSelf",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:201:31 - warning: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:259:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n-     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:261:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n-     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:267:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n-     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:269:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n-     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:2132:16 - error: Expression of type \"UserNewsType\" cannot be assigned to return type \"Self@UserNewsType\"\n-     Type \"UserNewsType\" cannot be assigned to type \"Self@UserNewsType\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/enums.py:2137:16 - error: Expression of type \"UserNewsType\" cannot be assigned to return type \"Self@UserNewsType\"\n-     Type \"UserNewsType\" cannot be assigned to type \"Self@UserNewsType\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:249:32 - error: Argument of type \"ManifestPath\" cannot be assigned to parameter \"__object\" of type \"Self@ManifestPath\" in function \"append\"\n-     Type \"ManifestPath\" cannot be assigned to type \"Self@ManifestPath\" (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/steam.py/steam/role.py\n-   /tmp/mypy_primer/projects/steam.py/steam/role.py:121:16 - error: Expression of type \"RolePermissions\" cannot be assigned to return type \"Self@RolePermissions\"\n-     Type \"RolePermissions\" cannot be assigned to type \"Self@RolePermissions\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:220:39 - error: Argument of type \"Cog[Bot]\" cannot be assigned to parameter \"cog\" of type \"Cog[Self@Bot]\" in function \"remove_cog\"\n-     \"Cog[Bot]\" is incompatible with \"Cog[Self@Bot]\"\n-       Type parameter \"BotT@Cog\" is covariant, but \"Bot\" is not a subtype of \"Self@Bot\"\n-         Type \"Bot\" cannot be assigned to type \"Self@Bot\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:294:39 - error: Argument of type \"Cog[Bot]\" cannot be assigned to parameter \"cog\" of type \"Cog[Self@Bot]\" in function \"remove_cog\"\n-     \"Cog[Bot]\" is incompatible with \"Cog[Self@Bot]\"\n-       Type parameter \"BotT@Cog\" is covariant, but \"Bot\" is not a subtype of \"Self@Bot\"\n-         Type \"Bot\" cannot be assigned to type \"Self@Bot\" (reportGeneralTypeIssues)\n- 8421 errors, 22 warnings, 0 informations \n+ 8411 errors, 23 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n- /tmp/mypy_primer/projects/discord.py/discord/abc.py\n-   /tmp/mypy_primer/projects/discord.py/discord/abc.py:975:16 - error: Expression of type \"GuildChannel\" cannot be assigned to return type \"Self@GuildChannel\"\n-     Type \"GuildChannel\" cannot be assigned to type \"Self@GuildChannel\" (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/discord.py/discord/embeds.py\n-   /tmp/mypy_primer/projects/discord.py/discord/embeds.py:252:16 - error: Expression of type \"Embed\" cannot be assigned to return type \"Self@Embed\"\n-     Type \"Embed\" cannot be assigned to type \"Self@Embed\" (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cooldowns.py\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cooldowns.py:251:16 - error: Expression of type \"MaxConcurrency\" cannot be assigned to return type \"Self@MaxConcurrency\"\n-     Type \"MaxConcurrency\" cannot be assigned to type \"Self@MaxConcurrency\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:618:48 - error: Argument of type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to parameter \"other\" of type \"Self@Command[CogT@Command, P@Command, T@Command]\" in function \"_ensure_assignment_on_copy\"\n-     Type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to type \"Self@Command[CogT@Command, P@Command, T@Command]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:625:52 - error: Argument of type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to parameter \"other\" of type \"Self@Command[CogT@Command, P@Command, T@Command]\" in function \"_ensure_assignment_on_copy\"\n-     Type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to type \"Self@Command[CogT@Command, P@Command, T@Command]\" (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:377:16 - error: Expression of type \"HelpCommand\" cannot be assigned to return type \"Self@HelpCommand\"\n-     Type \"HelpCommand\" cannot be assigned to type \"Self@HelpCommand\" (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py\n-   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:138:16 - error: Expression of type \"Parameter\" cannot be assigned to return type \"Self@Parameter\"\n-     Type \"Parameter\" cannot be assigned to type \"Self@Parameter\" (reportGeneralTypeIssues)\n- 69 errors, 9 warnings, 0 informations \n+ 62 errors, 9 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in an incorrect type evaluation when accessing a property that returns `Self` or `type[Self]`. (#6419)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621104fac254a19ac2905fe",
    "number": 6418,
    "body": "…gic method (like `__add__`) to `self` when the magic method returns `Self`. This addresses #6388.",
    "head_branch": "issue6388",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that leads an incorrect type evaluation when binding a magic method (like `__add__`) to `self` when the magic method returns `Self`. This addresses #6388. (#6418)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211050ac254a19ac2905ff",
    "number": 6410,
    "body": "…ow produces a more accurate type when one (but not both) of the two tuples is of indeterminate length.",
    "head_branch": "addTuples1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved handling of `+` operator when both operands are tuples. It now produces a more accurate type when one (but not both) of the two tuples is of indeterminate length. (#6410)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211051ac254a19ac290600",
    "number": 6408,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/5097\r\n\r\nSaw a potential spot where this problem might occur:\r\n\r\nBinding is required but it doesn't happen because a file is skipped. Check is still called in that situation.\r\nAlso added more information when binding is required but the check happens anyway.",
    "head_branch": "rchiodo/potential_fix_for_binding_failure",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Potential fix for bind failure during source file check (#6408)\n\n* Potential fix for binding failure during check\r\n\r\n* Fix prettier\r\n\r\n* Review feedback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211052ac254a19ac290601",
    "number": 6407,
    "body": "… files within installed third-party libraries to take precedence over local modules. This addresses #5585.",
    "head_branch": "issue6406",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug in the import resolver that allowed typeshed stubs and stub files within installed third-party libraries to take precedence over local modules. This addresses #5585. (#6407)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211053ac254a19ac290602",
    "number": 6405,
    "body": "…class` statement when the class has no custom metaclass or `__init_subclass__` in its hierarchy. In this case, the `object.__init_subclass__` method applies, and it accepts no additional keyword arguments. Also improved the error reporting for `__init_subclass__` in general. This addresses #6403.",
    "head_branch": "issue6403",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/types/manifest.py:29:28 - error: No parameter named \"total\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/types/manifest.py:29:7 - error: Incorrect keyword arguments for __init_subclass__ method (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/types/manifest.py:153:30 - error: No parameter named \"total\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/types/manifest.py:153:7 - error: Incorrect keyword arguments for __init_subclass__ method (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/types/manifest.py:276:30 - error: No parameter named \"total\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/types/manifest.py:276:7 - error: Incorrect keyword arguments for __init_subclass__ method (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/types/manifest.py:282:27 - error: No parameter named \"total\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/types/manifest.py:282:7 - error: Incorrect keyword arguments for __init_subclass__ method (reportGeneralTypeIssues)\n- 8413 errors, 22 warnings, 0 informations \n+ 8421 errors, 22 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.35x faster (95.6s -> 71.0s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Improved pyright's enforcement of keyword arguments passed within a `class` statement when the class has no custom metaclass or `__init_subclass__` in its hierarchy. In this case, the `object.__init_subclass__` method applies, and it accepts no additional keyword arguments. Also improved the error reporting for `__init_subclass__` in general. This addresses #6403. (#6405)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211054ac254a19ac290603",
    "number": 6398,
    "body": null,
    "head_branch": "bindSimpl1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:245:27 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n-     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:245:14 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:251:27 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n-     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:251:14 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:293:27 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n-     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:293:14 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:294:13 - error: Expected 5 positional arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:295:13 - error: Expected 5 positional arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:296:13 - error: Expected 5 positional arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:320:58 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n-     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:320:45 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:320:69 - error: Expected 3 positional arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/state.py:2307:28 - error: Cannot access member \"_COMMENTABLE_TYPE\" for type \"Commentable*\"\n-     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@Commentable], _CommentThreadType]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/state.py:2307:22 - error: Type of \"_COMMENTABLE_TYPE\" is unknown (reportUnknownMemberType)\n- 8427 errors, 22 warnings, 0 informations \n+ 8413 errors, 22 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Further simplified getTypeOfClassMemberName. (#6398)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211055ac254a19ac290604",
    "number": 6396,
    "body": "…parent class with an overloaded method in an incompatible manner. This addresses #6382.",
    "head_branch": "issue6382",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+ /tmp/mypy_primer/projects/steam.py/steam/ext/commands/utils.py\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/utils.py:62:9 - error: Method \"pop\" overrides class \"dict\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n- 8426 errors, 22 warnings, 0 informations \n+ 8427 errors, 22 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timestamps.pyi:212:37 - error: Unnecessary \"# pyright: ignore\" rule: \"reportIncompatibleMethodOverride\"\n- 1329 errors, 0 warnings, 0 informations \n+ 1328 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false negative when a subclass overrides a parent class with an overloaded method in an incompatible manner. This addresses #6382. (#6396)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211055ac254a19ac290605",
    "number": 6390,
    "body": "… This addresses #6387.",
    "head_branch": "issue6387",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nmaterialize (https://github.com/MaterializeInc/materialize)\n-   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/mzexplore.py:100:44 - error: Expected 1 more positional argument (reportGeneralTypeIssues)\n- 13 errors, 269 warnings, 0 informations \n+ 12 errors, 269 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that results in false positive when indexing an enum class. This addresses #6387. (#6390)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211056ac254a19ac290606",
    "number": 6389,
    "body": " rollup of the following changes:\r\n\r\n- Localization update\r\n- Provide better debugging info on cycle\r\n- Remove unused import pyright ignore",
    "head_branch": "pull-pylance-20231121",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Push pylance changes to pyright (#6389)\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211057ac254a19ac290607",
    "number": 6379,
    "body": "…s.partial` is used with a constructor where `type[Self]` is passed as the first argument. This addresses #6378.",
    "head_branch": "issue6378",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that results in an incorrect type evaluation when `functools.partial` is used with a constructor where `type[Self]` is passed as the first argument. This addresses #6378. (#6379)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211058ac254a19ac290608",
    "number": 6375,
    "body": null,
    "head_branch": "bindFunctionSimpl8",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-     Argument type is \"MessageCommand[(ctx: Context, *, ruby: Unknown, rebecca: str = \"h\") -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"MessageCommand[SlashCommand[(ctx: Context, *, ruby: Unknown, rebecca: str = \"h\") -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"SlashCommand[(ctx: Context, meow: Unknown = annotations.channel_field()) -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"SlashCommand[MessageCommand[(ctx: Context, meow: Unknown = annotations.channel_field()) -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"SlashCommand[(ctx: Context, meow: Unknown | None = annotations.channel_field(channel_types=[hikari.PrivateChannel, hikari.ChannelType.GUILD_TEXT], default=None, description=\"descript\", greedy=True, or_snowflake=True, positional=True, slash_name=\"aaa\")) -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"SlashCommand[MessageCommand[(ctx: Context, meow: Unknown | None = annotations.channel_field(channel_types=[hikari.PrivateChannel, hikari.ChannelType.GUILD_TEXT], default=None, description=\"descript\", greedy=True, or_snowflake=True, positional=True, slash_name=\"aaa\")) -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"SlashCommand[(ctx: Context, nope: Unknown = annotations.member_field()) -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"SlashCommand[MessageCommand[(ctx: Context, nope: Unknown = annotations.member_field()) -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"SlashCommand[(ctx: Context, nope: Unknown | None = annotations.member_field(default=None, description=\"fine\", greedy=True, or_snowflake=True, positional=True, slash_name=\"pancake\")) -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"SlashCommand[MessageCommand[(ctx: Context, nope: Unknown | None = annotations.member_field(default=None, description=\"fine\", greedy=True, or_snowflake=True, positional=True, slash_name=\"pancake\")) -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"SlashCommand[(ctx: Context, yes: Unknown = annotations.mentionable_field()) -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"SlashCommand[MessageCommand[(ctx: Context, yes: Unknown = annotations.mentionable_field()) -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"SlashCommand[(ctx: Context, idol: Unknown = annotations.mentionable_field(default=hikari.Snowflake(0), description=\"You'll be fine\", greedy=True, or_snowflake=True, positional=True, slash_name=\"echo\")) -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"SlashCommand[MessageCommand[(ctx: Context, idol: Unknown = annotations.mentionable_field(default=hikari.Snowflake(0), description=\"You'll be fine\", greedy=True, or_snowflake=True, positional=True, slash_name=\"echo\")) -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"SlashCommand[(ctx: Context, arg: Unknown = annotations.role_field()) -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"SlashCommand[MessageCommand[(ctx: Context, arg: Unknown = annotations.role_field()) -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"SlashCommand[(ctx: Context, arg: Unknown | None = annotations.role_field(default=None, description=\"root\", greedy=True, or_snowflake=True, positional=True, slash_name=\"slap\")) -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"SlashCommand[MessageCommand[(ctx: Context, arg: Unknown | None = annotations.role_field(default=None, description=\"root\", greedy=True, or_snowflake=True, positional=True, slash_name=\"slap\")) -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"SlashCommand[(ctx: Context, of: Unknown = annotations.user_field()) -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"SlashCommand[MessageCommand[(ctx: Context, of: Unknown = annotations.user_field()) -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"SlashCommand[(ctx: Context, scene: Unknown = annotations.user_field(default=hikari.Snowflake(0), description=\"gm\", greedy=True, or_snowflake=True, positional=True, slash_name=\"easter\")) -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"SlashCommand[MessageCommand[(ctx: Context, scene: Unknown = annotations.user_field(default=hikari.Snowflake(0), description=\"gm\", greedy=True, or_snowflake=True, positional=True, slash_name=\"easter\")) -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n-     Argument type is \"MessageCommand[(ctx: Context, *, ruby: Unknown, rebecca: str = \"h\") -> Coroutine[Any, Any, None]]\" (reportUnknownArgumentType)\n+     Argument type is \"MessageCommand[SlashCommand[(ctx: Context, *, ruby: Unknown, rebecca: str = \"h\") -> Coroutine[Any, Any, None]]]\" (reportUnknownArgumentType)\n\n```"
    ],
    "commit_messages": [
      "Another round of simplifications related to bindFunctionToClassOrObject. (#6375)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211059ac254a19ac290609",
    "number": 6374,
    "body": null,
    "head_branch": "getBoundMethodSimpl",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Removed more direct calls to bindFunctionToClassOrObject. (#6374)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621105aac254a19ac29060a",
    "number": 6373,
    "body": null,
    "head_branch": "codeFlowSimpl1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Simplified code in the codeFlowEngine module. (#6373)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621105bac254a19ac29060b",
    "number": 6372,
    "body": null,
    "head_branch": "checkerSimplification1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Eliminated redundant code in checker. (#6372)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621105cac254a19ac29060c",
    "number": 6369,
    "body": "This PR adds support for accepting `true` and `false` in `settings.json`'s `diagnosticSeverityOverrides`.\r\n\r\nIt makes the `diagnosticSeverityOverrides` work the same as the corresponding config file options and the `# pyright` comment overrides, which already support `true` and `false` for all the `reportXXX` rules. The value `true`  will be treated as \"error\" and `false` will be treated as \"none\".",
    "head_branch": "diagnosticSeverityOverrides",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "support boolean values in diagnosticSeverityOverrides (#6369)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621105dac254a19ac29060d",
    "number": 6368,
    "body": null,
    "head_branch": "descrAccess8",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+       Member \"__set__\" is unknown\n+       Member \"__set__\" is unknown\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+       Member \"__set__\" is unknown\n+       Member \"__set__\" is unknown\n+       Member \"__set__\" is unknown\n+       Member \"__set__\" is unknown\n+       Member \"__set__\" is unknown\n+       Member \"__set__\" is unknown\n+       Member \"__set__\" is unknown\n+       Member \"__set__\" is unknown\n\n```"
    ],
    "commit_messages": [
      "Further simplification of applyDescriptorAccessMethod. (#6368)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621105eac254a19ac29060e",
    "number": 6367,
    "body": null,
    "head_branch": "descrAccess7",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Further simplifications for applyDescriptorAccessMethod. (#6367)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621105eac254a19ac29060f",
    "number": 6366,
    "body": null,
    "head_branch": "descrAccess6",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621105fac254a19ac290610",
    "number": 6365,
    "body": "…in the negative (else) case when `x` is a bound TypeVar (or `Self`). This addresses #6361.",
    "head_branch": "issue6361-5",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type narrowing for the `x is None` in the negative (else) case when `x` is a bound TypeVar (or `Self`). This addresses #6361. (#6365)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211060ac254a19ac290611",
    "number": 6363,
    "body": "…in the negative (else) case when `x` is a bound TypeVar (or `Self`). This addresses #6361.",
    "head_branch": "issue6361-4",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211061ac254a19ac290612",
    "number": 6362,
    "body": "…in the negative (else) case when `x` is a bound TypeVar (or `Self`). This addresses #6361.",
    "head_branch": "issue6361-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:645:56 - error: \"cog_command_error\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:884:51 - error: \"cog_before_invoke\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:904:51 - error: \"cog_after_invoke\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:1148:31 - error: Cannot access member \"__cog_name__\" for type \"type[None]*\"\n+     Member \"__cog_name__\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:1277:62 - error: \"cog_check\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 69 errors, 9 warnings, 0 informations \n+ 74 errors, 9 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/core/typing.py\n+   /tmp/mypy_primer/projects/Expression/expression/core/typing.py:109:19 - error: Unnecessary \"cast\" call; type is already \"_Derived@try_downcast\" (reportUnnecessaryCast)\n- 201 errors, 0 warnings, 0 informations \n+ 202 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211062ac254a19ac290613",
    "number": 6359,
    "body": null,
    "head_branch": "accessMethod6",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Further cleanup and simplification of the applyDescriptorAccessMethod. (#6359)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211063ac254a19ac290614",
    "number": 6358,
    "body": null,
    "head_branch": "constraintSolver1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a theoretical bug in constraint solver relating to ParamSpecs. (#6358)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211064ac254a19ac290615",
    "number": 6357,
    "body": null,
    "head_branch": "issue6335",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict)\n- /tmp/mypy_primer/projects/bidict/bidict/_base.py\n-   /tmp/mypy_primer/projects/bidict/bidict/_base.py:203:24 - error: Cannot assign member \"_invweak\" for type \"BidictBase[VT@BidictBase, KT@BidictBase]\"\n-     Type \"ref\" cannot be assigned to type \"ReferenceType[BidictBase[KT@BidictBase, VT@BidictBase]] | None\"\n-       \"ref\" is incompatible with \"ReferenceType[BidictBase[KT@BidictBase, VT@BidictBase]]\"\n-         Type parameter \"_T@ReferenceType\" is invariant, but \"Self@BidictBase[KT@BidictBase, VT@BidictBase]\" is not the same as \"BidictBase[KT@BidictBase, VT@BidictBase]\"\n-       \"ref\" is incompatible with \"None\" (reportGeneralTypeIssues)\n- 12 errors, 0 warnings, 0 informations \n+ 11 errors, 0 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2271:27 - warning: Argument type is partially unknown\n-     Argument corresponds to parameter \"__function\" in function \"__new__\"\n-     Argument type is \"(c: MenuCommand[Any, Unknown]) -> bool\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2271:20 - warning: Return type, \"filter[MenuCommand[Any, Unknown]]\", is partially unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2271:34 - warning: Type of parameter \"c\" is partially unknown (reportUnknownLambdaType)\n- 2344 errors, 10518 warnings, 0 informations \n+ 2344 errors, 10515 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_catalog.py:214:65 - error: Argument of type \"ref\" cannot be assigned to parameter \"__catalog_ref\" of type \"ReferenceType[CatalogImpl]\" in function \"__init__\"\n-     \"ref\" is incompatible with \"ReferenceType[CatalogImpl]\"\n-       Type parameter \"_T@ReferenceType\" is invariant, but \"Self@CatalogImpl\" is not the same as \"CatalogImpl\" (reportGeneralTypeIssues)\n- 726 errors, 31 warnings, 0 informations \n+ 725 errors, 31 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Issue6335 (#6357)\n\n* Fixed bug in completion provider that resulted in an attempt to tokenize and parse a binary (native) library file. This led to a crash in some cases. This addresses https://github.com/microsoft/pylance-release/issues/5090.\r\n\r\n* Fixed a bug that results in a false positive error when a `__new__` method returns `Self` for a generic class and the type variable is invariant. This addresses #6335."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211065ac254a19ac290616",
    "number": 6356,
    "body": "…ize and parse a binary (native) library file. This led to a crash in some cases. This addresses https://github.com/microsoft/pylance-release/issues/5090.",
    "head_branch": "issue5090",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug in completion provider that resulted in an attempt to tokenize and parse a binary (native) library file. This led to a crash in some cases. This addresses https://github.com/microsoft/pylance-release/issues/5090. (#6356)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211065ac254a19ac290617",
    "number": 6354,
    "body": "…he case where the containing method's `self` or `cls` parameter is annotated using a protocol. This can be used to handle mixin methods that call `super()`. This addresses #6347.",
    "head_branch": "issue6347-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandas-stubs (https://github.com/pandas-dev/pandas-stubs): typechecking got 1.68x slower (14.9s -> 25.1s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Enhanced the handling of zero-argument form of `super()` to support the case where the containing method's `self` or `cls` parameter is annotated using a protocol. This can be used to handle mixin methods that call `super()`. This addresses #6347. (#6354)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211066ac254a19ac290618",
    "number": 6349,
    "body": "…he case where the containing method's `self` or `cls` parameter is annotated using a protocol. This can be used to handle mixin methods that call `super()`. This addresses #6347.",
    "head_branch": "issue6347",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+ /tmp/mypy_primer/projects/steam.py/steam/badge.py\n+   /tmp/mypy_primer/projects/steam.py/steam/badge.py:119:9 - error: Arguments missing for parameters \"owner\", \"community_item_id\" (reportGeneralTypeIssues)\n- 8426 errors, 22 warnings, 0 informations \n+ 8427 errors, 22 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211067ac254a19ac290619",
    "number": 6348,
    "body": "…class that derives from `Any` will not be considered type compatible with `None`. This addresses #6325.",
    "head_branch": "issue6325-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\noperator (https://github.com/canonical/operator)\n- /tmp/mypy_primer/projects/operator/test/test_main.py\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:369:42 - error: Cannot access member \"_data\" for type \"StoredState\"\n-     Member \"_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"_data\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"handle\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Argument type is unknown\n-     Argument corresponds to parameter \"handle_path\" in function \"save_snapshot\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:374:16 - error: Expression of type \"StoredState | StoredStateData\" cannot be assigned to return type \"BoundStoredState | StoredStateData\" (reportGeneralTypeIssues)\n- 61 errors, 0 warnings, 0 informations \n+ 55 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Restored previous behavior (prior to 1.1.334) where an instance of a class that derives from `Any` will not be considered type compatible with `None`. This addresses #6325. (#6348)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211068ac254a19ac29061a",
    "number": 6346,
    "body": "Fixes #6345\r\n",
    "head_branch": "notspace",
    "is_a_fork": true,
    "comments": [
      "Thanks for the contribution, but I'm going to fix it in a different way.",
      "Ah, I now see why you did it this way. The other unary operators don't require a space. Reopening PR.",
      "Yes, the other unary ops are all punctuation and should not have a space between the operator and the operand.",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fix missing space after \"not\" in reveal_type() output (#6346)\n\nFixes #6345"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211069ac254a19ac29061b",
    "number": 6341,
    "body": "…` function.",
    "head_branch": "applyDescriptor6",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Did some cleanup and maintenance for the `applyDescriptorAccessMethod` function. (#6341)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621106aac254a19ac29061c",
    "number": 6340,
    "body": "…t` function.",
    "head_branch": "applyDescriptor5",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Did some cleanup and maintenance for the `adjustMemberAccessTypeForSet` function. (#6340)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621106bac254a19ac29061d",
    "number": 6339,
    "body": null,
    "head_branch": "applyDescriptor4",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nmaterialize (https://github.com/MaterializeInc/materialize): typechecking got 2.06x slower (10.0s -> 20.6s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Did some cleanup and maintenance for `bindMethodForMemberAccess` logic. (#6339)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621106cac254a19ac29061e",
    "number": 6338,
    "body": "…c. Removed support for `__getattribute__` magic method because the old logic was incorrect.",
    "head_branch": "applyDescriptor3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon)\n+ /tmp/mypy_primer/projects/alectryon/alectryon/latex.py\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:307:27 - error: Cannot access member \"alectryon\" for type \"Environments\"\n+     Member \"alectryon\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:282:27 - error: Cannot access member \"anchor\" for type \"Macros\"\n+     Member \"anchor\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:199:21 - error: Cannot access member \"hyp\" for type \"Macros\"\n+     Member \"hyp\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:205:27 - error: Cannot access member \"goal\" for type \"Environments\"\n+     Member \"goal\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:207:31 - error: Cannot access member \"hyps\" for type \"Environments\"\n+     Member \"hyps\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:210:25 - error: Cannot access member \"infrule\" for type \"Macros\"\n+     Member \"infrule\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:212:28 - error: Cannot access member \"gid\" for type \"Macros\"\n+     Member \"gid\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:215:35 - error: Cannot access member \"conclusion\" for type \"Environments\"\n+     Member \"conclusion\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:221:31 - error: Cannot access member \"extragoals\" for type \"Environments\"\n+     Member \"extragoals\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:235:27 - error: Cannot access member \"input\" for type \"Environments\"\n+     Member \"input\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:249:27 - error: Cannot access member \"message\" for type \"Environments\"\n+     Member \"message\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:253:27 - error: Cannot access member \"output\" for type \"Environments\"\n+     Member \"output\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:257:39 - error: Cannot access member \"messages\" for type \"Environments\"\n+     Member \"messages\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:262:39 - error: Cannot access member \"goals\" for type \"Environments\"\n+     Member \"goals\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:266:27 - error: Cannot access member \"sentence\" for type \"Environments\"\n+     Member \"sentence\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:275:30 - error: Cannot access member \"txt\" for type \"Environments\"\n+     Member \"txt\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:293:20 - error: Cannot access member \"mrefmarker\" for type \"Macros\"\n+     Member \"mrefmarker\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:298:26 - error: Cannot access member \"alectryonInline\" for type \"Macros\"\n+     Member \"alectryonInline\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:298:70 - error: Cannot access member \"alectryon\" for type \"Environments\"\n+     Member \"alectryon\" is unknown (reportGeneralTypeIssues)\n- 15 errors, 37 warnings, 0 informations \n+ 34 errors, 37 warnings, 0 informations \n\npyinstrument (https://github.com/joerick/pyinstrument)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/stack_sampler.py:160:26 - error: Cannot access member \"stack_sampler\" for type \"local\"\n+     Member \"stack_sampler\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/stack_sampler.py:160:12 - error: Type of \"stack_sampler\" is partially unknown\n+     Type of \"stack_sampler\" is \"StackSampler | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/stack_sampler.py:160:12 - error: Return type, \"StackSampler | Unknown\", is partially unknown (reportUnknownVariableType)\n- 31 errors, 5 warnings, 0 informations \n+ 34 errors, 5 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/behaviors.py:85:27 - error: Cannot access member \"x\" for type \"BuildsWithSig[type[int], (x: int)]\"\n+     Member \"x\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/behaviors.py:85:17 - information: Type of \"Conf(x=1).x\" is \"Any\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/behaviors.py:85:17 - information: Type of \"Conf(x=1).x\" is \"Unknown\"\n- 145 errors, 0 warnings, 171 informations \n+ 146 errors, 0 warnings, 171 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datastreams/processor.py:359:41 - error: Cannot access member \"value\" for type \"local\"\n+     Member \"value\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1445:21 - error: Cannot access member \"stdout\" for type \"Popen\"\n+     Member \"stdout\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1446:22 - error: Cannot access member \"stdout\" for type \"Popen\"\n+     Member \"stdout\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1447:21 - error: Cannot access member \"stderr\" for type \"Popen\"\n+     Member \"stderr\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1448:22 - error: Cannot access member \"stderr\" for type \"Popen\"\n+     Member \"stderr\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1451:25 - error: Cannot access member \"stdin\" for type \"Popen\"\n+     Member \"stdin\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:1452:26 - error: Cannot access member \"stdin\" for type \"Popen\"\n+     Member \"stdin\" is unknown (reportGeneralTypeIssues)\n- 9732 errors, 466 warnings, 0 informations \n+ 9739 errors, 466 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/scalability/benchmark_executor.py:253:83 - error: Cannot access member \"worker_id\" for type \"local\"\n+     Member \"worker_id\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/scalability/benchmark_executor.py:252:39 - error: Cannot access member \"worker_id\" for type \"local\"\n+     Member \"worker_id\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/scalability/benchmark_executor.py:254:36 - error: Cannot access member \"worker_id\" for type \"local\"\n+     Member \"worker_id\" is unknown (reportGeneralTypeIssues)\n- 13 errors, 267 warnings, 0 informations \n+ 16 errors, 267 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621106dac254a19ac29061f",
    "number": 6337,
    "body": "…ility.",
    "head_branch": "applyDescriptor2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:43:36 - error: Type of \"header\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:54:36 - error: Type of \"header\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:61:36 - error: Type of \"header\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:567:84 - error: Type of \"profile_background\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:567:55 - error: Type of \"profile_background\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:569:82 - error: Type of \"mini_profile_background\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:569:48 - error: Type of \"mini_profile_background\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:571:80 - error: Type of \"avatar_frame\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:571:57 - error: Type of \"avatar_frame\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:572:86 - error: Type of \"animated_avatar\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:572:60 - error: Type of \"animated_avatar\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:573:80 - error: Type of \"profile_modifier\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:573:53 - error: Type of \"profile_modifier\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1243:17 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1243:17 - error: Type of \"item_name\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1244:17 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1244:17 - error: Type of \"item_title\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1245:17 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1245:17 - error: Type of \"item_description\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1255:24 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1255:24 - error: Type of \"item_image_large\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1255:69 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1255:69 - error: Type of \"item_image_small\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1252:32 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1252:32 - error: Type of \"item_image_large\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1252:77 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1252:77 - error: Type of \"item_image_small\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1266:24 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1266:24 - error: Type of \"item_movie_mp4\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1266:67 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1266:67 - error: Type of \"item_movie_mp4_small\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1263:32 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1263:32 - error: Type of \"item_movie_mp4\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1263:75 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1263:75 - error: Type of \"item_movie_mp4_small\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1269:17 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1269:17 - error: Type of \"animated\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1279:34 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1279:34 - error: Type of \"badge_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1274:28 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1274:28 - error: Type of \"item_name\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1274:28 - error: Type of \"removesuffix\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1274:107 - error: Type of \"level\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1276:105 - error: Type of \"image\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1277:25 - error: Type of \"level\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1291:17 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1291:17 - error: Type of \"profile_theme_id\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:77:46 - error: Type of \"rank\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:78:57 - error: Type of \"state\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:219:59 - error: Type of \"mentions\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:219:59 - error: Type of \"ids\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:220:29 - error: Type of \"mentions\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:220:29 - error: Type of \"mention_all\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:220:9 - error: Type of \"mentions_all\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:221:30 - error: Type of \"mentions\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:221:30 - error: Type of \"mention_here\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:221:9 - error: Type of \"mentions_here\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:255:27 - error: Type of \"_TYPE\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:297:27 - error: Type of \"_TYPE\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:583:81 - error: Type of \"rank\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:584:77 - error: Type of \"rank\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:641:25 - error: Type of \"header_state\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:641:25 - error: Type of \"roles\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:642:32 - error: Type of \"header_state\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:642:32 - error: Type of \"role_actions\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:643:16 - error: Type of \"role_id\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:643:39 - error: Type of \"role_id\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:640:20 - error: Type of \"role_id\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:808:62 - error: Type of \"persona\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1072:24 - error: Type of \"item_type\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1076:24 - error: Type of \"item_type\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1082:24 - error: Type of \"item_type\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1086:24 - error: Type of \"item_type\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1092:24 - error: Type of \"item_type\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1096:24 - error: Type of \"item_type\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1103:28 - error: Type of \"item_type\" is unknown (reportUnknownMemberType)\n\n... (truncated 385 lines) ...\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:586:47 - warning: Type of \"__ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:586:47 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"_covert_option_or_empty\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:595:68 - warning: Type of \"__ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:595:68 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"_covert_option_or_empty\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:606:63 - warning: Type of \"__ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:606:63 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"convert\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:609:80 - warning: Type of \"__ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:609:80 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"convert\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:613:63 - warning: Type of \"__ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:613:63 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"convert\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1703:19 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1703:19 - warning: Type of \"sort\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1703:19 - warning: Type of \"copy\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1703:9 - warning: Type of \"builder\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1716:16 - warning: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1753:16 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1812:9 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1812:9 - warning: Type of \"add_option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1812:9 - warning: Type of \"add_option\" is unknown (reportUnknownMemberType)\n-     Type of \"add_option\" is \"(option: Unknown) -> _SlashCommandBuilder\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1813:13 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"option\" in function \"add_option\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:18 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:18 - warning: Type of \"get_option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:18 - warning: Type of \"get_option\" is unknown (reportUnknownMemberType)\n-     Type of \"get_option\" is \"(name: str, /) -> (Unknown | None)\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:9 - warning: Type of \"option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:9 - warning: Type of \"option\" is unknown (reportUnknownVariableType)\n-     Type of \"option\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:18 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:18 - warning: Type of \"get_option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:18 - warning: Type of \"get_option\" is unknown (reportUnknownMemberType)\n-     Type of \"get_option\" is \"(name: str, /) -> (Unknown | None)\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:9 - warning: Type of \"option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:9 - warning: Type of \"option\" is unknown (reportUnknownVariableType)\n-     Type of \"option\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:18 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:18 - warning: Type of \"get_option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:18 - warning: Type of \"get_option\" is unknown (reportUnknownMemberType)\n-     Type of \"get_option\" is \"(name: str, /) -> (Unknown | None)\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:9 - warning: Type of \"option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:9 - warning: Type of \"option\" is unknown (reportUnknownVariableType)\n-     Type of \"option\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:241:62 - warning: Type of \"_ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:241:62 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"try_acquire\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:257:58 - warning: Type of \"_ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:257:58 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"release\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:366:62 - warning: Type of \"_ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:366:62 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"try_acquire\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:382:69 - warning: Type of \"_ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:382:69 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"release\" (reportUnknownArgumentType)\n- 2344 errors, 10491 warnings, 0 informations \n+ 2344 errors, 10518 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:275:52 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Unknown | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:626:39 - error: Argument of type \"Text | Any | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | Any | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:627:44 - error: Argument of type \"Text | Any | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | Any | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:636:42 - error: Argument of type \"Text | Any | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | Any | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:704:59 - error: Argument of type \"Text | Any | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | Any | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest_bdd/plugin.py:98:20 - error: Argument missing for parameter \"name\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:518:48 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:547:46 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:554:47 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:560:46 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:583:35 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:584:34 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:585:33 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:590:36 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:597:35 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:598:40 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Text | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/compat.py:407:22 - error: \n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/compat.py:407:22 - error: Cannot access member \"_warn\" for type \"TemporaryDirectory\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/exploration/debugger.py:239:34 - error: Cannot assign member \"on_snapshot\" for type \"__collector__\"\n-     Member \"on_snapshot\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/exploration/debugger.py:269:41 - error: Cannot access member \"snapshots\" for type \"__collector__\"\n-     Member \"snapshots\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/exploration/debugger.py:275:41 - error: Cannot access member \"probes\" for type \"__collector__\"\n-     Member \"probes\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/runtime/test_runtime_metrics.py:161:78 - error: \"send\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 9752 errors, 466 warnings, 0 informations \n+ 9732 errors, 466 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_interval.py:58:83 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n- 1328 errors, 0 warnings, 0 informations \n+ 1329 errors, 0 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:225:23 - error: \n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:225:23 - error: Cannot access member \"_pydantic_validate\" for type \"type[ArraySchema]\"\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:147:19 - error: \n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:147:19 - error: Cannot access member \"_pydantic_validate\" for type \"type[ColumnSchema]\"\n\n```"
    ],
    "commit_messages": [
      "Refactored code that applies descriptor access methods for maintainability. (#6337)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621106eac254a19ac290620",
    "number": 6336,
    "body": "…ility.",
    "head_branch": "applyDescriptor1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:43:40 - error: Cannot access member \"header\" for type \"ProtobufMessage\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:43:36 - error: Type of \"header\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:54:40 - error: Cannot access member \"header\" for type \"UnifiedMessage\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:54:36 - error: Type of \"header\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:61:40 - error: Cannot access member \"header\" for type \"UnifiedMessage\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:61:36 - error: Type of \"header\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:567:90 - error: Cannot access member \"profile_background\" for type \"GetProfileItemsEquippedResponse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:567:84 - error: Type of \"profile_background\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:567:61 - error: Cannot access member \"profile_background\" for type \"GetProfileItemsEquippedResponse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:567:55 - error: Type of \"profile_background\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:569:88 - error: Cannot access member \"mini_profile_background\" for type \"GetProfileItemsEquippedResponse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:569:82 - error: Type of \"mini_profile_background\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:569:54 - error: Cannot access member \"mini_profile_background\" for type \"GetProfileItemsEquippedResponse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:569:48 - error: Type of \"mini_profile_background\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:571:86 - error: Cannot access member \"avatar_frame\" for type \"GetProfileItemsEquippedResponse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:571:80 - error: Type of \"avatar_frame\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:571:63 - error: Cannot access member \"avatar_frame\" for type \"GetProfileItemsEquippedResponse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:571:57 - error: Type of \"avatar_frame\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:572:92 - error: Cannot access member \"animated_avatar\" for type \"GetProfileItemsEquippedResponse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:572:86 - error: Type of \"animated_avatar\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:572:66 - error: Cannot access member \"animated_avatar\" for type \"GetProfileItemsEquippedResponse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:572:60 - error: Type of \"animated_avatar\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:573:86 - error: Cannot access member \"profile_modifier\" for type \"GetProfileItemsEquippedResponse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:573:80 - error: Type of \"profile_modifier\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:573:59 - error: Cannot access member \"profile_modifier\" for type \"GetProfileItemsEquippedResponse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:573:53 - error: Type of \"profile_modifier\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1243:22 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1243:17 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1243:17 - error: Type of \"item_name\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1244:22 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1244:17 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1244:17 - error: Type of \"item_title\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1245:22 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1245:17 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1245:17 - error: Type of \"item_description\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1255:29 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1255:24 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1255:24 - error: Type of \"item_image_large\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1255:74 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1255:69 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1255:69 - error: Type of \"item_image_small\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1252:37 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1252:32 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1252:32 - error: Type of \"item_image_large\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1252:82 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1252:77 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1252:77 - error: Type of \"item_image_small\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1266:29 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1266:24 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1266:24 - error: Type of \"item_movie_mp4\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1266:72 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1266:67 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1266:67 - error: Type of \"item_movie_mp4_small\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1263:37 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1263:32 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1263:32 - error: Type of \"item_movie_mp4\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1263:80 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1263:75 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1263:75 - error: Type of \"item_movie_mp4_small\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1269:22 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1269:17 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1269:17 - error: Type of \"animated\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1279:39 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1279:34 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1279:34 - error: Type of \"badge_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1274:33 - error: Cannot access member \"community_item_data\" for type \"Definition\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1274:28 - error: Type of \"community_item_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1274:28 - error: Type of \"item_name\" is unknown (reportUnknownMemberType)\n\n... (truncated 629 lines) ...\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:586:52 - error: Cannot access member \"__ctx\" for type \"_SemanticShlex\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:586:47 - warning: Type of \"__ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:586:47 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"_covert_option_or_empty\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:595:73 - error: Cannot access member \"__ctx\" for type \"_SemanticShlex\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:595:68 - warning: Type of \"__ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:595:68 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"_covert_option_or_empty\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:606:68 - error: Cannot access member \"__ctx\" for type \"_SemanticShlex\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:606:63 - warning: Type of \"__ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:606:63 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"convert\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:609:85 - error: Cannot access member \"__ctx\" for type \"_SemanticShlex\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:609:80 - warning: Type of \"__ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:609:80 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"convert\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:613:68 - error: Cannot access member \"__ctx\" for type \"_SemanticShlex\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:613:63 - warning: Type of \"__ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:613:63 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"convert\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1703:24 - error: Cannot access member \"_builder\" for type \"SlashCommand[_SlashCallbackSigT@SlashCommand]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1703:19 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1703:19 - warning: Type of \"sort\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1703:19 - warning: Type of \"copy\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1703:9 - warning: Type of \"builder\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1716:16 - warning: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1753:21 - error: Cannot access member \"_builder\" for type \"SlashCommand[_SlashCallbackSigT@SlashCommand]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1753:16 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1812:14 - error: Cannot access member \"_builder\" for type \"SlashCommand[_SlashCallbackSigT@SlashCommand]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1812:9 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1812:9 - warning: Type of \"add_option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1812:9 - warning: Type of \"add_option\" is unknown (reportUnknownMemberType)\n-     Type of \"add_option\" is \"(option: Unknown) -> _SlashCommandBuilder\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1813:13 - warning: Argument type is unknown\n-     Argument corresponds to parameter \"option\" in function \"add_option\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:23 - error: Cannot access member \"_builder\" for type \"SlashCommand[_SlashCallbackSigT@SlashCommand]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:18 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:18 - warning: Type of \"get_option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:18 - warning: Type of \"get_option\" is unknown (reportUnknownMemberType)\n-     Type of \"get_option\" is \"(name: str, /) -> (Unknown | None)\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:9 - warning: Type of \"option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2896:9 - warning: Type of \"option\" is unknown (reportUnknownVariableType)\n-     Type of \"option\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:23 - error: Cannot access member \"_builder\" for type \"SlashCommand[_SlashCallbackSigT@SlashCommand]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:18 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:18 - warning: Type of \"get_option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:18 - warning: Type of \"get_option\" is unknown (reportUnknownMemberType)\n-     Type of \"get_option\" is \"(name: str, /) -> (Unknown | None)\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:9 - warning: Type of \"option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2982:9 - warning: Type of \"option\" is unknown (reportUnknownVariableType)\n-     Type of \"option\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:23 - error: Cannot access member \"_builder\" for type \"SlashCommand[_SlashCallbackSigT@SlashCommand]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:18 - warning: Type of \"_builder\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:18 - warning: Type of \"get_option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:18 - warning: Type of \"get_option\" is unknown (reportUnknownMemberType)\n-     Type of \"get_option\" is \"(name: str, /) -> (Unknown | None)\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:9 - warning: Type of \"option\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3060:9 - warning: Type of \"option\" is unknown (reportUnknownVariableType)\n-     Type of \"option\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:241:67 - error: Cannot access member \"_ctx\" for type \"_CooldownAcquire\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:241:62 - warning: Type of \"_ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:241:62 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"try_acquire\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:257:63 - error: Cannot access member \"_ctx\" for type \"_CooldownAcquire\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:257:58 - warning: Type of \"_ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:257:58 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"release\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:366:67 - error: Cannot access member \"_ctx\" for type \"_ConcurrencyAcquire\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:366:62 - warning: Type of \"_ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:366:62 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"try_acquire\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:382:74 - error: Cannot access member \"_ctx\" for type \"_ConcurrencyAcquire\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:382:69 - warning: Type of \"_ctx\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:382:69 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"ctx\" in function \"release\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_message.py:156:15 - error: Object of type \"MessageCommand[AsyncMock]\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_slash.py:130:20 - error: Cannot access member \"_builder\" for type \"SlashCommand[Mock]\" (reportGeneralTypeIssues)\n\n... (truncated 6 lines) ...\n\nspeedrun.com_global_scoreboard_webapp (https://github.com/Avasam/speedrun.com_global_scoreboard_webapp)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py:455:72 - error: Cannot access member \"timeslot\" for type \"Registration\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py:498:72 - error: Cannot access member \"timeslot\" for type \"Registration\" (reportGeneralTypeIssues)\n- 29 errors, 8 warnings, 1 information \n+ 31 errors, 8 warnings, 1 information \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:225:23 - error: \n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:225:23 - error: Cannot access member \"_pydantic_validate\" for type \"type[ArraySchema]\"\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:147:19 - error: \n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:147:19 - error: Cannot access member \"_pydantic_validate\" for type \"type[ColumnSchema]\"\n+   /tmp/mypy_primer/projects/pandera/tests/geopandas/test_pydantic.py:34:27 - error: Cannot access member \"data\" for type \"MyModel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/geopandas/test_pydantic.py:35:16 - error: Cannot access member \"data\" for type \"MyModel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/geopandas/test_pydantic.py:46:27 - error: Cannot access member \"data\" for type \"MyModel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/geopandas/test_pydantic.py:69:27 - error: Cannot access member \"data\" for type \"MyModel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/geopandas/test_pydantic.py:75:17 - error: Cannot access member \"data\" for type \"MyModel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/geopandas/test_pydantic.py:94:27 - error: Cannot access member \"data\" for type \"MyModel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/geopandas/test_pydantic.py:100:17 - error: Cannot access member \"data\" for type \"MyModel\" (reportGeneralTypeIssues)\n- 1236 errors, 10 warnings, 0 informations \n+ 1243 errors, 10 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_interval.py:58:83 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n- 1328 errors, 0 warnings, 0 informations \n+ 1329 errors, 0 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+ /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/di_utils.py\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/di_utils.py:18:16 - error: Cannot access member \"_instance\" for type \"type[BMDebugger]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/benchmarks/bm/di_utils.py:21:17 - error: Cannot access member \"_instance\" for type \"type[BMDebugger]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/sampler.py:158:60 - error: Cannot access member \"_default_sampler\" for type \"RateByServiceSampler\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/sampler.py:172:62 - error: Cannot access member \"_default_sampler\" for type \"RateByServiceSampler\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_remoteconfiguration.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_remoteconfiguration.py:35:14 - error: Cannot assign member \"_publisher\" for type \"AppSecRC\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:51:16 - error: Cannot access member \"_instance\" for type \"type[APIManager]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:57:13 - error: Cannot assign member \"_instance\" for type \"type[APIManager]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:58:13 - error: Cannot access member \"_instance\" for type \"type[APIManager]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:64:16 - error: Cannot access member \"_instance\" for type \"type[APIManager]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:69:13 - error: Cannot access member \"_instance\" for type \"type[APIManager]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_api_security/api_manager.py:70:13 - error: Cannot assign member \"_instance\" for type \"type[APIManager]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_overhead_control_engine.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_overhead_control_engine.py:95:45 - error: Cannot access member \"_sampler\" for type \"OverheadControl\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:258:48 - error: \"tracer\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:260:41 - error: \"_service\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:258:38 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:260:31 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:283:33 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:289:65 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:275:52 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"value\" of type \"Text\" in function \"set_tag_str\"\n-     Type \"Unknown | None\" cannot be assigned to type \"Text\"\n-       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:283:43 - error: \"_collect_coverage_enabled\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:289:75 - error: \"_suite_skipping_mode\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:313:47 - error: \"tracer\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:315:41 - error: \"_service\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:313:37 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:315:31 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:396:53 - error: \"tracer\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:398:45 - error: \"_service\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:396:43 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:398:35 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:411:79 - error: \"_suite_skipping_mode\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:421:47 - error: \"_collect_coverage_enabled\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:411:69 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:421:37 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:454:40 - error: \"tracer\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:454:30 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:528:45 - error: \"_suite_skipping_mode\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:514:30 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:526:30 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:528:35 - error: Cannot access member \"_instance\" for type \"type[CIVisibility]\" (reportGeneralTypeIssues)\n\n... (truncated 47 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621106fac254a19ac290621",
    "number": 6332,
    "body": null,
    "head_branch": "issue6261-5",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:304:24 - error: Expression of type \"FieldInfo\" cannot be assigned to return type \"Self@FieldInfo\"\n+     Type \"FieldInfo\" cannot be assigned to type \"Self@FieldInfo\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:368:20 - error: Expression of type \"FieldInfo\" cannot be assigned to return type \"Self@FieldInfo\"\n+     Type \"FieldInfo\" cannot be assigned to type \"Self@FieldInfo\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:381:24 - error: Expression of type \"FieldInfo\" cannot be assigned to return type \"Self@FieldInfo\"\n+     Type \"FieldInfo\" cannot be assigned to type \"Self@FieldInfo\" (reportGeneralTypeIssues)\n- 57 errors, 0 warnings, 0 informations \n+ 60 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+ /tmp/mypy_primer/projects/steam.py/steam/channel.py\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:102:33 - error: Argument of type \"Group\" cannot be assigned to parameter \"chat_group\" of type \"ChatGroup[Any, Self@GroupChannel, Literal[Type.Clan, Type.Chat]]\" in function \"__init__\"\n+     \"Group\" is incompatible with \"ChatGroup[Any, Self@GroupChannel, Literal[Type.Clan, Type.Chat]]\"\n+       Type parameter \"ChatT@ChatGroup\" is covariant, but \"GroupChannel\" is not a subtype of \"Self@GroupChannel\"\n+         Type \"GroupChannel\" cannot be assigned to type \"Self@GroupChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:112:33 - error: Argument of type \"Clan\" cannot be assigned to parameter \"chat_group\" of type \"ChatGroup[Any, Self@ClanChannel, Literal[Type.Clan, Type.Chat]]\" in function \"__init__\"\n+     \"Clan\" is incompatible with \"ChatGroup[Any, Self@ClanChannel, Literal[Type.Clan, Type.Chat]]\"\n+       Type parameter \"ChatT@ChatGroup\" is covariant, but \"ClanChannel\" is not a subtype of \"Self@ClanChannel\"\n+         Type \"ClanChannel\" cannot be assigned to type \"Self@ClanChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:245:27 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:245:14 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:251:27 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:251:14 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:293:27 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:293:14 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:294:13 - error: Expected 5 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:295:13 - error: Expected 5 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:296:13 - error: Expected 5 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:320:58 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:320:45 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:320:69 - error: Expected 3 positional arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:596:16 - error: Expression of type \"MemberT@ChatGroup\" cannot be assigned to return type \"MemberT@ChatGroup\"\n-     Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:404:32 - error: Cannot access member \"_type_args\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]], tuple[type[ChatMessageT@Chat], type[ClanT@Chat], type[GroupT@Chat]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:404:27 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:415:32 - error: Type of \"created_at\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:645:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:645:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:591:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:591:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:610:31 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:610:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:616:32 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:690:37 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:690:32 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:698:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:698:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:871:31 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:871:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:201:31 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:310:24 - error: Expression of type \"Announcement[PartialClan]\" cannot be assigned to return type \"Announcement[Self@PartialClan]\"\n+     \"Announcement[PartialClan]\" is incompatible with \"Announcement[Self@PartialClan]\"\n+       Type parameter \"ClanT@Announcement\" is covariant, but \"PartialClan\" is not a subtype of \"Self@PartialClan\"\n+         Type \"PartialClan\" cannot be assigned to type \"Self@PartialClan\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:252:24 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:259:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:261:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:267:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:269:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n\n... (truncated 67 lines) ...\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/abc.py\n+   /tmp/mypy_primer/projects/discord.py/discord/abc.py:975:16 - error: Expression of type \"GuildChannel\" cannot be assigned to return type \"Self@GuildChannel\"\n+     Type \"GuildChannel\" cannot be assigned to type \"Self@GuildChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/asset.py:423:16 - error: Expression of type \"Asset\" cannot be assigned to return type \"Self@Asset\"\n+     Type \"Asset\" cannot be assigned to type \"Self@Asset\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/asset.py:451:16 - error: Expression of type \"Asset\" cannot be assigned to return type \"Self@Asset\"\n+     Type \"Asset\" cannot be assigned to type \"Self@Asset\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/asset.py:486:16 - error: Expression of type \"Asset\" cannot be assigned to return type \"Self@Asset\"\n+     Type \"Asset\" cannot be assigned to type \"Self@Asset\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/automod.py\n+   /tmp/mypy_primer/projects/discord.py/discord/automod.py:412:61 - error: Cannot access member \"actions\" for type \"AutoModRule\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@AutoModRule, List[AutoModRuleAction]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/automod.py:544:16 - error: Expression of type \"AutoModRule\" cannot be assigned to return type \"Self@AutoModRule\"\n+     Type \"AutoModRule\" cannot be assigned to type \"Self@AutoModRule\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:288:14 - error: Cannot assign member \"_connection\" for type \"Client\"\n+     Expression of type \"ConnectionState[Client]\" cannot be assigned to member \"_connection\" of class \"Client\"\n+       \"ConnectionState[Client]\" is incompatible with \"ConnectionState[Self@Client]\"\n+         Type parameter \"ClientT@ConnectionState\" is covariant, but \"Client\" is not a subtype of \"Self@Client\"\n+           Type \"Client\" cannot be assigned to type \"Self@Client\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/colour.py\n+   /tmp/mypy_primer/projects/discord.py/discord/colour.py:203:20 - error: Expression of type \"Colour\" cannot be assigned to return type \"Self@Colour\"\n+     Type \"Colour\" cannot be assigned to type \"Self@Colour\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/colour.py:209:24 - error: Expression of type \"Colour\" cannot be assigned to return type \"Self@Colour\"\n+     Type \"Colour\" cannot be assigned to type \"Self@Colour\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/colour.py:210:20 - error: Expression of type \"Colour\" cannot be assigned to return type \"Self@Colour\"\n+     Type \"Colour\" cannot be assigned to type \"Self@Colour\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/colour.py:214:20 - error: Expression of type \"Colour\" cannot be assigned to return type \"Self@Colour\"\n+     Type \"Colour\" cannot be assigned to type \"Self@Colour\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/embeds.py\n+   /tmp/mypy_primer/projects/discord.py/discord/embeds.py:252:16 - error: Expression of type \"Embed\" cannot be assigned to return type \"Self@Embed\"\n+     Type \"Embed\" cannot be assigned to type \"Self@Embed\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/interactions.py:582:25 - error: Cannot access member \"command\" for type \"Interaction[ClientT@Interaction]\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Interaction[ClientT@Interaction], Command[Any, ..., Any] | ContextMenu | None]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/message.py\n+   /tmp/mypy_primer/projects/discord.py/discord/message.py:1912:65 - error: Cannot access member \"raw_channel_mentions\" for type \"Message\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Message, List[int]]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/welcome_screen.py\n+   /tmp/mypy_primer/projects/discord.py/discord/welcome_screen.py:217:16 - error: Expression of type \"WelcomeScreen\" cannot be assigned to return type \"Self@WelcomeScreen\"\n+     Type \"WelcomeScreen\" cannot be assigned to type \"Self@WelcomeScreen\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py:189:16 - error: Expression of type \"Cooldown\" cannot be assigned to return type \"Self@Cooldown\"\n+     Type \"Cooldown\" cannot be assigned to type \"Self@Cooldown\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cooldowns.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cooldowns.py:251:16 - error: Expression of type \"MaxConcurrency\" cannot be assigned to return type \"Self@MaxConcurrency\"\n+     Type \"MaxConcurrency\" cannot be assigned to type \"Self@MaxConcurrency\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:618:48 - error: Argument of type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to parameter \"other\" of type \"Self@Command[CogT@Command, P@Command, T@Command]\" in function \"_ensure_assignment_on_copy\"\n+     Type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to type \"Self@Command[CogT@Command, P@Command, T@Command]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:625:52 - error: Argument of type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to parameter \"other\" of type \"Self@Command[CogT@Command, P@Command, T@Command]\" in function \"_ensure_assignment_on_copy\"\n+     Type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to type \"Self@Command[CogT@Command, P@Command, T@Command]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:377:16 - error: Expression of type \"HelpCommand\" cannot be assigned to return type \"Self@HelpCommand\"\n+     Type \"HelpCommand\" cannot be assigned to type \"Self@HelpCommand\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:138:16 - error: Expression of type \"Parameter\" cannot be assigned to return type \"Self@Parameter\"\n+     Type \"Parameter\" cannot be assigned to type \"Self@Parameter\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:355:16 - error: Expression of type \"BaseSelect[Any]\" cannot be assigned to return type \"Self@BaseSelect[V@BaseSelect]\"\n+     Type \"BaseSelect[Any]\" cannot be assigned to type \"Self@BaseSelect[V@BaseSelect]\" (reportGeneralTypeIssues)\n- 47 errors, 9 warnings, 0 informations \n+ 69 errors, 9 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/multi.pyi:156:9 - error: Method \"intersection\" overrides class \"Index\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"list[Any] | MultiIndex\", override parameter is type \"list[Any] | Self@Index[S1@Index]\" (reportIncompatibleMethodOverride)\n- 1327 errors, 0 warnings, 0 informations \n+ 1328 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Added test cases for #6261 and fixed a bug found by test. (#6332)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621106fac254a19ac290622",
    "number": 6331,
    "body": "… `Self@Class`. This should not be permitted, but it was. This addresses #6261.",
    "head_branch": "issue6261-4",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.24x faster (70.1s -> 56.4s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed bug that led to a false negative when assigning type `Class` to `Self@Class`. This should not be permitted, but it was. This addresses #6261. (#6331)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211070ac254a19ac290623",
    "number": 6330,
    "body": "…error when `self` is used on the LHS of the `in` operator within an enum class. This addresses #6329.",
    "head_branch": "issue6329",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that causes a false positive `reportUnnecessaryContains` error when `self` is used on the LHS of the `in` operator within an enum class. This addresses #6329. (#6330)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211071ac254a19ac290624",
    "number": 6328,
    "body": "… `Self@Class`. This should not be permitted, but it was. This addresses #6261.",
    "head_branch": "issue6261-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict): typechecking got 7014.11x slower (0.0s -> 12.1s)\n(Performance measurements are based on a single noisy sample)\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:197:27 - error: Argument of type \"Highlighter\" cannot be assigned to parameter \"highlighter\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Highlighter\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:625:50 - error: Argument of type \"Highlighter\" cannot be assigned to parameter \"highlighter\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Highlighter\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/alectryon/alectryon/latex.py\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:76:32 - error: Argument of type \"str\" cannot be assigned to parameter \"s\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/latex.py:194:26 - error: Argument of type \"str\" cannot be assigned to parameter \"s\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n- 15 errors, 37 warnings, 0 informations \n+ 19 errors, 37 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1021:32 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1727:13 - error: Argument of type \"Literal['Spack found new style signed binary packages, but …']\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Literal['Spack found new style signed binary packages, but …']\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1942:21 - error: Argument of type \"Literal['Spack was unable to verify package signature, plea…']\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Literal['Spack was unable to verify package signature, plea…']\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1948:17 - error: Argument of type \"Literal['To install unsigned packages, use the --no-check-s…']\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Literal['To install unsigned packages, use the --no-check-s…']\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2042:17 - error: Argument of type \"Literal['To install unsigned packages, use the --no-check-s…']\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Literal['To install unsigned packages, use the --no-check-s…']\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:100:73 - error: Argument of type \"Literal['dev_path']\" cannot be assigned to parameter \"name\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Literal['dev_path']\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:100:85 - error: Argument of type \"str\" cannot be assigned to parameter \"value\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:157:35 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:287:35 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:300:27 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:698:31 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:768:45 - error: Argument of type \"str\" cannot be assigned to parameter \"name\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:933:13 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:985:31 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1000:31 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1003:31 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1006:31 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1455:31 - error: Argument of type \"Literal['Cannot retrieve configuration without a URL']\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Literal['Cannot retrieve configuration without a URL']\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:1480:27 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:259:34 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:796:56 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"LiteralString\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:812:40 - error: Argument of type \"Literal['error parsing database:']\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Literal['error parsing database:']\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:851:17 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:910:48 - error: Argument of type \"Literal['Cannot reindex an upstream database']\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Literal['Cannot reindex an upstream database']\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:1140:43 - error: Argument of type \"Literal['Specs added to DB must be concrete.']\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Literal['Specs added to DB must be concrete.']\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:1407:56 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"LiteralString\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py:274:46 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"LiteralString\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py:418:13 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py:424:13 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py:433:13 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py:643:17 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py:773:34 - error: Argument of type \"Literal['variant']\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Literal['variant']\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py:892:43 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n+     Type \"str\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/directives.py:937:34 - error: Argument of type \"str\" cannot be assigned to parameter \"message\" of type \"Unknown\" in function \"__init__\"\n\n... (truncated 1033 lines) ...\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+ /tmp/mypy_primer/projects/steam.py/steam/channel.py\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:102:33 - error: Argument of type \"Group\" cannot be assigned to parameter \"chat_group\" of type \"ChatGroup[Any, Self@GroupChannel, Literal[Type.Clan, Type.Chat]]\" in function \"__init__\"\n+     \"Group\" is incompatible with \"ChatGroup[Any, Self@GroupChannel, Literal[Type.Clan, Type.Chat]]\"\n+       Type parameter \"ChatT@ChatGroup\" is covariant, but \"GroupChannel\" is not a subtype of \"Self@GroupChannel\"\n+         Type \"GroupChannel\" cannot be assigned to type \"Self@GroupChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:112:33 - error: Argument of type \"Clan\" cannot be assigned to parameter \"chat_group\" of type \"ChatGroup[Any, Self@ClanChannel, Literal[Type.Clan, Type.Chat]]\" in function \"__init__\"\n+     \"Clan\" is incompatible with \"ChatGroup[Any, Self@ClanChannel, Literal[Type.Clan, Type.Chat]]\"\n+       Type parameter \"ChatT@ChatGroup\" is covariant, but \"ClanChannel\" is not a subtype of \"Self@ClanChannel\"\n+         Type \"ClanChannel\" cannot be assigned to type \"Self@ClanChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:245:27 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:245:14 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:251:27 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:251:14 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:293:27 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:293:14 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:294:13 - error: Expected 5 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:295:13 - error: Expected 5 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:296:13 - error: Expected 5 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:320:58 - error: Cannot access member \"_location\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]*\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat], tuple[ChatGroupID, ChatID]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:320:45 - error: Type of \"_location\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:320:69 - error: Expected 3 positional arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:596:16 - error: Expression of type \"MemberT@ChatGroup\" cannot be assigned to return type \"MemberT@ChatGroup\"\n-     Type \"MemberT@ChatGroup\" cannot be assigned to type \"MemberT@ChatGroup\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:404:32 - error: Cannot access member \"_type_args\" for type \"Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@Chat[ChatMessageT@Chat, ClanT@Chat, GroupT@Chat]], tuple[type[ChatMessageT@Chat], type[ClanT@Chat], type[GroupT@Chat]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:404:27 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:415:32 - error: Type of \"created_at\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:645:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:645:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:591:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:591:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:610:31 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:610:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:616:32 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:690:37 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:690:32 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:698:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:698:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:871:31 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\"\n+     Failed to call method \"__get__\" for descriptor class \"classproperty[type[Self@ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]], tuple[type[MemberT@ChatGroup], type[ChatT@ChatGroup], type[ChatGroupTypeT@ChatGroup]]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:871:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:201:31 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:310:24 - error: Expression of type \"Announcement[PartialClan]\" cannot be assigned to return type \"Announcement[Self@PartialClan]\"\n+     \"Announcement[PartialClan]\" is incompatible with \"Announcement[Self@PartialClan]\"\n+       Type parameter \"ClanT@Announcement\" is covariant, but \"PartialClan\" is not a subtype of \"Self@PartialClan\"\n+         Type \"PartialClan\" cannot be assigned to type \"Self@PartialClan\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:252:24 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:259:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:261:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:267:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:269:20 - error: Expression of type \"Flags\" cannot be assigned to return type \"Self@Flags\"\n+     Type \"Flags\" cannot be assigned to type \"Self@Flags\" (reportGeneralTypeIssues)\n\n... (truncated 67 lines) ...\n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:304:24 - error: Expression of type \"FieldInfo\" cannot be assigned to return type \"Self@FieldInfo\"\n+     Type \"FieldInfo\" cannot be assigned to type \"Self@FieldInfo\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:368:20 - error: Expression of type \"FieldInfo\" cannot be assigned to return type \"Self@FieldInfo\"\n+     Type \"FieldInfo\" cannot be assigned to type \"Self@FieldInfo\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:381:24 - error: Expression of type \"FieldInfo\" cannot be assigned to return type \"Self@FieldInfo\"\n+     Type \"FieldInfo\" cannot be assigned to type \"Self@FieldInfo\" (reportGeneralTypeIssues)\n- 57 errors, 0 warnings, 0 informations \n+ 60 errors, 0 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py): typechecking got 1.30x faster (46.4s -> 35.7s)\n(Performance measurements are based on a single noisy sample)\n+ /tmp/mypy_primer/projects/discord.py/discord/abc.py\n+   /tmp/mypy_primer/projects/discord.py/discord/abc.py:975:16 - error: Expression of type \"GuildChannel\" cannot be assigned to return type \"Self@GuildChannel\"\n+     Type \"GuildChannel\" cannot be assigned to type \"Self@GuildChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/asset.py:423:16 - error: Expression of type \"Asset\" cannot be assigned to return type \"Self@Asset\"\n+     Type \"Asset\" cannot be assigned to type \"Self@Asset\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/asset.py:451:16 - error: Expression of type \"Asset\" cannot be assigned to return type \"Self@Asset\"\n+     Type \"Asset\" cannot be assigned to type \"Self@Asset\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/asset.py:486:16 - error: Expression of type \"Asset\" cannot be assigned to return type \"Self@Asset\"\n+     Type \"Asset\" cannot be assigned to type \"Self@Asset\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/automod.py\n+   /tmp/mypy_primer/projects/discord.py/discord/automod.py:412:61 - error: Cannot access member \"actions\" for type \"AutoModRule\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@AutoModRule, List[AutoModRuleAction]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/automod.py:544:16 - error: Expression of type \"AutoModRule\" cannot be assigned to return type \"Self@AutoModRule\"\n+     Type \"AutoModRule\" cannot be assigned to type \"Self@AutoModRule\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:288:14 - error: Cannot assign member \"_connection\" for type \"Client\"\n+     Expression of type \"ConnectionState[Client]\" cannot be assigned to member \"_connection\" of class \"Client\"\n+       \"ConnectionState[Client]\" is incompatible with \"ConnectionState[Self@Client]\"\n+         Type parameter \"ClientT@ConnectionState\" is covariant, but \"Client\" is not a subtype of \"Self@Client\"\n+           Type \"Client\" cannot be assigned to type \"Self@Client\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/colour.py\n+   /tmp/mypy_primer/projects/discord.py/discord/colour.py:203:20 - error: Expression of type \"Colour\" cannot be assigned to return type \"Self@Colour\"\n+     Type \"Colour\" cannot be assigned to type \"Self@Colour\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/colour.py:209:24 - error: Expression of type \"Colour\" cannot be assigned to return type \"Self@Colour\"\n+     Type \"Colour\" cannot be assigned to type \"Self@Colour\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/colour.py:210:20 - error: Expression of type \"Colour\" cannot be assigned to return type \"Self@Colour\"\n+     Type \"Colour\" cannot be assigned to type \"Self@Colour\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/colour.py:214:20 - error: Expression of type \"Colour\" cannot be assigned to return type \"Self@Colour\"\n+     Type \"Colour\" cannot be assigned to type \"Self@Colour\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/embeds.py\n+   /tmp/mypy_primer/projects/discord.py/discord/embeds.py:252:16 - error: Expression of type \"Embed\" cannot be assigned to return type \"Self@Embed\"\n+     Type \"Embed\" cannot be assigned to type \"Self@Embed\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/interactions.py:582:25 - error: Cannot access member \"command\" for type \"Interaction[ClientT@Interaction]\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Interaction[ClientT@Interaction], Command[Any, ..., Any] | ContextMenu | None]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/message.py\n+   /tmp/mypy_primer/projects/discord.py/discord/message.py:1912:65 - error: Cannot access member \"raw_channel_mentions\" for type \"Message\"\n+     Failed to call method \"__get__\" for descriptor class \"CachedSlotProperty[Self@Message, List[int]]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/welcome_screen.py\n+   /tmp/mypy_primer/projects/discord.py/discord/welcome_screen.py:217:16 - error: Expression of type \"WelcomeScreen\" cannot be assigned to return type \"Self@WelcomeScreen\"\n+     Type \"WelcomeScreen\" cannot be assigned to type \"Self@WelcomeScreen\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py:189:16 - error: Expression of type \"Cooldown\" cannot be assigned to return type \"Self@Cooldown\"\n+     Type \"Cooldown\" cannot be assigned to type \"Self@Cooldown\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cooldowns.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cooldowns.py:251:16 - error: Expression of type \"MaxConcurrency\" cannot be assigned to return type \"Self@MaxConcurrency\"\n+     Type \"MaxConcurrency\" cannot be assigned to type \"Self@MaxConcurrency\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:618:48 - error: Argument of type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to parameter \"other\" of type \"Self@Command[CogT@Command, P@Command, T@Command]\" in function \"_ensure_assignment_on_copy\"\n+     Type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to type \"Self@Command[CogT@Command, P@Command, T@Command]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:625:52 - error: Argument of type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to parameter \"other\" of type \"Self@Command[CogT@Command, P@Command, T@Command]\" in function \"_ensure_assignment_on_copy\"\n+     Type \"Command[CogT@Command, P@Command, T@Command]\" cannot be assigned to type \"Self@Command[CogT@Command, P@Command, T@Command]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/help.py:377:16 - error: Expression of type \"HelpCommand\" cannot be assigned to return type \"Self@HelpCommand\"\n+     Type \"HelpCommand\" cannot be assigned to type \"Self@HelpCommand\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/parameters.py:138:16 - error: Expression of type \"Parameter\" cannot be assigned to return type \"Self@Parameter\"\n+     Type \"Parameter\" cannot be assigned to type \"Self@Parameter\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:355:16 - error: Expression of type \"BaseSelect[Any]\" cannot be assigned to return type \"Self@BaseSelect[V@BaseSelect]\"\n+     Type \"BaseSelect[Any]\" cannot be assigned to type \"Self@BaseSelect[V@BaseSelect]\" (reportGeneralTypeIssues)\n- 47 errors, 9 warnings, 0 informations \n+ 69 errors, 9 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/dbapi/__init__.py:302:49 - error: Argument of type \"Pin\" cannot be assigned to parameter \"pin\" of type \"Unknown\" in function \"__init__\"\n+     Type \"Pin\" cannot be assigned to type \"Unknown\" (reportGeneralTypeIssues)\n\n... (truncated 81 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211072ac254a19ac290625",
    "number": 6327,
    "body": "…. This change is required as part of the fix for #6261.",
    "head_branch": "issue6261-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Changed the way properties are modeled internally to the type checker. This change is required as part of the fix for #6261. (#6327)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211073ac254a19ac290626",
    "number": 6323,
    "body": "Fix incorrect typehint according to https://github.com/python/typeshed/pull/10949",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Typeshed changes should be made in the [typeshed project](https://github.com/python/typeshed), not in pyright. Pyright simply snapshots the official typeshed stubs on a roughly a biweekly basis."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211074ac254a19ac290627",
    "number": 6322,
    "body": "…TypeVarTuple` within a nested `Callable` type (i.e. a `Callable` that takes a `Callable` as a parameter). This addresses #6316.",
    "head_branch": "issue6316",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect type evaluation when using a `TypeVarTuple` within a nested `Callable` type (i.e. a `Callable` that takes a `Callable` as a parameter). This addresses #6316. (#6322)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211075ac254a19ac290628",
    "number": 6312,
    "body": "…*args` to a callable type that doesn't contain `*args`. This addresses #6308.",
    "head_branch": "issue6308",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to a false positive when assigning a lambda with `*args` to a callable type that doesn't contain `*args`. This addresses #6308. (#6312)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211076ac254a19ac290629",
    "number": 6310,
    "body": null,
    "head_branch": "issue6263",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Further improved error message for member accesses. (#6310)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211077ac254a19ac29062a",
    "number": 6307,
    "body": "![image](https://github.com/microsoft/pyright/assets/1946977/686672ab-35a9-4760-99da-82701bd76ac2)\r\n\r\n\r\nfixes https://github.com/microsoft/pylance-release/issues/4615",
    "head_branch": "fix-korean-docstring",
    "is_a_fork": true,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py): typechecking got 1.38x faster (37.7s -> 27.2s)\n(Performance measurements are based on a single noisy sample)\n\n```",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "@bschnurr, looks like the tests are failing for this PR. If you'd like to get this into this week's pyright release, please fix the tests and merge the PR.",
      "hi @erictraut\r\n\r\nmaybe the regex can be\r\n\r\n```\r\n!line?.endsWith(':') && !line?.endsWith('::') && !!line.match(/^\\s*.*?\\S+(\\s*\\(.*?\\))*\\s*:\\s*/g);\r\n```\r\n\r\ncause it seems not that important to match the content to right of the `:`.",
      "Do we have any updates here?\r\n\r\nMaybe I can open a new PR if this PR doesn't progress anymore.",
      "@bschnurr, any update on this PR?",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "done",
      "thank you guys very much!"
    ],
    "commit_messages": [
      "Add support non-English words in docstring arguments (#6307)\n\n* Add support non english works in docstring arguments\r\n\r\n* Relax argument regex to handle non english words but also be less strict with invalid types  in the google doc style with invalid types.\r\n\r\n---------\r\n\r\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211078ac254a19ac29062b",
    "number": 6306,
    "body": "…ation behaviors. This addresses #6302.",
    "head_branch": "issue6302",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/mirror.py:267:16 - error: Expression of type \"Unknown | str | None\" cannot be assigned to return type \"List[Unknown] | None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/mirror.py:267:16 - error: Expression of type \"str | Unknown | None\" cannot be assigned to return type \"List[Unknown] | None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/verify.py:81:17 - error: Operator \"+=\" not supported for types \"Unknown | list[Unknown]\" and \"list[Spec] | list[Unknown] | Any | None\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/verify.py:81:17 - error: Operator \"+=\" not supported for types \"Unknown | list[Unknown]\" and \"list[Unknown] | list[Spec] | Any | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/compression.py:303:37 - error: Argument of type \"str | Unknown | LiteralString | None\" cannot be assigned to parameter \"path_or_url\" of type \"str\" in function \"allowed_archive\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/compression.py:303:37 - error: Argument of type \"LiteralString | str | Unknown | None\" cannot be assigned to parameter \"path_or_url\" of type \"str\" in function \"allowed_archive\"\n-     Type \"str | Unknown | LiteralString | None\" cannot be assigned to type \"str\"\n+     Type \"LiteralString | str | Unknown | None\" cannot be assigned to type \"str\"\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-     Type of \"upper\" is \"Unknown | Any\" (reportUnknownMemberType)\n+     Type of \"upper\" is \"Any | Unknown\" (reportUnknownMemberType)\n-     Type of \"strip\" is \"Unknown | ((__chars: str | None = None, /) -> str) | Any\" (reportUnknownMemberType)\n+     Type of \"strip\" is \"((__chars: str | None = None, /) -> str) | Any | Unknown\" (reportUnknownMemberType)\n-     Type of \"message\" is \"Unknown | str | Any\" (reportUnknownMemberType)\n+     Type of \"message\" is \"str | Any | Unknown\" (reportUnknownMemberType)\n-     Type of \"message\" is \"Unknown | str | Any\" (reportUnknownMemberType)\n+     Type of \"message\" is \"str | Any | Unknown\" (reportUnknownMemberType)\n-     Type of \"message\" is \"Unknown | str | Any\" (reportUnknownMemberType)\n+     Type of \"message\" is \"str | Any | Unknown\" (reportUnknownMemberType)\n-     Type of \"message\" is \"Unknown | str | Any\" (reportUnknownMemberType)\n+     Type of \"message\" is \"str | Any | Unknown\" (reportUnknownMemberType)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:55:35 - error: Argument of type \"Unknown | str | bytes | list[Unknown]\" cannot be assigned to parameter \"s\" of type \"str | bytes | bytearray\" in function \"loads\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:55:35 - error: Argument of type \"str | Unknown | bytes | list[Unknown]\" cannot be assigned to parameter \"s\" of type \"str | bytes | bytearray\" in function \"loads\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:57:40 - error: Argument of type \"Unknown | str | bytes | list[Unknown]\" cannot be assigned to parameter \"xml_input\" of type \"str | ReadableBuffer | SupportsRead[bytes] | GeneratorType[ReadableBuffer, Any, Any]\" in function \"parse\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:57:40 - error: Argument of type \"str | Unknown | bytes | list[Unknown]\" cannot be assigned to parameter \"xml_input\" of type \"str | ReadableBuffer | SupportsRead[bytes] | GeneratorType[ReadableBuffer, Any, Any]\" in function \"parse\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:515:12 - error: Operator \"in\" not supported for types \"Literal['no such process']\" and \"str | bytes\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:515:12 - error: Operator \"in\" not supported for types \"Literal['no such process']\" and \"bytes | str\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1342:28 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1342:28 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1370:23 - error: Operator \"*\" not supported for types \"float\" and \"int | Unknown | str | object\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1370:23 - error: Operator \"*\" not supported for types \"float\" and \"int | str | Unknown | object\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1374:23 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1374:23 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1402:28 - error: Operator \"/\" not supported for types \"int | Unknown | str | object\" and \"int | Unknown | str | object\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1402:28 - error: Operator \"/\" not supported for types \"int | str | Unknown | object\" and \"int | str | Unknown | object\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:707:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:707:24 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:708:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:708:24 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:709:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:709:24 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1214:29 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1214:29 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1236:30 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1236:30 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1241:34 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1241:34 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1255:33 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1255:33 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToFloat\" in function \"__new__\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1314:27 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1314:27 - error: Argument of type \"str | Unknown | object\" cannot be assigned to parameter \"__x\" of type \"ConvertibleToInt\" in function \"__new__\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:621:16 - error: Operator \"in\" not supported for types \"Literal['permission denied']\" and \"str | bytes\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:621:16 - error: Operator \"in\" not supported for types \"Literal['permission denied']\" and \"bytes | str\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:623:16 - error: Operator \"in\" not supported for types \"Literal['no such process']\" and \"str | bytes\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:623:16 - error: Operator \"in\" not supported for types \"Literal['no such process']\" and \"bytes | str\"\n\n```"
    ],
    "commit_messages": [
      "Fixed a few places where union order resulted in different type evalu… (#6306)\n\n* Fixed a few places where union order resulted in different type evaluation behaviors. This addresses #6302.\r\n\r\n* Fixed style issue."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211079ac254a19ac29062c",
    "number": 6305,
    "body": "…range of types returned by the `__new__` method. Previously, if the `__new__` return type was anything other than a class instance, the heuristics assumed it wasn't intended and assumed that `__new__` returned an instance of its class, as is usually the case. This addresses #6303.",
    "head_branch": "issue6303-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Updated heuristics for constructor evaluation to accommodate a wider range of types returned by the `__new__` method. Previously, if the `__new__` return type was anything other than a class instance, the heuristics assumed it wasn't intended and assumed that `__new__` returned an instance of its class, as is usually the case. This addresses #6303. (#6305)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211079ac254a19ac29062d",
    "number": 6304,
    "body": "…range of types returned by the `__new__` method. Previously, if the `__new__` return type was anything other than a class instance, the heuristics assumed it wasn't intended and assumed that `__new__` returned an instance of its class, as is usually the case. This addresses #6303.",
    "head_branch": "issue6303",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\noperator (https://github.com/canonical/operator)\n- /tmp/mypy_primer/projects/operator/test/test_main.py\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:369:42 - error: Cannot access member \"_data\" for type \"StoredState\"\n-     Member \"_data\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"_data\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"handle\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Argument type is unknown\n-     Argument corresponds to parameter \"handle_path\" in function \"save_snapshot\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/operator/test/test_main.py:374:16 - error: Expression of type \"StoredState | StoredStateData\" cannot be assigned to return type \"BoundStoredState | StoredStateData\" (reportGeneralTypeIssues)\n- 61 errors, 0 warnings, 0 informations \n+ 55 errors, 0 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/__init__.py:141:34 - warning: Unnecessary \"# pyright: ignore\" comment\n- 726 errors, 31 warnings, 0 informations \n+ 726 errors, 32 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621107aac254a19ac29062e",
    "number": 6297,
    "body": "…validation fails for the `__get__`, `__set__` or `__delete__` methods. This addresses #6263.",
    "head_branch": "issue6263",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved error message for descriptor accesses where binding or type validation fails for the `__get__`, `__set__` or `__delete__` methods. This addresses #6263. (#6297)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621107bac254a19ac29062f",
    "number": 6296,
    "body": "…ber access evaluation code paths.",
    "head_branch": "memberAccessSimplification2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/poetry_build.py:46:23 - error: Type of \"split\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/poetry_build.py:47:9 - error: Type of \"split\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:37:19 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:38:66 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:38:42 - error: Type of \"upper\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:354:32 - error: Type of \"chat_name\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:354:32 - error: Type of \"partition\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:358:37 - error: Type of \"time_joined\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:360:25 - error: Type of \"sort_order\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/errors.py:78:24 - error: Type of \"replace\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/errors.py:78:24 - error: Type of \"strip\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:1007:28 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:1007:28 - error: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(k: Literal['name']) -> (str | None), (k: Literal['name'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['config']) -> Unknown, (k: Literal['config'], default: Any) -> Unknown, (k: Literal['manifests']) -> (Unknown | None), (k: Literal['manifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['encryptedmanifests']) -> (Unknown | None), (k: Literal['encryptedmanifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['branches']) -> (Unknown | None), (k: Literal['branches'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['maxsize']) -> (str | None), (k: Literal['maxsize'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['depotfromapp']) -> (str | None), (k: Literal['depotfromapp'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['sharedinstall']) -> (bool | None), (k: Literal['sharedinstall'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: Literal['system_defined']) -> (bool | None), (k: Literal['system_defined'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: str) -> (Any | None), (k: str, default: Any | __TDefault@Depot) -> (Any | __TDefault@Depot)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:1023:44 - error: Type of \"items\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3036:9 - error: Type of \"parsers\" is partially unknown\n+     Type of \"parsers\" is \"dict[EMsg, ParserCallback[Unknown, ProtobufMessage | Message]]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3038:9 - error: Type of \"parsers\" is partially unknown\n+     Type of \"parsers\" is \"dict[EMsg, ParserCallback[Unknown, ProtobufMessage | Message]]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/utils.py:702:46 - error: Type of \"islice\" is partially unknown\n+     Type of \"islice\" is \"type[islice[Unknown]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__class__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:247:42 - error: Type of \"Greedy\" is partially unknown\n+     Type of \"Greedy\" is \"type[Greedy[Unknown]]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:415:53 - error: Type of \"Greedy\" is partially unknown\n+     Type of \"Greedy\" is \"type[Greedy[Unknown]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__name__\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:78:17 - error: Type of \"localisation\" is partially unknown\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:78:17 - error: Type of \"localisation\" is unknown (reportUnknownMemberType)\n-     Type of \"localisation\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:79:47 - error: Type of \"localisation\" is partially unknown\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:79:47 - error: Type of \"localisation\" is unknown (reportUnknownMemberType)\n-     Type of \"localisation\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:82:31 - error: Type of \"localisation\" is partially unknown\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:82:31 - error: Type of \"localisation\" is unknown (reportUnknownMemberType)\n-     Type of \"localisation\" is \"Unknown | None\" (reportUnknownMemberType)\n- 7935 errors, 23 warnings, 0 informations \n+ 7924 errors, 23 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:2522:9 - error: Type of \"connect\" is unknown (reportUnknownMemberType)\n- 62 errors, 0 warnings, 0 informations \n+ 61 errors, 0 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/examples/injection.py:33:48 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/examples/injection.py:33:48 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/examples/message_commands.py:25:25 - warning: Type of \"shards\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/examples/message_commands.py:25:25 - warning: Type of \"shards\" is unknown (reportUnknownMemberType)\n-     Type of \"shards\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/examples/run_gateway.py:25:70 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/examples/run_gateway.py:25:70 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-     Type of \"snowflake_converter\" is \"((str) -> Unknown) | None\" (reportUnknownMemberType)\n+     Type of \"snowflake_converter\" is \"(str) -> Unknown\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:465:82 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:465:82 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:470:25 - warning: Type of \"member\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:470:25 - warning: Type of \"member\" is unknown (reportUnknownMemberType)\n-     Type of \"member\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:473:21 - warning: Type of \"member\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:473:21 - warning: Type of \"member\" is unknown (reportUnknownMemberType)\n-     Type of \"member\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:476:69 - warning: Type of \"member\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:476:69 - warning: Type of \"member\" is unknown (reportUnknownMemberType)\n-     Type of \"member\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:554:39 - warning: Type of \"cache\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:554:39 - warning: Type of \"cache\" is unknown (reportUnknownMemberType)\n-     Type of \"cache\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:554:60 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:554:60 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:558:56 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:558:56 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:559:60 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:559:60 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1484:34 - warning: Type of \"name\" is unknown (reportUnknownMemberType)\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, /, default: Unknown | _T@get) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1498:30 - warning: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, __default: Unknown, /) -> Unknown, (__key: str, __default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1498:30 - warning: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, /, default: Unknown | _T@get) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1507:45 - warning: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, __default: Unknown, /) -> Unknown, (__key: str, __default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1507:45 - warning: Type of \"get\" is partially unknown\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1502:30 - warning: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, /, default: Unknown | _T@get) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1502:30 - warning: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, __default: Unknown, /) -> Unknown, (__key: str, __default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1498:43 - warning: Type of \"name\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1502:46 - warning: Type of \"name\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1507:61 - warning: Type of \"name\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2106:17 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2106:17 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2123:13 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2123:13 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2343:34 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2343:34 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2345:30 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2345:30 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2349:38 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2349:38 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2352:38 - warning: Type of \"_server\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2352:38 - warning: Type of \"_server\" is unknown (reportUnknownMemberType)\n-     Type of \"_server\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2354:17 - warning: Type of \"_server\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2354:17 - warning: Type of \"_server\" is unknown (reportUnknownMemberType)\n-     Type of \"_server\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2387:24 - warning: Type of \"_cache\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2387:24 - warning: Type of \"_cache\" is unknown (reportUnknownMemberType)\n-     Type of \"_cache\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2390:30 - warning: Type of \"get\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2405:17 - warning: Type of \"_server\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2405:17 - warning: Type of \"_server\" is unknown (reportUnknownMemberType)\n-     Type of \"_server\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2408:17 - warning: Type of \"_server\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2408:17 - warning: Type of \"_server\" is unknown (reportUnknownMemberType)\n-     Type of \"_server\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2411:17 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2411:17 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2415:17 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2415:17 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2418:17 - warning: Type of \"_events\" is partially unknown\n\n... (truncated 1710 lines) ...\n\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:200:13 - error: Type of \"__func__\" is partially unknown\n-     Type of \"__func__\" is \"(Unknown, ...) -> Unknown\" (reportUnknownMemberType)\n- 727 errors, 31 warnings, 0 informations \n+ 726 errors, 31 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/core.py:230:40 - error: Argument of type \"contextvars.Token[Unknown] | ddtrace.vendor.contextvars.Token\" cannot be assigned to parameter \"__token\" of type \"Token[Unknown]\" in function \"reset\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/core.py:230:40 - error: Argument of type \"contextvars.Token[ExecutionContext] | ddtrace.vendor.contextvars.Token\" cannot be assigned to parameter \"__token\" of type \"Token[ExecutionContext]\" in function \"reset\"\n-     Type \"contextvars.Token[Unknown] | ddtrace.vendor.contextvars.Token\" cannot be assigned to type \"Token[Unknown]\"\n+     Type \"contextvars.Token[ExecutionContext] | ddtrace.vendor.contextvars.Token\" cannot be assigned to type \"Token[ExecutionContext]\"\n-       \"Token\" is incompatible with \"Token[Unknown]\" (reportGeneralTypeIssues)\n+       \"Token\" is incompatible with \"Token[ExecutionContext]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/test_context_events_api.py:152:92 - error: \"identifier\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/test_context_events_api.py:156:103 - error: \"identifier\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/test_forksafe.py:327:17 - error: Cannot access member \"stop\" for type \"Unbound\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/test_forksafe.py:327:17 - error: Cannot access member \"stop\" for type \"Unbound\" (reportGeneralTypeIssues)\n-     Type \"Unbound\" is unsupported (reportGeneralTypeIssues)\n- 9734 errors, 466 warnings, 0 informations \n+ 9736 errors, 466 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n-   /tmp/mypy_primer/projects/Expression/tests/test_block.py:423:12 - error: Type of \"one\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_block.py:423:12 - error: Type of \"one\" is partially unknown\n+     Type of \"one\" is \"Block[Unknown]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Expression/tests/test_result.py:376:12 - error: Type of \"one\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/tests/test_result.py:376:12 - error: Type of \"one\" is partially unknown\n+     Type of \"one\" is \"BaseResult[Unknown, Unknown]\" (reportUnknownMemberType)\n\n```"
    ],
    "commit_messages": [
      "Completed another round of simplification and improvement for the member access evaluation code paths. (#6296)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621107cac254a19ac290630",
    "number": 6295,
    "body": "…ber access evaluation code paths.",
    "head_branch": "memberAccessSimplification",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2249:22 - error: Cannot access member \"dag_hash\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2246:22 - error: Cannot access member \"name\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2247:22 - error: Cannot access member \"version\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2248:22 - error: Cannot access member \"compiler\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2250:22 - error: Cannot access member \"architecture\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2254:89 - error: Cannot access member \"name\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:858:32 - error: Cannot assign member \"srcdir\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:907:32 - error: Cannot assign member \"srcdir\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:427:68 - error: Cannot access member \"symbolic_atoms\" for type \"Never\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:427:55 - error: \"Never\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:454:32 - error: Cannot access member \"solve\" for type \"Never\" (reportGeneralTypeIssues)\n- 3850 errors, 48 warnings, 0 informations \n+ 3859 errors, 48 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/poetry_build.py:46:23 - error: Type of \"split\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/poetry_build.py:47:9 - error: Type of \"split\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:37:19 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:38:66 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:38:42 - error: Type of \"upper\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:354:32 - error: Type of \"chat_name\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:354:32 - error: Type of \"partition\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:358:37 - error: Type of \"time_joined\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:360:25 - error: Type of \"sort_order\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/errors.py:78:24 - error: Type of \"replace\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/errors.py:78:24 - error: Type of \"strip\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:1007:28 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:1007:28 - error: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(k: Literal['name']) -> (str | None), (k: Literal['name'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['config']) -> Unknown, (k: Literal['config'], default: Any) -> Unknown, (k: Literal['manifests']) -> (Unknown | None), (k: Literal['manifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['encryptedmanifests']) -> (Unknown | None), (k: Literal['encryptedmanifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['branches']) -> (Unknown | None), (k: Literal['branches'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['maxsize']) -> (str | None), (k: Literal['maxsize'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['depotfromapp']) -> (str | None), (k: Literal['depotfromapp'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['sharedinstall']) -> (bool | None), (k: Literal['sharedinstall'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: Literal['system_defined']) -> (bool | None), (k: Literal['system_defined'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: str) -> (Any | None), (k: str, default: Any | __TDefault@Depot) -> (Any | __TDefault@Depot)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:1023:44 - error: Type of \"items\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3036:9 - error: Type of \"parsers\" is partially unknown\n+     Type of \"parsers\" is \"dict[EMsg, ParserCallback[Unknown, ProtobufMessage | Message]]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:3038:9 - error: Type of \"parsers\" is partially unknown\n+     Type of \"parsers\" is \"dict[EMsg, ParserCallback[Unknown, ProtobufMessage | Message]]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/utils.py:702:46 - error: Type of \"islice\" is partially unknown\n+     Type of \"islice\" is \"type[islice[Unknown]]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:247:42 - error: Type of \"Greedy\" is partially unknown\n+     Type of \"Greedy\" is \"type[Greedy[Unknown]]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:251:22 - error: Cannot access member \"__func__\" for type \"Never\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__class__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:251:13 - error: Type of \"__func__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:415:53 - error: Type of \"Greedy\" is partially unknown\n+     Type of \"Greedy\" is \"type[Greedy[Unknown]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__name__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:192:66 - error: Cannot access member \"id\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:193:47 - error: Cannot access member \"id\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:194:59 - error: Cannot access member \"id\" for type \"Never\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:78:17 - error: Type of \"localisation\" is partially unknown\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:78:17 - error: Type of \"localisation\" is unknown (reportUnknownMemberType)\n-     Type of \"localisation\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:79:47 - error: Type of \"localisation\" is partially unknown\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:79:47 - error: Type of \"localisation\" is unknown (reportUnknownMemberType)\n-     Type of \"localisation\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:82:31 - error: Type of \"localisation\" is partially unknown\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:82:31 - error: Type of \"localisation\" is unknown (reportUnknownMemberType)\n-     Type of \"localisation\" is \"Unknown | None\" (reportUnknownMemberType)\n- 7935 errors, 23 warnings, 0 informations \n+ 7929 errors, 23 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n-   /tmp/mypy_primer/projects/operator/ops/pebble.py:2522:9 - error: Type of \"connect\" is unknown (reportUnknownMemberType)\n- 62 errors, 0 warnings, 0 informations \n+ 61 errors, 0 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/color.py:89:32 - error: Cannot access member \"_rgba\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/color.py:90:27 - error: Cannot access member \"_original\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:356:41 - error: Cannot access member \"type\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1007:97 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1544:97 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n- 57 errors, 0 warnings, 0 informations \n+ 62 errors, 0 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:64:26 - error: Cannot access member \"settings_dict\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:62:9 - error: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"AutoSplit | int | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:145:9 - error: Type of \"comparison_method\" is partially unknown\n+     Type of \"comparison_method\" is \"AutoSplit | int | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:148:13 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__key\" in function \"get\"\n+     Argument type is \"AutoSplit | int | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:57:26 - error: Cannot access member \"settings_dict\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:55:9 - error: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"AutoSplit | int | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:58:16 - error: Return type, \"AutoSplit | int | Unknown | float\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:53:9 - error: Return type, \"AutoSplit | int | Unknown | float\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:65:16 - error: Return type, \"AutoSplit | int | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:60:9 - error: Return type, \"AutoSplit | int | Unknown\", is partially unknown (reportUnknownParameterType)\n- 508 errors, 30 warnings, 7 informations \n+ 518 errors, 30 warnings, 7 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/examples/injection.py:33:48 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/examples/injection.py:33:48 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/examples/message_commands.py:25:25 - warning: Type of \"shards\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/examples/message_commands.py:25:25 - warning: Type of \"shards\" is unknown (reportUnknownMemberType)\n-     Type of \"shards\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/examples/run_gateway.py:25:70 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/examples/run_gateway.py:25:70 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-     Type of \"snowflake_converter\" is \"((str) -> Unknown) | None\" (reportUnknownMemberType)\n+     Type of \"snowflake_converter\" is \"(str) -> Unknown\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:465:82 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:465:82 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:470:25 - warning: Type of \"member\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:470:25 - warning: Type of \"member\" is unknown (reportUnknownMemberType)\n-     Type of \"member\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:473:21 - warning: Type of \"member\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:473:21 - warning: Type of \"member\" is unknown (reportUnknownMemberType)\n-     Type of \"member\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:476:69 - warning: Type of \"member\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:476:69 - warning: Type of \"member\" is unknown (reportUnknownMemberType)\n-     Type of \"member\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:554:39 - warning: Type of \"cache\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:554:39 - warning: Type of \"cache\" is unknown (reportUnknownMemberType)\n-     Type of \"cache\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:554:60 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:554:60 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:558:56 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:558:56 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:559:60 - warning: Type of \"guild_id\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:559:60 - warning: Type of \"guild_id\" is unknown (reportUnknownMemberType)\n-     Type of \"guild_id\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1484:34 - warning: Type of \"name\" is unknown (reportUnknownMemberType)\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, /, default: Unknown | _T@get) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1498:30 - warning: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, __default: Unknown, /) -> Unknown, (__key: str, __default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1498:30 - warning: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, /, default: Unknown | _T@get) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1507:45 - warning: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, __default: Unknown, /) -> Unknown, (__key: str, __default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1507:45 - warning: Type of \"get\" is partially unknown\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1502:30 - warning: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, /, default: Unknown | _T@get) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1502:30 - warning: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Overload[(__key: str, /) -> (Unknown | None), (__key: str, __default: Unknown, /) -> Unknown, (__key: str, __default: _T@get, /) -> (Unknown | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1498:43 - warning: Type of \"name\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1502:46 - warning: Type of \"name\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:1507:61 - warning: Type of \"name\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2106:17 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2106:17 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2123:13 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2123:13 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2343:34 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2343:34 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2345:30 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2345:30 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2349:38 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2349:38 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2352:38 - warning: Type of \"_server\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2352:38 - warning: Type of \"_server\" is unknown (reportUnknownMemberType)\n-     Type of \"_server\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2354:17 - warning: Type of \"_server\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2354:17 - warning: Type of \"_server\" is unknown (reportUnknownMemberType)\n-     Type of \"_server\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2387:24 - warning: Type of \"_cache\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2387:24 - warning: Type of \"_cache\" is unknown (reportUnknownMemberType)\n-     Type of \"_cache\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2390:30 - warning: Type of \"get\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2405:17 - warning: Type of \"_server\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2405:17 - warning: Type of \"_server\" is unknown (reportUnknownMemberType)\n-     Type of \"_server\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2408:17 - warning: Type of \"_server\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2408:17 - warning: Type of \"_server\" is unknown (reportUnknownMemberType)\n-     Type of \"_server\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2411:17 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2411:17 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2415:17 - warning: Type of \"_events\" is partially unknown\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2415:17 - warning: Type of \"_events\" is unknown (reportUnknownMemberType)\n-     Type of \"_events\" is \"Unknown | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2418:17 - warning: Type of \"_events\" is partially unknown\n\n... (truncated 1718 lines) ...\n\npyinstrument (https://github.com/joerick/pyinstrument)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/magic/magic.py:101:30 - error: Cannot access member \"stop\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/magic/magic.py:100:50 - error: Cannot access member \"is_running\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyinstrument/test/test_cmdline_main.py:52:35 - error: Cannot access member \"time\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyinstrument/test/test_cmdline_main.py:76:35 - error: Cannot access member \"processor_options\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyinstrument/test/test_cmdline_main.py:100:35 - error: Cannot access member \"processor_options\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyinstrument/test/test_profiler.py:333:34 - error: Cannot access member \"duration\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyinstrument/test/test_profiler.py:346:34 - error: Cannot access member \"duration\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyinstrument/test/test_threading.py:44:29 - error: Cannot access member \"args\" for type \"Never\" (reportGeneralTypeIssues)\n- 31 errors, 5 warnings, 0 informations \n+ 39 errors, 5 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/channel.py\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:656:74 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:2096:91 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:612:75 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:925:83 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:2939:78 - error: Cannot access member \"__name__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:2963:78 - error: Cannot access member \"__name__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:2994:70 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/colour.py\n+   /tmp/mypy_primer/projects/discord.py/discord/colour.py:122:71 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/components.py\n+   /tmp/mypy_primer/projects/discord.py/discord/components.py:400:89 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/components.py:555:80 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/embeds.py\n+   /tmp/mypy_primer/projects/discord.py/discord/embeds.py:323:89 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/embeds.py:340:82 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/guild.py\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:1231:79 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:1748:101 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:1764:94 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:2058:100 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:2068:106 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:2079:104 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:2156:85 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:2573:73 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:2672:73 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:276:51 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/member.py\n+   /tmp/mypy_primer/projects/discord.py/discord/member.py:1010:98 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/message.py\n+   /tmp/mypy_primer/projects/discord.py/discord/message.py:128:81 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/permissions.py\n+   /tmp/mypy_primer/projects/discord.py/discord/permissions.py:140:77 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/permissions.py:156:84 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/permissions.py:163:84 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/permissions.py:860:74 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/player.py\n+   /tmp/mypy_primer/projects/discord.py/discord/player.py:573:92 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/player.py:662:66 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/voice_client.py\n+   /tmp/mypy_primer/projects/discord.py/discord/voice_client.py:480:73 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/voice_client.py:530:63 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:1821:70 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/tree.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/tree.py:347:82 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/tree.py:1005:90 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py:193:82 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py:1317:102 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py:1325:64 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cog.py:515:76 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cog.py:520:33 - error: Cannot access member \"__func__\" for type \"Never\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ui/button.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/button.py:109:75 - error: Cannot access member \"__class__\" for type \"Never\" (reportGeneralTypeIssues)\n\n... (truncated 62 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621107dac254a19ac290631",
    "number": 6294,
    "body": null,
    "head_branch": "removeClassMemberName2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Additional simplifications for member accesses. (#6294)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621107eac254a19ac290632",
    "number": 6293,
    "body": null,
    "head_branch": "removeClassMemberName",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621107fac254a19ac290633",
    "number": 6291,
    "body": "…hod accesses for magic methods. The previous code had redundant (and partially incomplete) methods for evaluating calls to magic methods. This change consolidates the code and eliminates various holes.",
    "head_branch": "memberAccessSimplification3",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Another round of simplifying member accesses — and in particular, method accesses for magic methods. The previous code had redundant (and partially incomplete) methods for evaluating calls to magic methods. This change consolidates the code and eliminates various holes. (#6291)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211080ac254a19ac290634",
    "number": 6290,
    "body": "…hod accesses for magic methods. The previous code had redundant (and partially incomplete) methods for evaluating calls to magic methods. This change consolidates the code and eliminates various holes.",
    "head_branch": "memberAccessSimplification2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:133:18 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n- 7935 errors, 23 warnings, 0 informations \n+ 7936 errors, 23 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:59:23 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n- 1366 errors, 0 warnings, 0 informations \n+ 1367 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211081ac254a19ac290635",
    "number": 6288,
    "body": "…es many simplifications and bug fixes.",
    "head_branch": "memberAccessOverhaul",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1319:37 - error: Cannot access member \"__qualname__\" for type \"str\"\n-     Member \"__qualname__\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1136:36 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1141:22 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/error.py:83:50 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/multimethod.py\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/multimethod.py:138:47 - error: Cannot access member \"__name__\" for type \"SpecMultiMethod\"\n-     Member \"__name__\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/multimethod.py:99:25 - error: Cannot access member \"__name__\" for type \"SpecMultiMethod\"\n-     Member \"__name__\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/multimethod.py:150:18 - error: Cannot access member \"__name__\" for type \"SpecMultiMethod\"\n-     Member \"__name__\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/common.py:886:46 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/common.py:952:39 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/conftest.py:1063:33 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 3837 errors, 48 warnings, 0 informations \n+ 3827 errors, 48 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+ /tmp/mypy_primer/projects/steam.py/steam/enums.py\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:121:68 - error: Type of \"__class__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:121:32 - error: Type of \"__class__\" is unknown (reportUnknownMemberType)\n+ /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__class__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__class__\" is partially unknown\n+     Type of \"__class__\" is \"type[BasicConverter[Any]] | type[function] | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__name__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:561:24 - error: Type of \"__name__\" is partially unknown\n+     Type of \"__name__\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:559:46 - warning: Unnecessary \"# type: ignore\" comment\n- 7929 errors, 22 warnings, 0 informations \n+ 7935 errors, 23 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/utils.py:1087:39 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-     Member \"SerializeToString\" is unknown\n-     Member \"FromString\" is unknown\n-     Member \"SerializeToString\" is unknown\n-     Member \"FromString\" is unknown\n-     Member \"SerializeToString\" is unknown\n-     Member \"FromString\" is unknown\n-     Member \"SerializeToString\" is unknown\n-     Member \"FromString\" is unknown\n-     Member \"SerializeToString\" is unknown\n-     Member \"FromString\" is unknown\n-     Member \"FromString\" is unknown\n-     Member \"SerializeToString\" is unknown\n-     Member \"FromString\" is unknown\n-     Member \"SerializeToString\" is unknown\n-     Member \"FromString\" is unknown\n-     Member \"SerializeToString\" is unknown\n-     Member \"FromString\" is unknown\n-     Member \"SerializeToString\" is unknown\n- /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/probe/test_status.py\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/probe/test_status.py:77:46 - error: \"__name__\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 9736 errors, 466 warnings, 0 informations \n+ 9734 errors, 466 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-     Member \"from_tuples\" is unknown\n-     Member \"from_arrays\" is unknown\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:1048:77 - warning: Unnecessary \"# type: ignore\" comment\n- 47 errors, 8 warnings, 0 informations \n+ 47 errors, 9 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "First step of a major rewrite of the member access logic. This includes many simplifications and bug fixes. (#6288)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211082ac254a19ac290636",
    "number": 6287,
    "body": "rollup of the following changes:\r\n    1. pylance loc update 20231031.1 https://github.com/microsoft/pyrx/pull/4266\r\n    2. Fix URI mapping for wsl https://github.com/microsoft/pyrx/pull/4255\r\n    3. Fix crash when calling `isSymbolicLink` on `stat` of zip/egg https://github.com/microsoft/pyrx/pull/4254\r\n    4. Fix potential issue with query parameters in a URI https://github.com/microsoft/pyrx/pull/4245\r\n    5. don't always look for pyTyped since it is expensive\r\n    6. fixed build failures\r\n  \r\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\r\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.334",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.334 (#6287)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\nCo-authored-by: Stella Huang <stellahuang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211083ac254a19ac290637",
    "number": 6286,
    "body": "…nsistency between a metaclass instance and `type[T]`. This addresses #6285.",
    "head_branch": "issue6285",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:125:27 - error: Type of parameter \"cls\" must be a supertype of its class \"MetaCheck\" (reportGeneralTypeIssues)\n-           \"type*\" is incompatible with \"ArraySchema\" (reportGeneralTypeIssues)\n+           \"type[type]\" is incompatible with \"type[ArraySchema]\" (reportGeneralTypeIssues)\n-           \"type*\" is incompatible with \"ColumnSchema\" (reportGeneralTypeIssues)\n+           \"type[type]\" is incompatible with \"type[ColumnSchema]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/typing/pandas.py:273:53 - error: Cannot access member \"index\" for type \"type*\"\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/pandas.py:273:53 - error: Cannot access member \"index\" for type \"type[object]*\"\n-   /tmp/mypy_primer/projects/pandera/pandera/typing/pandas.py:273:31 - error: Cannot access member \"index\" for type \"type*\"\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/pandas.py:273:31 - error: Cannot access member \"index\" for type \"type[object]*\"\n-   /tmp/mypy_primer/projects/pandera/pandera/typing/pandas.py:279:40 - error: Cannot access member \"columns\" for type \"type*\"\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/pandas.py:279:40 - error: Cannot access member \"columns\" for type \"type[object]*\"\n- 1226 errors, 10 warnings, 0 informations \n+ 1225 errors, 10 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/runtime/container.py:84:16 - error: Expected no arguments to \"CGroupInfo\" constructor (reportGeneralTypeIssues)\n- 9737 errors, 466 warnings, 0 informations \n+ 9736 errors, 466 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:126:9 - error: Overload 2 for \"get\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:144:9 - error: Overload 5 for \"get\" will never be used because its parameters overlap overload 4 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:197:9 - error: Overload 2 for \"__getitem__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/__init__.py:197:9 - error: Overload 2 for \"__getitem__\" overlaps overload 3 and returns an incompatible type (reportOverlappingOverload)\n- 729 errors, 31 warnings, 0 informations \n+ 727 errors, 31 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive when validating type consistency between a metaclass instance and `type[T]`. This addresses #6285. (#6286)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211084ac254a19ac290638",
    "number": 6281,
    "body": "`\\w+` only matches one or more word characters (same as [a-zA-Z0-9_]+), when the docstring is chinese (or other) it will not be matched.\r\n\r\nhttps://github.com/microsoft/pylance-release/issues/4840",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Closing. new PR here with a test. https://github.com/microsoft/pyright/pull/6307\r\nthank you\r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211085ac254a19ac290639",
    "number": 6278,
    "body": "…h zero type args. This is in preparation for a larger change relating to member accesses.",
    "head_branch": "zeroTypeArgs",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a couple of small issues with code that specializes a class with zero type args. This is in preparation for a larger change relating to member accesses. (#6278)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211086ac254a19ac29063a",
    "number": 6269,
    "body": "…f the type is an instance of `object` or a `TypeVar` with no bound (which is treated like an `object`), the logic should not assume that it will always evaluate to truthy. This addresses #6266.",
    "head_branch": "issue6266-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_utils.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_utils.py:312:54 - error: Cannot access member \"copy\" for type \"object*\"\n+     Member \"copy\" is unknown (reportGeneralTypeIssues)\n- 56 errors, 0 warnings, 0 informations \n+ 57 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug in the type guard logic for simple truthy/falsy checks. If the type is an instance of `object` or a `TypeVar` with no bound (which is treated like an `object`), the logic should not assume that it will always evaluate to truthy. This addresses #6266. (#6269)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211086ac254a19ac29063b",
    "number": 6268,
    "body": "…f a class doesn't provide an explicit `__bool__` method and is not final, we cannot assume that it will always be evaluated as truthy because a subclass may override `__bool__` and return false. This addresses #6266.",
    "head_branch": "issue6266",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_utils.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_utils.py:312:54 - error: Cannot access member \"copy\" for type \"object*\"\n+     Member \"copy\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/copy_internals.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/copy_internals.py:89:25 - error: Argument of type \"AbstractSetIntStr | MappingIntStrAny | ValueItems | None\" cannot be assigned to parameter \"include\" of type \"AbstractSetIntStr | MappingIntStrAny | None\" in function \"_get_value\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/copy_internals.py:90:25 - error: Argument of type \"AbstractSetIntStr | MappingIntStrAny | ValueItems | None\" cannot be assigned to parameter \"exclude\" of type \"AbstractSetIntStr | MappingIntStrAny | None\" in function \"_get_value\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/copy_internals.py:162:25 - error: Argument of type \"AbstractSetIntStr | MappingIntStrAny | ValueItems | None\" cannot be assigned to parameter \"include\" of type \"AbstractSetIntStr | MappingIntStrAny | None\" in function \"_get_value\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/copy_internals.py:163:25 - error: Argument of type \"AbstractSetIntStr | MappingIntStrAny | ValueItems | None\" cannot be assigned to parameter \"exclude\" of type \"AbstractSetIntStr | MappingIntStrAny | None\" in function \"_get_value\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/copy_internals.py:180:25 - error: Argument of type \"AbstractSetIntStr | MappingIntStrAny | ValueItems | None\" cannot be assigned to parameter \"include\" of type \"AbstractSetIntStr | MappingIntStrAny | None\" in function \"_get_value\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/copy_internals.py:181:25 - error: Argument of type \"AbstractSetIntStr | MappingIntStrAny | ValueItems | None\" cannot be assigned to parameter \"exclude\" of type \"AbstractSetIntStr | MappingIntStrAny | None\" in function \"_get_value\" (reportGeneralTypeIssues)\n- 56 errors, 0 warnings, 0 informations \n+ 63 errors, 0 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:839:26 - error: Cannot access member \"check\" for type \"_BaseResource[_Cooldown]\"\n+     Member \"check\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:839:17 - warning: Type of \"check\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:839:17 - warning: Type of \"check\" is partially unknown\n+     Type of \"check\" is \"(() -> _Cooldown) | Unknown\" (reportUnknownMemberType)\n- 2344 errors, 9816 warnings, 0 informations \n+ 2345 errors, 9818 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/cooldown.py:71:39 - error: Argument of type \"Clan | RoleID | Role | None\" cannot be assigned to parameter \"values\" of type \"int | None\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/cooldown.py:77:39 - error: Argument of type \"Clan | bool | None\" cannot be assigned to parameter \"values\" of type \"int | None\" in function \"__new__\" (reportGeneralTypeIssues)\n- 7929 errors, 22 warnings, 0 informations \n+ 7931 errors, 22 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:208:12 - error: Expression of type \"tuple[Unknown, ...] | Literal[False]\" cannot be assigned to return type \"bool\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/unittest/patch.py:208:12 - error: Expression of type \"TextTestRunner | tuple[Unknown, ...] | Literal[False]\" cannot be assigned to return type \"bool\"\n-     Type \"tuple[Unknown, ...] | Literal[False]\" cannot be assigned to type \"bool\"\n+     Type \"TextTestRunner | tuple[Unknown, ...] | Literal[False]\" cannot be assigned to type \"bool\"\n-       \"tuple[Unknown, ...]\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+       \"TextTestRunner\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/interactions.py:212:28 - error: Cannot assign member \"channel\" for type \"Interaction[ClientT@Interaction]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/interactions.py:269:16 - error: Expression of type \"ConnectionState[ClientT@Interaction] | Any | Guild | None\" cannot be assigned to return type \"Guild | None\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/message.py\n+   /tmp/mypy_primer/projects/discord.py/discord/message.py:540:16 - error: Expression of type \"ConnectionState[Client] | Message | None\" cannot be assigned to return type \"Message | None\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/state.py\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:522:16 - error: Expression of type \"tuple[GuildChannel | Guild | PartialMessageable | Thread | DMChannel, Guild | None]\" cannot be assigned to return type \"Tuple[Channel | Thread, Guild | None]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:374:16 - error: Expression of type \"tuple[Guild | int | None, int, int]\" cannot be assigned to return type \"Tuple[int | None, int, int]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:1011:16 - error: Expression of type \"_State | Guild | None\" cannot be assigned to return type \"Guild | None\" (reportGeneralTypeIssues)\n- 47 errors, 8 warnings, 0 informations \n+ 53 errors, 8 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211087ac254a19ac29063c",
    "number": 6262,
    "body": "…tion with a recursive ParamSpec. This addresses the remainder of #6178.",
    "head_branch": "issue6178",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to false negative when evaluating a call to a function with a recursive ParamSpec. This addresses the remainder of #6178. (#6262)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211088ac254a19ac29063d",
    "number": 6259,
    "body": "…e` and `type[None]` within pyright's logic. The new logic now models `None` like any other class and simply uses `ClassType` to track values of this type. This eliminates a bunch of special-case logic and edge-case bugs.",
    "head_branch": "nonePart4",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n\nbidict (https://github.com/jab/bidict)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"ref\" is incompatible with \"None\" (reportGeneralTypeIssues)\n\nspack (https://github.com/spack/spack)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"bool\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"bool\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"ModuleSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"ModuleSpec\" (reportGeneralTypeIssues)\n-             Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+             \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"Iterable[Unknown]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+         \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"Iterable[str]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+         \"__iter__\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"ArchSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"ArchSpec\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:191:69 - error: \"None\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:191:69 - error: \"None\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:507:69 - error: \"None\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:507:69 - error: \"None\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"ConfigScope\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n+       \"None\" is incompatible with protocol \"Iterable[Spec]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+         \"__iter__\" is not present (reportGeneralTypeIssues)\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"BaseException\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"BaseException\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsRead[AnyStr@copyfileobj]\"\n-       \"read\" is not present (reportGeneralTypeIssues)\n+         \"read\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsRead[AnyStr@copyfileobj]\"\n-       \"read\" is not present (reportGeneralTypeIssues)\n+         \"read\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsRead[AnyStr@copyfileobj]\"\n-       \"read\" is not present (reportGeneralTypeIssues)\n+         \"read\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsIndex\"\n-       \"__index__\" is not present (reportGeneralTypeIssues)\n+         \"__index__\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"Sized\"\n-       \"__len__\" is not present (reportGeneralTypeIssues)\n+         \"__len__\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"Sized\"\n-       \"__len__\" is not present (reportGeneralTypeIssues)\n+         \"__len__\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"Sized\"\n-       \"__len__\" is not present (reportGeneralTypeIssues)\n+         \"__len__\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"Sized\"\n-       \"__len__\" is not present (reportGeneralTypeIssues)\n+         \"__len__\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"Sized\"\n-       \"__len__\" is not present (reportGeneralTypeIssues)\n+         \"__len__\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"CompilerSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"CompilerSpec\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"CompilerSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"CompilerSpec\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"CompilerSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"CompilerSpec\" (reportGeneralTypeIssues)\n\n... (truncated 407 lines) ...\n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/test/test_main.py\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:42 - error: Cannot access member \"_data\" for type \"StoredState\"\n+     Member \"_data\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"handle\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Argument type is unknown\n+     Argument corresponds to parameter \"handle_path\" in function \"save_snapshot\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:374:16 - error: Expression of type \"StoredState | StoredStateData\" cannot be assigned to return type \"BoundStoredState | StoredStateData\" (reportGeneralTypeIssues)\n- 56 errors, 0 warnings, 0 informations \n+ 62 errors, 0 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"ellipsis\" is incompatible with \"None\" (reportGeneralTypeIssues)\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-       Type \"None\" cannot be assigned to type \"float\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"float\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"float\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"float\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"float\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"float\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"float\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"float\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"float\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"float\" (reportGeneralTypeIssues)\n+         \"None\" is incompatible with protocol \"Iterator[_T_co@contextmanager]\"\n-         \"__next__\" is not present\n+           \"__next__\" is not present\n-         \"__iter__\" is not present (reportGeneralTypeIssues)\n+           \"__iter__\" is not present (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"RPC\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"RPC\" (reportGeneralTypeIssues)\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-           Type \"None\" cannot be assigned to type \"Coroutine[Any, Any, None]\" (reportGeneralTypeIssues)\n+           \"None\" is incompatible with \"Coroutine[Any, Any, None]\" (reportGeneralTypeIssues)\n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n\npyp (https://github.com/hauntsaninja/pyp)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"bytes\" is incompatible with \"None\" (reportGeneralTypeIssues)\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n\npandera (https://github.com/pandera-dev/pandera)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"DataFrameSchema\"\n-       Type \"None\" cannot be assigned to type \"SeriesSchema\"\n-       Type \"None\" cannot be assigned to type \"Tuple[OutputGetter, Schemas]\"\n+       \"None\" is incompatible with \"DataFrameSchema\"\n+       \"None\" is incompatible with \"SeriesSchema\"\n+       \"None\" is incompatible with \"Tuple[OutputGetter, Schemas]\"\n-       Type \"None\" cannot be assigned to type \"List[Tuple[OutputGetter, Schemas]]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Tuple[OutputGetter, Schemas]]\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"BaseException\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"BaseException\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"BaseException\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"BaseException\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[str, Any]\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"Dict[Unknown, Unknown]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[Unknown, Unknown]\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"Dict[Unknown, Unknown]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[Unknown, Unknown]\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[str, Any]\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[str, Any]\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"function\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type \"None*\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"List[str]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"List[str]\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\"\n+       \"None\" is incompatible with \"str\"\n-       Type \"None\" cannot be assigned to type \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"DataFrameSchema\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"DataFrameSchema\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with protocol \"Iterable[Unknown]\"\n-     \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"__iter__\" is not present (reportGeneralTypeIssues)\n+     \"None\" is incompatible with protocol \"Iterable[Unknown]\"\n-     \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"__iter__\" is not present (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Check\"\n+       \"None\" is incompatible with \"Check\"\n-       Type \"None\" cannot be assigned to type \"List[Check]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Check]\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Check\"\n+       \"None\" is incompatible with \"Check\"\n-       Type \"None\" cannot be assigned to type \"List[Check]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Check]\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Check\"\n+       \"None\" is incompatible with \"Check\"\n-       Type \"None\" cannot be assigned to type \"List[Check]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Check]\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"ErrorHandler\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"ErrorHandler\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"ErrorHandler\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"ErrorHandler\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"ErrorHandler\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"ErrorHandler\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\"\n+       \"None\" is incompatible with \"str\"\n-       Type \"None\" cannot be assigned to type \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"DataFrameSchema\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"DataFrameSchema\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"BaseException\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"BaseException\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with protocol \"Iterable[Unknown]\"\n-     \"__iter__\" is not present (reportGeneralTypeIssues)\n+     \"None\" is incompatible with protocol \"Iterable[Unknown]\"\n-     \"__iter__\" is not present (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Check\"\n+       \"None\" is incompatible with \"Check\"\n-       Type \"None\" cannot be assigned to type \"List[Check]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Check]\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Check\"\n+       \"None\" is incompatible with \"Check\"\n-       Type \"None\" cannot be assigned to type \"List[Check]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Check]\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"str\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"ErrorHandler\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"ErrorHandler\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"SchemaErrorReason\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"SchemaErrorReason\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"ErrorHandler\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"ErrorHandler\" (reportGeneralTypeIssues)\n\n... (truncated 155 lines) ...```"
    ],
    "commit_messages": [
      "Removed the `NoneType` which has historically been used to track `None` and `type[None]` within pyright's logic. The new logic now models `None` like any other class and simply uses `ClassType` to track values of this type. This eliminates a bunch of special-case logic and edge-case bugs. (#6259)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211089ac254a19ac29063e",
    "number": 6258,
    "body": "…e` and `type[None]` within pyright's logic. The new logic now models `None` like any other class and simply uses `ClassType` to track values of this type. This eliminates a bunch of special-case logic and edge-case bugs.",
    "head_branch": "nonePart3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"ref\" is incompatible with \"None\" (reportGeneralTypeIssues)\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n\nspack (https://github.com/spack/spack)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"bool\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"bool\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"ModuleSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"ModuleSpec\" (reportGeneralTypeIssues)\n-             Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+             \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"Iterable[Unknown]\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"Iterable[_T@sorted]\"\n+       \"None\" is incompatible with protocol \"Iterable[_T@sorted]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+         \"__iter__\" is not present (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:190:74 - error: \"__getitem__\" method not defined on type \"object*\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"Iterable[str]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+         \"__iter__\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"ArchSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"ArchSpec\" (reportGeneralTypeIssues)\n-       \"bool\" is incompatible with protocol \"SupportsRead[str | bytes]\"\n+       \"None\" is incompatible with protocol \"SupportsRead[str | bytes]\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:191:69 - error: \"None\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:191:69 - error: \"None\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:507:69 - error: \"None\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:507:69 - error: \"None\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       \"syaml_dict\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-       \"syaml_dict\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"ConfigScope\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-     Type \"list[Spec] | list[Unknown] | None\" cannot be assigned to type \"Iterable[Spec]\"\n+     Type \"list[Spec] | list[Unknown] | None\" cannot be assigned to type \"Iterable[_T@set]\"\n+       \"None\" is incompatible with protocol \"Iterable[_T@set]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+         \"__iter__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:1600:23 - error: Argument of type \"list[Spec]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n-     \"list[Spec]\" is incompatible with \"Iterable[SupportsRichComparisonT@sorted]\"\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"Spec\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n-         Type \"Spec\" cannot be assigned to type \"SupportsRichComparison\"\n-           Type \"Spec\" cannot be assigned to type \"SupportsRichComparison\"\n-             \"Spec\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n-             \"Spec\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"BaseException\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"BaseException\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsRead[AnyStr@copyfileobj]\"\n-       \"read\" is not present (reportGeneralTypeIssues)\n+         \"read\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsRead[AnyStr@copyfileobj]\"\n-       \"read\" is not present (reportGeneralTypeIssues)\n+         \"read\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsRead[AnyStr@copyfileobj]\"\n-       \"read\" is not present (reportGeneralTypeIssues)\n+         \"read\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsIndex\"\n-       \"__index__\" is not present (reportGeneralTypeIssues)\n\n... (truncated 449 lines) ...\n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:225:28 - error: Argument of type \"AsyncGenerator[User, None]\" cannot be assigned to parameter \"__i\" of type \"SupportsAnext[_T@anext]\" in function \"anext\"\n+     \"AsyncGenerator[User, None]\" is incompatible with protocol \"SupportsAnext[None]\"\n+       \"__anext__\" is an incompatible type\n+         Type \"() -> Awaitable[User]\" cannot be assigned to type \"() -> Awaitable[_T_co@SupportsAnext]\"\n+           Function return type \"Awaitable[User]\" is incompatible with type \"Awaitable[_T_co@SupportsAnext]\"\n+             \"Awaitable[User]\" is incompatible with \"Awaitable[_T_co@SupportsAnext]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:225:58 - error: Argument of type \"None\" cannot be assigned to parameter \"default\" of type \"_VT@anext\" in function \"anext\"\n+     \"None\" is incompatible with \"User\" (reportGeneralTypeIssues)\n- 7929 errors, 22 warnings, 0 informations \n+ 7931 errors, 22 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-           Type \"None\" cannot be assigned to type \"Coroutine[Any, Any, None]\" (reportGeneralTypeIssues)\n+           \"None\" is incompatible with \"Coroutine[Any, Any, None]\" (reportGeneralTypeIssues)\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-       Type \"None\" cannot be assigned to type \"float\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"float\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"float\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"float\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"float\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"float\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"float\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"float\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"float\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"float\" (reportGeneralTypeIssues)\n+         \"None\" is incompatible with protocol \"Iterator[_T_co@contextmanager]\"\n-         \"__next__\" is not present\n+           \"__next__\" is not present\n-         \"__iter__\" is not present (reportGeneralTypeIssues)\n+           \"__iter__\" is not present (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"RPC\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"RPC\" (reportGeneralTypeIssues)\n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/test/test_main.py\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:42 - error: Cannot access member \"_data\" for type \"StoredState\"\n+     Member \"_data\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"handle\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Argument type is unknown\n+     Argument corresponds to parameter \"handle_path\" in function \"save_snapshot\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:374:16 - error: Expression of type \"StoredState | StoredStateData\" cannot be assigned to return type \"BoundStoredState | StoredStateData\" (reportGeneralTypeIssues)\n- 56 errors, 0 warnings, 0 informations \n+ 62 errors, 0 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"ellipsis\" is incompatible with \"None\" (reportGeneralTypeIssues)\n\npyp (https://github.com/hauntsaninja/pyp)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"bytes\" is incompatible with \"None\" (reportGeneralTypeIssues)\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-       Type \"None\" cannot be assigned to type \"ModuleSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"ModuleSpec\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\"\n-       Type \"None\" cannot be assigned to type \"str\"\n-       Type \"None\" cannot be assigned to type \"bytes\"\n+       \"None\" is incompatible with \"int\"\n+       \"None\" is incompatible with \"str\"\n+       \"None\" is incompatible with \"bytes\"\n+       \"None\" is incompatible with protocol \"PathLike[str]\"\n-       \"__fspath__\" is not present\n+         \"__fspath__\" is not present\n+       \"None\" is incompatible with protocol \"PathLike[bytes]\"\n-       \"__fspath__\" is not present (reportGeneralTypeIssues)\n+         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\"\n-       Type \"None\" cannot be assigned to type \"str\"\n-       Type \"None\" cannot be assigned to type \"bytes\"\n+       \"None\" is incompatible with \"int\"\n+       \"None\" is incompatible with \"str\"\n+       \"None\" is incompatible with \"bytes\"\n+       \"None\" is incompatible with protocol \"PathLike[str]\"\n-       \"__fspath__\" is not present\n+         \"__fspath__\" is not present\n+       \"None\" is incompatible with protocol \"PathLike[bytes]\"\n-       \"__fspath__\" is not present (reportGeneralTypeIssues)\n+         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\"\n-       Type \"None\" cannot be assigned to type \"bytes\"\n+       \"None\" is incompatible with \"str\"\n+       \"None\" is incompatible with \"bytes\"\n+       \"None\" is incompatible with protocol \"PathLike[str]\"\n-       \"__fspath__\" is not present\n+         \"__fspath__\" is not present\n+       \"None\" is incompatible with protocol \"PathLike[bytes]\"\n-       \"__fspath__\" is not present (reportGeneralTypeIssues)\n+         \"__fspath__\" is not present (reportGeneralTypeIssues)\n+     \"None\" is incompatible with protocol \"SupportsNext[_T@next]\"\n-     \"__next__\" is not present (reportGeneralTypeIssues)\n+       \"__next__\" is not present (reportGeneralTypeIssues)\n+     \"None\" is incompatible with protocol \"SupportsNext[_T@next]\"\n-     \"__next__\" is not present (reportGeneralTypeIssues)\n+       \"__next__\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"bool\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+     \"dict[Unknown, Unknown]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_metrics.py:75:59 - error: \"None\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_metrics.py:75:59 - error: \"None\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"ddwaf_context_capsule\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"ddwaf_context_capsule\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Literal[',:']\" is incompatible with \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/commands/ddtrace_run.py:141:12 - error: \"None\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Mapping[str, str]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Mapping[str, str]\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Pattern[Unknown]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Pattern[Unknown]\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Dict[str, str]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Dict[str, str]\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Dict[_TagNameType, Any]\" (reportGeneralTypeIssues)\n-       \"Dict[str, str]\" is incompatible with \"Dict[_TagNameType, Any]\"\n-         Type parameter \"_KT@dict\" is invariant, but \"str\" is not the same as \"_TagNameType\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Dict[_TagNameType, Any]\" (reportGeneralTypeIssues)\n-       \"Dict[str, str]\" is incompatible with \"Dict[_TagNameType, Any]\"\n-         Type parameter \"_KT@dict\" is invariant, but \"str\" is not the same as \"_TagNameType\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Pin\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Pin\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Pin\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Pin\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Pin\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Pin\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"List[Any]\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"List[Any]\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Text\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Text\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Dict[_TagNameType, Any]\" (reportGeneralTypeIssues)\n-       \"Dict[str, str]\" is incompatible with \"Dict[_TagNameType, Any]\"\n-         Type parameter \"_KT@dict\" is invariant, but \"str\" is not the same as \"_TagNameType\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Dict[_TagNameType, Any]\" (reportGeneralTypeIssues)\n\n... (truncated 159 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621108aac254a19ac29063f",
    "number": 6257,
    "body": "…e` and `type[None]` within pyright's logic. The new logic now models `None` like any other class and simply uses `ClassType` to track values of this type. This eliminates a bunch of special-case logic and edge-case bugs.",
    "head_branch": "nonePart2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n\nbidict (https://github.com/jab/bidict)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"ref\" is incompatible with \"None\" (reportGeneralTypeIssues)\n\nspack (https://github.com/spack/spack)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"bool\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"bool\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"ModuleSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"ModuleSpec\" (reportGeneralTypeIssues)\n-             Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+             \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"int\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"Iterable[Unknown]\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"Iterable[_T@sorted]\"\n+       \"None\" is incompatible with protocol \"Iterable[_T@sorted]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+         \"__iter__\" is not present (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:190:74 - error: \"__getitem__\" method not defined on type \"object*\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"Iterable[str]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+         \"__iter__\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"ArchSpec\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"ArchSpec\" (reportGeneralTypeIssues)\n-       \"bool\" is incompatible with protocol \"SupportsRead[str | bytes]\"\n+       \"None\" is incompatible with protocol \"SupportsRead[str | bytes]\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:191:69 - error: \"None\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:191:69 - error: \"None\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:507:69 - error: \"None\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:507:69 - error: \"None\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       \"syaml_dict\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-       \"syaml_dict\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"Path\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"Path\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+     \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"_ReadableStream\"\n-       \"read\" is not present\n+         \"read\" is not present\n-       \"seek\" is not present\n+         \"seek\" is not present\n-       \"close\" is not present (reportGeneralTypeIssues)\n+         \"close\" is not present (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"ConfigScope\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-     Type \"list[Spec] | list[Unknown] | None\" cannot be assigned to type \"Iterable[Spec]\"\n+     Type \"list[Spec] | list[Unknown] | None\" cannot be assigned to type \"Iterable[_T@set]\"\n+       \"None\" is incompatible with protocol \"Iterable[_T@set]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+         \"__iter__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:1600:23 - error: Argument of type \"list[Spec]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n-     \"list[Spec]\" is incompatible with \"Iterable[SupportsRichComparisonT@sorted]\"\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"Spec\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n-         Type \"Spec\" cannot be assigned to type \"SupportsRichComparison\"\n-           Type \"Spec\" cannot be assigned to type \"SupportsRichComparison\"\n-             \"Spec\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n-             \"Spec\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-           Type \"None\" cannot be assigned to type \"bool\"\n-       Type cannot be assigned to type \"None\"\n+           \"None\" is incompatible with \"bool\"\n+       \"function\" is incompatible with \"None\"\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"bool\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"BaseException\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"BaseException\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsRead[AnyStr@copyfileobj]\"\n-       \"read\" is not present (reportGeneralTypeIssues)\n+         \"read\" is not present (reportGeneralTypeIssues)\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsRead[AnyStr@copyfileobj]\"\n-       \"read\" is not present (reportGeneralTypeIssues)\n+         \"read\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsRead[AnyStr@copyfileobj]\"\n-       \"read\" is not present (reportGeneralTypeIssues)\n+         \"read\" is not present (reportGeneralTypeIssues)\n+       \"None\" is incompatible with protocol \"SupportsIndex\"\n-       \"__index__\" is not present (reportGeneralTypeIssues)\n\n... (truncated 449 lines) ...\n\npydantic (https://github.com/samuelcolvin/pydantic)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"ellipsis\" is incompatible with \"None\" (reportGeneralTypeIssues)\n\npandas (https://github.com/pandas-dev/pandas)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/categorical.py:1607:20 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/pandas/pandas/core/groupby/groupby.py:5841:28 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/pandas/pandas/core/indexes/base.py:4264:39 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/pandas/pandas/core/strings/accessor.py:3415:24 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/pandas/pandas/plotting/_core.py:1880:20 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n- 560 errors, 0 warnings, 0 informations \n+ 565 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:18:51 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:106:67 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1432:100 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+ /tmp/mypy_primer/projects/steam.py/steam/enums.py\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:191:79 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/game_server.py:177:94 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:639:45 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:225:28 - error: Argument of type \"AsyncGenerator[User, None]\" cannot be assigned to parameter \"__i\" of type \"SupportsAnext[_T@anext]\" in function \"anext\"\n+     \"AsyncGenerator[User, None]\" is incompatible with protocol \"SupportsAnext[None]\"\n+       \"__anext__\" is an incompatible type\n+         Type \"() -> Awaitable[User]\" cannot be assigned to type \"() -> Awaitable[_T_co@SupportsAnext]\"\n+           Function return type \"Awaitable[User]\" is incompatible with type \"Awaitable[_T_co@SupportsAnext]\"\n+             \"Awaitable[User]\" is incompatible with \"Awaitable[_T_co@SupportsAnext]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:225:58 - error: Argument of type \"None\" cannot be assigned to parameter \"default\" of type \"_VT@anext\" in function \"anext\"\n+     \"None\" is incompatible with \"User\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/id.py:81:104 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/id.py:84:87 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1102:43 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1980:107 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/utils.py:582:46 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:290:20 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:324:20 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+ /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:256:101 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:269:106 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:273:101 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:458:81 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:240:96 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:290:91 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:293:87 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:313:87 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:388:86 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+ /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/currency.py\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/currency.py:84:93 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:108:24 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n- 7929 errors, 22 warnings, 0 informations \n+ 7955 errors, 22 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/ops/framework.py\n+   /tmp/mypy_primer/projects/operator/ops/framework.py:717:79 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+ /tmp/mypy_primer/projects/operator/ops/model.py\n+   /tmp/mypy_primer/projects/operator/ops/model.py:595:78 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1634:62 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1639:52 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:238:53 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+ /tmp/mypy_primer/projects/operator/ops/testing.py\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:2015:89 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:2023:52 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:2148:96 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:3067:24 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:3131:39 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+ /tmp/mypy_primer/projects/operator/test/test_main.py\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:42 - error: Cannot access member \"_data\" for type \"StoredState\"\n+     Member \"_data\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"_data\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"handle\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Type of \"path\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:369:35 - error: Argument type is unknown\n+     Argument corresponds to parameter \"handle_path\" in function \"save_snapshot\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/test/test_main.py:374:16 - error: Expression of type \"StoredState | StoredStateData\" cannot be assigned to return type \"BoundStoredState | StoredStateData\" (reportGeneralTypeIssues)\n- 56 errors, 0 warnings, 0 informations \n+ 72 errors, 0 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/examples/checks.py:69:41 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:131:47 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:133:49 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/checks.py:136:57 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2117:45 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/components.py:887:72 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/components.py:923:72 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:442:62 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:497:62 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:547:63 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:666:81 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:776:61 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:830:61 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:890:64 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1004:40 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1280:40 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1285:36 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1401:55 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:241:53 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:245:68 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:248:68 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:261:92 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py:222:71 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:245:52 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:370:38 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:1101:73 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:1112:53 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:1671:57 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:1674:53 - error: Expected exception object, exception class or None\n+     \"None\" does not derive from BaseException\n-           Type \"None\" cannot be assigned to type \"Coroutine[Any, Any, None]\" (reportGeneralTypeIssues)\n+           \"None\" is incompatible with \"Coroutine[Any, Any, None]\" (reportGeneralTypeIssues)\n- 2344 errors, 9816 warnings, 0 informations \n+ 2373 errors, 9816 warnings, 0 informations \n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+       \"Coercer[A@coercer]\" is incompatible with \"None\" (reportGeneralTypeIssues)\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n\n... (truncated 398 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621108bac254a19ac290640",
    "number": 6256,
    "body": null,
    "head_branch": "nonePart1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Refactored code in preparation for removing the `NoneType`. (#6256)\n\n* Refactored code in preparation for removing the `NoneType`.\r\n\r\n* Fixed style issues."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621108cac254a19ac290641",
    "number": 6253,
    "body": "…`Type` when applying `isinstance` type narrowing in some cases. This addresses #6252.",
    "head_branch": "issue6252",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2222:16 - warning: Return type, \"Unknown | type[_T@__getitem__]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2222:16 - warning: Return type, \"Type[Unknown] | type[_T@__getitem__]\", is partially unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2204:9 - error: Return type, \"Unknown | type[_T@__getitem__]\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2204:9 - error: Return type, \"Type[Unknown] | type[_T@__getitem__]\", is partially unknown (reportUnknownParameterType)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_debugger.py:411:48 - error: Argument of type \"type[CoroutineType[_YieldT_co@CoroutineType, _SendT_contra@CoroutineType, _ReturnT_co@CoroutineType]] | None\" cannot be assigned to parameter \"types\" of type \"Type[Unknown] | Tuple[Type[Unknown] | Tuple[Any, ...], ...]\" in function \"_isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_function/discovery.py:246:39 - error: Argument of type \"type[(self: ContainerIterator, container: FunctionContainerType, origin: Tuple[ContainerIterator, ContainerKey] | Tuple[FullyNamedFunction, str] | None = None) -> None] | None\" cannot be assigned to parameter \"types\" of type \"Type[Unknown] | Tuple[Type[Unknown] | Tuple[Any, ...], ...]\" in function \"_isinstance\" (reportGeneralTypeIssues)\n- 9533 errors, 464 warnings, 0 informations \n+ 9535 errors, 464 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:929:21 - error: \"assert_type\" mismatch: expected \"Index[float]\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:951:21 - error: \"assert_type\" mismatch: expected \"Index[complex]\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1030:23 - error: Operator \"/\" not supported for types \"Index[int]\" and \"timedelta\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1030:23 - error: \"assert_type\" mismatch: expected \"Index[float]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1031:23 - error: Operator \"/\" not supported for types \"Index[int]\" and \"list[timedelta]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1031:23 - error: \"assert_type\" mismatch: expected \"Index[float]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1032:23 - error: \"assert_type\" mismatch: expected \"TimedeltaIndex\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1033:23 - error: \"assert_type\" mismatch: expected \"TimedeltaIndex\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1034:23 - error: Operator \"//\" not supported for types \"Index[int]\" and \"timedelta\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1034:23 - error: \"assert_type\" mismatch: expected \"Index[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1035:23 - error: Operator \"//\" not supported for types \"Index[int]\" and \"list[timedelta]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1035:23 - error: \"assert_type\" mismatch: expected \"Index[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1036:23 - error: \"assert_type\" mismatch: expected \"TimedeltaIndex\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1037:23 - error: \"assert_type\" mismatch: expected \"TimedeltaIndex\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1039:23 - error: Operator \"/\" not supported for types \"timedelta\" and \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1039:23 - error: \"assert_type\" mismatch: expected \"Index[float]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1040:23 - error: Operator \"/\" not supported for types \"list[timedelta]\" and \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1040:23 - error: \"assert_type\" mismatch: expected \"Index[float]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1041:23 - error: Operator \"//\" not supported for types \"timedelta\" and \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1041:23 - error: \"assert_type\" mismatch: expected \"Index[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1042:23 - error: Operator \"//\" not supported for types \"list[timedelta]\" and \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1042:23 - error: \"assert_type\" mismatch: expected \"Index[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1045:63 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1046:65 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1047:64 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1048:66 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:91:9 - error: Overload 3 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:69:9 - error: Overload 1 for \"__new__\" overlaps overload 3 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:102:9 - error: Overload 4 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:102:9 - error: Overload 4 for \"__new__\" will never be used because its parameters overlap overload 3 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:80:9 - error: Overload 2 for \"__new__\" overlaps overload 4 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:113:9 - error: Overload 5 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:69:9 - error: Overload 1 for \"__new__\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:126:9 - error: Overload 6 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:126:9 - error: Overload 6 for \"__new__\" will never be used because its parameters overlap overload 5 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:80:9 - error: Overload 2 for \"__new__\" overlaps overload 6 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:138:9 - error: Overload 7 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:149:9 - error: Overload 8 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:160:9 - error: Overload 9 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:171:9 - error: Overload 10 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:182:9 - error: Overload 11 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:193:9 - error: Overload 12 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:204:9 - error: Overload 13 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:215:9 - error: Overload 14 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n- 1366 errors, 0 warnings, 0 informations \n+ 1326 errors, 0 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:57:27 - error: Cannot access member \"CHECK_FUNCTION_REGISTRY\" for type \"Type[Unknown]\"\n+     Member \"CHECK_FUNCTION_REGISTRY\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:193:21 - error: Cannot access member \"_register_equivalents\" for type \"_EngineType[Unknown]\"\n+     Member \"_register_equivalents\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:196:21 - error: Cannot access member \"_register_from_parametrized_dtype\" for type \"_EngineType[Unknown]\"\n+     Member \"_register_from_parametrized_dtype\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:198:17 - error: Cannot access member \"_registered_dtypes\" for type \"_EngineType[Unknown]\"\n+     Member \"_registered_dtypes\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:209:38 - error: Cannot access member \"_base_pandera_dtypes\" for type \"_EngineType[Unknown]\"\n+     Member \"_base_pandera_dtypes\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:215:43 - error: Cannot access member \"_base_pandera_dtypes\" for type \"_EngineType[Unknown]\"\n+     Member \"_base_pandera_dtypes\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:228:24 - error: Cannot access member \"_registry\" for type \"_EngineType[Unknown]\"\n+     Member \"_registry\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_schemas.py:1742:18 - error: Expression of type \"Type[Unknown] | str\" cannot be assigned to declared type \"Type[Unknown]\"\n+     Type \"Type[Unknown] | str\" cannot be assigned to type \"Type[Unknown]\"\n+       \"str\" is incompatible with \"Type[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_schemas.py:1745:16 - error: Expression of type \"Type[Unknown] | str\" cannot be assigned to declared type \"Type[Unknown]\"\n+     Type \"Type[Unknown] | str\" cannot be assigned to type \"Type[Unknown]\"\n+       \"str\" is incompatible with \"Type[Unknown]\" (reportGeneralTypeIssues)\n- 1116 errors, 10 warnings, 0 informations \n+ 1125 errors, 10 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/mirror.py:705:13 - error: No overloads for \"print_exception\" match the provided arguments\n-     Argument types: (TextIO, *OptExcInfo | Unbound) (reportGeneralTypeIssues)\n- 3830 errors, 48 warnings, 0 informations \n+ 3829 errors, 48 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2222:16 - warning: Return type, \"Unknown | type[_T@__getitem__]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2222:16 - warning: Return type, \"Type[Unknown] | type[_T@__getitem__]\", is partially unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2204:9 - error: Return type, \"Unknown | type[_T@__getitem__]\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:2204:9 - error: Return type, \"Type[Unknown] | type[_T@__getitem__]\", is partially unknown (reportUnknownParameterType)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.28x faster (62.9s -> 49.0s)\n(Performance measurements are based on a single noisy sample)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_debugger.py:411:48 - error: Argument of type \"type[CoroutineType[_YieldT_co@CoroutineType, _SendT_contra@CoroutineType, _ReturnT_co@CoroutineType]] | None\" cannot be assigned to parameter \"types\" of type \"Type[Unknown] | Tuple[Type[Unknown] | Tuple[Any, ...], ...]\" in function \"_isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_function/discovery.py:246:39 - error: Argument of type \"type[(self: ContainerIterator, container: FunctionContainerType, origin: Tuple[ContainerIterator, ContainerKey] | Tuple[FullyNamedFunction, str] | None = None) -> None] | None\" cannot be assigned to parameter \"types\" of type \"Type[Unknown] | Tuple[Type[Unknown] | Tuple[Any, ...], ...]\" in function \"_isinstance\" (reportGeneralTypeIssues)\n- 9533 errors, 464 warnings, 0 informations \n+ 9535 errors, 464 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:57:27 - error: Cannot access member \"CHECK_FUNCTION_REGISTRY\" for type \"Type[Unknown]\"\n+     Member \"CHECK_FUNCTION_REGISTRY\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:193:21 - error: Cannot access member \"_register_equivalents\" for type \"_EngineType[Unknown]\"\n+     Member \"_register_equivalents\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:196:21 - error: Cannot access member \"_register_from_parametrized_dtype\" for type \"_EngineType[Unknown]\"\n+     Member \"_register_from_parametrized_dtype\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:198:17 - error: Cannot access member \"_registered_dtypes\" for type \"_EngineType[Unknown]\"\n+     Member \"_registered_dtypes\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:209:38 - error: Cannot access member \"_base_pandera_dtypes\" for type \"_EngineType[Unknown]\"\n+     Member \"_base_pandera_dtypes\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:215:43 - error: Cannot access member \"_base_pandera_dtypes\" for type \"_EngineType[Unknown]\"\n+     Member \"_base_pandera_dtypes\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:228:24 - error: Cannot access member \"_registry\" for type \"_EngineType[Unknown]\"\n+     Member \"_registry\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_schemas.py:1742:18 - error: Expression of type \"Type[Unknown] | str\" cannot be assigned to declared type \"Type[Unknown]\"\n+     Type \"Type[Unknown] | str\" cannot be assigned to type \"Type[Unknown]\"\n+       \"str\" is incompatible with \"Type[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_schemas.py:1745:16 - error: Expression of type \"Type[Unknown] | str\" cannot be assigned to declared type \"Type[Unknown]\"\n+     Type \"Type[Unknown] | str\" cannot be assigned to type \"Type[Unknown]\"\n+       \"str\" is incompatible with \"Type[Unknown]\" (reportGeneralTypeIssues)\n- 1116 errors, 10 warnings, 0 informations \n+ 1125 errors, 10 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:929:21 - error: \"assert_type\" mismatch: expected \"Index[float]\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:951:21 - error: \"assert_type\" mismatch: expected \"Index[complex]\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1030:23 - error: Operator \"/\" not supported for types \"Index[int]\" and \"timedelta\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1030:23 - error: \"assert_type\" mismatch: expected \"Index[float]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1031:23 - error: Operator \"/\" not supported for types \"Index[int]\" and \"list[timedelta]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1031:23 - error: \"assert_type\" mismatch: expected \"Index[float]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1032:23 - error: \"assert_type\" mismatch: expected \"TimedeltaIndex\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1033:23 - error: \"assert_type\" mismatch: expected \"TimedeltaIndex\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1034:23 - error: Operator \"//\" not supported for types \"Index[int]\" and \"timedelta\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1034:23 - error: \"assert_type\" mismatch: expected \"Index[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1035:23 - error: Operator \"//\" not supported for types \"Index[int]\" and \"list[timedelta]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1035:23 - error: \"assert_type\" mismatch: expected \"Index[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1036:23 - error: \"assert_type\" mismatch: expected \"TimedeltaIndex\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1037:23 - error: \"assert_type\" mismatch: expected \"TimedeltaIndex\" but received \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1039:23 - error: Operator \"/\" not supported for types \"timedelta\" and \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1039:23 - error: \"assert_type\" mismatch: expected \"Index[float]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1040:23 - error: Operator \"/\" not supported for types \"list[timedelta]\" and \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1040:23 - error: \"assert_type\" mismatch: expected \"Index[float]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1041:23 - error: Operator \"//\" not supported for types \"timedelta\" and \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1041:23 - error: \"assert_type\" mismatch: expected \"Index[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1042:23 - error: Operator \"//\" not supported for types \"list[timedelta]\" and \"Index[int]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1042:23 - error: \"assert_type\" mismatch: expected \"Index[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1045:63 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1046:65 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1047:64 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:1048:66 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:91:9 - error: Overload 3 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:69:9 - error: Overload 1 for \"__new__\" overlaps overload 3 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:102:9 - error: Overload 4 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:102:9 - error: Overload 4 for \"__new__\" will never be used because its parameters overlap overload 3 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:80:9 - error: Overload 2 for \"__new__\" overlaps overload 4 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:113:9 - error: Overload 5 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:69:9 - error: Overload 1 for \"__new__\" overlaps overload 5 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:126:9 - error: Overload 6 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:126:9 - error: Overload 6 for \"__new__\" will never be used because its parameters overlap overload 5 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:80:9 - error: Overload 2 for \"__new__\" overlaps overload 6 and returns an incompatible type (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:138:9 - error: Overload 7 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:149:9 - error: Overload 8 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:160:9 - error: Overload 9 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:171:9 - error: Overload 10 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:182:9 - error: Overload 11 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:193:9 - error: Overload 12 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:204:9 - error: Overload 13 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/indexes/base.pyi:215:9 - error: Overload 14 for \"__new__\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n- 1366 errors, 0 warnings, 0 informations \n+ 1326 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that led to an inconsistency between the use of `type` and … (#6253)\n\n* Fixed bug that led to an inconsistency between the use of `type` and `Type` when applying `isinstance` type narrowing in some cases. This addresses #6252.\r\n\r\n* Fixed a bug that led to a false positive when using an unpacked iterable as an argument in a call expression _after_ a keyword argument. This addresses #6247."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621108dac254a19ac290642",
    "number": 6251,
    "body": "…` and `python.analysis.ignore` settings. These have been implemented in pylance for a while now, but they were never implemented previously in pyright. Also fixed a bug in the original implementation that caused the config file not to override the language server settings for `python.analysis.exclude` and `python.analysis.ignore` as it should. This addresses #6250.",
    "head_branch": "excludeIgnore",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n- /tmp/mypy_primer/projects/hydra-zen/tests/annotations/behaviors.py\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/behaviors.py:74:17 - information: Type of \"b.x\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/behaviors.py:85:17 - information: Type of \"Conf(x=1).x\" is \"Any\"\n- /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:33:6 - error: Import \"hydra.core.utils\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:34:6 - error: Import \"omegaconf\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:87:17 - information: Type of \"hydra_zen.__version__\" is \"str\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:93:9 - information: Type of \"builds(A, zen_partial=True)\" is \"type[ZenPartialBuilds[type[A]]] | type[HydraPartialBuilds[type[A]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:97:17 - information: Type of \"instantiate(conf_a_partial)\" is \"Partial[A]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:98:17 - information: Type of \"instantiate(conf_a_partial)()\" is \"A\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:106:9 - information: Type of \"builds(f, zen_partial=True)\" is \"type[ZenPartialBuilds[(x: int) -> int]] | type[HydraPartialBuilds[(x: int) -> int]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:113:9 - information: Type of \"conf_f_partial()\" is \"ZenPartialBuilds[(x: int) -> int] | HydraPartialBuilds[(x: int) -> int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:118:17 - information: Type of \"instantiate(conf_f_partial)\" is \"Partial[int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:119:17 - information: Type of \"instantiate(conf_f_partial_instance)\" is \"Partial[int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:120:17 - information: Type of \"instantiate(conf_f_partial)()\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:125:17 - information: Type of \"builds(A, zen_partial=False)\" is \"type[Builds[type[A]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:127:17 - information: Type of \"instantiate(conf_A_1)\" is \"A\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:130:9 - information: Type of \"builds(f, zen_partial=False, expected_text=\"type[Builds[(x: int) -> int]]\")\" is \"type[Builds[(x: int) -> int]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:133:17 - information: Type of \"instantiate(conf_f_1)\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:138:17 - information: Type of \"builds(A)\" is \"type[Builds[type[A]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:140:17 - information: Type of \"instantiate(conf_A_2)\" is \"A\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:142:17 - information: Type of \"conf_A_2()\" is \"Builds[type[A]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:144:17 - information: Type of \"instantiate(conf_a_instance)\" is \"A\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:146:17 - information: Type of \"builds(f)\" is \"type[Builds[(x: int) -> int]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:148:17 - information: Type of \"instantiate(conf_f_2)\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:159:17 - information: Type of \"just(f)\" is \"Just[(x: int) -> int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:160:17 - information: Type of \"just(A)\" is \"Just[type[A]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:161:17 - information: Type of \"instantiate(just(f))\" is \"(x: int) -> int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:162:17 - information: Type of \"instantiate(just(A))\" is \"type[A]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:164:17 - information: Type of \"just(1)\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:165:17 - information: Type of \"just(\"hi\")\" is \"str\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:166:17 - information: Type of \"just(b\"1234\")\" is \"bytes\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:167:17 - information: Type of \"just(1 + 2j)\" is \"ConfigComplex\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:168:17 - information: Type of \"just(Path.home())\" is \"Path\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:169:17 - information: Type of \"just(partial(f, 1))\" is \"Just[partial[int]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:170:17 - information: Type of \"just(set([1, 2, 3]))\" is \"Builds[type[set[int]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:171:17 - information: Type of \"just(range(10))\" is \"Builds[type[range]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:174:17 - information: Type of \"partiald_f\" is \"partial[int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:175:17 - information: Type of \"partiald_f()\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:182:17 - information: Type of \"just(B)\" is \"Just[type[B]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:183:17 - information: Type of \"just(B())\" is \"type[Builds[type[B]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:184:17 - information: Type of \"just(B(), zen_convert={ \"dataclass\": False })\" is \"Any\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:195:17 - information: Type of \"instantiate(SomeDataClass)\" is \"Any\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:196:17 - information: Type of \"instantiate(some_dataclass)\" is \"Any\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:201:17 - information: Type of \"get_target(builds(str))\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:202:17 - information: Type of \"get_target(builds(str, zen_partial=False))\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:203:17 - information: Type of \"get_target(builds(str, zen_partial=True))\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:204:17 - information: Type of \"get_target(just(str))\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:207:17 - information: Type of \"get_target(builds(f))\" is \"(x: int) -> int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:209:9 - information: Type of \"get_target(builds(f, zen_partial=False))\" is \"(x: int) -> int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:212:9 - information: Type of \"get_target(builds(f, zen_partial=True))\" is \"(x: int) -> int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:214:17 - information: Type of \"get_target(just(f))\" is \"(x: int) -> int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:216:17 - information: Type of \"get_target(builds(str)())\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:217:17 - information: Type of \"get_target(builds(str, zen_partial=False)())\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:218:17 - information: Type of \"get_target(builds(str, zen_partial=True)())\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:219:17 - information: Type of \"get_target(just(str))\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:227:17 - information: Type of \"A().x\" is \"List[int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:237:17 - information: Type of \"builds(str, zen_wrappers=f)\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:238:17 - information: Type of \"builds(str, zen_wrappers=J)\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:239:17 - information: Type of \"builds(str, zen_wrappers=B)\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:240:17 - information: Type of \"builds(str, zen_wrappers=PB)\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:242:9 - information: Type of \"builds(str, zen_wrappers=(None, ), expected_text=\"type[Builds[type[str]]]\")\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:246:9 - information: Type of \"builds(str, zen_wrappers=(f, J, B, PB, None))\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:251:9 - information: Type of \"builds(str, zen_partial=True, zen_wrappers=f)\" is \"type[ZenPartialBuilds[type[str]]] | type[HydraPartialBuilds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:255:9 - information: Type of \"builds(str, zen_partial=True, zen_wrappers=J)\" is \"type[ZenPartialBuilds[type[str]]] | type[HydraPartialBuilds[type[str]]]\"\n\n... (truncated 121 lines) ...\n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n- /tmp/mypy_primer/projects/hydra-zen/tests/annotations/behaviors.py\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/behaviors.py:74:17 - information: Type of \"b.x\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/behaviors.py:85:17 - information: Type of \"Conf(x=1).x\" is \"Any\"\n- /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:33:6 - error: Import \"hydra.core.utils\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:34:6 - error: Import \"omegaconf\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:87:17 - information: Type of \"hydra_zen.__version__\" is \"str\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:93:9 - information: Type of \"builds(A, zen_partial=True)\" is \"type[ZenPartialBuilds[type[A]]] | type[HydraPartialBuilds[type[A]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:97:17 - information: Type of \"instantiate(conf_a_partial)\" is \"Partial[A]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:98:17 - information: Type of \"instantiate(conf_a_partial)()\" is \"A\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:106:9 - information: Type of \"builds(f, zen_partial=True)\" is \"type[ZenPartialBuilds[(x: int) -> int]] | type[HydraPartialBuilds[(x: int) -> int]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:113:9 - information: Type of \"conf_f_partial()\" is \"ZenPartialBuilds[(x: int) -> int] | HydraPartialBuilds[(x: int) -> int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:118:17 - information: Type of \"instantiate(conf_f_partial)\" is \"Partial[int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:119:17 - information: Type of \"instantiate(conf_f_partial_instance)\" is \"Partial[int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:120:17 - information: Type of \"instantiate(conf_f_partial)()\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:125:17 - information: Type of \"builds(A, zen_partial=False)\" is \"type[Builds[type[A]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:127:17 - information: Type of \"instantiate(conf_A_1)\" is \"A\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:130:9 - information: Type of \"builds(f, zen_partial=False, expected_text=\"type[Builds[(x: int) -> int]]\")\" is \"type[Builds[(x: int) -> int]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:133:17 - information: Type of \"instantiate(conf_f_1)\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:138:17 - information: Type of \"builds(A)\" is \"type[Builds[type[A]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:140:17 - information: Type of \"instantiate(conf_A_2)\" is \"A\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:142:17 - information: Type of \"conf_A_2()\" is \"Builds[type[A]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:144:17 - information: Type of \"instantiate(conf_a_instance)\" is \"A\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:146:17 - information: Type of \"builds(f)\" is \"type[Builds[(x: int) -> int]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:148:17 - information: Type of \"instantiate(conf_f_2)\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:159:17 - information: Type of \"just(f)\" is \"Just[(x: int) -> int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:160:17 - information: Type of \"just(A)\" is \"Just[type[A]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:161:17 - information: Type of \"instantiate(just(f))\" is \"(x: int) -> int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:162:17 - information: Type of \"instantiate(just(A))\" is \"type[A]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:164:17 - information: Type of \"just(1)\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:165:17 - information: Type of \"just(\"hi\")\" is \"str\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:166:17 - information: Type of \"just(b\"1234\")\" is \"bytes\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:167:17 - information: Type of \"just(1 + 2j)\" is \"ConfigComplex\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:168:17 - information: Type of \"just(Path.home())\" is \"Path\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:169:17 - information: Type of \"just(partial(f, 1))\" is \"Just[partial[int]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:170:17 - information: Type of \"just(set([1, 2, 3]))\" is \"Builds[type[set[int]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:171:17 - information: Type of \"just(range(10))\" is \"Builds[type[range]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:174:17 - information: Type of \"partiald_f\" is \"partial[int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:175:17 - information: Type of \"partiald_f()\" is \"int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:182:17 - information: Type of \"just(B)\" is \"Just[type[B]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:183:17 - information: Type of \"just(B())\" is \"type[Builds[type[B]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:184:17 - information: Type of \"just(B(), zen_convert={ \"dataclass\": False })\" is \"Any\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:195:17 - information: Type of \"instantiate(SomeDataClass)\" is \"Any\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:196:17 - information: Type of \"instantiate(some_dataclass)\" is \"Any\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:201:17 - information: Type of \"get_target(builds(str))\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:202:17 - information: Type of \"get_target(builds(str, zen_partial=False))\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:203:17 - information: Type of \"get_target(builds(str, zen_partial=True))\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:204:17 - information: Type of \"get_target(just(str))\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:207:17 - information: Type of \"get_target(builds(f))\" is \"(x: int) -> int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:209:9 - information: Type of \"get_target(builds(f, zen_partial=False))\" is \"(x: int) -> int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:212:9 - information: Type of \"get_target(builds(f, zen_partial=True))\" is \"(x: int) -> int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:214:17 - information: Type of \"get_target(just(f))\" is \"(x: int) -> int\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:216:17 - information: Type of \"get_target(builds(str)())\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:217:17 - information: Type of \"get_target(builds(str, zen_partial=False)())\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:218:17 - information: Type of \"get_target(builds(str, zen_partial=True)())\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:219:17 - information: Type of \"get_target(just(str))\" is \"type[str]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:227:17 - information: Type of \"A().x\" is \"List[int]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:237:17 - information: Type of \"builds(str, zen_wrappers=f)\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:238:17 - information: Type of \"builds(str, zen_wrappers=J)\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:239:17 - information: Type of \"builds(str, zen_wrappers=B)\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:240:17 - information: Type of \"builds(str, zen_wrappers=PB)\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:242:9 - information: Type of \"builds(str, zen_wrappers=(None, ), expected_text=\"type[Builds[type[str]]]\")\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:246:9 - information: Type of \"builds(str, zen_wrappers=(f, J, B, PB, None))\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:251:9 - information: Type of \"builds(str, zen_partial=True, zen_wrappers=f)\" is \"type[ZenPartialBuilds[type[str]]] | type[HydraPartialBuilds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:255:9 - information: Type of \"builds(str, zen_partial=True, zen_wrappers=J)\" is \"type[ZenPartialBuilds[type[str]]] | type[HydraPartialBuilds[type[str]]]\"\n\n... (truncated 121 lines) ...\n\n```"
    ],
    "commit_messages": [
      "Added support for `python.analysis.include`, `python.analysis.exclude… (#6251)\n\n* Added support for `python.analysis.include`, `python.analysis.exclude` and `python.analysis.ignore` settings. These have been implemented in pylance for a while now, but they were never implemented previously in pyright. Also fixed a bug in the original implementation that caused the config file not to override the language server settings for `python.analysis.exclude` and `python.analysis.ignore` as it should. This addresses #6250.\r\n\r\n* Removed references to pylance in the help text."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621108eac254a19ac290643",
    "number": 6248,
    "body": "… cases including lambas with `*args` parameters and cases where the expected type is a union of multiple subtypes that might be matches. This addresses #6222.",
    "head_branch": "issue6222",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1907:30 - error: Operator \"in\" not supported for types \"Literal['packages']\" and \"_T@list\" (reportGeneralTypeIssues)\n- 3831 errors, 48 warnings, 0 informations \n+ 3830 errors, 48 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved inference logic for lambdas so it handles a wider variety of cases including lambas with `*args` parameters and cases where the expected type is a union of multiple subtypes that might be matches. This addresses #6222. (#6248)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621108fac254a19ac290644",
    "number": 6245,
    "body": "…` objects, including when they are instantiated from `typing_extensions` classes. This addresses #6241.",
    "head_branch": "issue6241",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved support for runtime `TypeVar`, `TypeVarTuple` and `ParamSpec` objects, including when they are instantiated from `typing_extensions` classes. This addresses #6241. (#6245)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211090ac254a19ac290645",
    "number": 6239,
    "body": "Fixes: https://github.com/microsoft/pyright/issues/6242\r\n\r\n## Before:\r\nParameter has no docstring\r\n<img width=\"476\" alt=\"image\" src=\"https://github.com/microsoft/pylance-release/assets/99349468/0cf2155a-ef2b-4446-846f-31c5a04194b0\">\r\n\r\n## After\r\nDoc string is now included when hovering over the parameter:\r\n<img width=\"476\" alt=\"image\" src=\"https://github.com/microsoft/pylance-release/assets/99349468/16d3ab00-675b-47f4-83c7-3f06fe1c3e7b\">\r\n\r\nYou can also navigate to key definition.",
    "head_branch": "pakrym/Support_unpacked_TypedDict_in_parameter_hover",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Thanks for the contribution. The change looks good to me."
    ],
    "commit_messages": [
      "Support unpacked TypedDict in parameter hover (#6239)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211091ac254a19ac290646",
    "number": 6238,
    "body": "…` function within a `case` block or within an `if`/`elif` chain. This addresses #6234.",
    "head_branch": "issue6234",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed issue that led to false positive error when calling a `NoReturn` function within a `case` block or within an `if`/`elif` chain. This addresses #6234. (#6238)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211092ac254a19ac290647",
    "number": 6233,
    "body": "Addresses https://github.com/microsoft/pyright/issues/6232\r\n\r\n`getRootLength` wasn't handling URIs without `authority` (single slash after colon) correctly. In the case of `untitled:/` (length 10) it was returning 11 under the assumption that there were two trailing slashes. This caused `isDiskPathRoot` to incorrectly return `false`. If `isDiskPathRoot` returns `true` instead, `_tryWalkUp` will return `false` thus causing the `_shouldWalkUp` loop to exit.",
    "head_branch": "loopFix",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fix infinite loop in `isThirdPartyPyTypedPresent` logic of `_getModuleNameForImport` (#6233)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211092ac254a19ac290648",
    "number": 6231,
    "body": "Rollup of the following changes:\r\n\r\n1. Fix user defined __builtins__.pyi for notebooks https://github.com/microsoft/pyrx/pull/4236\r\n2. Don't show pyTest code action when it can't generate fixture types. https://github.com/microsoft/pyrx/pull/4233\r\n3. Moved more stuff to service provider https://github.com/microsoft/pyrx/pull/4225\r\n4. added resolve alias cache https://github.com/microsoft/pyrx/pull/4223\r\n5. Potentially fix crash when opening notebooks https://github.com/microsoft/pyrx/pull/4210\r\n6. make sure we are up to date when code action is invoked explicitly. https://github.com/microsoft/pyrx/pull/4209\r\n7. Support pyright ignore in code action https://github.com/microsoft/pyrx/pull/4207\r\n8. pylance loc update 20231018.1 https://github.com/microsoft/pyrx/pull/4205\r\n9. fix rename module regression https://github.com/microsoft/pyrx/pull/4192\r\n10. git subrepo clone --force https://github.com/microsoft/pyright.git packages/pyright\r\n11. git subrepo pull (merge) packages/pyright\r\n12. fixed `FAR` on `__init__` not working in multiple files scenario https://github.com/microsoft/pyrx/pull/4194\r\n13. pylance loc update 20231017.1 https://github.com/microsoft/pyrx/pull/4193\r\n14. Support hover on string definition provider https://github.com/microsoft/pyrx/pull/4188\r\n15. Support virtual workspaces in sync https://github.com/microsoft/pyrx/pull/4157\r\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.333",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.333 (#6231)\n\n Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n Co-authored-by: Stella Huang <stellahuang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211093ac254a19ac290649",
    "number": 6228,
    "body": "…n dataclass. Algorithm wasn't taking into account that attributes in these classes are immutable. This addresses #6226.",
    "head_branch": "issue6226",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug in protocol matching when source is a namedtuple or a frozen dataclass. Algorithm wasn't taking into account that attributes in these classes are immutable. This addresses #6226. (#6228)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211094ac254a19ac29064a",
    "number": 6219,
    "body": "…essions `L` that evaluate to a literal int type. This addresses #6216.",
    "head_branch": "issue6216",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Extended the `len(x) == L` type guard logic to support arbitrary expressions `L` that evaluate to a literal int type. This addresses #6216. (#6219)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211095ac254a19ac29064b",
    "number": 6218,
    "body": "… latest draft of the PEP 705.",
    "head_branch": "pep705-1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed several bugs in `ReadOnly` TypedDict functionality based on the latest draft of the PEP 705. (#6218)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211096ac254a19ac29064c",
    "number": 6217,
    "body": "…efers earlier overloads to later ones, which appears to result in better messages more often.",
    "head_branch": "overloadMessage1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:352:78 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"Buffer\" in function \"ioctl\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:352:78 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"int\" in function \"ioctl\"\n+     \"Literal['1234']\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-     \"Literal['1234']\" is incompatible with protocol \"Buffer\"\n-       \"__buffer__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:301:27 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:301:27 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[LiteralString]\" in function \"join\"\n-     Type \"Any | None\" cannot be assigned to type \"Iterable[str]\"\n+     Type \"Any | None\" cannot be assigned to type \"Iterable[LiteralString]\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1032:34 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1032:34 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n+     Type \"Prefix | None\" cannot be assigned to type \"LiteralString\"\n+       \"Prefix\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1041:36 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1041:36 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n+     Type \"Prefix | None\" cannot be assigned to type \"LiteralString\"\n+       \"Prefix\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/filesystem_view.py:600:25 - error: Argument of type \"tuple[Unknown, Unknown]\" cannot be assigned to parameter \"__s\" of type \"slice\" in function \"__getitem__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/filesystem_view.py:600:25 - error: Argument of type \"tuple[Unknown, Unknown]\" cannot be assigned to parameter \"__i\" of type \"SupportsIndex\" in function \"__getitem__\"\n-     \"tuple[Unknown, Unknown]\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+     \"tuple[Unknown, Unknown]\" is incompatible with protocol \"SupportsIndex\"\n+       \"__index__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2388:35 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2388:35 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n+     Type \"Prefix | None\" cannot be assigned to type \"LiteralString\"\n+       \"Prefix\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/paths.py:18:14 - error: Argument of type \"PurePath\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\"\n-     \"PurePath\" is incompatible with protocol \"ReadableBuffer\"\n-       \"__buffer__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/stage.py:326:56 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/stage.py:326:56 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"paths\" of type \"LiteralString\" in function \"join\"\n+     Type \"Unknown | None\" cannot be assigned to type \"LiteralString\"\n+       Type \"None\" cannot be assigned to type \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/user_environment.py:80:34 - error: Argument of type \"str\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\"\n-     \"str\" is incompatible with protocol \"ReadableBuffer\"\n-       \"__buffer__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:454:48 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:454:48 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n+     Type \"Prefix | None\" cannot be assigned to type \"LiteralString\"\n+       \"Prefix\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1027:74 - error: Argument of type \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1027:74 - error: Argument of type \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n+     Type \"Unknown | _Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" cannot be assigned to type \"LiteralString\"\n+       \"_Wrapped[..., Unknown, (*args: Unknown, **kwargs: Unknown), Unknown]\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1210:38 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1210:38 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n+     Type \"Prefix | None\" cannot be assigned to type \"LiteralString\"\n+       \"Prefix\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1263:28 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1263:28 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n+     Type \"Prefix | None\" cannot be assigned to type \"LiteralString\"\n+       \"Prefix\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:62:33 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:62:33 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n+     Type \"Prefix | None\" cannot be assigned to type \"LiteralString\"\n+       \"Prefix\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/sip.py:65:29 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/sip.py:65:29 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n+     Type \"Prefix | None\" cannot be assigned to type \"LiteralString\"\n+       \"Prefix\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:313:43 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:313:43 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n+     Type \"str | None\" cannot be assigned to type \"LiteralString\"\n+       \"str\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:313:59 - error: Argument of type \"str | None\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:313:59 - error: Argument of type \"str | None\" cannot be assigned to parameter \"paths\" of type \"LiteralString\" in function \"join\"\n+     Type \"str | None\" cannot be assigned to type \"LiteralString\"\n+       \"str\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:314:32 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:314:32 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__a\" of type \"LiteralString\" in function \"join\"\n\n... (truncated 295 lines) ...\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange_utils.py:76:28 - error: Argument of type \"dict[str, list[dict[str, str]]]\" cannot be assigned to parameter \"__m\" of type \"Partial[ValidExchangesType]\" in function \"update\"\n+     \"list[dict[str, str]]\" is incompatible with \"List[TradeModeType]\"\n+       Type parameter \"_T@list\" is invariant, but \"dict[str, str]\" is not the same as \"TradeModeType\"\n+       Consider switching from \"list\" to \"Sequence\" which is covariant (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange_utils.py:76:13 - error: Argument of type \"dict[str, list[dict[str, str]]]\" cannot be assigned to parameter \"__m\" of type \"Iterable[tuple[Literal['name'], str] | tuple[Literal['valid'], bool] | tuple[Literal['supported'], bool] | tuple[Literal['comment'], str] | tuple[Literal['trade_modes'], List[TradeModeType]]]\" in function \"update\"\n-     Type \"Literal['trade_modes']\" cannot be assigned to type \"tuple[Literal['name'], str] | tuple[Literal['valid'], bool] | tuple[Literal['supported'], bool] | tuple[Literal['comment'], str] | tuple[Literal['trade_modes'], List[TradeModeType]]\"\n-       \"Literal['trade_modes']\" is incompatible with \"tuple[Literal['name'], str]\"\n-       \"Literal['trade_modes']\" is incompatible with \"tuple[Literal['valid'], bool]\"\n-       \"Literal['trade_modes']\" is incompatible with \"tuple[Literal['supported'], bool]\"\n-       \"Literal['trade_modes']\" is incompatible with \"tuple[Literal['comment'], str]\"\n-       \"Literal['trade_modes']\" is incompatible with \"tuple[Literal['trade_modes'], List[TradeModeType]]\" (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:302:25 - error: Argument of type \"Generator[Any | str | bytes | bytearray | LazyTaintDict | LazyTaintList | Unknown | Mapping[Unknown, Unknown] | Sequence[Unknown], Any, None]\" cannot be assigned to parameter \"__sequence\" of type \"SupportsLenAndGetItem[_T@reversed]\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:302:25 - error: Argument of type \"Generator[Any | str | bytes | bytearray | LazyTaintDict | LazyTaintList | Unknown | Mapping[Unknown, Unknown] | Sequence[Unknown], Any, None]\" cannot be assigned to parameter \"__sequence\" of type \"Reversible[_T@reversed]\" in function \"__init__\"\n-     \"Generator[Any | str | bytes | bytearray | LazyTaintDict | LazyTaintList | Unknown | Mapping[Unknown, Unknown] | Sequence[Unknown], Any, None]\" is incompatible with protocol \"SupportsLenAndGetItem[_T@reversed]\"\n+     \"Generator[Any | str | bytes | bytearray | LazyTaintDict | LazyTaintList | Unknown | Mapping[Unknown, Unknown] | Sequence[Unknown], Any, None]\" is incompatible with protocol \"Reversible[_T@reversed]\"\n-       \"__len__\" is not present\n+       \"__reversed__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/patch.py:397:19 - error: Argument of type \"Literal['Records']\" cannot be assigned to parameter \"__s\" of type \"slice\" in function \"__getitem__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/patch.py:397:19 - error: Argument of type \"Literal['Records']\" cannot be assigned to parameter \"__i\" of type \"SupportsIndex\" in function \"__getitem__\"\n-     \"Literal['Records']\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+     \"Literal['Records']\" is incompatible with protocol \"SupportsIndex\"\n+       \"__index__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/patch.py:506:39 - error: Argument of type \"tuple[Any | None, Any]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/patch.py:506:39 - error: Argument of type \"tuple[Any | None, Any]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[LiteralString]\" in function \"join\"\n-     Type \"Any | None\" cannot be assigned to type \"str\"\n+     Type \"Any | None\" cannot be assigned to type \"LiteralString\"\n-       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       Type \"None\" cannot be assigned to type \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/writer.py:313:63 - error: Argument of type \"List[str] | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/writer.py:313:63 - error: Argument of type \"List[str] | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[LiteralString]\" in function \"join\"\n-     Type \"List[str] | None\" cannot be assigned to type \"Iterable[str]\"\n+     Type \"List[str] | None\" cannot be assigned to type \"Iterable[LiteralString]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"List[str]\" is incompatible with \"Iterable[LiteralString]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str\" is not a subtype of \"LiteralString\"\n+           \"str\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/writer.py:314:64 - error: Argument of type \"List[str] | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/writer.py:314:64 - error: Argument of type \"List[str] | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[LiteralString]\" in function \"join\"\n-     Type \"List[str] | None\" cannot be assigned to type \"Iterable[str]\"\n+     Type \"List[str] | None\" cannot be assigned to type \"Iterable[LiteralString]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"List[str]\" is incompatible with \"Iterable[LiteralString]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"str\" is not a subtype of \"LiteralString\"\n+           \"str\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/fixtures/aspects/str_methods.py:663:37 - error: Argument of type \"list[List[Any] | Text]\" cannot be assigned to parameter \"m\" of type \"Sequence[tuple[SupportsRichComparisonT@commonprefix, ...]]\" in function \"commonprefix\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/fixtures/aspects/str_methods.py:663:37 - error: Argument of type \"list[List[Any] | Text]\" cannot be assigned to parameter \"m\" of type \"Sequence[LiteralString]\" in function \"commonprefix\"\n-     \"list[List[Any] | Text]\" is incompatible with \"Sequence[tuple[SupportsRichComparisonT@commonprefix, ...]]\"\n+     \"list[List[Any] | Text]\" is incompatible with \"Sequence[LiteralString]\"\n-       Type parameter \"_T_co@Sequence\" is covariant, but \"List[Any] | Text\" is not a subtype of \"tuple[SupportsRichComparisonT@commonprefix, ...]\"\n+       Type parameter \"_T_co@Sequence\" is covariant, but \"List[Any] | Text\" is not a subtype of \"LiteralString\"\n-         Type \"List[Any] | Text\" cannot be assigned to type \"tuple[SupportsRichComparisonT@commonprefix, ...]\"\n+         Type \"List[Any] | Text\" cannot be assigned to type \"LiteralString\"\n-           \"Text\" is incompatible with \"tuple[SupportsRichComparisonT@commonprefix, ...]\" (reportGeneralTypeIssues)\n+           \"Text\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:70:22 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[list[bytes]]\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:70:22 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__map\" of type \"SupportsKeysAndGetItem[_KT@dict, _VT@dict]\" in function \"__init__\"\n-     Type \"Any | None\" cannot be assigned to type \"Iterable[list[bytes]]\"\n+     Type \"Any | None\" cannot be assigned to type \"SupportsKeysAndGetItem[_KT@dict, _VT@dict]\"\n+       \"keys\" is not present\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"__getitem__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:77:22 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[list[bytes]]\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:77:22 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__map\" of type \"SupportsKeysAndGetItem[_KT@dict, _VT@dict]\" in function \"__init__\"\n-     Type \"Any | None\" cannot be assigned to type \"Iterable[list[bytes]]\"\n+     Type \"Any | None\" cannot be assigned to type \"SupportsKeysAndGetItem[_KT@dict, _VT@dict]\"\n+       \"keys\" is not present\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"__getitem__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:92:22 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[list[bytes]]\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:92:22 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__map\" of type \"SupportsKeysAndGetItem[_KT@dict, _VT@dict]\" in function \"__init__\"\n-     Type \"Any | None\" cannot be assigned to type \"Iterable[list[bytes]]\"\n+     Type \"Any | None\" cannot be assigned to type \"SupportsKeysAndGetItem[_KT@dict, _VT@dict]\"\n+       \"keys\" is not present\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"__getitem__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:102:26 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[list[bytes]]\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:102:26 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__map\" of type \"SupportsKeysAndGetItem[_KT@dict, _VT@dict]\" in function \"__init__\"\n-     Type \"Any | None\" cannot be assigned to type \"Iterable[list[bytes]]\"\n+     Type \"Any | None\" cannot be assigned to type \"SupportsKeysAndGetItem[_KT@dict, _VT@dict]\"\n+       \"keys\" is not present\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"__getitem__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:122:22 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[list[bytes]]\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:122:22 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"__map\" of type \"SupportsKeysAndGetItem[_KT@dict, _VT@dict]\" in function \"__init__\"\n-     Type \"Any | None\" cannot be assigned to type \"Iterable[list[bytes]]\"\n+     Type \"Any | None\" cannot be assigned to type \"SupportsKeysAndGetItem[_KT@dict, _VT@dict]\"\n+       \"keys\" is not present\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n+       \"__getitem__\" is not present (reportGeneralTypeIssues)\n\n... (truncated 226 lines) ...\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:721:33 - error: Argument of type \"_TemporaryFileWrapper[str]\" cannot be assigned to parameter \"stream\" of type \"PathLike[Unknown]\" in function \"to_yaml\"\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:721:33 - error: Argument of type \"_TemporaryFileWrapper[str]\" cannot be assigned to parameter \"stream\" of type \"None\" in function \"to_yaml\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-     \"_TemporaryFileWrapper[str]\" is incompatible with protocol \"PathLike[Unknown]\"\n-       \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:778:33 - error: Argument of type \"str\" cannot be assigned to parameter \"target\" of type \"PathLike[Unknown]\" in function \"to_json\"\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:778:33 - error: Argument of type \"str\" cannot be assigned to parameter \"target\" of type \"None\" in function \"to_json\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-     \"str\" is incompatible with protocol \"PathLike[Unknown]\"\n-       \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:806:33 - error: Argument of type \"StringIO\" cannot be assigned to parameter \"target\" of type \"PathLike[Unknown]\" in function \"to_json\"\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:806:33 - error: Argument of type \"StringIO\" cannot be assigned to parameter \"target\" of type \"None\" in function \"to_json\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-     \"StringIO\" is incompatible with protocol \"PathLike[Unknown]\"\n-       \"__fspath__\" is not present (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211097ac254a19ac29064d",
    "number": 6215,
    "body": "…tching for a protocol and implementation that use a combination of class-scoped and function-scoped TypeVars. This addresses #6213.",
    "head_branch": "issue6213",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive error when doing protocol matching for a protocol and implementation that use a combination of class-scoped and function-scoped TypeVars. This addresses #6213. (#6215)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211098ac254a19ac29064e",
    "number": 6212,
    "body": "…he assigned type is a tuple that includes one or more `Any` type arguments and the declared type is a tuple without an `Any`. This addresses #6208.",
    "head_branch": "issue6208",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect narrowing on assignment when the assigned type is a tuple that includes one or more `Any` type arguments and the declared type is a tuple without an `Any`. This addresses #6208. (#6212)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211098ac254a19ac29064f",
    "number": 6205,
    "body": "… for a protocol that uses deeply nested recursion. This addresses #6183.",
    "head_branch": "issue6183-3",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive when doing protocol matching for a protocol that uses deeply nested recursion. This addresses #6183. (#6205)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211099ac254a19ac290650",
    "number": 6204,
    "body": "…rce cannot be bound. This partially addresses #6183.",
    "head_branch": "issue6183-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved error message for protocol mismatch when a method in the source cannot be bound. This partially addresses #6183. (#6204)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621109aac254a19ac290651",
    "number": 6202,
    "body": "…rce cannot be bound. This partially addresses #6183.",
    "head_branch": "issue6183",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/compat.py:406:22 - error: Could not bind method \"warn\" because \"TemporaryDirectory\" is not assignable to parameter \"message\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/compat.py:406:22 - error: \n+     Could not bind method \"warn\" because \"TemporaryDirectory\" is not assignable to parameter \"message\"\n+     Could not bind method \"warn\" because \"TemporaryDirectory\" is not assignable to parameter \"message\"\n-     \"TemporaryDirectory\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"TemporaryDirectory\" is incompatible with \"str\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/compat.py:406:22 - error: Could not bind method \"warn\" because \"TemporaryDirectory\" is not assignable to parameter \"message\"\n-     \"TemporaryDirectory\" is incompatible with \"Warning\" (reportGeneralTypeIssues)\n+       \"TemporaryDirectory\" is incompatible with \"Warning\" (reportGeneralTypeIssues)\n- 9422 errors, 463 warnings, 0 informations \n+ 9421 errors, 463 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:225:23 - error: Could not bind method \"_pydantic_validate\" because \"type[ArraySchema]\" is not assignable to parameter \"cls\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:225:23 - error: \n+     Could not bind method \"_pydantic_validate\" because \"type[ArraySchema]\" is not assignable to parameter \"cls\"\n-     Type \"type[Self@ArraySchema]\" cannot be assigned to type \"ArraySchema\"\n+       Type \"type[Self@ArraySchema]\" cannot be assigned to type \"ArraySchema\"\n-       \"type[ABCMeta]\" is incompatible with \"type[ArraySchema]\" (reportGeneralTypeIssues)\n+         \"type[ABCMeta]\" is incompatible with \"type[ArraySchema]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:147:19 - error: Could not bind method \"_pydantic_validate\" because \"type[ColumnSchema]\" is not assignable to parameter \"cls\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:147:19 - error: \n+     Could not bind method \"_pydantic_validate\" because \"type[ColumnSchema]\" is not assignable to parameter \"cls\"\n-     Type \"type[Self@ColumnSchema]\" cannot be assigned to type \"ColumnSchema\"\n+       Type \"type[Self@ColumnSchema]\" cannot be assigned to type \"ColumnSchema\"\n-       \"type[ABCMeta]\" is incompatible with \"type[ColumnSchema]\" (reportGeneralTypeIssues)\n+         \"type[ABCMeta]\" is incompatible with \"type[ColumnSchema]\" (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Improved error message for protocol mismatch when a method in the source cannot be bound. This partially addresses #6183. (#6202)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621109bac254a19ac290652",
    "number": 6196,
    "body": "…t supports keyword arguments and iterables of tuples. This addresses #6192.",
    "head_branch": "issue6192",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange_utils.py:76:28 - error: Argument of type \"dict[str, list[dict[str, str]]]\" cannot be assigned to parameter \"__m\" of type \"Partial[ValidExchangesType]\" in function \"update\"\n-     \"list[dict[str, str]]\" is incompatible with \"List[TradeModeType]\"\n-       Type parameter \"_T@list\" is invariant, but \"dict[str, str]\" is not the same as \"TradeModeType\"\n-       Consider switching from \"list\" to \"Sequence\" which is covariant (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange_utils.py:75:9 - error: No overloads for \"update\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange_utils.py:76:13 - error: Argument of type \"dict[str, list[dict[str, str]]]\" cannot be assigned to parameter \"__m\" of type \"Iterable[tuple[Literal['name'], str] | tuple[Literal['valid'], bool] | tuple[Literal['supported'], bool] | tuple[Literal['comment'], str] | tuple[Literal['trade_modes'], List[TradeModeType]]]\" in function \"update\"\n+     Type \"Literal['trade_modes']\" cannot be assigned to type \"tuple[Literal['name'], str] | tuple[Literal['valid'], bool] | tuple[Literal['supported'], bool] | tuple[Literal['comment'], str] | tuple[Literal['trade_modes'], List[TradeModeType]]\"\n+       \"Literal['trade_modes']\" is incompatible with \"tuple[Literal['name'], str]\"\n+       \"Literal['trade_modes']\" is incompatible with \"tuple[Literal['valid'], bool]\"\n+       \"Literal['trade_modes']\" is incompatible with \"tuple[Literal['supported'], bool]\"\n+       \"Literal['trade_modes']\" is incompatible with \"tuple[Literal['comment'], str]\"\n+       \"Literal['trade_modes']\" is incompatible with \"tuple[Literal['trade_modes'], List[TradeModeType]]\" (reportGeneralTypeIssues)\n- 559 errors, 38 warnings, 0 informations \n+ 560 errors, 38 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved the synthesized `update` method for `TypedDict` classes so it supports keyword arguments and iterables of tuples. This addresses #6192. (#6196)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621109cac254a19ac290653",
    "number": 6195,
    "body": "Rollup of the following changes:\r\n\r\n    1. fixed `FAR` on `__init__` not working in multiple files scenario https://github.com/microsoft/pyrx/pull/4194\r\n    2. pylance loc update 20231017.1 https://github.com/microsoft/pyrx/pull/4193\r\n    3. Support hover on string definition provider https://github.com/microsoft/pyrx/pull/4188\r\n    4. Support virtual workspaces in sync https://github.com/microsoft/pyrx/pull/4157\r\n",
    "head_branch": "pull-pylance-with-pyright-1.1.332",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.40x faster (68.8s -> 49.0s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.332 (#6195)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>\r\n\r\n   Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621109dac254a19ac290654",
    "number": 6191,
    "body": "…dDict to another TypedDict. Field types should be treated as invariant rather than covariant because they are mutable (unless marked readonly).",
    "head_branch": "issue6190",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false negative when assigning one TypedDict to another TypedDict. Field types should be treated as invariant rather than covariant because they are mutable (unless marked readonly). (#6191)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621109eac254a19ac290655",
    "number": 6189,
    "body": "Bumps [@babel/traverse](https://github.com/babel/babel/tree/HEAD/packages/babel-traverse) from 7.22.8 to 7.23.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/babel/babel/releases\"><code>@​babel/traverse</code>'s releases</a>.</em></p>\n<blockquote>\n<h2>v7.23.2 (2023-10-11)</h2>\n<p><strong>NOTE</strong>: This release also re-publishes <code>@babel/core</code>, even if it does not appear in the linked release commit.</p>\n<p>Thanks <a href=\"https://github.com/jimmydief\"><code>@​jimmydief</code></a> for your first PR!</p>\n<h4>:bug: Bug Fix</h4>\n<ul>\n<li><code>babel-traverse</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/16033\">#16033</a> Only evaluate own String/Number/Math methods (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-preset-typescript</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/16022\">#16022</a> Rewrite <code>.tsx</code> extension when using <code>rewriteImportExtensions</code> (<a href=\"https://github.com/jimmydief\"><code>@​jimmydief</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-helpers</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/16017\">#16017</a> Fix: fallback to typeof when toString is applied to incompatible object (<a href=\"https://github.com/JLHwung\"><code>@​JLHwung</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-helpers</code>, <code>babel-plugin-transform-modules-commonjs</code>, <code>babel-runtime-corejs2</code>, <code>babel-runtime-corejs3</code>, <code>babel-runtime</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/16025\">#16025</a> Avoid override mistake in namespace imports (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n</ul>\n<h4>Committers: 5</h4>\n<ul>\n<li>Babel Bot (<a href=\"https://github.com/babel-bot\"><code>@​babel-bot</code></a>)</li>\n<li>Huáng Jùnliàng (<a href=\"https://github.com/JLHwung\"><code>@​JLHwung</code></a>)</li>\n<li>James Diefenderfer (<a href=\"https://github.com/jimmydief\"><code>@​jimmydief</code></a>)</li>\n<li>Nicolò Ribaudo (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n<li><a href=\"https://github.com/liuxingbaoyu\"><code>@​liuxingbaoyu</code></a></li>\n</ul>\n<h2>v7.23.1 (2023-09-25)</h2>\n<p>Re-publishing <code>@babel/helpers</code> due to a publishing error in 7.23.0.</p>\n<h2>v7.23.0 (2023-09-25)</h2>\n<p>Thanks <a href=\"https://github.com/lorenzoferre\"><code>@​lorenzoferre</code></a> and <a href=\"https://github.com/RajShukla1\"><code>@​RajShukla1</code></a> for your first PRs!</p>\n<h4>:rocket: New Feature</h4>\n<ul>\n<li><code>babel-plugin-proposal-import-wasm-source</code>, <code>babel-plugin-syntax-import-source</code>, <code>babel-plugin-transform-dynamic-import</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15870\">#15870</a> Support transforming <code>import source</code> for wasm (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-helper-module-transforms</code>, <code>babel-helpers</code>, <code>babel-plugin-proposal-import-defer</code>, <code>babel-plugin-syntax-import-defer</code>, <code>babel-plugin-transform-modules-commonjs</code>, <code>babel-runtime-corejs2</code>, <code>babel-runtime-corejs3</code>, <code>babel-runtime</code>, <code>babel-standalone</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15878\">#15878</a> Implement <code>import defer</code> proposal transform support (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-generator</code>, <code>babel-parser</code>, <code>babel-types</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15845\">#15845</a> Implement <code>import defer</code> parsing support (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15829\">#15829</a> Add parsing support for the &quot;source phase imports&quot; proposal (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-generator</code>, <code>babel-helper-module-transforms</code>, <code>babel-parser</code>, <code>babel-plugin-transform-dynamic-import</code>, <code>babel-plugin-transform-modules-amd</code>, <code>babel-plugin-transform-modules-commonjs</code>, <code>babel-plugin-transform-modules-systemjs</code>, <code>babel-traverse</code>, <code>babel-types</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15682\">#15682</a> Add <code>createImportExpressions</code> parser option (<a href=\"https://github.com/JLHwung\"><code>@​JLHwung</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-standalone</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15671\">#15671</a> Pass through nonce to the transformed script element (<a href=\"https://github.com/JLHwung\"><code>@​JLHwung</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-helper-function-name</code>, <code>babel-helper-member-expression-to-functions</code>, <code>babel-helpers</code>, <code>babel-parser</code>, <code>babel-plugin-proposal-destructuring-private</code>, <code>babel-plugin-proposal-optional-chaining-assign</code>, <code>babel-plugin-syntax-optional-chaining-assign</code>, <code>babel-plugin-transform-destructuring</code>, <code>babel-plugin-transform-optional-chaining</code>, <code>babel-runtime-corejs2</code>, <code>babel-runtime-corejs3</code>, <code>babel-runtime</code>, <code>babel-standalone</code>, <code>babel-types</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15751\">#15751</a> Add support for optional chain in assignments (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-helpers</code>, <code>babel-plugin-proposal-decorators</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15895\">#15895</a> Implement the &quot;decorator metadata&quot; proposal (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-traverse</code>, <code>babel-types</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15893\">#15893</a> Add <code>t.buildUndefinedNode</code> (<a href=\"https://github.com/liuxingbaoyu\"><code>@​liuxingbaoyu</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-preset-typescript</code></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/babel/babel/blob/main/CHANGELOG.md\"><code>@​babel/traverse</code>'s changelog</a>.</em></p>\n<blockquote>\n<h2>v7.23.2 (2023-10-11)</h2>\n<h4>:bug: Bug Fix</h4>\n<ul>\n<li><code>babel-traverse</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/16033\">#16033</a> Only evaluate own String/Number/Math methods (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-preset-typescript</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/16022\">#16022</a> Rewrite <code>.tsx</code> extension when using <code>rewriteImportExtensions</code> (<a href=\"https://github.com/jimmydief\"><code>@​jimmydief</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-helpers</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/16017\">#16017</a> Fix: fallback to typeof when toString is applied to incompatible object (<a href=\"https://github.com/JLHwung\"><code>@​JLHwung</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-helpers</code>, <code>babel-plugin-transform-modules-commonjs</code>, <code>babel-runtime-corejs2</code>, <code>babel-runtime-corejs3</code>, <code>babel-runtime</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/16025\">#16025</a> Avoid override mistake in namespace imports (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n</ul>\n<h2>v7.23.0 (2023-09-25)</h2>\n<h4>:rocket: New Feature</h4>\n<ul>\n<li><code>babel-plugin-proposal-import-wasm-source</code>, <code>babel-plugin-syntax-import-source</code>, <code>babel-plugin-transform-dynamic-import</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15870\">#15870</a> Support transforming <code>import source</code> for wasm (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-helper-module-transforms</code>, <code>babel-helpers</code>, <code>babel-plugin-proposal-import-defer</code>, <code>babel-plugin-syntax-import-defer</code>, <code>babel-plugin-transform-modules-commonjs</code>, <code>babel-runtime-corejs2</code>, <code>babel-runtime-corejs3</code>, <code>babel-runtime</code>, <code>babel-standalone</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15878\">#15878</a> Implement <code>import defer</code> proposal transform support (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-generator</code>, <code>babel-parser</code>, <code>babel-types</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15845\">#15845</a> Implement <code>import defer</code> parsing support (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15829\">#15829</a> Add parsing support for the &quot;source phase imports&quot; proposal (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-generator</code>, <code>babel-helper-module-transforms</code>, <code>babel-parser</code>, <code>babel-plugin-transform-dynamic-import</code>, <code>babel-plugin-transform-modules-amd</code>, <code>babel-plugin-transform-modules-commonjs</code>, <code>babel-plugin-transform-modules-systemjs</code>, <code>babel-traverse</code>, <code>babel-types</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15682\">#15682</a> Add <code>createImportExpressions</code> parser option (<a href=\"https://github.com/JLHwung\"><code>@​JLHwung</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-standalone</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15671\">#15671</a> Pass through nonce to the transformed script element (<a href=\"https://github.com/JLHwung\"><code>@​JLHwung</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-helper-function-name</code>, <code>babel-helper-member-expression-to-functions</code>, <code>babel-helpers</code>, <code>babel-parser</code>, <code>babel-plugin-proposal-destructuring-private</code>, <code>babel-plugin-proposal-optional-chaining-assign</code>, <code>babel-plugin-syntax-optional-chaining-assign</code>, <code>babel-plugin-transform-destructuring</code>, <code>babel-plugin-transform-optional-chaining</code>, <code>babel-runtime-corejs2</code>, <code>babel-runtime-corejs3</code>, <code>babel-runtime</code>, <code>babel-standalone</code>, <code>babel-types</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15751\">#15751</a> Add support for optional chain in assignments (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-helpers</code>, <code>babel-plugin-proposal-decorators</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15895\">#15895</a> Implement the &quot;decorator metadata&quot; proposal (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-traverse</code>, <code>babel-types</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15893\">#15893</a> Add <code>t.buildUndefinedNode</code> (<a href=\"https://github.com/liuxingbaoyu\"><code>@​liuxingbaoyu</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-preset-typescript</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15913\">#15913</a> Add <code>rewriteImportExtensions</code> option to TS preset (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-parser</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15896\">#15896</a> Allow TS tuples to have both labeled and unlabeled elements (<a href=\"https://github.com/yukukotani\"><code>@​yukukotani</code></a>)</li>\n</ul>\n</li>\n</ul>\n<h4>:bug: Bug Fix</h4>\n<ul>\n<li><code>babel-plugin-transform-block-scoping</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15962\">#15962</a> fix: <code>transform-block-scoping</code> captures the variables of the method in the loop (<a href=\"https://github.com/liuxingbaoyu\"><code>@​liuxingbaoyu</code></a>)</li>\n</ul>\n</li>\n</ul>\n<h4>:nail_care: Polish</h4>\n<ul>\n<li><code>babel-traverse</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15797\">#15797</a> Expand evaluation of global built-ins in <code>@babel/traverse</code> (<a href=\"https://github.com/lorenzoferre\"><code>@​lorenzoferre</code></a>)</li>\n</ul>\n</li>\n<li><code>babel-plugin-proposal-explicit-resource-management</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15985\">#15985</a> Improve source maps for blocks with <code>using</code> declarations (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n</ul>\n<h4>:microscope: Output optimization</h4>\n<ul>\n<li><code>babel-core</code>, <code>babel-helper-module-transforms</code>, <code>babel-plugin-transform-async-to-generator</code>, <code>babel-plugin-transform-classes</code>, <code>babel-plugin-transform-dynamic-import</code>, <code>babel-plugin-transform-function-name</code>, <code>babel-plugin-transform-modules-amd</code>, <code>babel-plugin-transform-modules-commonjs</code>, <code>babel-plugin-transform-modules-umd</code>, <code>babel-plugin-transform-parameters</code>, <code>babel-plugin-transform-react-constant-elements</code>, <code>babel-plugin-transform-react-inline-elements</code>, <code>babel-plugin-transform-runtime</code>, <code>babel-plugin-transform-typescript</code>, <code>babel-preset-env</code>\n<ul>\n<li><a href=\"https://redirect.github.com/babel/babel/pull/15984\">#15984</a> Inline <code>exports.XXX =</code> update in simple variable declarations (<a href=\"https://github.com/nicolo-ribaudo\"><code>@​nicolo-ribaudo</code></a>)</li>\n</ul>\n</li>\n</ul>\n<h2>v7.22.20 (2023-09-16)</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/babel/babel/commit/b4b9942a6cde0685c222eb3412347880aae40ad5\"><code>b4b9942</code></a> v7.23.2</li>\n<li><a href=\"https://github.com/babel/babel/commit/b13376b346946e3f62fc0848c1d2a23223314c82\"><code>b13376b</code></a> Only evaluate own String/Number/Math methods (<a href=\"https://github.com/babel/babel/tree/HEAD/packages/babel-traverse/issues/16033\">#16033</a>)</li>\n<li><a href=\"https://github.com/babel/babel/commit/ca58ec15cb6dde6812c36997477e44880bec0bba\"><code>ca58ec1</code></a> v7.23.0</li>\n<li><a href=\"https://github.com/babel/babel/commit/0f333dafcf470f1970083e4e695ced6aec8bead0\"><code>0f333da</code></a> Add <code>createImportExpressions</code> parser option (<a href=\"https://github.com/babel/babel/tree/HEAD/packages/babel-traverse/issues/15682\">#15682</a>)</li>\n<li><a href=\"https://github.com/babel/babel/commit/3744545649fdc21688a2f3c97e1e39dbebff0d21\"><code>3744545</code></a> Fix linting</li>\n<li><a href=\"https://github.com/babel/babel/commit/c7e6806e2194deb36c330f543409c792592b22d4\"><code>c7e6806</code></a> Add <code>t.buildUndefinedNode</code> (<a href=\"https://github.com/babel/babel/tree/HEAD/packages/babel-traverse/issues/15893\">#15893</a>)</li>\n<li><a href=\"https://github.com/babel/babel/commit/38ee8b4dd693f1e2bd00107bbc1167ce84736ea0\"><code>38ee8b4</code></a> Expand evaluation of global built-ins in <code>@babel/traverse</code> (<a href=\"https://github.com/babel/babel/tree/HEAD/packages/babel-traverse/issues/15797\">#15797</a>)</li>\n<li><a href=\"https://github.com/babel/babel/commit/9f3dfd90211472cf0083a3234dd1a1b857ce3624\"><code>9f3dfd9</code></a> v7.22.20</li>\n<li><a href=\"https://github.com/babel/babel/commit/3ed28b29c1fb15588369bdd55187b69f1248e87d\"><code>3ed28b2</code></a> Fully support <code>||</code> and <code>&amp;&amp;</code> in <code>pluginToggleBooleanFlag</code> (<a href=\"https://github.com/babel/babel/tree/HEAD/packages/babel-traverse/issues/15961\">#15961</a>)</li>\n<li><a href=\"https://github.com/babel/babel/commit/77b0d7359909c94f3797c24006f244847fbc8d6d\"><code>77b0d73</code></a> v7.22.19</li>\n<li>Additional commits viewable in <a href=\"https://github.com/babel/babel/commits/v7.23.2/packages/babel-traverse\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=@babel/traverse&package-manager=npm_and_yarn&previous-version=7.22.8&new-version=7.23.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/pyright-internal/babel/traverse-7.23.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump @babel/traverse from 7.22.8 to 7.23.2 in /packages/pyright-internal (#6189)\n\nBumps [@babel/traverse](https://github.com/babel/babel/tree/HEAD/packages/babel-traverse) from 7.22.8 to 7.23.2.\r\n- [Release notes](https://github.com/babel/babel/releases)\r\n- [Changelog](https://github.com/babel/babel/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/babel/babel/commits/v7.23.2/packages/babel-traverse)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: \"@babel/traverse\"\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621109fac254a19ac290656",
    "number": 6188,
    "body": "…ances when evaluating a function call with a ParamSpec. This partially addresses #6178.",
    "head_branch": "issue6178",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a stack overflow crash under certain circumstances when evaluating a function call with a ParamSpec. This partially addresses #6178. (#6188)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621109fac254a19ac290657",
    "number": 6185,
    "body": "…tantiate a value of type `type[Self]` when `Self` refers to an abstract class. This addresses #6184.",
    "head_branch": "issue6184",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive error when attempting to instantiate a value of type `type[Self]` when `Self` refers to an abstract class. This addresses #6184. (#6185)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110a0ac254a19ac290658",
    "number": 6182,
    "body": null,
    "head_branch": "simplifyArg1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndiscord.py (https://github.com/Rapptz/discord.py): typechecking got 1.27x faster (60.9s -> 48.0s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Simplified logic for function assignment. (#6182)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110a2ac254a19ac290659",
    "number": 6180,
    "body": "fixes https://github.com/microsoft/pyright/issues/6146\r\n\r\nit is a regression from our change to use `realCase` in all places. added special casing to `symlink` case.",
    "head_branch": "normalizeDriveLetter",
    "is_a_fork": true,
    "comments": [
      "@rchiodo can you take a look?",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "make sure we always normalize drive letter even for symbolic link. (#6180)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110a3ac254a19ac29065a",
    "number": 6179,
    "body": "… is causing a stack overflow due to ParamSpec recursion. This is related to #6178.",
    "head_branch": "issue6178",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added an assert with some logging to better diagnose a condition that is causing a stack overflow due to ParamSpec recursion. This is related to #6178. (#6179)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110a4ac254a19ac29065b",
    "number": 6175,
    "body": "…r error messages. It wasn't properly handling `type(t)` where `t` is defined using a type alias. This addresses #6173.",
    "head_branch": "issue6173-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug in \"type printer\", the code that converts a type to text for error messages. It wasn't properly handling `type(t)` where `t` is defined using a type alias. This addresses #6173. (#6175)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110a5ac254a19ac29065c",
    "number": 6174,
    "body": "…r error messages. It wasn't properly handling `type(t)` where `t` is defined using a type alias. This addresses #6173.",
    "head_branch": "issue6173",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:924:32 - error: Argument of type \"() -> None\" cannot be assigned to parameter \"acquire\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:924:32 - error: Argument of type \"() -> None\" cannot be assigned to parameter \"acquire\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"() -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"() -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:924:62 - error: Argument of type \"(type: Unknown, value: Unknown, traceback: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:924:62 - error: Argument of type \"(type: Unknown, value: Unknown, traceback: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"(type: Unknown, value: Unknown, traceback: Unknown) -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"(type: Unknown, value: Unknown, traceback: Unknown) -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:672:63 - error: Argument of type \"() -> None\" cannot be assigned to parameter \"acquire\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:672:63 - error: Argument of type \"() -> None\" cannot be assigned to parameter \"acquire\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"() -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"() -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:668:64 - error: Argument of type \"() -> None\" cannot be assigned to parameter \"acquire\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:668:64 - error: Argument of type \"() -> None\" cannot be assigned to parameter \"acquire\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"() -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"() -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:668:84 - error: Argument of type \"(type: Unknown, value: Unknown, traceback: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:668:84 - error: Argument of type \"(type: Unknown, value: Unknown, traceback: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"(type: Unknown, value: Unknown, traceback: Unknown) -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"(type: Unknown, value: Unknown, traceback: Unknown) -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:565:61 - error: Argument of type \"DepTypes | DepFlag\" cannot be assigned to parameter \"deptype\" of type \"str\" in function \"breadth_first_to_tree_edges\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:565:61 - error: Argument of type \"DepFlag | str | List[str] | Tuple[str, ...]\" cannot be assigned to parameter \"deptype\" of type \"str\" in function \"breadth_first_to_tree_edges\"\n-     Type \"DepTypes | DepFlag\" cannot be assigned to type \"str\"\n+     Type \"DepFlag | str | List[str] | Tuple[str, ...]\" cannot be assigned to type \"str\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:568:52 - error: Argument of type \"DepTypes | DepFlag\" cannot be assigned to parameter \"deptype\" of type \"str\" in function \"breadth_first_to_tree_nodes\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:568:52 - error: Argument of type \"DepFlag | str | List[str] | Tuple[str, ...]\" cannot be assigned to parameter \"deptype\" of type \"str\" in function \"breadth_first_to_tree_nodes\"\n-     Type \"DepTypes | DepFlag\" cannot be assigned to type \"str\"\n+     Type \"DepFlag | str | List[str] | Tuple[str, ...]\" cannot be assigned to type \"str\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/environment/environment.py:792:57 - error: Argument of type \"() -> None\" cannot be assigned to parameter \"acquire\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/environment/environment.py:792:57 - error: Argument of type \"() -> None\" cannot be assigned to parameter \"acquire\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"() -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"() -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/windows_os.py:52:19 - error: Argument of type \"str\" cannot be assigned to parameter \"env\" of type \"_ENV | None\" in function \"check_output\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/windows_os.py:52:19 - error: Argument of type \"str\" cannot be assigned to parameter \"env\" of type \"Mapping[bytes, StrOrBytesPath] | Mapping[str, StrOrBytesPath] | None\" in function \"check_output\"\n-     Type \"str\" cannot be assigned to type \"_ENV | None\"\n+     Type \"str\" cannot be assigned to type \"Mapping[bytes, StrOrBytesPath] | Mapping[str, StrOrBytesPath] | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:1094:44 - error: Argument of type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:1094:44 - error: Argument of type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:1096:48 - error: Argument of type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:1096:48 - error: Argument of type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:1105:48 - error: Argument of type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:1105:48 - error: Argument of type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:1111:44 - error: Argument of type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:1111:44 - error: Argument of type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:1115:52 - error: Argument of type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"ReleaseFnType | ContextManager\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:1115:52 - error: Argument of type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to parameter \"release\" of type \"(() -> bool) | ContextManager | None\" in function \"__init__\"\n-     Type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to type \"ReleaseFnType | ContextManager\"\n+     Type \"(t: Unknown, v: Unknown, tb: Unknown) -> None\" cannot be assigned to type \"(() -> bool) | ContextManager | None\"\n\n... (truncated 68 lines) ...\n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n-   /tmp/mypy_primer/projects/koda-validate/koda_validate/tuple.py:261:44 - error: Argument of type \"((Tuple[T1@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed, T7@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed, T7@typed, T8@typed]) -> (ErrType | None)) | None\" cannot be assigned to parameter \"validate_object\" of type \"((A@NTupleValidator) -> (ErrType | None)) | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/tuple.py:261:44 - error: Argument of type \"((Tuple[T1@typed]) -> (CoercionErr | ContainerErr | ExtraKeysErr | IndexErrs | KeyErrs | MapErr | MissingKeyErr | PredicateErrs[Unknown] | SetErrs | TypeErr | ValidationErrBase | UnionErrs | None)) | ((Tuple[T1@typed, T2@typed]) -> (CoercionErr | ContainerErr | ExtraKeysErr | IndexErrs | KeyErrs | MapErr | MissingKeyErr | PredicateErrs[Unknown] | SetErrs | TypeErr | ValidationErrBase | UnionErrs | None)) | ((Tuple[T1@typed, T2@typed, T3@typed]) -> (CoercionErr | ContainerErr | ExtraKeysErr | IndexErrs | KeyErrs | MapErr | MissingKeyErr | PredicateErrs[Unknown] | SetErrs | TypeErr | ValidationErrBase | UnionErrs | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed]) -> (CoercionErr | ContainerErr | ExtraKeysErr | IndexErrs | KeyErrs | MapErr | MissingKeyErr | PredicateErrs[Unknown] | SetErrs | TypeErr | ValidationErrBase | UnionErrs | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed]) -> (CoercionErr | ContainerErr | ExtraKeysErr | IndexErrs | KeyErrs | MapErr | MissingKeyErr | PredicateErrs[Unknown] | SetErrs | TypeErr | ValidationErrBase | UnionErrs | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed]) -> (CoercionErr | ContainerErr | ExtraKeysErr | IndexErrs | KeyErrs | MapErr | MissingKeyErr | PredicateErrs[Unknown] | SetErrs | TypeErr | ValidationErrBase | UnionErrs | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed, T7@typed]) -> (CoercionErr | ContainerErr | ExtraKeysErr | IndexErrs | KeyErrs | MapErr | MissingKeyErr | PredicateErrs[Unknown] | SetErrs | TypeErr | ValidationErrBase | UnionErrs | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed, T7@typed, T8@typed]) -> (CoercionErr | ContainerErr | ExtraKeysErr | IndexErrs | KeyErrs | MapErr | MissingKeyErr | PredicateErrs[Unknown] | SetErrs | TypeErr | ValidationErrBase | UnionErrs | None)) | None\" cannot be assigned to parameter \"validate_object\" of type \"((A@NTupleValidator) -> (CoercionErr | ContainerErr | ExtraKeysErr | IndexErrs | KeyErrs | MapErr | MissingKeyErr | PredicateErrs[Unknown] | SetErrs | TypeErr | ValidationErrBase | UnionErrs | None)) | None\" in function \"__init__\" (reportGeneralTypeIssues)\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:429:9 - error: Expression of type \"None\" cannot be assigned to parameter of type \"Schemas | Tuple[OutputGetter, Schemas] | List[Tuple[OutputGetter, Schemas]]\"\n+   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:429:9 - error: Expression of type \"None\" cannot be assigned to parameter of type \"DataFrameSchema | SeriesSchema | Tuple[OutputGetter, Schemas] | List[Tuple[OutputGetter, Schemas]]\"\n-     Type \"None\" cannot be assigned to type \"Schemas | Tuple[OutputGetter, Schemas] | List[Tuple[OutputGetter, Schemas]]\"\n+     Type \"None\" cannot be assigned to type \"DataFrameSchema | SeriesSchema | Tuple[OutputGetter, Schemas] | List[Tuple[OutputGetter, Schemas]]\"\n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-     Parameter 2 type mismatch: base parameter is type \"_ListLike[Unknown] | num | Series[Timestamp]\", override parameter is type \"float | Series[int] | Series[float] | Sequence[float]\" (reportIncompatibleMethodOverride)\n+     Parameter 2 type mismatch: base parameter is type \"num | ExtensionArray | Unknown | dict[_str, Unknown] | Sequence[Unknown] | IndexOpsMixin[Unknown] | Series[Timestamp]\", override parameter is type \"float | Series[int] | Series[float] | Sequence[float]\" (reportIncompatibleMethodOverride)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/redis/test_redis.py:69:22 - error: Argument of type \"int\" cannot be assigned to parameter \"keys\" of type \"_Key | Iterable[_Key]\" in function \"mget\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/redis/test_redis.py:69:22 - error: Argument of type \"int\" cannot be assigned to parameter \"keys\" of type \"str | bytes | Iterable[_Key]\" in function \"mget\"\n-     Type \"int\" cannot be assigned to type \"_Key | Iterable[_Key]\"\n+     Type \"int\" cannot be assigned to type \"str | bytes | Iterable[_Key]\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/redis/test_redis.py:495:22 - error: Argument of type \"int\" cannot be assigned to parameter \"keys\" of type \"_Key | Iterable[_Key]\" in function \"mget\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/redis/test_redis.py:495:22 - error: Argument of type \"int\" cannot be assigned to parameter \"keys\" of type \"str | bytes | Iterable[_Key]\" in function \"mget\"\n-     Type \"int\" cannot be assigned to type \"_Key | Iterable[_Key]\"\n+     Type \"int\" cannot be assigned to type \"str | bytes | Iterable[_Key]\"\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110a6ac254a19ac29065d",
    "number": 6172,
    "body": "… bound type is a generic class whose type parameters have default types (using PEP 696). This addresses #6171.",
    "head_branch": "issue6171",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.29x faster (54.1s -> 42.0s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed a false positive error \"TypeVar bound cannot be generic\" if the bound type is a generic class whose type parameters have default types (using PEP 696). This addresses #6171. (#6172)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110a7ac254a19ac29065e",
    "number": 6170,
    "body": "…eric class whose type parameters include defaults (PEP 696). This addresses #5944.",
    "head_branch": "issue5944",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/cog.py:243:30 - error: \"Never\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/cog.py:260:25 - error: Cannot access member \"recursively_remove_all_commands\" for type \"Group[None, ..., Any]\"\n+     Member \"recursively_remove_all_commands\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/cog.py:260:17 - error: Type of \"recursively_remove_all_commands\" is unknown (reportUnknownMemberType)\n- 7933 errors, 22 warnings, 0 informations \n+ 7934 errors, 22 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py): typechecking got 1.38x faster (46.5s -> 33.6s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug in the `isinstance` type narrowing logic when using a generic class whose type parameters include defaults (PEP 696). This addresses #5944. (#6170)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110a8ac254a19ac29065f",
    "number": 6168,
    "body": "…pec. The code should recursively apply solved type variables referenced in the function signature.",
    "head_branch": "paramSpec2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+ /tmp/mypy_primer/projects/steam.py/examples/basic_bot.py\n+   /tmp/mypy_primer/projects/steam.py/examples/basic_bot.py:20:2 - error: Argument of type \"(ctx: Context[Bot]) -> Coroutine[Any, Any, None]\" cannot be assigned to parameter \"callback\" of type \"((Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]) | ((Context[Any], **P@CallbackT) -> Coro[R@command])\" in function \"command\"\n+     Type \"(ctx: Context[Bot]) -> Coroutine[Any, Any, None]\" cannot be assigned to type \"((Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]) | ((Context[Any], **P@CallbackT) -> Coro[R@command])\"\n+       Type \"(ctx: Context[Bot]) -> Coroutine[Any, Any, None]\" cannot be assigned to type \"(Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]\"\n+         Function accepts too many positional parameters; expected 1 but received 2\n+           Parameter 1: type \"Cog[Bot] | Bot | None\" cannot be assigned to type \"Context[Bot]\"\n+             Type \"Cog[Bot] | Bot | None\" cannot be assigned to type \"Context[Bot]\"\n+       Type \"(ctx: Context[Bot]) -> Coroutine[Any, Any, None]\" cannot be assigned to type \"(Context[Any], **P@CallbackT) -> Coro[R@command]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/examples/basic_bot.py:42:2 - error: Argument of type \"(ctx: Context[Bot], sides: int = 6, rolls: int = 1) -> Coroutine[Any, Any, None]\" cannot be assigned to parameter \"callback\" of type \"((Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]) | ((Context[Any], **P@CallbackT) -> Coro[R@command])\" in function \"command\"\n+     Type \"(ctx: Context[Bot], sides: int = 6, rolls: int = 1) -> Coroutine[Any, Any, None]\" cannot be assigned to type \"((Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]) | ((Context[Any], **P@CallbackT) -> Coro[R@command])\"\n+       Type \"(ctx: Context[Bot], sides: int = 6, rolls: int = 1) -> Coroutine[Any, Any, None]\" cannot be assigned to type \"(Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]\"\n+         Parameter 1: type \"Cog[Bot] | Bot | None\" cannot be assigned to type \"Context[Bot]\"\n+           Type \"Cog[Bot] | Bot | None\" cannot be assigned to type \"Context[Bot]\"\n+             \"Bot\" is incompatible with \"Context[Bot]\"\n+         Parameter 2: type \"Context[Any]\" cannot be assigned to type \"int\"\n+           \"Context[Any]\" is incompatible with \"int\"\n+       Type \"(ctx: Context[Bot], sides: int = 6, rolls: int = 1) -> Coroutine[Any, Any, None]\" cannot be assigned to type \"(Context[Any], **P@CallbackT) -> Coro[R@command]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/examples/basic_bot.py:49:2 - error: Argument of type \"(ctx: Context[Bot], *choices: str) -> Coroutine[Any, Any, None]\" cannot be assigned to parameter \"callback\" of type \"((Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]) | ((Context[Any], **P@CallbackT) -> Coro[R@command])\" in function \"command\"\n+     Type \"(ctx: Context[Bot], *choices: str) -> Coroutine[Any, Any, None]\" cannot be assigned to type \"((Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]) | ((Context[Any], **P@CallbackT) -> Coro[R@command])\"\n+       Type \"(ctx: Context[Bot], *choices: str) -> Coroutine[Any, Any, None]\" cannot be assigned to type \"(Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]\"\n+         Parameter 1: type \"Cog[Bot] | Bot | None\" cannot be assigned to type \"Context[Bot]\"\n+           Type \"Cog[Bot] | Bot | None\" cannot be assigned to type \"Context[Bot]\"\n+             \"Bot\" is incompatible with \"Context[Bot]\"\n+         Parameter 2: type \"Context[Any]\" cannot be assigned to type \"str\"\n+           \"Context[Any]\" is incompatible with \"str\"\n+       Type \"(ctx: Context[Bot], *choices: str) -> Coroutine[Any, Any, None]\" cannot be assigned to type \"(Context[Any], **P@CallbackT) -> Coro[R@command]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/examples/csgo/casket.py\n+   /tmp/mypy_primer/projects/steam.py/examples/csgo/casket.py:27:6 - error: Argument of type \"(self: Self@MyBot, ctx: Context[Bot], *, casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to parameter \"callback\" of type \"CallbackT[CogT@group, P@group, R@group]\" in function \"group\"\n+     Type \"(self: Self@MyBot, ctx: Context[Bot], *, casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to type \"CallbackT[CogT@group, P@group, R@group]\"\n+       Type \"(self: Self@MyBot, ctx: Context[Bot], *, casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to type \"(CogT@group, Context[Any], **P@CallbackT) -> Coro[R@group]\"\n+         Parameter 1: type \"CogT@group\" cannot be assigned to type \"Self@MyBot\"\n+           Type \"Cog[Bot]* | Bot* | None\" cannot be assigned to type \"MyBot\"\n+             \"Bot*\" is incompatible with \"MyBot\"\n+       Type \"(self: Self@MyBot, ctx: Context[Bot], *, casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to type \"(Context[Any], **P@CallbackT) -> Coro[R@group]\"\n+         Parameter 1: type \"Context[Any]\" cannot be assigned to type \"Self@MyBot\"\n+           \"Context[Any]\" is incompatible with \"MyBot\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/examples/csgo/casket.py:41:6 - error: Argument of type \"(self: Self@MyBot, ctx: Context[Bot], item: BackpackItem[BaseUser], casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to parameter \"callback\" of type \"((Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]) | ((Context[Any], **P@CallbackT) -> Coro[R@command])\" in function \"command\"\n+     Type \"(self: Self@MyBot, ctx: Context[Bot], item: BackpackItem[BaseUser], casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to type \"((Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]) | ((Context[Any], **P@CallbackT) -> Coro[R@command])\"\n+       Type \"(self: Self@MyBot, ctx: Context[Bot], item: BackpackItem[BaseUser], casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to type \"(Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]\"\n+         Parameter 1: type \"Cog[Bot] | Bot | None\" cannot be assigned to type \"Self@MyBot\"\n+           Type \"Cog[Bot] | Bot | None\" cannot be assigned to type \"MyBot\"\n+             \"Bot\" is incompatible with \"MyBot\"\n+       Type \"(self: Self@MyBot, ctx: Context[Bot], item: BackpackItem[BaseUser], casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to type \"(Context[Any], **P@CallbackT) -> Coro[R@command]\"\n+         Parameter 1: type \"Context[Any]\" cannot be assigned to type \"Self@MyBot\"\n+           \"Context[Any]\" is incompatible with \"MyBot\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/examples/csgo/casket.py:50:6 - error: Argument of type \"(self: Self@MyBot, ctx: Context[Bot], item_id: int, casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to parameter \"callback\" of type \"((Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]) | ((Context[Any], **P@CallbackT) -> Coro[R@command])\" in function \"command\"\n+     Type \"(self: Self@MyBot, ctx: Context[Bot], item_id: int, casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to type \"((Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]) | ((Context[Any], **P@CallbackT) -> Coro[R@command])\"\n+       Type \"(self: Self@MyBot, ctx: Context[Bot], item_id: int, casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to type \"(Cog[Bot] | Bot | None, Context[Any], **P@CallbackT) -> Coro[R@command]\"\n+         Parameter 1: type \"Cog[Bot] | Bot | None\" cannot be assigned to type \"Self@MyBot\"\n+           Type \"Cog[Bot] | Bot | None\" cannot be assigned to type \"MyBot\"\n+             \"Bot\" is incompatible with \"MyBot\"\n+       Type \"(self: Self@MyBot, ctx: Context[Bot], item_id: int, casket: BackpackItem[BaseUser]) -> Coroutine[Any, Any, Message[PartialUser, Channel[Message[UserT@Message, ChannelT@Message], Clan | None, Group | None]] | None]\" cannot be assigned to type \"(Context[Any], **P@CallbackT) -> Coro[R@command]\"\n+         Parameter 1: type \"Context[Any]\" cannot be assigned to type \"Self@MyBot\"\n+           \"Context[Any]\" is incompatible with \"MyBot\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:865:5 - error: Overloaded implementation is not consistent with signature of overload 2\n\n... (truncated 100 lines) ...\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:285:12 - error: Expression of type \"(callback: (**_P@decorator) -> Awaitable[_T@decorator], /) -> ((**_P@decorator) -> _CoroT[_T@decorator])\" cannot be assigned to return type \"((**_P@log_task_exc) -> Awaitable[_T@log_task_exc]) -> ((**_P@log_task_exc) -> _CoroT[_T@log_task_exc])\"\n+     Type \"(callback: (**_P@decorator) -> Awaitable[_T@decorator], /) -> ((**_P@decorator) -> _CoroT[_T@decorator])\" cannot be assigned to type \"((**_P@log_task_exc) -> Awaitable[_T@log_task_exc]) -> ((**_P@log_task_exc) -> _CoroT[_T@log_task_exc])\"\n+       Function return type \"(**_P@decorator) -> _CoroT[_T@log_task_exc]\" is incompatible with type \"(**_P@log_task_exc) -> _CoroT[_T@log_task_exc]\"\n+         Type \"(**_P@decorator) -> _CoroT[_T@log_task_exc]\" cannot be assigned to type \"(**_P@log_task_exc) -> _CoroT[_T@log_task_exc]\" (reportGeneralTypeIssues)\n- 2344 errors, 9816 warnings, 0 informations \n+ 2345 errors, 9816 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1285:48 - error: Type text mismatch; expected \"str\" but received \"Unknown\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1285:17 - information: Type of \"instantiate(c2)\" is \"Unknown\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1285:17 - information: Type of \"instantiate(c2)\" is \"str\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1286:35 - error: Type text mismatch; expected \"type[Builds[type[str]]]\" but received \"type[Builds[Unknown]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1286:17 - information: Type of \"c2\" is \"type[Builds[Unknown]]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1286:17 - information: Type of \"c2\" is \"type[Builds[type[str]]]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1295:49 - error: Type text mismatch; expected \"Partial[str]\" but received \"Partial[Unknown]\"\n-   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1295:17 - information: Type of \"instantiate(pc2)\" is \"Partial[Unknown]\"\n+   /tmp/mypy_primer/projects/hydra-zen/tests/annotations/declarations.py:1295:17 - information: Type of \"instantiate(pc2)\" is \"Partial[str]\"\n- 187 errors, 0 warnings, 180 informations \n+ 184 errors, 0 warnings, 180 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:310:12 - error: Expression of type \"(func: (**P@actual_decorator) -> T@actual_decorator) -> ((**P@actual_decorator) -> T@actual_decorator)\" cannot be assigned to return type \"((**P@deprecated) -> T@deprecated) -> ((**P@deprecated) -> T@deprecated)\"\n+     Type \"(func: (**P@actual_decorator) -> T@actual_decorator) -> ((**P@actual_decorator) -> T@actual_decorator)\" cannot be assigned to type \"((**P@deprecated) -> T@deprecated) -> ((**P@deprecated) -> T@deprecated)\"\n+       Function return type \"(**P@actual_decorator) -> T@deprecated\" is incompatible with type \"(**P@deprecated) -> T@deprecated\"\n+         Type \"(**P@actual_decorator) -> T@deprecated\" cannot be assigned to type \"(**P@deprecated) -> T@deprecated\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:691:13 - error: Arguments for ParamSpec \"P@MaybeAwaitableFunc\" are missing (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py:388:35 - error: Argument of type \"CooldownFunction[Hashable]\" cannot be assigned to parameter \"f\" of type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\" in function \"maybe_coroutine\"\n+     Type \"CooldownFunction[Hashable]\" cannot be assigned to type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\"\n+       Type \"(Interaction[Any]) -> Hashable\" cannot be assigned to type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py:388:40 - error: Param spec \"P@maybe_coroutine\" has no bound value (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py:390:64 - error: Argument of type \"CooldownFunction[Cooldown | None]\" cannot be assigned to parameter \"f\" of type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\" in function \"maybe_coroutine\"\n+     Type \"CooldownFunction[Cooldown | None]\" cannot be assigned to type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\"\n+       Type \"(Interaction[Any]) -> (Cooldown | None)\" cannot be assigned to type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py:390:73 - error: Param spec \"P@maybe_coroutine\" has no bound value (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:973:42 - error: Argument of type \"(interaction: Interaction[Client], /) -> Coroutine[Any, Any, bool]\" cannot be assigned to parameter \"f\" of type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\" in function \"maybe_coroutine\"\n+     Type \"(interaction: Interaction[Client], /) -> Coroutine[Any, Any, bool]\" cannot be assigned to type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:973:73 - error: Param spec \"P@maybe_coroutine\" has no bound value (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:979:45 - error: Argument of type \"Check\" cannot be assigned to parameter \"f\" of type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\" in function \"maybe_coroutine\"\n+     Type \"Check\" cannot be assigned to type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:979:52 - error: Param spec \"P@maybe_coroutine\" has no bound value (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:1929:16 - error: Expression of type \"(func: CommandCallback[GroupT@decorator, P@decorator, T@decorator]) -> Command[GroupT@decorator, P@decorator, T@decorator]\" cannot be assigned to return type \"(CommandCallback[GroupT@command, P@command, T@command]) -> Command[GroupT@command, P@command, T@command]\"\n+     Type \"(func: CommandCallback[GroupT@decorator, P@decorator, T@decorator]) -> Command[GroupT@decorator, P@decorator, T@decorator]\" cannot be assigned to type \"(CommandCallback[GroupT@command, P@command, T@command]) -> Command[GroupT@command, P@command, T@command]\"\n+       Function return type \"Command[GroupT@command, P@decorator, T@command]\" is incompatible with type \"Command[GroupT@command, P@command, T@command]\"\n+         \"Command[GroupT@command, P@decorator, T@command]\" is incompatible with \"Command[GroupT@command, P@command, T@command]\"\n+           Type parameter \"P@Command\" is invariant, but \"P@decorator\" is not the same as \"P@command\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:1988:12 - error: Expression of type \"(func: CommandCallback[GroupT@decorator, P@decorator, T@decorator]) -> Command[GroupT@decorator, P@decorator, T@decorator]\" cannot be assigned to return type \"(CommandCallback[GroupT@command, P@command, T@command]) -> Command[GroupT@command, P@command, T@command]\"\n+     Type \"(func: CommandCallback[GroupT@decorator, P@decorator, T@decorator]) -> Command[GroupT@decorator, P@decorator, T@decorator]\" cannot be assigned to type \"(CommandCallback[GroupT@command, P@command, T@command]) -> Command[GroupT@command, P@command, T@command]\"\n+       Function return type \"Command[GroupT@command, P@decorator, T@command]\" is incompatible with type \"Command[GroupT@command, P@command, T@command]\"\n+         \"Command[GroupT@command, P@decorator, T@command]\" is incompatible with \"Command[GroupT@command, P@command, T@command]\"\n+           Type parameter \"P@Command\" is invariant, but \"P@decorator\" is not the same as \"P@command\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:180:74 - error: Param spec \"P@maybe_coroutine\" has no bound value (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/tree.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/tree.py:899:16 - error: Expression of type \"(func: CommandCallback[Group, P@decorator, T@decorator]) -> Command[Group, P@decorator, T@decorator]\" cannot be assigned to return type \"(CommandCallback[Group, P@command, T@command]) -> Command[Group, P@command, T@command]\"\n+     Type \"(func: CommandCallback[Group, P@decorator, T@decorator]) -> Command[Group, P@decorator, T@decorator]\" cannot be assigned to type \"(CommandCallback[Group, P@command, T@command]) -> Command[Group, P@command, T@command]\"\n+       Function return type \"Command[Group, P@decorator, T@command]\" is incompatible with type \"Command[Group, P@command, T@command]\"\n+         \"Command[Group, P@decorator, T@command]\" is incompatible with \"Command[Group, P@command, T@command]\"\n+           Type parameter \"P@Command\" is invariant, but \"P@decorator\" is not the same as \"P@command\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py:294:16 - error: Expression of type \"(func: CommandCallback[Any, ContextT@decorator, P@decorator, T@decorator]) -> HybridCommand[Any, P@hybrid_command, T@decorator]\" cannot be assigned to return type \"(CommandCallback[Any, ContextT@hybrid_command, P@hybrid_command, T@hybrid_command]) -> HybridCommand[Any, P@hybrid_command, T@hybrid_command]\"\n+     Type \"(func: CommandCallback[Any, ContextT@decorator, P@decorator, T@decorator]) -> HybridCommand[Any, P@hybrid_command, T@decorator]\" cannot be assigned to type \"(CommandCallback[Any, ContextT@hybrid_command, P@hybrid_command, T@hybrid_command]) -> HybridCommand[Any, P@hybrid_command, T@hybrid_command]\"\n+       Function return type \"HybridCommand[Any, P@hybrid_command, T@hybrid_command]\" is incompatible with type \"HybridCommand[Any, P@hybrid_command, T@hybrid_command]\"\n+         \"discord.ext.commands.hybrid.HybridCommand\" is incompatible with \"discord.ext.commands.hybrid.HybridCommand\"\n+           Type parameter \"P@HybridCommand\" is invariant, but \"P@hybrid_command\" is not the same as \"P@hybrid_command\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py:318:16 - error: Expression of type \"(func: CommandCallback[Any, ContextT@decorator, P@decorator, T@decorator]) -> HybridGroup[Any, P@hybrid_group, T@decorator]\" cannot be assigned to return type \"(CommandCallback[Any, ContextT@hybrid_group, P@hybrid_group, T@hybrid_group]) -> HybridGroup[Any, P@hybrid_group, T@hybrid_group]\"\n+     Type \"(func: CommandCallback[Any, ContextT@decorator, P@decorator, T@decorator]) -> HybridGroup[Any, P@hybrid_group, T@decorator]\" cannot be assigned to type \"(CommandCallback[Any, ContextT@hybrid_group, P@hybrid_group, T@hybrid_group]) -> HybridGroup[Any, P@hybrid_group, T@hybrid_group]\"\n+       Function return type \"HybridGroup[Any, P@hybrid_group, T@hybrid_group]\" is incompatible with type \"HybridGroup[Any, P@hybrid_group, T@hybrid_group]\"\n+         \"discord.ext.commands.hybrid.HybridGroup\" is incompatible with \"discord.ext.commands.hybrid.HybridGroup\"\n+           Type parameter \"P@HybridGroup\" is invariant, but \"P@hybrid_group\" is not the same as \"P@hybrid_group\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cog.py:704:31 - error: Argument of type \"() -> Coroutine[Any, Any, None]\" cannot be assigned to parameter \"f\" of type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\" in function \"maybe_coroutine\"\n+     Type \"() -> Coroutine[Any, Any, None]\" cannot be assigned to type \"MaybeAwaitableFunc[P@maybe_coroutine, T@maybe_coroutine]\" (reportGeneralTypeIssues)\n\n... (truncated 60 lines) ...\n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/effect/option.py\n+   /tmp/mypy_primer/projects/Expression/expression/effect/option.py:40:16 - error: Expression of type \"(**_P@__call__) -> Option[Any]\" cannot be assigned to return type \"(**_P@__call__) -> Option[_TSource@OptionBuilder]\"\n+     Type \"(**_P@__call__) -> Option[Any]\" cannot be assigned to type \"(**_P@__call__) -> Option[_TSource@OptionBuilder]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/Expression/expression/effect/result.py\n+   /tmp/mypy_primer/projects/Expression/expression/effect/result.py:45:16 - error: Expression of type \"(**_P@__call__) -> Result[Any, _TError@ResultBuilder]\" cannot be assigned to return type \"(**_P@__call__) -> Result[_TSource@ResultBuilder, _TError@ResultBuilder]\"\n+     Type \"(**_P@__call__) -> Result[Any, _TError@ResultBuilder]\" cannot be assigned to type \"(**_P@__call__) -> Result[_TSource@ResultBuilder, _TError@ResultBuilder]\" (reportGeneralTypeIssues)\n- 201 errors, 0 warnings, 0 informations \n+ 203 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110a9ac254a19ac290660",
    "number": 6167,
    "body": null,
    "head_branch": "paramSpec1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110aaac254a19ac290661",
    "number": 6163,
    "body": "…ve errors in hydra-zen. This change involves removing a heuristic from overload matching that attempted to eliminate a false positive error for `x: list[str] = \"a,b\".split(\",\")`. This addresses #6160.",
    "head_branch": "issue6160",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndiscord.py (https://github.com/Rapptz/discord.py)\n-   /tmp/mypy_primer/projects/discord.py/discord/audit_logs.py:394:47 - warning: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/discord.py/discord/audit_logs.py:400:47 - warning: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:336:49 - warning: Unnecessary \"# type: ignore\" comment\n- 48 errors, 14 warnings, 0 informations \n+ 48 errors, 11 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1464:22 - error: Expression of type \"DataFrame\" cannot be assigned to declared type \"Series[Unknown]\"\n+     \"DataFrame\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1521:39 - error: Argument of type \"Timestamp\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[_T@list]\" in function \"__init__\"\n+     \"Timestamp\" is incompatible with protocol \"Iterable[_T@list]\"\n+       \"__iter__\" is not present (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:35:21 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"Series[Unknown]\"\n+     \"Timestamp\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:37:21 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"Series[Unknown]\"\n+     \"Timestamp\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:38:21 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"Series[Unknown]\"\n+     \"Timestamp\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:41:28 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"DatetimeIndex\"\n+     \"Timestamp\" is incompatible with \"DatetimeIndex\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:44:28 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"DatetimeIndex\"\n+     \"Timestamp\" is incompatible with \"DatetimeIndex\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:45:28 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"DatetimeIndex\"\n+     \"Timestamp\" is incompatible with \"DatetimeIndex\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:46:28 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"DatetimeIndex\"\n+     \"Timestamp\" is incompatible with \"DatetimeIndex\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:47:21 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"Series[Unknown]\"\n+     \"Timestamp\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:87:28 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"DatetimeIndex\"\n+     \"Timestamp\" is incompatible with \"DatetimeIndex\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:1237:25 - error: Expression of type \"TimestampSeries\" cannot be assigned to declared type \"Series[str]\"\n+     \"TimestampSeries\" is incompatible with \"Series[str]\"\n+       Type parameter \"S1@Series\" is invariant, but \"Timestamp\" is not the same as \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_timefuncs.py:74:26 - error: Expression of type \"Timedelta\" cannot be assigned to declared type \"Timestamp\"\n+     \"Timedelta\" is incompatible with \"Timestamp\" (reportGeneralTypeIssues)\n- 1428 errors, 0 warnings, 0 informations \n+ 1441 errors, 0 warnings, 0 informations \n\n```",
      "@Dr-Irv, FYI, this bug fix may have an impact on `pandas-stubs`. I'm not able to repro the above results from `mypy_primer` when I run pyright on `pandas-stubs` locally, so I'm guessing that the above issues are all caused by not having the full dependencies installed in the `mypy_primer` script. I'm going to therefore assume that the above is just noise and not indicative of a real issue. Just wanted to give you a heads up in case you want to independently confirm.",
      "> @Dr-Irv, FYI, this bug fix may have an impact on `pandas-stubs`. I'm not able to repro the above results from `mypy_primer` when I run pyright on `pandas-stubs` locally, so I'm guessing that the above issues are all caused by not having the full dependencies installed in the `mypy_primer` script. I'm going to therefore assume that the above is just noise and not indicative of a real issue. Just wanted to give you a heads up in case you want to independently confirm.\r\n\r\n@erictraut is this released yet so we can test?",
      "This change was included in pyright 1.1.332, which was released last week Tuesday. It was also in last week's prerelease version of Pylance. It will be in this week's production Pylance release (normally published every Wed).",
      "> This change was included in pyright 1.1.332, which was released last week Tuesday. It was also in last week's prerelease version of Pylance. It will be in this week's production Pylance release (normally published every Wed).\r\n\r\nOK, it looks like this is just noise, because in https://github.com/pandas-dev/pandas-stubs/pull/802 our CI tests are passing with 1.1.332"
    ],
    "commit_messages": [
      "Fixed a regression in overload matching that resulted in false positive errors in hydra-zen. This change involves removing a heuristic from overload matching that attempted to eliminate a false positive error for `x: list[str] = \"a,b\".split(\",\")`. This addresses #6160. (#6163)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110abac254a19ac290662",
    "number": 6162,
    "body": "…type evaluation under certain circumstances. This addresses #6141.",
    "head_branch": "issue6141-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in ParamSpec type matching that resulted in an incorrect type evaluation under certain circumstances. This addresses #6141. (#6162)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110acac254a19ac290663",
    "number": 6161,
    "body": "…type evaluation under certain circumstances. This addresses #6141.",
    "head_branch": "issue6141",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:175:40 - error: Argument of type \"((tanjun.clients.Client) -> None) | ((tanjun.abc.Client) -> None)\" cannot be assigned to parameter \"wrapped\" of type \"(**_PWrapped@update_wrapper) -> _RWrapped@update_wrapper\" in function \"update_wrapper\"\n+     Type \"((tanjun.clients.Client) -> None) | ((tanjun.abc.Client) -> None)\" cannot be assigned to type \"(Client) -> None\"\n+       Type \"(tanjun.clients.Client) -> None\" cannot be assigned to type \"(tanjun.abc.Client) -> None\"\n+         Parameter 1: type \"Client\" cannot be assigned to type \"Client\"\n+           \"tanjun.abc.Client\" is incompatible with \"tanjun.clients.Client\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:212:40 - error: Argument of type \"((tanjun.clients.Client) -> None) | ((tanjun.abc.Client) -> None)\" cannot be assigned to parameter \"wrapped\" of type \"(**_PWrapped@update_wrapper) -> _RWrapped@update_wrapper\" in function \"update_wrapper\"\n+     Type \"((tanjun.clients.Client) -> None) | ((tanjun.abc.Client) -> None)\" cannot be assigned to type \"(Client) -> None\"\n+       Type \"(tanjun.clients.Client) -> None\" cannot be assigned to type \"(tanjun.abc.Client) -> None\"\n+         Parameter 1: type \"Client\" cannot be assigned to type \"Client\"\n+           \"tanjun.abc.Client\" is incompatible with \"tanjun.clients.Client\" (reportGeneralTypeIssues)\n- 2344 errors, 9816 warnings, 0 informations \n+ 2346 errors, 9816 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110adac254a19ac290664",
    "number": 6159,
    "body": "…`reportIncompatibleVariableOverride` and `reportImplicitOverride`) so they apply to stub files. Previously, these were skipped for stubs. This addresses #6158.",
    "head_branch": "issue6158",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:104:5 - error: \"min\" overrides symbol of same name in class \"timedelta\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Timedelta\" is not the same as base type \"timedelta\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:105:5 - error: \"max\" overrides symbol of same name in class \"timedelta\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Timedelta\" is not the same as base type \"timedelta\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timedeltas.pyi:106:5 - error: \"resolution\" overrides symbol of same name in class \"timedelta\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Timedelta\" is not the same as base type \"timedelta\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timestamps.pyi:50:5 - error: \"min\" overrides symbol of same name in class \"datetime\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Timestamp\" is not the same as base type \"datetime\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timestamps.pyi:51:5 - error: \"max\" overrides symbol of same name in class \"datetime\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Timestamp\" is not the same as base type \"datetime\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timestamps.pyi:53:5 - error: \"resolution\" overrides symbol of same name in class \"date\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Timedelta\" is not the same as base type \"timedelta\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timestamps.pyi:120:9 - error: Method \"combine\" overrides class \"datetime\" in an incompatible manner\n+     Positional parameter count mismatch; base method has 4, but override has 3\n+     Return type mismatch: base method returns type \"Timestamp\", override returns type \"datetime\"\n+       \"datetime\" is incompatible with \"Timestamp\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timestamps.pyi:135:9 - error: Method \"replace\" overrides class \"datetime\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"SupportsIndex\", override parameter is type \"int | None\"\n+     Parameter 3 type mismatch: base parameter is type \"SupportsIndex\", override parameter is type \"int | None\"\n+     Parameter 4 type mismatch: base parameter is type \"SupportsIndex\", override parameter is type \"int | None\"\n+     Parameter 5 type mismatch: base parameter is type \"SupportsIndex\", override parameter is type \"int | None\"\n+     Parameter 6 type mismatch: base parameter is type \"SupportsIndex\", override parameter is type \"int | None\"\n+     Parameter 7 type mismatch: base parameter is type \"SupportsIndex\", override parameter is type \"int | None\"\n+     Parameter 8 type mismatch: base parameter is type \"SupportsIndex\", override parameter is type \"int | None\"\n+     Parameter \"fold\" is missing in override\n+     ... (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timestamps.pyi:151:9 - error: Method \"strptime\" overrides class \"datetime\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"str\", override parameter is type \"Never\"\n+     Parameter 3 type mismatch: base parameter is type \"str\", override parameter is type \"Never\"\n+       Type \"str\" cannot be assigned to type \"Never\"\n+       Type \"str\" cannot be assigned to type \"Never\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/_libs/tslibs/timestamps.pyi:210:9 - error: Method \"__sub__\" overrides class \"datetime\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/arraylike.pyi\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/arraylike.pyi:10:9 - error: Method \"__eq__\" overrides class \"object\" in an incompatible manner\n+     Return type mismatch: base method returns type \"bool\", override returns type \"Self@OpsMixin\"\n+       \"OpsMixin\" is incompatible with \"bool\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/arraylike.pyi:11:9 - error: Method \"__ne__\" overrides class \"object\" in an incompatible manner\n+     Return type mismatch: base method returns type \"bool\", override returns type \"Self@OpsMixin\"\n+       \"OpsMixin\" is incompatible with \"bool\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/generic.pyi:57:5 - error: \"__hash__\" overrides method of same name in class \"object\" with incompatible type \"None\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1448:9 - error: \"T\" incorrectly overrides property of same name in class \"IndexOpsMixin\"\n+     Property method \"fget\" is incompatible\n+       Return type mismatch: base method returns type \"Self@IndexOpsMixin[S1@IndexOpsMixin]\", override returns type \"Series[S1@Series]\"\n+         \"Series[S1@Series]\" is incompatible with \"IndexOpsMixin[S1@IndexOpsMixin]\"\n+           Type parameter \"S1@IndexOpsMixin\" is invariant, but \"S1@Series\" is not the same as \"S1@IndexOpsMixin\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1466:9 - error: Method \"__and__\" overrides class \"OpsMixin\" in an incompatible manner\n+     No overload signature in override is compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1469:9 - error: Method \"__eq__\" overrides class \"OpsMixin\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Series[S1@Series]\", override returns type \"Series[_bool]\"\n+       \"Series[_bool]\" is incompatible with \"Series[S1@Series]\"\n+         Type parameter \"S1@Series\" is invariant, but \"_bool\" is not the same as \"S1@Series\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1469:9 - error: Method \"__eq__\" overrides class \"object\" in an incompatible manner\n+     Return type mismatch: base method returns type \"bool\", override returns type \"Series[_bool]\"\n+       \"Series[_bool]\" is incompatible with \"bool\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1471:9 - error: Method \"__ge__\" overrides class \"OpsMixin\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Series[S1@Series]\", override returns type \"Series[_bool]\"\n+       \"Series[_bool]\" is incompatible with \"Series[S1@Series]\"\n+         Type parameter \"S1@Series\" is invariant, but \"_bool\" is not the same as \"S1@Series\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1474:9 - error: Method \"__gt__\" overrides class \"OpsMixin\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Series[S1@Series]\", override returns type \"Series[_bool]\"\n+       \"Series[_bool]\" is incompatible with \"Series[S1@Series]\"\n+         Type parameter \"S1@Series\" is invariant, but \"_bool\" is not the same as \"S1@Series\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1477:9 - error: Method \"__le__\" overrides class \"OpsMixin\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Series[S1@Series]\", override returns type \"Series[_bool]\"\n+       \"Series[_bool]\" is incompatible with \"Series[S1@Series]\"\n+         Type parameter \"S1@Series\" is invariant, but \"_bool\" is not the same as \"S1@Series\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1480:9 - error: Method \"__lt__\" overrides class \"OpsMixin\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Series[S1@Series]\", override returns type \"Series[_bool]\"\n+       \"Series[_bool]\" is incompatible with \"Series[S1@Series]\"\n+         Type parameter \"S1@Series\" is invariant, but \"_bool\" is not the same as \"S1@Series\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1490:9 - error: Method \"__ne__\" overrides class \"OpsMixin\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Series[S1@Series]\", override returns type \"Series[_bool]\"\n+       \"Series[_bool]\" is incompatible with \"Series[S1@Series]\"\n+         Type parameter \"S1@Series\" is invariant, but \"_bool\" is not the same as \"S1@Series\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1490:9 - error: Method \"__ne__\" overrides class \"object\" in an incompatible manner\n+     Return type mismatch: base method returns type \"bool\", override returns type \"Series[_bool]\"\n+       \"Series[_bool]\" is incompatible with \"bool\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1498:9 - error: Method \"__or__\" overrides class \"OpsMixin\" in an incompatible manner\n+     No overload signature in override is compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1509:9 - error: Method \"__rand__\" overrides class \"OpsMixin\" in an incompatible manner\n\n... (truncated 164 lines) ...\n\n```",
      "@Dr-Irv, this change might affect pandas-stubs. See issue #6158 for details. It looks like you don't have the `reportIncompatibleVariableOverride` and `reportIncompatibleMethodOverride` checks enabled in your CI tests. If you do, you may need to disable these.",
      "> @Dr-Irv, this change might affect pandas-stubs. See issue #6158 for details. It looks like you don't have the `reportIncompatibleVariableOverride` and `reportIncompatibleMethodOverride` checks enabled in your CI tests. If you do, you may need to disable these.\r\n\r\nThanks.  We had `#type: ignore[override]` for `mypy` all over the place, and have now addressed this pyright change in https://github.com/pandas-dev/pandas-stubs/pull/802/"
    ],
    "commit_messages": [
      "Changed override-related checks (`reportIncompatibleMethodOverride`, `reportIncompatibleVariableOverride` and `reportImplicitOverride`) so they apply to stub files. Previously, these were skipped for stubs. This addresses #6158. (#6159)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110aeac254a19ac290665",
    "number": 6155,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4059\r\n\r\nThings I asked for comments on when initially posting this PR:\r\n1. Is it correct to set `isThirdPartyImport` to `true` on `SourceFile` and `SourceFileInfo` only when `moduleNameAndType.importType === ImportType.ThirdParty`? We could have done that before, so I'm not sure if I'm missing some complexity here.\r\n2. When calling `_shouldWalkUp` if `current` is outside of the `root` directory, the return value of `_shouldWalkUp` is based on comparing the lengths of the two paths which seems wrong since they are unrelated. For example, if `current` is `%LOCALAPPDATA%\\Programs\\Python\\Python311\\Lib\"` and `root` is the workspace root, their relative lengths are irrelevant. Should `pathUtils.containsPath` be getting called somewhere? Or am I using `_shouldWalkUp` incorrectly?",
    "head_branch": "pylance4059",
    "is_a_fork": true,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.28x faster (75.6s -> 59.2s)\n(Performance measurements are based on a single noisy sample)\n\n```",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "> Is it correct to set isThirdPartyImport to true on SourceFile and SourceFileInfo only when moduleNameAndType.importType === ImportType.ThirdParty? We could have done that before, so I'm not sure if I'm missing some complexity here.\r\n\r\nwhen I looked it last time, this one was when we set it as `third party` even if `importType` is not `ThirdParty`\r\n\r\nhttps://github.com/microsoft/pyright/blob/main/packages/pyright-internal/src/analyzer/program.ts#L1320\r\n\r\nso, when `ThirdParty` is set, `isThridPartyImport` is always true, but when `Local` is imported by `ThirdPartyImport`, then it is considered `ThirdPartyImport` even if it is `Local`.\r\n",
      "> when I looked it last time, this one was when we set it as `third party` even if `importType` is not `ThirdParty`\r\n> \r\n> https://github.com/microsoft/pyright/blob/main/packages/pyright-internal/src/analyzer/program.ts#L1320\r\n> \r\n> so, when `ThirdParty` is set, `isThridPartyImport` is always true, but when `Local` is imported by `ThirdPartyImport`, then it is considered `ThirdPartyImport` even if it is `Local`.\r\n\r\nYeah, I saw that code, but since `_createInterimFile` is creating a file rather than analyzing an import, the \"local import from 3rd party file\" logic didn't seem relevant to me in this scenario.",
      "> Yeah, I saw that code, but since _createInterimFile is creating a file rather than analyzing an import, the \"local import from 3rd party file\" logic didn't seem relevant to me in this scenario.\r\n\r\nso, currently, if you have a `file/module` in `typings` or `extraPath` (ex, typings/pandas/core/accessor.py), and `pandas` package has absolute path `from pandas.core import accessor` rather than `relative path` somewhere, it could load one in `typings` rather than one in `pandas` package.\r\n\r\npyright supports this kind of `shadowing` so that user can provide per file `stub` in `typing` folder as long as I know.\r\n\r\nif those files are marked as `user files` (match include/exclude in configOption), then we create `sourceFileInfo` when `program` is created. but if they are not and if they are brought into `program` by other `sourceFile` then they are marked as `third party`\r\n\r\nnow question is if that file is brought into the program by either `interimFile` or `setFileOpen`, how should we mark it. `isThridParty`? or not.\r\n\r\nmight be fine to just not mark it. I am just saying difference on if that file is loaded in program differently, it might have marked as `isThirdParty`",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndiscord.py (https://github.com/Rapptz/discord.py): typechecking got 1.43x faster (50.8s -> 35.7s)\n(Performance measurements are based on a single noisy sample)\n\n```",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Set `isThirdPartyImport` and `isThirdPartyPyTypedPresent` for interim files (#6155)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110afac254a19ac290666",
    "number": 6154,
    "body": "…rgument is a metaclass (a subclass of `type`). This addresses #6152.",
    "head_branch": "issue6152-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in the `issubclass` type narrowing logic when the first argument is a metaclass (a subclass of `type`). This addresses #6152. (#6154)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110afac254a19ac290667",
    "number": 6153,
    "body": "…ter class (the second argument) is a metaclass (a subclass of `type`).",
    "head_branch": "issue6152-1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in the isinstance type guard logic when the specified filter class (the second argument) is a metaclass (a subclass of `type`). (#6153)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110b0ac254a19ac290668",
    "number": 6151,
    "body": "… #6144.",
    "head_branch": "issue6144",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added logic to detect illegal use of the symbol `Any`. This addresses #6144. (#6151)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110b1ac254a19ac290669",
    "number": 6143,
    "body": "…unctional difference.",
    "head_branch": "issue6139-1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added common routine for self specialization. Cleaned up a test. No functional difference. (#6143)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110b2ac254a19ac29066a",
    "number": 6142,
    "body": "… converted to a callable for a generic class. This addresses #6139.",
    "head_branch": "issue6139",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:113:35 - error: Argument of type \"Unknown\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"Unknown\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:239:28 - error: Cannot access member \"_start_mark\" for type \"object*\"\n+     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:355:47 - error: Argument of type \"tuple[type, Any]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[type, Any]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:366:42 - error: \"__getitem__\" method not defined on type \"object*\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:407:53 - error: Cannot assign member \"format_updates\" for type \"Configuration\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"Dict[str, List[str]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"list[_T@list]\" is not the same as \"List[str]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1946:49 - error: Expression of type \"defaultdict[Unknown, set[_T@set]]\" cannot be assigned to declared type \"Dict[str, Set[str]]\"\n+     \"defaultdict[Unknown, set[_T@set]]\" is incompatible with \"Dict[str, Set[str]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"set[_T@set]\" is not the same as \"Set[str]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:3122:34 - error: Argument of type \"tuple[Unknown, Unknown] | Unknown\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[Unknown, Unknown] | Unknown\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4539:29 - error: Cannot access member \"spec\" for type \"object*\"\n+     Member \"spec\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4570:40 - error: Cannot access member \"depflag\" for type \"object*\"\n+     Member \"depflag\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:338:33 - error: Argument of type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:352:33 - error: Argument of type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/__init__.py:459:47 - error: Cannot access member \"spec\" for type \"object*\"\n+     Member \"spec\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/__init__.py:459:65 - error: Cannot access member \"spec\" for type \"object*\"\n+     Member \"spec\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/arch.py:70:29 - error: Cannot access member \"family\" for type \"object*\"\n+     Member \"family\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/arch.py:76:55 - error: Cannot access member \"ancestors\" for type \"object*\"\n+     Member \"ancestors\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:162:28 - error: Argument of type \"tuple[Unknown, ...]\" cannot be assigned to parameter \"__element\" of type \"_T@set\" in function \"add\"\n+     Type \"tuple[Unknown, ...]\" cannot be assigned to type \"_T@set\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:176:59 - error: Argument of type \"set[_T@set]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n+     \"set[_T@set]\" is incompatible with \"Iterable[SupportsRichComparisonT@sorted]\"\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"_T@set\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n+         Type \"_T@set\" cannot be assigned to type \"SupportsRichComparison\"\n+           Type \"_T@set\" cannot be assigned to type \"SupportsRichComparison\"\n+             \"object*\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n+             \"object*\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:185:29 - error: Argument of type \"set[_T@set]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n+     \"set[_T@set]\" is incompatible with \"Iterable[SupportsRichComparisonT@sorted]\"\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"_T@set\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n+         Type \"_T@set\" cannot be assigned to type \"SupportsRichComparison\"\n+           Type \"_T@set\" cannot be assigned to type \"SupportsRichComparison\"\n+             \"object*\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n+             \"object*\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/modules/__init__.py:330:55 - error: Cannot access member \"spec\" for type \"object*\"\n+     Member \"spec\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:121:40 - error: Argument of type \"str\" cannot be assigned to parameter \"__element\" of type \"_T@set\" in function \"add\"\n+     Type \"str\" cannot be assigned to type \"_T@set\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:122:12 - error: Expression of type \"defaultdict[Unknown, set[_T@set]]\" cannot be assigned to return type \"Dict[str, Set[str]]\"\n+     \"defaultdict[Unknown, set[_T@set]]\" is incompatible with \"Dict[str, Set[str]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"set[_T@set]\" is not the same as \"Set[str]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:367:12 - error: Expression of type \"defaultdict[Unknown, list[_T@list]]\" cannot be assigned to return type \"Dict[str, List[DetectedPackage]]\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"Dict[str, List[DetectedPackage]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"list[_T@list]\" is not the same as \"List[DetectedPackage]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:361:35 - error: Argument of type \"tuple[str, ...]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[str, ...]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:387:36 - error: Argument of type \"tuple[str, ...]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[str, ...]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:459:63 - error: \"object*\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1038:73 - error: Cannot access member \"version\" for type \"object*\"\n+     Member \"version\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1053:25 - error: Argument of type \"set[_T@set]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n+     \"set[_T@set]\" is incompatible with \"Iterable[SupportsRichComparisonT@sorted]\"\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"_T@set\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n+         Type \"_T@set\" cannot be assigned to type \"SupportsRichComparison\"\n+           Type \"_T@set\" cannot be assigned to type \"SupportsRichComparison\"\n+             \"object*\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n+             \"object*\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1280:17 - error: \"object*\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1293:17 - error: \"object*\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1425:13 - error: Argument of type \"str\" cannot be assigned to parameter \"__key\" of type \"_KT@dict\" in function \"__setitem__\"\n+     Type \"str\" cannot be assigned to type \"_KT@dict\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1425:13 - error: Argument of type \"tuple[int, Unknown]\" cannot be assigned to parameter \"__value\" of type \"_VT@dict\" in function \"__setitem__\"\n+     Type \"tuple[int, Unknown]\" cannot be assigned to type \"_VT@dict\" (reportGeneralTypeIssues)\n\n... (truncated 57 lines) ...\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:222:57 - error: Cannot assign member \"driver_args\" for type \"Config\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"DefaultDict[str, List[str]]\"\n+       Type parameter \"_VT@defaultdict\" is invariant, but \"list[_T@list]\" is not the same as \"List[str]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:224:13 - error: Argument of type \"list[str]\" cannot be assigned to parameter \"__value\" of type \"list[_T@list]\" in function \"__setitem__\"\n+     \"list[str]\" is incompatible with \"list[_T@list]\"\n+       Type parameter \"_T@list\" is invariant, but \"str\" is not the same as \"_T@list\"\n+       Consider switching from \"list\" to \"Sequence\" which is covariant (reportGeneralTypeIssues)\n- 15 errors, 37 warnings, 0 informations \n+ 17 errors, 37 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:165:78 - error: Expression of type \"defaultdict[Unknown, list[_T@list]]\" cannot be assigned to declared type \"dict[DefsRef, list[JsonSchemaValue]]\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"dict[DefsRef, list[JsonSchemaValue]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"list[_T@list]\" is not the same as \"list[JsonSchemaValue]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_known_annotated_metadata.py:56:55 - error: Expression of type \"defaultdict[Unknown, set[_T@set]]\" cannot be assigned to declared type \"dict[str, set[str]]\"\n+     \"defaultdict[Unknown, set[_T@set]]\" is incompatible with \"dict[str, set[str]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"set[_T@set]\" is not the same as \"set[str]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n- 53 errors, 0 warnings, 0 informations \n+ 55 errors, 0 warnings, 0 informations \n\nmkosi (https://github.com/systemd/mkosi)\n+ /tmp/mypy_primer/projects/mkosi/mkosi/manifest.py\n+   /tmp/mypy_primer/projects/mkosi/mkosi/manifest.py:44:73 - error: Argument of type \"type[list[_T@list]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     No overloaded function matches type \"() -> list[PackageManifest]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/manifest.py:84:73 - error: Argument of type \"type[list[_T@list]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     No overloaded function matches type \"() -> list[PackageManifest]\" (reportGeneralTypeIssues)\n- 4 errors, 0 warnings, 0 informations \n+ 6 errors, 0 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/commands/data_commands.py:119:53 - error: Argument of type \"str\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"str\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/commands/data_commands.py:123:24 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/commands/data_commands.py:123:34 - error: Argument of type \"list[_T@list]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     \"list[_T@list]\" is incompatible with \"Iterable[str]\"\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"_T@list\" is not a subtype of \"str\"\n+         \"object*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/edge/edge_positioning.py:124:39 - error: Argument of type \"str\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"str\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/edge/edge_positioning.py:131:27 - error: Argument of type \"list[_T@list]\" cannot be assigned to parameter \"pairs\" of type \"List[str]\" in function \"refresh_data\"\n+     \"list[_T@list]\" is incompatible with \"List[str]\"\n+       Type parameter \"_T@list\" is invariant, but \"_T@list\" is not the same as \"str\"\n+       Consider switching from \"list\" to \"Sequence\" which is covariant (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:323:56 - error: Expression of type \"defaultdict[Unknown, list[_T@list]]\" cannot be assigned to declared type \"Dict[str, List[LocalTrade]]\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"Dict[str, List[LocalTrade]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"list[_T@list]\" is not the same as \"List[LocalTrade]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:641:40 - error: Cannot assign member \"bt_trades_open_pp\" for type \"type[LocalTrade]\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"Dict[str, List[LocalTrade]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"list[_T@list]\" is not the same as \"List[LocalTrade]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n- 555 errors, 38 warnings, 0 informations \n+ 562 errors, 38 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:710:49 - error: Argument of type \"type[list[_T@list]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     No overloaded function matches type \"() -> list[Depot]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:78:50 - error: Argument of type \"type[list[_T@list]]\" cannot be assigned to parameter \"__default_factory\" of type \"(() -> list[Converters]) | None\" in function \"__init__\"\n+     Type \"type[list[_T@list]]\" cannot be assigned to type \"(() -> list[Converters]) | None\"\n+       No overloaded function matches type \"() -> list[Converters]\"\n+       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n- 7933 errors, 22 warnings, 0 informations \n+ 7935 errors, 22 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/reloaders.py:554:81 - error: Argument of type \"type[list[_T@list]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     No overloaded function matches type \"() -> list[str]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/reloaders.py:555:91 - error: Argument of type \"type[list[_T@list]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     No overloaded function matches type \"() -> list[Path]\" (reportGeneralTypeIssues)\n- 2344 errors, 9813 warnings, 0 informations \n+ 2346 errors, 9813 warnings, 0 informations \n\npyp (https://github.com/hauntsaninja/pyp)\n+   /tmp/mypy_primer/projects/pyp/pyp.py:252:51 - error: Cannot assign member \"def_to_names\" for type \"PypConfig\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"Dict[int, List[str]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"list[_T@list]\" is not the same as \"List[str]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyp/pyp.py:254:46 - error: Cannot assign member \"requires\" for type \"PypConfig\"\n+     \"defaultdict[Unknown, set[_T@set]]\" is incompatible with \"Dict[int, Set[str]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"set[_T@set]\" is not the same as \"Set[str]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyp/pyp.py:282:49 - error: Argument of type \"str\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"str\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyp/pyp.py:283:13 - error: Argument of type \"Set[str]\" cannot be assigned to parameter \"__value\" of type \"set[_T@set]\" in function \"__setitem__\"\n+     \"Set[str]\" is incompatible with \"set[_T@set]\"\n+       Type parameter \"_T@set\" is invariant, but \"str\" is not the same as \"_T@set\" (reportGeneralTypeIssues)\n- 6 errors, 0 warnings, 0 informations \n+ 10 errors, 0 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_debug.py:66:59 - error: Argument of type \"type[list[_T@list]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     No overloaded function matches type \"() -> List[DebugTreeNode]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_raw/onion.py:42:66 - error: Argument of type \"type[list[_T@list]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     No overloaded function matches type \"() -> list[() -> None]\" (reportGeneralTypeIssues)\n- 729 errors, 31 warnings, 0 informations \n+ 731 errors, 31 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_processor.py:126:70 - error: Argument of type \"type[set[_T@set]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     No overloaded function matches type \"() -> Set[str]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_debugger.py:447:31 - error: Expression of type \"defaultdict[Unknown, list[_T@list]]\" cannot be assigned to declared type \"Dict[FullyNamedWrappedFunction, List[Probe]]\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"Dict[FullyNamedWrappedFunction, List[Probe]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"list[_T@list]\" is not the same as \"List[Probe]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_probe/registry.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_probe/registry.py:64:25 - error: Cannot assign member \"_pending\" for type \"ProbeRegistry\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"Dict[str, List[Probe]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"list[_T@list]\" is not the same as \"List[Probe]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/core.py:145:46 - error: Argument of type \"(...) -> Unknown\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"(...) -> Unknown\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/core.py:169:26 - error: Object of type \"object*\" is not callable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/module.py:241:26 - error: Cannot assign member \"_hook_map\" for type \"ModuleWatchdog\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"DefaultDict[str, List[ModuleHookType]]\"\n+       Type parameter \"_VT@defaultdict\" is invariant, but \"list[_T@list]\" is not the same as \"List[ModuleHookType]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/recorder.py:91:22 - error: Expression of type \"defaultdict[Unknown, list[_T@list]]\" cannot be assigned to declared type \"DefaultDict[str, List[str]]\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"DefaultDict[str, List[str]]\"\n+       Type parameter \"_VT@defaultdict\" is invariant, but \"list[_T@list]\" is not the same as \"List[str]\" (reportGeneralTypeIssues)\n- 9376 errors, 466 warnings, 0 informations \n+ 9383 errors, 466 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:1344:66 - error: Expression of type \"defaultdict[Unknown, list[_T@list]]\" cannot be assigned to declared type \"DefaultDict[str | None, List[str]]\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"DefaultDict[str | None, List[str]]\"\n+       Type parameter \"_VT@defaultdict\" is invariant, but \"list[_T@list]\" is not the same as \"List[str]\" (reportGeneralTypeIssues)\n- 175 errors, 0 warnings, 0 informations \n+ 176 errors, 0 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/flags.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/flags.py:85:48 - error: Argument of type \"type[list[_T@list]]\" cannot be assigned to parameter \"default_factory\" of type \"() -> _T@field\" in function \"field\"\n+     No overloaded function matches type \"() -> List[str]\" (reportGeneralTypeIssues)\n- 48 errors, 14 warnings, 0 informations \n+ 49 errors, 14 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/error_handler.py:90:17 - error: Argument of type \"dict[str, Unknown | str | None]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\" (reportGeneralTypeIssues)\n- 1111 errors, 10 warnings, 0 informations \n+ 1112 errors, 10 warnings, 0 informations \n\nmypy-protobuf (https://github.com/dropbox/mypy-protobuf)\n+   /tmp/mypy_primer/projects/mypy-protobuf/mypy_protobuf/main.py:160:69 - error: Cannot assign member \"from_imports\" for type \"PkgWriter\"\n+     \"defaultdict[Unknown, set[_T@set]]\" is incompatible with \"Dict[str, Set[Tuple[str, str | None]]]\"\n+       Type parameter \"_VT@dict\" is invariant, but \"set[_T@set]\" is not the same as \"Set[Tuple[str, str | None]]\"\n+       Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type (reportGeneralTypeIssues)\n- 17 errors, 24 warnings, 0 informations \n+ 18 errors, 24 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/mzbuild.py:835:52 - error: Argument of type \"PreImage\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"PreImage\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/mzbuild.py:837:47 - error: Argument of type \"list[_T@list]\" cannot be assigned to parameter \"instances\" of type \"list[PreImage]\" in function \"prepare_batch\"\n+     \"list[_T@list]\" is incompatible with \"list[PreImage]\"\n+       Type parameter \"_T@list\" is invariant, but \"_T@list\" is not the same as \"PreImage\"\n+       Consider switching from \"list\" to \"Sequence\" which is covariant (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:73:42 - error: Expression of type \"defaultdict[Unknown, list[_T@list]]\" cannot be assigned to declared type \"defaultdict[str, list[str]]\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"defaultdict[str, list[str]]\"\n+       Type parameter \"_VT@defaultdict\" is invariant, but \"list[_T@list]\" is not the same as \"list[str]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:141:30 - error: Argument of type \"defaultdict[Unknown, set[_T@set]]\" cannot be assigned to parameter \"new_deps\" of type \"defaultdict[str, set[str]]\" in function \"add_deps\"\n+     \"defaultdict[Unknown, set[_T@set]]\" is incompatible with \"defaultdict[str, set[str]]\"\n+       Type parameter \"_VT@defaultdict\" is invariant, but \"set[_T@set]\" is not the same as \"set[str]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:144:27 - error: Expression of type \"dict[Unknown, list[_T@set]]\" cannot be assigned to declared type \"DepMap\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:155:40 - error: Argument of type \"str\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"str\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:157:26 - error: Expression of type \"tuple[DepMap, defaultdict[Unknown, list[_T@list]]]\" cannot be assigned to return type \"tuple[DepMap, DepBuilder]\"\n+     \"defaultdict[Unknown, list[_T@list]]\" is incompatible with \"DepBuilder\"\n+       Type parameter \"_VT@defaultdict\" is invariant, but \"list[_T@list]\" is not the same as \"list[str]\" (reportGeneralTypeIssues)\n- 12 errors, 235 warnings, 0 informations \n+ 19 errors, 235 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110b3ac254a19ac29066b",
    "number": 6138,
    "body": "…s to a false negative if the base class uses a `Self` type and the override uses an incompatible specialized type. This addresses #6010.",
    "head_branch": "issue6010",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+ /tmp/mypy_primer/projects/steam.py/steam/_gc/state.py\n+   /tmp/mypy_primer/projects/steam.py/steam/_gc/state.py:67:13 - error: \"user\" overrides symbol of same name in class \"ConnectionState\"\n+     \"cached_property[Self@GCState[Inv@GCState], ClientUser]\" is incompatible with \"cached_property[GCState[Inv@GCState], ClientUser]\"\n+       Type parameter \"_SelfT@cached_property\" is invariant, but \"Self@GCState[Inv@GCState]\" is not the same as \"GCState[Inv@GCState]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/client.py:52:13 - error: \"user\" overrides symbol of same name in class \"Client\"\n+     \"cached_property[Self@Client, ClientUser]\" is incompatible with \"cached_property[Client, ClientUser]\"\n+       Type parameter \"_SelfT@cached_property\" is invariant, but \"Self@Client\" is not the same as \"Client\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/models.py:187:15 - error: Method \"csgo_profile\" overrides class \"PartialUser\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Coroutine[Any, Any, ProfileInfo[ClientUser]]\", override returns type \"Coroutine[Any, Any, ProfileInfo[Self@ClientUser]]\"\n+       \"Coroutine[Any, Any, ProfileInfo[Self@ClientUser]]\" is incompatible with \"Coroutine[Any, Any, ProfileInfo[ClientUser]]\"\n+         Type parameter \"_ReturnT_co@Coroutine\" is covariant, but \"ProfileInfo[Self@ClientUser]\" is not a subtype of \"ProfileInfo[ClientUser]\"\n+           \"ProfileInfo[Self@ClientUser]\" is incompatible with \"ProfileInfo[ClientUser]\"\n+             Type parameter \"UserT@ProfileInfo\" is invariant, but \"Self@ClientUser\" is not the same as \"ClientUser\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/client.py:52:13 - error: \"user\" overrides symbol of same name in class \"Client\"\n+     \"cached_property[Self@Client, ClientUser]\" is incompatible with \"cached_property[Client, ClientUser]\"\n+       Type parameter \"_SelfT@cached_property\" is invariant, but \"Self@Client\" is not the same as \"Client\" (reportIncompatibleVariableOverride)\n- 7929 errors, 22 warnings, 0 informations \n+ 7933 errors, 22 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-     Keyword parameter \"callbacks\" type mismatch: base parameter is type \"ListenerCallbackSig[_EventT@add_listener]\", override parameter is type \"ListenerCallbackSig[_EventT@add_listener]\"\n+     Keyword parameter \"callbacks\" type mismatch: base parameter is type \"(_EventT@add_listener, ...) -> _CoroT[None]\", override parameter is type \"ListenerCallbackSig[_EventT@add_listener]\"\n-       Type \"ListenerCallbackSig[_EventT@add_listener]\" cannot be assigned to type \"ListenerCallbackSig[_EventT@add_listener]\"\n+       Type \"(_EventT@add_listener, ...) -> _CoroT[None]\" cannot be assigned to type \"ListenerCallbackSig[_EventT@add_listener]\"\n-     Keyword parameter \"callbacks\" type mismatch: base parameter is type \"ListenerCallbackSig[_EventT@add_listener]\", override parameter is type \"ListenerCallbackSig[_EventT@add_listener]\"\n+     Keyword parameter \"callbacks\" type mismatch: base parameter is type \"(_EventT@add_listener, ...) -> _CoroT[None]\", override parameter is type \"ListenerCallbackSig[_EventT@add_listener]\"\n-       Type \"ListenerCallbackSig[_EventT@add_listener]\" cannot be assigned to type \"ListenerCallbackSig[_EventT@add_listener]\"\n+       Type \"(_EventT@add_listener, ...) -> _CoroT[None]\" cannot be assigned to type \"ListenerCallbackSig[_EventT@add_listener]\"\n\n```",
      "@Gobot1234, this bug fix will affect the steam.py project. I confirmed that this is a legit typing issue that was previously going unreported in pyright.",
      "> @Gobot1234, this bug fix will affect the steam.py project. I confirmed that this is a legit typing issue that was previously going unreported in pyright.\r\n\r\nThanks for the report!"
    ],
    "commit_messages": [
      "Fixed a bug in the `reportIncompatibleMethodOverride` check that leads to a false negative if the base class uses a `Self` type and the override uses an incompatible specialized type. This addresses #6010. (#6138)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110b4ac254a19ac29066c",
    "number": 6137,
    "body": "…s that derives from `Any`. Previously, these were evaluated as `Unknown`, but they are now evaluated as `Any`. This is related to #6136.",
    "head_branch": "issue6136",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_injecting.py:47:30 - warning: Type of \"injector\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test__internal/test_init.py:51:5 - warning: Type of \"call_with_async_di\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test__internal/test_init.py:51:5 - warning: Type of \"assert_not_called\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test__internal/test_init.py:64:5 - warning: Type of \"call_with_async_di\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test__internal/test_init.py:79:5 - warning: Type of \"call_with_async_di\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test__internal/test_init.py:94:5 - warning: Type of \"call_with_async_di\" is unknown (reportUnknownMemberType)\n- 2344 errors, 9819 warnings, 0 informations \n+ 2344 errors, 9813 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed type evaluation behavior for accesses to attributes on a class that derives from `Any`. Previously, these were evaluated as `Unknown`, but they are now evaluated as `Any`. This is related to #6136. (#6137)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110b5ac254a19ac29066d",
    "number": 6132,
    "body": "…hen matching a protocol against a module. This addresses #6117.",
    "head_branch": "issue6117",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed several bugs in protocol matching that led to false positives when matching a protocol against a module. This addresses #6117. (#6132)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110b6ac254a19ac29066e",
    "number": 6130,
    "body": "…ple constructed within a loop. This addresses #6119.",
    "head_branch": "issue6119",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in an unresolved `Unknown` type within a tuple constructed within a loop. This addresses #6119. (#6130)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110b7ac254a19ac29066f",
    "number": 6128,
    "body": "…ive error when a class implementation used a callback protocol rather than a `def` statement to define an instance variable defined in a protocol. This addresses #6127.",
    "head_branch": "issue6126",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in protocol matching logic that resulted in a false positive error when a class implementation used a callback protocol rather than a `def` statement to define an instance variable defined in a protocol. This addresses #6126. (#6128)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110b8ac254a19ac290670",
    "number": 6125,
    "body": "…f type `type[Self]`. This addresses #6118.",
    "head_branch": "issue6118",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed regression in `type(x) is y` type narrowing logic when `y` is of type `type[Self]`. This addresses #6118. (#6125)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110b9ac254a19ac290671",
    "number": 6124,
    "body": "Rollup of the following changes:\r\n\r\n1. pylance loc update 20231010.1 https://github.com/microsoft/pyrx/pull/4171\r\n2. extracted out temp file from FileSystem https://github.com/microsoft/pyrx/pull/4168\r\n3. got rid of `getBoundSourceInfo` from `extensibility` and make `stringDefinition` to support multiple indirect references. https://github.com/microsoft/pyrx/pull/4164\r\n4. Fixed pyTest sometimes fail to find fixtures https://github.com/microsoft/pyrx/pull/4161\r\n5. Add `kind` (read/write) metadata to Find All References response https://github.com/microsoft/pyrx/pull/4160\r\n\r\n  Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n  Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n  Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n  Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n  Co-authored-by: Stella Huang <stellahuang@microsoft.com>\r\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.331",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.331 (#6124)\n\nCo-authored-by: Bill Schnurr bschnurr@microsoft.com\r\nCo-authored-by: HeeJae Chang hechang@microsoft.com\r\nCo-authored-by: Erik De Bonte erikd@microsoft.com\r\nCo-authored-by: Rich Chiodo rchiodo@microsoft.com\r\nCo-authored-by: Stella Huang stellahuang@microsoft.com"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110baac254a19ac290672",
    "number": 6123,
    "body": "…a TypedDict or other type that requires bidirectional type inference. This addresses #6121.",
    "head_branch": "issue6121",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\noperator (https://github.com/canonical/operator)\n-     \"Generator[tuple[str, ...], Unknown, Unknown]\" is incompatible with \"_NoticeGenerator\"\n-       Type parameter \"_YieldT_co@Generator\" is covariant, but \"tuple[str, ...]\" is not a subtype of \"_Notice\"\n-         \"tuple[str, ...]\" is incompatible with \"_Notice\"\n+     \"tuple[str, ...]\" is incompatible with \"_Notice\"\n-           Tuple size mismatch; expected 3 but received indeterminate (reportGeneralTypeIssues)\n+       Tuple size mismatch; expected 3 but received indeterminate (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Improved error message for `yield` statements when the yield type is a TypedDict or other type that requires bidirectional type inference. This addresses #6121. (#6123)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110bbac254a19ac290673",
    "number": 6115,
    "body": "Pyright half of https://github.com/microsoft/pylance-release/issues/4917. Pylance change is [here](https://github.com/microsoft/pyrx/pull/4163).\r\n\r\nIf `python.analysis.stubPath` is unset, omit it from the configuration response rather than sending the default value (`\"typings\"`). This way the server knows that it's not set (rather than explicitly set to `\"typings\"`) and can skip showing [this warning](https://github.com/microsoft/pyrx/blob/main/packages/pyright/packages/pyright-internal/src/analyzer/service.ts#L796) in that case.",
    "head_branch": "pylance4917",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't show `stubPath xxx is not a valid directory` warning when using config default (#6115)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110bcac254a19ac290674",
    "number": 6114,
    "body": "This PR isn't meant to be committed. Just wanted to double check 3.12 isn't going to change much.",
    "head_branch": "rchiodo/try312",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110bdac254a19ac290675",
    "number": 6111,
    "body": "…` and `type(x) == T` type guards when `T` is a dynamic type rather than a specific class. This addresses https://github.com/microsoft/pylance-release/issues/4942.",
    "head_branch": "issue4942",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed a bug that led to incorrect type narrowing in the `type(x) is T` and `type(x) == T` type guards when `T` is a dynamic type rather than a specific class. This addresses https://github.com/microsoft/pylance-release/issues/4942. (#6111)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110beac254a19ac290676",
    "number": 6110,
    "body": "…It was not properly handling the case where `x` is `Any` or `Unknown`. This addresses #6109.",
    "head_branch": "issue6109",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug in `x is <Literal>` and `x == <Literal>` type guard logic. It was not properly handling the case where `x` is `Any` or `Unknown`. This addresses #6109. (#6110)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110beac254a19ac290677",
    "number": 6107,
    "body": "…lue with an incompatible type to a class variable that has no explicit type declaration. This addresses #6106.",
    "head_branch": "issue6106",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed a bug that led to a confusing error message when assigning a value with an incompatible type to a class variable that has no explicit type declaration. This addresses #6106. (#6107)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110bfac254a19ac290678",
    "number": 6105,
    "body": "…call expressions and a lambda. This addresses #6042.",
    "head_branch": "issue6042",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed a bug that led to incorrect type evaluation in a nested set of call expressions and a lambda. This addresses #6042. (#6105)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c0ac254a19ac290679",
    "number": 6104,
    "body": "…using `Callable` and the pre-narrowed type is `object`. This addresses #6100.",
    "head_branch": "issue6100",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug that led to incorrect type narrowing for `isinstance` when using `Callable` and the pre-narrowed type is `object`. This addresses #6100. (#6104)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c1ac254a19ac29067a",
    "number": 6103,
    "body": "… `isinstance` call. This addresses #6101.",
    "head_branch": "issue6101-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added missing check for the use of a subscripted `Callable` within an `isinstance` call. This addresses #6101. (#6103)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c2ac254a19ac29067b",
    "number": 6102,
    "body": "… `isinstance` call. This addresses #6101.",
    "head_branch": "issue6101",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c3ac254a19ac29067c",
    "number": 6098,
    "body": "…tching with a protocol class that has a method with method-scoped type variables. This addresses #6064.",
    "head_branch": "issue6064",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive error when doing protocol matching with a protocol class that has a method with method-scoped type variables. This addresses #6064. (#6098)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c4ac254a19ac29067d",
    "number": 6091,
    "body": "…e filter type (the second argument) is `type[T]` (where `T` is a type variable) and the first argument is of type `T`. In this case, we can eliminate (filter) `T` in the negative case. This addresses #6088.",
    "head_branch": "issue6088",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/base/checks.py:132:29 - error: Argument of type \"BaseCheck* | str\" cannot be assigned to parameter \"__name\" of type \"str\" in function \"hasattr\"\n-     Type \"BaseCheck* | str\" cannot be assigned to type \"str\"\n-       \"BaseCheck*\" is incompatible with \"str\" (reportGeneralTypeIssues)\n- 1112 errors, 10 warnings, 0 informations \n+ 1111 errors, 10 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved type narrowing in the negative case for `isinstance` when the filter type (the second argument) is `type[T]` (where `T` is a type variable) and the first argument is of type `T`. In this case, we can eliminate (filter) `T` in the negative case. This addresses #6088. (#6091)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c5ac254a19ac29067e",
    "number": 6090,
    "body": "…lass uses a custom metaclass that supplies a `__setattr__` method. This addresses #6089.",
    "head_branch": "issue6089",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a recent regression that led to a false positive error when a class uses a custom metaclass that supplies a `__setattr__` method. This addresses #6089. (#6090)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c6ac254a19ac29067f",
    "number": 6085,
    "body": "…luation under certain circumstances when multiple symbols depend on each other in a loop. This addresses #6075.",
    "head_branch": "issue6075",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/log.py:951:38 - error: \"read\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/maintainers.py:73:47 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2069:21 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2069:43 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"paths\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2113:21 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2113:43 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"paths\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2227:21 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2227:43 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"paths\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n- 3881 errors, 48 warnings, 0 informations \n+ 3873 errors, 48 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/freqai_interface.py:870:58 - error: \"pair\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/freqai_interface.py:872:47 - error: Argument of type \"FreqaiDataKitchen | None\" cannot be assigned to parameter \"dk\" of type \"FreqaiDataKitchen\" in function \"fit_live_predictions\"\n-     Type \"FreqaiDataKitchen | None\" cannot be assigned to type \"FreqaiDataKitchen\"\n-       Type \"None\" cannot be assigned to type \"FreqaiDataKitchen\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/freqai_interface.py:872:64 - error: \"pair\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 558 errors, 38 warnings, 0 informations \n+ 555 errors, 38 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/setup.py:154:37 - error: Argument of type \"None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\"\n-     Type \"None\" cannot be assigned to type \"BytesPath\"\n-       Type \"None\" cannot be assigned to type \"bytes\"\n-       \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:503:40 - error: \"_suite_skipping_mode\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:515:40 - error: \"_should_skip_path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 9324 errors, 463 warnings, 0 informations \n+ 9321 errors, 463 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:779:31 - error: Cannot access member \"parent\" for type \"GroupMixin[Any]\"\n+     Member \"parent\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:797:31 - error: Cannot access member \"parent\" for type \"GroupMixin[Any]\"\n+     Member \"parent\" is unknown (reportGeneralTypeIssues)\n- 46 errors, 14 warnings, 0 informations \n+ 48 errors, 14 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive error and incorrect type evaluation under certain circumstances when multiple symbols depend on each other in a loop. This addresses #6075. (#6085)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c7ac254a19ac290680",
    "number": 6084,
    "body": "rollup of the following changes:\n    1. Clean up diagnostics on workspace close https://github.com/microsoft/pyrx/pull/4144\n    2. Add support for more magic methods https://github.com/microsoft/pyrx/pull/4148\n    3. pylance loc update 20231003.1 https://github.com/microsoft/pyrx/pull/4147\n    4. Fix some problems with UNC paths https://github.com/microsoft/pyrx/pull/4145\n    5. Made `pytest` to use new `SymbolCollector` extension APIs https://github.com/microsoft/pyrx/pull/4142\n    6. Refactoring `DocumentSymbolCollector` to be extendable https://github.com/microsoft/pyrx/pull/4118\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.330",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.330 (#6084)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>\r\n\r\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c8ac254a19ac290681",
    "number": 6082,
    "body": "…ote form of a format string that uses a format specifier expression. This is also a bug in the Python 3.12 interpreter that is being fixed. This addresses #6077.",
    "head_branch": "issue6077",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndiscord.py (https://github.com/Rapptz/discord.py): typechecking got 1.34x faster (40.1s -> 30.1s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive error when using a single-quote form of a format string that uses a format specifier expression. This is also a bug in the Python 3.12 interpreter that is being fixed. This addresses #6077. (#6082)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c9ac254a19ac290682",
    "number": 6081,
    "body": "…function with an inferred return type is decorated with a class or function that uses a ParamSpec (such as `functools.wraps`). This addresses #6080.",
    "head_branch": "issue6080",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect type evaluation when an async function with an inferred return type is decorated with a class or function that uses a ParamSpec (such as `functools.wraps`). This addresses #6080. (#6081)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110c9ac254a19ac290683",
    "number": 6079,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4855\r\n\r\nThe current documentation around editable installs tells users to use `.pth` files instead of import hooks. A user recently pointed out that this language is confusing because installing an import hook requires a `.pth` file. So, the existence of a `.pth` file doesn't indicate that an editable install is Pyright-friendly.\r\n\r\nThe first commit updates the language.\r\nThe second commit re-justifies the text to match the rest of the file.",
    "head_branch": "pylance4855",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Docs could be clearer about which `.pth` files work in editable install scenarios (#6079)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110caac254a19ac290684",
    "number": 6076,
    "body": "…o find any applicable overloads. This addresses #6069.",
    "head_branch": "issue6069",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:277:23 - error: No overloads for \"finditer\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:458:14 - error: No overloads for \"check_output\" match the provided arguments (reportGeneralTypeIssues)\n- 13 errors, 37 warnings, 0 informations \n+ 15 errors, 37 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:352:42 - error: No overloads for \"ioctl\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:266:14 - error: No overloads for \"sub\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:190:22 - error: No overloads for \"sorted\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:300:21 - error: No overloads for \"format\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:301:17 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1133:17 - error: No overloads for \"search\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:557:20 - error: No overloads for \"get\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/filesystem_view.py:600:25 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:1019:27 - error: No overloads for \"__new__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:378:15 - error: No overloads for \"format\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:379:19 - error: No overloads for \"format\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2404:22 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1977:25 - error: No overloads for \"__setitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/paths.py:18:10 - error: No overloads for \"__new__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/stage.py:320:25 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:403:17 - error: No overloads for \"sub\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:454:35 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:598:17 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1027:61 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1210:25 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1263:15 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:60:20 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/sip.py:65:16 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:307:30 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:308:19 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:309:20 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:310:17 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:311:24 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:312:24 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/license.py:231:5 - error: No overloads for \"__setitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/spec.py:116:17 - error: No overloads for \"write\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/__init__.py:90:5 - error: No overloads for \"update\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/__init__.py:478:16 - error: No overloads for \"get\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/__init__.py:667:50 - error: No overloads for \"__new__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/apple_clang.py:32:19 - error: No overloads for \"group\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/clang.py:183:19 - error: No overloads for \"group\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/gcc.py:211:19 - error: No overloads for \"group\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/msvc.py:197:35 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/msvc.py:198:38 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/container/writers/__init__.py:99:27 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:202:25 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/environment/environment.py:1403:13 - error: No overloads for \"update\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/environment/environment.py:2279:26 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:42:16 - error: No overloads for \"setdefault\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:269:20 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:272:13 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/tcl.py:35:16 - error: No overloads for \"setdefault\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/cray_backend.py:150:19 - error: No overloads for \"findall\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/cray_frontend.py:84:23 - error: No overloads for \"findall\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/cray_frontend.py:94:29 - error: No overloads for \"search\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/concretize.py:675:27 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/concretize.py:1651:13 - error: No overloads for \"update\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/concretize.py:1873:34 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/config.py:679:9 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/config.py:680:9 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/config.py:681:9 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/config.py:682:9 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/config.py:683:9 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/config.py:684:9 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n\n... (truncated 62 lines) ...\n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n+   /tmp/mypy_primer/projects/koda-validate/tests/test_310_plus.py:131:20 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n- 166 errors, 5 warnings, 0 informations \n+ 167 errors, 5 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/setup.py:154:24 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/context.py:208:25 - error: No overloads for \"__new__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:680:19 - error: No overloads for \"get\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_asm_request_context.py:393:9 - error: No overloads for \"__setitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_utils.py:302:16 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/trace_utils.py:81:12 - error: No overloads for \"sub\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/patch.py:397:19 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/botocore/patch.py:506:29 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/writer.py:313:54 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/writer.py:314:55 - error: No overloads for \"join\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/file.py:37:13 - error: No overloads for \"write\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/iast_utils.py:9:10 - error: No overloads for \"open\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/fixtures/aspects/str_methods.py:663:16 - error: No overloads for \"commonprefix\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:219:16 - error: No overloads for \"search\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:70:17 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:77:17 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:92:17 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:102:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:122:17 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:153:17 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:171:17 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:190:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:211:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/django/test_django_appsec.py:230:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/djangorestframework/test_appsec.py:20:17 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:66:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:103:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:111:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:128:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:143:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:174:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:194:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:211:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:222:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:240:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec.py:251:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/flask/test_flask_appsec_telemetry.py:48:21 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc/test_grpc.py:375:29 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc/test_grpc.py:394:29 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc/test_grpc.py:486:29 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc/test_grpc.py:536:29 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc_aio/test_grpc_aio.py:654:24 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc_aio/test_grpc_aio.py:675:24 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc_aio/test_grpc_aio.py:713:24 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc_aio/test_grpc_aio.py:729:24 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc_aio/test_grpc_aio.py:751:24 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc_aio/test_grpc_aio.py:781:24 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc_aio/test_grpc_aio.py:823:24 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc_aio/test_grpc_aio.py:851:24 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/grpc_aio/test_grpc_aio.py:888:24 - error: No overloads for \"iter\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg/test_psycopg_patch_generated.py:38:16 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/psycopg2/test_psycopg_patch_generated.py:38:16 - error: No overloads for \"__getitem__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/pylons/test_pylons.py:581:20 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/pylons/test_pylons.py:618:25 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/pylons/test_pylons.py:640:20 - error: No overloads for \"__init__\" match the provided arguments (reportGeneralTypeIssues)\n\n... (truncated 13 lines) ...\n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:614:9 - error: No overloads for \"write\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:721:18 - error: No overloads for \"to_yaml\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:778:18 - error: No overloads for \"to_json\" match the provided arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:806:18 - error: No overloads for \"to_json\" match the provided arguments (reportGeneralTypeIssues)\n- 1108 errors, 10 warnings, 0 informations \n+ 1112 errors, 10 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/spawn.py:72:12 - error: No overloads for \"run\" match the provided arguments (reportGeneralTypeIssues)\n- 8 errors, 226 warnings, 0 informations \n+ 9 errors, 226 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved diagnostic for the situation where overload matching fails to find any applicable overloads. This addresses #6069. (#6076)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110cbac254a19ac290685",
    "number": 6073,
    "body": "…iable used within an inner scope if used in a comprehension expression. This addresses #6067.",
    "head_branch": "issue6067",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.19x faster (70.2s -> 58.8s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to the loss of type narrowing for a captured variable used within an inner scope if used in a comprehension expression. This addresses #6067. (#6073)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110ccac254a19ac290686",
    "number": 6070,
    "body": null,
    "head_branch": "alphapranto-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110cdac254a19ac290687",
    "number": 6065,
    "body": "…ed with a `ParamSpec`. This addresses #6057.",
    "head_branch": "issue6057",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for PEP 692 (unpacked TypedDict for `**kwargs`) when used with a `ParamSpec`. This addresses #6057. (#6065)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110ceac254a19ac290688",
    "number": 6056,
    "body": "The [documentation](https://microsoft.github.io/pyright/#/configuration) is missing the default value for `reportImplicitOverride` in the type check diagnostics settings.\r\nThe default value is `none` as defined in [`getBasicDiagnosticRuleSet`](https://github.com/microsoft/pyright/blob/cfefc8255c99cba12ec7752243bf6b7c42db04d1/packages/pyright-internal/src/common/configOptions.ts#L605).",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks for the contribution."
    ],
    "commit_messages": [
      "Adds default value for reportImplicitOverride to docs/configuration.md (#6056)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110cfac254a19ac290689",
    "number": 6055,
    "body": "…hard-coding checks for `__await__` and `__init__` methods, use the `typing.Awaitable` protocol. This addresses #6053.",
    "head_branch": "issue6053",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/aiopg/test.py:128:30 - error: \"Generator[Unknown, Unknown, tuple[Unknown, DummyTracer]]\" is not awaitable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/aiopg/test.py:128:30 - error: \"Generator[Unknown, Unknown, tuple[Unknown, DummyTracer]]\" is not awaitable\n+     \"Generator[Unknown, Unknown, tuple[Unknown, DummyTracer]]\" is incompatible with protocol \"Awaitable[_T_co@Awaitable]\"\n+       \"__await__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/aiopg/test.py:334:30 - error: \"Generator[Unknown, Unknown, tuple[Unknown, DummyTracer]]\" is not awaitable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/aiopg/test.py:334:30 - error: \"Generator[Unknown, Unknown, tuple[Unknown, DummyTracer]]\" is not awaitable\n+     \"Generator[Unknown, Unknown, tuple[Unknown, DummyTracer]]\" is incompatible with protocol \"Awaitable[_T_co@Awaitable]\"\n+       \"__await__\" is not present (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Improved the check for whether an object is \"awaitable\". Rather than hard-coding checks for `__await__` and `__init__` methods, use the `typing.Awaitable` protocol. This addresses #6053. (#6055)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d0ac254a19ac29068a",
    "number": 6054,
    "body": "… when constructing a specialized generic TypedDict. This addresses #6052.",
    "head_branch": "issue6052",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/bootstrap.py:353:15 - error: Operator \"+\" not supported for types \"list[dict[str, Unknown]]\" and \"Unknown | syaml_dict | Any | list[Any]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/bootstrap.py:353:15 - error: Operator \"+\" not supported for types \"list[dict[str, Unknown]]\" and \"Unknown | list[Any] | syaml_dict | Any\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/diff.py:219:29 - error: Argument of type \"Unknown | list[str]\" cannot be assigned to parameter \"attributes\" of type \"str\" in function \"print_difference\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/diff.py:219:29 - error: Argument of type \"Unknown | list[Unknown]\" cannot be assigned to parameter \"attributes\" of type \"str\" in function \"print_difference\"\n-     Type \"Unknown | list[str]\" cannot be assigned to type \"str\"\n+     Type \"Unknown | list[Unknown]\" cannot be assigned to type \"str\"\n-       \"list[str]\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+       \"list[Unknown]\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/__init__.py:201:45 - error: Argument of type \"Unknown | syaml_dict | Any | list[Any] | None\" cannot be assigned to parameter \"__obj\" of type \"Sized\" in function \"len\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/__init__.py:201:45 - error: Argument of type \"Unknown | list[Any] | syaml_dict | Any | None\" cannot be assigned to parameter \"__obj\" of type \"Sized\" in function \"len\"\n-     Type \"Unknown | syaml_dict | Any | list[Any] | None\" cannot be assigned to type \"Sized\"\n+     Type \"Unknown | list[Any] | syaml_dict | Any | None\" cannot be assigned to type \"Sized\"\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py:1000:16 - warning: Return type, \"tuple[list[_T@_to_list], Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py:1000:16 - warning: Return type, \"tuple[list[Unknown], Unknown]\", is partially unknown (reportUnknownVariableType)\n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:368:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[float]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:368:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[float]]\" but received \"IntervalIndex[Interval[int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:376:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[Timestamp]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:376:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[Timestamp]]\" but received \"IntervalIndex[Interval[int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:386:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[Timedelta]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:386:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[Timedelta]]\" but received \"IntervalIndex[Interval[int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:472:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[Timestamp]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:472:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[Timestamp]]\" but received \"IntervalIndex[Interval[int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:498:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[float]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:498:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[float]]\" but received \"IntervalIndex[Interval[int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:585:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[Timestamp]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:585:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[Timestamp]]\" but received \"IntervalIndex[Interval[int]]\" (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type evaluation and false positives when constructing a specialized generic TypedDict. This addresses #6052. (#6054)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d1ac254a19ac29068b",
    "number": 6050,
    "body": "…del` statement targets a specific element within a list (e.g. `del my_list[1]`). This addresses #6026.",
    "head_branch": "issue6026",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/test_debugger.py:152:51 - error: Cannot access member \"Stuff\" for type \"Unbound\"\n-     Type \"Unbound\" is unsupported (reportGeneralTypeIssues)\n- 9222 errors, 465 warnings, 0 informations \n+ 9221 errors, 465 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a false positive due to incorrect type narrowing logic when a `del` statement targets a specific element within a list (e.g. `del my_list[1]`). This addresses #6026. (#6050)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d2ac254a19ac29068c",
    "number": 6048,
    "body": null,
    "head_branch": "issue6032",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspeedrun.com_global_scoreboard_webapp (https://github.com/Avasam/speedrun.com_global_scoreboard_webapp)\n- /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/services/user_updater_helpers.py\n-   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/services/user_updater_helpers.py:235:78 - warning: Condition will always evaluate to False since the types \"float\" and \"Literal[1]\" have no overlap (reportUnnecessaryComparison)\n- 29 errors, 9 warnings, 1 information \n+ 29 errors, 8 warnings, 1 information \n\n```"
    ],
    "commit_messages": [
      "Issue6032 (#6048)\n\n* Fixed a bug that resulted in a false positive in certain circumstances where a lambda included simple math operations with integer literals. The fix requires disabling literal math within lambdas, since they are often used as callbacks that are called repeatedly in a loop. This addresses #6031.\r\n\r\n* Reverted a portion of the recent changes designed to differentiate between a `float` that is really a `float` or a `float` that can also be an `int`. This resulted in false positives when inferring types using float literals. This addresses #6032.\r\n\r\n---------\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d2ac254a19ac29068d",
    "number": 6047,
    "body": "…s where a lambda included simple math operations with integer literals. The fix requires disabling literal math within lambdas, since they are often used as callbacks that are called repeatedly in a loop. This addresses #6031.",
    "head_branch": "issue6031",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive in certain circumstances where a lambda included simple math operations with integer literals. The fix requires disabling literal math within lambdas, since they are often used as callbacks that are called repeatedly in a loop. This addresses #6031. (#6047)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d3ac254a19ac29068e",
    "number": 6046,
    "body": "…e two tests in the pandas-stubs test suite. This addresses #6044.",
    "head_branch": "issue6044-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-     Type of \"get\" is \"Overload[(k: Literal['name']) -> (str | None), (k: Literal['name'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['config']) -> Unknown, (k: Literal['config'], default: Any) -> Unknown, (k: Literal['manifests']) -> (Unknown | None), (k: Literal['manifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['encryptedmanifests']) -> (Unknown | None), (k: Literal['encryptedmanifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['branches']) -> (Unknown | None), (k: Literal['branches'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['maxsize']) -> (str | None), (k: Literal['maxsize'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['depotfromapp']) -> (str | None), (k: Literal['depotfromapp'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['sharedinstall']) -> (bool | None), (k: Literal['sharedinstall'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: Literal['system_defined']) -> (bool | None), (k: Literal['system_defined'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: str) -> (Any | None), (k: str, default: Any | __TDefault@Depot) -> (Any | __TDefault@Depot)] | Unknown\" (reportUnknownMemberType)\n+     Type of \"get\" is \"Unknown | Overload[(k: Literal['name']) -> (str | None), (k: Literal['name'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['config']) -> Unknown, (k: Literal['config'], default: Any) -> Unknown, (k: Literal['manifests']) -> (Unknown | None), (k: Literal['manifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['encryptedmanifests']) -> (Unknown | None), (k: Literal['encryptedmanifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['branches']) -> (Unknown | None), (k: Literal['branches'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['maxsize']) -> (str | None), (k: Literal['maxsize'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['depotfromapp']) -> (str | None), (k: Literal['depotfromapp'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['sharedinstall']) -> (bool | None), (k: Literal['sharedinstall'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: Literal['system_defined']) -> (bool | None), (k: Literal['system_defined'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: str) -> (Any | None), (k: str, default: Any | __TDefault@Depot) -> (Any | __TDefault@Depot)]\" (reportUnknownMemberType)\n-     Type of \"items\" is \"(() -> dict_items[str, object]) | Unknown\" (reportUnknownMemberType)\n+     Type of \"items\" is \"Unknown | (() -> dict_items[str, object])\" (reportUnknownMemberType)\n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:556:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:567:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:576:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:571:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:581:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:582:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:616:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:631:13 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:636:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:835:21 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[int]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n- 1337 errors, 0 warnings, 0 informations \n+ 1339 errors, 0 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:226:49 - warning: Unnecessary \"# type: ignore\" comment\n- 46 errors, 13 warnings, 0 informations \n+ 46 errors, 14 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a recent regression in the overload matching behavior that broke two tests in the pandas-stubs test suite. This addresses #6044. (#6046)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d4ac254a19ac29068f",
    "number": 6045,
    "body": "…e two tests in the pandas-stubs test suite. This addresses #6044.",
    "head_branch": "issue6044",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\noperator (https://github.com/canonical/operator)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:811:27 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"__init__\"\n+     Argument type is \"Sequence[str] | list[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:811:9 - error: Type of \"after\" is partially unknown\n+     Type of \"after\" is \"list[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:812:28 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"__init__\"\n+     Argument type is \"Sequence[str] | list[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:812:9 - error: Type of \"before\" is partially unknown\n+     Type of \"before\" is \"list[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:813:30 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"__init__\"\n+     Argument type is \"Sequence[str] | list[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:813:9 - error: Type of \"requires\" is partially unknown\n+     Type of \"requires\" is \"list[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:836:23 - error: Type of \"after\" is partially unknown\n+     Type of \"after\" is \"list[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:837:24 - error: Type of \"before\" is partially unknown\n+     Type of \"before\" is \"list[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:838:26 - error: Type of \"requires\" is partially unknown\n+     Type of \"requires\" is \"list[Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:830:9 - error: Type of \"fields\" is partially unknown\n+     Type of \"fields\" is \"list[tuple[Literal['summary'], str] | tuple[Literal['description'], str] | tuple[Literal['startup'], str] | tuple[Literal['override'], str] | tuple[Literal['command'], str] | tuple[Literal['after'], list[Unknown]] | tuple[Literal['before'], list[Unknown]] | tuple[Literal['requires'], list[Unknown]] | tuple[Literal['environment'], dict[str, str]] | tuple[Literal['user'], str] | tuple[Literal['user-id'], int | None] | tuple[Literal['group'], str] | tuple[Literal['group-id'], int | None] | tuple[Literal['working-dir'], str] | tuple[Literal['on-success'], str] | tuple[Literal['on-failure'], str] | tuple[Literal['on-check-failure'], dict[str, Any]] | tuple[Literal['backoff-delay'], str] | tuple[Literal['backoff-factor'], int | None] | tuple[Literal['backoff-limit'], str] | tuple[Literal['kill-delay'], str | None]]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:853:38 - error: Type of \"value\" is partially unknown\n+     Type of \"value\" is \"str | list[Unknown] | dict[str, str] | int | dict[str, Any] | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:853:9 - error: Type of \"dct\" is partially unknown\n+     Type of \"dct\" is \"dict[str, str | list[Unknown] | dict[str, str] | int | dict[str, Any]]\" (reportUnknownVariableType)\n- 29 errors, 0 warnings, 0 informations \n+ 41 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-     Type of \"get\" is \"Overload[(k: Literal['name']) -> (str | None), (k: Literal['name'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['config']) -> Unknown, (k: Literal['config'], default: Any) -> Unknown, (k: Literal['manifests']) -> (Unknown | None), (k: Literal['manifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['encryptedmanifests']) -> (Unknown | None), (k: Literal['encryptedmanifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['branches']) -> (Unknown | None), (k: Literal['branches'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['maxsize']) -> (str | None), (k: Literal['maxsize'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['depotfromapp']) -> (str | None), (k: Literal['depotfromapp'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['sharedinstall']) -> (bool | None), (k: Literal['sharedinstall'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: Literal['system_defined']) -> (bool | None), (k: Literal['system_defined'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: str) -> (Any | None), (k: str, default: Any | __TDefault@Depot) -> (Any | __TDefault@Depot)] | Unknown\" (reportUnknownMemberType)\n+     Type of \"get\" is \"Unknown | Overload[(k: Literal['name']) -> (str | None), (k: Literal['name'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['config']) -> Unknown, (k: Literal['config'], default: Any) -> Unknown, (k: Literal['manifests']) -> (Unknown | None), (k: Literal['manifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['encryptedmanifests']) -> (Unknown | None), (k: Literal['encryptedmanifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['branches']) -> (Unknown | None), (k: Literal['branches'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['maxsize']) -> (str | None), (k: Literal['maxsize'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['depotfromapp']) -> (str | None), (k: Literal['depotfromapp'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['sharedinstall']) -> (bool | None), (k: Literal['sharedinstall'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: Literal['system_defined']) -> (bool | None), (k: Literal['system_defined'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: str) -> (Any | None), (k: str, default: Any | __TDefault@Depot) -> (Any | __TDefault@Depot)]\" (reportUnknownMemberType)\n-     Type of \"items\" is \"(() -> dict_items[str, object]) | Unknown\" (reportUnknownMemberType)\n+     Type of \"items\" is \"Unknown | (() -> dict_items[str, object])\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/trade.py:648:45 - error: Argument of type \"dict[str, str]\" cannot be assigned to parameter \"data\" of type \"TradeOfferReceiptItem\" in function \"__init__\"\n+     \"assetid\" is required in \"TradeOfferReceiptItem\"\n+     \"amount\" is required in \"TradeOfferReceiptItem\"\n+     \"appid\" is required in \"TradeOfferReceiptItem\"\n+     \"contextid\" is required in \"TradeOfferReceiptItem\"\n+     \"missing\" is required in \"TradeOfferReceiptItem\"\n+     \"rollback_new_assetid\" is required in \"TradeOfferReceiptItem\"\n+     \"rollback_new_contextid\" is required in \"TradeOfferReceiptItem\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/trade.py:653:45 - error: Argument of type \"dict[str, str]\" cannot be assigned to parameter \"data\" of type \"TradeOfferReceiptItem\" in function \"__init__\"\n+     \"assetid\" is required in \"TradeOfferReceiptItem\"\n+     \"amount\" is required in \"TradeOfferReceiptItem\"\n+     \"appid\" is required in \"TradeOfferReceiptItem\"\n+     \"contextid\" is required in \"TradeOfferReceiptItem\"\n+     \"missing\" is required in \"TradeOfferReceiptItem\"\n+     \"rollback_new_assetid\" is required in \"TradeOfferReceiptItem\"\n+     \"rollback_new_contextid\" is required in \"TradeOfferReceiptItem\" (reportGeneralTypeIssues)\n- 7929 errors, 23 warnings, 0 informations \n+ 7931 errors, 23 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:556:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:567:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:576:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:571:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:581:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:582:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:616:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:631:13 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:636:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:835:21 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[int]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n- 1337 errors, 0 warnings, 0 informations \n+ 1339 errors, 0 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:226:49 - warning: Unnecessary \"# type: ignore\" comment\n- 46 errors, 13 warnings, 0 informations \n+ 46 errors, 14 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d5ac254a19ac290690",
    "number": 6040,
    "body": "… `float` or `complex` literals or constructor calls and then accessing a member of the resulting object that is valid on that class but not on `int`. This addresses #6032.",
    "head_branch": "issue6032",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspeedrun.com_global_scoreboard_webapp (https://github.com/Avasam/speedrun.com_global_scoreboard_webapp)\n+ /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/services/user_updater_helpers.py\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/services/user_updater_helpers.py:235:78 - warning: Condition will always evaluate to False since the types \"float\" and \"Literal[1]\" have no overlap (reportUnnecessaryComparison)\n- 29 errors, 8 warnings, 1 information \n+ 29 errors, 9 warnings, 1 information \n\n```"
    ],
    "commit_messages": [
      "Fixed a regression that resulted in a false positive error when using `float` or `complex` literals or constructor calls and then accessing a member of the resulting object that is valid on that class but not on `int`. This addresses #6032. (#6040)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d6ac254a19ac290691",
    "number": 6030,
    "body": "rollup of the following changes:\n    1. pylance loc update 20230926.1 https://github.com/microsoft/pyrx/pull/4126\n    2. Updated log string https://github.com/microsoft/pyrx/pull/4117\n    3. Moving more stuff to service provider and add concept of associated services and removed Extensions https://github.com/microsoft/pyrx/pull/4107\n    4. git subrepo pull (merge) packages/pyright\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.329",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.329 (#6030)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d7ac254a19ac290692",
    "number": 6028,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4862\r\n\r\nIn the user's repro steps, they have mounted a share as a drive letter. The recent real case path changes cause the drive letter-based path (ex. `z:\\test`) to be changed to a UNC path (ex. `\\\\server\\share\\test`). And it seems that we had pre-existing issues with using UNC paths in file specs. \r\n- Fix `getRootLength` for `\\\\server\\share\\dir` to return `\\\\server\\` rather than `\\\\server\\share\\`. This matches [TypeScript's behavior](https://github.com/microsoft/TypeScript/blob/55d8bed85c11672b2b6f9ee3e6e1d384bef6f4da/src/compiler/path.ts#L241). Also brought over the comments from the TS implementation to explain what `getRootLength` is doing.\r\n- Fix `getWildcardRegexPattern` to double-escape both leading backslashes in `\\\\server\\share`. The result should be `\\\\\\\\\\\\\\\\server\\\\\\\\share` but was `\\\\\\\\server\\\\\\\\share`.\r\n- Fix the \"try going up a level\" logic in `realCasePath` to not go up another level if `getRootLength(path)` returns the length of `path`. In this case `path` is a root and we need to bail at this point to avoid stack overflow -- the \"go up a level\" logic would just call `realCasePath` with `path` again.",
    "head_branch": "pylance4862",
    "is_a_fork": true,
    "comments": [
      "Should we add tests to validation.yml for this case like I did for pyright?\r\nhttps://github.com/microsoft/pyright/blob/a3cdd524f9a5e04f76c1c79f2a724af1e5bf7b6d/.github/workflows/validation.yml#L147\r\n\r\nI just realized those tests I added won't run in pyrx as they're only in the pyright actions.",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.17x faster (79.7s -> 68.2s)\n(Performance measurements are based on a single noisy sample)\n\n```",
      "> These changes look reasonable to me. I presume that you looked at the corresponding typescript code to determine if the pyright code handles all of the relevant cases?\r\n\r\nI did look and believed this now matched [their `getEncodedRootLength` implementation](https://github.com/microsoft/TypeScript/blob/55d8bed85c11672b2b6f9ee3e6e1d384bef6f4da/src/compiler/path.ts#L164), minus the part specific to URLs.\r\n\r\nHowever, I just added unit tests for `getRootLength` based on the examples in their comments and found a discrepancy where `getRootLength(\"x:\")` returned 0 instead of 2. Fixed that.\r\n\r\n",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fix real casing of UNC paths (including mounted paths) (#6028)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d8ac254a19ac290693",
    "number": 6024,
    "body": "…ntrols whether `bytearray` and `memoryview` should be implicit subtypes of `bytes`. This switch defaults to false in basic type checking mode and true in strict mode. Eventually, we will probably have it default to true in all modes.",
    "head_branch": "issue5697-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1394:22 - error: Argument of type \"str | bytearray | memoryview\" cannot be assigned to parameter \"__s\" of type \"str\" in function \"write\"\n+     Type \"str | bytearray | memoryview\" cannot be assigned to type \"str\"\n+       \"bytearray\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate_text.py:19:45 - error: Cannot access member \"encode\" for type \"bytearray\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate_text.py:19:45 - error: Cannot access member \"encode\" for type \"memoryview\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n- 3558 errors, 48 warnings, 0 informations \n+ 3561 errors, 48 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/app.py:245:17 - error: Argument of type \"memoryview\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"verify_signature\"\n-     \"memoryview\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:726:41 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"parse\"\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:728:38 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"parse\"\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n- 7932 errors, 23 warnings, 0 informations \n+ 7929 errors, 23 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py:49:27 - error: Argument of type \"str | bytearray | memoryview\" cannot be assigned to parameter of type \"str\"\n+     Type \"str | bytearray | memoryview\" cannot be assigned to type \"str\"\n+       \"bytearray\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py:53:47 - error: Cannot access member \"encode\" for type \"bytearray\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py:53:47 - error: Cannot access member \"encode\" for type \"memoryview\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n- 50 errors, 0 warnings, 0 informations \n+ 53 errors, 0 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n\nPyWinCtl (https://github.com/Kalmat/PyWinCtl)\n-   /tmp/mypy_primer/projects/PyWinCtl/src/ewmhlib/_ewmhlib.py:293:28 - error: \"Never\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_pywinctl_linux.py:804:16 - error: Expression of type \"str | bytearray | memoryview\" cannot be assigned to return type \"str\"\n+     Type \"str | bytearray | memoryview\" cannot be assigned to type \"str\"\n+       \"bytearray\" is incompatible with \"str\" (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_tracking/aspects.py:65:35 - error: Argument of type \"str | memoryview\" cannot be assigned to parameter \"__sub\" of type \"str\" in function \"index\"\n+     Type \"str | memoryview\" cannot be assigned to type \"str\"\n+       \"memoryview\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_iast/_taint_tracking/aspects.py:325:35 - error: Argument of type \"str | memoryview\" cannot be assigned to parameter \"__sub\" of type \"str\" in function \"index\"\n+     Type \"str | memoryview\" cannot be assigned to type \"str\"\n+       \"memoryview\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_encoding.py:183:20 - error: Expression of type \"bytearray\" cannot be assigned to return type \"bytes | None\"\n-     Type \"bytearray\" cannot be assigned to type \"bytes | None\"\n-       \"bytearray\" is incompatible with \"bytes\"\n-       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:97:71 - error: Cannot access member \"encode\" for type \"bytearray\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/utils/http.py:97:71 - error: Cannot access member \"encode\" for type \"memoryview\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/propagation/_database_monitoring.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/propagation/_database_monitoring.py:35:16 - error: Operator \"+\" not supported for types \"str\" and \"str | bytearray | memoryview\"\n+     Operator \"+\" not supported for types \"str\" and \"bytearray\" when expected type is \"str | bytes\"\n+     Operator \"+\" not supported for types \"str\" and \"memoryview\" when expected type is \"str | bytes\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/fixtures/aspects/str_methods.py:209:12 - error: Expression of type \"bytearray\" cannot be assigned to return type \"bytes\"\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_compat.py:53:26 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"s\" of type \"AnyStr@to_unicode\" in function \"to_unicode\"\n-     Type \"bytearray\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n- 9159 errors, 467 warnings, 0 informations \n+ 9161 errors, 467 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n+ /tmp/mypy_primer/projects/materialize/misc/python/materialize/spawn.py\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/spawn.py:77:15 - error: Argument of type \"int | IO[bytes] | bytearray | memoryview | None\" cannot be assigned to parameter \"stdin\" of type \"_FILE\" in function \"run\" (reportGeneralTypeIssues)\n- 7 errors, 223 warnings, 0 informations \n+ 8 errors, 223 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Added a new configuration switch `disableBytesTypePromotions` that controls whether `bytearray` and `memoryview` should be implicit subtypes of `bytes`. This switch defaults to false in basic type checking mode and true in strict mode. Eventually, we will probably have it default to true in all modes. (#6024)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110d9ac254a19ac290694",
    "number": 6022,
    "body": "…ntrols whether `bytearray` and `memoryview` should be implicit subtypes of `bytes`. This switch defaults to false in basic type checking mode and true in strict mode. Eventually, we will probably have it default to true in all modes.",
    "head_branch": "issue5697-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1394:22 - error: Argument of type \"str | bytearray | memoryview\" cannot be assigned to parameter \"__s\" of type \"str\" in function \"write\"\n+     Type \"str | bytearray | memoryview\" cannot be assigned to type \"str\"\n+       \"bytearray\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:896:55 - error: Cannot access member \"lower\" for type \"memoryview\"\n+     Member \"lower\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:897:33 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/main.py:710:23 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1630:36 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1631:11 - error: Cannot access member \"lower\" for type \"memoryview\"\n+     Member \"lower\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1632:29 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate_text.py:19:45 - error: Cannot access member \"encode\" for type \"bytearray\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate_text.py:19:45 - error: Cannot access member \"encode\" for type \"memoryview\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2053:45 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/verify.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/verify.py:29:46 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/msvc.py:44:20 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/hooks/drop_redundant_rpaths.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/hooks/drop_redundant_rpaths.py:18:17 - error: Cannot access member \"startswith\" for type \"memoryview\"\n+     Member \"startswith\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/linux_distro.py:60:57 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/reporters/cdash.py:420:49 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/sbang.py:402:21 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/sbang.py:404:18 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/commands.py:152:33 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/debug.py:63:12 - error: Operator \"in\" not supported for types \"Unknown | syaml_dict | Any | None\" and \"str\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/debug.py:63:12 - error: Operator \"in\" not supported for types \"Unknown | syaml_dict | Any | None\" and \"str | Unknown\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/install.py:869:16 - error: Operator \"in\" not supported for types \"Unknown | None\" and \"str\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/install.py:869:16 - error: Operator \"in\" not supported for types \"Unknown | None\" and \"str | Unknown\"\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/util/hash.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/hash.py:15:47 - error: Cannot access member \"lower\" for type \"memoryview\"\n+     Member \"lower\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/hash.py:16:25 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/util/ld_so_conf.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/ld_so_conf.py:55:28 - error: Cannot access member \"find\" for type \"memoryview\"\n+     Member \"find\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/ld_so_conf.py:60:25 - error: Cannot access member \"strip\" for type \"memoryview\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/ld_so_conf.py:74:37 - error: Cannot access member \"strip\" for type \"memoryview\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/module_cmd.py:64:46 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/module_cmd.py:43:29 - error: Cannot access member \"strip\" for type \"memoryview\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/module_cmd.py:43:42 - error: Cannot access member \"split\" for type \"memoryview\"\n+     Member \"split\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/module_cmd.py:45:27 - error: Cannot access member \"split\" for type \"memoryview\"\n+     Member \"split\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:195:62 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 3558 errors, 48 warnings, 0 informations \n+ 3586 errors, 48 warnings, 0 informations \n\nalectryon (https://github.com/cpitclaudel/alectryon)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:216:60 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:54:15 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:215:37 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:240:47 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/alectryon/alectryon/serapi.py\n+   /tmp/mypy_primer/projects/alectryon/alectryon/serapi.py:183:43 - error: Cannot access member \"splitlines\" for type \"memoryview\"\n+     Member \"splitlines\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/serapi.py:184:43 - error: Cannot access member \"splitlines\" for type \"memoryview\"\n+     Member \"splitlines\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/serapi.py:191:42 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/alectryon/alectryon/sexp.py\n+   /tmp/mypy_primer/projects/alectryon/alectryon/sexp.py:31:25 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 13 errors, 37 warnings, 0 informations \n+ 21 errors, 37 warnings, 0 informations \n\nmkosi (https://github.com/systemd/mkosi)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/config.py:866:93 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/mkosi/mkosi/qemu.py\n+   /tmp/mypy_primer/projects/mkosi/mkosi/qemu.py:236:43 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/qemu.py:365:111 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 3 errors, 0 warnings, 0 informations \n+ 6 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:39:93 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:39:29 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:39:29 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:39:29 - error: Type of \"strip\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:39:29 - error: Type of \"strip\" is partially unknown\n+     Type of \"strip\" is \"((__chars: str | None = None, /) -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:40:96 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:40:31 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:40:31 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:40:31 - error: Type of \"strip\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:40:31 - error: Type of \"strip\" is partially unknown\n+     Type of \"strip\" is \"((__chars: str | None = None, /) -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:30:58 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:30:29 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:30:29 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:58:51 - error: Cannot access member \"decode\" for type \"type[memoryview]\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:58:45 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:58:45 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((self: bytes, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | ((self: bytearray, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:58:45 - error: Expression of type \"((self: bytes, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | ((self: bytearray, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" cannot be assigned to parameter of type \"(bytes) -> str\"\n+     Type \"((self: bytes, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | ((self: bytearray, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" cannot be assigned to type \"(bytes) -> str\"\n+       Type \"(self: bytearray, encoding: str = \"utf-8\", errors: str = \"strict\") -> str\" cannot be assigned to type \"(bytes) -> str\"\n+         Parameter 1: type \"bytes\" cannot be assigned to type \"bytearray\"\n+           \"bytes\" is incompatible with \"bytearray\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/app.py:245:17 - error: Argument of type \"memoryview\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"verify_signature\"\n-     \"memoryview\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:384:42 - error: Cannot access member \"fromhex\" for type \"type[memoryview]\"\n+     Member \"fromhex\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:384:36 - error: Type of \"fromhex\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:384:36 - error: Type of \"fromhex\" is partially unknown\n+     Type of \"fromhex\" is \"((__string: str, /) -> bytes) | ((__string: str, /) -> bytearray) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:507:19 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:503:36 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:503:36 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:726:41 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"parse\"\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:728:38 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"parse\"\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/guard.py:73:61 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/guard.py:73:12 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/guard.py:73:12 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:1133:26 - error: Cannot access member \"fromhex\" for type \"type[memoryview]\"\n+     Member \"fromhex\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:1133:20 - error: Type of \"fromhex\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:1133:20 - error: Type of \"fromhex\" is partially unknown\n+     Type of \"fromhex\" is \"((__string: str, /) -> bytes) | ((__string: str, /) -> bytearray) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:29 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:20 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:20 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:73 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:64 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:64 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:25 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:16 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:16 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:77 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:68 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:68 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:769:56 - error: Cannot access member \"fromhex\" for type \"type[memoryview]\"\n+     Member \"fromhex\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:769:50 - error: Type of \"fromhex\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:769:50 - error: Type of \"fromhex\" is partially unknown\n+     Type of \"fromhex\" is \"((__string: str, /) -> bytes) | ((__string: str, /) -> bytearray) | Unknown\" (reportUnknownMemberType)\n+ /tmp/mypy_primer/projects/steam.py/steam/media.py\n+   /tmp/mypy_primer/projects/steam.py/steam/media.py:154:10 - error: Cannot access member \"startswith\" for type \"memoryview\"\n+     Member \"startswith\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/media.py:154:8 - error: Type of \"startswith\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/media.py:154:8 - error: Type of \"startswith\" is partially unknown\n\n... (truncated 34 lines) ...\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+ /tmp/mypy_primer/projects/freqtrade/freqtrade/__init__.py\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/__init__.py:12:63 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py:261:76 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 554 errors, 37 warnings, 0 informations \n+ 556 errors, 37 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:2231:21 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:2242:69 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py:49:27 - error: Argument of type \"str | bytearray | memoryview\" cannot be assigned to parameter of type \"str\"\n+     Type \"str | bytearray | memoryview\" cannot be assigned to type \"str\"\n+       \"bytearray\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py:53:47 - error: Cannot access member \"encode\" for type \"bytearray\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py:53:47 - error: Cannot access member \"encode\" for type \"memoryview\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n- 50 errors, 0 warnings, 0 informations \n+ 55 errors, 0 warnings, 0 informations \n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:301:20 - error: Cannot access member \"startswith\" for type \"memoryview*\"\n+     Member \"startswith\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:309:20 - error: Cannot access member \"endswith\" for type \"memoryview*\"\n+     Member \"endswith\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:323:24 - error: Cannot access member \"strip\" for type \"memoryview*\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:332:20 - error: Cannot access member \"strip\" for type \"memoryview*\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:332:16 - error: Expression of type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to return type \"StrOrBytes@Strip\"\n+     Type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to type \"StrOrBytes@Strip\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:341:20 - error: Cannot access member \"upper\" for type \"memoryview*\"\n+     Member \"upper\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:341:16 - error: Expression of type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to return type \"StrOrBytes@UpperCase\"\n+     Type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to type \"StrOrBytes@UpperCase\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:347:20 - error: Cannot access member \"lower\" for type \"memoryview*\"\n+     Member \"lower\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:347:16 - error: Expression of type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to return type \"StrOrBytes@LowerCase\"\n+     Type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to type \"StrOrBytes@LowerCase\" (reportGeneralTypeIssues)\n- 172 errors, 5 warnings, 0 informations \n+ 181 errors, 5 warnings, 0 informations \n\npyinstrument (https://github.com/joerick/pyinstrument)\n+ /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:85:37 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:85:16 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:85:16 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:85:16 - error: Return type, \"str | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:77:9 - error: Return type, \"str | Unknown\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/pyinstrument/test/test_pstats_renderer.py:94:34 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 31 errors, 5 warnings, 0 informations \n+ 37 errors, 5 warnings, 0 informations \n\npyp (https://github.com/hauntsaninja/pyp)\n+   /tmp/mypy_primer/projects/pyp/tests/test_pyp.py:315:66 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 6 errors, 0 warnings, 0 informations \n+ 7 errors, 0 warnings, 0 informations \n\nPyWinCtl (https://github.com/Kalmat/PyWinCtl)\n-   /tmp/mypy_primer/projects/PyWinCtl/src/ewmhlib/_ewmhlib.py:293:28 - error: \"Never\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_pywinctl_linux.py:291:63 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_pywinctl_linux.py:693:27 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_pywinctl_linux.py:804:16 - error: Expression of type \"str | bytearray | memoryview\" cannot be assigned to return type \"str\"\n+     Type \"str | bytearray | memoryview\" cannot be assigned to type \"str\"\n+       \"bytearray\" is incompatible with \"str\" (reportGeneralTypeIssues)\n- 8 errors, 23 warnings, 0 informations \n+ 10 errors, 23 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/gateway.py:965:42 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1593:30 - error: Cannot access member \"startswith\" for type \"memoryview\"\n+     Member \"startswith\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/player.py\n+   /tmp/mypy_primer/projects/discord.py/discord/player.py:618:22 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:613:13 - error: Cannot access member \"startswith\" for type \"memoryview\"\n+     Member \"startswith\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:617:15 - error: Cannot access member \"startswith\" for type \"memoryview\"\n+     Member \"startswith\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:619:15 - error: Cannot access member \"startswith\" for type \"memoryview\"\n+     Member \"startswith\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:628:27 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 45 errors, 13 warnings, 0 informations \n+ 52 errors, 13 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:103:28 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:105:21 - error: Cannot access member \"decode\" for type \"memoryview\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:114:35 - error: Argument of type \"Unknown | str | bytes | list[Unknown]\" cannot be assigned to parameter \"s\" of type \"str | bytes | bytearray\" in function \"loads\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_utils.py:114:35 - error: Argument of type \"Unknown | str | bytes | bytearray | list[Unknown]\" cannot be assigned to parameter \"s\" of type \"str | bytes | bytearray\" in function \"loads\" (reportGeneralTypeIssues)\n\n... (truncated 116 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110daac254a19ac290695",
    "number": 6021,
    "body": "…ntrols whether `bytearray` and `memoryview` should be implicit subtypes of `bytes`. This switch defaults to false in basic type checking mode and true in strict mode. Eventually, we will probably have it default to true in all modes.",
    "head_branch": "issue5697",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:216:60 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:54:15 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:215:37 - error: Expected 1 positional argument (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:240:47 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/alectryon/alectryon/serapi.py\n+   /tmp/mypy_primer/projects/alectryon/alectryon/serapi.py:183:24 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/serapi.py:183:43 - error: Cannot access member \"splitlines\" for type \"memoryview\"\n+     Member \"splitlines\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/serapi.py:184:24 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/serapi.py:184:43 - error: Cannot access member \"splitlines\" for type \"memoryview\"\n+     Member \"splitlines\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/serapi.py:191:42 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/alectryon/alectryon/sexp.py\n+   /tmp/mypy_primer/projects/alectryon/alectryon/sexp.py:31:25 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 13 errors, 37 warnings, 0 informations \n+ 23 errors, 37 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1394:22 - error: Argument of type \"str | bytearray | memoryview\" cannot be assigned to parameter \"__s\" of type \"str\" in function \"write\"\n+     Type \"str | bytearray | memoryview\" cannot be assigned to type \"str\"\n+       \"bytearray\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:896:55 - error: Cannot access member \"lower\" for type \"memoryview\"\n+     Member \"lower\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/install_test.py:897:33 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/main.py:710:23 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1630:36 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1631:11 - error: Cannot access member \"lower\" for type \"memoryview\"\n+     Member \"lower\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1632:29 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate_text.py:33:25 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate_text.py:19:45 - error: Cannot access member \"encode\" for type \"bytearray\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate_text.py:19:45 - error: Cannot access member \"encode\" for type \"memoryview\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate_text.py:163:20 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2053:45 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/verify.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/verify.py:29:46 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/msvc.py:44:20 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/hooks/drop_redundant_rpaths.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/hooks/drop_redundant_rpaths.py:18:17 - error: Cannot access member \"startswith\" for type \"memoryview\"\n+     Member \"startswith\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/hooks/drop_redundant_rpaths.py:40:26 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/linux_distro.py:60:57 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/reporters/cdash.py:420:49 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/sbang.py:402:21 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/sbang.py:404:18 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/commands.py:152:33 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/debug.py:63:12 - error: Operator \"in\" not supported for types \"Unknown | syaml_dict | Any | None\" and \"str\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/debug.py:63:12 - error: Operator \"in\" not supported for types \"Unknown | syaml_dict | Any | None\" and \"str | Unknown\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/install.py:869:16 - error: Operator \"in\" not supported for types \"Unknown | None\" and \"str\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/install.py:869:16 - error: Operator \"in\" not supported for types \"Unknown | None\" and \"str | Unknown\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/elf.py:477:29 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/elf.py:509:37 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/util/hash.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/hash.py:15:47 - error: Cannot access member \"lower\" for type \"memoryview\"\n+     Member \"lower\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/hash.py:16:25 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/util/ld_so_conf.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/ld_so_conf.py:55:28 - error: Cannot access member \"find\" for type \"memoryview\"\n+     Member \"find\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/ld_so_conf.py:60:25 - error: Cannot access member \"strip\" for type \"memoryview\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/ld_so_conf.py:74:37 - error: Cannot access member \"strip\" for type \"memoryview\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/module_cmd.py:64:46 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/module_cmd.py:43:29 - error: Cannot access member \"strip\" for type \"memoryview\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/module_cmd.py:43:42 - error: Cannot access member \"split\" for type \"memoryview\"\n+     Member \"split\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/module_cmd.py:45:27 - error: Cannot access member \"split\" for type \"memoryview\"\n+     Member \"split\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/path.py:195:62 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 3558 errors, 48 warnings, 0 informations \n+ 3591 errors, 48 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:39:93 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:39:29 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:39:29 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:39:29 - error: Type of \"strip\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:39:29 - error: Type of \"strip\" is partially unknown\n+     Type of \"strip\" is \"((__chars: str | None = None, /) -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:40:96 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:40:31 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:40:31 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:40:31 - error: Type of \"strip\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/poetry_build.py:40:31 - error: Type of \"strip\" is partially unknown\n+     Type of \"strip\" is \"((__chars: str | None = None, /) -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:30:58 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:30:29 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/scripts/decode.py:30:29 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:58:51 - error: Cannot access member \"decode\" for type \"type[memoryview]\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:58:45 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:58:45 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((self: bytes, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | ((self: bytearray, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:58:45 - error: Expression of type \"((self: bytes, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | ((self: bytearray, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" cannot be assigned to parameter of type \"(bytes) -> str\"\n+     Type \"((self: bytes, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | ((self: bytearray, encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" cannot be assigned to type \"(bytes) -> str\"\n+       Type \"(self: bytearray, encoding: str = \"utf-8\", errors: str = \"strict\") -> str\" cannot be assigned to type \"(bytes) -> str\"\n+         Parameter 1: type \"bytes\" cannot be assigned to type \"bytearray\"\n+           \"bytes\" is incompatible with \"bytearray\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/app.py:245:17 - error: Argument of type \"memoryview\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"verify_signature\"\n-     \"memoryview\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:384:42 - error: Cannot access member \"fromhex\" for type \"type[memoryview]\"\n+     Member \"fromhex\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:384:36 - error: Type of \"fromhex\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:384:36 - error: Type of \"fromhex\" is partially unknown\n+     Type of \"fromhex\" is \"((__string: str, /) -> bytes) | ((__string: str, /) -> bytearray) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:507:19 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:503:36 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:503:36 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:726:41 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"parse\"\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:728:38 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"parse\"\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/guard.py:73:61 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/guard.py:73:12 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/guard.py:73:12 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:1133:26 - error: Cannot access member \"fromhex\" for type \"type[memoryview]\"\n+     Member \"fromhex\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:1133:20 - error: Type of \"fromhex\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:1133:20 - error: Type of \"fromhex\" is partially unknown\n+     Type of \"fromhex\" is \"((__string: str, /) -> bytes) | ((__string: str, /) -> bytearray) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:119:37 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:119:33 - error: Type of \"join\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:119:33 - error: Type of \"join\" is partially unknown\n+     Type of \"join\" is \"((__iterable_of_bytes: Iterable[Buffer], /) -> bytearray) | Unknown | ((__iterable_of_bytes: Iterable[Buffer], /) -> bytes)\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:29 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:20 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:20 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:73 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:64 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:497:64 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:25 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:16 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:16 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:77 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:68 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:499:68 - error: Type of \"decode\" is partially unknown\n+     Type of \"decode\" is \"((encoding: str = \"utf-8\", errors: str = \"strict\") -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:769:56 - error: Cannot access member \"fromhex\" for type \"type[memoryview]\"\n+     Member \"fromhex\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:769:50 - error: Type of \"fromhex\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:769:50 - error: Type of \"fromhex\" is partially unknown\n\n... (truncated 40 lines) ...\n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:301:20 - error: Cannot access member \"startswith\" for type \"memoryview*\"\n+     Member \"startswith\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:309:20 - error: Cannot access member \"endswith\" for type \"memoryview*\"\n+     Member \"endswith\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:323:24 - error: Cannot access member \"strip\" for type \"memoryview*\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:332:20 - error: Cannot access member \"strip\" for type \"memoryview*\"\n+     Member \"strip\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:332:16 - error: Expression of type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to return type \"StrOrBytes@Strip\"\n+     Type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to type \"StrOrBytes@Strip\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:341:20 - error: Cannot access member \"upper\" for type \"memoryview*\"\n+     Member \"upper\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:341:16 - error: Expression of type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to return type \"StrOrBytes@UpperCase\"\n+     Type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to type \"StrOrBytes@UpperCase\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:347:20 - error: Cannot access member \"lower\" for type \"memoryview*\"\n+     Member \"lower\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:347:16 - error: Expression of type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to return type \"StrOrBytes@LowerCase\"\n+     Type \"str* | bytes* | bytearray* | Unknown\" cannot be assigned to type \"StrOrBytes@LowerCase\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/tests/test_serialization/test_json_schema.py:586:25 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 172 errors, 5 warnings, 0 informations \n+ 182 errors, 5 warnings, 0 informations \n\nmkosi (https://github.com/systemd/mkosi)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/config.py:866:93 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/mkosi/mkosi/qemu.py\n+   /tmp/mypy_primer/projects/mkosi/mkosi/qemu.py:236:32 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/qemu.py:236:43 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/qemu.py:365:111 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 3 errors, 0 warnings, 0 informations \n+ 7 errors, 0 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2054:23 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2054:19 - error: Type of \"join\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2054:19 - error: Type of \"join\" is partially unknown\n+     Type of \"join\" is \"((__iterable_of_bytes: Iterable[Buffer], /) -> bytearray) | Unknown | ((__iterable_of_bytes: Iterable[Buffer], /) -> bytes)\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2054:19 - error: Return type of generator function must be compatible with \"Generator[bytearray | Unknown | bytes, Any, Any]\"\n+     \"Generator[bytearray | Unknown | bytes, Unknown, Unknown]\" is incompatible with \"Generator[bytes, None, None]\"\n+       Type parameter \"_YieldT_co@Generator\" is covariant, but \"bytearray | Unknown | bytes\" is not a subtype of \"bytes\"\n+         Type \"bytearray | Unknown | bytes\" cannot be assigned to type \"bytes\"\n+           \"bytearray\" is incompatible with \"bytes\"\n+           Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2074:23 - error: Cannot access member \"join\" for type \"memoryview\"\n+     Member \"join\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2074:19 - error: Type of \"join\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2074:19 - error: Type of \"join\" is partially unknown\n+     Type of \"join\" is \"((__iterable_of_bytes: Iterable[Buffer], /) -> bytearray) | Unknown | ((__iterable_of_bytes: Iterable[Buffer], /) -> bytes)\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2074:19 - error: Return type of generator function must be compatible with \"Generator[bytearray | Unknown | bytes, Any, Any]\"\n+     \"Generator[bytearray | Unknown | bytes, Unknown, Unknown]\" is incompatible with \"Generator[bytes, None, None]\"\n+       Type parameter \"_YieldT_co@Generator\" is covariant, but \"bytearray | Unknown | bytes\" is not a subtype of \"bytes\"\n+         Type \"bytearray | Unknown | bytes\" cannot be assigned to type \"bytes\"\n+           \"bytearray\" is incompatible with \"bytes\"\n+           Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n-     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+     \"bytearray\" is incompatible with \"bytes\"\n+     Set disableBytesTypePromotions to false to enable type promotion behavior for \"bytearray\" and \"memoryview\" (reportGeneralTypeIssues)\n- 14 errors, 0 warnings, 0 informations \n+ 22 errors, 0 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:2231:21 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/types.py:2242:69 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py:49:27 - error: Argument of type \"str | bytearray | memoryview\" cannot be assigned to parameter of type \"str\"\n+     Type \"str | bytearray | memoryview\" cannot be assigned to type \"str\"\n+       \"bytearray\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py:53:47 - error: Cannot access member \"encode\" for type \"bytearray\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/deprecated/parse.py:53:47 - error: Cannot access member \"encode\" for type \"memoryview\"\n+     Member \"encode\" is unknown (reportGeneralTypeIssues)\n- 50 errors, 0 warnings, 0 informations \n+ 55 errors, 0 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+ /tmp/mypy_primer/projects/freqtrade/freqtrade/__init__.py\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/__init__.py:12:63 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py:261:76 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 554 errors, 37 warnings, 0 informations \n+ 556 errors, 37 warnings, 0 informations \n\npyp (https://github.com/hauntsaninja/pyp)\n+   /tmp/mypy_primer/projects/pyp/tests/test_pyp.py:315:66 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n- 6 errors, 0 warnings, 0 informations \n+ 7 errors, 0 warnings, 0 informations \n\npyinstrument (https://github.com/joerick/pyinstrument)\n+ /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:85:37 - error: Cannot access member \"decode\" for type \"memoryview\"\n+     Member \"decode\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:85:16 - error: Type of \"decode\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/renderers/pstatsrenderer.py:85:16 - error: Type of \"decode\" is partially unknown\n\n... (truncated 167 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110dbac254a19ac290696",
    "number": 6015,
    "body": "…or a function that is not in a stub, not overloaded, and without a placeholder implementation. This addresses #5985.",
    "head_branch": "issue5985",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/type_adapter.py:130:70 - error: Expression of type \"ellipsis\" cannot be assigned to parameter of type \"ConfigDict | None\"\n+     Type \"ellipsis\" cannot be assigned to type \"ConfigDict | None\"\n+       \"ellipsis\" is incompatible with \"ConfigDict\"\n+       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n- 49 errors, 0 warnings, 0 informations \n+ 50 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:795:49 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:494:63 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:500:73 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:578:84 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:619:63 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:634:65 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/steam/profile.py\n+   /tmp/mypy_primer/projects/steam.py/steam/profile.py:145:21 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:496:58 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:527:58 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:547:64 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:573:21 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:627:51 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:646:61 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:661:61 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:674:58 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:685:80 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:694:54 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:705:66 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:714:64 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:725:61 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:738:53 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:751:57 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:758:56 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:771:67 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:794:21 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:809:47 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:814:50 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:819:50 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:838:73 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n\n... (truncated 158 lines) ...\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2099:13 - error: Expression of type \"ellipsis\" cannot be assigned to parameter of type \"Mapping[str, _AutocompleteValueT@set_choices] | Iterable[tuple[str, _AutocompleteValueT@set_choices]]\"\n+     Type \"ellipsis\" cannot be assigned to type \"Mapping[str, _AutocompleteValueT@set_choices] | Iterable[tuple[str, _AutocompleteValueT@set_choices]]\"\n+       \"ellipsis\" is incompatible with \"Mapping[str, _AutocompleteValueT@set_choices]\"\n+       \"ellipsis\" is incompatible with protocol \"Iterable[tuple[str, _AutocompleteValueT@set_choices]]\"\n+         \"__iter__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:323:13 - warning: Type of \"role\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:323:13 - warning: Type of \"role\" is partially unknown\n+     Type of \"role\" is \"Unknown | ellipsis\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/permissions.py:339:24 - error: Cannot access member \"permissions\" for type \"ellipsis\"\n+     Member \"permissions\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:430:16 - warning: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:430:16 - warning: Return type, \"Unknown | ellipsis\", is partially unknown (reportUnknownVariableType)\n- 2360 errors, 9831 warnings, 0 informations \n+ 2362 errors, 9831 warnings, 0 informations \n\n```",
      "@Gobot1234, this change will require a modification to your code base. You're using `...` in a manner that isn't legit.\r\n\r\nBTW, while looking into the new errors, I ran across the comment \"# I won't tell Eric if you won't. (This isn't part of PEP 696)\". 😀",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/type_adapter.py:130:70 - error: Expression of type \"ellipsis\" cannot be assigned to parameter of type \"ConfigDict | None\"\n+     Type \"ellipsis\" cannot be assigned to type \"ConfigDict | None\"\n+       \"ellipsis\" is incompatible with \"ConfigDict\"\n+       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n- 49 errors, 0 warnings, 0 informations \n+ 50 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:795:49 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:494:63 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:500:73 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:578:84 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:619:63 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:634:65 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/steam/profile.py\n+   /tmp/mypy_primer/projects/steam.py/steam/profile.py:145:21 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:496:58 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:527:58 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:547:64 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:573:21 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:627:51 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:646:61 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:661:61 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:674:58 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:685:80 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:694:54 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:705:66 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:714:64 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:725:61 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:738:53 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:751:57 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:758:56 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:771:67 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:794:21 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:809:47 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" in function \"send_proto_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(ProtoMsgsT@send_proto_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:814:50 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:819:50 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:838:73 - error: Argument of type \"ellipsis\" cannot be assigned to parameter \"check\" of type \"(UnifiedMsgT@send_um_and_wait) -> bool\" in function \"send_um_and_wait\"\n+     Type \"ellipsis\" cannot be assigned to type \"(UnifiedMsgT@send_um_and_wait) -> bool\" (reportGeneralTypeIssues)\n\n... (truncated 158 lines) ...\n\n```"
    ],
    "commit_messages": [
      "Added check for the use of an ellipsis for a default argument value f… (#6015)\n\n* Added check for the use of an ellipsis for a default argument value for a function that is not in a stub, not overloaded, and without a placeholder implementation. This addresses #5985.\r\n\r\n* Exempt abstract methods as well.\r\n\r\n---------\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110dcac254a19ac290697",
    "number": 6014,
    "body": "… not be considered compatible with `str` or a specific literal str in an invariant context. This addresses #5999.",
    "head_branch": "issue5999",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+     Type of \"get\" is \"Overload[(k: Literal['name']) -> (str | None), (k: Literal['name'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['config']) -> Unknown, (k: Literal['config'], default: Any) -> Unknown, (k: Literal['manifests']) -> (Unknown | None), (k: Literal['manifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['encryptedmanifests']) -> (Unknown | None), (k: Literal['encryptedmanifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['branches']) -> (Unknown | None), (k: Literal['branches'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['maxsize']) -> (str | None), (k: Literal['maxsize'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['depotfromapp']) -> (str | None), (k: Literal['depotfromapp'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['sharedinstall']) -> (bool | None), (k: Literal['sharedinstall'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: Literal['system_defined']) -> (bool | None), (k: Literal['system_defined'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: str) -> (Any | None), (k: str, default: Any | __TDefault@Depot) -> (Any | __TDefault@Depot)] | Unknown\" (reportUnknownMemberType)\n-     Type of \"get\" is \"Unknown | Overload[(k: Literal['name']) -> (str | None), (k: Literal['name'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['config']) -> Unknown, (k: Literal['config'], default: Any) -> Unknown, (k: Literal['manifests']) -> (Unknown | None), (k: Literal['manifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['encryptedmanifests']) -> (Unknown | None), (k: Literal['encryptedmanifests'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['branches']) -> (Unknown | None), (k: Literal['branches'], default: Unknown | __TDefault@Depot) -> (Unknown | __TDefault@Depot), (k: Literal['maxsize']) -> (str | None), (k: Literal['maxsize'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['depotfromapp']) -> (str | None), (k: Literal['depotfromapp'], default: str | __TDefault@Depot) -> (str | __TDefault@Depot), (k: Literal['sharedinstall']) -> (bool | None), (k: Literal['sharedinstall'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: Literal['system_defined']) -> (bool | None), (k: Literal['system_defined'], default: bool | __TDefault@Depot) -> (bool | __TDefault@Depot), (k: str) -> (Any | None), (k: str, default: Any | __TDefault@Depot) -> (Any | __TDefault@Depot)]\" (reportUnknownMemberType)\n-     Type of \"items\" is \"Unknown | (() -> dict_items[str, object])\" (reportUnknownMemberType)\n+     Type of \"items\" is \"(() -> dict_items[str, object]) | Unknown\" (reportUnknownMemberType)\n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:556:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:567:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:571:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:576:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:581:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:582:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:616:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:631:13 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:636:21 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1463:22 - error: Expression of type \"DataFrame\" cannot be assigned to declared type \"Series[Unknown]\"\n-     \"DataFrame\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1520:39 - error: Argument of type \"Timestamp\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[_T@list]\" in function \"__init__\"\n-     \"Timestamp\" is incompatible with protocol \"Iterable[_T@list]\"\n-       \"__iter__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:35:21 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"Series[Unknown]\"\n-     \"Timestamp\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:37:21 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"Series[Unknown]\"\n-     \"Timestamp\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:38:21 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"Series[Unknown]\"\n-     \"Timestamp\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:41:28 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"DatetimeIndex\"\n-     \"Timestamp\" is incompatible with \"DatetimeIndex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:44:28 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"DatetimeIndex\"\n-     \"Timestamp\" is incompatible with \"DatetimeIndex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:45:28 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"DatetimeIndex\"\n-     \"Timestamp\" is incompatible with \"DatetimeIndex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:46:28 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"DatetimeIndex\"\n-     \"Timestamp\" is incompatible with \"DatetimeIndex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:47:21 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"Series[Unknown]\"\n-     \"Timestamp\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:835:21 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[int]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:87:28 - error: Expression of type \"Timestamp\" cannot be assigned to declared type \"DatetimeIndex\"\n-     \"Timestamp\" is incompatible with \"DatetimeIndex\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:1237:25 - error: Expression of type \"TimestampSeries\" cannot be assigned to declared type \"Series[str]\"\n-     \"TimestampSeries\" is incompatible with \"Series[str]\"\n-       Type parameter \"S1@Series\" is invariant, but \"Timestamp\" is not the same as \"str\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_timefuncs.py:74:26 - error: Expression of type \"Timedelta\" cannot be assigned to declared type \"Timestamp\"\n-     \"Timedelta\" is incompatible with \"Timestamp\" (reportGeneralTypeIssues)\n- 1352 errors, 0 warnings, 0 informations \n+ 1337 errors, 0 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py): typechecking got 1.30x faster (53.2s -> 41.0s)\n(Performance measurements are based on a single noisy sample)\n+   /tmp/mypy_primer/projects/discord.py/discord/audit_logs.py:394:47 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/audit_logs.py:400:47 - warning: Unnecessary \"# type: ignore\" comment\n- 45 errors, 11 warnings, 0 informations \n+ 45 errors, 13 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug in type compatibility checks for `LiteralString`. It should not be considered compatible with `str` or a specific literal str in an invariant context. This addresses #5999. (#6014)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110ddac254a19ac290698",
    "number": 6013,
    "body": "…ased in PEP 484 as \"promotion types\". The new logic now properly models the runtime behavior for `isinstance` and class pattern matching when used with these promotion types. This addresses #6008.",
    "head_branch": "issue6008-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:806:17 - error: Type of \"pause_times\" is partially unknown\n+     Type of \"pause_times\" is \"list[AutoSplit | float | Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:308:9 - error: Type of \"start_image_threshold\" is partially unknown\n+     Type of \"start_image_threshold\" is \"AutoSplit | float | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:317:66 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"value\" in function \"decimal\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:325:9 - error: Type of \"similarity_diff\" is partially unknown\n+     Type of \"similarity_diff\" is \"float | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:551:31 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"stop_time\" in function \"__pause_loop\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:619:34 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"stop_time\" in function \"__pause_loop\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:804:17 - error: Type of \"threshold\" is partially unknown\n+     Type of \"threshold\" is \"AutoSplit | float | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:809:62 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"max\"\n+     Argument type is \"list[AutoSplit | float | Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:809:17 - error: Type of \"paused\" is partially unknown\n+     Type of \"paused\" is \"bool | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:814:21 - error: Type of \"should_reset\" is partially unknown\n+     Type of \"should_reset\" is \"bool | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:820:72 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"value\" in function \"decimal\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:851:66 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"value\" in function \"decimal\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:78:26 - error: Cannot access member \"settings_dict\" for type \"int\"\n+     Member \"settings_dict\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:76:9 - error: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"AutoSplit | float | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:71:26 - error: Cannot access member \"settings_dict\" for type \"int\"\n+     Member \"settings_dict\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:69:9 - error: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"AutoSplit | float | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:72:16 - error: Return type, \"AutoSplit | float | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:67:9 - error: Return type, \"AutoSplit | float | Unknown\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:79:16 - error: Return type, \"AutoSplit | float | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:74:9 - error: Return type, \"AutoSplit | float | Unknown\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/menu_bar.py:181:21 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"value\" in function \"decimal\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/menu_bar.py:186:21 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"value\" in function \"decimal\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n- 486 errors, 30 warnings, 7 informations \n+ 508 errors, 30 warnings, 7 informations \n\n```",
      "@erictraut Is that mypy_primer result expected? If so, why does a `isinstance` condition results in an unknown type in the else branch for floats unions?",
      "Yes, this is expected. \r\n\r\nThis code sample should make it clear why \r\n\r\n```python\r\ndef func(x: float | str):\r\n    if isinstance(x, float):\r\n        print('received a float!')\r\n    else:\r\n        reveal_type(x) # int | str\r\n\r\n        # The following line is a type violation because `x` is\r\n        # is possibly an `int`.\r\n        return x.upper()\r\n\r\nfunc(1)\r\n```\r\n"
    ],
    "commit_messages": [
      "Improved handling of types `float` and `complex`, which are special-cased in PEP 484 as \"promotion types\". The new logic now properly models the runtime behavior for `isinstance` and class pattern matching when used with these promotion types. This addresses #6008. (#6013)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110deac254a19ac290699",
    "number": 6012,
    "body": "…ased in PEP 484 as \"promotion types\". The new logic now properly models the runtime behavior for `isinstance` and class pattern matching when used with these promotion types. This addresses #6008.",
    "head_branch": "issue6008",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:806:17 - error: Type of \"pause_times\" is partially unknown\n+     Type of \"pause_times\" is \"list[AutoSplit | float | Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:308:9 - error: Type of \"start_image_threshold\" is partially unknown\n+     Type of \"start_image_threshold\" is \"AutoSplit | float | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:317:66 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"value\" in function \"decimal\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:325:9 - error: Type of \"similarity_diff\" is partially unknown\n+     Type of \"similarity_diff\" is \"float | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:551:31 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"stop_time\" in function \"__pause_loop\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:619:34 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"stop_time\" in function \"__pause_loop\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:804:17 - error: Type of \"threshold\" is partially unknown\n+     Type of \"threshold\" is \"AutoSplit | float | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:809:62 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"max\"\n+     Argument type is \"list[AutoSplit | float | Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:809:17 - error: Type of \"paused\" is partially unknown\n+     Type of \"paused\" is \"bool | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:814:21 - error: Type of \"should_reset\" is partially unknown\n+     Type of \"should_reset\" is \"bool | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:820:72 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"value\" in function \"decimal\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:851:66 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"value\" in function \"decimal\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:78:26 - error: Cannot access member \"settings_dict\" for type \"int\"\n+     Member \"settings_dict\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:76:9 - error: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"AutoSplit | float | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:71:26 - error: Cannot access member \"settings_dict\" for type \"int\"\n+     Member \"settings_dict\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:69:9 - error: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"AutoSplit | float | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:72:16 - error: Return type, \"AutoSplit | float | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:67:9 - error: Return type, \"AutoSplit | float | Unknown\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:79:16 - error: Return type, \"AutoSplit | float | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:74:9 - error: Return type, \"AutoSplit | float | Unknown\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/menu_bar.py:181:21 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"value\" in function \"decimal\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/menu_bar.py:186:21 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"value\" in function \"decimal\"\n+     Argument type is \"AutoSplit | float | Unknown\" (reportUnknownArgumentType)\n- 486 errors, 30 warnings, 7 informations \n+ 508 errors, 30 warnings, 7 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110dfac254a19ac29069a",
    "number": 6007,
    "body": "This creates some new validation for virtual environments. It's only testing it using venv/venvPath and pythonPath at the moment.\r\n\r\nFixes #5990 ",
    "head_branch": "rchiodo/venv_testing",
    "is_a_fork": true,
    "comments": [
      "The validation make take a few iterations to get right. It's kinda hard to test locally.",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Looks like one of the tests is failing on Windows.",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Create test for virtual environment (#6007)\n\n* Create test for virtual environment\r\n\r\n* Figure out why python path test is failing\r\n\r\n* Eliminate quotes on venv_path\r\n\r\n* Actually set the python path\r\n\r\n* Try just printing path on windows\r\n\r\n* Print a different variable\r\n\r\n* Try other echo patterns\r\n\r\n* user powershell commands to append\r\n\r\n* Fix prettier"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110dfac254a19ac29069b",
    "number": 6006,
    "body": "This [issue](https://github.com/microsoft/pylance-release/issues/4854) is showing us handling an undefined message in the background thread. Not sure how this is possible. Adding more logging.",
    "head_branch": "rchiodo-patch-1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Add more logging for SSH failure (#6006)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e0ac254a19ac29069c",
    "number": 6001,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4861\r\n\r\nThe root cause of this bug is that for a loose file (no workspace), the current execution root for command line options is just ''. Normalizing this changes it to '.' for some reason and that breaks all the other logic after that point.\r\n\r\nThe fix here is to not normalize when calling realCasePath. Nodefs.realCase can normalize paths on its own, so it's not necessary to normalize them ahead of time.",
    "head_branch": "rchiodo/fix_loose_files",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fix realCasePath changing empty paths to . (#6001)\n\n* Fix realCasePath changing empty paths to .\r\n\r\n* Verify real case paths are normalized\r\n\r\n* Case check should only run on windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e1ac254a19ac29069d",
    "number": 5989,
    "body": "statSync doesn't seem to detect symbol links.",
    "head_branch": "rchiodo-patch-1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Wrong statSync used in realCasePath (#5989)\n\nstatSync doesn't seem to detect symbol links."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e2ac254a19ac29069e",
    "number": 5987,
    "body": "Rollup of following changes:\r\n\r\n1 - Auto add imports when adding pytest fixtures through code actions (https://github.com/microsoft/pyrx/pull/4072)\r\n2 - Loc fixes\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\nCo-authored-by: Stella Huang <stellahuang@microsoft.com>",
    "head_branch": "pull-pylance-2023921",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Push pylance changes to pyright (#5987)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e3ac254a19ac29069f",
    "number": 5984,
    "body": "…ation when using nested constructor calls. This addresses #5947.",
    "head_branch": "issue5947",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a regression that caused an `Unknown` to appear in a type evaluation when using nested constructor calls. This addresses #5947. (#5984)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e4ac254a19ac2906a0",
    "number": 5983,
    "body": "…on when an overloaded function is called in a loop and one of the arguments to the call depends on the return value. This addresses #5980.",
    "head_branch": "issue5980",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to incorrect generation of `Unknown` type evaluation when an overloaded function is called in a loop and one of the arguments to the call depends on the return value. This addresses #5980. (#5983)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e5ac254a19ac2906a1",
    "number": 5982,
    "body": "… is consistent with the synthesized `get` method. This eliminates an `Unknown` in some cases. This addresses #5981.",
    "head_branch": "issue5981",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Updated the synthesized `pop` method for `TypedDict` so its signature is consistent with the synthesized `get` method. This eliminates an `Unknown` in some cases. This addresses #5981. (#5982)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e6ac254a19ac2906a2",
    "number": 5977,
    "body": "…-bounds tuple accesses if the indexed type is a union that includes both a bounded tuple and an unbounded tuple. This addresses #5968.",
    "head_branch": "issue5968",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that led to a false positive error when checking for out-of-bounds tuple accesses if the indexed type is a union that includes both a bounded tuple and an unbounded tuple. This addresses #5968. (#5977)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e7ac254a19ac2906a3",
    "number": 5975,
    "body": "…as performed only for `yield` statements, but it's possible to define a generator function that has no reachable yield statements. This addresses #5972.",
    "head_branch": "issue5972-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/asyncpg/test_asyncpg.py:24:11 - error: Return type of async generator function must be compatible with \"AsyncGenerator[Any, Any]\"\n+     \"AsyncGenerator[Any, Any, Any]\" is incompatible with \"Generator[Unknown, None, None]\" (reportGeneralTypeIssues)\n- 9093 errors, 467 warnings, 0 informations \n+ 9094 errors, 467 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved validation of generator return type. Previously, the check was performed only for `yield` statements, but it's possible to define a generator function that has no reachable yield statements. This addresses #5972. (#5975)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e8ac254a19ac2906a4",
    "number": 5973,
    "body": "…as performed only for `yield` statements, but it's possible to define a generator function that has no reachable yield statements. This addresses #5972.",
    "head_branch": "issue5972",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/utils.py:734:65 - error: Return type of generator function must be compatible with \"Generator[Any, Any, Any]\"\n+     \"Generator[Any, Any, Any]\" is incompatible with \"AsyncGenerator[tuple[_T@as_chunks, ...], None]\" (reportGeneralTypeIssues)\n- 7960 errors, 23 warnings, 0 informations \n+ 7961 errors, 23 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/asyncpg/test_asyncpg.py:24:11 - error: Return type of async generator function must be compatible with \"AsyncGenerator[Any, Any]\"\n+     \"AsyncGenerator[Any, Any, Any]\" is incompatible with \"Generator[Unknown, None, None]\" (reportGeneralTypeIssues)\n- 9093 errors, 467 warnings, 0 informations \n+ 9094 errors, 467 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e9ac254a19ac2906a5",
    "number": 5962,
    "body": "…ttern if the subject type is a superclass of `Mapping`, such as `object`. This addresses https://github.com/microsoft/pyright/issues/5963.",
    "head_branch": "issue4842",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in incorrect type narrowing for a mapping pattern if the subject type is a superclass of `Mapping`, such as `object`. This addresses https://github.com/microsoft/pylance-release/issues/4842. (#5962)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110e9ac254a19ac2906a6",
    "number": 5961,
    "body": "…f member access expressions. This addresses microsoft/pylance-release#4863.",
    "head_branch": "issue5958",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2978:13 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/common.py:877:13 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/build_systems.py:368:13 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/concretize_preferences.py:213:13 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/database.py:1032:17 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/install.py:57:9 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/package_class.py:267:9 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/spec_dag.py:911:13 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/spec_semantics.py:788:13 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1261:9 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/modules/common.py:185:9 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/modules/tcl.py:304:13 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/version/git_ref_lookup.py:82:17 - warning: Expression value is unused (reportUnusedExpression)\n- 3555 errors, 48 warnings, 0 informations \n+ 3555 errors, 61 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_enum.py:26:9 - warning: Expression value is unused (reportUnusedExpression)\n- 7960 errors, 23 warnings, 0 informations \n+ 7960 errors, 24 warnings, 0 informations \n\npandas (https://github.com/pandas-dev/pandas)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/_ranges.py:55:5 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/pandas/pandas/core/arrays/datetimelike.py:2132:9 - warning: Expression value is unused (reportUnusedExpression)\n- 557 errors, 0 warnings, 0 informations \n+ 557 errors, 2 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:294:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2470:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2484:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2554:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2568:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2638:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2652:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2722:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2737:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2807:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2821:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2903:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:2920:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:3005:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_checks.py:3022:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/context/test_menu.py:89:13 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/context/test_menu.py:133:13 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:2638:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:2664:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:3429:9 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/Tanjun/tests/dependencies/test_limiters.py:3454:9 - error: Expression value is unused (reportUnusedExpression)\n- 2360 errors, 9831 warnings, 0 informations \n+ 2381 errors, 9831 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py:604:13 - warning: Expression value is unused (reportUnusedExpression)\n- 45 errors, 11 warnings, 0 informations \n+ 45 errors, 12 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/dbapi/__init__.py:195:9 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/test_debugger.py:512:13 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/function/test_store.py:132:9 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/debugging/function/test_store.py:137:9 - warning: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/test_module.py:396:9 - warning: Expression value is unused (reportUnusedExpression)\n- 9375 errors, 464 warnings, 0 informations \n+ 9375 errors, 469 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject_wrapper.py:387:13 - error: Expression value is unused (reportUnusedExpression)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject_wrapper.py:396:13 - error: Expression value is unused (reportUnusedExpression)\n- 729 errors, 31 warnings, 0 informations \n+ 731 errors, 31 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py:260:9 - error: Expression value is unused (reportUnusedExpression)\n- 63 errors, 165 warnings, 0 informations \n+ 64 errors, 165 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110eaac254a19ac2906a7",
    "number": 5960,
    "body": "from telegram.ext import Updater, MessageHandler, Filters\r\n\r\ndef welcome(update, context):\r\n    user = update.effective_user\r\n    context.bot.send_message(chat_id=update.effective_chat.id,\r\n                             text=f\"مرحبًا {user.first_name}!\")\r\n\r\ndef main():\r\n    updater = Updater(token=\"6588018171:AAEm8yQy0qEdUjCkf5RAyws6hpPiVueBdII\", use_context=True)\r\n    dispatcher = updater.dispatcher\r\n\r\n    welcome_handler = MessageHandler(Filters.text & ~Filters.command, welcome)\r\n    dispatcher.add_handler(welcome_handler)\r\n\r\n    updater.start_polling()\r\n    updater.idle()\r\n\r\nif name == 'main':\r\n    main()\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110ebac254a19ac2906a8",
    "number": 5957,
    "body": "…`**kwargs` are passed as arguments to a function with a `ParamSpec` and the types of `*args` and `**kwargs` is `Any`. This addresses #5899.",
    "head_branch": "issue5899-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/core/fn.py\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:37:24 - error: Type of \"args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:37:24 - error: Type of \"args\" is partially unknown\n+     Type of \"args\" is \"Unknown | _P@tailrec.args\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:37:38 - error: Type of \"kw\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:37:38 - error: Type of \"kw\" is partially unknown\n+     Type of \"kw\" is \"Unknown | _P@tailrec.kwargs\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:37:13 - error: Type of \"args\" is partially unknown\n+     Type of \"args\" is \"Unknown | _P@tailrec.args\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:37:19 - error: Type of \"kw\" is partially unknown\n+     Type of \"kw\" is \"Unknown | _P@tailrec.kwargs\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:56:24 - error: Type of \"args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:56:24 - error: Type of \"args\" is partially unknown\n+     Type of \"args\" is \"Unknown | _P@tailrec_async.args\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:56:38 - error: Type of \"kw\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:56:38 - error: Type of \"kw\" is partially unknown\n+     Type of \"kw\" is \"Unknown | _P@tailrec_async.kwargs\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:56:13 - error: Type of \"args\" is partially unknown\n+     Type of \"args\" is \"Unknown | _P@tailrec_async.args\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:56:19 - error: Type of \"kw\" is partially unknown\n+     Type of \"kw\" is \"Unknown | _P@tailrec_async.kwargs\" (reportUnknownVariableType)\n- 218 errors, 0 warnings, 0 informations \n+ 230 errors, 0 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/futures/patch.py:31:12 - error: Argument of type \"Any | ((self: ThreadPoolExecutor, __fn: ((**_P@submit) -> _T@submit), *args: _P.args, **kwargs: _P.kwargs) -> Future[_T@submit])\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/futures/patch.py:31:12 - error: Argument of type \"Any | ((self: ThreadPoolExecutor, __fn: ((**_P@submit) -> _T@submit), *args: _P@submit.args, **kwargs: _P@submit.kwargs) -> Future[_T@submit])\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n-     Type \"Any | ((self: ThreadPoolExecutor, __fn: ((**_P@submit) -> _T@submit), *args: _P.args, **kwargs: _P.kwargs) -> Future[_T@submit])\" cannot be assigned to type \"FunctionType\"\n+     Type \"Any | ((self: ThreadPoolExecutor, __fn: ((**_P@submit) -> _T@submit), *args: _P@submit.args, **kwargs: _P@submit.kwargs) -> Future[_T@submit])\" cannot be assigned to type \"FunctionType\"\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive error when `*args` and `**kwargs` are passed as arguments to a function with a `ParamSpec` and the types of `*args` and `**kwargs` is `Any`. This addresses #5899. (#5957)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110ecac254a19ac2906a9",
    "number": 5956,
    "body": "…`**kwargs` are passed as arguments to a function with a `ParamSpec` and the types of `*args` and `**kwargs` is `Any`. This addresses #5899.",
    "head_branch": "issue5899",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/core/fn.py\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:38:23 - error: Arguments for ParamSpec \"_P@tailrec\" are missing (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/core/fn.py:57:29 - error: Arguments for ParamSpec \"_P@tailrec_async\" are missing (reportGeneralTypeIssues)\n- 218 errors, 0 warnings, 0 informations \n+ 220 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110edac254a19ac2906aa",
    "number": 5955,
    "body": "…es when the `reportIncompatibleVariableOverride` rule is enabled. This addresses #5933.",
    "head_branch": "issue5933-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:59:5 - error: \"group\" overrides symbol of same name in class \"Member\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:64:14 - error: \"clan\" overrides symbol of same name in class \"Member\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Clan\" is not the same as base type \"Clan | None\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/comment.py\n+   /tmp/mypy_primer/projects/steam.py/steam/comment.py:44:5 - error: \"id\" overrides symbol of same name in class \"Awardable\"\n+     Variable is mutable so its type is invariant\n+       Override type \"CommentID\" is not the same as base type \"int\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/event.py\n+   /tmp/mypy_primer/projects/steam.py/steam/event.py:275:14 - error: \"server_password\" overrides symbol of same name in class \"BaseEvent\"\n+     Variable is mutable so its type is invariant\n+       Override type \"str\" is not the same as base type \"str | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/event.py:297:5 - error: \"server_password\" overrides symbol of same name in class \"BaseEvent\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"str | None\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/group.py\n+   /tmp/mypy_primer/projects/steam.py/steam/group.py:30:14 - error: \"group\" overrides symbol of same name in class \"Member\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Group\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/group.py:26:5 - error: \"clan\" overrides symbol of same name in class \"Member\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Clan | None\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/invite.py\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:84:5 - error: \"clan\" overrides symbol of same name in class \"_ChatGroupInvite\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Clan | PartialClan\" is not the same as base type \"Clan | PartialClan | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:86:5 - error: \"relationship\" overrides symbol of same name in class \"_Invite\"\n+     Variable is mutable so its type is invariant\n+       Override type \"FriendRelationship\" is not the same as base type \"FriendRelationship | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:88:5 - error: \"group\" overrides symbol of same name in class \"_ChatGroupInvite\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:104:5 - error: \"group\" overrides symbol of same name in class \"_ChatGroupInvite\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Group\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:107:5 - error: \"clan\" overrides symbol of same name in class \"_ChatGroupInvite\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Clan | PartialClan | None\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/message.py\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:95:5 - error: \"channel\" overrides symbol of same name in class \"ChatMessage\"\n+     Variable is mutable so its type is invariant\n+       Override type \"GroupChannel\" is not the same as base type \"GroupChannel | ClanChannel\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:113:5 - error: \"channel\" overrides symbol of same name in class \"ChatMessage\"\n+     Variable is mutable so its type is invariant\n+       Override type \"ClanChannel\" is not the same as base type \"GroupChannel | ClanChannel\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/post.py\n+   /tmp/mypy_primer/projects/steam.py/steam/post.py:25:5 - error: \"id\" overrides symbol of same name in class \"Awardable\"\n+     Variable is mutable so its type is invariant\n+       Override type \"PostID\" is not the same as base type \"int\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/published_file.py:204:14 - error: \"id\" overrides symbol of same name in class \"Awardable\"\n+     Variable is mutable so its type is invariant\n+       Override type \"PublishedFileID\" is not the same as base type \"int\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/_gc/state.py\n+   /tmp/mypy_primer/projects/steam.py/steam/_gc/state.py:64:5 - error: \"user\" overrides symbol of same name in class \"ConnectionState\"\n+     Variable is mutable so its type is invariant\n+       Override type \"cached_property[Self@GCState[Inv@GCState], ClientUser]\" is not the same as base type \"cached_property[Self@ConnectionState, ClientUser]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/client.py:49:5 - error: \"user\" overrides symbol of same name in class \"Client\"\n+     Variable is mutable so its type is invariant\n+       Override type \"cached_property[Self@Client, ClientUser]\" is not the same as base type \"cached_property[Self@Client, ClientUser]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/client.py:50:5 - error: \"_state\" overrides symbol of same name in class \"Client\"\n+     Variable is mutable so its type is invariant\n+       Override type \"GCState\" is not the same as base type \"GCState[Any]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:42:5 - error: \"client\" overrides symbol of same name in class \"GCState\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Client\" is not the same as base type \"Client\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/client.py:48:5 - error: \"user\" overrides symbol of same name in class \"Client\"\n+     Variable is mutable so its type is invariant\n+       Override type \"cached_property[Self@Client, ClientUser]\" is not the same as base type \"cached_property[Self@Client, ClientUser]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/client.py:49:5 - error: \"_state\" overrides symbol of same name in class \"Client\"\n+     Variable is mutable so its type is invariant\n+       Override type \"GCState\" is not the same as base type \"GCState[Any]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:28:5 - error: \"client\" overrides symbol of same name in class \"GCState\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Client\" is not the same as base type \"Client\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:140:14 - error: \"header\" overrides symbol of same name in class \"NotProtobufWrapped\"\n+     Variable is mutable so its type is invariant\n+       Override type \"MessageHeader\" is not the same as base type \"MessageHeader | GCMessageHeader\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:169:14 - error: \"header\" overrides symbol of same name in class \"MessageBase\"\n+     Variable is mutable so its type is invariant\n+       Override type \"ProtobufMessageHeader\" is not the same as base type \"MessageHeader | ProtobufMessageHeader | GCMessageHeader\" (reportIncompatibleVariableOverride)\n- 7935 errors, 23 warnings, 0 informations \n+ 7960 errors, 23 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py:348:5 - error: \"parameter\" overrides symbol of same name in class \"ParserError\"\n+     Variable is mutable so its type is invariant\n+       Override type \"str\" is not the same as base type \"str | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py:368:5 - error: \"parameter\" overrides symbol of same name in class \"ParserError\"\n+     Variable is mutable so its type is invariant\n+       Override type \"str\" is not the same as base type \"str | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py:387:5 - error: \"parameter\" overrides symbol of same name in class \"ParserError\"\n+     Variable is mutable so its type is invariant\n+       Override type \"str\" is not the same as base type \"str | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py:467:5 - error: \"__cause__\" overrides symbol of same name in class \"BaseException\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Exception\" is not the same as base type \"BaseException | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py:496:5 - error: \"__cause__\" overrides symbol of same name in class \"BaseException\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Exception\" is not the same as base type \"BaseException | None\" (reportIncompatibleVariableOverride)\n- 2355 errors, 9831 warnings, 0 informations \n+ 2360 errors, 9831 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_implementations.py:155:5 - error: \"_target_\" overrides symbol of same name in class \"Builds\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Literal['hydra_zen.funcs.get_obj']\" is not the same as base type \"str\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_implementations.py:169:5 - error: \"_target_\" overrides symbol of same name in class \"Builds\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Literal['hydra_zen.funcs.zen_processing']\" is not the same as base type \"str\" (reportIncompatibleVariableOverride)\n- 182 errors, 0 warnings, 0 informations \n+ 184 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Added code to enforce invariance of class-scoped variables in overrides when the `reportIncompatibleVariableOverride` rule is enabled. This addresses #5933. (#5955)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110eeac254a19ac2906ab",
    "number": 5946,
    "body": "Fixes https://github.com/microsoft/pyright/issues/5943\r\n\r\nWe actually made this same change in Pylance but since we didn't ship this week it didn't end up here yet. \r\n\r\nAlso fixed what might be a potential bug with slicing the real case path when getting directory entries.",
    "head_branch": "rchiodo/skip_on_symlink",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fix real case path to not follow symlinks (#5946)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110efac254a19ac2906ac",
    "number": 5934,
    "body": "…es when the `reportIncompatibleVariableOverride` rule is enabled. This addresses #5933.",
    "head_branch": "issue5933",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+ /tmp/mypy_primer/projects/steam.py/steam/channel.py\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:41:14 - error: \"clan\" overrides symbol of same name in class \"Channel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Clan | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:42:14 - error: \"group\" overrides symbol of same name in class \"Channel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:101:5 - error: \"clan\" overrides symbol of same name in class \"Channel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Clan | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:105:14 - error: \"group\" overrides symbol of same name in class \"Channel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Group\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:113:5 - error: \"group\" overrides symbol of same name in class \"Channel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:117:14 - error: \"clan\" overrides symbol of same name in class \"Channel\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Clan\" is not the same as base type \"Clan | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:59:5 - error: \"group\" overrides symbol of same name in class \"Member\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:64:14 - error: \"clan\" overrides symbol of same name in class \"Member\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Clan\" is not the same as base type \"Clan | None\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/comment.py\n+   /tmp/mypy_primer/projects/steam.py/steam/comment.py:44:5 - error: \"id\" overrides symbol of same name in class \"Awardable\"\n+     Variable is mutable so its type is invariant\n+       Override type \"CommentID\" is not the same as base type \"int\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/event.py\n+   /tmp/mypy_primer/projects/steam.py/steam/event.py:275:14 - error: \"server_password\" overrides symbol of same name in class \"BaseEvent\"\n+     Variable is mutable so its type is invariant\n+       Override type \"str\" is not the same as base type \"str | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/event.py:297:5 - error: \"server_password\" overrides symbol of same name in class \"BaseEvent\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"str | None\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/group.py\n+   /tmp/mypy_primer/projects/steam.py/steam/group.py:30:14 - error: \"group\" overrides symbol of same name in class \"Member\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Group\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/group.py:26:5 - error: \"clan\" overrides symbol of same name in class \"Member\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Clan | None\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/invite.py\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:84:5 - error: \"clan\" overrides symbol of same name in class \"_ChatGroupInvite\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Clan | PartialClan\" is not the same as base type \"Clan | PartialClan | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:86:5 - error: \"relationship\" overrides symbol of same name in class \"_Invite\"\n+     Variable is mutable so its type is invariant\n+       Override type \"FriendRelationship\" is not the same as base type \"FriendRelationship | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:88:5 - error: \"group\" overrides symbol of same name in class \"_ChatGroupInvite\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:104:5 - error: \"group\" overrides symbol of same name in class \"_ChatGroupInvite\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Group\" is not the same as base type \"Group | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/invite.py:107:5 - error: \"clan\" overrides symbol of same name in class \"_ChatGroupInvite\"\n+     Variable is mutable so its type is invariant\n+       Override type \"None\" is not the same as base type \"Clan | PartialClan | None\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/message.py\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:95:5 - error: \"channel\" overrides symbol of same name in class \"ChatMessage\"\n+     Variable is mutable so its type is invariant\n+       Override type \"GroupChannel\" is not the same as base type \"GroupChannel | ClanChannel\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:113:5 - error: \"channel\" overrides symbol of same name in class \"ChatMessage\"\n+     Variable is mutable so its type is invariant\n+       Override type \"ClanChannel\" is not the same as base type \"GroupChannel | ClanChannel\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/post.py\n+   /tmp/mypy_primer/projects/steam.py/steam/post.py:25:5 - error: \"id\" overrides symbol of same name in class \"Awardable\"\n+     Variable is mutable so its type is invariant\n+       Override type \"PostID\" is not the same as base type \"int\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/published_file.py:204:14 - error: \"id\" overrides symbol of same name in class \"Awardable\"\n+     Variable is mutable so its type is invariant\n+       Override type \"PublishedFileID\" is not the same as base type \"int\" (reportIncompatibleVariableOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/_gc/state.py\n+   /tmp/mypy_primer/projects/steam.py/steam/_gc/state.py:64:5 - error: \"user\" overrides symbol of same name in class \"ConnectionState\"\n+     Variable is mutable so its type is invariant\n+       Override type \"cached_property[Self@GCState[Inv@GCState], ClientUser]\" is not the same as base type \"cached_property[Self@ConnectionState, ClientUser]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/client.py:49:5 - error: \"user\" overrides symbol of same name in class \"Client\"\n+     Variable is mutable so its type is invariant\n+       Override type \"cached_property[Self@Client, ClientUser]\" is not the same as base type \"cached_property[Self@Client, ClientUser]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/client.py:50:5 - error: \"_state\" overrides symbol of same name in class \"Client\"\n+     Variable is mutable so its type is invariant\n+       Override type \"GCState\" is not the same as base type \"GCState[Any]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:40:5 - error: \"client\" overrides symbol of same name in class \"GCState\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Client\" is not the same as base type \"Client\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/client.py:48:5 - error: \"user\" overrides symbol of same name in class \"Client\"\n+     Variable is mutable so its type is invariant\n+       Override type \"cached_property[Self@Client, ClientUser]\" is not the same as base type \"cached_property[Self@Client, ClientUser]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/client.py:49:5 - error: \"_state\" overrides symbol of same name in class \"Client\"\n+     Variable is mutable so its type is invariant\n+       Override type \"GCState\" is not the same as base type \"GCState[Any]\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:28:5 - error: \"client\" overrides symbol of same name in class \"GCState\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Client\" is not the same as base type \"Client\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:140:14 - error: \"header\" overrides symbol of same name in class \"NotProtobufWrapped\"\n+     Variable is mutable so its type is invariant\n+       Override type \"MessageHeader\" is not the same as base type \"MessageHeader | GCMessageHeader\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:169:14 - error: \"header\" overrides symbol of same name in class \"MessageBase\"\n+     Variable is mutable so its type is invariant\n+       Override type \"ProtobufMessageHeader\" is not the same as base type \"MessageHeader | ProtobufMessageHeader | GCMessageHeader\" (reportIncompatibleVariableOverride)\n- 7904 errors, 25 warnings, 0 informations \n\n... (truncated 1 lines) ...\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py:348:5 - error: \"parameter\" overrides symbol of same name in class \"ParserError\"\n+     Variable is mutable so its type is invariant\n+       Override type \"str\" is not the same as base type \"str | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py:368:5 - error: \"parameter\" overrides symbol of same name in class \"ParserError\"\n+     Variable is mutable so its type is invariant\n+       Override type \"str\" is not the same as base type \"str | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py:387:5 - error: \"parameter\" overrides symbol of same name in class \"ParserError\"\n+     Variable is mutable so its type is invariant\n+       Override type \"str\" is not the same as base type \"str | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py:467:5 - error: \"__cause__\" overrides symbol of same name in class \"BaseException\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Exception\" is not the same as base type \"BaseException | None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/errors.py:496:5 - error: \"__cause__\" overrides symbol of same name in class \"BaseException\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Exception\" is not the same as base type \"BaseException | None\" (reportIncompatibleVariableOverride)\n- 2355 errors, 9831 warnings, 0 informations \n+ 2360 errors, 9831 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_implementations.py:155:5 - error: \"_target_\" overrides symbol of same name in class \"Builds\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Literal['hydra_zen.funcs.get_obj']\" is not the same as base type \"str\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_implementations.py:169:5 - error: \"_target_\" overrides symbol of same name in class \"Builds\"\n+     Variable is mutable so its type is invariant\n+       Override type \"Literal['hydra_zen.funcs.zen_processing']\" is not the same as base type \"str\" (reportIncompatibleVariableOverride)\n- 182 errors, 0 warnings, 0 informations \n+ 184 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110f0ac254a19ac2906ad",
    "number": 5930,
    "body": "…were inconsistencies in how module names were reported. This addresses #5907.",
    "head_branch": "issue5907",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improved error messages that include module names. Previously, there were inconsistencies in how module names were reported. This addresses #5907. (#5930)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110f1ac254a19ac2906ae",
    "number": 5924,
    "body": "…#5923.",
    "head_branch": "issue5923",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Removed check for empty body of `@overload` function. This addresses #5923. (#5924)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110f2ac254a19ac2906af",
    "number": 5918,
    "body": "…ces when evaluating the type of a parameter within a nested function whose type refers to an outer-scope type variable. This addresses #5913.",
    "head_branch": "issue5913",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in a spurious error under certain circumstances when evaluating the type of a parameter within a nested function whose type refers to an outer-scope type variable. This addresses #5913. (#5918)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110f3ac254a19ac2906b0",
    "number": 5912,
    "body": "Alternative fix that maintains realCasePath for most cases, but skips it for pythonPath",
    "head_branch": "rchiodo/fix_pythonpath",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Since [1.1.327](https://github.com/microsoft/pyright/releases/tag/1.1.327) imports from the top-level package (from the root) stopped working. Can this pull request be the reason?\r\n\r\nSample project structure:\r\n```\r\nmy_repository/\r\n    .venv/\r\n    package/\r\n    tests/\r\n```\r\nImports in the \"tests\" folder does not work anymore:\r\n```py\r\nfrom package.foobar import spameggs\r\n```\r\nInstalled packages still can be imported.\r\n\r\n----\r\n\r\n### WORKAROUND \r\n\r\nI solved the problem by installing the root (the current package by itself). Also I had to add `py.typed` inside the package folder.",
      "@AIGeneratedUsername, if you suspect a bug, could you please file a bug report with repro steps? A comment in a closed PR is likely to get lost."
    ],
    "commit_messages": [
      "Skip real case path on pythonPath (#5912)\n\n* Skip real case path on pythonPath\r\n\r\n* Fix prettier"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110f4ac254a19ac2906b1",
    "number": 5908,
    "body": "As an experiment, changed `Never` (and `NoReturn`) to be assignable to no type other than themselves.",
    "head_branch": "never-1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2233:17 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2234:17 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2235:17 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2236:17 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2237:17 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1503:30 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:2241:84 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:927:86 - error: Argument of type \"Never\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/dependency.py:62:59 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"repr\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/error.py:62:34 - error: Argument of type \"Never\" cannot be assigned to parameter \"__s\" of type \"str\" in function \"write\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:829:29 - error: Argument of type \"(func: Unknown, path: Unknown, exc: Unknown) -> NoReturn\" cannot be assigned to parameter \"onerror\" of type \"_OnErrorCallback | None\" in function \"__call__\"\n+     Type \"(func: Unknown, path: Unknown, exc: Unknown) -> NoReturn\" cannot be assigned to type \"_OnErrorCallback | None\"\n+       Type \"(func: Unknown, path: Unknown, exc: Unknown) -> NoReturn\" cannot be assigned to type \"_OnErrorCallback\"\n+         Function return type \"NoReturn\" is incompatible with type \"object\"\n+       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:751:65 - error: Argument of type \"Never\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:921:65 - error: Argument of type \"Never\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:85:48 - error: Argument of type \"Never\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"isfile\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/provider_index.py:158:40 - error: Argument of type \"Never\" cannot be assigned to parameter \"spec_like\" of type \"Unknown | None\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/nmake.py:130:40 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/nmake.py:143:40 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/commands.py:678:55 - error: Argument of type \"Never\" cannot be assigned to parameter \"dest\" of type \"str\" in function \"_fish_dest_get_complete\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:205:46 - error: Argument of type \"list[Unknown] | list[str] | list[Never]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"list[Unknown] | list[str] | list[Never]\" cannot be assigned to type \"Iterable[str]\"\n+       \"list[Never]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"Never\" is not a subtype of \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:305:46 - error: Argument of type \"list[Unknown] | list[str] | list[Never]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+     Type \"list[Unknown] | list[str] | list[Never]\" cannot be assigned to type \"Iterable[str]\"\n+       \"list[Never]\" is incompatible with \"Iterable[str]\"\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"Never\" is not a subtype of \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/env.py:62:12 - error: Argument of type \"Never\" cannot be assigned to parameter \"__key\" of type \"str\" in function \"__getitem__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/uninstall.py:147:76 - error: Argument of type \"Never\" cannot be assigned to parameter \"installed\" of type \"bool\" in function \"query_one\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/uninstall.py:153:76 - error: Argument of type \"Never\" cannot be assigned to parameter \"installed\" of type \"bool\" in function \"query_one\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/util/editor.py:209:44 - error: Argument of type \"(exe: Unknown, args: Unknown) -> NoReturn\" cannot be assigned to parameter \"exec_fn\" of type \"(str, List[str]) -> int\" in function \"editor\"\n+     Type \"(exe: Unknown, args: Unknown) -> NoReturn\" cannot be assigned to type \"(str, List[str]) -> int\"\n+       Function return type \"NoReturn\" is incompatible with type \"int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/editor.py:64:73 - error: Expression of type \"(__path: StrOrBytesPath, __argv: _ExecVArgs, /) -> NoReturn\" cannot be assigned to parameter of type \"(str, List[str]) -> int\"\n+     Type \"(__path: StrOrBytesPath, __argv: _ExecVArgs, /) -> NoReturn\" cannot be assigned to type \"(str, List[str]) -> int\"\n+       Function return type \"NoReturn\" is incompatible with type \"int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/version/version_types.py:463:50 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/version/version_types.py:689:26 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/version/version_types.py:948:64 - error: Argument of type \"Never\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/version/version_types.py:1051:66 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n- 3568 errors, 49 warnings, 0 informations \n+ 3597 errors, 49 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1346:46 - error: Argument of type \"Never\" cannot be assigned to parameter \"__x\" of type \"_SupportsFloatOrIndex\" in function \"ceil\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/steam/comment.py\n+   /tmp/mypy_primer/projects/steam.py/steam/comment.py:73:19 - error: Method \"award\" overrides class \"Awardable\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Coroutine[Any, Any, None]\", override returns type \"Coroutine[Any, Any, Never]\"\n+       \"Coroutine[Any, Any, Never]\" is incompatible with \"Coroutine[Any, Any, None]\"\n+         Type parameter \"_ReturnT_co@Coroutine\" is covariant, but \"Never\" is not a subtype of \"None\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/enums.py\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:164:9 - error: Method \"__setattr__\" overrides class \"object\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Never\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:169:9 - error: Method \"__delattr__\" overrides class \"object\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Never\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:209:13 - error: Method \"__setattr__\" overrides class \"object\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Never\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:212:13 - error: Method \"__delattr__\" overrides class \"object\" in an incompatible manner\n+     Return type mismatch: base method returns type \"None\", override returns type \"Never\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/manifest.py:493:9 - error: Method \"read\" overrides class \"_IOMixin\" in an incompatible manner\n+     Return type mismatch: base method returns type \"Coroutine[Any, Any, bytes]\", override returns type \"Never\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:953:27 - error: Cannot assign member \"predicate\" for type \"Check[MaybeBool@check]\" (reportGeneralTypeIssues)\n- 7905 errors, 19 warnings, 0 informations \n+ 7913 errors, 19 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/__init__.py:105:36 - error: Argument of type \"Never\" cannot be assigned to parameter \"__key\" of type \"CaptureMethodEnum\" in function \"__getitem__\" (reportGeneralTypeIssues)\n- 486 errors, 30 warnings, 7 informations \n+ 487 errors, 30 warnings, 7 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/color.py:88:25 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/color.py:89:26 - error: Cannot assign member \"_rgba\" for type \"Color\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/color.py:90:21 - error: Expression of type \"Never\" cannot be assigned to declared type \"ColorType\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/fields.py:349:30 - error: Expression of type \"Never\" cannot be assigned to declared type \"type\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:2223:21 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:2229:16 - error: Expression of type \"Never\" cannot be assigned to return type \"JsonSchemaValue\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_utils.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_utils.py:258:34 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"getattr\" (reportGeneralTypeIssues)\n- 46 errors, 0 warnings, 0 informations \n+ 53 errors, 0 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange.py:749:20 - error: Expression of type \"complex\" cannot be assigned to return type \"float\"\n+     \"complex\" is incompatible with \"float\" (reportGeneralTypeIssues)\n- 549 errors, 37 warnings, 0 informations \n+ 550 errors, 37 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/ops/charm.py\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:898:72 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1310:65 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/operator/ops/model.py\n+   /tmp/mypy_primer/projects/operator/ops/model.py:450:32 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:556:22 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:556:41 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:555:29 - error: Argument type is unknown\n+     Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:739:21 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:740:26 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:738:34 - error: Argument type is unknown\n+     Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:787:45 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:1086:46 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:1526:65 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:1529:67 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:3301:72 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:3300:30 - error: Argument type is unknown\n+     Argument corresponds to parameter \"args\" in function \"__init__\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1526:76 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1759:72 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1864:62 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1874:71 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2487:72 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/operator/ops/testing.py\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1753:72 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1869:65 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1872:67 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:2707:62 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:2715:71 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:3062:84 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n- 4 errors, 0 warnings, 0 informations \n+ 30 errors, 0 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/pandas-stubs/core/series.pyi:1913:22 - error: Type \"Never\" cannot be assigned to type variable \"S1@Series\"\n+     Type \"Never\" is incompatible with bound type \"str | bytes | date | time | bool | int | float | complex | ExtensionDtype | Unknown | type[str] | type[complex] | type[bool] | type[object] | datetime | timedelta | Period | Interval[int | float | Timestamp | Timedelta] | CategoricalDtype\" for type variable \"S1@Series\" (reportGeneralTypeIssues)\n- 1348 errors, 0 warnings, 0 informations \n+ 1349 errors, 0 warnings, 0 informations \n\npyinstrument (https://github.com/joerick/pyinstrument)\n+ /tmp/mypy_primer/projects/pyinstrument/pyinstrument/frame.py\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/frame.py:173:78 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"Sized\" in function \"len\" (reportGeneralTypeIssues)\n- 31 errors, 5 warnings, 0 informations \n+ 32 errors, 5 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py:135:20 - warning: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/typing.py:300:12 - error: Expression of type \"type[DataclassInstance]\" cannot be assigned to return type \"type[DataClass[(Any)]]\"\n+     \"DataclassInstance\" is incompatible with protocol \"DataClass[(Any)]\"\n+     Type \"type[DataclassInstance]\" cannot be assigned to type \"type[DataClass[(Any)]]\"\n+       \"__init__\" is an incompatible type\n+         Type \"() -> None\" cannot be assigned to type \"(**PInit.args) -> None\" (reportGeneralTypeIssues)\n- 63 errors, 165 warnings, 0 informations \n+ 64 errors, 166 warnings, 0 informations \n\nspeedrun.com_global_scoreboard_webapp (https://github.com/Avasam/speedrun.com_global_scoreboard_webapp)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/services/utils.py:71:16 - error: Expression of type \"Never\" cannot be assigned to return type \"SrcDataResultDto | None\" (reportGeneralTypeIssues)\n- 29 errors, 8 warnings, 1 information \n+ 30 errors, 8 warnings, 1 information \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:606:30 - error: Argument of type \"Never\" cannot be assigned to parameter \"class_or_instance\" of type \"DataclassInstance | type[DataclassInstance]\" in function \"fields\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:607:39 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:613:33 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1595:30 - error: Argument of type \"Never\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_make_config.py\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_make_config.py:396:34 - error: Argument of type \"Never\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_utils.py:573:38 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_value_conversion.py\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_value_conversion.py:51:12 - error: Expression of type \"Builds[Unknown] | ZenPartialBuilds[Unknown] | HydraPartialBuilds[Unknown]\" cannot be assigned to return type \"PartialBuilds[type[_T@_unpack_partial]]\" (reportGeneralTypeIssues)\n- 182 errors, 0 warnings, 0 informations \n+ 189 errors, 0 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.21x faster (78.4s -> 64.7s)\n(Performance measurements are based on a single noisy sample)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/sampler.py:258:114 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"format\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/ddwaf/__init__.py:104:48 - error: Argument of type \"Never\" cannot be assigned to parameter \"handle\" of type \"ddwaf_handle_capsule\" in function \"py_ddwaf_required_addresses\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/ddwaf/ddwaf_types.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/ddwaf/ddwaf_types.py:191:26 - error: Argument of type \"Never\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/iast/_taint_tracking/aspects.py:216:16 - error: Expression of type \"Never\" cannot be assigned to return type \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/iast/_taint_tracking/aspects.py:252:16 - error: Expression of type \"Never\" cannot be assigned to return type \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/trace_utils.py:138:28 - error: Argument of type \"Never\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[list[bytes]]\" in function \"__init__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/trace_utils.py:138:23 - error: Expression of type \"dict[bytes, bytes]\" cannot be assigned to declared type \"Dict[str, str]\"\n+     \"dict[bytes, bytes]\" is incompatible with \"Dict[str, str]\"\n+       Type parameter \"_KT@dict\" is invariant, but \"bytes\" is not the same as \"str\"\n+       Type parameter \"_VT@dict\" is invariant, but \"bytes\" is not the same as \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/trace_utils.py:216:48 - error: Argument of type \"Never\" cannot be assigned to parameter \"key\" of type \"str\" in function \"get_header_value\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiopg/patch.py:53:29 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/openai/_endpoint_hooks.py:44:45 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"Sized\" in function \"len\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/openai/_endpoint_hooks.py:45:39 - error: Argument of type \"Never\" cannot be assigned to parameter \"iterable\" of type \"Iterable[_T@enumerate]\" in function \"__init__\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/psycopg/extensions.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/psycopg/extensions.py:128:29 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/psycopg/extensions.py:142:29 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/tornado/stack_context.py:89:52 - error: Argument of type \"Never\" cannot be assigned to parameter \"span\" of type \"Span\" in function \"_update_active\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_debugger.py:405:66 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_debugger.py:690:29 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_debugger.py:693:68 - error: Argument of type \"Never\" cannot be assigned to parameter \"args\" of type \"object\" in function \"warning\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_function/discovery.py:109:68 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_probe/registry.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_probe/registry.py:51:67 - error: Argument of type \"Never\" cannot be assigned to parameter \"__o\" of type \"object\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/aspects/aspect_utils.py:76:20 - error: Expression of type \"Never\" cannot be assigned to return type \"Text\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/aspects/test_add_aspect.py:143:24 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"Sized\" in function \"len\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/fixtures/aspects/str_methods_py3.py:95:88 - error: Argument of type \"Never\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/kafka/test_kafka.py:234:34 - error: Argument of type \"Never\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/kafka/test_kafka.py:280:34 - error: Argument of type \"Never\" cannot be assigned to parameter \"object\" of type \"ReadableBuffer\" in function \"__new__\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/test_forksafe.py:113:6 - error: Argument of type \"() -> NoReturn\" cannot be assigned to parameter \"after_in_child\" of type \"() -> None\" in function \"register\"\n+     Type \"() -> NoReturn\" cannot be assigned to type \"() -> None\"\n+       Function return type \"NoReturn\" is incompatible with type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/profiling/exporter/test_pprof.py:757:24 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"Sized\" in function \"len\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_writer.py:442:41 - error: Argument of type \"Never\" cannot be assigned to parameter \"__prefix\" of type \"str | tuple[str, ...]\" in function \"startswith\" (reportGeneralTypeIssues)\n- 9314 errors, 441 warnings, 0 informations \n+ 9341 errors, 441 warnings, 0 informations \n\nPyWinCtl (https://github.com/Kalmat/PyWinCtl)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/ewmhlib/_ewmhlib.py:265:53 - error: Argument of type \"Never\" cannot be assigned to parameter \"__obj\" of type \"object\" in function \"isinstance\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/ewmhlib/_ewmhlib.py:265:16 - error: Expression of type \"list[int] | list[Never]\" cannot be assigned to return type \"List[int] | List[str] | None\" (reportGeneralTypeIssues)\n- 288 errors, 21 warnings, 3 informations \n+ 290 errors, 21 warnings, 3 informations \n\npandera (https://github.com/pandera-dev/pandera)\n\n... (truncated 50 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110f5ac254a19ac2906b2",
    "number": 5905,
    "body": "rollup of the following changes:\n    1. Put back using 'rules' instead of 'codes' https://github.com/microsoft/pyrx/pull/4073\n    2. Support rename for the new type statement https://github.com/microsoft/pyrx/pull/4063\n    3. pylance loc update 20230901.1 https://github.com/microsoft/pyrx/pull/4070\n    4. Changed label to `index value` https://github.com/microsoft/pyrx/pull/4066\n    5. Alternate fix to prevent notebook crash https://github.com/microsoft/pyrx/pull/4065\n    6. Fix diagnostics being cleared when a notebook cell is deleted https://github.com/microsoft/pyrx/pull/4060\n    7. Switch to using the real path for a file everywhere https://github.com/microsoft/pyrx/pull/4057\n    8. Move intelliCode load outside of completion https://github.com/microsoft/pyrx/pull/4050\n    9. add implicit import to completions https://github.com/microsoft/pyrx/pull/4053\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.326",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nrclip (https://github.com/yurijmikhalevich/rclip)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:8:8 - error: Import \"numpy\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:8:8 - error: Import \"numpy\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:9:6 - warning: Import \"tqdm\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:9:6 - warning: Import \"tqdm\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:10:8 - warning: Import \"PIL\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:10:8 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:6 - warning: Import \"PIL\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:17 - warning: Import \"PIL.Image\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:24 - warning: Import \"PIL.ImageFile\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:24 - warning: Import \"PIL.ImageFile\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:5:8 - error: Import \"numpy\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:5:8 - error: Import \"numpy\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:6:8 - error: Import \"numpy.typing\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:6:8 - error: Import \"numpy.typing\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:28:12 - error: Import \"open_clip\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:28:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:35:12 - error: Import \"open_clip\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:35:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:46:12 - error: Import \"open_clip\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:46:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:56:12 - error: Import \"torch\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:56:12 - error: Import \"torch\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:64:12 - error: Import \"torch\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:64:12 - error: Import \"torch\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:7:6 - warning: Import \"PIL\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:7:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:7:17 - warning: Import \"PIL.Image\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:7:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:144:12 - error: Import \"torch.backends.mps\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:144:12 - error: Import \"torch.backends.mps\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:6 - warning: Import \"PIL\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:17 - warning: Import \"PIL.Image\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:7:8 - warning: Import \"requests\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:7:8 - warning: Import \"requests\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:6 - warning: Import \"PIL\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:17 - warning: Import \"PIL.Image\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:3:8 - error: Import \"jinja2\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:3:8 - error: Import \"jinja2\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:4:8 - error: Import \"poet\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:4:8 - error: Import \"poet\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:5:8 - warning: Import \"requests\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:5:8 - warning: Import \"requests\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py:5:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py:5:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:27:6 - error: Import \"sphinx.domains.python\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:27:6 - error: Import \"sphinx.domains.python\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:28:6 - error: Import \"sphinx.ext.apidoc\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:28:6 - error: Import \"sphinx.ext.apidoc\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:29:6 - error: Import \"sphinx.parsers\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:29:6 - error: Import \"sphinx.parsers\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:26:6 - warning: Import \"docutils.statemachine\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:26:6 - warning: Import \"docutils.statemachine\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/_pygments/style.py:8:6 - error: Import \"pygments.styles.default\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/_pygments/style.py:8:6 - error: Import \"pygments.styles.default\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/_pygments/style.py:9:6 - warning: Import \"pygments.token\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/_pygments/style.py:9:6 - warning: Import \"pygments.token\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:948:12 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:948:12 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:8:8 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:8:8 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:9:8 - warning: Import \"jsonschema.exceptions\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:9:8 - warning: Import \"jsonschema.exceptions\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate.py:11:8 - error: Import \"macholib.mach_o\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate.py:11:8 - error: Import \"macholib.mach_o\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate.py:12:8 - error: Import \"macholib.MachO\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate.py:12:8 - error: Import \"macholib.MachO\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/tengine.py:73:12 - error: Import \"jinja2\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/tengine.py:73:12 - error: Import \"jinja2\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:14:12 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:14:12 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:216:20 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:216:20 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/container/__init__.py:34:12 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/container/__init__.py:34:12 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/container/writers/__init__.py:191:16 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/container/writers/__init__.py:191:16 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/common.py:935:16 - error: Import \"jinja2\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/common.py:935:16 - error: Import \"jinja2\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/linux_distro.py:42:20 - error: Import \"distro\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/linux_distro.py:42:20 - error: Import \"distro\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:15:12 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:15:12 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:21:16 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:21:16 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:54:20 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:54:20 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:618:20 - error: Import \"clingo\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:618:20 - error: Import \"clingo\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:620:10 - error: Import \"clingo.ast\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:620:10 - error: Import \"clingo.ast\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:623:14 - error: Import \"clingo.ast\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:623:14 - error: Import \"clingo.ast\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:626:14 - error: Import \"clingo\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:626:14 - error: Import \"clingo\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/abi.py:7:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/abi.py:7:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/architecture.py:9:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/architecture.py:9:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/audit.py:5:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/audit.py:5:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/bindist.py:17:8 - error: Import \"py\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/bindist.py:17:8 - error: Import \"py\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/bindist.py:18:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n\n... (truncated 397 lines) ...\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:238:10 - error: Import \"dominate.util\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:238:10 - error: Import \"dominate.util\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:297:10 - error: Import \"dominate\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:297:10 - error: Import \"dominate\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:298:10 - error: Import \"dominate.util\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:298:10 - error: Import \"dominate.util\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:114:10 - warning: Import \"docutils.core\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:114:10 - warning: Import \"docutils.core\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:115:10 - warning: Import \"docutils.io\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:115:10 - warning: Import \"docutils.io\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:166:10 - warning: Import \"docutils.core\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:166:10 - warning: Import \"docutils.core\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:228:10 - warning: Import \"bs4\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:228:10 - warning: Import \"bs4\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:71:8 - warning: Import \"docutils\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:71:8 - warning: Import \"docutils\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:72:8 - warning: Import \"docutils.frontend\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:72:8 - warning: Import \"docutils.frontend\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:73:8 - warning: Import \"docutils.transforms\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:73:8 - warning: Import \"docutils.transforms\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:74:8 - warning: Import \"docutils.utils\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:74:8 - warning: Import \"docutils.utils\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:75:8 - warning: Import \"docutils.writers\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:75:8 - warning: Import \"docutils.writers\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:6 - warning: Import \"docutils\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:6 - warning: Import \"docutils\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:22 - warning: Import \"docutils.nodes\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:22 - warning: Import \"docutils.nodes\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:81:6 - warning: Import \"docutils.readers.standalone\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:81:6 - warning: Import \"docutils.readers.standalone\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:82:6 - warning: Import \"docutils.transforms\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:82:6 - warning: Import \"docutils.transforms\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:6 - warning: Import \"docutils.writers\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:6 - warning: Import \"docutils.writers\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:30 - warning: Import \"docutils.writers.html4css1\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:30 - warning: Import \"docutils.writers.html4css1\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:41 - warning: Import \"docutils.writers.html5_polyglot\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:41 - warning: Import \"docutils.writers.html5_polyglot\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:57 - warning: Import \"docutils.writers.latex2e\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:57 - warning: Import \"docutils.writers.latex2e\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:66 - warning: Import \"docutils.writers.xetex\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:66 - warning: Import \"docutils.writers.xetex\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:1197:14 - warning: Import \"docutils.statemachine\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:1197:14 - warning: Import \"docutils.statemachine\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/html.py:25:6 - error: Import \"dominate\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/html.py:25:6 - error: Import \"dominate\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/html.py:26:6 - error: Import \"dominate.util\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/html.py:26:6 - error: Import \"dominate.util\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:33:6 - warning: Import \"docutils\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:33:6 - warning: Import \"docutils\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:33:22 - warning: Import \"docutils.nodes\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:33:22 - warning: Import \"docutils.nodes\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:112:10 - warning: Import \"docutils.core\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:112:10 - warning: Import \"docutils.core\" could not be resolved from source (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/myst.py:35:10 - error: Import \"myst_parser.docutils_\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/myst.py:35:10 - error: Import \"myst_parser.docutils_\" could not be resolved (reportMissingImports)\n\n... (truncated 36 lines) ...\n\nbidict (https://github.com/jab/bidict)\n-   /tmp/mypy_primer/projects/bidict/docs/conf.py:51:12 - error: Import \"sphinx_copybutton\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/docs/conf.py:51:12 - error: Import \"sphinx_copybutton\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/docs/conftest.py:12:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/docs/conftest.py:12:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/conftest.py:7:6 - error: Import \"hypothesis\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/tests/conftest.py:7:6 - error: Import \"hypothesis\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/test_class_relationships.py:15:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/tests/test_class_relationships.py:15:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py:15:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py:15:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/property_tests/_strategies.py:14:8 - error: Import \"hypothesis.strategies\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/tests/property_tests/_strategies.py:14:8 - error: Import \"hypothesis.strategies\" could not be resolved (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:22:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:22:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n\n... (truncated 1149 lines) ...```",
      "The mypy changes are expected. They're caused by the import resolve error going back to what it was before."
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.326 (#5905)\n\nCo-authored-by: GitHub Actions <41898282+github-actions[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110f6ac254a19ac2906b3",
    "number": 5898,
    "body": "…nto the classes they construct. This addresses #5897.",
    "head_branch": "issue5897",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1738:50 - error: Cannot access member \"resources\" for type \"PackageBase\"\n-     Member \"resources\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1515:26 - error: Cannot access member \"patch\" for type \"PackageBase\"\n-     Member \"patch\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1241:47 - error: Cannot access member \"extendees\" for type \"PackageBase\"\n-     Member \"extendees\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1264:30 - error: Cannot access member \"extendees\" for type \"PackageBase\"\n-     Member \"extendees\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:783:57 - error: Cannot access member \"__name__\" for type \"PackageBase\"\n-     Member \"__name__\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1220:21 - error: Cannot access member \"extendees\" for type \"PackageBase\"\n-     Member \"extendees\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1227:33 - error: Cannot access member \"extendees\" for type \"PackageBase\"\n-     Member \"extendees\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1249:21 - error: Cannot access member \"extendees\" for type \"PackageBase\"\n-     Member \"extendees\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1253:31 - error: Cannot access member \"extendees\" for type \"PackageBase\"\n-     Member \"extendees\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1254:21 - error: Cannot access member \"extendees\" for type \"PackageBase\"\n-     Member \"extendees\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1276:34 - error: Cannot access member \"extendees\" for type \"PackageBase\"\n-     Member \"extendees\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1287:40 - error: Cannot access member \"provided\" for type \"PackageBase\"\n-     Member \"provided\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1298:44 - error: Cannot access member \"provided\" for type \"PackageBase\"\n-     Member \"provided\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1455:66 - error: Cannot access member \"patch\" for type \"PackageBase\"\n-     Member \"patch\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1742:50 - error: Cannot access member \"resources\" for type \"PackageBase\"\n-     Member \"resources\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2347:42 - error: Cannot access member \"url\" for type \"PackageBase\"\n-     Member \"url\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2348:30 - error: Cannot access member \"url\" for type \"PackageBase\"\n-     Member \"url\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2351:43 - error: Cannot access member \"urls\" for type \"PackageBase\"\n-     Member \"urls\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2352:30 - error: Cannot access member \"urls\" for type \"PackageBase\"\n-     Member \"urls\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/autotools.py:60:22 - error: Cannot access member \"configure_flag_args\" for type \"AutotoolsPackage\"\n-     Member \"configure_flag_args\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/autotools.py:66:18 - error: Cannot access member \"configure_flag_args\" for type \"AutotoolsPackage\"\n-     Member \"configure_flag_args\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/autotools.py:297:57 - error: Cannot access member \"name\" for type \"AutotoolsBuilder\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/cmake.py:139:22 - error: Cannot access member \"cmake_flag_args\" for type \"CMakePackage\"\n-     Member \"cmake_flag_args\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/cmake.py:148:22 - error: Cannot access member \"cmake_flag_args\" for type \"CMakePackage\"\n-     Member \"cmake_flag_args\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/cmake.py:155:22 - error: Cannot access member \"cmake_flag_args\" for type \"CMakePackage\"\n-     Member \"cmake_flag_args\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:106:31 - error: Cannot access member \"py_namespace\" for type \"PythonExtension\"\n-     Member \"py_namespace\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:109:73 - error: Cannot access member \"py_namespace\" for type \"PythonExtension\"\n-     Member \"py_namespace\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:111:21 - error: Cannot access member \"py_namespace\" for type \"PythonExtension\"\n-     Member \"py_namespace\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:145:17 - error: Cannot access member \"py_namespace\" for type \"PythonExtension\"\n-     Member \"py_namespace\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:150:21 - error: Cannot access member \"py_namespace\" for type \"PythonExtension\"\n-     Member \"py_namespace\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:152:66 - error: Cannot access member \"py_namespace\" for type \"PythonExtension\"\n-     Member \"py_namespace\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:202:31 - error: Cannot access member \"get_external_python_for_prefix\" for type \"PythonExtension\"\n-     Member \"get_external_python_for_prefix\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/buildrequest.py:30:28 - error: Cannot access member \"stop_before_phase\" for type \"PackageBase\"\n-     Member \"stop_before_phase\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/buildrequest.py:31:28 - error: Cannot access member \"last_phase\" for type \"PackageBase\"\n-     Member \"last_phase\" is unknown (reportGeneralTypeIssues)\n- 3602 errors, 49 warnings, 0 informations \n+ 3568 errors, 49 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.28x faster (65.1s -> 50.7s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Added support for custom metaclasses that inject instance variables into the classes they construct. This addresses #5897. (#5898)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110f7ac254a19ac2906b4",
    "number": 5890,
    "body": "…r call when bidirectional type inference is used and the expected type is a union that includes more than one compatible instance type. This addresses #5887.",
    "head_branch": "issue5887-part2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to the incorrect type evaluation of a constructor call when bidirectional type inference is used and the expected type is a union that includes more than one compatible instance type. This addresses #5887. (#5890)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110f8ac254a19ac2906b5",
    "number": 5888,
    "body": "…list, set and tuple expressions when the expected type is a union of types that includes more than one plausible candidate. The types in the union are now sorted so type evaluation doesn't depend on the order in which the union was defined. This addresses part of #5887.",
    "head_branch": "issue5887-part1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nmaterialize (https://github.com/MaterializeInc/materialize)\n+ /tmp/mypy_primer/projects/materialize/test/data-ingest/mzcompose.py\n+   /tmp/mypy_primer/projects/materialize/test/data-ingest/mzcompose.py:97:13 - error: Expected no arguments to \"Workload\" constructor (reportGeneralTypeIssues)\n- 6 errors, 221 warnings, 0 informations \n+ 7 errors, 221 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved determinism of bidirectional type inference for dictionary, list, set and tuple expressions when the expected type is a union of types that includes more than one plausible candidate. The types in the union are now sorted so type evaluation doesn't depend on the order in which the union was defined. This addresses part of #5887. (#5888)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110f9ac254a19ac2906b6",
    "number": 5884,
    "body": null,
    "head_branch": "T7x77-patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110faac254a19ac2906b7",
    "number": 5880,
    "body": "… where a type argument for a function call argument type is left unspecified (and is therefore assumed to be Unknown). This addresses #5879.",
    "head_branch": "issue5879",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon)\n- /tmp/mypy_primer/projects/alectryon/alectryon/lean3.py\n-   /tmp/mypy_primer/projects/alectryon/alectryon/lean3.py:264:24 - error: Operator \"<\" not supported for types \"SupportsRichComparison | Unknown\" and \"SupportsRichComparison | Unknown\"\n-     Operator \"<\" not supported for types \"SupportsDunderGT[Any]\" and \"SupportsDunderLT[Any]\" (reportGeneralTypeIssues)\n- 14 errors, 37 warnings, 0 informations \n+ 13 errors, 37 warnings, 0 informations \n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:1111:43 - error: Argument of type \"SupportsRichComparison\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/filesystem_view.py:588:17 - error: \"SupportsDunderLT[Any]\" is not iterable\n-     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/filesystem_view.py:588:17 - error: \"SupportsDunderGT[Any]\" is not iterable\n-     \"__iter__\" method not defined (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/mixins.py\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/mixins.py:103:13 - error: \"SupportsDunderLT[Any]\" is not iterable\n-     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/mixins.py:103:13 - error: \"SupportsDunderGT[Any]\" is not iterable\n-     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:736:39 - error: Cannot access member \"name\" for type \"SupportsDunderLT[Any]\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:736:39 - error: Cannot access member \"name\" for type \"SupportsDunderGT[Any]\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1622:41 - error: Argument of type \"list[SupportsRichComparison]\" cannot be assigned to parameter \"__iterable_of_bytes\" of type \"Iterable[ReadableBuffer]\" in function \"join\"\n-     \"list[SupportsRichComparison]\" is incompatible with \"Iterable[ReadableBuffer]\"\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"SupportsRichComparison\" is not a subtype of \"ReadableBuffer\"\n-         Type \"SupportsRichComparison\" cannot be assigned to type \"ReadableBuffer\"\n-           \"SupportsDunderGT[Any]\" is incompatible with protocol \"ReadableBuffer\"\n-             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2463:31 - error: Cannot access member \"package_class\" for type \"SupportsDunderLT[Any]\"\n-     Member \"package_class\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:2463:31 - error: Cannot access member \"package_class\" for type \"SupportsDunderGT[Any]\"\n-     Member \"package_class\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2968:26 - error: \"SupportsDunderLT[Any]\" is not iterable\n-     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2968:26 - error: \"SupportsDunderGT[Any]\" is not iterable\n-     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:936:17 - error: Operator \"+\" not supported for types \"SupportsRichComparison\" and \"Literal['==\"', '=\"']\"\n-     Operator \"+\" not supported for types \"SupportsDunderLT[Any]\" and \"Literal['==\"']\"\n-     Operator \"+\" not supported for types \"SupportsDunderLT[Any]\" and \"Literal['=\"']\"\n-     Operator \"+\" not supported for types \"SupportsDunderGT[Any]\" and \"Literal['==\"']\"\n-     Operator \"+\" not supported for types \"SupportsDunderGT[Any]\" and \"Literal['=\"']\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2683:32 - error: Cannot access member \"external\" for type \"SupportsDunderLT[Any]\"\n-     Member \"external\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2683:32 - error: Cannot access member \"external\" for type \"SupportsDunderGT[Any]\"\n-     Member \"external\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2689:33 - error: Cannot access member \"clear_dependencies\" for type \"SupportsDunderLT[Any]\"\n-     Member \"clear_dependencies\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2689:33 - error: Cannot access member \"clear_dependencies\" for type \"SupportsDunderGT[Any]\"\n-     Member \"clear_dependencies\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2690:33 - error: Cannot assign member \"architecture\" for type \"SupportsDunderLT[Any]\"\n-     Member \"architecture\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2690:33 - error: Cannot assign member \"architecture\" for type \"SupportsDunderGT[Any]\"\n-     Member \"architecture\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2697:37 - error: Cannot access member \"name\" for type \"SupportsDunderLT[Any]\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2697:37 - error: Cannot access member \"name\" for type \"SupportsDunderGT[Any]\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2698:41 - error: Cannot access member \"versions\" for type \"SupportsDunderLT[Any]\"\n-     Member \"versions\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2698:41 - error: Cannot access member \"versions\" for type \"SupportsDunderGT[Any]\"\n-     Member \"versions\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2699:41 - error: Cannot access member \"compiler\" for type \"SupportsDunderLT[Any]\"\n-     Member \"compiler\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2699:41 - error: Cannot access member \"compiler\" for type \"SupportsDunderGT[Any]\"\n-     Member \"compiler\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2700:41 - error: Cannot access member \"architecture\" for type \"SupportsDunderLT[Any]\"\n-     Member \"architecture\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2700:41 - error: Cannot access member \"architecture\" for type \"SupportsDunderGT[Any]\"\n-     Member \"architecture\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2701:41 - error: Cannot access member \"_dependencies\" for type \"SupportsDunderLT[Any]\"\n-     Member \"_dependencies\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2701:41 - error: Cannot access member \"_dependencies\" for type \"SupportsDunderGT[Any]\"\n-     Member \"_dependencies\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2702:41 - error: Cannot access member \"variants\" for type \"SupportsDunderLT[Any]\"\n-     Member \"variants\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2702:41 - error: Cannot access member \"variants\" for type \"SupportsDunderGT[Any]\"\n-     Member \"variants\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2703:41 - error: Cannot access member \"external_path\" for type \"SupportsDunderLT[Any]\"\n-     Member \"external_path\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2703:41 - error: Cannot access member \"external_path\" for type \"SupportsDunderGT[Any]\"\n-     Member \"external_path\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2704:41 - error: Cannot access member \"external_modules\" for type \"SupportsDunderLT[Any]\"\n-     Member \"external_modules\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:2704:41 - error: Cannot access member \"external_modules\" for type \"SupportsDunderGT[Any]\"\n-     Member \"external_modules\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:3734:57 - error: Cannot access member \"intersects\" for type \"SupportsDunderLT[Any]\"\n-     Member \"intersects\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:3734:57 - error: Cannot access member \"intersects\" for type \"SupportsDunderGT[Any]\"\n-     Member \"intersects\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4238:27 - error: Cannot access member \"spec\" for type \"SupportsDunderLT[Any]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4238:27 - error: Cannot access member \"spec\" for type \"SupportsDunderGT[Any]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4239:40 - error: Cannot access member \"deptypes\" for type \"SupportsDunderLT[Any]\"\n-     Member \"deptypes\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4239:40 - error: Cannot access member \"deptypes\" for type \"SupportsDunderGT[Any]\"\n-     Member \"deptypes\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4240:32 - error: Cannot access member \"spec\" for type \"SupportsDunderLT[Any]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4240:32 - error: Cannot access member \"spec\" for type \"SupportsDunderGT[Any]\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/variant.py:263:18 - error: Cannot assign member \"_original_value\" for type \"MultiValuedVariant\"\n+     Expression of type \"tuple[Unknown, ...]\" cannot be assigned to member \"_original_value\" of class \"MultiValuedVariant\"\n\n... (truncated 153 lines) ...\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:525:12 - warning: Return type, \"Unknown | _T@attachment_field\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:525:12 - warning: Return type is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:696:12 - warning: Return type, \"Unknown | _T@channel_field\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:696:12 - warning: Return type is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:965:12 - warning: Return type, \"Unknown | _T@member_field\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:965:12 - warning: Return type is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1071:12 - warning: Return type, \"Unknown | _T@mentionable_field\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1071:12 - warning: Return type is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1175:12 - warning: Return type, \"Unknown | _T@role_field\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1175:12 - warning: Return type is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1410:12 - warning: Return type, \"Unknown | _T@user_field\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1410:12 - warning: Return type is unknown (reportUnknownVariableType)\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/data/history/idatahandler.py:368:16 - error: Operator \">\" not supported for types \"SupportsRichComparison | Literal[0]\" and \"float\"\n-     Operator \">\" not supported for types \"SupportsDunderLT[Any]\" and \"float\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/data_drawer.py:697:20 - error: Operator \"+\" not supported for types \"SupportsRichComparison\" and \"timedelta\"\n-     Operator \"+\" not supported for types \"SupportsDunderLT[Any]\" and \"timedelta\"\n-     Operator \"+\" not supported for types \"SupportsDunderGT[Any]\" and \"timedelta\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/strategy/interface.py:1281:16 - error: Expression of type \"tuple[SupportsRichComparison, Unknown]\" cannot be assigned to return type \"Tuple[int | None, float | None]\" (reportGeneralTypeIssues)\n- 551 errors, 37 warnings, 0 informations \n+ 548 errors, 37 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/tests/pyspark/test_pyspark_check.py:1513:14 - error: Operator \"-\" not supported for types \"SupportsRichComparison | datetime | date\" and \"timedelta | Literal[1]\"\n+   /tmp/mypy_primer/projects/pandera/tests/pyspark/test_pyspark_check.py:1513:14 - error: Operator \"-\" not supported for types \"datetime | date | Unknown\" and \"timedelta | Literal[1]\"\n-     Operator \"-\" not supported for types \"date\" and \"Literal[1]\"\n-     Operator \"-\" not supported for types \"SupportsDunderLT[Any]\" and \"timedelta\"\n-     Operator \"-\" not supported for types \"SupportsDunderLT[Any]\" and \"Literal[1]\"\n-     Operator \"-\" not supported for types \"SupportsDunderGT[Any]\" and \"timedelta\"\n-     Operator \"-\" not supported for types \"SupportsDunderGT[Any]\" and \"Literal[1]\" (reportGeneralTypeIssues)\n+     Operator \"-\" not supported for types \"date\" and \"Literal[1]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/tests/pyspark/test_pyspark_check.py:1513:35 - error: Operator \"+\" not supported for types \"SupportsRichComparison\" and \"timedelta | Literal[1]\"\n-     Operator \"+\" not supported for types \"SupportsDunderLT[Any]\" and \"timedelta\"\n-     Operator \"+\" not supported for types \"SupportsDunderLT[Any]\" and \"Literal[1]\"\n-     Operator \"+\" not supported for types \"SupportsDunderGT[Any]\" and \"timedelta\"\n-     Operator \"+\" not supported for types \"SupportsDunderGT[Any]\" and \"Literal[1]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/tests/pyspark/test_pyspark_check.py:1528:23 - error: Operator \"+\" not supported for types \"SupportsRichComparison\" and \"timedelta | Literal[1]\"\n-     Operator \"+\" not supported for types \"SupportsDunderLT[Any]\" and \"timedelta\"\n-     Operator \"+\" not supported for types \"SupportsDunderLT[Any]\" and \"Literal[1]\"\n-     Operator \"+\" not supported for types \"SupportsDunderGT[Any]\" and \"timedelta\"\n-     Operator \"+\" not supported for types \"SupportsDunderGT[Any]\" and \"Literal[1]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/tests/pyspark/test_pyspark_check.py:1543:14 - error: Operator \"-\" not supported for types \"SupportsRichComparison | datetime | date\" and \"timedelta | Literal[1]\"\n+   /tmp/mypy_primer/projects/pandera/tests/pyspark/test_pyspark_check.py:1543:14 - error: Operator \"-\" not supported for types \"datetime | date | Unknown\" and \"timedelta | Literal[1]\"\n-     Operator \"-\" not supported for types \"date\" and \"Literal[1]\"\n-     Operator \"-\" not supported for types \"SupportsDunderLT[Any]\" and \"timedelta\"\n-     Operator \"-\" not supported for types \"SupportsDunderLT[Any]\" and \"Literal[1]\"\n-     Operator \"-\" not supported for types \"SupportsDunderGT[Any]\" and \"timedelta\"\n-     Operator \"-\" not supported for types \"SupportsDunderGT[Any]\" and \"Literal[1]\" (reportGeneralTypeIssues)\n+     Operator \"-\" not supported for types \"date\" and \"Literal[1]\" (reportGeneralTypeIssues)\n- 1109 errors, 10 warnings, 0 informations \n+ 1107 errors, 10 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-     \"list[List[Any] | Text]\" is incompatible with \"Sequence[tuple[Unknown, ...]]\"\n+     \"list[List[Any] | Text]\" is incompatible with \"Sequence[tuple[SupportsRichComparisonT@commonprefix, ...]]\"\n-       Type parameter \"_T_co@Sequence\" is covariant, but \"List[Any] | Text\" is not a subtype of \"tuple[Unknown, ...]\"\n+       Type parameter \"_T_co@Sequence\" is covariant, but \"List[Any] | Text\" is not a subtype of \"tuple[SupportsRichComparisonT@commonprefix, ...]\"\n-         Type \"List[Any] | Text\" cannot be assigned to type \"tuple[Unknown, ...]\"\n+         Type \"List[Any] | Text\" cannot be assigned to type \"tuple[SupportsRichComparisonT@commonprefix, ...]\"\n-           \"Text\" is incompatible with \"tuple[Unknown, ...]\" (reportGeneralTypeIssues)\n+           \"Text\" is incompatible with \"tuple[SupportsRichComparisonT@commonprefix, ...]\" (reportGeneralTypeIssues)\n-     \"Set[int]\" is incompatible with protocol \"_GetItemIterable[Unknown]\"\n+     \"Set[int]\" is incompatible with protocol \"_GetItemIterable[_T@iter]\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/profiling/collector/_asyncio_compat.py:11:23 - error: Expression of type \"(coro: _CoroutineLike[_T@create_task], *, name: str | None = None) -> Task[_T@create_task]\" cannot be assigned to declared type \"(coro: Unknown, name: Unknown | None = None) -> Future[Any]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/profiling/collector/_asyncio_compat.py:11:23 - error: Expression of type \"(coro: _CoroutineLike[_T@create_task], *, name: str | None = None) -> Task[_T@create_task]\" cannot be assigned to declared type \"(coro: Unknown, name: Unknown | None = None) -> Unknown\"\n-     Type \"(coro: _CoroutineLike[_T@create_task], *, name: str | None = None) -> Task[_T@create_task]\" cannot be assigned to type \"(coro: Unknown, name: Unknown | None = None) -> Future[Any]\"\n+     Type \"(coro: _CoroutineLike[_T@create_task], *, name: str | None = None) -> Task[_T@create_task]\" cannot be assigned to type \"(coro: Unknown, name: Unknown | None = None) -> Unknown\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/profiling/collector/test_stack_asyncio.py:46:16 - error: Expression of type \"tuple[Future[Any], Future[Any]]\" cannot be assigned to return type \"None\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/profiling/collector/test_stack_asyncio.py:46:16 - error: Expression of type \"tuple[Unknown, Unknown]\" cannot be assigned to return type \"None\"\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to an incorrect type evaluation in certain cases where a type argument for a function call argument type is left unspecified (and is therefore assumed to be Unknown). This addresses #5879. (#5880)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110fbac254a19ac2906b8",
    "number": 5854,
    "body": "Roll-up of the following changes:\r\n    1. Removed unnecessary import update at exitEditMode https://github.com/microsoft/pyrx/pull/4043\r\n    2. relex our code to show literals if type has literal types in it rather than only show them if type has ONLY literal types. https://github.com/microsoft/pyrx/pull/4042 // https://github.com/microsoft/pylance-release/issues/4649\r\n    3. Added support for editMode in sourceFileInfo https://github.com/microsoft/pyrx/pull/4039\r\n    4. pylance loc update 20230829.1 https://github.com/microsoft/pyrx/pull/4040\r\n    5. Refactor import resolver to use a service provider https://github.com/microsoft/pyrx/pull/4038\r\n    6. Fix `pythonPath` comparison in `WorkspaceFactory` https://github.com/microsoft/pyrx/pull/4035 // https://github.com/microsoft/pylance-release/issues/4685\r\n    7. pylance loc update 20230825.1 https://github.com/microsoft/pyrx/pull/4034\r\n    8. Support `__getattr__` that uses Literals https://github.com/microsoft/pyrx/pull/4033 // https://github.com/microsoft/pylance-release/issues/4660\r\n    9. Push import resolve changes down to pyright https://github.com/microsoft/pyrx/pull/4032\r\n    10. Support hover/completion/gotodef/signaturehelp on members off fixture used as parameter of pytest methods https://github.com/microsoft/pyrx/pull/3990\r\n    11. Support more overriden magic methods https://github.com/microsoft/pyrx/pull/4029 // https://github.com/microsoft/pylance-release/issues/4467\r\n    12. Remove stub downloading support https://github.com/microsoft/pyrx/pull/4028 // https://github.com/microsoft/pyrx/issues/3968, https://github.com/microsoft/pyrx/issues/4008    ",
    "head_branch": "pull-pylance-with-pyright-1.1.325",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nrclip (https://github.com/yurijmikhalevich/rclip)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:8:8 - error: Import \"numpy\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:8:8 - error: Import \"numpy\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:9:6 - warning: Import \"tqdm\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:9:6 - warning: Import \"tqdm\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:10:8 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:10:8 - warning: Import \"PIL\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:6 - warning: Import \"PIL\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:17 - warning: Import \"PIL.Image\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:24 - warning: Import \"PIL.ImageFile\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/main.py:11:24 - warning: Import \"PIL.ImageFile\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:5:8 - error: Import \"numpy\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:5:8 - error: Import \"numpy\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:6:8 - error: Import \"numpy.typing\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:6:8 - error: Import \"numpy.typing\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:28:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:28:12 - error: Import \"open_clip\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:35:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:35:12 - error: Import \"open_clip\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:46:12 - error: Import \"open_clip\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:46:12 - error: Import \"open_clip\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:56:12 - error: Import \"torch\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:56:12 - error: Import \"torch\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:64:12 - error: Import \"torch\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:64:12 - error: Import \"torch\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:7:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:7:6 - warning: Import \"PIL\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/model.py:7:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/model.py:7:17 - warning: Import \"PIL.Image\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:144:12 - error: Import \"torch.backends.mps\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:144:12 - error: Import \"torch.backends.mps\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:6 - warning: Import \"PIL\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:5:17 - warning: Import \"PIL.Image\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:7:8 - warning: Import \"requests\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/helpers.py:7:8 - warning: Import \"requests\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:6 - warning: Import \"PIL\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:6 - warning: Import \"PIL\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:17 - warning: Import \"PIL.Image\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/rclip/utils/preview.py:4:17 - warning: Import \"PIL.Image\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:3:8 - error: Import \"jinja2\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:3:8 - error: Import \"jinja2\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:4:8 - error: Import \"poet\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:4:8 - error: Import \"poet\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:5:8 - warning: Import \"requests\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/rclip/release-utils/homebrew/generate_formula.py:5:8 - warning: Import \"requests\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py:5:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/rclip/tests/e2e/test_rclip.py:5:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:27:6 - error: Import \"sphinx.domains.python\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:27:6 - error: Import \"sphinx.domains.python\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:28:6 - error: Import \"sphinx.ext.apidoc\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:28:6 - error: Import \"sphinx.ext.apidoc\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:29:6 - error: Import \"sphinx.parsers\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:29:6 - error: Import \"sphinx.parsers\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:26:6 - warning: Import \"docutils.statemachine\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/conf.py:26:6 - warning: Import \"docutils.statemachine\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/_pygments/style.py:8:6 - error: Import \"pygments.styles.default\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/_pygments/style.py:8:6 - error: Import \"pygments.styles.default\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/docs/_pygments/style.py:9:6 - warning: Import \"pygments.token\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/docs/_pygments/style.py:9:6 - warning: Import \"pygments.token\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:948:12 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/config.py:948:12 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:8:8 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:8:8 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:9:8 - warning: Import \"jsonschema.exceptions\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cray_manifest.py:9:8 - warning: Import \"jsonschema.exceptions\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate.py:11:8 - error: Import \"macholib.mach_o\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate.py:11:8 - error: Import \"macholib.mach_o\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate.py:12:8 - error: Import \"macholib.MachO\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/relocate.py:12:8 - error: Import \"macholib.MachO\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/tengine.py:73:12 - error: Import \"jinja2\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/tengine.py:73:12 - error: Import \"jinja2\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:14:12 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:14:12 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:216:20 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:216:20 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/container/__init__.py:34:12 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/container/__init__.py:34:12 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/container/writers/__init__.py:191:16 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/container/writers/__init__.py:191:16 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/common.py:935:16 - error: Import \"jinja2\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/common.py:935:16 - error: Import \"jinja2\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/linux_distro.py:42:20 - error: Import \"distro\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/linux_distro.py:42:20 - error: Import \"distro\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:15:12 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:15:12 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:21:16 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:21:16 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:54:20 - warning: Import \"jsonschema\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/schema/__init__.py:54:20 - warning: Import \"jsonschema\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:580:20 - error: Import \"clingo\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:580:20 - error: Import \"clingo\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:582:10 - error: Import \"clingo.ast\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:582:10 - error: Import \"clingo.ast\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:585:14 - error: Import \"clingo.ast\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:585:14 - error: Import \"clingo.ast\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:588:14 - error: Import \"clingo\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:588:14 - error: Import \"clingo\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/abi.py:7:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/abi.py:7:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/architecture.py:9:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/architecture.py:9:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/audit.py:5:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/audit.py:5:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/bindist.py:17:8 - error: Import \"py\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/bindist.py:17:8 - error: Import \"py\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/bindist.py:18:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n\n... (truncated 397 lines) ...\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:238:10 - error: Import \"dominate.util\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:238:10 - error: Import \"dominate.util\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:297:10 - error: Import \"dominate\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:297:10 - error: Import \"dominate\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:298:10 - error: Import \"dominate.util\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:298:10 - error: Import \"dominate.util\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:114:10 - warning: Import \"docutils.core\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:114:10 - warning: Import \"docutils.core\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:115:10 - warning: Import \"docutils.io\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:115:10 - warning: Import \"docutils.io\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:166:10 - warning: Import \"docutils.core\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:166:10 - warning: Import \"docutils.core\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:228:10 - warning: Import \"bs4\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/cli.py:228:10 - warning: Import \"bs4\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:71:8 - warning: Import \"docutils\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:71:8 - warning: Import \"docutils\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:72:8 - warning: Import \"docutils.frontend\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:72:8 - warning: Import \"docutils.frontend\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:73:8 - warning: Import \"docutils.transforms\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:73:8 - warning: Import \"docutils.transforms\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:74:8 - warning: Import \"docutils.utils\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:74:8 - warning: Import \"docutils.utils\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:75:8 - warning: Import \"docutils.writers\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:75:8 - warning: Import \"docutils.writers\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:6 - warning: Import \"docutils\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:6 - warning: Import \"docutils\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:22 - warning: Import \"docutils.nodes\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:76:22 - warning: Import \"docutils.nodes\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:81:6 - warning: Import \"docutils.readers.standalone\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:81:6 - warning: Import \"docutils.readers.standalone\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:82:6 - warning: Import \"docutils.transforms\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:82:6 - warning: Import \"docutils.transforms\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:6 - warning: Import \"docutils.writers\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:6 - warning: Import \"docutils.writers\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:30 - warning: Import \"docutils.writers.html4css1\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:30 - warning: Import \"docutils.writers.html4css1\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:41 - warning: Import \"docutils.writers.html5_polyglot\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:41 - warning: Import \"docutils.writers.html5_polyglot\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:57 - warning: Import \"docutils.writers.latex2e\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:57 - warning: Import \"docutils.writers.latex2e\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:66 - warning: Import \"docutils.writers.xetex\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:83:66 - warning: Import \"docutils.writers.xetex\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:1197:14 - warning: Import \"docutils.statemachine\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:1197:14 - warning: Import \"docutils.statemachine\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/html.py:25:6 - error: Import \"dominate\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/html.py:25:6 - error: Import \"dominate\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/html.py:26:6 - error: Import \"dominate.util\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/html.py:26:6 - error: Import \"dominate.util\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:33:6 - warning: Import \"docutils\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:33:6 - warning: Import \"docutils\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:33:22 - warning: Import \"docutils.nodes\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:33:22 - warning: Import \"docutils.nodes\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:112:10 - warning: Import \"docutils.core\" could not be resolved from source (reportMissingModuleSource)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/minimal.py:112:10 - warning: Import \"docutils.core\" could not be resolved from source in the \"python\" environment. (reportMissingModuleSource)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/myst.py:35:10 - error: Import \"myst_parser.docutils_\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/myst.py:35:10 - error: Import \"myst_parser.docutils_\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/myst.py:32:8 - warning: Import \"docutils.parsers\" could not be resolved from source (reportMissingModuleSource)\n\n... (truncated 35 lines) ...\n\nbidict (https://github.com/jab/bidict)\n-   /tmp/mypy_primer/projects/bidict/docs/conf.py:51:12 - error: Import \"sphinx_copybutton\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/docs/conf.py:51:12 - error: Import \"sphinx_copybutton\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/docs/conftest.py:12:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/docs/conftest.py:12:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/conftest.py:7:6 - error: Import \"hypothesis\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/tests/conftest.py:7:6 - error: Import \"hypothesis\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/test_class_relationships.py:15:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/tests/test_class_relationships.py:15:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py:15:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/tests/test_microbenchmarks.py:15:8 - error: Import \"pytest\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/property_tests/_strategies.py:14:8 - error: Import \"hypothesis.strategies\" could not be resolved (reportMissingImports)\n+   /tmp/mypy_primer/projects/bidict/tests/property_tests/_strategies.py:14:8 - error: Import \"hypothesis.strategies\" could not be found in the \"python\" environment. (reportMissingImports)\n-   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:22:8 - error: Import \"pytest\" could not be resolved (reportMissingImports)\n\n... (truncated 1148 lines) ...```",
      "@erictraut, do you want to review the `src/analyzer` changes before we merge this?",
      "@debonte, I skimmed through the changes, and they look good to me."
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.325 (#5854)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\nCo-authored-by: Stella Huang <stellahuang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110fcac254a19ac2906b9",
    "number": 5836,
    "body": "…performance, incorrect type evaluations, and false negatives and false positives) when calling a constructor for a generic class within the class implementation. This addresses #5373.",
    "head_branch": "issue5373",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict)\n-   /tmp/mypy_primer/projects/bidict/bidict/_base.py:491:27 - error: Argument of type \"BidictBase[VT@BidictBase, KT@BidictBase] | BidictBase[Unknown, tuple[tuple[KT@BidictBase, VT@BidictBase], Unknown]] | ItemsIter[VT@BidictBase, KT@BidictBase]\" cannot be assigned to parameter \"__m\" of type \"Iterable[tuple[VT@BidictBase, KT@BidictBase]]\" in function \"update\"\n-     Type \"BidictBase[VT@BidictBase, KT@BidictBase] | BidictBase[Unknown, tuple[tuple[KT@BidictBase, VT@BidictBase], Unknown]] | ItemsIter[VT@BidictBase, KT@BidictBase]\" cannot be assigned to type \"Iterable[tuple[VT@BidictBase, KT@BidictBase]]\"\n-       \"BidictBase[VT@BidictBase, KT@BidictBase]\" is incompatible with \"Iterable[tuple[VT@BidictBase, KT@BidictBase]]\"\n-         Type parameter \"_T_co@Iterable\" is covariant, but \"VT@BidictBase\" is not a subtype of \"tuple[VT@BidictBase, KT@BidictBase]\"\n-           \"object*\" is incompatible with \"tuple[VT@BidictBase, KT@BidictBase]\" (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/bidict/bidict/_orderedbidict.py\n-   /tmp/mypy_primer/projects/bidict/bidict/_orderedbidict.py:61:16 - error: Expression of type \"tuple[VT@OrderedBidict, Any]\" cannot be assigned to return type \"tuple[KT@OrderedBidict, VT@OrderedBidict]\"\n-     \"tuple[VT@OrderedBidict, Any]\" is incompatible with \"tuple[KT@OrderedBidict, VT@OrderedBidict]\"\n-       Tuple entry 1 is incorrect type\n-         Type \"VT@OrderedBidict\" cannot be assigned to type \"KT@OrderedBidict\" (reportGeneralTypeIssues)\n- 12 errors, 0 warnings, 0 informations \n+ 10 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-     Type \"(self: Self@SteamWebSocket, msg: type[ProtobufMessage] | type[Message] | None = None, *, emsg: EMsg | None = None, check: (ProtoMsgsT@wait_for) -> bool = return_true) -> Future[ProtoMsgsT@wait_for]\" cannot be assigned to type \"(self: Self@SteamWebSocket, msg: type[MsgT@wait_for], *, check: (MsgT@wait_for) -> bool = return_true) -> Future[MsgT@wait_for]\"\n-       Type \"type[ProtobufMessage] | type[Message] | None\" cannot be assigned to type \"type[MsgT@wait_for]\"\n+     Type \"type[ProtobufMessage] | type[Message] | None\" cannot be assigned to type \"type[MsgT@wait_for]\"\n-       Type \"None\" cannot be assigned to type \"type[MsgT@wait_for]\"\n+     Type \"None\" cannot be assigned to type \"type[MsgT@wait_for]\"\n-       Keyword parameter \"check\" of type \"(ProtobufMessage) -> bool\" cannot be assigned to type \"(ProtoMsgsT@wait_for) -> bool\"\n-       Function return type \"Future[MsgT@wait_for]\" is incompatible with type \"Future[ProtobufMessage]\"\n+     Function return type \"Future[MsgT@wait_for]\" is incompatible with type \"Future[ProtobufMessage]\"\n-         \"Future[MsgT@wait_for]\" is incompatible with \"Future[ProtobufMessage]\"\n+       \"Future[MsgT@wait_for]\" is incompatible with \"Future[ProtobufMessage]\"\n-           Type parameter \"_T@Future\" is invariant, but \"MsgT@wait_for\" is not the same as \"ProtobufMessage\" (reportGeneralTypeIssues)\n+         Type parameter \"_T@Future\" is invariant, but \"MsgT@wait_for\" is not the same as \"ProtobufMessage\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:341:9 - error: Overloaded implementation is not consistent with signature of overload 3\n+     Type \"type[ProtobufMessage] | type[Message] | None\" cannot be assigned to type \"type[ProtoMsgT@wait_for]\"\n+     Type \"None\" cannot be assigned to type \"type[ProtoMsgT@wait_for]\"\n+     Function return type \"Future[ProtoMsgT@wait_for]\" is incompatible with type \"Future[ProtobufMessage]\"\n+       \"Future[ProtoMsgT@wait_for]\" is incompatible with \"Future[ProtobufMessage]\"\n+         Type parameter \"_T@Future\" is invariant, but \"ProtoMsgT@wait_for\" is not the same as \"ProtobufMessage\" (reportGeneralTypeIssues)\n- 8139 errors, 29 warnings, 0 informations \n+ 8140 errors, 29 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed long-standing bug that caused various problems (including poor performance, incorrect type evaluations, and false negatives and false positives) when calling a constructor for a generic class within the class implementation. This addresses #5373. (#5836)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110fdac254a19ac2906ba",
    "number": 5832,
    "body": null,
    "head_branch": "issue5815-enableStrictByDefault",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/utils.py:877:60 - warning: Unnecessary \"# type: ignore\" comment\n- 8139 errors, 29 warnings, 0 informations \n+ 8139 errors, 30 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:394:38 - error: Argument type is unknown\n-     Argument corresponds to parameter \"img\" in function \"imwrite\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:848:57 - error: Argument type is unknown\n-     Argument corresponds to parameter \"image\" in function \"set_preview_image\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:915:41 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:919:36 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"cvtColor\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:922:13 - error: Type of \"capture\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:922:13 - error: Type of \"capture\" is partially unknown\n+     Type of \"capture\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:924:39 - error: \"data\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:144:63 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:150:13 - error: Argument type is unknown\n-     Argument corresponds to parameter \"source\" in function \"compare_l2_norm\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:144:38 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"resize\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:150:13 - error: Argument type is unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:150:13 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"_\" in function \"compare_dummy\" (reportUnknownArgumentType)\n+     Argument corresponds to parameter \"_\" in function \"compare_dummy\"\n+     Argument type is \"Unknown | None\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:51:36 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"countNonZero\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:76:31 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"countNonZero\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:96:55 - error: Argument type is unknown\n-     Argument corresponds to parameter \"mask\" in function \"bitwise_and\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:97:58 - error: Argument type is unknown\n-     Argument corresponds to parameter \"mask\" in function \"bitwise_and\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:209:70 - error: Argument type is unknown\n-     Argument corresponds to parameter \"capture\" in function \"__test_alignment\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/VideoCaptureDeviceCaptureMethod.py:131:39 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/VideoCaptureDeviceCaptureMethod.py:132:39 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/VideoCaptureDeviceCaptureMethod.py:133:17 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n- 480 errors, 30 warnings, 7 informations \n+ 476 errors, 30 warnings, 7 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/extension/decimal/array.py:87:22 - error: Unnecessary isinstance call; \"Decimal\" is always an instance of \"Decimal\" (reportUnnecessaryIsInstance)\n- 1374 errors, 0 warnings, 0 informations \n+ 1375 errors, 0 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:199:20 - error: Expression of type \"type*\" cannot be assigned to return type \"type[_DataType@register_dtype]\"\n-     Type \"type*\" cannot be assigned to type \"type[_DataType@register_dtype]\" (reportGeneralTypeIssues)\n- 1155 errors, 10 warnings, 0 informations \n+ 1154 errors, 10 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:858:16 - error: Return type, \"((...) -> Any) | DataClass_ | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:858:16 - error: Return type, \"((...) -> Any) | Unknown\", is partially unknown (reportUnknownVariableType)\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:695:25 - warning: Unnecessary \"# type: ignore\" comment\n- 45 errors, 11 warnings, 0 informations \n+ 45 errors, 12 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110feac254a19ac2906bb",
    "number": 5831,
    "body": "… narrowing. This addresses #5815.",
    "head_branch": "issue5815",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Reworked the logic for \"strict type guard\" positive and negative type narrowing. This addresses #5815. (#5831)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110feac254a19ac2906bc",
    "number": 5829,
    "body": "…y and match mypy's behavior. The type `tuple[int, ...]` is now interpreted as the union of all tuples of length zero or more that contain only `int`. Because this is a union, assigning a value of this type to a tuple type with a known (specified) length is now considered a type violation. This addresses #5828.",
    "head_branch": "issue5828",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+         Tuple size mismatch; expected 4 but received indeterminate (reportGeneralTypeIssues)\n-         Tuple entry 1 is incorrect type\n-           \"str\" cannot be assigned to type \"Literal['build']\" (reportGeneralTypeIssues)\n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/ops/storage.py\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:191:23 - error: Return type of generator function must be compatible with \"Generator[tuple[str, ...], Any, Any]\"\n+     \"Generator[tuple[str, ...], Unknown, Unknown]\" is incompatible with \"_NoticeGenerator\"\n+       Type parameter \"_YieldT_co@Generator\" is covariant, but \"tuple[str, ...]\" is not a subtype of \"_Notice\"\n+         \"tuple[str, ...]\" is incompatible with \"_Notice\"\n+           Tuple size mismatch; expected 3 but received indeterminate (reportGeneralTypeIssues)\n- 3 errors, 0 warnings, 0 informations \n+ 4 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/_const.py:126:68 - error: Expression of type \"(buffer: ReadableBuffer, offset: int = 0) -> tuple[Any, ...]\" cannot be assigned to parameter of type \"(Buffer) -> tuple[int]\"\n+     Type \"(buffer: ReadableBuffer, offset: int = 0) -> tuple[Any, ...]\" cannot be assigned to type \"(Buffer) -> tuple[int]\"\n+       Function return type \"tuple[Any, ...]\" is incompatible with type \"tuple[int]\"\n+         \"tuple[Any, ...]\" is incompatible with \"tuple[int]\"\n+           Tuple size mismatch; expected 1 but received indeterminate (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:34:76 - error: Expression of type \"(buffer: ReadableBuffer, offset: int = 0) -> tuple[Any, ...]\" cannot be assigned to parameter of type \"(bytes) -> tuple[float]\"\n+     Type \"(buffer: ReadableBuffer, offset: int = 0) -> tuple[Any, ...]\" cannot be assigned to type \"(bytes) -> tuple[float]\"\n+       Function return type \"tuple[Any, ...]\" is incompatible with type \"tuple[float]\"\n+         \"tuple[Any, ...]\" is incompatible with \"tuple[float]\"\n+           Tuple size mismatch; expected 1 but received indeterminate (reportGeneralTypeIssues)\n- 8137 errors, 29 warnings, 0 informations \n+ 8139 errors, 29 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1031:5 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(*pos_args: SupportedPrimitive | Importable@builds | ((**P@builds) -> R@builds) | type[Builds[Importable@builds]] | type[BuildsWithSig[Importable@builds, Any]], zen_partial: bool | None = None, zen_wrappers: ZenWrappers[(...) -> Any] = tuple(), zen_meta: Mapping[str, SupportedPrimitive] | None = None, populate_full_signature: bool = False, zen_convert: ZenConvert | None = None, hydra_recursive: bool | None = None, hydra_convert: Literal['none', 'partial', 'all', 'object'] | None = None, hydra_defaults: DefaultsList | None = None, builds_bases: Tuple[type[DataClass_], ...] = (), zen_dataclass: DataclassOptions | None = None, **kwargs_for_target: SupportedPrimitive) -> (type[Builds[Importable@builds]] | type[ZenPartialBuilds[Importable@builds]] | type[HydraPartialBuilds[Importable@builds]] | type[BuildsWithSig[type[R@builds], P@builds]])\" cannot be assigned to type \"(__hydra_target: type[BuildsWithSig[type[R@builds], P@builds]], *, zen_partial: Literal[False] | None = ..., populate_full_signature: Literal[True], zen_wrappers: ZenWrappers[(...) -> Any] = ..., zen_meta: Mapping[str, SupportedPrimitive] | None = ..., hydra_recursive: bool | None = ..., hydra_convert: Literal['none', 'partial', 'all', 'object'] | None = ..., hydra_defaults: DefaultsList | None = ..., dataclass_name: str | None = ..., builds_bases: Tuple[()] = ..., zen_dataclass: DataclassOptions | None = None, frozen: bool = ..., zen_convert: ZenConvert | None = ...) -> type[BuildsWithSig[type[R@builds], P@builds]]\"\n+       Keyword parameter \"builds_bases\" of type \"Tuple[()]\" cannot be assigned to type \"Tuple[type[DataClass_], ...]\"\n+         \"Tuple[()]\" is incompatible with \"Tuple[type[DataClass_], ...]\"\n+           Tuple size mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1031:5 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Type \"(*pos_args: SupportedPrimitive | Importable@builds | ((**P@builds) -> R@builds) | type[Builds[Importable@builds]] | type[BuildsWithSig[Importable@builds, Any]], zen_partial: bool | None = None, zen_wrappers: ZenWrappers[(...) -> Any] = tuple(), zen_meta: Mapping[str, SupportedPrimitive] | None = None, populate_full_signature: bool = False, zen_convert: ZenConvert | None = None, hydra_recursive: bool | None = None, hydra_convert: Literal['none', 'partial', 'all', 'object'] | None = None, hydra_defaults: DefaultsList | None = None, builds_bases: Tuple[type[DataClass_], ...] = (), zen_dataclass: DataclassOptions | None = None, **kwargs_for_target: SupportedPrimitive) -> (type[Builds[Importable@builds]] | type[ZenPartialBuilds[Importable@builds]] | type[HydraPartialBuilds[Importable@builds]] | type[BuildsWithSig[type[R@builds], P@builds]])\" cannot be assigned to type \"(__hydra_target: (**P@builds) -> R@builds, *, zen_partial: Literal[False] | None = ..., populate_full_signature: Literal[True], zen_wrappers: ZenWrappers[(...) -> Any] = ..., zen_meta: Mapping[str, SupportedPrimitive] | None = ..., hydra_recursive: bool | None = ..., hydra_convert: Literal['none', 'partial', 'all', 'object'] | None = ..., hydra_defaults: DefaultsList | None = ..., dataclass_name: str | None = ..., builds_bases: Tuple[()] = ..., zen_dataclass: DataclassOptions | None = None, frozen: bool = ..., zen_convert: ZenConvert | None = ...) -> type[BuildsWithSig[type[R@builds], P@builds]]\"\n+       Keyword parameter \"builds_bases\" of type \"Tuple[()]\" cannot be assigned to type \"Tuple[type[DataClass_], ...]\"\n+         \"Tuple[()]\" is incompatible with \"Tuple[type[DataClass_], ...]\"\n+           Tuple size mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:239:9 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(self: Self@StdBuilds, __hydra_target: ((**P@__call__) -> R@__call__) | type[Builds[Importable@__call__]] | Importable@__call__, *pos_args: SupportedPrimitive, zen_partial: bool | None = None, populate_full_signature: bool = False, zen_wrappers: ZenWrappers[(...) -> Any] = tuple(), zen_meta: Mapping[str, SupportedPrimitive] | None = None, hydra_recursive: bool | None = None, hydra_convert: Literal['none', 'partial', 'all'] | None = None, hydra_defaults: DefaultsList | None = None, frozen: bool = False, builds_bases: Tuple[type[DataClass_], ...] = (), dataclass_name: str | None = None, zen_dataclass: DataclassOptions | None = None, zen_convert: ZenConvert | None = None, **kwargs_for_target: SupportedPrimitive) -> (type[Builds[Importable@__call__]] | type[ZenPartialBuilds[Importable@__call__]] | type[HydraPartialBuilds[Importable@__call__]] | type[BuildsWithSig[type[R@__call__], P@__call__]])\" cannot be assigned to type \"(self: Self@StdBuilds, __hydra_target: type[BuildsWithSig[type[R@__call__], P@__call__]], *, zen_partial: Literal[False] | None = ..., populate_full_signature: Literal[True], zen_wrappers: ZenWrappers[(...) -> Any] = ..., zen_meta: Mapping[str, SupportedPrimitive] | None = ..., hydra_recursive: bool | None = ..., hydra_convert: Literal['none', 'partial', 'all'] | None = ..., hydra_defaults: DefaultsList | None = ..., dataclass_name: str | None = ..., builds_bases: Tuple[()] = ..., frozen: bool = ..., zen_dataclass: DataclassOptions | None = ..., zen_convert: ZenConvert | None = ...) -> type[BuildsWithSig[type[R@__call__], P@__call__]]\"\n+       Keyword parameter \"builds_bases\" of type \"Tuple[()]\" cannot be assigned to type \"Tuple[type[DataClass_], ...]\"\n+         \"Tuple[()]\" is incompatible with \"Tuple[type[DataClass_], ...]\"\n+           Tuple size mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:239:9 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Type \"(self: Self@StdBuilds, __hydra_target: ((**P@__call__) -> R@__call__) | type[Builds[Importable@__call__]] | Importable@__call__, *pos_args: SupportedPrimitive, zen_partial: bool | None = None, populate_full_signature: bool = False, zen_wrappers: ZenWrappers[(...) -> Any] = tuple(), zen_meta: Mapping[str, SupportedPrimitive] | None = None, hydra_recursive: bool | None = None, hydra_convert: Literal['none', 'partial', 'all'] | None = None, hydra_defaults: DefaultsList | None = None, frozen: bool = False, builds_bases: Tuple[type[DataClass_], ...] = (), dataclass_name: str | None = None, zen_dataclass: DataclassOptions | None = None, zen_convert: ZenConvert | None = None, **kwargs_for_target: SupportedPrimitive) -> (type[Builds[Importable@__call__]] | type[ZenPartialBuilds[Importable@__call__]] | type[HydraPartialBuilds[Importable@__call__]] | type[BuildsWithSig[type[R@__call__], P@__call__]])\" cannot be assigned to type \"(self: Self@StdBuilds, __hydra_target: (**P@__call__) -> R@__call__, *, zen_partial: Literal[False] | None = ..., populate_full_signature: Literal[True], zen_wrappers: ZenWrappers[(...) -> Any] = ..., zen_meta: Mapping[str, SupportedPrimitive] | None = ..., hydra_recursive: bool | None = ..., hydra_convert: Literal['none', 'partial', 'all'] | None = ..., hydra_defaults: DefaultsList | None = ..., dataclass_name: str | None = ..., builds_bases: Tuple[()] = ..., frozen: bool = ..., zen_dataclass: DataclassOptions | None = ..., zen_convert: ZenConvert | None = ...) -> type[BuildsWithSig[type[R@__call__], P@__call__]]\"\n+       Keyword parameter \"builds_bases\" of type \"Tuple[()]\" cannot be assigned to type \"Tuple[type[DataClass_], ...]\"\n+         \"Tuple[()]\" is incompatible with \"Tuple[type[DataClass_], ...]\"\n+           Tuple size mismatch; expected 1 but received 0 (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/typing/_builds_overloads.py:483:9 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(self: Self@FullBuilds, __hydra_target: ((**P@__call__) -> R@__call__) | Importable@__call__ | type[Builds[Importable@__call__]] | type[ZenPartialBuilds[Importable@__call__]] | type[HydraPartialBuilds[Importable@__call__]], *pos_args: SupportedPrimitive, zen_partial: bool | None = None, populate_full_signature: bool = True, zen_wrappers: ZenWrappers[(...) -> Any] = tuple(), zen_meta: Mapping[str, SupportedPrimitive] | None = None, hydra_recursive: bool | None = None, hydra_convert: Literal['none', 'partial', 'all'] | None = None, hydra_defaults: DefaultsList | None = None, frozen: bool = False, builds_bases: Tuple[type[DataClass_], ...] = (), dataclass_name: str | None = None, zen_dataclass: DataclassOptions | None = None, zen_convert: ZenConvert | None = None, **kwargs_for_target: SupportedPrimitive) -> (type[Builds[Importable@__call__]] | type[ZenPartialBuilds[Importable@__call__]] | type[HydraPartialBuilds[Importable@__call__]] | type[BuildsWithSig[type[R@__call__], P@__call__]])\" cannot be assigned to type \"(self: Self@FullBuilds, __hydra_target: type[BuildsWithSig[type[R@__call__], P@__call__]], *, zen_partial: Literal[False] | None = ..., populate_full_signature: Literal[True] = ..., zen_wrappers: ZenWrappers[(...) -> Any] = ..., zen_meta: Mapping[str, SupportedPrimitive] | None = ..., hydra_recursive: bool | None = ..., hydra_convert: Literal['none', 'partial', 'all'] | None = ..., hydra_defaults: DefaultsList | None = ..., dataclass_name: str | None = ..., builds_bases: Tuple[()] = ..., frozen: bool = ..., zen_dataclass: DataclassOptions | None = ..., zen_convert: ZenConvert | None = ...) -> type[BuildsWithSig[type[R@__call__], P@__call__]]\"\n\n... (truncated 25 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-       Element size mismatch; expected 1 but received 4 (reportGeneralTypeIssues)\n+       Tuple size mismatch; expected 1 but received 4 (reportGeneralTypeIssues)\n-       Element size mismatch; expected 1 but received 4 (reportGeneralTypeIssues)\n+       Tuple size mismatch; expected 1 but received 4 (reportGeneralTypeIssues)\n-       Element size mismatch; expected 1 but received 7 (reportGeneralTypeIssues)\n+       Tuple size mismatch; expected 1 but received 7 (reportGeneralTypeIssues)\n-       Element size mismatch; expected 1 but received 4 (reportGeneralTypeIssues)\n+       Tuple size mismatch; expected 1 but received 4 (reportGeneralTypeIssues)\n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/block.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:310:39 - error: Argument of type \"Block[Tuple[Any, ...]]\" cannot be assigned to parameter of type \"Block[Tuple[Any, Any]]\"\n+     \"Block[Tuple[Any, ...]]\" is incompatible with \"Block[Tuple[Any, Any]]\"\n+       Type parameter \"_TSource@Block\" is invariant, but \"Tuple[Any, ...]\" is not the same as \"Tuple[Any, Any]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:814:5 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Function return type \"(Block[Tuple[_T1@starmap, _T2@starmap]]) -> Block[_TResult@starmap]\" is incompatible with type \"(Block[Tuple[Any, ...]]) -> Block[Any]\"\n+       Type \"(Block[Tuple[_T1@starmap, _T2@starmap]]) -> Block[_TResult@starmap]\" cannot be assigned to type \"(Block[Tuple[Any, ...]]) -> Block[Any]\"\n+         Parameter 1: type \"Block[Tuple[Any, ...]]\" cannot be assigned to type \"Block[Tuple[_T1@starmap, _T2@starmap]]\"\n+           \"Block[Tuple[Any, ...]]\" is incompatible with \"Block[Tuple[_T1@starmap, _T2@starmap]]\"\n+             Type parameter \"_TSource@Block\" is invariant, but \"Tuple[Any, ...]\" is not the same as \"Tuple[_T1@starmap, _T2@starmap]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:814:5 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Function return type \"(Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]]) -> Block[_TResult@starmap]\" is incompatible with type \"(Block[Tuple[Any, ...]]) -> Block[Any]\"\n+       Type \"(Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]]) -> Block[_TResult@starmap]\" cannot be assigned to type \"(Block[Tuple[Any, ...]]) -> Block[Any]\"\n+         Parameter 1: type \"Block[Tuple[Any, ...]]\" cannot be assigned to type \"Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]]\"\n+           \"Block[Tuple[Any, ...]]\" is incompatible with \"Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]]\"\n+             Type parameter \"_TSource@Block\" is invariant, but \"Tuple[Any, ...]\" is not the same as \"Tuple[_T1@starmap, _T2@starmap, _T3@starmap]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:814:5 - error: Overloaded implementation is not consistent with signature of overload 3\n+     Function return type \"(Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]]) -> Block[_TResult@starmap]\" is incompatible with type \"(Block[Tuple[Any, ...]]) -> Block[Any]\"\n+       Type \"(Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]]) -> Block[_TResult@starmap]\" cannot be assigned to type \"(Block[Tuple[Any, ...]]) -> Block[Any]\"\n+         Parameter 1: type \"Block[Tuple[Any, ...]]\" cannot be assigned to type \"Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]]\"\n+           \"Block[Tuple[Any, ...]]\" is incompatible with \"Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]]\"\n+             Type parameter \"_TSource@Block\" is invariant, but \"Tuple[Any, ...]\" is not the same as \"Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:295:9 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(self: Block[Tuple[Any, ...]], mapping: (...) -> Any) -> Block[Any]\" cannot be assigned to type \"(self: Block[Tuple[_T1@starmap, _T2@starmap]], mapping: (_T1@starmap, _T2@starmap) -> _TResult@starmap) -> Block[_TResult@starmap]\"\n+       Parameter 1: type \"Block[Tuple[_T1@starmap, _T2@starmap]]\" cannot be assigned to type \"Block[Tuple[Any, ...]]\"\n+         \"Block[Tuple[_T1@starmap, _T2@starmap]]\" is incompatible with \"Block[Tuple[Any, ...]]\"\n+           Type parameter \"_TSource@Block\" is invariant, but \"Tuple[_T1@starmap, _T2@starmap]\" is not the same as \"Tuple[Any, ...]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:295:9 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Type \"(self: Block[Tuple[Any, ...]], mapping: (...) -> Any) -> Block[Any]\" cannot be assigned to type \"(self: Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]], mapping: (_T1@starmap, _T2@starmap, _T3@starmap) -> _TResult@starmap) -> Block[_TResult@starmap]\"\n+       Parameter 1: type \"Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]]\" cannot be assigned to type \"Block[Tuple[Any, ...]]\"\n+         \"Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]]\" is incompatible with \"Block[Tuple[Any, ...]]\"\n+           Type parameter \"_TSource@Block\" is invariant, but \"Tuple[_T1@starmap, _T2@starmap, _T3@starmap]\" is not the same as \"Tuple[Any, ...]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:295:9 - error: Overloaded implementation is not consistent with signature of overload 3\n+     Type \"(self: Block[Tuple[Any, ...]], mapping: (...) -> Any) -> Block[Any]\" cannot be assigned to type \"(self: Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]], mapping: (_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap) -> _TResult@starmap) -> Block[_TResult@starmap]\"\n+       Parameter 1: type \"Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]]\" cannot be assigned to type \"Block[Tuple[Any, ...]]\"\n+         \"Block[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]]\" is incompatible with \"Block[Tuple[Any, ...]]\"\n+           Type parameter \"_TSource@Block\" is invariant, but \"Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]\" is not the same as \"Tuple[Any, ...]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/seq.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/seq.py:217:37 - error: Argument of type \"Seq[Tuple[Any, ...]]\" cannot be assigned to parameter of type \"Iterable[Tuple[Any, Any]]\"\n+     \"Seq[Tuple[Any, ...]]\" is incompatible with \"Iterable[Tuple[Any, Any]]\"\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"Tuple[Any, ...]\" is not a subtype of \"Tuple[Any, Any]\"\n+         \"Tuple[Any, ...]\" is incompatible with \"Tuple[Any, Any]\"\n+           Tuple size mismatch; expected 2 but received indeterminate (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/seq.py:666:5 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Function return type \"(Iterable[Tuple[_T1@starmap, _T2@starmap]]) -> Iterable[_TResult@starmap]\" is incompatible with type \"(Iterable[Tuple[Any, ...]]) -> Iterable[Any]\"\n+       Type \"(Iterable[Tuple[_T1@starmap, _T2@starmap]]) -> Iterable[_TResult@starmap]\" cannot be assigned to type \"(Iterable[Tuple[Any, ...]]) -> Iterable[Any]\"\n+         Parameter 1: type \"Iterable[Tuple[Any, ...]]\" cannot be assigned to type \"Iterable[Tuple[_T1@starmap, _T2@starmap]]\"\n+           \"Iterable[Tuple[Any, ...]]\" is incompatible with \"Iterable[Tuple[_T1@starmap, _T2@starmap]]\"\n+             Type parameter \"_T_co@Iterable\" is covariant, but \"Tuple[Any, ...]\" is not a subtype of \"Tuple[_T1@starmap, _T2@starmap]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/seq.py:666:5 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Function return type \"(Iterable[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]]) -> Iterable[_TResult@starmap]\" is incompatible with type \"(Iterable[Tuple[Any, ...]]) -> Iterable[Any]\"\n+       Type \"(Iterable[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]]) -> Iterable[_TResult@starmap]\" cannot be assigned to type \"(Iterable[Tuple[Any, ...]]) -> Iterable[Any]\"\n+         Parameter 1: type \"Iterable[Tuple[Any, ...]]\" cannot be assigned to type \"Iterable[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]]\"\n+           \"Iterable[Tuple[Any, ...]]\" is incompatible with \"Iterable[Tuple[_T1@starmap, _T2@starmap, _T3@starmap]]\"\n+             Type parameter \"_T_co@Iterable\" is covariant, but \"Tuple[Any, ...]\" is not a subtype of \"Tuple[_T1@starmap, _T2@starmap, _T3@starmap]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/seq.py:666:5 - error: Overloaded implementation is not consistent with signature of overload 3\n+     Function return type \"(Iterable[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]]) -> Iterable[_TResult@starmap]\" is incompatible with type \"(Iterable[Tuple[Any, ...]]) -> Iterable[Any]\"\n+       Type \"(Iterable[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]]) -> Iterable[_TResult@starmap]\" cannot be assigned to type \"(Iterable[Tuple[Any, ...]]) -> Iterable[Any]\"\n+         Parameter 1: type \"Iterable[Tuple[Any, ...]]\" cannot be assigned to type \"Iterable[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]]\"\n+           \"Iterable[Tuple[Any, ...]]\" is incompatible with \"Iterable[Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]]\"\n+             Type parameter \"_T_co@Iterable\" is covariant, but \"Tuple[Any, ...]\" is not a subtype of \"Tuple[_T1@starmap, _T2@starmap, _T3@starmap, _T4@starmap]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/seq.py:203:9 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(self: Seq[Tuple[Any, ...]], mapping: (...) -> Any) -> Seq[Any]\" cannot be assigned to type \"(self: Seq[Tuple[_T1@starmap, _T2@starmap]], mapping: (_T1@starmap, _T2@starmap) -> _TResult@starmap) -> Seq[_TResult@starmap]\"\n+       Parameter 1: type \"Seq[Tuple[_T1@starmap, _T2@starmap]]\" cannot be assigned to type \"Seq[Tuple[Any, ...]]\"\n+         \"Seq[Tuple[_T1@starmap, _T2@starmap]]\" is incompatible with \"Seq[Tuple[Any, ...]]\"\n\n... (truncated 29 lines) ...\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:641:41 - error: Cannot assign member \"_types\" for type \"BaseChannelTransformer\"\n+     \"tuple[type, ...]\" is incompatible with \"Tuple[type]\"\n+       Tuple size mismatch; expected 1 but received indeterminate (reportGeneralTypeIssues)\n- 44 errors, 11 warnings, 0 informations \n+ 45 errors, 11 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Changed interpretation of `...` forms of tuples to improve consistency and match mypy's behavior. The type `tuple[int, ...]` is now interpreted as the union of all tuples of length zero or more that contain only `int`. Because this is a union, assigning a value of this type to a tuple type with a known (specified) length is now considered a type violation. This addresses #5828. (#5829)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662110ffac254a19ac2906bd",
    "number": 5827,
    "body": "…errors when a function with a ParamSpec was passed to another function with a ParamSpec. This addresses #5826.",
    "head_branch": "issue5826",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type evaluation and false positive errors when a function with a ParamSpec was passed to another function with a ParamSpec. This addresses #5826. (#5827)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211100ac254a19ac2906be",
    "number": 5823,
    "body": "…s covariant or contravariant. This addresses #5822.",
    "head_branch": "issue5822",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict)\n-         Type parameter \"_T_co@Iterable\" is covariant, but \"VT@BidictBase\" is not a subtype of \"tuple[VT@BidictBase, KT@BidictBase]\" (reportGeneralTypeIssues)\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"VT@BidictBase\" is not a subtype of \"tuple[VT@BidictBase, KT@BidictBase]\"\n+           \"object*\" is incompatible with \"tuple[VT@BidictBase, KT@BidictBase]\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterator\" is covariant, but \"tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable] | tuple[tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable], Unknown]\" is not a subtype of \"tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable]\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterator\" is covariant, but \"tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable] | tuple[tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable], Unknown]\" is not a subtype of \"tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable]\"\n+         Type \"tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable] | tuple[tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable], Unknown]\" cannot be assigned to type \"tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable]\"\n+           \"tuple[tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable], Unknown]\" is incompatible with \"tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable]\"\n+             Tuple entry 1 is incorrect type (reportGeneralTypeIssues)\n\nspack (https://github.com/spack/spack)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"Spec\" is not a subtype of \"SupportsRichComparisonT@sorted\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"Spec\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n+         Type \"Spec\" cannot be assigned to type \"SupportsRichComparison\"\n+           Type \"Spec\" cannot be assigned to type \"SupportsRichComparison\"\n+             \"Spec\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n+             \"Spec\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_contra@SupportsWrite\" is contravariant, but \"ReadableBuffer\" is not a supertype of \"AnyStr@copyfileobj\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_contra@SupportsWrite\" is contravariant, but \"ReadableBuffer\" is not a supertype of \"AnyStr@copyfileobj\"\n+         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n+           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n+             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-       Type parameter \"_T_contra@SupportsWrite\" is contravariant, but \"ReadableBuffer\" is not a supertype of \"AnyStr@copyfileobj\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_contra@SupportsWrite\" is contravariant, but \"ReadableBuffer\" is not a supertype of \"AnyStr@copyfileobj\"\n+         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n+           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n+             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-       Type parameter \"_T_contra@SupportsWrite\" is contravariant, but \"ReadableBuffer\" is not a supertype of \"AnyStr@copyfileobj\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_contra@SupportsWrite\" is contravariant, but \"ReadableBuffer\" is not a supertype of \"AnyStr@copyfileobj\"\n+         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n+           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n+             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"SupportsRichComparison\" is not a subtype of \"ReadableBuffer\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"SupportsRichComparison\" is not a subtype of \"ReadableBuffer\"\n+         Type \"SupportsRichComparison\" cannot be assigned to type \"ReadableBuffer\"\n+           \"SupportsDunderGT[Any]\" is incompatible with protocol \"ReadableBuffer\"\n+             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"SupportsRichComparison\" is not a subtype of \"str\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"SupportsRichComparison\" is not a subtype of \"str\"\n+         Type \"SupportsRichComparison\" cannot be assigned to type \"str\"\n+           \"SupportsDunderGT[Any]\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"SupportsRichComparison\" is not a subtype of \"str\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"SupportsRichComparison\" is not a subtype of \"str\"\n+         Type \"SupportsRichComparison\" cannot be assigned to type \"str\"\n+           \"SupportsDunderGT[Any]\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"AspFunction\" is not a subtype of \"SupportsRichComparisonT@sorted\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"AspFunction\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n+         Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+           Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"AspFunction\" is not a subtype of \"SupportsRichComparisonT@sorted\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"AspFunction\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n+         Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+           Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"AspFunction\" is not a subtype of \"SupportsRichComparisonT@sorted\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"AspFunction\" is not a subtype of \"SupportsRichComparisonT@sorted\"\n+         Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+           Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"Pattern[str]\" is not a subtype of \"str\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"Pattern[str]\" is not a subtype of \"str\"\n+         \"Pattern[str]\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"str\" is not a subtype of \"tuple[Unknown, str]\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"str\" is not a subtype of \"tuple[Unknown, str]\"\n+         \"str\" is incompatible with \"tuple[Unknown, str]\" (reportGeneralTypeIssues)\n-         Type parameter \"_T_co@Iterable\" is covariant, but \"<subclass of set and Spec>\" is not a subtype of \"str\" (reportGeneralTypeIssues)\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"<subclass of set and Spec>\" is not a subtype of \"str\"\n+           \"<subclass of set and Spec>\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-         Type parameter \"_T_co@Iterable\" is covariant, but \"Spec\" is not a subtype of \"str\" (reportGeneralTypeIssues)\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"Spec\" is not a subtype of \"str\"\n+           \"Spec\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-         Type parameter \"_T_co@Iterable\" is covariant, but \"<subclass of set and Spec>\" is not a subtype of \"str\" (reportGeneralTypeIssues)\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"<subclass of set and Spec>\" is not a subtype of \"str\"\n+           \"<subclass of set and Spec>\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-         Type parameter \"_T_co@Iterable\" is covariant, but \"Spec\" is not a subtype of \"str\" (reportGeneralTypeIssues)\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"Spec\" is not a subtype of \"str\"\n+           \"Spec\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"tuple[Unknown, Unknown] | Unknown\" is not a subtype of \"Spec\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"tuple[Unknown, Unknown] | Unknown\" is not a subtype of \"Spec\"\n+         Type \"tuple[Unknown, Unknown] | Unknown\" cannot be assigned to type \"Spec\"\n+           \"tuple[Unknown, Unknown]\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Iterable\" is covariant, but \"tuple[Unknown, Unknown] | Unknown\" is not a subtype of \"Spec\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Iterable\" is covariant, but \"tuple[Unknown, Unknown] | Unknown\" is not a subtype of \"Spec\"\n+         Type \"tuple[Unknown, Unknown] | Unknown\" cannot be assigned to type \"Spec\"\n+           \"tuple[Unknown, Unknown]\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n-       Type parameter \"_T_co@Collection\" is covariant, but \"str\" is not a subtype of \"int\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Collection\" is covariant, but \"str\" is not a subtype of \"int\"\n+         \"str\" is incompatible with \"int\" (reportGeneralTypeIssues)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-         Type parameter \"MessageT@Channel\" is covariant, but \"ClanMessage[PartialMember | ClanMember]\" is not a subtype of \"Self@ChatMessage[AuthorT@ChatMessage, MemberT@ChatMessage]\" (reportGeneralTypeIssues)\n+         Type parameter \"MessageT@Channel\" is covariant, but \"ClanMessage[PartialMember | ClanMember]\" is not a subtype of \"Self@ChatMessage[AuthorT@ChatMessage, MemberT@ChatMessage]\"\n+           \"ClanMessage[PartialMember | ClanMember]\" is incompatible with \"ChatMessage[AuthorT@ChatMessage, MemberT@ChatMessage]\"\n+             Type parameter \"AuthorT@ChatMessage\" is covariant, but \"PartialMember | ClanMember\" is not a subtype of \"AuthorT@ChatMessage\"\n+             Type parameter \"MemberT@ChatMessage\" is covariant, but \"ClanMember\" is not a subtype of \"MemberT@ChatMessage\" (reportGeneralTypeIssues)\n-         Type parameter \"UserT@Message\" is covariant, but \"AuthorT@ChatMessage\" is not a subtype of \"UserT@Message\" (reportIncompatibleMethodOverride)\n+         Type parameter \"UserT@Message\" is covariant, but \"AuthorT@ChatMessage\" is not a subtype of \"UserT@Message\"\n+           Type \"AuthorT@ChatMessage\" cannot be assigned to type \"UserT@Message\" (reportIncompatibleMethodOverride)\n-       Type parameter \"MessageT@Channel\" is covariant, but \"UserMessage[User | Friend | ClientUser]\" is not a subtype of \"Self@UserMessage[UserMessageAuthorT@UserMessage]\" (reportGeneralTypeIssues)\n+       Type parameter \"MessageT@Channel\" is covariant, but \"UserMessage[User | Friend | ClientUser]\" is not a subtype of \"Self@UserMessage[UserMessageAuthorT@UserMessage]\"\n+         \"UserMessage[User | Friend | ClientUser]\" is incompatible with \"UserMessage[UserMessageAuthorT@UserMessage]\"\n+           Type parameter \"UserMessageAuthorT@UserMessage\" is covariant, but \"User | Friend | ClientUser\" is not a subtype of \"UserMessageAuthorT@UserMessage\"\n+             Type \"User | Friend | ClientUser\" cannot be assigned to type \"UserMessageAuthorT@UserMessage\" (reportGeneralTypeIssues)\n-       Type parameter \"MessageT@Channel\" is covariant, but \"UserMessage[User | Friend | ClientUser]\" is not a subtype of \"Self@UserMessage[UserMessageAuthorT@UserMessage]\" (reportGeneralTypeIssues)\n+       Type parameter \"MessageT@Channel\" is covariant, but \"UserMessage[User | Friend | ClientUser]\" is not a subtype of \"Self@UserMessage[UserMessageAuthorT@UserMessage]\"\n+         \"UserMessage[User | Friend | ClientUser]\" is incompatible with \"UserMessage[UserMessageAuthorT@UserMessage]\"\n+           Type parameter \"UserMessageAuthorT@UserMessage\" is covariant, but \"User | Friend | ClientUser\" is not a subtype of \"UserMessageAuthorT@UserMessage\"\n+             Type \"User | Friend | ClientUser\" cannot be assigned to type \"UserMessageAuthorT@UserMessage\" (reportGeneralTypeIssues)\n-         Type parameter \"UserT@Message\" is covariant, but \"UserMessageAuthorT@UserMessage\" is not a subtype of \"UserT@Message\" (reportIncompatibleMethodOverride)\n+         Type parameter \"UserT@Message\" is covariant, but \"UserMessageAuthorT@UserMessage\" is not a subtype of \"UserT@Message\"\n+           Type \"UserMessageAuthorT@UserMessage\" cannot be assigned to type \"UserT@Message\" (reportIncompatibleMethodOverride)\n-       Type parameter \"OwnerT@BackpackItem\" is covariant, but \"OwnerT@BackpackItem\" is not a subtype of \"None\" (reportGeneralTypeIssues)\n+       Type parameter \"OwnerT@BackpackItem\" is covariant, but \"OwnerT@BackpackItem\" is not a subtype of \"None\"\n+         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-         Type parameter \"_VT_co@Mapping\" is covariant, but \"int\" is not a subtype of \"Timestamp\" (reportGeneralTypeIssues)\n+         Type parameter \"_VT_co@Mapping\" is covariant, but \"int\" is not a subtype of \"Timestamp\"\n+           \"int\" is incompatible with \"Timestamp\" (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"__index__\" is not present\n-         \"__bytes__\" is not present\n-       \"Text\" is incompatible with protocol \"ReadableBuffer\"\n+           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"__index__\" is not present\n-         \"__bytes__\" is not present\n-       \"str\" is incompatible with protocol \"ReadableBuffer\"\n-       Type parameter \"_T_co@Sequence\" is covariant, but \"List[Any] | Text\" is not a subtype of \"tuple[Unknown, ...]\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_co@Sequence\" is covariant, but \"List[Any] | Text\" is not a subtype of \"tuple[Unknown, ...]\"\n+         Type \"List[Any] | Text\" cannot be assigned to type \"tuple[Unknown, ...]\"\n+           \"Text\" is incompatible with \"tuple[Unknown, ...]\" (reportGeneralTypeIssues)\n+           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"__index__\" is not present\n-         \"__bytes__\" is not present\n-       \"Literal['hueh hueh hueh']\" is incompatible with protocol \"ReadableBuffer\"\n+           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"__index__\" is not present\n-         \"__bytes__\" is not present\n-       \"Literal['data streams']\" is incompatible with protocol \"ReadableBuffer\"\n+           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"__index__\" is not present\n-         \"__bytes__\" is not present\n-       \"Literal['data streams']\" is incompatible with protocol \"ReadableBuffer\"\n+           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"__index__\" is not present\n-         \"__bytes__\" is not present\n-       \"Literal['hueh hueh hueh']\" is incompatible with protocol \"ReadableBuffer\"\n-       Type parameter \"_T_contra@SupportsDunderLT\" is contravariant, but \"int\" is not a supertype of \"str | Unknown\" (reportGeneralTypeIssues)\n+       Type parameter \"_T_contra@SupportsDunderLT\" is contravariant, but \"int\" is not a supertype of \"str | Unknown\"\n+         Type \"str | Unknown\" cannot be assigned to type \"int\"\n+           \"str\" is incompatible with \"int\" (reportGeneralTypeIssues)\n-         Type parameter \"_T_co@Iterable\" is covariant, but \"Tuple[str, str]\" is not a subtype of \"list[bytes]\" (reportGeneralTypeIssues)\n+         Type parameter \"_T_co@Iterable\" is covariant, but \"Tuple[str, str]\" is not a subtype of \"list[bytes]\"\n+           \"Tuple[str, str]\" is incompatible with \"list[bytes]\" (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Improved error message for type incompatibility when type parameter is covariant or contravariant. This addresses #5822. (#5823)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211101ac254a19ac2906bf",
    "number": 5817,
    "body": null,
    "head_branch": "issue5810",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.33x faster (72.1s -> 54.3s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Added support for `@type_check_only` decorator. This addresses #5810. (#5817)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211102ac254a19ac2906c0",
    "number": 5816,
    "body": "…ins a stringified type on the LHS of an index expression. This addresses #5811.",
    "head_branch": "issue5811",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false negative when a type annotation contains a stringified type on the LHS of an index expression. This addresses #5811. (#5816)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211103ac254a19ac2906c1",
    "number": 5813,
    "body": "This is just an experiment for the https://github.com/python/peps/pull/3266. This is to verify backwards compatibility isn't an issue.",
    "head_branch": "rchiodo/test_mypy_primer",
    "is_a_fork": true,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:145:59 - error: Cannot access member \"namespace\" for type \"type*\"\n-     Member \"namespace\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:145:74 - error: Cannot access member \"name\" for type \"type*\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1120:48 - error: Cannot access member \"name\" for type \"type\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1118:45 - error: Cannot access member \"name\" for type \"type\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1215:74 - error: Cannot access member \"virtual\" for type \"type\"\n-     Member \"virtual\" is unknown (reportGeneralTypeIssues)\n- 3705 errors, 49 warnings, 0 informations \n+ 3700 errors, 49 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/utils.py:877:60 - warning: Unnecessary \"# type: ignore\" comment\n- 8163 errors, 29 warnings, 0 informations \n+ 8163 errors, 30 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_dataclasses.py:260:22 - error: Cannot access member \"__dataclass_fields__\" for type \"type\"\n+     Member \"__dataclass_fields__\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_discriminated_union.py:311:38 - error: \"Never\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_discriminated_union.py:319:30 - error: \"Never\" is not iterable (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generics.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generics.py:203:20 - error: \"Never\" is not iterable (reportGeneralTypeIssues)\n- 68 errors, 0 warnings, 0 informations \n+ 72 errors, 0 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:394:38 - error: Argument type is unknown\n-     Argument corresponds to parameter \"img\" in function \"imwrite\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:848:57 - error: Argument type is unknown\n-     Argument corresponds to parameter \"image\" in function \"set_preview_image\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:915:41 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:919:36 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"cvtColor\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:922:13 - error: Type of \"capture\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:922:13 - error: Type of \"capture\" is partially unknown\n+     Type of \"capture\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:924:39 - error: \"data\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:144:63 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:150:13 - error: Argument type is unknown\n-     Argument corresponds to parameter \"source\" in function \"compare_l2_norm\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:144:38 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"resize\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:150:13 - error: Argument type is unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:150:13 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"_\" in function \"compare_dummy\" (reportUnknownArgumentType)\n+     Argument corresponds to parameter \"_\" in function \"compare_dummy\"\n+     Argument type is \"Unknown | None\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:51:36 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"countNonZero\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:76:31 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"countNonZero\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:96:55 - error: Argument type is unknown\n-     Argument corresponds to parameter \"mask\" in function \"bitwise_and\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:97:58 - error: Argument type is unknown\n-     Argument corresponds to parameter \"mask\" in function \"bitwise_and\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:209:70 - error: Argument type is unknown\n-     Argument corresponds to parameter \"capture\" in function \"__test_alignment\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/VideoCaptureDeviceCaptureMethod.py:131:39 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/VideoCaptureDeviceCaptureMethod.py:132:39 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/VideoCaptureDeviceCaptureMethod.py:133:17 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n- 480 errors, 30 warnings, 7 informations \n+ 476 errors, 30 warnings, 7 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:695:40 - error: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:696:53 - error: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:697:35 - error: Unnecessary \"# type: ignore\" comment\n+ /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:52:26 - error: Cannot access member \"__dataclass_fields__\" for type \"type\"\n+     Member \"__dataclass_fields__\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:52:22 - error: Type of \"__dataclass_fields__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:52:13 - error: Type of \"_field\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:53:16 - error: Type of \"default_factory\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:53:57 - error: Type of \"default\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:56:20 - error: Type of \"default\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:56:20 - error: Return type is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:858:16 - error: Return type, \"((...) -> Any) | DataClass_ | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:852:16 - error: Return type, \"DataClass_ | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:860:13 - error: Unnecessary \"cast\" call; type is already \"(...) -> Any\" (reportUnnecessaryCast)\n- 173 errors, 0 warnings, 0 informations \n+ 184 errors, 0 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.28x faster (84.1s -> 65.8s)\n(Performance measurements are based on a single noisy sample)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/_utils.py:161:37 - error: Cannot access member \"im_class\" for type \"MethodType\"\n-     Member \"im_class\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/_utils.py:161:37 - error: Cannot access member \"im_class\" for type \"FunctionType\"\n-     Member \"im_class\" is unknown (reportGeneralTypeIssues)\n- 9157 errors, 423 warnings, 0 informations \n+ 9155 errors, 423 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py): typechecking got 1.21x faster (59.5s -> 49.3s)\n(Performance measurements are based on a single noisy sample)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:695:25 - warning: Unnecessary \"# type: ignore\" comment\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:783:39 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:787:41 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:795:35 - warning: Unnecessary \"# type: ignore\" comment\n- 44 errors, 11 warnings, 0 informations \n+ 44 errors, 15 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:182:21 - warning: Unnecessary \"cast\" call; type is already \"Any\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:184:17 - error: Type of \"impl\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:187:67 - error: Type of \"__wrapped__\" is unknown (reportUnknownMemberType)\n- 729 errors, 31 warnings, 0 informations \n+ 731 errors, 32 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:199:20 - error: Expression of type \"type*\" cannot be assigned to return type \"type[_DataType@register_dtype]\"\n-     Type \"type*\" cannot be assigned to type \"type[_DataType@register_dtype]\" (reportGeneralTypeIssues)\n- 1130 errors, 10 warnings, 0 informations \n+ 1129 errors, 10 warnings, 0 informations \n\n```",
      "@rchiodo, I've fixed the issues you found with this run and then re-run the same experiment (enabling the new strict type guard experimental feature by default). Here are the results: https://github.com/microsoft/pyright/pull/5832#issuecomment-1695005098. I'm going to close this PR since it's now obsolete."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211104ac254a19ac2906c2",
    "number": 5812,
    "body": "…s deprecation detection and reporting for symbols imported from the `typing` module that are deprecated according to PEP 585 and 604. The option is currently disabled by default (even in strict mode) but can be enabled manually. This addresses #3598.",
    "head_branch": "issue3598",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added a new configuration option `deprecateTypingAliases` that enables deprecation detection and reporting for symbols imported from the `typing` module that are deprecated according to PEP 585 and 604. The option is currently disabled by default (even in strict mode) but can be enabled manually. This addresses #3598. (#5812)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211105ac254a19ac2906c3",
    "number": 5809,
    "body": "…n the arg type includes a union where one of the subtypes is a constrained TypeVar. This addresses #5794.",
    "head_branch": "issue5794",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/url.py:432:38 - error: Argument of type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to parameter \"p\" of type \"AnyOrLiteralStr@basename\" in function \"basename\"\n-     Type \"str | Unknown | Any | Literal[b\"\"]\" is incompatible with constrained type variable \"AnyOrLiteralStr\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/url.py:626:38 - error: Argument of type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to parameter \"p\" of type \"AnyOrLiteralStr@basename\" in function \"basename\"\n-     Type \"str | Unknown | Any | Literal[b\"\"]\" is incompatible with constrained type variable \"AnyOrLiteralStr\" (reportGeneralTypeIssues)\n- 3705 errors, 49 warnings, 0 informations \n+ 3703 errors, 49 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.31x faster (69.4s -> 52.9s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive during overload matching when the arg type includes a union where one of the subtypes is a constrained TypeVar. This addresses #5794. (#5809)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211106ac254a19ac2906c4",
    "number": 5808,
    "body": "…rious `reportUnknownArgumentType` error when calling the same constructor multiple times in a single call expression. This addresses #5804.",
    "head_branch": "issue5804",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nExpression (https://github.com/cognitedata/Expression)\n-   /tmp/mypy_primer/projects/Expression/tests/test_result.py:372:20 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"one\" in function \"__init__\"\n-     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Expression/tests/test_result.py:372:5 - error: Type of \"obj\" is partially unknown\n-     Type of \"obj\" is \"dict[str, dict[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Expression/tests/test_result.py:391:30 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"error\" in function \"__init__\"\n-     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Expression/tests/test_result.py:404:22 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"error\" in function \"__init__\"\n-     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Expression/tests/test_result.py:404:5 - error: Type of \"obj\" is partially unknown\n-     Type of \"obj\" is \"dict[str, dict[Unknown, Unknown]]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Expression/tests/test_union.py:299:42 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"value\" in function \"__init__\"\n-     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Expression/tests/test_union.py:303:34 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"value\" in function \"__init__\"\n-     Argument type is \"dict[Unknown, Unknown]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Expression/tests/test_union.py:303:5 - error: Type of \"obj\" is partially unknown\n-     Type of \"obj\" is \"dict[str, str | dict[Unknown, Unknown]]\" (reportUnknownVariableType)\n- 209 errors, 0 warnings, 0 informations \n+ 201 errors, 0 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_trace_utils.py:1174:42 - error: Argument of type \"dict_items[str, int | dict[Unknown, Unknown]]\" cannot be assigned to parameter \"items\" of type \"Iterator[Tuple[str, Any]]\" in function \"set_flattened_tags\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_trace_utils.py:1174:42 - error: Argument of type \"dict_items[str, int | dict[str, int | dict[str, int]]]\" cannot be assigned to parameter \"items\" of type \"Iterator[Tuple[str, Any]]\" in function \"set_flattened_tags\"\n-     \"dict_items[str, int | dict[Unknown, Unknown]]\" is incompatible with protocol \"Iterator[Tuple[str, Any]]\"\n+     \"dict_items[str, int | dict[str, int | dict[str, int]]]\" is incompatible with protocol \"Iterator[Tuple[str, Any]]\"\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_trace_utils.py:1184:42 - error: Argument of type \"dict_items[str, int | dict[Unknown, Unknown]]\" cannot be assigned to parameter \"items\" of type \"Iterator[Tuple[str, Any]]\" in function \"set_flattened_tags\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_trace_utils.py:1184:42 - error: Argument of type \"dict_items[str, int | dict[str, int | dict[str, int]]]\" cannot be assigned to parameter \"items\" of type \"Iterator[Tuple[str, Any]]\" in function \"set_flattened_tags\"\n-     \"dict_items[str, int | dict[Unknown, Unknown]]\" is incompatible with protocol \"Iterator[Tuple[str, Any]]\"\n+     \"dict_items[str, int | dict[str, int | dict[str, int]]]\" is incompatible with protocol \"Iterator[Tuple[str, Any]]\"\n\n```"
    ],
    "commit_messages": [
      "Fixed regression that resulted in incorrect type evaluation and a spurious `reportUnknownArgumentType` error when calling the same constructor multiple times in a single call expression. This addresses #5804. (#5808)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211107ac254a19ac2906c5",
    "number": 5806,
    "body": "…` in its type definition. When accessed via a subclass (either through `cls` or `self`), the type is now assumed to be changed to `Self` of the child class. This makes pyright's behavior closer to mypy's in this case. It addresses #5803.",
    "head_branch": "issue5803-1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Changed type evaluation behavior for a class variable that uses `Self` in its type definition. When accessed via a subclass (either through `cls` or `self`), the type is now assumed to be changed to `Self` of the child class. This makes pyright's behavior closer to mypy's in this case. It addresses #5803. (#5806)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211108ac254a19ac2906c6",
    "number": 5805,
    "body": "…` in its type definition. When accessed via a subclass (either through `cls` or `self`), the type is now assumed to be changed to `Self` of the child class. This makes pyright's behavior closer to mypy's in this case. It addresses #5803.",
    "head_branch": "issue5803",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.33x faster (85.8s -> 64.4s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211109ac254a19ac2906c7",
    "number": 5799,
    "body": "…call__` attribute must be a class variable, not an instance variable. This addresses #5796.",
    "head_branch": "issue5796",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved logic that determines whether an object is callable. The `__call__` attribute must be a class variable, not an instance variable. This addresses #5796. (#5799)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621110aac254a19ac2906c8",
    "number": 5797,
    "body": "…ect results when narrowing a generic class instance. This addresses #5688.",
    "head_branch": "issue5688",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in the `isinstance` type guard logic that produced incorrect results when narrowing a generic class instance. This addresses #5688. (#5797)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621110bac254a19ac2906c9",
    "number": 5790,
    "body": "…ect results when narrowing a generic class instance. This addresses #5688.",
    "head_branch": "issue5688",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in the `isinstance` type guard logic that produced incorrect results when narrowing a generic class instance. This addresses #5688. (#5790)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621110cac254a19ac2906ca",
    "number": 5789,
    "body": "Roll-up of the following changes:\r\n    1. Fix chained file path notebook assert https://github.com/microsoft/pyrx/pull/4012 // https://github.com/microsoft/pylance-release/issues/4733, possibly https://github.com/microsoft/pylance-release/issues/4685\r\n    2. Add members from enum.Enum https://github.com/microsoft/pyrx/pull/4015 // https://github.com/microsoft/pylance-release/issues/4734\r\n    3. add support for sphinx code-blocks. its based on reST but its a new directive block name https://github.com/microsoft/pyrx/pull/4011 // https://github.com/microsoft/pylance-release/issues/3509\r\n    4. Honor editor indentation settings in `PythonFormatOnTypeProvider` https://github.com/microsoft/pyrx/pull/3930 // https://github.com/microsoft/pylance-release/issues/4071\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\nCo-authored-by: Stella Huang <stellahuang@microsoft.com>",
    "head_branch": "pull-pylance-with-pyright-1.1.324",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.324 (#5789)\n\nCo-authored-by: Bill Schnurr bschnurr@microsoft.com\r\nCo-authored-by: HeeJae Chang hechang@microsoft.com\r\nCo-authored-by: Erik De Bonte erikd@microsoft.com\r\nCo-authored-by: Rich Chiodo rchiodo@microsoft.com\r\nCo-authored-by: Stella Huang stellahuang@microsoft.com"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621110dac254a19ac2906cb",
    "number": 5787,
    "body": "…right more accurately models the runtime behavior when the descriptor is accessed through an object (as opposed to a class). Previously, pyright was modeling this as an `Any` value to avoid problems with type stubs that are not accurately modeling the runtime behavior, but this caused other unintended side effects. This addresses #5778.",
    "head_branch": "issue5778-3",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Changed logic for handling the `__get__` method of a descriptor so pyright more accurately models the runtime behavior when the descriptor is accessed through an object (as opposed to a class). Previously, pyright was modeling this as an `Any` value to avoid problems with type stubs that are not accurately modeling the runtime behavior, but this caused other unintended side effects. This addresses #5778. (#5787)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621110eac254a19ac2906cc",
    "number": 5786,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4684\r\n\r\nThe bug repros when an `OperationCanceledException` is thrown within `getTypeOfClass`. There are two sets of `writeTypeCache` calls in `getTypeOfClass`. One set before `classType.details.fields` is assigned, and one after. If cancellation occurs between these two sets of `writeTypeCache` calls, we leave an incomplete `ClassType` in the type cache.\r\n\r\nFixed by catching `OperationCanceledException` that occur during that window and setting a new `isTypeCacheInvalid` boolean on the exception to `true` so when the exception is caught we know to discard the current `TypeEvaluator`.\r\n\r\nAlso replaced two calls to `TypeEvaluator.runWithCancellationToken` with calls to `_runEvaluatorWithCancellationToken` to ensure that we're calling `_createNewEvaluator` as needed for exceptions. Hover, for example, was calling `Program.run`.",
    "head_branch": "pylance4684",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Discard `TypeEvaluator` if cancellation leaves partially-constructed class type during `getTypeOfClass` (#5786)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621110fac254a19ac2906cd",
    "number": 5785,
    "body": "…right more accurately models the runtime behavior when the descriptor is accessed through an object (as opposed to a class). Previously, pyright was modeling this as an `Any` value to avoid problems with type stubs that are not accurately modeling the runtime behavior, but this caused other unintended side effects. This addresses #5778.",
    "head_branch": "issue5778-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211110ac254a19ac2906ce",
    "number": 5783,
    "body": "…right more accurately models the runtime behavior when the descriptor is accessed through an object (as opposed to a class). In this case, the `owner` parameter of the `__get__` method will receive a `None` value at runtime. Previously, pyright was modeling this as an `Any` value to avoid problems with type stubs that are not accurately modeling the runtime behavior, but this caused other unintended side effects. This addresses #5778.",
    "head_branch": "issue5778",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/chat.py:411:57 - error: Argument of type \"Self@Chat[ChatMessageT@Chat]\" cannot be assigned to parameter \"channel\" of type \"GroupChannel | ClanChannel\" in function \"_from_history\"\n-     Type \"Self@Chat[ChatMessageT@Chat]\" cannot be assigned to type \"GroupChannel | ClanChannel\"\n-       \"Chat[ChatMessageT@Chat]\" is incompatible with \"GroupChannel\"\n-       \"Chat[ChatMessageT@Chat]\" is incompatible with \"ClanChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:401:31 - error: Cannot access member \"_type_args\" for type \"Chat[ChatMessageT@Chat]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:401:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:411:31 - error: Type of \"_from_history\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:412:32 - error: Type of \"created_at\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:590:41 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:590:36 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:618:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:618:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:637:31 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:637:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:643:32 - error: Type of \"id\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:694:37 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:694:32 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:702:33 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:702:28 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:865:31 - error: Cannot access member \"_type_args\" for type \"ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:865:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:752:21 - error: Cannot access member \"NATIVE_NAME_MAP\" for type \"Language\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:752:16 - error: Type of \"NATIVE_NAME_MAP\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:757:21 - error: Cannot access member \"API_LANGUAGE_MAP\" for type \"Language\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:757:16 - error: Type of \"API_LANGUAGE_MAP\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:762:21 - error: Cannot access member \"WEB_API_MAP\" for type \"Language\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/enums.py:762:16 - error: Type of \"WEB_API_MAP\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1405:34 - error: Cannot access member \"_type_args\" for type \"GroupChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1405:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1405:34 - error: Cannot access member \"_type_args\" for type \"ClanChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1444:34 - error: Cannot access member \"_type_args\" for type \"GroupChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1444:26 - error: Type of \"_type_args\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1444:34 - error: Cannot access member \"_type_args\" for type \"ClanChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2203:87 - error: Cannot access member \"_COMMENTABLE_TYPE\" for type \"Commentable\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2203:81 - error: Type of \"_COMMENTABLE_TYPE\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2215:28 - error: Cannot access member \"_COMMENTABLE_TYPE\" for type \"Commentable\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2215:22 - error: Type of \"_COMMENTABLE_TYPE\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2230:28 - error: Cannot access member \"_COMMENTABLE_TYPE\" for type \"Commentable*\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2230:22 - error: Type of \"_COMMENTABLE_TYPE\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2254:28 - error: Cannot access member \"_COMMENTABLE_TYPE\" for type \"Commentable\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2254:22 - error: Type of \"_COMMENTABLE_TYPE\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2265:28 - error: Cannot access member \"_COMMENTABLE_TYPE\" for type \"Commentable\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2265:22 - error: Type of \"_COMMENTABLE_TYPE\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2360:39 - error: Cannot access member \"_AWARDABLE_TYPE\" for type \"Awardable\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2360:29 - error: Type of \"_AWARDABLE_TYPE\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1408:33 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1411:43 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1447:33 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:1450:43 - warning: Unnecessary \"# type: ignore\" comment\n- 8166 errors, 28 warnings, 0 informations \n+ 8206 errors, 32 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/ops/charm.py\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1100:18 - error: Cannot access member \"collect_app_status\" for type \"CharmEvents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1100:9 - error: Type of \"collect_app_status\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1100:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1105:14 - error: Cannot access member \"collect_unit_status\" for type \"CharmEvents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1105:5 - error: Type of \"collect_unit_status\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1105:5 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+ /tmp/mypy_primer/projects/operator/ops/framework.py\n+   /tmp/mypy_primer/projects/operator/ops/framework.py:679:17 - error: Cannot access member \"pre_commit\" for type \"FrameworkEvents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/framework.py:679:9 - error: Type of \"pre_commit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/framework.py:679:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/framework.py:682:17 - error: Cannot access member \"commit\" for type \"FrameworkEvents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/framework.py:682:9 - error: Type of \"commit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/framework.py:682:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+ /tmp/mypy_primer/projects/operator/ops/testing.py\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:321:18 - error: Cannot access member \"install\" for type \"CharmEvents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:321:9 - error: Type of \"install\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:321:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:347:22 - error: Cannot access member \"leader_elected\" for type \"CharmEvents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:347:13 - error: Type of \"leader_elected\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:347:13 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:349:22 - error: Cannot access member \"leader_settings_changed\" for type \"CharmEvents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:349:13 - error: Type of \"leader_settings_changed\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:349:13 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:351:18 - error: Cannot access member \"config_changed\" for type \"CharmEvents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:351:9 - error: Type of \"config_changed\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:351:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:353:18 - error: Cannot access member \"start\" for type \"CharmEvents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:353:9 - error: Type of \"start\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:353:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1156:24 - error: Cannot access member \"config_changed\" for type \"CharmEvents*\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1156:9 - error: Type of \"config_changed\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1156:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1174:28 - error: Cannot access member \"leader_elected\" for type \"CharmEvents*\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1174:13 - error: Type of \"leader_elected\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1174:13 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1350:23 - error: Cannot access member \"secret_changed\" for type \"CharmEvents*\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1350:9 - error: Type of \"secret_changed\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1350:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1441:23 - error: Cannot access member \"secret_rotate\" for type \"CharmEvents*\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1441:9 - error: Type of \"secret_rotate\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1441:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1461:23 - error: Cannot access member \"secret_remove\" for type \"CharmEvents*\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1461:9 - error: Type of \"secret_remove\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1461:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1481:23 - error: Cannot access member \"secret_expired\" for type \"CharmEvents*\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1481:9 - error: Type of \"secret_expired\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1481:9 - error: Type of \"emit\" is unknown (reportUnknownMemberType)\n- 3 errors, 0 warnings, 0 informations \n+ 48 errors, 0 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:286:67 - error: Cannot access member \"__injected_method\" for type \"LazyPropertyImpl[P@LazyPropertyImpl, Out@LazyPropertyImpl]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:286:62 - error: Type of \"__injected_method\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:302:50 - error: Cannot access member \"__injected_method\" for type \"LazyPropertyImpl[P@LazyPropertyImpl, Out@LazyPropertyImpl]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:302:45 - error: Type of \"__injected_method\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:302:45 - error: Argument type is unknown\n+     Argument corresponds to parameter \"__obj\" in function \"debug_repr\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:308:54 - error: Cannot access member \"__injected_method\" for type \"LazyPropertyImpl[P@LazyPropertyImpl, Out@LazyPropertyImpl]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:308:49 - error: Type of \"__injected_method\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:346:67 - error: Cannot access member \"__injected_method\" for type \"LazyMethodImpl[P@LazyMethodImpl, Out@LazyMethodImpl]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:346:62 - error: Type of \"__injected_method\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:350:48 - error: Cannot access member \"__injected_method\" for type \"LazyMethodImpl[P@LazyMethodImpl, Out@LazyMethodImpl]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:350:43 - error: Type of \"__injected_method\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:350:43 - error: Argument type is unknown\n+     Argument corresponds to parameter \"__obj\" in function \"debug_repr\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:355:23 - error: Cannot access member \"__injected_method\" for type \"LazyMethodImpl[P@LazyMethodImpl, Out@LazyMethodImpl]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:355:18 - error: Type of \"__injected_method\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:355:18 - error: Argument type is unknown\n+     Argument corresponds to parameter \"func\" in function \"__init__\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:363:43 - error: Cannot access member \"__injected_method\" for type \"LazyMethodImpl[P@LazyMethodImpl, Out@LazyMethodImpl]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/lazy_ext/_lazy.py:363:38 - error: Type of \"__injected_method\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:37:30 - error: Cannot access member \"read\" for type \"Files\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:37:24 - error: Type of \"read\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:37:24 - error: Argument type is unknown\n+     Argument corresponds to parameter \"__obj\" in function \"len\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:41:26 - error: Cannot access member \"read\" for type \"Files\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:41:20 - error: Type of \"read\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:41:43 - error: Cannot access member \"read\" for type \"Files\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:41:37 - error: Type of \"read\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:41:20 - error: Argument type is unknown\n+     Argument corresponds to parameter \"value\" in function \"__init__\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject.py:517:21 - error: Cannot access member \"method\" for type \"Conf\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject.py:517:16 - error: Type of \"method\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject.py:519:21 - error: Cannot access member \"get\" for type \"Conf\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject.py:519:16 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject.py:522:22 - error: Cannot access member \"method\" for type \"Conf\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject.py:522:16 - error: Type of \"method\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject.py:523:22 - error: Cannot access member \"get\" for type \"Conf\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_inject.py:523:16 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n- 729 errors, 31 warnings, 0 informations \n+ 762 errors, 31 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/abc.py\n+   /tmp/mypy_primer/projects/discord.py/discord/abc.py:655:21 - error: Cannot access member \"send_messages\" for type \"Permissions\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/abc.py:662:21 - error: Cannot access member \"read_messages\" for type \"Permissions\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/abc.py:730:21 - error: Cannot access member \"administrator\" for type \"Permissions\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/abc.py:761:17 - error: Cannot access member \"administrator\" for type \"Permissions\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/automod.py\n+   /tmp/mypy_primer/projects/discord.py/discord/automod.py:340:61 - error: Cannot access member \"actions\" for type \"AutoModRule\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/channel.py\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:251:74 - error: Cannot access member \"read_messages\" for type \"Permissions\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:999:21 - error: Cannot access member \"connect\" for type \"Permissions\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/flags.py\n+   /tmp/mypy_primer/projects/discord.py/discord/flags.py:1403:20 - error: Cannot access member \"members\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/flags.py:1405:20 - error: Cannot access member \"voice_states\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/flags.py:1411:17 - error: Cannot access member \"voice\" for type \"MemberCacheFlags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/flags.py:1411:39 - error: Cannot access member \"voice_states\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/flags.py:1414:17 - error: Cannot access member \"joined\" for type \"MemberCacheFlags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/flags.py:1414:40 - error: Cannot access member \"members\" for type \"Intents\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/guild.py\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:523:55 - error: Cannot access member \"joined\" for type \"MemberCacheFlags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:524:54 - error: Cannot access member \"voice\" for type \"MemberCacheFlags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:2270:37 - error: Cannot access member \"members\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:4072:37 - error: Cannot access member \"members\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/guild.py:4133:51 - error: Cannot access member \"presences\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/interactions.py:573:25 - error: Cannot access member \"command\" for type \"Interaction[ClientT@Interaction]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/member.py\n+   /tmp/mypy_primer/projects/discord.py/discord/member.py:695:17 - error: Cannot access member \"administrator\" for type \"Permissions\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/message.py\n+   /tmp/mypy_primer/projects/discord.py/discord/message.py:1912:65 - error: Cannot access member \"raw_channel_mentions\" for type \"Message\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/state.py\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:226:24 - error: Cannot access member \"guilds\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:229:83 - error: Cannot access member \"members\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:232:24 - error: Cannot access member \"members\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:251:24 - error: Cannot access member \"members\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:267:30 - error: Cannot access member \"emojis_and_stickers\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:497:80 - error: Cannot access member \"presences\" for type \"Intents\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:1025:36 - error: Cannot access member \"joined\" for type \"MemberCacheFlags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:1070:40 - error: Cannot access member \"joined\" for type \"MemberCacheFlags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:1194:50 - error: Cannot access member \"joined\" for type \"MemberCacheFlags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:1538:26 - error: Cannot access member \"voice\" for type \"MemberCacheFlags\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/threads.py\n+   /tmp/mypy_primer/projects/discord.py/discord/threads.py:427:21 - error: Cannot access member \"send_messages_in_threads\" for type \"Permissions\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/threads.py:434:21 - error: Cannot access member \"read_messages\" for type \"Permissions\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:881:36 - error: Cannot access member \"response\" for type \"Interaction[Client]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:882:39 - error: Cannot access member \"response\" for type \"Interaction[Client]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:894:24 - error: Cannot access member \"response\" for type \"Interaction[Client]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/commands.py:897:27 - error: Cannot access member \"response\" for type \"Interaction[Client]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/tree.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/tree.py:793:31 - error: Cannot access member \"command\" for type \"Interaction[ClientT@CommandTree]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/tree.py:1078:31 - error: Cannot access member \"command\" for type \"Interaction[ClientT@CommandTree]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py:250:31 - error: Cannot access member \"command\" for type \"Interaction[BotT@Context]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py:281:62 - error: Cannot access member \"namespace\" for type \"Interaction[BotT@Context]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py:482:25 - error: Cannot access member \"connect\" for type \"Permissions\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py:517:25 - error: Cannot access member \"connect\" for type \"Permissions\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py:809:36 - error: Cannot access member \"response\" for type \"Interaction[BotT@Context]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py:1057:29 - error: Cannot access member \"response\" for type \"Interaction[BotT@Context]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py:1058:42 - error: Cannot access member \"followup\" for type \"Interaction[BotT@Context]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py:1060:36 - error: Cannot access member \"response\" for type \"Interaction[BotT@Context]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/context.py:295:33 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:208:49 - error: Cannot access member \"joined\" for type \"MemberCacheFlags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:227:49 - error: Cannot access member \"joined\" for type \"MemberCacheFlags\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/hybrid.py:533:95 - error: Cannot access member \"namespace\" for type \"Interaction[BotT@_parse_arguments]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/hybrid.py:689:87 - error: Cannot access member \"namespace\" for type \"Interaction[BotT@_parse_arguments]\" (reportGeneralTypeIssues)\n- 44 errors, 11 warnings, 0 informations \n+ 95 errors, 12 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211111ac254a19ac2906cf",
    "number": 5774,
    "body": "…n attribute is accessed from a class object and the metaclass defines an attribute of the same name that happens to be a descriptor object. The runtime favors the metaclass attribute in this case. This addresses #5686.",
    "head_branch": "issue5686",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+     Member \"SerializeToString\" is unknown\n+     Member \"FromString\" is unknown\n+     Member \"SerializeToString\" is unknown\n+     Member \"FromString\" is unknown\n+     Member \"SerializeToString\" is unknown\n+     Member \"FromString\" is unknown\n+     Member \"SerializeToString\" is unknown\n+     Member \"FromString\" is unknown\n+     Member \"SerializeToString\" is unknown\n+     Member \"FromString\" is unknown\n+     Member \"FromString\" is unknown\n+     Member \"SerializeToString\" is unknown\n+     Member \"FromString\" is unknown\n+     Member \"SerializeToString\" is unknown\n+     Member \"FromString\" is unknown\n+     Member \"SerializeToString\" is unknown\n+     Member \"FromString\" is unknown\n+     Member \"SerializeToString\" is unknown\n\npandera (https://github.com/pandera-dev/pandera)\n+     Member \"from_tuples\" is unknown\n+     Member \"from_arrays\" is unknown\n\n```"
    ],
    "commit_messages": [
      "Added logic to mirror the (rather surprising) runtime behavior when an attribute is accessed from a class object and the metaclass defines an attribute of the same name that happens to be a descriptor object. The runtime favors the metaclass attribute in this case. This addresses #5686. (#5774)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211111ac254a19ac2906d0",
    "number": 5772,
    "body": "…where a parameter is annotated with a union of multiple \"bare\" TypeVars (like `S | T`). In this case, it's not clear whether the corresponding argument type should constrain `S` or `T` or both. We now defer the constraint during the first pass of arg/param type validation so additional references to `S` or `T` can help establish the appropriate constraint. This addresses #5768.",
    "head_branch": "issue5768",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.30x faster (64.6s -> 49.5s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Added heuristic to constraint solver logic to better handle the case where a parameter is annotated with a union of multiple \"bare\" TypeVars (like `S | T`). In this case, it's not clear whether the corresponding argument type should constrain `S` or `T` or both. We now defer the constraint during the first pass of arg/param type validation so additional references to `S` or `T` can help establish the appropriate constraint. This addresses #5768. (#5772)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211112ac254a19ac2906d1",
    "number": 5762,
    "body": "…due to generic type argument mismatches. This addresses #5748.",
    "head_branch": "issue5748",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added check for classes that have mutually-incompatible base classes due to generic type argument mismatches. This addresses #5748. (#5762)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211113ac254a19ac2906d2",
    "number": 5761,
    "body": "…tain cases. This addresses #5757.",
    "head_branch": "issue5757",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:914:55 - error: Operator \"in\" not supported for types \"int\" and \"Iterable[ID64]\" (reportGeneralTypeIssues)\n- 8179 errors, 30 warnings, 0 informations \n+ 8178 errors, 30 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type narrowing on assignment in certain cases. This addresses #5757. (#5761)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211114ac254a19ac2906d3",
    "number": 5760,
    "body": "… variable) and otherwise simplified code involved in narrowing for assignment.",
    "head_branch": "redundantNarrowing",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-   /tmp/mypy_primer/projects/AutoSplit/src/menu_bar.py:120:37 - error: \"start\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 481 errors, 30 warnings, 7 informations \n+ 480 errors, 30 warnings, 7 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py): typechecking got 1.38x faster (47.8s -> 34.5s)\n(Performance measurements are based on a single noisy sample)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/writer/writer.py:296:28 - error: \"request\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/writer/writer.py:302:55 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"conn\" of type \"HTTPConnection\" in function \"get_connection_response\"\n-     Type \"Unknown | None\" cannot be assigned to type \"HTTPConnection\"\n-       Type \"None\" cannot be assigned to type \"HTTPConnection\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_processors.py:530:12 - error: Operator \"<=\" not supported for \"None\" (reportOptionalOperand)\n- 9044 errors, 433 warnings, 0 informations \n+ 9041 errors, 433 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Eliminated redundant type narrowing on assignment to a simple name (a variable) and otherwise simplified code involved in narrowing for assignment. (#5760)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211115ac254a19ac2906d4",
    "number": 5746,
    "body": "…thodOverride` check in certain circumstances where the method in both the base class and child class are overloaded. This addresses #5718.",
    "head_branch": "issue5718-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-     Overloads for override method must be in the same order as the base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2267:9 - warning: Method \"iter_menu_commands\" overrides class \"Client\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n- 2341 errors, 9840 warnings, 0 informations \n+ 2341 errors, 9841 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py): typechecking got 1.28x slower (40.9s -> 52.3s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive in the `reportIncompatibleMethodOverride` check in certain circumstances where the method in both the base class and child class are overloaded. This addresses #5718. (#5746)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211116ac254a19ac2906d5",
    "number": 5744,
    "body": "…thodOverride` check in certain circumstances where the method in both the base class and child class are overloaded. This addresses #5718.",
    "head_branch": "issue5718-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2267:9 - warning: Method \"iter_menu_commands\" overrides class \"Client\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:2060:9 - warning: Method \"add_argument\" overrides class \"AbstractOptionParser\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:2183:9 - warning: Method \"add_option\" overrides class \"AbstractOptionParser\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py:902:15 - warning: Method \"respond\" overrides class \"Context\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n- 2341 errors, 9840 warnings, 0 informations \n+ 2341 errors, 9844 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211117ac254a19ac2906d6",
    "number": 5743,
    "body": "…thodOverride` check in certain circumstances where the method in both the base class and child class are overloaded. This addresses #5718.",
    "head_branch": "issue5718",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2267:9 - warning: Method \"iter_menu_commands\" overrides class \"Client\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n-     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:2060:9 - warning: Method \"add_argument\" overrides class \"AbstractOptionParser\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:2183:9 - warning: Method \"add_option\" overrides class \"AbstractOptionParser\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py:902:15 - warning: Method \"respond\" overrides class \"Context\" in an incompatible manner\n+     Override does not handle all overloads of base method (reportIncompatibleMethodOverride)\n- 2341 errors, 9840 warnings, 0 informations \n+ 2341 errors, 9844 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211118ac254a19ac2906d7",
    "number": 5740,
    "body": null,
    "head_branch": "ft1",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fix partial rename in tests (#5740)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211119ac254a19ac2906d8",
    "number": 5739,
    "body": "…his addresses #5699.",
    "head_branch": "issue5699",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/namedtuple.py:207:19 - error: No overloads for \"__init__\" match the provided arguments\n+     Argument types: (dict[Any, Any]) (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/namedtuple.py:258:19 - error: No overloads for \"__init__\" match the provided arguments\n+     Argument types: (dict[Any, Any]) (reportGeneralTypeIssues)\n- 170 errors, 5 warnings, 0 informations \n+ 172 errors, 5 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved validation of `NamedTuple` and `namedtuple` factory calls. This addresses #5699. (#5739)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621111aac254a19ac2906d9",
    "number": 5736,
    "body": "Rollup of the following changes:\r\n\r\n- https://github.com/microsoft/pyrx/commit/cf9527b3f680c7a7c64a5dc94e9dd92601746b19 pylance loc update 20230815.1 https://github.com/microsoft/pyrx/pull/3997\r\n- https://github.com/microsoft/pyrx/commit/3f11ee5d8c796273de036e74503fe6f4fbb69d62 made more services as service provider services https://github.com/microsoft/pyrx/pull/3987\r\n- https://github.com/microsoft/pyrx/commit/a99a9bb77f182b260ad0d75f96062d90648163b0 forgot to add `await` when extracting out `intelliCode` https://github.com/microsoft/pyrx/pull/3989\r\n- https://github.com/microsoft/pyrx/commit/abbc816b850bd183d38270776d11f11e73ef1e9e pylance loc update 20230809.1 https://github.com/microsoft/pyrx/pull/3983",
    "head_branch": "pull-pylance-with-pyright-1.1.323",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.323 (#5736)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621111bac254a19ac2906da",
    "number": 5729,
    "body": "…g as the index is positive and falls within a determinate portion. This addresses #5726.",
    "head_branch": "issue5726",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for indexing into tuples of indeterminate length as long as the index is positive and falls within a determinate portion. This addresses #5726. (#5729)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621111cac254a19ac2906db",
    "number": 5728,
    "body": "…ard import. This addresses #5704.",
    "head_branch": "issue5704",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/tests/modin/test_logical_dtypes.py:9:44 - error: Import symbol \"datacontainer_lib\" has type \"(request: Unknown) -> Generator[ModuleType, None, None]\", which cannot be assigned to declared type \"() -> Generator[ModuleType, None, None]\"\n+     Type \"(request: Unknown) -> Generator[ModuleType, None, None]\" cannot be assigned to type \"() -> Generator[ModuleType, None, None]\" (reportGeneralTypeIssues)\n- 1124 errors, 10 warnings, 0 informations \n+ 1125 errors, 10 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"init\" has type \"(env: str | None, service: str | None, version: str | None, tags: Dict[str, str] | None, max_nframes: int | None, url: str | None) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"start_sample\" has type \"(nframes: int) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_cputime\" has type \"(value: int, count: int) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_walltime\" has type \"(value: int, count: int) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_acquire\" has type \"(value: int, count: int) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_release\" has type \"(value: int, count: int) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_alloc\" has type \"(value: int, count: int) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_heap\" has type \"(value: int) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_lock_name\" has type \"(lock_name: str) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_frame\" has type \"(name: str, filename: str, address: int, line: int) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_threadinfo\" has type \"(thread_id: int, thread_native_id: int, thread_name: str | None) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_taskinfo\" has type \"(task_id: int, task_name: str) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_exceptioninfo\" has type \"(exc_type: type, count: int) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_class_name\" has type \"(class_name: str) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"push_span\" has type \"(span: Span | None, endpoint_collection_enabled: bool) -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"flush_sample\" has type \"() -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/datadog/profiling/ddup.py:2:24 - error: Import symbol \"upload\" has type \"() -> None\", which cannot be assigned to declared type \"None\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n- 9007 errors, 432 warnings, 0 informations \n+ 9024 errors, 432 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Added type compatibility enforcement for symbols imported via a wildcard import. This addresses #5704. (#5728)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621111dac254a19ac2906dc",
    "number": 5727,
    "body": "…propriately in certain cases. This addresses #5710.",
    "head_branch": "issue5710",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/context/slash.py:979:53 - error: Type variable \"_T\" has no meaning in this context (reportGeneralTypeIssues)\n- 2340 errors, 9840 warnings, 0 informations \n+ 2341 errors, 9840 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:1188:27 - error: Type variable \"T\" has no meaning in this context (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ui/select.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:676:33 - error: Type variable \"V\" has no meaning in this context (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:692:41 - error: Type variable \"V\" has no meaning in this context (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:708:41 - error: Type variable \"V\" has no meaning in this context (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:724:47 - error: Type variable \"V\" has no meaning in this context (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:740:55 - error: Type variable \"V\" has no meaning in this context (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/select.py:755:37 - error: Type variable \"V\" has no meaning in this context (reportGeneralTypeIssues)\n- 37 errors, 10 warnings, 0 informations \n+ 44 errors, 10 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false negative when a TypeVar was used inappropriately in certain cases. This addresses #5710. (#5727)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621111eac254a19ac2906dd",
    "number": 5725,
    "body": "… dataclass. This addresses https://github.com/microsoft/pyright/issues/5707.",
    "head_branch": "issue5707",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added special-case logic for fields with the name `__hash__` within a dataclass. This addresses https://github.com/microsoft/pyright/issues/5707. (#5725)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621111fac254a19ac2906de",
    "number": 5724,
    "body": "…atement. This addresses https://github.com/microsoft/pyright/issues/5716.",
    "head_branch": "issue5716",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict)\n-     \"Generator[tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable] | tuple[tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable], Unknown]]\" is incompatible with \"ItemsIter[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable]\"\n+     \"Generator[tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable] | tuple[tuple[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable], Unknown], Unknown, Unknown]\" is incompatible with \"ItemsIter[KT@iteritems_mapping_or_iterable, VT@iteritems_mapping_or_iterable]\"\n\nExpression (https://github.com/cognitedata/Expression)\n+   /tmp/mypy_primer/projects/Expression/tests/test_catch.py:98:29 - error: Return type of generator function must be compatible with \"Generator[str, Any, Any]\"\n+     \"Generator[str, str, Unknown]\" is incompatible with \"Generator[str, None, str]\"\n+       Type parameter \"_SendT_contra@Generator\" is contravariant, but \"str\" is not a supertype of \"None\" (reportGeneralTypeIssues)\n- 280 errors, 0 warnings, 0 informations \n+ 281 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Added check to enforce a generator's \"send type\" in a `yield from` statement. This addresses https://github.com/microsoft/pyright/issues/5716. (#5724)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621111fac254a19ac2906df",
    "number": 5723,
    "body": "…tive errors.\"\r\n\r\nThis reverts commit 2a096860c11dff7bbda92f92efb0216e2580c2c6.",
    "head_branch": "issue5446",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/map.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/map.py:215:9 - error: \"__hash__\" overrides symbol of same name in class \"Mapping\"\n+     Type cannot be assigned to type \"None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/map.py:215:9 - error: Instance variable \"__hash__\" overrides class variable of same name in class \"Mapping\" (reportIncompatibleVariableOverride)\n- 278 errors, 0 warnings, 0 informations \n+ 280 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Revert \"Reverted the change for #5446 because it's causing false positive errors.\" (#5723)\n\nThis reverts commit 2a096860c11dff7bbda92f92efb0216e2580c2c6.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211120ac254a19ac2906e0",
    "number": 5712,
    "body": "…ositive error) when a binary operator overload method was annotated to return `NoReturn`. This addresses #5711.",
    "head_branch": "issue5711",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect type evaluation (and a false positive error) when a binary operator overload method was annotated to return `NoReturn`. This addresses #5711. (#5712)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211121ac254a19ac2906e1",
    "number": 5702,
    "body": "…te and led to a crash. This addresses #5622.",
    "head_branch": "issue5622",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a condition in the code flow engine that corrupted internal state and led to a crash. This addresses #5622. (#5702)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211122ac254a19ac2906e2",
    "number": 5698,
    "body": "…. PEP 688 eliminates the need for this hack, and it indicates that type checkers should remove support for this older behavior. This addresses #5697.",
    "head_branch": "issue5697",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:241:17 - error: Argument of type \"memoryview\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"verify_signature\"\n+     \"memoryview\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:642:31 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"s\" of type \"bytes\" in function \"READ_U32\"\n+     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:645:41 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"parse\"\n+     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:647:38 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"parse\"\n+     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2895:29 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"s\" of type \"bytes\" in function \"READ_U32\"\n+     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n- 8130 errors, 30 warnings, 0 informations \n+ 8135 errors, 30 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2682:52 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"buf\" of type \"bytes\" in function \"_next_part_boundary\"\n+     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2702:57 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"buf\" of type \"bytes\" in function \"_next_part_boundary\"\n+     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2698:37 - error: Argument of type \"bytearray\" cannot be assigned to parameter of type \"bytes\"\n+     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2706:39 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"data\" of type \"bytes\" in function \"__call__\"\n+     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:2713:28 - error: Expression of type \"bytearray\" cannot be assigned to declared type \"bytes\"\n+     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n- 3 errors, 0 warnings, 0 informations \n+ 8 errors, 0 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_encoding.py:183:20 - error: Expression of type \"bytearray\" cannot be assigned to return type \"bytes | None\"\n+     Type \"bytearray\" cannot be assigned to type \"bytes | None\"\n+       \"bytearray\" is incompatible with \"bytes\"\n+       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/fixtures/aspects/str_methods.py:209:12 - error: Expression of type \"bytearray\" cannot be assigned to return type \"bytes\"\n+     \"bytearray\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_compat.py:53:26 - error: Argument of type \"bytearray\" cannot be assigned to parameter \"s\" of type \"AnyStr@to_unicode\" in function \"to_unicode\"\n+     Type \"bytearray\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n- 9025 errors, 432 warnings, 0 informations \n+ 9028 errors, 432 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211123ac254a19ac2906e3",
    "number": 5680,
    "body": null,
    "head_branch": "pull-pylance-with-pyright-1.1.274",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211124ac254a19ac2906e4",
    "number": 5676,
    "body": "rollup of the following changes:\r\n\r\n- Base idea for a global service provider https://github.com/microsoft/pyrx/pull/3974\r\n- Pylance loc update 20230808.1 https://github.com/microsoft/pyrx/pull/3976\r\n- Disable codeQL warning https://github.com/microsoft/pyrx/pull/3967\r\n- Ignore library file changes under . https://github.com/microsoft/pyrx/pull/3951\r\n- Pylance Localization Update https://github.com/microsoft/pyrx/pull/3958\r\n- Add codeql suppression https://github.com/microsoft/pyrx/pull/3962\r\n\r\nCo-authored-by:\r\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>",
    "head_branch": "pull-pylance-with-pyright-1.1.321",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.321 (#5676)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211125ac254a19ac2906e5",
    "number": 5675,
    "body": "… union of types that use invariant type parameters to a protocol that uses a covariant type parameter. This addresses #5673.",
    "head_branch": "issue5673",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_conditions.py:132:59 - error: Argument of type \"Weighted\" cannot be assigned to parameter \"conditions\" of type \"Predicate[Weight@when] | Predicate[NeutralWeight] | Weight@when | NeutralWeight | bool | None\" in function \"when\"\n-     Type \"Weighted\" cannot be assigned to type \"Predicate[NeutralWeight] | NeutralWeight | bool | None\"\n-       \"Weighted\" is incompatible with protocol \"Predicate[NeutralWeight]\"\n-         \"weight\" is an incompatible type\n-           Type \"() -> (Weight | None)\" cannot be assigned to type \"() -> (OutWeight@Predicate | None)\"\n-             Function return type \"Weight | None\" is incompatible with type \"OutWeight@Predicate | None\"\n-       \"Weighted\" is incompatible with \"NeutralWeight\"\n-       Type cannot be assigned to type \"None\"\n-       \"Weighted\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n- 730 errors, 31 warnings, 0 informations \n+ 729 errors, 31 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.33x faster (49.8s -> 37.5s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed recent regression that led to a false positive when assigning a union of types that use invariant type parameters to a protocol that uses a covariant type parameter. This addresses #5673. (#5675)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211126ac254a19ac2906e6",
    "number": 5671,
    "body": "…tain cases where the declared type includes a type argument with an `Any` and the assigned type does not. This addresses #5628.",
    "head_branch": "issue5628",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:1241:66 - error: Argument of type \"Dict[str, Tuple[Unknown, ...]]\" cannot be assigned to parameter \"data\" of type \"Dict[str, List[Tuple[Unknown, ...]]]\" in function \"handle_left_open\"\n-     \"Dict[str, Tuple[Unknown, ...]]\" is incompatible with \"Dict[str, List[Tuple[Unknown, ...]]]\"\n-       Type parameter \"_VT@dict\" is invariant, but \"Tuple[Unknown, ...]\" is not the same as \"List[Tuple[Unknown, ...]]\" (reportGeneralTypeIssues)\n- 560 errors, 37 warnings, 0 informations \n+ 559 errors, 37 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type narrowing on assignment in certain cases where the declared type includes a type argument with an `Any` and the assigned type does not. This addresses #5628. (#5671)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211127ac254a19ac2906e7",
    "number": 5665,
    "body": "…ing bidirectional type inference when the expected type includes a protocol that is specialized with a literal type argument. This addresses https://github.com/microsoft/pyright/issues/5636.",
    "head_branch": "issue5636",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-         Type parameter \"_T_co@SupportsRead\" is covariant, but \"bytes | str\" is not a subtype of \"bytes\" (reportGeneralTypeIssues)\n+         \"read\" is an incompatible type\n+           Type \"(__n: int = -1, /) -> str\" cannot be assigned to type \"(__length: int = ..., /) -> _T_co@SupportsRead\"\n+             Function return type \"str\" is incompatible with type \"_T_co@SupportsRead\" (reportGeneralTypeIssues)\n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_conditions.py:132:59 - error: Argument of type \"Weighted\" cannot be assigned to parameter \"conditions\" of type \"Predicate[Weight@when] | Predicate[NeutralWeight] | Weight@when | NeutralWeight | bool | None\" in function \"when\"\n+     Type \"Weighted\" cannot be assigned to type \"Predicate[NeutralWeight] | NeutralWeight | bool | None\"\n+       \"Weighted\" is incompatible with protocol \"Predicate[NeutralWeight]\"\n+         \"weight\" is an incompatible type\n+           Type \"() -> (Weight | None)\" cannot be assigned to type \"() -> (OutWeight@Predicate | None)\"\n+             Function return type \"Weight | None\" is incompatible with type \"OutWeight@Predicate | None\"\n+       \"Weighted\" is incompatible with \"NeutralWeight\"\n+       Type cannot be assigned to type \"None\"\n+       \"Weighted\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n- 729 errors, 31 warnings, 0 informations \n+ 730 errors, 31 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that led to a false positive error in certain cases when using bidirectional type inference when the expected type includes a protocol that is specialized with a literal type argument. This addresses https://github.com/microsoft/pyright/issues/5636. (#5665)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211128ac254a19ac2906e8",
    "number": 5663,
    "body": "… statement introduced in PEP 695. This addresses #5662.",
    "head_branch": "issue5662",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added check for improper use of a type alias defined using the `type` statement introduced in PEP 695. This addresses #5662. (#5663)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211129ac254a19ac2906e9",
    "number": 5656,
    "body": "Fixes microsoft/pylance-release#4694 \r\n\r\n![image](https://github.com/microsoft/pyright/assets/2784602/bae03585-4edf-40d6-88da-99b4bd60cd3f)\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "@microsoft-github-policy-service agree\r\n",
      "@R-O-C-K-E-T, if you would like to add new features to pyright, we'd prefer that you propose the feature first in an enhancement request and/or a discussion topic. \r\n\r\n@rchiodo or @debonte, since this is a language server feature, could you please review this change and decide whether it's something you'd like to accept?",
      "Actually, the change is in the core type evaluator code, and the implementation is not consistent with how I recommend implementing such a feature.\r\n\r\n@R-O-C-K-E-T, I'm going to close the PR. If you'd like to see this feature, please propose it as an enhancement request in the pyright-release project. The pylance team will then decide if it's a feature they'd like to include in pylance. If it's something they'd like to include, I'll work with them to implement it in the core type checker in a way that's maintainable and complete."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621112aac254a19ac2906ea",
    "number": 5647,
    "body": "… for the inferred return type of an `async` function or method. This addresses #5639.",
    "head_branch": "issue5639-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:72:11 - error: Return type is unknown (reportUnknownParameterType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:72:11 - error: Return type, \"Coroutine[Any, Any, Unknown]\", is partially unknown (reportUnknownParameterType)\n- /tmp/mypy_primer/projects/steam.py/steam/invite.py\n-   /tmp/mypy_primer/projects/steam.py/steam/invite.py:106:32 - error: Function with declared type of \"NoReturn\" cannot return \"None\" (reportGeneralTypeIssues)\n- 8245 errors, 30 warnings, 0 informations \n+ 8244 errors, 30 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/WindowsGraphicsCaptureMethod.py:104:19 - error: Return type, \"Coroutine[Any, Any, Unknown | None]\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/WindowsGraphicsCaptureMethod.py:104:19 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:369:13 - error: Argument of type \"() -> None\" cannot be assigned to parameter \"callback\" of type \"_CallbackSigT@IntervalSchedule\" in function \"__init__\"\n+     Type \"() -> None\" cannot be assigned to type \"_CallbackSig\"\n+       Type \"() -> None\" cannot be assigned to type \"_CallbackSig\"\n+         Function return type \"None\" is incompatible with type \"Coroutine[Any, Any, None]\"\n+           Type \"None\" cannot be assigned to type \"Coroutine[Any, Any, None]\" (reportGeneralTypeIssues)\n- 2339 errors, 9642 warnings, 0 informations \n+ 2340 errors, 9642 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n-   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:278:49 - error: Function with declared type of \"Parser[Block[_A@sequence]]\" must return value on all code paths\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:278:49 - error: Function with declared return type \"Parser[Block[_A@sequence]]\" must return value on all code paths\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:52:14 - error: Function with declared type of \"(Any) -> DataType\" must return value on all code paths\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:52:14 - error: Function with declared return type \"(Any) -> DataType\" must return value on all code paths\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in an incorrect hover type (and inlay hint) for the inferred return type of an `async` function or method. This addresses #5639. (#5647)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621112bac254a19ac2906eb",
    "number": 5646,
    "body": "… for the inferred return type of an `async` function or method. This addresses #5639.",
    "head_branch": "issue5639",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/components.py:1246:9 - warning: Method \"execute_menu\" overrides class \"Component\" in an incompatible manner\n+     Base method is declared as a classmethod but override is not (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/components.py:1265:9 - warning: Method \"execute_slash\" overrides class \"Component\" in an incompatible manner\n+     Base method is declared as a classmethod but override is not (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/parsing.py:2239:9 - warning: Method \"parse\" overrides class \"MessageParser\" in an incompatible manner\n+     Base method is declared as a classmethod but override is not (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/schedules.py:406:44 - error: Could not bind method \"(unnamed)\" because \"type[IntervalSchedule[_CallbackSigT@IntervalSchedule]]\" is not assignable to parameter \"self\"\n+     Type \"type[Self@IntervalSchedule[_CallbackSigT@IntervalSchedule]]\" cannot be assigned to type \"Self@IntervalSchedule[_CallbackSigT@IntervalSchedule]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/schedules.py:1099:44 - error: Could not bind method \"(unnamed)\" because \"type[TimeSchedule[_CallbackSigT@TimeSchedule]]\" is not assignable to parameter \"self\"\n+     Type \"type[Self@TimeSchedule[_CallbackSigT@TimeSchedule]]\" cannot be assigned to type \"Self@TimeSchedule[_CallbackSigT@TimeSchedule]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/reloaders.py:499:47 - error: Could not bind method \"(unnamed)\" because \"type[HotReloader]\" is not assignable to parameter \"self\"\n+     Type \"type[Self@HotReloader]\" cannot be assigned to type \"Self@HotReloader\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:369:13 - error: Argument of type \"() -> None\" cannot be assigned to parameter \"callback\" of type \"_CallbackSigT@IntervalSchedule\" in function \"__init__\"\n+     Type \"() -> None\" cannot be assigned to type \"_CallbackSig\"\n+       Type \"() -> None\" cannot be assigned to type \"_CallbackSig\"\n+         Function return type \"None\" is incompatible with type \"Coroutine[Any, Any, None]\"\n+           Type \"None\" cannot be assigned to type \"Coroutine[Any, Any, None]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:456:28 - error: Could not bind method \"(unnamed)\" because \"type[IntervalSchedule[Any]]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[IntervalSchedule[Any]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:482:28 - error: Could not bind method \"(unnamed)\" because \"type[IntervalSchedule[Any]]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[IntervalSchedule[Any]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:1088:9 - error: Could not bind method \"(unnamed)\" because \"type[StubSchedule]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[TimeSchedule[_CallbackSigT@TimeSchedule]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:1088:18 - error: Could not bind method \"(unnamed)\" because \"type[StubSchedule]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[StubSchedule]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:1096:84 - error: Could not bind method \"(unnamed)\" because \"type[StubSchedule]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[StubSchedule]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:1097:18 - error: Could not bind method \"(unnamed)\" because \"type[StubSchedule]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[StubSchedule]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:1106:9 - error: Could not bind method \"(unnamed)\" because \"type[StubSchedule]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[TimeSchedule[_CallbackSigT@TimeSchedule]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:1106:18 - error: Could not bind method \"(unnamed)\" because \"type[StubSchedule]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[StubSchedule]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:1112:64 - error: Could not bind method \"(unnamed)\" because \"type[StubSchedule]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[StubSchedule]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tests/test_schedules.py:1113:18 - error: Could not bind method \"(unnamed)\" because \"type[StubSchedule]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[StubSchedule]\" (reportGeneralTypeIssues)\n- 2339 errors, 9642 warnings, 0 informations \n+ 2353 errors, 9645 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/WindowsGraphicsCaptureMethod.py:104:19 - error: Return type, \"Coroutine[Any, Any, Unknown | None]\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/WindowsGraphicsCaptureMethod.py:104:19 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:72:11 - error: Return type is unknown (reportUnknownParameterType)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:72:11 - error: Return type, \"Coroutine[Any, Any, Unknown]\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:302:19 - error: Return type of async generator function must be compatible with \"AsyncGenerator[Inventory[Item[Self@PartialUser], Self@PartialUser], Any]\"\n+     \"AsyncGenerator[Inventory[Item[Self@PartialUser], Self@PartialUser]]\" is incompatible with \"AsyncGenerator[Inventory[Item[UserT@UserInventoryInfo], UserT@UserInventoryInfo], None]\"\n+       Type parameter \"_YieldT_co@AsyncGenerator\" is covariant, but \"Inventory[Item[Self@PartialUser], Self@PartialUser]\" is not a subtype of \"Inventory[Item[UserT@UserInventoryInfo], UserT@UserInventoryInfo]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1181:32 - error: Could not bind method \"(unnamed)\" because \"type[ConnectionState]\" is not assignable to parameter \"self\"\n+     \"type[type]\" is incompatible with \"type[ConnectionState]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/steam/badge.py\n+   /tmp/mypy_primer/projects/steam.py/steam/badge.py:67:16 - error: Expression of type \"AppBadge[Self@PartialApp[NameT@PartialApp]]\" cannot be assigned to return type \"AppBadge[AppT@BaseBadge]\"\n+     \"AppBadge[Self@PartialApp[NameT@PartialApp]]\" is incompatible with \"AppBadge[AppT@BaseBadge]\"\n+       Type parameter \"AppT@AppBadge\" is covariant, but \"Self@PartialApp[NameT@PartialApp]\" is not a subtype of \"AppT@BaseBadge\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/badge.py:133:16 - error: Expression of type \"Item[Self@PartialUser]\" cannot be assigned to return type \"Item[UserT@BaseOwnedBadge]\"\n+     \"Item[Self@PartialUser]\" is incompatible with \"Item[UserT@BaseOwnedBadge]\"\n+       Type parameter \"OwnerT@Item\" is covariant, but \"Self@PartialUser\" is not a subtype of \"UserT@BaseOwnedBadge\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/steam.py/steam/channel.py\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:75:33 - error: Could not bind method \"(unnamed)\" because \"type[User]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[User]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:75:33 - error: Could not bind method \"(unnamed)\" because \"type[Friend]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[Friend]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/channel.py:86:9 - error: Method \"history\" overrides class \"Messageable\" in an incompatible manner\n+     Base method is declared as a classmethod but override is not (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/steam.py/steam/friend.py\n+   /tmp/mypy_primer/projects/steam.py/steam/friend.py:25:31 - error: Could not bind method \"profile_info\" because \"type[ClientUser]\" is not assignable to parameter \"self\"\n+     Type \"type[ClientUser]\" cannot be assigned to type \"ClientUser | Friend\"\n+       \"type[ABCMeta]\" is incompatible with \"type[ClientUser]\"\n+       \"type[ABCMeta]\" is incompatible with \"type[Friend]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/friend.py:28:16 - error: Argument of type \"EquippedProfileItems[Self@PartialUser]\" cannot be assigned to parameter \"equipped_items\" of type \"EquippedProfileItems[User]\" in function \"__init__\"\n+     \"EquippedProfileItems[Self@PartialUser]\" is incompatible with \"EquippedProfileItems[User]\"\n+       Type parameter \"UserT@EquippedProfileItems\" is covariant, but \"Self@PartialUser\" is not a subtype of \"User\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/friend.py:28:16 - error: Argument of type \"ProfileCustomisation[Self@PartialUser]\" cannot be assigned to parameter \"customisation_info\" of type \"ProfileCustomisation[User]\" in function \"__init__\"\n+     \"ProfileCustomisation[Self@PartialUser]\" is incompatible with \"ProfileCustomisation[User]\"\n+       Type parameter \"UserT@ProfileCustomisation\" is covariant, but \"Self@PartialUser\" is not a subtype of \"User\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:421:29 - error: Could not bind method \"(unnamed)\" because \"type[SteamWebSocket]\" is not assignable to parameter \"self\"\n+     Type \"type[Self@SteamWebSocket]\" cannot be assigned to type \"Self@SteamWebSocket\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:579:29 - error: Could not bind method \"(unnamed)\" because \"type[SteamWebSocket]\" is not assignable to parameter \"self\"\n+     Type \"type[Self@SteamWebSocket]\" cannot be assigned to type \"Self@SteamWebSocket\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/http.py:997:32 - error: Could not bind method \"profile_info\" because \"type[ClientUser]\" is not assignable to parameter \"self\"\n+     Type \"type[ClientUser]\" cannot be assigned to type \"ClientUser | Friend\"\n+       \"type[ABCMeta]\" is incompatible with \"type[ClientUser]\"\n+       \"type[ABCMeta]\" is incompatible with \"type[Friend]\" (reportGeneralTypeIssues)\n- /tmp/mypy_primer/projects/steam.py/steam/invite.py\n-   /tmp/mypy_primer/projects/steam.py/steam/invite.py:106:32 - error: Function with declared type of \"NoReturn\" cannot return \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/models.py:192:20 - error: Could not bind method \"(unnamed)\" because \"type[_IOMixin]\" is not assignable to parameter \"self\"\n+     Type \"type[Self@_IOMixin]\" cannot be assigned to type \"Self@_IOMixin\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/models.py:192:37 - error: Could not bind method \"(unnamed)\" because \"type[_IOMixin]\" is not assignable to parameter \"self\"\n+     \"type[type]\" is incompatible with \"type[_IOMixin]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/models.py:206:25 - error: Could not bind method \"(unnamed)\" because \"type[_IOMixin]\" is not assignable to parameter \"self\"\n+     Type \"type[Self@_IOMixin]\" cannot be assigned to type \"Self@_IOMixin\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/models.py:222:25 - error: Could not bind method \"(unnamed)\" because \"type[_IOMixin]\" is not assignable to parameter \"self\"\n+     Type \"type[Self@_IOMixin]\" cannot be assigned to type \"Self@_IOMixin\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/profile.py:154:16 - error: Expression of type \"Item[Self@PartialUser]\" cannot be assigned to return type \"Item[UserT@ProfileItem]\"\n+     \"Item[Self@PartialUser]\" is incompatible with \"Item[UserT@ProfileItem]\"\n+       Type parameter \"OwnerT@Item\" is covariant, but \"Self@PartialUser\" is not a subtype of \"UserT@ProfileItem\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/profile.py:265:16 - error: Expression of type \"UserBadge[Self@PartialUser]\" cannot be assigned to return type \"UserBadge[UserT@ProfileShowcaseSlot]\"\n+     \"UserBadge[Self@PartialUser]\" is incompatible with \"UserBadge[UserT@ProfileShowcaseSlot]\"\n+       Type parameter \"UserT@UserBadge\" is covariant, but \"Self@PartialUser\" is not a subtype of \"UserT@ProfileShowcaseSlot\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/state.py:2674:25 - error: Could not bind method \"(unnamed)\" because \"type[ConnectionState]\" is not assignable to parameter \"self\"\n+     Type \"type[Self@ConnectionState]\" cannot be assigned to type \"Self@ConnectionState\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/user.py:386:22 - error: Could not bind method \"profile_info\" because \"type[ClientUser]\" is not assignable to parameter \"self\"\n+     Type \"type[Self@ClientUser]\" cannot be assigned to type \"ClientUser | Friend\"\n+       \"type[ABCMeta]\" is incompatible with \"type[ClientUser]\"\n+       \"type[ABCMeta]\" is incompatible with \"type[Friend]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/user.py:383:16 - error: Argument of type \"EquippedProfileItems[Self@PartialUser]\" cannot be assigned to parameter \"equipped_items\" of type \"EquippedProfileItems[ClientUser]\" in function \"__init__\"\n+     \"EquippedProfileItems[Self@PartialUser]\" is incompatible with \"EquippedProfileItems[ClientUser]\"\n+       Type parameter \"UserT@EquippedProfileItems\" is covariant, but \"Self@PartialUser\" is not a subtype of \"ClientUser\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/user.py:383:16 - error: Argument of type \"ProfileCustomisation[Self@PartialUser]\" cannot be assigned to parameter \"customisation_info\" of type \"ProfileCustomisation[ClientUser]\" in function \"__init__\"\n+     \"ProfileCustomisation[Self@PartialUser]\" is incompatible with \"ProfileCustomisation[ClientUser]\"\n+       Type parameter \"UserT@ProfileCustomisation\" is covariant, but \"Self@PartialUser\" is not a subtype of \"ClientUser\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/backpack.py:413:23 - error: Could not bind method \"rename_to\" because \"type[BackpackItem[ClientUser]]\" is not assignable to parameter \"self\"\n+     \"type[ABCMeta]\" is incompatible with \"type[BackpackItem[ClientUser]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/state.py:155:29 - error: Could not bind method \"(unnamed)\" because \"type[GCState]\" is not assignable to parameter \"self\"\n+     \"type[type]\" is incompatible with \"type[ConnectionState]\" (reportGeneralTypeIssues)\n- 8245 errors, 30 warnings, 0 informations \n+ 8269 errors, 30 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:52:14 - error: Function with declared type of \"(Any) -> DataType\" must return value on all code paths\n+   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:52:14 - error: Function with declared return type \"(Any) -> DataType\" must return value on all code paths\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/channel.py\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:399:16 - error: Expression of type \"Self@GuildChannel\" cannot be assigned to return type \"TextChannel\"\n+     \"GuildChannel\" is incompatible with \"TextChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:1348:16 - error: Expression of type \"Self@GuildChannel\" cannot be assigned to return type \"VoiceChannel\"\n+     \"GuildChannel\" is incompatible with \"VoiceChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:1587:16 - error: Expression of type \"Self@GuildChannel\" cannot be assigned to return type \"StageChannel\"\n+     \"GuildChannel\" is incompatible with \"StageChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:1856:16 - error: Expression of type \"Self@GuildChannel\" cannot be assigned to return type \"CategoryChannel\"\n+     \"GuildChannel\" is incompatible with \"CategoryChannel\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:2373:16 - error: Expression of type \"Self@GuildChannel\" cannot be assigned to return type \"ForumChannel\"\n+     \"GuildChannel\" is incompatible with \"ForumChannel\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/converter.py:1239:62 - warning: Unnecessary \"# type: ignore\" comment\n- 37 errors, 10 warnings, 0 informations \n+ 42 errors, 11 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/py36/test_wrapping.py:110:10 - error: Argument of type \"(self: AsyncIteratorByteStream) -> AsyncGenerator[Unknown, Any]\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/py36/test_wrapping.py:110:10 - error: Argument of type \"() -> AsyncGenerator[Unknown, Any]\" cannot be assigned to parameter \"f\" of type \"FunctionType\" in function \"wrap\"\n\nExpression (https://github.com/cognitedata/Expression)\n-   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:278:49 - error: Function with declared type of \"Parser[Block[_A@sequence]]\" must return value on all code paths\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:278:49 - error: Function with declared return type \"Parser[Block[_A@sequence]]\" must return value on all code paths\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621112cac254a19ac2906ec",
    "number": 5644,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4648\r\n\r\nThe user is consuming Python libraries that are distributed in `.jar` files. Python's zip import feature supports any zip file regardless of file extension. We currently only support `.zip` and `.egg`.\r\n\r\nThis adds support for `.jar` files. It would be nice to support any extension, but `readdirEntriesSync` appears to be using the file extension check to avoid calling `yarnFS.isZip` on every file and I'm concerned about the perf implications of removing that check. We can reconsider in the future if users request support for a wider variety of extensions.",
    "head_branch": "pylance4648",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.38x faster (66.1s -> 48.0s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Support zip imports from `.jar` files (#5644)\n\n* Support zip imports from .jar extensions\r\n\r\n* Remove extra line\r\n\r\n* Remove OrEgg from ZipOrEgg functions\r\n\r\n---------\r\n\r\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621112dac254a19ac2906ed",
    "number": 5637,
    "body": "…ectional type inference with a non-generic protocol. This addresses https://github.com/microsoft/pyright/issues/5635.",
    "head_branch": "issue5635",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a type evaluation error when using bidirectional type inference with a non-generic protocol. This addresses https://github.com/microsoft/pyright/issues/5635. (#5637)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621112eac254a19ac2906ee",
    "number": 5634,
    "body": "rollup of the following changes:\n    1. Extracted out `pyTest` hover parts https://github.com/microsoft/pyrx/pull/3954\n    2. Move out pyTest inlay from extension. https://github.com/microsoft/pyrx/pull/3952\n    3. moved pyTest code actions out https://github.com/microsoft/pyrx/pull/3941\n    4. pylance loc update 20230801.1 https://github.com/microsoft/pyrx/pull/3943\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.320",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.320 (#5634)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621112fac254a19ac2906ef",
    "number": 5627,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4528\n\nApply some extra filtering to import suggestions when py.typed is available.",
    "head_branch": "rchiodo/fix_private_completions",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.27x faster (87.4s -> 68.7s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Filter import suggestions when py.typed is available (#5627)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211130ac254a19ac2906f0",
    "number": 5623,
    "body": "…ariable within an inner scope (function or lambda) is imported from another module using an import statement that comes after the function or lambda. This addresses https://github.com/microsoft/pyright/issues/5618.",
    "head_branch": "issue5618",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive error when a captured variable within an inner scope (function or lambda) is imported from another module using an import statement that comes after the function or lambda. This addresses https://github.com/microsoft/pyright/issues/5618. (#5623)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211130ac254a19ac2906f1",
    "number": 5617,
    "body": "… base classes that are combined using multiple inheritance implement the same method in an incompatible way. The bug caused the check to be skipped if the child class also implemented the same method as the two base classes. This addresses https://github.com/python/mypy/issues/15790.",
    "head_branch": "multi-inher1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/message.py:176:7 - warning: Base classes for class \"MessageCommand\" define method \"copy\" in incompatible way\n+     Parameter \"parent\" is missing in override\n+       \"PartialCommand[_ContextT@PartialCommand]\" is incompatible with \"MessageCommand[_MessageCallbackSigT@MessageCommand]\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:907:7 - warning: Base classes for class \"BaseSlashCommand\" define method \"copy\" in incompatible way\n+     Parameter \"parent\" is missing in override\n+       \"PartialCommand[_ContextT@PartialCommand]\" is incompatible with \"BaseSlashCommand\" (reportIncompatibleMethodOverride)\n- 2339 errors, 9642 warnings, 0 informations \n+ 2339 errors, 9644 warnings, 0 informations \n\n```",
      "I think it was premature to call this a bug. A subclass defined in this way is replaceably usable with each parent class.",
      "AB here is usable as a drop in replacement for both A and B\r\n\r\n```py\r\nclass ParamA:\r\n    ...\r\n\r\nclass ParamB:\r\n    ...\r\n\r\nclass ParamAB(ParamA, ParamB):\r\n    ...\r\n\r\nclass A:\r\n    def foo(self, x: ParamA) -> ParamA:\r\n        ...\r\n\r\nclass B:\r\n    def foo(self, x: ParamB) -> ParamB:\r\n        ...\r\n\r\nclass AB(A, B):\r\n    @overload\r\n    def foo(self, x: ParamA) -> ParamA:\r\n        ...\r\n\r\n    @overload\r\n    def foo(self, x: ParamB) -> ParamB:\r\n        ...\r\n\r\n    def foo(self, x):\r\n        if isinstance(x, ParamA):\r\n            if isinstance(x, ParamB):\r\n                raise RuntimeError(\"Ambiguous use\")\r\n            return ParamA()\r\n        else:\r\n            return ParamB()\r\n```\r\n\r\n",
      "There is disucssion about the soundness of this and the need for `Not` as well to correctly express the actual type which has come up in the intersections pep discussions\r\n\r\nAs-is, this is an LSP issue, and also shows a need for `Not` to correctly express this without LSP violation.",
      "Copying the relevant comment portion: (note & for Intersection, ~ for Not)\r\n\r\na more expressive overload set for AB.foo would be\r\n\r\n(overload) (ParamA & ParamB) -> Never\r\n(overload) (ParamA & ~ParamB) -> ParamA\r\n(overload) (ParamB & ~ParamA) -> ParamB\r\n\r\nBut if someone had an implementation that was\r\n\r\n(overload) (ParamA & ParamB) -> ParamA & ParamB\r\n(overload) (ParamA & ~ParamB) -> ParamA\r\n(overload) (ParamB & ~ParamA) -> ParamB\r\n\r\nit would also be valid.\r\n\r\nAs we don't currently have a way to express this, this should not be treated as incorrect, as it is possible to implement both of the behaviors the overload sets express."
    ],
    "commit_messages": [
      "Fixed a bug that led to a false negative when determining whether two base classes that are combined using multiple inheritance implement the same method in an incompatible way. The bug caused the check to be skipped if the child class also implemented the same method as the two base classes. This addresses https://github.com/python/mypy/issues/15790. (#5617)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211131ac254a19ac2906f2",
    "number": 5615,
    "body": null,
    "head_branch": "callableReturn",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2082:9 - warning: Method \"with_client_callback\" overrides class \"Client\" in an incompatible manner\n+     Return type mismatch: base method returns type \"(_MetaEventSigT@with_client_callback) -> _MetaEventSigT@with_client_callback\", override returns type \"(_MetaEventSigT@with_client_callback) -> _MetaEventSigT@with_client_callback\"\n+       Type \"(_MetaEventSigT@with_client_callback) -> _MetaEventSigT@with_client_callback\" cannot be assigned to type \"(_MetaEventSigT@with_client_callback) -> _MetaEventSigT@with_client_callback\"\n+         Parameter 1: type \"_MetaEventSigT@with_client_callback\" cannot be assigned to type \"_MetaEventSigT@with_client_callback\"\n+           Type \"_MetaEventSigT@with_client_callback\" cannot be assigned to type \"_MetaEventSigT@with_client_callback\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2128:9 - warning: Method \"with_listener\" overrides class \"Client\" in an incompatible manner\n+     Return type mismatch: base method returns type \"(_ListenerCallbackSigT@with_listener) -> _ListenerCallbackSigT@with_listener\", override returns type \"(_ListenerCallbackSigT@with_listener) -> _ListenerCallbackSigT@with_listener\"\n+       Type \"(_ListenerCallbackSigT@with_listener) -> _ListenerCallbackSigT@with_listener\" cannot be assigned to type \"(_ListenerCallbackSigT@with_listener) -> _ListenerCallbackSigT@with_listener\"\n+         Parameter 1: type \"_ListenerCallbackSigT@with_listener\" cannot be assigned to type \"_ListenerCallbackSigT@with_listener\"\n+           Type \"_ListenerCallbackSigT@with_listener\" cannot be assigned to type \"_ListenerCallbackSigT@with_listener\" (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/components.py:899:9 - warning: Method \"with_menu_command\" overrides class \"Component\" in an incompatible manner\n+     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/components.py:937:9 - warning: Method \"with_slash_command\" overrides class \"Component\" in an incompatible manner\n+     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/components.py:985:9 - warning: Method \"with_message_command\" overrides class \"Component\" in an incompatible manner\n+     Overload 1 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/components.py:1020:9 - warning: Method \"with_listener\" overrides class \"Component\" in an incompatible manner\n+     Return type mismatch: base method returns type \"(_ListenerCallbackSigT@with_listener) -> _ListenerCallbackSigT@with_listener\", override returns type \"(_ListenerCallbackSigT@with_listener) -> _ListenerCallbackSigT@with_listener\"\n+       Type \"(_ListenerCallbackSigT@with_listener) -> _ListenerCallbackSigT@with_listener\" cannot be assigned to type \"(_ListenerCallbackSigT@with_listener) -> _ListenerCallbackSigT@with_listener\"\n+         Parameter 1: type \"_ListenerCallbackSigT@with_listener\" cannot be assigned to type \"_ListenerCallbackSigT@with_listener\"\n+           Type \"_ListenerCallbackSigT@with_listener\" cannot be assigned to type \"_ListenerCallbackSigT@with_listener\" (reportIncompatibleMethodOverride)\n- 2339 errors, 9642 warnings, 0 informations \n+ 2339 errors, 9648 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211132ac254a19ac2906f3",
    "number": 5609,
    "body": "…e type derives from `NotImplementedError` is not inferred to return `NoReturn`. Previously, only `NotImplementedError` was exempted, not subclasses. This addresses https://github.com/microsoft/pyright/issues/5608.",
    "head_branch": "issue5608",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Modified type inference logic so methods that raise an exception whose type derives from `NotImplementedError` is not inferred to return `NoReturn`. Previously, only `NotImplementedError` was exempted, not subclasses. This addresses https://github.com/microsoft/pyright/issues/5608. (#5609)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211133ac254a19ac2906f4",
    "number": 5606,
    "body": "… no longer be specializable. This addresses https://github.com/microsoft/pyright/issues/5579.",
    "head_branch": "issue5579",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a regression that caused class decorators of generic classes to no longer be specializable. This addresses https://github.com/microsoft/pyright/issues/5579. (#5606)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211134ac254a19ac2906f5",
    "number": 5605,
    "body": "…ods based on feedback. Previously, if a metaclass `__call__` method was present, pyright assumed that `__new__` and `__init__` may not be called, so it ignored them. The new heuristic assumes that if the metaclass `__call__` returns a type that is consistent with the expected return type of `type.__call__` that it is probably mirroring the behavior of `type.__call__` and calling the class' `__new__` and `__init__` methods. This addresses https://github.com/microsoft/pyright/issues/5586.",
    "head_branch": "issue5586",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:647:63 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/id.py:360:30 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:151:59 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:197:63 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/protobufs/msg.py:204:61 - error: Expected 0 positional arguments (reportGeneralTypeIssues)\n- 8189 errors, 31 warnings, 0 informations \n+ 8194 errors, 31 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n- /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:127:65 - error: Cannot access member \"interface\" for type \"object\"\n-     Member \"interface\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:127:54 - error: Type of \"interface\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:127:54 - error: Type of \"interface\" is partially unknown\n-     Type of \"interface\" is \"Unknown | object\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:127:31 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"__key\" in function \"__getitem__\"\n-     Argument type is \"Unknown | object\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:134:38 - error: Cannot access member \"constraints\" for type \"object\"\n-     Member \"constraints\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:134:27 - error: Type of \"constraints\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:134:27 - error: Type of \"constraints\" is partially unknown\n-     Type of \"constraints\" is \"Unknown | Sequence[Constraint[Any]]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_provider.py:134:27 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"constraints\" in function \"match\"\n-     Argument type is \"Unknown | Sequence[Constraint[Any]]\" (reportUnknownArgumentType)\n- 4272 errors, 76 warnings, 0 informations \n+ 4264 errors, 76 warnings, 0 informations \n\n```",
      "@Gobot1234, this change affects the `steam.py` code base. You'll need to modify your `EnumType` metaclass to prevent these type checking errors with the next release of pyright (1.1.320). \r\n\r\nCurrently, you're lying to pyright about the presence of a custom `__call__` method. If you move this outside of the `not TYPE_CHECKING` block, the errors go away.\r\n\r\n```python\r\nclass EnumType(_EnumMeta if TYPE_CHECKING else type):\r\n    ...\r\n    if not TYPE_CHECKING:\r\n        def __call__(cls, value: Any) -> Enum:\r\n            ...\r\n```",
      "Would there be a way to keep the special enum casing for it though where it returns the instance of the enum? Cause as is this is done so that calling Result (an enum defined in that file) returns an instance of Result rather than an arbitrary instance of Enum",
      "Yes, that's possible with pyright's updated heuristics.",
      "What should I change the code to look like to get that behaviour?",
      "@erictraut `_EnumMeta` here should have a custom `__call__` method synthesised by pyright as this is inheriting from the stdlib's `enum.EnumType` which has a custom `__call__` which returns an instance of the current type (which isn't currently annotate-able)",
      "I assume you're talking about `enum.EnumMeta`? There has never been a need to synthesize a `__call__` in the past for this stdlib class. Doing so would require a significant justification. Why do you think this is necessary?\r\n\r\nCould you provide a minimal code sequence that demonstrates the behavior that you would like to see?\r\n\r\nPyright's current heuristics should restore the previous type evaluation behavior — and make it consistent with the behavior seen with other type checkers.",
      "Currently if you normally inherit from Enum you get this behaviour which is correct\r\n<img width=\"293\" alt=\"image\" src=\"https://github.com/microsoft/pyright/assets/50501825/4b8c8a1d-a5a7-458e-88ae-037d76149a43\">\r\nHowever this caused a regression for my Enum class which should look like a subclass of Enum and an instance of a subclass of EnumMeta/EnumType (it got renamed in 3.12) \r\n<img width=\"899\" alt=\"image\" src=\"https://github.com/microsoft/pyright/assets/50501825/cfd9deb4-1b90-4bfc-8f30-296313ab5c0d\">\r\n",
      "Could you provide a minimal code sequence that demonstrates the behavior that you would like to see? I'd prefer not to debug from partial screen shots.",
      "```py\r\nimport enum\r\nfrom typing import Self\r\n\r\n\r\nclass EnumType_(enum.EnumMeta):\r\n    ...\r\n\r\n\r\nclass Enum_(enum.Enum, metaclass=EnumType):\r\n    def __new__(cls, value: object, extra: object) -> Self:\r\n        ...\r\n\r\n\r\nclass Colours(enum.Enum):\r\n    RED = 1\r\n    BLUE = 2\r\n\r\n\r\nColours(1)  # fine\r\n\r\n\r\nclass MyColours(Enum_):\r\n    RED = 1\r\n    BLUE = 2\r\n\r\nMyColours(1)  # not fine\r\n```\r\nThis is what the example looks like to the type checker, this doesn't work at runtime but I'd like to keep this as small as possible",
      "Am I correct in assuming that `EnumType` implements a custom `__call__` method that injects the argument for the `extra` parameter in `Enum.__new__`?\r\n\r\nThe code above doesn't type check in mypy either (as I would expect). Have you come up with any solution that works with mypy?",
      "The way that python handles `type.__call__` vs `object.__new__` meant that `Enum_.__new__` is never called as it is shadowed by `EnumType_.__new__` (which is `enum.EnumMeta` to the type checker *) at runtime which was meant to perform a dictionary lookup that returns the member with the same value as passed \r\nsee: https://github.com/Gobot1234/steam.py/blob/a634e54f21607815bc869245ade72af348d95428/steam/enums.py#L144-L148 which, as a blackbox does the same thing as `enum.Enum`\r\n\r\n\\* If you want to know why this is useful, removing the if not TYPE_CHECKING guard\r\n```py\r\nclass MyEnum(Enum):\r\n    RED = 1\r\n\r\nreveal_type(MyEnum(1))  # type is Enum, not MyEnum which it is/was with if not TYPE_CHECKING\r\n```",
      "You're doing something pretty unusual here. Pyright isn't going to \"synthesize an `__init__` method\" specifically for your library or your use case, so that's not an option. Clearly you're going to need to use some hackery if you want this to work with static type checkers.\r\n\r\nYou didn't answer my question about mypy. Have you found a way to make it work there?",
      "I haven't managed to make this work with mypy, I don't really use mypy with my codebase as it doesn't support a fair few features that I use regularly. \r\n\r\nI agree what I'm doing does seem unusual but I would have expected that pyright, when resolving a call expression would check for the `type.__call__` method all the way through the MRO, and if it wasn't `type.__call__` to use that (`enum.EnumMeta`s `__call__`) and then if it is `type.__call__` to then go to my custom `Enum`'s `__new__` method",
      "If this is for a public library, then I would think that it's important for it to work with other type checkers. If it's for a private code base, then you have much more freedom for workarounds — including, for example, not relying on a pseudo constructor call to access an enum element. Why not simply implement a class method that allows you to access an enum member by value?\r\n\r\nThere's no way for a type checker to know whether a custom metadata `__call__` will do the \"normal thing\" and call through to `__new__` or do something completely different. Pyright's current heuristics work with the vast majority of libraries. Yours is the only one that I've seen so far. Any defensible (principled) change to the heuristic that would make this work for your use case would break many other libraries, so that wouldn't make sense.",
      "> Why not simply implement a class method that allows you to access an enum member by value?\r\n\r\nI was originally just following the enum spec so implemented the same interface.\r\n\r\n> There's no way for a type checker to know whether a custom metadata `__call__` will do the \"normal thing\" and call through to `__new__` or do something completely different. Pyright's current heuristics work with the vast majority of libraries. Yours is the only one that I've seen so far. Any defensible (principled) change to the heuristic that would make this work for your use case would break many other libraries, so that wouldn't make sense.\r\n\r\nThanks for explaining and totally understood. I've figured out a way around this by just sticking the `__new__` in an `if not TYPE_CHECKING` block to further improve the hackiness of my code :wink:.\r\n"
    ],
    "commit_messages": [
      "Updated heuristics for how to handle custom metaclass `__call__` methods based on feedback. Previously, if a metaclass `__call__` method was present, pyright assumed that `__new__` and `__init__` may not be called, so it ignored them. The new heuristic assumes that if the metaclass `__call__` returns a type that is consistent with the expected return type of `type.__call__` that it is probably mirroring the behavior of `type.__call__` and calling the class' `__new__` and `__init__` methods. This addresses https://github.com/microsoft/pyright/issues/5586. (#5605)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211135ac254a19ac2906f6",
    "number": 5603,
    "body": "…th an experimental variant of `TypeGuard` that applies strict semantics if certain conditions are met. This addresses #5601.",
    "head_branch": "issue5601",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Removed support for experimental `StrictTypeGuard` and replaced it with an experimental variant of `TypeGuard` that applies strict semantics if certain conditions are met. This addresses #5601. (#5603)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211136ac254a19ac2906f7",
    "number": 5602,
    "body": null,
    "head_branch": "issue5601-onbydefault",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:145:59 - error: Cannot access member \"namespace\" for type \"type*\"\n-     Member \"namespace\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/patch.py:145:74 - error: Cannot access member \"name\" for type \"type*\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1124:48 - error: Cannot access member \"name\" for type \"type\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1122:45 - error: Cannot access member \"name\" for type \"type\"\n-     Member \"name\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1219:74 - error: Cannot access member \"virtual\" for type \"type\"\n-     Member \"virtual\" is unknown (reportGeneralTypeIssues)\n- 3752 errors, 49 warnings, 0 informations \n+ 3747 errors, 49 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/utils.py:780:60 - warning: Unnecessary \"# type: ignore\" comment\n- 8189 errors, 31 warnings, 0 informations \n+ 8189 errors, 32 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:394:38 - error: Argument type is unknown\n-     Argument corresponds to parameter \"img\" in function \"imwrite\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:848:57 - error: Argument type is unknown\n-     Argument corresponds to parameter \"image\" in function \"set_preview_image\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:915:41 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:919:36 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"cvtColor\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:922:13 - error: Type of \"capture\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:922:13 - error: Type of \"capture\" is partially unknown\n+     Type of \"capture\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:924:39 - error: \"data\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:144:63 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:150:13 - error: Argument type is unknown\n-     Argument corresponds to parameter \"source\" in function \"compare_l2_norm\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:144:38 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"resize\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:150:13 - error: Argument type is unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:150:13 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"_\" in function \"compare_dummy\" (reportUnknownArgumentType)\n+     Argument corresponds to parameter \"_\" in function \"compare_dummy\"\n+     Argument type is \"Unknown | None\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:51:36 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"countNonZero\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:76:31 - error: Argument type is unknown\n-     Argument corresponds to parameter \"src\" in function \"countNonZero\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:96:55 - error: Argument type is unknown\n-     Argument corresponds to parameter \"mask\" in function \"bitwise_and\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:97:58 - error: Argument type is unknown\n-     Argument corresponds to parameter \"mask\" in function \"bitwise_and\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:209:70 - error: Argument type is unknown\n-     Argument corresponds to parameter \"capture\" in function \"__test_alignment\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/VideoCaptureDeviceCaptureMethod.py:131:39 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/VideoCaptureDeviceCaptureMethod.py:132:39 - error: \"shape\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/VideoCaptureDeviceCaptureMethod.py:133:17 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n- 481 errors, 30 warnings, 7 informations \n+ 477 errors, 30 warnings, 7 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_dataclasses.py:260:22 - error: Cannot access member \"__dataclass_fields__\" for type \"type\"\n+     Member \"__dataclass_fields__\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_discriminated_union.py:309:38 - error: \"Never\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_discriminated_union.py:317:30 - error: \"Never\" is not iterable (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generics.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generics.py:203:20 - error: \"Never\" is not iterable (reportGeneralTypeIssues)\n- 68 errors, 0 warnings, 0 informations \n+ 72 errors, 0 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:182:21 - warning: Unnecessary \"cast\" call; type is already \"Any\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:184:17 - error: Type of \"impl\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:187:67 - error: Type of \"__wrapped__\" is unknown (reportUnknownMemberType)\n- 4272 errors, 76 warnings, 0 informations \n+ 4274 errors, 77 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:695:40 - error: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:696:53 - error: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:697:35 - error: Unnecessary \"# type: ignore\" comment\n+ /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:52:26 - error: Cannot access member \"__dataclass_fields__\" for type \"type\"\n+     Member \"__dataclass_fields__\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:52:22 - error: Type of \"__dataclass_fields__\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:52:13 - error: Type of \"_field\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:53:16 - error: Type of \"default_factory\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:53:57 - error: Type of \"default\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:56:20 - error: Type of \"default\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:56:20 - error: Return type is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:858:16 - error: Return type, \"((...) -> Any) | DataClass_ | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:852:16 - error: Return type, \"DataClass_ | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:860:13 - error: Unnecessary \"cast\" call; type is already \"(...) -> Any\" (reportUnnecessaryCast)\n- 176 errors, 0 warnings, 0 informations \n+ 187 errors, 0 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/engines/engine.py:199:20 - error: Expression of type \"type*\" cannot be assigned to return type \"type[_DataType@register_dtype]\"\n-     Type \"type*\" cannot be assigned to type \"type[_DataType@register_dtype]\" (reportGeneralTypeIssues)\n- 1123 errors, 10 warnings, 0 informations \n+ 1122 errors, 10 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:695:25 - warning: Unnecessary \"# type: ignore\" comment\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:783:39 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:787:41 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:795:35 - warning: Unnecessary \"# type: ignore\" comment\n- 37 errors, 10 warnings, 0 informations \n+ 37 errors, 14 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/_utils.py:161:37 - error: Cannot access member \"im_class\" for type \"MethodType\"\n-     Member \"im_class\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/debtcollector/_utils.py:161:37 - error: Cannot access member \"im_class\" for type \"FunctionType\"\n-     Member \"im_class\" is unknown (reportGeneralTypeIssues)\n- 8959 errors, 435 warnings, 0 informations \n+ 8957 errors, 435 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211137ac254a19ac2906f8",
    "number": 5591,
    "body": "…o assign a TypeVar `T` that has a bound of `type` to an expression `type[S]`. This addresses #5581.",
    "head_branch": "issue5581",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+ /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_value_conversion.py\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_value_conversion.py:42:78 - error: Unnecessary \"# type: ignore\" comment\n- 175 errors, 0 warnings, 0 informations \n+ 176 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive error when attempting to assign a TypeVar `T` that has a bound of `type` to an expression `type[S]`. This addresses #5581. (#5591)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211138ac254a19ac2906f9",
    "number": 5584,
    "body": "rollup of the following changes:\n    1. Fix auto parens on base classes https://github.com/microsoft/pyrx/pull/3921\n    2. made `npm install` to run `npm install` on all packages https://github.com/microsoft/pyrx/pull/3916\n    3. pylance loc update 20230724.1 https://github.com/microsoft/pyrx/pull/3914\n    4. Rework import errors to show more information https://github.com/microsoft/pyrx/pull/3911\n    5. Ignore errors from other workspaces when performing analysis https://github.com/microsoft/pyrx/pull/3910\n    6. make sure binding succeeded before adding to dependent files. https://github.com/microsoft/pyrx/pull/3909\n    7. move syncpack up to the last version that supports node 16 and added npm run install:all for pyright yml https://github.com/microsoft/pyrx/pull/3908\n    8. Updated lerna major version and remove code related to bootstrap since it is no longer supported. https://github.com/microsoft/pyrx/pull/3896\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.319",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.319 (#5584)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211139ac254a19ac2906fa",
    "number": 5578,
    "body": "…n conditional statements where the type is a union of `None` and one or more other types that implement a `__bool__` method (other than `bool` itself). This could indicate an error.",
    "head_branch": "issue5572",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:388:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/filesystem.py:939:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:346:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compiler.py:366:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/database.py:431:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/stage.py:925:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/license.py:166:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/license.py:189:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/container/images.py:107:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/operating_systems/cray_backend.py:83:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/util/spack_lock_wrapper.py:75:12 - error: Possible bug (reportGeneralTypeIssues)\n- 3752 errors, 49 warnings, 0 informations \n+ 3763 errors, 49 warnings, 0 informations \n\nalectryon (https://github.com/cpitclaudel/alectryon)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/docutils.py:580:12 - error: Possible bug (reportGeneralTypeIssues)\n- 14 errors, 37 warnings, 0 informations \n+ 15 errors, 37 warnings, 0 informations \n\nmkosi (https://github.com/systemd/mkosi)\n+ /tmp/mypy_primer/projects/mkosi/mkosi/run.py\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:172:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:172:27 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:229:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:229:27 - error: Possible bug (reportGeneralTypeIssues)\n- 3 errors, 0 warnings, 0 informations \n+ 7 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/abc.py:199:68 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/clan.py:334:44 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/client.py:1180:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/event.py:88:76 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/event.py:91:84 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/event.py:94:60 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/event.py:98:74 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/id.py:563:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/profile.py:324:63 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/profile.py:335:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:129:25 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:129:43 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:144:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:154:68 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:155:78 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:156:66 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:160:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:166:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/csgo/state.py:170:28 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/backpack.py:285:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/tf2/backpack.py:288:12 - error: Possible bug (reportGeneralTypeIssues)\n- 8189 errors, 31 warnings, 0 informations \n+ 8210 errors, 31 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:855:57 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:988:57 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1758:12 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/operator/ops/testing.py\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:2665:42 - error: Possible bug (reportGeneralTypeIssues)\n- 3 errors, 0 warnings, 0 informations \n+ 7 errors, 0 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:865:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/AutoSplit/src/hotkeys.py:89:12 - error: Possible bug (reportGeneralTypeIssues)\n- 481 errors, 30 warnings, 7 informations \n+ 483 errors, 30 warnings, 7 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:399:24 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:401:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:416:24 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:523:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:573:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:683:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:923:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:945:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:960:42 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:988:48 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1336:40 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1386:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1462:35 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1525:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1663:25 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1818:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1920:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1929:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/wallets.py:332:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/wallets.py:337:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/data/history/history_utils.py:228:57 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/data/history/history_utils.py:229:52 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/data/history/history_utils.py:242:69 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/data/history/history_utils.py:247:69 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/bybit.py:106:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange.py:1021:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange.py:1690:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange.py:1690:31 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange.py:1989:17 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange.py:1997:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange_utils.py:184:8 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange_utils.py:198:8 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/kraken.py:213:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/okx.py:69:18 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/RL/BaseReinforcementLearningModel.py:423:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/torch/PyTorchModelTrainer.py:114:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:421:55 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:441:21 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:804:42 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:805:43 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:1123:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/backtesting.py:1134:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/optimize/hyperopt_tools.py:281:40 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:274:33 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:275:31 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:385:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:513:68 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:515:68 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:543:70 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:552:64 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:558:54 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:559:60 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:567:44 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:569:42 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:609:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:848:33 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/freqtrade/freqtrade/plugins/pairlist/SpreadFilter.py\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/plugins/pairlist/SpreadFilter.py:70:63 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/plugins/pairlist/SpreadFilter.py:70:81 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/freqtrade/freqtrade/plugins/protections/iprotection.py\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/plugins/protections/iprotection.py:64:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/plugins/protections/iprotection.py:76:12 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/freqtrade/freqtrade/plugins/protections/low_profit_pairs.py\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/plugins/protections/low_profit_pairs.py:60:55 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/freqtrade/freqtrade/plugins/protections/stoploss_guard.py\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/plugins/protections/stoploss_guard.py:53:17 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:244:25 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:291:43 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:293:33 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:611:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:646:44 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:793:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:879:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:890:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:1034:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:1095:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/rpc.py:1202:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/telegram.py:877:49 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/telegram.py:1141:20 - error: Possible bug (reportGeneralTypeIssues)\n\n... (truncated 5 lines) ...\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/schedules.py:374:23 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/reloaders.py:579:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/reloaders.py:591:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/reloaders.py:612:16 - error: Possible bug (reportGeneralTypeIssues)\n- 2338 errors, 9635 warnings, 0 informations \n+ 2342 errors, 9635 warnings, 0 informations \n\npyinstrument (https://github.com/joerick/pyinstrument)\n+ /tmp/mypy_primer/projects/pyinstrument/pyinstrument/frame.py\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/frame.py:210:37 - error: Possible bug (reportGeneralTypeIssues)\n- 32 errors, 4 warnings, 0 informations \n+ 33 errors, 4 warnings, 0 informations \n\nspeedrun.com_global_scoreboard_webapp (https://github.com/Avasam/speedrun.com_global_scoreboard_webapp)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/api/core_api.py:30:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/api/global_scoreboard_api.py:64:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/api/tournament_scheduler_api.py:107:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/services/utils.py:168:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/services/utils.py:175:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/services/utils.py:189:12 - error: Possible bug (reportGeneralTypeIssues)\n- 29 errors, 8 warnings, 1 information \n+ 35 errors, 8 warnings, 1 information \n\nPyWinCtl (https://github.com/Kalmat/PyWinCtl)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_pywinctl_linux.py:57:8 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_xlibcontainer.py:691:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_xlibcontainer.py:3053:8 - error: Possible bug (reportGeneralTypeIssues)\n- 38 errors, 17 warnings, 3 informations \n+ 41 errors, 17 warnings, 3 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.34x faster (83.5s -> 62.4s)\n(Performance measurements are based on a single noisy sample)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/span.py:503:33 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:443:54 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:698:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:765:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:776:24 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:785:24 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/ddwaf/__init__.py:140:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/trace_utils.py:568:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/bottle/trace.py:85:26 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pytest/plugin.py:372:8 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/rq/__init__.py:175:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/debugging/_debugger.py:222:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/debug.py:140:74 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/encoding.py:76:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/encoding.py:147:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/recorder.py:378:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/metrics.py:119:49 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/metrics_namespaces.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/telemetry/metrics_namespaces.py:51:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/writer/writer.py:636:41 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/writer/writer.py:640:24 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/propagation/http.py:696:46 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/propagation/http.py:699:48 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:504:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2358:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2358:33 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2360:22 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2360:39 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:284:16 - error: Possible bug (reportGeneralTypeIssues)\n- 8829 errors, 427 warnings, 0 informations \n+ 8857 errors, 427 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:81:51 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:311:8 - error: Possible bug (reportGeneralTypeIssues)\n- 1123 errors, 10 warnings, 0 informations \n+ 1125 errors, 10 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/audit_logs.py:657:20 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/automod.py\n+   /tmp/mypy_primer/projects/discord.py/discord/automod.py:114:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/automod.py:116:14 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/automod.py:570:12 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/channel.py\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:287:66 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:1025:66 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/channel.py:2098:35 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:2402:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/client.py:2402:35 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/components.py\n+   /tmp/mypy_primer/projects/discord.py/discord/components.py:498:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/components.py:501:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:416:54 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:418:20 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:471:24 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:514:91 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:696:32 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:942:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1291:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1302:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1312:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1384:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1386:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1530:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1732:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1736:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1738:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1775:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1778:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1781:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:1799:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/interactions.py:197:12 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/message.py\n+   /tmp/mypy_primer/projects/discord.py/discord/message.py:406:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/message.py:408:12 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/state.py\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:1586:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/state.py:1599:16 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/threads.py\n+   /tmp/mypy_primer/projects/discord.py/discord/threads.py:316:66 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/welcome_screen.py\n+   /tmp/mypy_primer/projects/discord.py/discord/welcome_screen.py:85:12 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py:112:16 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/models.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/models.py:264:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/models.py:267:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/models.py:323:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/models.py:349:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/models.py:393:16 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:375:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/transformers.py:375:20 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/tree.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/tree.py:1111:12 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py:189:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/bot.py:513:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:919:20 - error: Possible bug (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ui/view.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/view.py:235:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/view.py:424:16 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ui/view.py:433:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:116:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:313:12 - error: Possible bug (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:738:16 - error: Possible bug (reportGeneralTypeIssues)\n\n... (truncated 21 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621113aac254a19ac2906fb",
    "number": 5576,
    "body": "…d class is `type()` or a subtype thereof and the subject contains a `type[X]` whose metaclass potentially matches the pattern. This addresses https://github.com/microsoft/pyright/issues/5573.",
    "head_branch": "issue5573",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for type narrowing of a class pattern when the specified class is `type()` or a subtype thereof and the subject contains a `type[X]` whose metaclass potentially matches the pattern. This addresses https://github.com/microsoft/pyright/issues/5573. (#5576)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621113bac254a19ac2906fc",
    "number": 5567,
    "body": "… that accept a callable parameterized with a ParamSpec where the passed callable is generic. This addresses #5495.",
    "head_branch": "issue5495",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support within the constraint solver for higher-order functions that accept a callable parameterized with a ParamSpec where the passed callable is generic. This addresses #5495. (#5567)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621113cac254a19ac2906fd",
    "number": 5566,
    "body": "…igned type contains an `Any`. If the target's declared type does not contain `Any`, the assignment shouldn't produce an `Any` within the resulting type. This addresses #5413.",
    "head_branch": "issue5413-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:847:55 - error: Operator \"in\" not supported for types \"int\" and \"Iterable[ID64]\" (reportGeneralTypeIssues)\n- 8188 errors, 31 warnings, 0 informations \n+ 8189 errors, 31 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:2386:13 - warning: Type of \"user\" is partially unknown\n+     Type of \"user\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:992:9 - warning: Type of \"result\" is partially unknown\n+     Type of \"result\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1266:5 - warning: Type of \"channel_id\" is partially unknown\n+     Type of \"channel_id\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/conversion.py:1267:5 - warning: Type of \"message_id\" is partially unknown\n+     Type of \"message_id\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:3081:17 - warning: Type of \"member\" is partially unknown\n+     Type of \"member\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/context/autocomplete.py:84:9 - warning: Type of \"focused\" is partially unknown\n+     Type of \"focused\" is \"Unknown | None\" (reportUnknownVariableType)\n-     Type of \"flags\" is \"int | Unknown\" (reportUnknownVariableType)\n+     Type of \"flags\" is \"Unknown | int\" (reportUnknownVariableType)\n- 2386 errors, 9629 warnings, 0 informations \n+ 2386 errors, 9635 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:84:5 - error: Type of \"AboutWidget\" is partially unknown\n+     Type of \"AboutWidget\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:85:5 - error: Type of \"UpdateCheckerWidget\" is partially unknown\n+     Type of \"UpdateCheckerWidget\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:86:5 - error: Type of \"CheckForUpdatesThread\" is partially unknown\n+     Type of \"CheckForUpdatesThread\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:87:5 - error: Type of \"SettingsWidget\" is partially unknown\n+     Type of \"SettingsWidget\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:43:5 - error: Type of \"byte_array\" is partially unknown\n+     Type of \"byte_array\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:44:5 - error: Type of \"mask\" is partially unknown\n+     Type of \"mask\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/menu_bar.py:120:37 - error: \"start\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/BitBltCaptureMethod.py:41:9 - error: Type of \"image\" is partially unknown\n+     Type of \"image\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/VideoCaptureDeviceCaptureMethod.py:47:5 - error: Type of \"last_captured_frame\" is partially unknown\n+     Type of \"last_captured_frame\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/WindowsGraphicsCaptureMethod.py:41:5 - error: Type of \"frame_pool\" is partially unknown\n+     Type of \"frame_pool\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/WindowsGraphicsCaptureMethod.py:42:5 - error: Type of \"session\" is partially unknown\n+     Type of \"session\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/WindowsGraphicsCaptureMethod.py:44:5 - error: Type of \"last_captured_frame\" is partially unknown\n+     Type of \"last_captured_frame\" is \"Unknown | None\" (reportUnknownVariableType)\n- 469 errors, 30 warnings, 7 informations \n+ 481 errors, 30 warnings, 7 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py:98:5 - warning: Type of \"dtype\" is partially unknown\n+     Type of \"dtype\" is \"Unknown | None\" (reportUnknownVariableType)\n- 63 errors, 164 warnings, 0 informations \n+ 63 errors, 165 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_utils.py:336:26 - error: Expected type expression but received \"Any | None\"\n+     \"None\" is not a class (reportGeneralTypeIssues)\n- 174 errors, 0 warnings, 0 informations \n+ 175 errors, 0 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/file.py\n+   /tmp/mypy_primer/projects/discord.py/discord/file.py:114:59 - error: Argument of type \"str | None\" cannot be assigned to parameter \"filename\" of type \"str\" in function \"_strip_spoiler\"\n+     Type \"str | None\" cannot be assigned to type \"str\"\n+       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cog.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/cog.py:349:57 - warning: Unnecessary \"# type: ignore\" comment\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:464:106 - warning: Unnecessary \"# type: ignore\" comment\n- 36 errors, 8 warnings, 0 informations \n+ 37 errors, 10 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n-     Type of \"extra\" is \"Any | Unknown\" (reportUnknownVariableType)\n+     Type of \"extra\" is \"object | Unknown\" (reportUnknownVariableType)\n-     Argument type is \"Any | Unknown\" (reportUnknownArgumentType)\n+     Argument type is \"object | Unknown\" (reportUnknownArgumentType)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:696:46 - error: Argument of type \"str | Any | Unknown | None\" cannot be assigned to parameter \"__key\" of type \"str\" in function \"get\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/tracer.py:696:46 - error: Argument of type \"str | Unknown | None\" cannot be assigned to parameter \"__key\" of type \"str\" in function \"get\"\n-     Type \"str | Any | Unknown | None\" cannot be assigned to type \"str\"\n+     Type \"str | Unknown | None\" cannot be assigned to type \"str\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/asyncpg/patch.py:120:56 - error: \"query\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/graphql/patch.py:257:39 - error: Cannot access member \"middlewares\" for type \"Iterable[Unknown]\"\n+     Member \"middlewares\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/writer/writer.py:287:28 - error: \"request\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/writer/writer.py:293:55 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"conn\" of type \"HTTPConnection\" in function \"get_connection_response\"\n+     Type \"Unknown | None\" cannot be assigned to type \"HTTPConnection\"\n+       Type \"None\" cannot be assigned to type \"HTTPConnection\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_processors.py:530:12 - error: Operator \"<=\" not supported for \"None\" (reportOptionalOperand)\n- 8416 errors, 420 warnings, 0 informations \n+ 8419 errors, 420 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Modified the heuristics used for narrowing on assignment when the assigned type contains an `Any`. If the target's declared type does not contain `Any`, the assignment shouldn't produce an `Any` within the resulting type. This addresses #5413. (#5566)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621113dac254a19ac2906fe",
    "number": 5565,
    "body": "…ustion) under certain circumstances where a function returns a generic `Callable` whose type parameters are not used in the input parameters for the function. This addresses #5540.",
    "head_branch": "issue5540",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a hang and eventual crash (due to memory exhaustion) under certain circumstances where a function returns a generic `Callable` whose type parameters are not used in the input parameters for the function. This addresses #5540. (#5565)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621113eac254a19ac2906ff",
    "number": 5563,
    "body": null,
    "head_branch": "typeshed1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/array.py:210:6 - error: Argument of type \"(cls: TArraySchemaBase@_pydantic_validate, schema: Any) -> TArraySchemaBase@_pydantic_validate\" cannot be assigned to parameter \"__f\" of type \"(type[_T@classmethod], **_P@classmethod) -> _R_co@classmethod\" in function \"__init__\"\n+     Type \"(cls: TArraySchemaBase@_pydantic_validate, schema: Any) -> TArraySchemaBase@_pydantic_validate\" cannot be assigned to type \"(type[_T@classmethod], **_P@classmethod) -> _R_co@classmethod\"\n+       Parameter 1: type \"type[_T@classmethod]\" cannot be assigned to type \"TArraySchemaBase@_pydantic_validate\"\n+         Type \"type[_T@classmethod]\" cannot be assigned to type \"ArraySchema\"\n+           \"type*\" is incompatible with \"ArraySchema\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/column_schema.py:149:6 - error: Argument of type \"(cls: TColumnSchemaBase@_pydantic_validate, schema: Any) -> TColumnSchemaBase@_pydantic_validate\" cannot be assigned to parameter \"__f\" of type \"(type[_T@classmethod], **_P@classmethod) -> _R_co@classmethod\" in function \"__init__\"\n+     Type \"(cls: TColumnSchemaBase@_pydantic_validate, schema: Any) -> TColumnSchemaBase@_pydantic_validate\" cannot be assigned to type \"(type[_T@classmethod], **_P@classmethod) -> _R_co@classmethod\"\n+       Parameter 1: type \"type[_T@classmethod]\" cannot be assigned to type \"TColumnSchemaBase@_pydantic_validate\"\n+         Type \"type[_T@classmethod]\" cannot be assigned to type \"ColumnSchema\"\n+           \"type*\" is incompatible with \"ColumnSchema\" (reportGeneralTypeIssues)\n- 1121 errors, 10 warnings, 0 informations \n+ 1123 errors, 10 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/mzcompose.py:677:16 - error: Expression of type \"tuple[Namespace | None, list[str]]\" cannot be assigned to return type \"Tuple[Namespace, List[str]]\"\n+     Type \"Namespace | None\" cannot be assigned to type \"Namespace\"\n+       Type \"None\" cannot be assigned to type \"Namespace\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/mzcompose.py:688:16 - error: Expression of type \"tuple[Namespace | None, list[str]]\" cannot be assigned to return type \"Tuple[Namespace, List[str]]\"\n+     Type \"Namespace | None\" cannot be assigned to type \"Namespace\"\n+       Type \"None\" cannot be assigned to type \"Namespace\" (reportGeneralTypeIssues)\n- 218 errors, 58 warnings, 0 informations \n+ 220 errors, 58 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Updated typeshed stubs to the latest version. (#5563)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621113fac254a19ac290700",
    "number": 5562,
    "body": "…al type inference for a dictionary expression when the expected type is a protocol. This addresses #5552.",
    "head_branch": "issue5552",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.34x faster (77.7s -> 58.1s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive error when using bidirectional type inference for a dictionary expression when the expected type is a protocol. This addresses #5552. (#5562)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211140ac254a19ac290701",
    "number": 5560,
    "body": "…ping for the synthesized constructor in a named tuple.",
    "head_branch": "namedTupleWildcard",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Removed fragile hack that was previously added to handle type var scoping for the synthesized constructor in a named tuple. (#5560)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211141ac254a19ac290702",
    "number": 5558,
    "body": "…aluations. This addresses #5554.",
    "head_branch": "issue5554",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved robustness of handling of circular dependencies for class evaluations. This addresses #5554. (#5558)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211142ac254a19ac290703",
    "number": 5557,
    "body": "…able was used as a type argument in an annotation for an argument passed to a method that's bound to the same type variable. This addresses #5556.",
    "head_branch": "issue5556",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.31x faster (66.1s -> 50.5s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive when a constrained type variable was used as a type argument in an annotation for an argument passed to a method that's bound to the same type variable. This addresses #5556. (#5557)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211143ac254a19ac290704",
    "number": 5551,
    "body": "…iable is captured by an inner scope. The new behavior correctly identifies unbound (or potentially unbound) variables in cases where the captured variable is narrowed. This happens when there are no assignments to the variable after it is captured. This addresses #5548.\r\n\r\nFixed a bug in type narrowing for captured variables. Captured variables that are modified in other scopes using a `nonlocal` or `global` binding should be ineligible for type narrowing.",
    "head_branch": "issue5548",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:351:42 - error: \"fcntl\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:351:58 - error: \"termios\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:187:29 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[_T@sorted]\" in function \"sorted\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"Iterable[Unknown]\"\n+       \"__iter__\" is not present (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:215:43 - error: \"items\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1411:64 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"suppress_warnings\" of type \"bool\" in function \"verify\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"bool\"\n+       \"syaml_dict\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1770:80 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"suppress_warnings\" of type \"bool\" in function \"verify\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"bool\"\n+       \"syaml_dict\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:274:27 - error: Argument of type \"Unknown | syaml_dict | Any\" cannot be assigned to parameter \"value\" of type \"str\" in function \"set\"\n+     Type \"Unknown | syaml_dict | Any\" cannot be assigned to type \"str\"\n+       \"syaml_dict\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:570:26 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"__arg2\" of type \"SupportsRichComparisonT@min\" in function \"min\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"SupportsRichComparison\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:953:19 - error: \"exe_deps\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:735:51 - error: Operator \"in\" not supported for types \"Literal['build-group']\" and \"Unknown | syaml_dict | Any | None\"\n+     Operator \"in\" not supported for types \"Literal['build-group']\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/mirror.py:299:63 - error: \"items\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/repo.py:1250:42 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/report.py:107:28 - error: \"name_fmt\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/stage.py:198:29 - error: \"values\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/tengine.py:79:68 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"iterables\" of type \"Iterable[_T@chain]\" in function \"__init__\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"Iterable[str]\"\n+       \"__iter__\" is not present (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/bootstrap/config.py:119:17 - error: \"pop\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/bootstrap/core.py:354:20 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:297:25 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/bootstrap.py:242:27 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/bootstrap.py:251:34 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/bootstrap.py:264:27 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/bootstrap.py:266:37 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/bootstrap.py:352:15 - error: Operator \"+\" not supported for types \"list[dict[str, Unknown]]\" and \"Unknown | syaml_dict | Any | list[Any]\"\n+     Operator \"+\" not supported for types \"list[dict[str, Unknown]]\" and \"syaml_dict\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:293:8 - error: Operator \"in\" not supported for types \"Literal['build-group']\" and \"Unknown | syaml_dict | Any | None\"\n+     Operator \"in\" not supported for types \"Literal['build-group']\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:327:8 - error: Operator \"in\" not supported for types \"Literal['temporary-storage-url-prefix']\" and \"Unknown | syaml_dict | Any | None\"\n+     Operator \"in\" not supported for types \"Literal['temporary-storage-url-prefix']\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:328:35 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:332:8 - error: Operator \"in\" not supported for types \"Literal['enable-artifacts-buildcache']\" and \"Unknown | syaml_dict | Any | None\"\n+     Operator \"in\" not supported for types \"Literal['enable-artifacts-buildcache']\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:333:35 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:499:12 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:572:12 - error: Operator \"in\" not supported for types \"Literal['broken-specs-url']\" and \"Unknown | syaml_dict | Any | None\"\n+     Operator \"in\" not supported for types \"Literal['broken-specs-url']\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:573:32 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:594:9 - error: Operator \"in\" not supported for types \"Literal['broken-tests-packages']\" and \"Unknown | syaml_dict | Any | None\"\n+     Operator \"in\" not supported for types \"Literal['broken-tests-packages']\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:595:30 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:671:42 - error: Operator \"in\" not supported for types \"Literal['broken-specs-url']\" and \"Unknown | syaml_dict | Any | None\"\n+     Operator \"in\" not supported for types \"Literal['broken-specs-url']\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/ci.py:672:32 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/graph.py:89:33 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"debug\" of type \"bool\" in function \"graph_ascii\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"bool\"\n+       \"syaml_dict\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/graph.py:92:33 - error: Argument of type \"Unknown | syaml_dict | Any | None\" cannot be assigned to parameter \"debug\" of type \"bool\" in function \"graph_ascii\"\n+     Type \"Unknown | syaml_dict | Any | None\" cannot be assigned to type \"bool\"\n+       \"syaml_dict\" is incompatible with \"bool\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/mirror.py:226:33 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/mirror.py:249:9 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+ /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/repo.py\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/repo.py:111:11 - error: Cannot access member \"insert\" for type \"syaml_dict\"\n+     Member \"insert\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/repo.py:123:22 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/repo.py:126:19 - error: \"remove\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/repo.py:126:19 - error: Cannot access member \"remove\" for type \"syaml_dict\"\n+     Member \"remove\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/repo.py:132:17 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/repo.py:136:23 - error: \"remove\" is not a known member of \"None\" (reportOptionalMemberAccess)\n\n... (truncated 68 lines) ...\n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:200:36 - error: \"ps\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/extensions.py:208:35 - error: \"ps\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:95:22 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:95:31 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:120:22 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:120:53 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:122:13 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:126:22 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:129:15 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:131:15 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:236:16 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:239:13 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:241:18 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:241:34 - error: \"npst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:243:16 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:292:38 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:328:16 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:330:9 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:337:9 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:346:6 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:349:9 - error: \"hypothesis\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:351:13 - error: \"hypothesis\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:424:12 - error: \"npst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:450:49 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:615:28 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:654:16 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:679:16 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:704:16 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:726:16 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:750:16 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:765:12 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:858:9 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:861:19 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:921:12 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:955:16 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1106:21 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1107:25 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1143:28 - error: \"st\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1150:20 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1156:19 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1235:16 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/strategies/pandas_strategies.py:1237:15 - error: \"pdst\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/pandera/typing/modin.py:21:26 - error: \"modin\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pydantic.py:56:24 - error: \"ValidationError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pydantic.py:62:24 - error: \"ValidationError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pydantic.py:87:24 - error: \"ValidationError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pydantic.py:90:24 - error: \"ValidationError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pydantic.py:123:24 - error: \"ValidationError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pydantic.py:140:24 - error: \"ValidationError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pydantic.py:143:24 - error: \"ValidationError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pydantic.py:161:24 - error: \"ValidationError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pydantic.py:164:24 - error: \"ValidationError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/core/test_pydantic.py:167:24 - error: \"ValidationError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/hypotheses/test_hypotheses.py:47:22 - error: \"stats\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/hypotheses/test_hypotheses.py:56:22 - error: \"stats\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/hypotheses/test_hypotheses.py:78:22 - error: \"stats\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/hypotheses/test_hypotheses.py:127:30 - error: \"stats\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/hypotheses/test_hypotheses.py:163:30 - error: \"stats\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/hypotheses/test_hypotheses.py:207:30 - error: \"stats\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:601:24 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:612:16 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:638:24 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:651:9 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:654:9 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:659:5 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:664:9 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:701:14 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:739:18 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:741:28 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:760:18 - error: \"io\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:762:28 - error: \"io\" is possibly unbound (reportUnboundVariable)\n\n... (truncated 11 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.31x faster (51.7s -> 39.6s)\n(Performance measurements are based on a single noisy sample)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/ddwaf/__init__.py:178:16 - error: \"ddwaf_get_version\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/bootstrap/sitecustomize.py:87:13 - error: \"_unloaded_modules\" is possibly unbound (reportUnboundVariable)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/commands/ddtrace_run.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/commands/ddtrace_run.py:144:12 - error: \"PermissionError\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aiobotocore/patch.py:168:77 - error: \"ClientResponseContentProxy\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/grpc/patch.py:213:20 - error: \"create_aio_client_interceptors\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/grpc/patch.py:248:19 - error: \"create_aio_server_interceptor\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/psycopg/patch.py:121:55 - error: \"patched_connect_async_factory\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/psycopg/patch.py:147:59 - error: \"_original_connect\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/psycopg/patch.py:148:64 - error: \"_original_async_connect\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/psycopg/patch.py:177:33 - error: \"Psycopg3FetchTracedAsyncCursor\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/psycopg/patch.py:177:92 - error: \"Psycopg3TracedAsyncCursor\" is possibly unbound (reportUnboundVariable)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:54:24 - error: Cannot access member \"start\" for type \"None\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:54:24 - error: \"start\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-     Member \"start\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:59:24 - error: Cannot access member \"stop\" for type \"None\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:59:24 - error: \"stop\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-     Member \"stop\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:61:24 - error: Cannot access member \"_collector\" for type \"None\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:61:24 - error: \"_collector\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-     Member \"_collector\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:62:24 - error: Cannot access member \"_collector\" for type \"None\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:62:24 - error: \"_collector\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-     Member \"_collector\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/_asyncio.py:58:25 - error: \"clear_threads\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/_asyncio.py:61:29 - error: \"link_object\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/_asyncio.py:58:25 - error: Cannot access member \"clear_threads\" for type \"None\"\n-     Member \"clear_threads\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/_asyncio.py:61:29 - error: Cannot access member \"link_object\" for type \"None\"\n-     Member \"link_object\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_path_traversal.py:25:5 - error: \"pt_open\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_path_traversal.py:26:19 - error: \"core\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_path_traversal.py:26:33 - error: \"IAST\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_path_traversal.py:27:57 - error: \"VULN_PATH_TRAVERSAL\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:19:5 - error: \"taint_tracking_setup\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:20:5 - error: \"oce\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:25:28 - error: \"taint_ranges_as_evidence_info\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:33:18 - error: \"Source\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:33:46 - error: \"OriginType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:34:20 - error: \"taint_pyobject\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:34:100 - error: \"OriginType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:35:28 - error: \"taint_ranges_as_evidence_info\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:43:18 - error: \"Source\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:43:46 - error: \"OriginType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:45:20 - error: \"taint_pyobject\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:45:100 - error: \"OriginType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:46:26 - error: \"add_aspect\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:48:28 - error: \"taint_ranges_as_evidence_info\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:56:18 - error: \"Source\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:56:46 - error: \"OriginType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:58:20 - error: \"taint_pyobject\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:58:100 - error: \"OriginType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:59:26 - error: \"add_aspect\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:61:28 - error: \"taint_ranges_as_evidence_info\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:69:18 - error: \"Source\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:69:46 - error: \"OriginType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:71:20 - error: \"taint_pyobject\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:71:100 - error: \"OriginType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:72:26 - error: \"add_aspect\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:72:51 - error: \"add_aspect\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:74:28 - error: \"taint_ranges_as_evidence_info\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:83:19 - error: \"Source\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:83:48 - error: \"OriginType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:84:19 - error: \"Source\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:84:48 - error: \"OriginType\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/appsec/iast/test_taint_tracking.py:86:21 - error: \"taint_pyobject\" is possibly unbound (reportUnboundVariable)\n\n... (truncated 121 lines) ...\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n\n... (truncated 6 lines) ...```"
    ],
    "commit_messages": [
      "Fixed an inconsistency in reporting of unbound variables when the variable is captured by an inner scope. The new behavior correctly identifies unbound (or potentially unbound) variables in cases where the captured variable is narrowed. This happens when there are no assignments to the variable after it is captured. This addresses #5548. (#5551)\n\nFixed a bug in type narrowing for captured variables. Captured variables that are modified in other scopes using a `nonlocal` or `global` binding should be ineligible for type narrowing.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211144ac254a19ac290705",
    "number": 5549,
    "body": "…in a type annotation. This addresses https://github.com/microsoft/pyright/issues/5546.",
    "head_branch": "issue5546",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added detection and reporting of illegal use of `type[Callable]` within a type annotation. This addresses https://github.com/microsoft/pyright/issues/5546. (#5549)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211145ac254a19ac290706",
    "number": 5547,
    "body": "…ble subexpression evaluates to a union, and the callable subtypes have different signatures. Pyright was previously caching the types from the first subtype, so it didn't re-evaluate using the second subtype (which may require bidirectional type inference). This addresses #5428.",
    "head_branch": "issue5428",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/versions.py:101:49 - error: Argument of type \"VersionList | ClosedOpenRange | StandardVersion | GitVersion\" cannot be assigned to parameter \"other\" of type \"ClosedOpenRange | ConcreteVersion\" in function \"intersection\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/versions.py:101:49 - error: Argument of type \"VersionList | ClosedOpenRange | StandardVersion | GitVersion\" cannot be assigned to parameter \"other\" of type \"ClosedOpenRange | ConcreteVersion\" in function \"intersection\" (reportGeneralTypeIssues)\n-     Type \"VersionList | ClosedOpenRange | StandardVersion | GitVersion\" cannot be assigned to type \"VersionList\"\n-       \"ClosedOpenRange\" is incompatible with \"VersionList\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/versions.py:101:49 - error: Argument of type \"VersionList | ClosedOpenRange | StandardVersion | GitVersion\" cannot be assigned to parameter \"other\" of type \"ClosedOpenRange | StandardVersion\" in function \"intersection\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/versions.py:101:49 - error: Argument of type \"VersionList | ClosedOpenRange | StandardVersion | GitVersion\" cannot be assigned to parameter \"other\" of type \"ClosedOpenRange | StandardVersion\" in function \"intersection\" (reportGeneralTypeIssues)\n-     Type \"VersionList | ClosedOpenRange | StandardVersion | GitVersion\" cannot be assigned to type \"VersionList\"\n-       \"ClosedOpenRange\" is incompatible with \"VersionList\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/versions.py:106:42 - error: Argument of type \"VersionList | ClosedOpenRange | StandardVersion | GitVersion\" cannot be assigned to parameter \"other\" of type \"ClosedOpenRange | StandardVersion\" in function \"union\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/versions.py:106:42 - error: Argument of type \"VersionList | ClosedOpenRange | StandardVersion | GitVersion\" cannot be assigned to parameter \"other\" of type \"ClosedOpenRange | StandardVersion\" in function \"union\" (reportGeneralTypeIssues)\n-     Type \"VersionList | ClosedOpenRange | StandardVersion | GitVersion\" cannot be assigned to type \"VersionList\"\n-       \"ClosedOpenRange\" is incompatible with \"VersionList\" (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-     Type \"IPv4Network | IPv6Network\" cannot be assigned to type \"IPv4Network\"\n+     Type \"IPv4Network | IPv6Network\" cannot be assigned to type \"IPv6Network\"\n-       \"IPv6Network\" is incompatible with \"IPv4Network\" (reportGeneralTypeIssues)\n+       \"IPv4Network\" is incompatible with \"IPv6Network\" (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Fixed an issue in type evaluation of call expressions where the callable subexpression evaluates to a union, and the callable subtypes have different signatures. Pyright was previously caching the types from the first subtype, so it didn't re-evaluate using the second subtype (which may require bidirectional type inference). This addresses #5428. (#5547)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211145ac254a19ac290707",
    "number": 5544,
    "body": "…here `C` is a class). This addresses #5490.",
    "head_branch": "issue5490-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for the `X is C` and `X is not C` type guard pattern (where `C` is a class). This addresses #5490. (#5544)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211146ac254a19ac290708",
    "number": 5543,
    "body": "…here `C` is a class). This addresses #5490.",
    "head_branch": "issue5490",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:559:45 - error: Cannot access member \"__supertype__\" for type \"type[tuple[Unknown, ...]]\"\n+     Member \"__supertype__\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:603:43 - error: Argument of type \"Any | type[tuple[Unknown, ...]] | type\" cannot be assigned to parameter \"dataclass\" of type \"type[StandardDataclass]\" in function \"_dataclass_schema\"\n+     Type \"Any | type[tuple[Unknown, ...]] | type\" cannot be assigned to type \"type[StandardDataclass]\"\n+       \"tuple[Unknown, ...]\" is incompatible with protocol \"StandardDataclass\"\n+       Type \"type[tuple[Unknown, ...]]\" cannot be assigned to type \"type[StandardDataclass]\"\n+         \"__dataclass_fields__\" is not present\n+         \"__dataclass_params__\" is not present\n+         \"__post_init__\" is not present\n+           \"__init__\" is an incompatible type\n+             Type \"() -> None\" cannot be assigned to type \"(*args: object, **kwargs: object) -> None\" (reportGeneralTypeIssues)\n- 68 errors, 0 warnings, 0 informations \n+ 70 errors, 0 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:1156:34 - error: Expected type expression but received \"tuple[Any, ...]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:1156:20 - error: Union requires two or more type arguments\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:1156:34 - error: Type arguments for \"Literal\" must be None, a literal value (int, bool, str, or bytes), or an enum value\n- 35 errors, 9 warnings, 0 informations \n+ 38 errors, 9 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211147ac254a19ac290709",
    "number": 5542,
    "body": null,
    "head_branch": "pylance2023731",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Push pylance changes to pyright (#5542)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211148ac254a19ac29070a",
    "number": 5541,
    "body": "…s an overloaded function or method and there are no matches. Added some heuristics to pick the \"best\" overload function for the error message. Previously, pyright used the last overload, but this sometimes led to confusing errors. This addresses #5525.",
    "head_branch": "issue5525",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:266:21 - error: Argument of type \"Literal['@(?:@|\\\\.|([*_])?([a-zA-Z])?(?:{((?:[^}]|}})*)})?)']\" cannot be assigned to parameter \"pattern\" of type \"bytes | Pattern[bytes]\" in function \"sub\"\n-     Type \"Literal['@(?:@|\\\\.|([*_])?([a-zA-Z])?(?:{((?:[^}]|}})*)})?)']\" cannot be assigned to type \"bytes | Pattern[bytes]\"\n-       \"Literal['@(?:@|\\\\.|([*_])?([a-zA-Z])?(?:{((?:[^}]|}})*)})?)']\" is incompatible with \"bytes\"\n-       \"Literal['@(?:@|\\\\.|([*_])?([a-zA-Z])?(?:{((?:[^}]|}})*)})?)']\" is incompatible with \"Pattern[bytes]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/color.py:266:31 - error: Argument of type \"match_to_ansi\" cannot be assigned to parameter \"repl\" of type \"ReadableBuffer | ((Match[bytes]) -> ReadableBuffer)\" in function \"sub\"\n-     Type \"match_to_ansi\" cannot be assigned to type \"ReadableBuffer | ((Match[bytes]) -> ReadableBuffer)\"\n-       \"match_to_ansi\" is incompatible with protocol \"ReadableBuffer\"\n-         \"__buffer__\" is not present\n-       Type \"match_to_ansi\" cannot be assigned to type \"(Match[bytes]) -> ReadableBuffer\"\n-         Function return type \"str | Unknown\" is incompatible with type \"ReadableBuffer\"\n-           Type \"str | Unknown\" cannot be assigned to type \"ReadableBuffer\"\n-             \"str\" is incompatible with protocol \"ReadableBuffer\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1166:27 - error: Argument of type \"Literal['--jobserver-[^=]*=(\\\\d),(\\\\d)']\" cannot be assigned to parameter \"pattern\" of type \"bytes | Pattern[bytes]\" in function \"search\"\n-     Type \"Literal['--jobserver-[^=]*=(\\\\d),(\\\\d)']\" cannot be assigned to type \"bytes | Pattern[bytes]\"\n-       \"Literal['--jobserver-[^=]*=(\\\\d),(\\\\d)']\" is incompatible with \"bytes\"\n-       \"Literal['--jobserver-[^=]*=(\\\\d),(\\\\d)']\" is incompatible with \"Pattern[bytes]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1166:59 - error: Argument of type \"str | Literal[True]\" cannot be assigned to parameter \"string\" of type \"ReadableBuffer\" in function \"search\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_environment.py:1166:59 - error: Argument of type \"str | Literal[True]\" cannot be assigned to parameter \"string\" of type \"str\" in function \"search\"\n-     Type \"str | Literal[True]\" cannot be assigned to type \"ReadableBuffer\"\n+     Type \"str | Literal[True]\" cannot be assigned to type \"str\"\n+       \"Literal[True]\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       \"Literal[True]\" is incompatible with protocol \"ReadableBuffer\"\n-         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2403:35 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2403:35 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2403:52 - error: Argument of type \"Literal['share']\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"Literal['share']\" cannot be assigned to type \"BytesPath\"\n-       \"Literal['share']\" is incompatible with \"bytes\"\n-       \"Literal['share']\" is incompatible with protocol \"PathLike[bytes]\"\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:2403:71 - error: Argument of type \"Literal['src']\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"Literal['src']\" cannot be assigned to type \"BytesPath\"\n-       \"Literal['src']\" is incompatible with \"bytes\"\n-       \"Literal['src']\" is incompatible with protocol \"PathLike[bytes]\"\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1969:25 - error: Argument of type \"int\" cannot be assigned to parameter \"__key\" of type \"slice\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_base.py:1969:25 - error: Argument of type \"tuple[Any, Any, Any, Unknown]\" cannot be assigned to parameter \"__value\" of type \"FrameSummary\" in function \"__setitem__\"\n-     \"int\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+     \"tuple[Any, Any, Any, Unknown]\" is incompatible with \"FrameSummary\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:403:24 - error: Argument of type \"str\" cannot be assigned to parameter \"pattern\" of type \"bytes | Pattern[bytes]\" in function \"sub\"\n-     Type \"str\" cannot be assigned to type \"bytes | Pattern[bytes]\"\n-       \"str\" is incompatible with \"bytes\"\n-       \"str\" is incompatible with \"Pattern[bytes]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:403:87 - error: Argument of type \"Literal['\\\\1']\" cannot be assigned to parameter \"repl\" of type \"ReadableBuffer | ((Match[bytes]) -> ReadableBuffer)\" in function \"sub\"\n-     Type \"Literal['\\\\1']\" cannot be assigned to type \"ReadableBuffer | ((Match[bytes]) -> ReadableBuffer)\"\n-       \"Literal['\\\\1']\" is incompatible with protocol \"ReadableBuffer\"\n-         \"__buffer__\" is not present\n-       Type \"Literal['\\\\1']\" cannot be assigned to type \"(Match[bytes]) -> ReadableBuffer\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:403:94 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"string\" of type \"ReadableBuffer\" in function \"sub\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:403:94 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"string\" of type \"str\" in function \"sub\"\n-     Type \"Prefix | None\" cannot be assigned to type \"ReadableBuffer\"\n+     Type \"Prefix | None\" cannot be assigned to type \"str\"\n+       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n-       \"Prefix\" is incompatible with protocol \"ReadableBuffer\"\n-         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1210:38 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1210:38 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1210:46 - error: Argument of type \"Literal['nonrpm-db']\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"Literal['nonrpm-db']\" cannot be assigned to type \"BytesPath\"\n-       \"Literal['nonrpm-db']\" is incompatible with \"bytes\"\n-       \"Literal['nonrpm-db']\" is incompatible with protocol \"PathLike[bytes]\"\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1263:28 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1263:28 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/intel.py:1263:41 - error: Argument of type \"Literal['.spack']\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"Literal['.spack']\" cannot be assigned to type \"BytesPath\"\n-       \"Literal['.spack']\" is incompatible with \"bytes\"\n-       \"Literal['.spack']\" is incompatible with protocol \"PathLike[bytes]\"\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/msvc.py:83:45 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/msvc.py:83:45 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/compilers/msvc.py:83:71 - error: Argument of type \"Literal['setvars.bat']\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"Literal['setvars.bat']\" cannot be assigned to type \"BytesPath\"\n-       \"Literal['setvars.bat']\" is incompatible with \"bytes\"\n-       \"Literal['setvars.bat']\" is incompatible with protocol \"PathLike[bytes]\"\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/common.py:287:32 - error: Argument of type \"list[Unknown] | Unknown\" cannot be assigned to parameter \"__a\" of type \"BytesPath\" in function \"join\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/common.py:287:32 - error: Argument of type \"list[Unknown] | Unknown\" cannot be assigned to parameter \"__a\" of type \"StrPath\" in function \"join\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/common.py:287:42 - error: Argument of type \"Literal['bin']\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"Literal['bin']\" cannot be assigned to type \"BytesPath\"\n\n... (truncated 320 lines) ...\n\nalectryon (https://github.com/cpitclaudel/alectryon)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:277:35 - error: Argument of type \"Literal['^', b\"^\"]\" cannot be assigned to parameter \"pattern\" of type \"bytes | Pattern[bytes]\" in function \"finditer\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:277:35 - error: Argument of type \"Literal['^', b\"^\"]\" cannot be assigned to parameter \"pattern\" of type \"str | Pattern[str]\" in function \"finditer\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:277:40 - error: Argument of type \"str | Unknown\" cannot be assigned to parameter \"string\" of type \"ReadableBuffer\" in function \"finditer\"\n-     Type \"str | Unknown\" cannot be assigned to type \"ReadableBuffer\"\n-       \"str\" is incompatible with protocol \"ReadableBuffer\"\n-         \"__buffer__\" is not present (reportGeneralTypeIssues)\n- 14 errors, 37 warnings, 0 informations \n+ 13 errors, 37 warnings, 0 informations \n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n-   /tmp/mypy_primer/projects/koda-validate/tests/test_310_plus.py:132:14 - error: Argument of type \"type[Person]\" cannot be assigned to parameter \"into\" of type \"(T1@__init__, T2@__init__, T3@__init__, T4@__init__, T5@__init__, T6@__init__, T7@__init__, T8@__init__, T9@__init__, T10@__init__, T11@__init__, T12@__init__, T13@__init__, T14@__init__, T15@__init__, T16@__init__) -> Ret@RecordValidator\" in function \"__init__\"\n-     Type \"type[Person]\" cannot be assigned to type \"(str, Unknown, T3@__init__, T4@__init__, T5@__init__, T6@__init__, T7@__init__, T8@__init__, T9@__init__, T10@__init__, T11@__init__, T12@__init__, T13@__init__, T14@__init__, T15@__init__, T16@__init__) -> Person\"\n-       Function accepts too many positional parameters; expected 2 but received 16 (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/koda-validate/tests/test_310_plus.py:133:14 - error: Argument of type \"tuple[tuple[Literal['name'], StringValidator], tuple[Literal['age'], KeyNotRequired]]\" cannot be assigned to parameter \"keys\" of type \"Tuple[KeyValidator[T1@__init__], KeyValidator[T2@__init__], KeyValidator[T3@__init__], KeyValidator[T4@__init__], KeyValidator[T5@__init__], KeyValidator[T6@__init__], KeyValidator[T7@__init__], KeyValidator[T8@__init__], KeyValidator[T9@__init__], KeyValidator[T10@__init__], KeyValidator[T11@__init__], KeyValidator[T12@__init__], KeyValidator[T13@__init__], KeyValidator[T14@__init__], KeyValidator[T15@__init__], KeyValidator[T16@__init__]]\" in function \"__init__\"\n-     \"tuple[tuple[Literal['name'], StringValidator], tuple[Literal['age'], KeyNotRequired]]\" is incompatible with \"Tuple[KeyValidator[str], KeyValidator[Unknown], KeyValidator[T3@__init__], KeyValidator[T4@__init__], KeyValidator[T5@__init__], KeyValidator[T6@__init__], KeyValidator[T7@__init__], KeyValidator[T8@__init__], KeyValidator[T9@__init__], KeyValidator[T10@__init__], KeyValidator[T11@__init__], KeyValidator[T12@__init__], KeyValidator[T13@__init__], KeyValidator[T14@__init__], KeyValidator[T15@__init__], KeyValidator[T16@__init__]]\"\n-       Element size mismatch; expected 16 but received 2 (reportGeneralTypeIssues)\n- 172 errors, 5 warnings, 0 informations \n+ 170 errors, 5 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:1275:36 - error: Unnecessary \"# pyright: ignore\" rule: \"reportGeneralTypeIssues\"\n- 1243 errors, 0 warnings, 0 informations \n+ 1244 errors, 0 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:517:32 - error: Argument of type \"Literal['(\\\\d+): S_IFREG.*\\\\s*.*name:(.*)\\\\n']\" cannot be assigned to parameter \"pattern\" of type \"bytes | Pattern[bytes]\" in function \"findall\"\n-     Type \"Literal['(\\\\d+): S_IFREG.*\\\\s*.*name:(.*)\\\\n']\" cannot be assigned to type \"bytes | Pattern[bytes]\"\n-       \"Literal['(\\\\d+): S_IFREG.*\\\\s*.*name:(.*)\\\\n']\" is incompatible with \"bytes\"\n-       \"Literal['(\\\\d+): S_IFREG.*\\\\s*.*name:(.*)\\\\n']\" is incompatible with \"Pattern[bytes]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:517:69 - error: Argument of type \"str | bytes\" cannot be assigned to parameter \"string\" of type \"ReadableBuffer\" in function \"findall\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:517:69 - error: Argument of type \"str | bytes\" cannot be assigned to parameter \"string\" of type \"str\" in function \"findall\"\n-     Type \"str | bytes\" cannot be assigned to type \"ReadableBuffer\"\n+     Type \"str | bytes\" cannot be assigned to type \"str\"\n+       \"bytes\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-       \"str\" is incompatible with protocol \"ReadableBuffer\"\n-         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:212:26 - error: Argument of type \"Literal['File \".*/contrib/cherrypy/web.py\", line [0-9]+, in…']\" cannot be assigned to parameter \"pattern\" of type \"bytes | Pattern[bytes]\" in function \"search\"\n-     Type \"Literal['File \".*/contrib/cherrypy/web.py\", line [0-9]+, in…']\" cannot be assigned to type \"bytes | Pattern[bytes]\"\n-       \"Literal['File \".*/contrib/cherrypy/web.py\", line [0-9]+, in…']\" is incompatible with \"bytes\"\n-       \"Literal['File \".*/contrib/cherrypy/web.py\", line [0-9]+, in…']\" is incompatible with \"Pattern[bytes]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:212:86 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"string\" of type \"ReadableBuffer\" in function \"search\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/cherrypy/test_middleware.py:212:86 - error: Argument of type \"Text | None\" cannot be assigned to parameter \"string\" of type \"str\" in function \"search\"\n-     Type \"Text | None\" cannot be assigned to type \"ReadableBuffer\"\n+     Type \"Text | None\" cannot be assigned to type \"str\"\n+       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n-       \"Text\" is incompatible with protocol \"ReadableBuffer\"\n-         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/integration/test_debug.py:134:21 - error: Argument of type \"Literal['^Agent not reachable.*Connection refused']\" cannot be assigned to parameter \"pattern\" of type \"bytes | Pattern[bytes]\" in function \"match\"\n-     Type \"Literal['^Agent not reachable.*Connection refused']\" cannot be assigned to type \"bytes | Pattern[bytes]\"\n-       \"Literal['^Agent not reachable.*Connection refused']\" is incompatible with \"bytes\"\n-       \"Literal['^Agent not reachable.*Connection refused']\" is incompatible with \"Pattern[bytes]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/integration/test_debug.py:134:65 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"string\" of type \"ReadableBuffer\" in function \"match\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/integration/test_debug.py:134:65 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"string\" of type \"str\" in function \"match\"\n-     Type \"Any | None\" cannot be assigned to type \"ReadableBuffer\"\n+     Type \"Any | None\" cannot be assigned to type \"str\"\n+       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n-       \"__buffer__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/integration/test_debug.py:147:21 - error: Argument of type \"Literal['^Agent not reachable.*No such file or directory']\" cannot be assigned to parameter \"pattern\" of type \"bytes | Pattern[bytes]\" in function \"match\"\n-     Type \"Literal['^Agent not reachable.*No such file or directory']\" cannot be assigned to type \"bytes | Pattern[bytes]\"\n-       \"Literal['^Agent not reachable.*No such file or directory']\" is incompatible with \"bytes\"\n-       \"Literal['^Agent not reachable.*No such file or directory']\" is incompatible with \"Pattern[bytes]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/integration/test_debug.py:147:72 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"string\" of type \"ReadableBuffer\" in function \"match\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/integration/test_debug.py:147:72 - error: Argument of type \"Any | None\" cannot be assigned to parameter \"string\" of type \"str\" in function \"match\"\n-     Type \"Any | None\" cannot be assigned to type \"ReadableBuffer\"\n+     Type \"Any | None\" cannot be assigned to type \"str\"\n-       \"__buffer__\" is not present (reportGeneralTypeIssues)\n+       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n- 8217 errors, 418 warnings, 0 informations \n+ 8213 errors, 418 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved error messages for situations where a call expression targets an overloaded function or method and there are no matches. Added some heuristics to pick the \"best\" overload function for the error message. Previously, pyright used the last overload, but this sometimes led to confusing errors. This addresses #5525. (#5541)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211149ac254a19ac29070b",
    "number": 5536,
    "body": "…ibility between two unions in an invariant context. This addresses #5534.",
    "head_branch": "issue5534",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false negative when determining type compatibility between two unions in an invariant context. This addresses #5534. (#5536)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621114aac254a19ac29070c",
    "number": 5533,
    "body": "Bumps [word-wrap](https://github.com/jonschlinkert/word-wrap) from 1.2.3 to 1.2.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/jonschlinkert/word-wrap/releases\">word-wrap's releases</a>.</em></p>\n<blockquote>\n<h2>1.2.4</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Remove default indent by <a href=\"https://github.com/mohd-akram\"><code>@​mohd-akram</code></a> in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/24\">jonschlinkert/word-wrap#24</a></li>\n<li>🔒fix: CVE 2023 26115 (2) by <a href=\"https://github.com/OlafConijn\"><code>@​OlafConijn</code></a> in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/41\">jonschlinkert/word-wrap#41</a></li>\n<li>:lock: fix: CVE-2023-26115 by <a href=\"https://github.com/aashutoshrathi\"><code>@​aashutoshrathi</code></a> in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/33\">jonschlinkert/word-wrap#33</a></li>\n<li>chore: publish workflow by <a href=\"https://github.com/OlafConijn\"><code>@​OlafConijn</code></a> in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/42\">jonschlinkert/word-wrap#42</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/mohd-akram\"><code>@​mohd-akram</code></a> made their first contribution in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/24\">jonschlinkert/word-wrap#24</a></li>\n<li><a href=\"https://github.com/OlafConijn\"><code>@​OlafConijn</code></a> made their first contribution in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/41\">jonschlinkert/word-wrap#41</a></li>\n<li><a href=\"https://github.com/aashutoshrathi\"><code>@​aashutoshrathi</code></a> made their first contribution in <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/pull/33\">jonschlinkert/word-wrap#33</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/jonschlinkert/word-wrap/compare/1.2.3...1.2.4\">https://github.com/jonschlinkert/word-wrap/compare/1.2.3...1.2.4</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/f64b188c7261d26b99e1e2075d6b12f21798e83a\"><code>f64b188</code></a> run verb to generate README</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/03ea08256ba0c8e8b02b1b304f0f5bd2b1863207\"><code>03ea082</code></a> Merge pull request <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/issues/42\">#42</a> from jonschlinkert/chore/publish-workflow</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/420dce9a2412b21881202b73a3c34f0edc53cb2e\"><code>420dce9</code></a> Merge pull request <a href=\"https://redirect.github.com/jonschlinkert/word-wrap/issues/41\">#41</a> from jonschlinkert/fix/CVE-2023-26115-2</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/bfa694edf55bb84ff84512f13da6d68bf7593f06\"><code>bfa694e</code></a> Update .github/workflows/publish.yml</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/ace0b3c78f81aaf43040bab3bc91d3c5546d3fd2\"><code>ace0b3c</code></a> chore: bump version to 1.2.4</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/6fd727594676f3e1b196b08a320908bec2f4ca02\"><code>6fd7275</code></a> chore: add publish workflow</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/30d6daf60fce429f5f559252fa86ee78200652c4\"><code>30d6daf</code></a> chore: fix test</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/655929cabea6299dddf3b4a21fc3713fca701b48\"><code>655929c</code></a> chore: remove package-lock</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/49e08bbc32a84da5d79e6b7e0fa74ff6217f6d81\"><code>49e08bb</code></a> chore: added an additional testcase</li>\n<li><a href=\"https://github.com/jonschlinkert/word-wrap/commit/9f626935f3fac6ec0f3c4b26baea4eb9740d9645\"><code>9f62693</code></a> fix: cve 2023-26115</li>\n<li>Additional commits viewable in <a href=\"https://github.com/jonschlinkert/word-wrap/compare/1.2.3...1.2.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=word-wrap&package-manager=npm_and_yarn&previous-version=1.2.3&new-version=1.2.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/word-wrap-1.2.4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump word-wrap from 1.2.3 to 1.2.4 (#5533)\n\nBumps [word-wrap](https://github.com/jonschlinkert/word-wrap) from 1.2.3 to 1.2.4.\r\n- [Release notes](https://github.com/jonschlinkert/word-wrap/releases)\r\n- [Commits](https://github.com/jonschlinkert/word-wrap/compare/1.2.3...1.2.4)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: word-wrap\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621114bac254a19ac29070d",
    "number": 5532,
    "body": "…ype `type[Self]` was used as the base type for a member access expression that was then used to call an instance method on that class. This addresses #5530.",
    "head_branch": "issue5530",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/chat.py:205:32 - error: Argument of type \"GroupChannel | ClanChannel\" cannot be assigned to parameter \"channel\" of type \"Channel[Self@ChatMessage[AuthorT@ChatMessage, MemberT@ChatMessage]]\" in function \"__init__\"\n+     Type \"GroupChannel | ClanChannel\" cannot be assigned to type \"Channel[Self@ChatMessage[AuthorT@ChatMessage, MemberT@ChatMessage]]\"\n+       \"ClanChannel\" is incompatible with \"Channel[Self@ChatMessage[AuthorT@ChatMessage, MemberT@ChatMessage]]\"\n+         Type parameter \"MessageT@Channel\" is covariant, but \"ClanMessage[PartialMember | ClanMember]\" is not a subtype of \"Self@ChatMessage[AuthorT@ChatMessage, MemberT@ChatMessage]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/message.py:75:32 - error: Argument of type \"UserChannel\" cannot be assigned to parameter \"channel\" of type \"Channel[Self@UserMessage[UserMessageAuthorT@UserMessage]]\" in function \"__init__\"\n+     \"UserChannel\" is incompatible with \"Channel[Self@UserMessage[UserMessageAuthorT@UserMessage]]\"\n+       Type parameter \"MessageT@Channel\" is covariant, but \"UserMessage[User | Friend | ClientUser]\" is not a subtype of \"Self@UserMessage[UserMessageAuthorT@UserMessage]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/models.py:187:20 - error: Could not bind method \"(unnamed)\" because \"type[_IOMixin]\" is not assignable to parameter \"self\"\n-     Type \"type[Self@_IOMixin]\" cannot be assigned to type \"Self@_IOMixin\" (reportGeneralTypeIssues)\n- 8666 errors, 45 warnings, 0 informations \n+ 8667 errors, 45 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive when an expression of type `type[Self]` was used as the base type for a member access expression that was then used to call an instance method on that class. This addresses #5530. (#5532)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621114cac254a19ac29070e",
    "number": 5529,
    "body": "…nts` into subroutines so it is easier to maintain. Fixed a few small bugs that I discovered along the way.",
    "head_branch": "callRefactor2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/telegram.py:1108:67 - error: Argument of type \"list[Never]\" cannot be assigned to parameter \"buttons\" of type \"List[Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")]\" in function \"_layout_inline_keyboard_onecol\"\n-     \"list[Never]\" is incompatible with \"List[Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")]\"\n-       Type parameter \"_T@list\" is invariant, but \"Never\" is not the same as \"Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/telegram.py:1194:60 - error: Argument of type \"list[Never]\" cannot be assigned to parameter \"buttons\" of type \"List[Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")]\" in function \"_layout_inline_keyboard\"\n-     \"list[Never]\" is incompatible with \"List[Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")]\"\n-       Type parameter \"_T@list\" is invariant, but \"Never\" is not the same as \"Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")\" (reportGeneralTypeIssues)\n- 556 errors, 37 warnings, 0 informations \n+ 554 errors, 37 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/tornado/stack_context.py:63:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:324:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:326:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:328:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:516:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:552:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:559:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:561:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:563:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:567:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:584:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:586:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:588:15 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:662:31 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:664:31 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1519:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1521:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1524:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1629:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1631:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1633:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1868:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1870:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:2016:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:340:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:342:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:344:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:367:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:369:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psposix.py:68:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:353:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:355:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:357:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:361:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:460:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:622:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:624:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:559:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:565:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:709:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:735:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:796:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:833:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:880:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:916:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:937:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:998:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n- 8277 errors, 418 warnings, 0 informations \n+ 8230 errors, 418 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Further refactored the internal implementation of `validateCallArguments` into subroutines so it is easier to maintain. Fixed a few small bugs that I discovered along the way. (#5529)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621114dac254a19ac29070f",
    "number": 5528,
    "body": "…nts` into subroutines so it is easier to maintain. Fixed a few small bugs that I discovered along the way.",
    "head_branch": "callRefactor",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:409:23 - error: \"Never\" is not awaitable (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:411:23 - error: \"Never\" is not awaitable (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:413:19 - error: \"Never\" is not awaitable (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:418:23 - error: \"Never\" is not awaitable (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:420:23 - error: \"Never\" is not awaitable (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:422:19 - error: \"Never\" is not awaitable (reportGeneralTypeIssues)\n- 8666 errors, 45 warnings, 0 informations \n+ 8660 errors, 45 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/telegram.py:1108:67 - error: Argument of type \"list[Never]\" cannot be assigned to parameter \"buttons\" of type \"List[Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")]\" in function \"_layout_inline_keyboard_onecol\"\n-     \"list[Never]\" is incompatible with \"List[Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")]\"\n-       Type parameter \"_T@list\" is invariant, but \"Never\" is not the same as \"Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/telegram.py:1194:60 - error: Argument of type \"list[Never]\" cannot be assigned to parameter \"buttons\" of type \"List[Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")]\" in function \"_layout_inline_keyboard\"\n-     \"list[Never]\" is incompatible with \"List[Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")]\"\n-       Type parameter \"_T@list\" is invariant, but \"Never\" is not the same as \"Module(\"freqtrade.rpc.telegram.InlineKeyboardButton\")\" (reportGeneralTypeIssues)\n- 556 errors, 37 warnings, 0 informations \n+ 554 errors, 37 warnings, 0 informations \n\npyinstrument (https://github.com/joerick/pyinstrument)\n+ /tmp/mypy_primer/projects/pyinstrument/pyinstrument/frame.py\n+   /tmp/mypy_primer/projects/pyinstrument/pyinstrument/frame.py:166:74 - error: Argument type is unknown\n+     Argument corresponds to parameter \"__obj\" in function \"len\" (reportUnknownArgumentType)\n- 32 errors, 4 warnings, 0 informations \n+ 33 errors, 4 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/tornado/stack_context.py:63:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:324:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:326:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:328:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:516:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psaix.py:552:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:559:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:561:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:563:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:567:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:584:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:586:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:588:15 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:662:31 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:664:31 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1519:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1521:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1524:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1629:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1631:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1633:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1868:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1870:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:2016:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:340:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:342:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:344:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:367:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psosx.py:369:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psposix.py:68:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:353:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:355:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:357:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:361:27 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:460:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:622:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pssunos.py:624:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:559:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:565:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:709:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:735:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:796:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:833:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:880:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:916:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:937:23 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pswindows.py:998:19 - error: Invalid exception class or object\n-     \"Never\" does not derive from BaseException (reportGeneralTypeIssues)\n- 8277 errors, 418 warnings, 0 informations \n+ 8230 errors, 418 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621114eac254a19ac290710",
    "number": 5527,
    "body": "…ined with `typing.TypeAlias` and consisting of a single (naked) type variable.",
    "head_branch": "typeAlias1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.27x faster (67.7s -> 53.2s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect evaluation of a type alias defined with `typing.TypeAlias` and consisting of a single (naked) type variable. (#5527)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621114fac254a19ac290711",
    "number": 5523,
    "body": "…le\" error is generated. This occurs when a class overrides `__eq__` but does not supply a custom `__hash__` method. This addresses #5446.",
    "head_branch": "issue5446",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict)\n+   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:357:13 - error: Set entry must be hashable\n+     Type \"Bi\" is not hashable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:358:13 - error: Dictionary key must be hashable\n+     Type \"Bi\" is not hashable (reportGeneralTypeIssues)\n- 12 errors, 0 warnings, 0 informations \n+ 14 errors, 0 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:157:23 - error: Argument of type \"list[DataFrame]\" cannot be assigned to parameter \"objs\" of type \"Iterable[Series[Unknown]] | Mapping[HashableT1@concat, Series[Unknown]]\" in function \"concat\"\n+     \"DataFrame\" is incompatible with \"Series[Unknown]\"\n+     \"DataFrame\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:157:62 - error: Argument of type \"list[Timedelta]\" cannot be assigned to parameter \"names\" of type \"list[HashableT4@concat]\" in function \"concat\"\n+     Type \"Timedelta\" cannot be assigned to type \"Hashable\"\n+       \"Timedelta\" is incompatible with protocol \"Hashable\"\n+         \"__hash__\" is an incompatible type\n+           Type \"None\" cannot be assigned to type \"(self: Timedelta) -> int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:157:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:1601:13 - error: Dictionary key must be hashable\n+     Type \"Timestamp\" is not hashable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:1602:13 - error: Dictionary key must be hashable\n+     Type \"Timedelta\" is not hashable (reportGeneralTypeIssues)\n- 1243 errors, 0 warnings, 0 informations \n+ 1248 errors, 0 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/map.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/map.py:215:5 - error: \"__hash__\" overrides symbol of same name in class \"Mapping\"\n+     Type cannot be assigned to type \"None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/map.py:215:5 - error: Instance variable \"__hash__\" overrides class variable of same name in class \"Mapping\" (reportIncompatibleVariableOverride)\n- 278 errors, 0 warnings, 0 informations \n+ 280 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211150ac254a19ac290712",
    "number": 5520,
    "body": "…n. Added enforcement of these same rules for the first argument to a `cast` call. This addresses https://github.com/microsoft/pyright/issues/5429.",
    "head_branch": "issue5429",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py:225:28 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/transforms.py:225:28 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/docs_src/usage.py:191:34 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/docs_src/usage.py:191:34 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:104:56 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:104:56 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:110:52 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:110:52 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n\npydantic (https://github.com/samuelcolvin/pydantic)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:287:48 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:287:48 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:296:56 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:296:56 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:412:38 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:412:38 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:457:43 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:457:43 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:490:34 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:490:34 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:508:34 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:508:34 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1991:54 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1991:54 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1354:39 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1354:39 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1126:54 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1126:54 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1151:64 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1151:64 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1175:38 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1175:38 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1716:49 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1716:49 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1340:54 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1340:54 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1408:54 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:1408:54 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_metadata.py:43:32 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_core_metadata.py:43:32 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_discriminated_union.py:391:60 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_discriminated_union.py:391:60 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:186:22 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:186:22 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:752:45 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:752:45 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1034:39 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1034:39 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1254:49 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1254:49 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1429:34 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1429:34 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_schema_generation_shared.py:35:39 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_schema_generation_shared.py:35:39 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/key_value_store.py:31:23 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/key_value_store.py:31:23 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/pairlock.py:16:23 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/pairlock.py:16:23 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:1218:23 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:1218:23 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:42:23 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/persistence/trade_model.py:42:23 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:20 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:20 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:47 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:46:47 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:24 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:51 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:60:51 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:24 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:55 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:74:55 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:36 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:36 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:67 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:91:67 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:21 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:21 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:52 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:106:52 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:33 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:33 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:64 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:123:64 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:141:11 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:141:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:16 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:16 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:57 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:173:57 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:17 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:60 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:193:60 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:214:11 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:214:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:216:6 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:216:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:230:11 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:230:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:232:6 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:232:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:26 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:26 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:54 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:245:54 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:24 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:24 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:52 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:257:52 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:271:11 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:271:11 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:274:6 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:274:6 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:296:28 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/builtin_checks.py:296:28 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n\n... (truncated 171 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/context.py:113:32 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/context.py:113:32 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/context.py:119:27 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/context.py:119:27 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/span.py:406:32 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/span.py:406:32 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/span.py:444:44 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/span.py:444:44 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/module.py:148:35 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/module.py:148:35 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/module.py:157:18 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/module.py:157:18 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/module.py:404:72 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/module.py:404:72 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/module.py:374:47 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/module.py:374:47 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:102:14 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:102:14 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:91:14 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/ci_visibility/coverage.py:91:14 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/opentracer/span.py:168:44 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/opentracer/span.py:168:44 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/opentracer/span_context.py:18:51 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/opentracer/span_context.py:18:51 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:52:17 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:52:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:61:17 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:61:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:77:17 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:77:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:93:17 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:93:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:107:17 - error: Illegal type annotation: variable not allowed unless it is a type alias (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/profiling/exporter/pprof.pyi:107:17 - error: Variable not allowed in type expression (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Improved checks for illegal use of a variable within a type expression. Added enforcement of these same rules for the first argument to a `cast` call. This addresses https://github.com/microsoft/pyright/issues/5429. (#5520)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211151ac254a19ac290713",
    "number": 5519,
    "body": "…using bidirectional type inference for an assignment to a class-scoped variable where the annotated type is a descriptor. This addresses #5455.",
    "head_branch": "issue5455",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed recent regression that resulted in a false positive error when using bidirectional type inference for an assignment to a class-scoped variable where the annotated type is a descriptor. This addresses #5455. (#5519)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211152ac254a19ac290714",
    "number": 5518,
    "body": "…one` type to `object | None` in an invariant context. This same bug led to issues with the validation of TypeVar variance within a Protocol. This addresses https://github.com/microsoft/pylance-release/issues/4613.",
    "head_branch": "issue4613",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon)\n-   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:277:35 - error: Argument of type \"Literal['^', b\"^\"]\" cannot be assigned to parameter \"pattern\" of type \"bytes | Pattern[bytes]\" in function \"finditer\"\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:277:35 - error: Argument of type \"Literal['^', b\"^\"]\" cannot be assigned to parameter \"pattern\" of type \"bytes | Pattern[bytes]\" in function \"finditer\" (reportGeneralTypeIssues)\n-     Type \"Literal['^', b\"^\"]\" cannot be assigned to type \"bytes | Pattern[bytes]\"\n-       Type \"Literal['^']\" cannot be assigned to type \"bytes | Pattern[bytes]\"\n-         \"Literal['^']\" is incompatible with \"bytes\"\n-         \"Literal['^']\" is incompatible with \"Pattern[bytes]\" (reportGeneralTypeIssues)\n\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:354:17 - error: Argument of type \"TextIOWrapper | Unknown | None\" cannot be assigned to parameter \"__fd\" of type \"FileDescriptorLike\" in function \"lockf\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:354:17 - error: Argument of type \"TextIOWrapper | Unknown | None\" cannot be assigned to parameter \"__fd\" of type \"FileDescriptorLike\" in function \"lockf\" (reportGeneralTypeIssues)\n-     Type \"TextIOWrapper | Unknown | None\" cannot be assigned to type \"FileDescriptorLike\"\n-       Type \"None\" cannot be assigned to type \"FileDescriptorLike\"\n-         Type \"None\" cannot be assigned to type \"int\"\n-         \"fileno\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:433:21 - error: Argument of type \"TextIOWrapper | Unknown | None\" cannot be assigned to parameter \"__fd\" of type \"FileDescriptorLike\" in function \"lockf\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/lock.py:433:21 - error: Argument of type \"TextIOWrapper | Unknown | None\" cannot be assigned to parameter \"__fd\" of type \"FileDescriptorLike\" in function \"lockf\" (reportGeneralTypeIssues)\n-     Type \"TextIOWrapper | Unknown | None\" cannot be assigned to type \"FileDescriptorLike\"\n-       Type \"None\" cannot be assigned to type \"FileDescriptorLike\"\n-         Type \"None\" cannot be assigned to type \"int\"\n-         \"fileno\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1140:31 - error: Argument of type \"Unknown | str | None\" cannot be assigned to parameter \"path\" of type \"StrOrBytesPath\" in function \"__call__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1140:31 - error: Argument of type \"Unknown | str | None\" cannot be assigned to parameter \"path\" of type \"StrOrBytesPath\" in function \"__call__\" (reportGeneralTypeIssues)\n-     Type \"Unknown | str | None\" cannot be assigned to type \"StrOrBytesPath\"\n-       Type \"None\" cannot be assigned to type \"StrOrBytesPath\"\n-         Type \"None\" cannot be assigned to type \"str\"\n-         Type \"None\" cannot be assigned to type \"bytes\"\n-         \"__fspath__\" is not present\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1308:52 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"path\" of type \"StrPath\" in function \"relpath\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1308:52 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"path\" of type \"StrPath\" in function \"relpath\" (reportGeneralTypeIssues)\n-     Type \"Prefix | None\" cannot be assigned to type \"StrPath\"\n-       Type \"None\" cannot be assigned to type \"StrPath\"\n-         Type \"None\" cannot be assigned to type \"str\"\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2122:35 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"exists\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2122:35 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"exists\" (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"FileDescriptorOrPath\"\n-       Type \"None\" cannot be assigned to type \"FileDescriptorOrPath\"\n-         Type \"None\" cannot be assigned to type \"int\"\n-         Type \"None\" cannot be assigned to type \"str\"\n-         Type \"None\" cannot be assigned to type \"bytes\"\n-         \"__fspath__\" is not present\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2123:31 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"path\" of type \"StrOrBytesPath\" in function \"remove\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2123:31 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"path\" of type \"StrOrBytesPath\" in function \"remove\" (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"StrOrBytesPath\"\n-       Type \"None\" cannot be assigned to type \"StrOrBytesPath\"\n-         Type \"None\" cannot be assigned to type \"str\"\n-         Type \"None\" cannot be assigned to type \"bytes\"\n-         \"__fspath__\" is not present\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2124:39 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"exists\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2124:39 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"exists\" (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"FileDescriptorOrPath\"\n-       Type \"None\" cannot be assigned to type \"FileDescriptorOrPath\"\n-         Type \"None\" cannot be assigned to type \"int\"\n-         Type \"None\" cannot be assigned to type \"str\"\n-         Type \"None\" cannot be assigned to type \"bytes\"\n-         \"__fspath__\" is not present\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2202:27 - error: Argument of type \"Unknown | str | None\" cannot be assigned to parameter \"path\" of type \"StrOrBytesPath\" in function \"__call__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:2202:27 - error: Argument of type \"Unknown | str | None\" cannot be assigned to parameter \"path\" of type \"StrOrBytesPath\" in function \"__call__\" (reportGeneralTypeIssues)\n-     Type \"Unknown | str | None\" cannot be assigned to type \"StrOrBytesPath\"\n-       Type \"None\" cannot be assigned to type \"StrOrBytesPath\"\n-         Type \"None\" cannot be assigned to type \"str\"\n-         Type \"None\" cannot be assigned to type \"bytes\"\n-         \"__fspath__\" is not present\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:518:51 - error: Argument of type \"list[Unknown] | dict[Unknown, Unknown] | Any\" cannot be assigned to parameter \"mirrors_for_spec\" of type \"list[Unknown] | None\" in function \"_process_binary_cache_tarball\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:518:51 - error: Argument of type \"list[Unknown] | dict[Unknown, Unknown] | Any\" cannot be assigned to parameter \"mirrors_for_spec\" of type \"list[Unknown] | None\" in function \"_process_binary_cache_tarball\" (reportGeneralTypeIssues)\n-     Type \"list[Unknown] | dict[Unknown, Unknown] | Any\" cannot be assigned to type \"list[Unknown] | None\"\n-       Type \"dict[Unknown, Unknown]\" cannot be assigned to type \"list[Unknown] | None\"\n-         \"dict[Unknown, Unknown]\" is incompatible with \"list[Unknown]\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1362:30 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"s\" of type \"FileDescriptorOrPath\" in function \"isdir\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1362:30 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"s\" of type \"FileDescriptorOrPath\" in function \"isdir\" (reportGeneralTypeIssues)\n-     Type \"Prefix | None\" cannot be assigned to type \"FileDescriptorOrPath\"\n-       Type \"None\" cannot be assigned to type \"FileDescriptorOrPath\"\n-         Type \"None\" cannot be assigned to type \"int\"\n-         Type \"None\" cannot be assigned to type \"str\"\n-         Type \"None\" cannot be assigned to type \"bytes\"\n-         \"__fspath__\" is not present\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1848:31 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"exists\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1848:31 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"exists\" (reportGeneralTypeIssues)\n-     Type \"Prefix | None\" cannot be assigned to type \"FileDescriptorOrPath\"\n-       Type \"None\" cannot be assigned to type \"FileDescriptorOrPath\"\n-         Type \"None\" cannot be assigned to type \"int\"\n-         Type \"None\" cannot be assigned to type \"str\"\n-         Type \"None\" cannot be assigned to type \"bytes\"\n-         \"__fspath__\" is not present\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1861:28 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"stat\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/installer.py:1861:28 - error: Argument of type \"Prefix | None\" cannot be assigned to parameter \"path\" of type \"FileDescriptorOrPath\" in function \"stat\" (reportGeneralTypeIssues)\n-     Type \"Prefix | None\" cannot be assigned to type \"FileDescriptorOrPath\"\n-       Type \"None\" cannot be assigned to type \"FileDescriptorOrPath\"\n-         Type \"None\" cannot be assigned to type \"int\"\n-         Type \"None\" cannot be assigned to type \"str\"\n-         Type \"None\" cannot be assigned to type \"bytes\"\n-         \"__fspath__\" is not present\n-         \"__fspath__\" is not present (reportGeneralTypeIssues)\n\n... (truncated 799 lines) ...\n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n-   /tmp/mypy_primer/projects/koda-validate/koda_validate/_internal.py:46:20 - error: Expression of type \"SuccessT@_ToTupleValidator | Invalid\" cannot be assigned to return type \"ValidationResult[SuccessT@_ToTupleValidator]\"\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/_internal.py:46:20 - error: Expression of type \"SuccessT@_ToTupleValidator | Invalid\" cannot be assigned to return type \"ValidationResult[SuccessT@_ToTupleValidator]\" (reportGeneralTypeIssues)\n-     Type \"object* | Invalid\" cannot be assigned to type \"ValidationResult[SuccessT@_ToTupleValidator]\"\n-       Type \"object*\" cannot be assigned to type \"ValidationResult[SuccessT@_ToTupleValidator]\"\n-         \"object*\" is incompatible with \"Valid[SuccessT@_ToTupleValidator]\"\n-         \"object*\" is incompatible with \"Invalid\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/koda-validate/koda_validate/_internal.py:53:20 - error: Expression of type \"SuccessT@_ToTupleValidator | Invalid\" cannot be assigned to return type \"ValidationResult[SuccessT@_ToTupleValidator]\"\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/_internal.py:53:20 - error: Expression of type \"SuccessT@_ToTupleValidator | Invalid\" cannot be assigned to return type \"ValidationResult[SuccessT@_ToTupleValidator]\" (reportGeneralTypeIssues)\n-     Type \"object* | Invalid\" cannot be assigned to type \"ValidationResult[SuccessT@_ToTupleValidator]\"\n-       Type \"object*\" cannot be assigned to type \"ValidationResult[SuccessT@_ToTupleValidator]\"\n-         \"object*\" is incompatible with \"Valid[SuccessT@_ToTupleValidator]\"\n-         \"object*\" is incompatible with \"Invalid\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/koda-validate/koda_validate/dictionary.py:164:25 - error: Argument of type \"Valid[T1@MapValidator] | Invalid | None\" cannot be assigned to parameter \"key\" of type \"Invalid | None\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/dictionary.py:164:25 - error: Argument of type \"Valid[T1@MapValidator] | Invalid | None\" cannot be assigned to parameter \"key\" of type \"Invalid | None\" in function \"__init__\" (reportGeneralTypeIssues)\n-     Type \"Valid[T1@MapValidator] | Invalid | None\" cannot be assigned to type \"Invalid | None\"\n-       Type \"Valid[T1@MapValidator]\" cannot be assigned to type \"Invalid | None\"\n-         \"Valid[T1@MapValidator]\" is incompatible with \"Invalid\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/koda-validate/koda_validate/dictionary.py:165:25 - error: Argument of type \"Valid[T2@MapValidator] | Invalid | None\" cannot be assigned to parameter \"val\" of type \"Invalid | None\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/dictionary.py:165:25 - error: Argument of type \"Valid[T2@MapValidator] | Invalid | None\" cannot be assigned to parameter \"val\" of type \"Invalid | None\" in function \"__init__\" (reportGeneralTypeIssues)\n-     Type \"Valid[T2@MapValidator] | Invalid | None\" cannot be assigned to type \"Invalid | None\"\n-       Type \"Valid[T2@MapValidator]\" cannot be assigned to type \"Invalid | None\"\n-         \"Valid[T2@MapValidator]\" is incompatible with \"Invalid\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/koda-validate/koda_validate/dictionary.py:214:25 - error: Argument of type \"Valid[T1@MapValidator] | Invalid | None\" cannot be assigned to parameter \"key\" of type \"Invalid | None\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/dictionary.py:214:25 - error: Argument of type \"Valid[T1@MapValidator] | Invalid | None\" cannot be assigned to parameter \"key\" of type \"Invalid | None\" in function \"__init__\" (reportGeneralTypeIssues)\n-     Type \"Valid[T1@MapValidator] | Invalid | None\" cannot be assigned to type \"Invalid | None\"\n-       Type \"Valid[T1@MapValidator]\" cannot be assigned to type \"Invalid | None\"\n-         \"Valid[T1@MapValidator]\" is incompatible with \"Invalid\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/koda-validate/koda_validate/dictionary.py:215:25 - error: Argument of type \"Valid[T2@MapValidator] | Invalid | None\" cannot be assigned to parameter \"val\" of type \"Invalid | None\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/dictionary.py:215:25 - error: Argument of type \"Valid[T2@MapValidator] | Invalid | None\" cannot be assigned to parameter \"val\" of type \"Invalid | None\" in function \"__init__\" (reportGeneralTypeIssues)\n-     Type \"Valid[T2@MapValidator] | Invalid | None\" cannot be assigned to type \"Invalid | None\"\n-       Type \"Valid[T2@MapValidator]\" cannot be assigned to type \"Invalid | None\"\n-         \"Valid[T2@MapValidator]\" is incompatible with \"Invalid\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/koda-validate/koda_validate/tuple.py:261:44 - error: Argument of type \"((Tuple[T1@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed, T7@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed, T7@typed, T8@typed]) -> (ErrType | None)) | None\" cannot be assigned to parameter \"validate_object\" of type \"((A@NTupleValidator) -> (ErrType | None)) | None\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/tuple.py:261:44 - error: Argument of type \"((Tuple[T1@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed, T7@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed, T7@typed, T8@typed]) -> (ErrType | None)) | None\" cannot be assigned to parameter \"validate_object\" of type \"((A@NTupleValidator) -> (ErrType | None)) | None\" in function \"__init__\" (reportGeneralTypeIssues)\n-     Type \"((Tuple[T1@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed, T7@typed]) -> (ErrType | None)) | ((Tuple[T1@typed, T2@typed, T3@typed, T4@typed, T5@typed, T6@typed, T7@typed, T8@typed]) -> (ErrType | None)) | None\" cannot be assigned to type \"((Tuple[T1@typed]) -> (ErrType | None)) | None\"\n-       Type \"(Tuple[T1@typed, T2@typed]) -> (ErrType | None)\" cannot be assigned to type \"((Tuple[T1@typed]) -> (ErrType | None)) | None\"\n-         Type \"(Tuple[T1@typed, T2@typed]) -> (ErrType | None)\" cannot be assigned to type \"(Tuple[T1@typed]) -> (ErrType | None)\"\n-           Parameter 1: type \"Tuple[T1@typed]\" cannot be assigned to type \"Tuple[T1@typed, T2@typed]\"\n-             \"Tuple[T1@typed]\" is incompatible with \"Tuple[T1@typed, T2@typed]\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:253:93 - error: Argument of type \"Path | str | PathLike[str]\" cannot be assigned to parameter \"path\" of type \"str | None\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:253:93 - error: Argument of type \"Path | str | PathLike[str]\" cannot be assigned to parameter \"path\" of type \"str | None\" in function \"__init__\" (reportGeneralTypeIssues)\n-     Type \"Path | str | PathLike[str]\" cannot be assigned to type \"str | None\"\n-       Type \"PathLike[str]\" cannot be assigned to type \"str | None\"\n-         \"PathLike[str]\" is incompatible with \"str\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:279:101 - error: Argument of type \"Path | str | PathLike[str]\" cannot be assigned to parameter \"path\" of type \"str | None\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:279:101 - error: Argument of type \"Path | str | PathLike[str]\" cannot be assigned to parameter \"path\" of type \"str | None\" in function \"__init__\" (reportGeneralTypeIssues)\n-     Type \"Path | str | PathLike[str]\" cannot be assigned to type \"str | None\"\n-       Type \"PathLike[str]\" cannot be assigned to type \"str | None\"\n-         \"PathLike[str]\" is incompatible with \"str\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:313:101 - error: Argument of type \"Path | str | PathLike[str]\" cannot be assigned to parameter \"path\" of type \"str | None\" in function \"__init__\"\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:313:101 - error: Argument of type \"Path | str | PathLike[str]\" cannot be assigned to parameter \"path\" of type \"str | None\" in function \"__init__\" (reportGeneralTypeIssues)\n-     Type \"Path | str | PathLike[str]\" cannot be assigned to type \"str | None\"\n-       Type \"PathLike[str]\" cannot be assigned to type \"str | None\"\n-         \"PathLike[str]\" is incompatible with \"str\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:420:16 - error: Expression of type \"CHR@check | ((predicate: Check@check) -> CHR@check)\" cannot be assigned to return type \"Check@check | CHR@check\"\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/bot.py:420:16 - error: Expression of type \"CHR@check | ((predicate: Check@check) -> CHR@check)\" cannot be assigned to return type \"Check@check | CHR@check\" (reportGeneralTypeIssues)\n-     Type \"CheckReturnType* | ((predicate: Check@check) -> CHR@check)\" cannot be assigned to type \"Check@check | CHR@check\"\n-       Type \"CheckReturnType*\" cannot be assigned to type \"Check@check\"\n-       Type \"(predicate: Check@check) -> CHR@check\" cannot be assigned to type \"CHR@check\"\n-       Type \"(predicate: Check@check) -> CHR@check\" cannot be assigned to type \"Check@check | CHR@check\"\n-         Type \"(predicate: Check@check) -> CHR@check\" cannot be assigned to type \"Check@check\"\n-         Type \"(predicate: Check@check) -> CHR@check\" cannot be assigned to type \"CHR@check\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:830:16 - error: Expression of type \"G@group | ((callback: CallbackType[P@decorator]) -> G@group)\" cannot be assigned to return type \"((CallT@group) -> G@group) | G@group\"\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:830:16 - error: Expression of type \"G@group | ((callback: CallbackType[P@decorator]) -> G@group)\" cannot be assigned to return type \"((CallT@group) -> G@group) | G@group\" (reportGeneralTypeIssues)\n-     Type \"Group[(Any)]* | ((callback: CallbackType[P@decorator]) -> G@group)\" cannot be assigned to type \"((CallT@group) -> G@group) | G@group\"\n-       Type \"(callback: CallbackType[P@decorator]) -> G@group\" cannot be assigned to type \"(CallT@group) -> G@group\"\n-         Parameter 1: type \"CallT@group\" cannot be assigned to type \"CallbackType[P@decorator]\"\n-           \"function\" is incompatible with protocol \"CallbackType[P@decorator]\"\n-             \"__commands_checks__\" is not present\n-             \"__commands_cooldown__\" is not present\n-             \"__special_converters__\" is not present\n-             \"__call__\" is not present\n-     ... (reportGeneralTypeIssues)\n-     Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MaybeCommand\"\n+     Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MaybeCommand\" (reportGeneralTypeIssues)\n-       Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MaybeCommand\"\n-         Type \"CommandDeco*\" cannot be assigned to type \"MaybeCommand\"\n-           Type \"CommandDeco*\" cannot be assigned to type \"(...) -> Command[(Any)]\"\n-             Function return type \"MC@__call__\" is incompatible with type \"Command[(Any)]\"\n-           \"CommandDeco*\" is incompatible with protocol \"CallbackType[(Any)]\"\n-             \"__commands_checks__\" is not present\n-             \"__commands_cooldown__\" is not present (reportGeneralTypeIssues)\n-     Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MaybeCommand\"\n+     Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MaybeCommand\" (reportGeneralTypeIssues)\n-       Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MaybeCommand\"\n-         Type \"CommandDeco*\" cannot be assigned to type \"MaybeCommand\"\n-           Type \"CommandDeco*\" cannot be assigned to type \"(...) -> Command[(Any)]\"\n-             Function return type \"MC@__call__\" is incompatible with type \"Command[(Any)]\"\n-           \"CommandDeco*\" is incompatible with protocol \"CallbackType[(Any)]\"\n-             \"__commands_checks__\" is not present\n-             \"__commands_cooldown__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:237:43 - error: Argument of type \"CommandError | None\" cannot be assigned to parameter \"exception\" of type \"type[CommandError] | None\" in function \"process_commands\"\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:237:43 - error: Argument of type \"CommandError | None\" cannot be assigned to parameter \"exception\" of type \"type[CommandError] | None\" in function \"process_commands\" (reportGeneralTypeIssues)\n-     Type \"CommandError | None\" cannot be assigned to type \"type[CommandError] | None\"\n-       Type \"CommandError\" cannot be assigned to type \"type[CommandError] | None\"\n-         Type \"CommandError\" cannot be assigned to type \"type[CommandError]\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1484:20 - error: Argument of type \"Any | Unknown | None\" cannot be assigned to parameter \"a\" of type \"_SupportsFloatOrIndex\" in function \"isclose\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1484:20 - error: Argument of type \"Any | Unknown | None\" cannot be assigned to parameter \"a\" of type \"_SupportsFloatOrIndex\" in function \"isclose\" (reportGeneralTypeIssues)\n-     Type \"Any | Unknown | None\" cannot be assigned to type \"_SupportsFloatOrIndex\"\n-       Type \"None\" cannot be assigned to type \"_SupportsFloatOrIndex\"\n-         \"__float__\" is not present\n-         \"__index__\" is not present (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange.py:1633:16 - error: Expression of type \"str | Unknown\" cannot be assigned to return type \"BidAsk\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/exchange/exchange.py:1633:16 - error: Expression of type \"str | Unknown\" cannot be assigned to return type \"BidAsk\" (reportGeneralTypeIssues)\n-     Type \"str | Unknown\" cannot be assigned to type \"BidAsk\"\n-       \"str\" cannot be assigned to type \"Literal['bid']\"\n-       Type \"str\" cannot be assigned to type \"BidAsk\"\n-         \"str\" cannot be assigned to type \"Literal['bid']\"\n-         \"str\" cannot be assigned to type \"Literal['ask']\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/external_message_consumer.py:289:55 - error: Argument of type \"Unknown | Literal[False]\" cannot be assigned to parameter \"fut\" of type \"_FutureLike[_T@wait_for]\" in function \"wait_for\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/rpc/external_message_consumer.py:289:55 - error: Argument of type \"Unknown | Literal[False]\" cannot be assigned to parameter \"fut\" of type \"_FutureLike[_T@wait_for]\" in function \"wait_for\" (reportGeneralTypeIssues)\n-     Type \"Unknown | Literal[False]\" cannot be assigned to type \"_FutureLike[_T@wait_for]\"\n-       Type \"Literal[False]\" cannot be assigned to type \"_FutureLike[_T@wait_for]\"\n-         \"Literal[False]\" is incompatible with \"Future[_T@wait_for]\"\n-         \"Literal[False]\" is incompatible with \"Generator[Any, None, _T@wait_for]\"\n-         \"Literal[False]\" is incompatible with protocol \"Awaitable[_T@wait_for]\"\n-           \"__await__\" is not present (reportGeneralTypeIssues)\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/components.py:227:18 - error: Argument of type \"str | Tuple[str, ...] | None\" cannot be assigned to parameter \"name\" of type \"str | None\" in function \"column_strategy\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/components.py:227:18 - error: Argument of type \"str | Tuple[str, ...] | None\" cannot be assigned to parameter \"name\" of type \"str | None\" in function \"column_strategy\" (reportGeneralTypeIssues)\n-     Type \"str | Tuple[str, ...] | None\" cannot be assigned to type \"str | None\"\n-       Type \"Tuple[str, ...]\" cannot be assigned to type \"str | None\"\n-         \"Tuple[str, ...]\" is incompatible with \"str\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:1350:20 - error: Argument of type \"str | List[str] | None\" cannot be assigned to parameter \"unique\" of type \"List[str] | None\" in function \"dataframe_strategy\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:1350:20 - error: Argument of type \"str | List[str] | None\" cannot be assigned to parameter \"unique\" of type \"List[str] | None\" in function \"dataframe_strategy\" (reportGeneralTypeIssues)\n-     Type \"str | List[str] | None\" cannot be assigned to type \"List[str] | None\"\n-       Type \"str\" cannot be assigned to type \"List[str] | None\"\n-         \"str\" is incompatible with \"List[str]\"\n-         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandera/pandera/backends/pandas/array.py:321:38 - error: Argument of type \"BaseException | Exception | None\" cannot be assigned to parameter \"original_exc\" of type \"Exception | None\" in function \"__init__\"\n\n... (truncated 103 lines) ...```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false negative when assigning a `T | None` type to `object | None` in an invariant context. This same bug led to issues with the validation of TypeVar variance within a Protocol. This addresses https://github.com/microsoft/pylance-release/issues/4613. (#5518)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211153ac254a19ac290715",
    "number": 5517,
    "body": "…eriment to understand the impact on various typed code bases.",
    "head_branch": "strSequence",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-     \"str\" is incompatible with \"Collection[int]\"\n+     \"str\" is incompatible with protocol \"Collection[int]\"\n-       TypeVar \"_T_co@Collection\" is covariant\n+       \"__contains__\" is an incompatible type\n+         Type \"(__key: str, /) -> bool\" cannot be assigned to type \"(__x: object, /) -> bool\"\n+           Parameter 1: type \"object\" cannot be assigned to type \"str\"\n-         \"str\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+             \"object\" is incompatible with \"str\" (reportGeneralTypeIssues)\n-     \"Literal['abc']\" is incompatible with \"Iterable[Spec]\"\n+     \"Literal['abc']\" is incompatible with protocol \"Iterable[Spec]\"\n+         Type \"Spec | LiteralString\" cannot be assigned to type \"Spec\"\n-         \"str\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n+           \"str\" is incompatible with \"Spec\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/spec_dag.py:730:40 - error: Argument of type \"str\" cannot be assigned to parameter \"__key\" of type \"LiteralString\" in function \"__getitem__\"\n+     \"str\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n- 3531 errors, 49 warnings, 0 informations \n+ 3532 errors, 49 warnings, 0 informations \n\nmkosi (https://github.com/systemd/mkosi)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/config.py:1466:24 - error: Argument of type \"Literal['=']\" cannot be assigned to parameter \"delimiters\" of type \"Sequence[str]\" in function \"__init__\"\n+     \"Literal['=']\" is incompatible with \"Sequence[str]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/config.py:1467:30 - error: Argument of type \"Literal['#']\" cannot be assigned to parameter \"comment_prefixes\" of type \"Sequence[str]\" in function \"__init__\"\n+     \"Literal['#']\" is incompatible with \"Sequence[str]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/config.py:1468:37 - error: Argument of type \"Literal['#']\" cannot be assigned to parameter \"inline_comment_prefixes\" of type \"Sequence[str] | None\" in function \"__init__\"\n+     Type \"Literal['#']\" cannot be assigned to type \"Sequence[str] | None\"\n+       \"Literal['#']\" is incompatible with \"Sequence[str]\"\n+       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n- 3 errors, 0 warnings, 0 informations \n+ 6 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/id.py:131:98 - error: Argument of type \"str\" cannot be assigned to parameter \"__key\" of type \"LiteralString\" in function \"__getitem__\"\n+     \"str\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/id.py:140:98 - error: Argument of type \"str\" cannot be assigned to parameter \"__key\" of type \"LiteralString\" in function \"__getitem__\"\n+     \"str\" is incompatible with \"LiteralString\" (reportGeneralTypeIssues)\n- 8650 errors, 45 warnings, 0 informations \n+ 8652 errors, 45 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1407:37 - error: Argument of type \"Literal['A']\" cannot be assigned to parameter \"column\" of type \"Sequence[Hashable]\" in function \"explode\"\n+     \"Literal['A']\" is incompatible with \"Sequence[Hashable]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1408:37 - error: Argument of type \"Literal['A']\" cannot be assigned to parameter \"column\" of type \"Sequence[Hashable]\" in function \"explode\"\n+     \"Literal['A']\" is incompatible with \"Sequence[Hashable]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1409:37 - error: Argument of type \"Literal['A']\" cannot be assigned to parameter \"column\" of type \"Sequence[Hashable]\" in function \"explode\"\n+     \"Literal['A']\" is incompatible with \"Sequence[Hashable]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_io.py:1522:50 - error: Argument of type \"list[str]\" cannot be assigned to parameter \"parse_dates\" of type \"bool | Sequence[int] | Sequence[Sequence[str] | Sequence[int]] | dict[str, Sequence[int] | list[str]]\" in function \"read_excel\"\n+     \"Literal['col1']\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_io.py:1530:40 - error: Argument of type \"list[str]\" cannot be assigned to parameter \"parse_dates\" of type \"bool | Sequence[int] | Sequence[Sequence[str] | Sequence[int]] | dict[str, Sequence[int] | list[str]]\" in function \"read_excel\"\n+     \"Literal['col1']\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_io.py:1538:50 - error: Argument of type \"list[str]\" cannot be assigned to parameter \"parse_dates\" of type \"bool | Sequence[int] | Sequence[Sequence[str] | Sequence[int]] | dict[str, Sequence[int] | list[str]]\" in function \"read_excel\"\n+     \"Literal['col1']\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_plotting.py:513:22 - error: Argument of type \"Literal['line']\" cannot be assigned to parameter \"kind\" of type \"Literal['box']\" in function \"__call__\"\n+     \"Literal['line']\" cannot be assigned to type \"Literal['box']\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_plotting.py:515:26 - error: Argument of type \"Literal[False]\" cannot be assigned to parameter \"subplots\" of type \"Sequence[Iterable[HashableT1@__call__]] | Literal[True]\" in function \"__call__\"\n+     Type \"Literal[False]\" cannot be assigned to type \"Sequence[Iterable[HashableT1@__call__]] | Literal[True]\"\n+       \"Literal[False]\" is incompatible with \"Sequence[Iterable[HashableT1@__call__]]\"\n+       \"Literal[False]\" cannot be assigned to type \"Literal[True]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_plotting.py:521:23 - error: Argument of type \"Literal['Some title']\" cannot be assigned to parameter \"title\" of type \"Sequence[str] | None\" in function \"__call__\"\n+     Type \"Literal['Some title']\" cannot be assigned to type \"Sequence[str] | None\"\n+       \"Literal['Some title']\" is incompatible with \"Sequence[str]\"\n+       Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n- 1243 errors, 0 warnings, 0 informations \n+ 1252 errors, 0 warnings, 0 informations \n\nPyWinCtl (https://github.com/Kalmat/PyWinCtl)\n+   /tmp/mypy_primer/projects/PyWinCtl/src/pywinctl/_xlibcontainer.py:392:61 - error: Argument of type \"List[int] | str\" cannot be assigned to parameter \"data\" of type \"Sequence[float] | Sequence[str]\" in function \"change_property\"\n+     Type \"List[int] | str\" cannot be assigned to type \"Sequence[float] | Sequence[str]\"\n+       Type \"str\" cannot be assigned to type \"Sequence[float] | Sequence[str]\"\n+         \"str\" is incompatible with \"Sequence[float]\"\n+         \"str\" is incompatible with \"Sequence[str]\" (reportGeneralTypeIssues)\n- 38 errors, 17 warnings, 3 informations \n+ 39 errors, 17 warnings, 3 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-       \"Text\" is incompatible with \"Iterable[SupportsIndex]\"\n+       \"Text\" is incompatible with protocol \"Iterable[SupportsIndex]\"\n+           Type \"SupportsIndex | str\" cannot be assigned to type \"SupportsIndex\"\n-           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"str\" is incompatible with protocol \"SupportsIndex\"\n-             \"__index__\" is not present\n-       \"str\" is incompatible with \"Iterable[SupportsIndex]\"\n+       \"str\" is incompatible with protocol \"Iterable[SupportsIndex]\"\n+           Type \"SupportsIndex | str\" cannot be assigned to type \"SupportsIndex\"\n-           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"str\" is incompatible with protocol \"SupportsIndex\"\n-             \"__index__\" is not present\n-       \"Literal['hueh hueh hueh']\" is incompatible with \"Iterable[SupportsIndex]\"\n+       \"Literal['hueh hueh hueh']\" is incompatible with protocol \"Iterable[SupportsIndex]\"\n+           Type \"SupportsIndex | LiteralString\" cannot be assigned to type \"SupportsIndex\"\n-           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"str\" is incompatible with protocol \"SupportsIndex\"\n-             \"__index__\" is not present\n-       \"Literal['data streams']\" is incompatible with \"Iterable[SupportsIndex]\"\n+       \"Literal['data streams']\" is incompatible with protocol \"Iterable[SupportsIndex]\"\n+           Type \"SupportsIndex | LiteralString\" cannot be assigned to type \"SupportsIndex\"\n-           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"str\" is incompatible with protocol \"SupportsIndex\"\n-             \"__index__\" is not present\n-       \"Literal['hueh hueh hueh']\" is incompatible with \"Iterable[SupportsIndex]\"\n+       \"Literal['hueh hueh hueh']\" is incompatible with protocol \"Iterable[SupportsIndex]\"\n+           Type \"SupportsIndex | LiteralString\" cannot be assigned to type \"SupportsIndex\"\n-           \"str\" is incompatible with protocol \"SupportsIndex\"\n+             \"str\" is incompatible with protocol \"SupportsIndex\"\n-             \"__index__\" is not present\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211154ac254a19ac290716",
    "number": 5512,
    "body": "…d` error when overload contained the use of a constrained TypeVar. This addresses #5511.",
    "head_branch": "issue5511",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:327:9 - error: Overload 3 for \"wait_for\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:357:9 - error: Overload 3 for \"gc_wait_for\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n- 8738 errors, 49 warnings, 0 informations \n+ 8740 errors, 49 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2184:9 - error: Overload 2 for \"with_on_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2189:9 - error: Overload 3 for \"with_on_error\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2189:9 - error: Overload 3 for \"with_on_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2194:9 - error: Overload 4 for \"with_on_error\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2194:9 - error: Overload 4 for \"with_on_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2268:9 - error: Overload 2 for \"with_on_parser_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2273:9 - error: Overload 3 for \"with_on_parser_error\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2273:9 - error: Overload 3 for \"with_on_parser_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2278:9 - error: Overload 4 for \"with_on_parser_error\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2278:9 - error: Overload 4 for \"with_on_parser_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2336:9 - error: Overload 2 for \"with_post_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2341:9 - error: Overload 3 for \"with_post_execution\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2341:9 - error: Overload 3 for \"with_post_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2346:9 - error: Overload 4 for \"with_post_execution\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2346:9 - error: Overload 4 for \"with_post_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2404:9 - error: Overload 2 for \"with_pre_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2409:9 - error: Overload 3 for \"with_pre_execution\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2409:9 - error: Overload 3 for \"with_pre_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2414:9 - error: Overload 4 for \"with_pre_execution\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2414:9 - error: Overload 4 for \"with_pre_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2472:9 - error: Overload 2 for \"with_on_success\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2477:9 - error: Overload 3 for \"with_on_success\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2477:9 - error: Overload 3 for \"with_on_success\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2482:9 - error: Overload 4 for \"with_on_success\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/abc.py:2482:9 - error: Overload 4 for \"with_on_success\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:192:9 - error: Overload 2 for \"with_on_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:196:9 - error: Overload 3 for \"with_on_error\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:196:9 - error: Overload 3 for \"with_on_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:200:9 - error: Overload 4 for \"with_on_error\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:200:9 - error: Overload 4 for \"with_on_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:242:9 - error: Overload 2 for \"with_on_parser_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:246:9 - error: Overload 3 for \"with_on_parser_error\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:246:9 - error: Overload 3 for \"with_on_parser_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:250:9 - error: Overload 4 for \"with_on_parser_error\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:250:9 - error: Overload 4 for \"with_on_parser_error\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:289:9 - error: Overload 2 for \"with_post_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:293:9 - error: Overload 3 for \"with_post_execution\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:293:9 - error: Overload 3 for \"with_post_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:297:9 - error: Overload 4 for \"with_post_execution\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:297:9 - error: Overload 4 for \"with_post_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:336:9 - error: Overload 2 for \"with_pre_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:340:9 - error: Overload 3 for \"with_pre_execution\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:340:9 - error: Overload 3 for \"with_pre_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:344:9 - error: Overload 4 for \"with_pre_execution\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:344:9 - error: Overload 4 for \"with_pre_execution\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:383:9 - error: Overload 2 for \"with_on_success\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:387:9 - error: Overload 3 for \"with_on_success\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:387:9 - error: Overload 3 for \"with_on_success\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:391:9 - error: Overload 4 for \"with_on_success\" will never be used because its parameters overlap overload 2 (reportOverlappingOverload)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:391:9 - error: Overload 4 for \"with_on_success\" will never be used because its parameters overlap overload 1 (reportOverlappingOverload)\n- 2093 errors, 9912 warnings, 0 informations \n+ 2103 errors, 9912 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that resulted in a false positive `reportOverlappingOverload` error when overload contained the use of a constrained TypeVar. This addresses #5511. (#5512)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211155ac254a19ac290717",
    "number": 5509,
    "body": "…n the positive narrowing case. This addresses #5508.",
    "head_branch": "issue5508",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/buildcache.py:560:33 - error: \"fetch_url\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/buildcache.py:561:35 - error: \"push_url\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/package_class.py:241:29 - error: Argument of type \"None\" cannot be assigned to parameter \"p\" of type \"AnyOrLiteralStr@basename\" in function \"basename\"\n+     Type \"None\" is incompatible with constrained type variable \"AnyOrLiteralStr\" (reportGeneralTypeIssues)\n- 3531 errors, 49 warnings, 0 informations \n+ 3534 errors, 49 warnings, 0 informations \n\nalectryon (https://github.com/cpitclaudel/alectryon)\n+ /tmp/mypy_primer/projects/alectryon/alectryon/json.py\n+   /tmp/mypy_primer/projects/alectryon/alectryon/json.py:412:16 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"cache_root\" of type \"str\" in function \"__init__\"\n+     Type \"Unknown | None\" cannot be assigned to type \"str\"\n+       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n- 14 errors, 37 warnings, 0 informations \n+ 15 errors, 37 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/context/base.py:146:20 - warning: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/context/base.py:146:20 - warning: Return type, \"Unknown | None\", is partially unknown (reportUnknownVariableType)\n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:653:31 - error: \"pandera\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/pandera/pandera/decorators.py:656:34 - error: \"pandera\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:1219:36 - error: \"columns\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 1041 errors, 10 warnings, 0 informations \n+ 1044 errors, 10 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+ /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_remoteconfiguration.py\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/appsec/_remoteconfiguration.py:165:12 - error: Expression of type \"Any | None\" cannot be assigned to return type \"Mapping[str, Any]\"\n+     Type \"Any | None\" cannot be assigned to type \"Mapping[str, Any]\"\n+       Type \"None\" cannot be assigned to type \"Mapping[str, Any]\" (reportGeneralTypeIssues)\n- 8234 errors, 418 warnings, 0 informations \n+ 8235 errors, 418 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.15x faster (80.9s -> 70.2s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Modified `is None` type guard logic to eliminate `Any` or `Unknown` in the positive narrowing case. This addresses #5508. (#5509)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211156ac254a19ac290718",
    "number": 5507,
    "body": "…ing for sequence patterns in the negative case and the subject expression is a super-type of `Sequence` (such as `object` or `Reversible`).",
    "head_branch": "sequencePatterns",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bugs that resulted in incorrect or incomplete types when narrowing for sequence patterns in the negative case and the subject expression is a super-type of `Sequence` (such as `object` or `Reversible`). (#5507)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211157ac254a19ac290719",
    "number": 5505,
    "body": "rollup of the following changes:\r\n    1. handle async method override https://github.com/microsoft/pyrx/pull/3882\r\n    2. Handle merge problem with Jinja changes\r\n    3. Add support for a different source file type (Jinja work)\r\n\r\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\r\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.317",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.317 (#5505)\n\n* pull-pylance-with-pyright-1.1.317\r\n\r\n* Add missing types\r\n\r\n---------\r\n\r\nCo-authored-by: rchiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211158ac254a19ac29071a",
    "number": 5503,
    "body": "I believe this should resolve https://github.com/microsoft/pyright/issues/5415, but I'm not an expert here. My understanding is that the published pyright package does the npm equivalent of statically linking the chokidar dependency, which means that fsevents is not pulled in if that linking is done on a machine that is not run on MacOS. \r\n\r\nThis setup is not ideal since the version could drift from the one expected the chokidar embedded in `pyright`, but I think it's probably okay. ",
    "head_branch": "fsevents-dependency",
    "is_a_fork": true,
    "comments": [
      "Please don't submit PRs if you're unsure of their effects or don't fully understand the problem. Issue #5415 requires deeper investigation. I'll get to that when I have a chance.",
      "Since you're able to repro this issue on your machine, does this change make the problem go away?",
      "Yes. I tested by running `npm run install:all && npm run build:cli:dev`, then doing a local `npm install /path/to/local/pyright` in the `.cache` directory. I verified that repeating those steps without the change caused the error. ",
      "OK, that's pretty good evidence that this is a proper diagnosis and an effective fix. I'll merge your PR. Thanks!"
    ],
    "commit_messages": [
      "Add fsevents as optional dependency to public package (#5503)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211159ac254a19ac29071b",
    "number": 5501,
    "body": "https://github.com/python/cpython/blob/main/Objects/typeobject.c#L6794 checks if `__hash__` is overridden (`__eq__` or `__hash__` is defined) and stops `__hash__` from being copied from the base (https://github.com/python/cpython/blob/main/Objects/typeobject.c#L6953). https://github.com/python/cpython/blob/main/Objects/typeobject.c#L7354 sets `__hash__` to `None` if `__hash__` isn't found in the dict.\r\n\r\nThis should match CPython's behavior.\r\n\r\ncloses #5446",
    "head_branch": "shreddedpotato1",
    "is_a_fork": true,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict)\n+   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:357:13 - error: Set entry must be hashable\n+     Type \"Bi\" is not hashable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/bidict/tests/property_tests/test_properties.py:358:13 - error: Dictionary key must be hashable\n+     Type \"Bi\" is not hashable (reportGeneralTypeIssues)\n- 12 errors, 0 warnings, 0 informations \n+ 14 errors, 0 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:157:23 - error: Argument of type \"list[DataFrame]\" cannot be assigned to parameter \"objs\" of type \"Iterable[Series[Unknown]] | Mapping[HashableT1@concat, Series[Unknown]]\" in function \"concat\"\n+     \"DataFrame\" is incompatible with \"Series[Unknown]\"\n+     \"DataFrame\" is incompatible with \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:157:62 - error: Argument of type \"list[Timedelta]\" cannot be assigned to parameter \"names\" of type \"list[HashableT4@concat]\" in function \"concat\"\n+     Type \"Timedelta\" cannot be assigned to type \"Hashable\"\n+       \"Timedelta\" is incompatible with protocol \"Hashable\"\n+         \"__hash__\" is an incompatible type\n+           Type \"None\" cannot be assigned to type \"(self: Timedelta) -> int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:157:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:1601:13 - error: Dictionary key must be hashable\n+     Type \"Timestamp\" is not hashable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:1602:13 - error: Dictionary key must be hashable\n+     Type \"Timedelta\" is not hashable (reportGeneralTypeIssues)\n- 1243 errors, 0 warnings, 0 informations \n+ 1248 errors, 0 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/map.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/map.py:215:5 - error: \"__hash__\" overrides symbol of same name in class \"Mapping\"\n+     Type cannot be assigned to type \"None\" (reportIncompatibleVariableOverride)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/map.py:215:5 - error: Instance variable \"__hash__\" overrides class variable of same name in class \"Mapping\" (reportIncompatibleVariableOverride)\n- 278 errors, 0 warnings, 0 informations \n+ 280 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Match CPython's __hash__ overriding behavior when __eq__ exists (#5501)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621115aac254a19ac29071c",
    "number": 5499,
    "body": "…all-through) case when the subject type contains an `Any`. This addresses #5492.",
    "head_branch": "issue5492",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in type narrowing for pattern matching in the negative (fall-through) case when the subject type contains an `Any`. This addresses #5492. (#5499)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621115bac254a19ac29071d",
    "number": 5497,
    "body": "This change allows Pylance to implement these two features:\nhttps://github.com/microsoft/pylance-release/issues/4482\nhttps://github.com/microsoft/pylance-release/issues/4368#issuecomment-1618831643\n\nEssentially just a hook into when a string is loaded.",
    "head_branch": "rchiodo/allow_different_messages",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "@erictraut does this seem okay to you? I believe you suggested something along these lines in https://github.com/microsoft/pylance-release/issues/4482\r\n",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Add capability for Pylance to override strings (#5497)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621115cac254a19ac29071e",
    "number": 5494,
    "body": "…en a \"bare\" generic class (like `dict`) is passed as an argument to a function that accepts a `type[T]`. This addresses #5392.",
    "head_branch": "issue5392",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:354:2 - error: Argument of type \"(argument: str) -> None\" cannot be assigned to parameter of type \"(str) -> Command[P@Command]\"\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:354:2 - error: Argument of type \"(argument: str) -> None\" cannot be assigned to parameter of type \"(str) -> Command[Unknown]\"\n-     Type \"(argument: str) -> None\" cannot be assigned to type \"(str) -> Command[P@Command]\"\n+     Type \"(argument: str) -> None\" cannot be assigned to type \"(str) -> Command[Unknown]\"\n-       Function return type \"None\" is incompatible with type \"Command[P@Command]\"\n+       Function return type \"None\" is incompatible with type \"Command[Unknown]\"\n-         Type \"None\" cannot be assigned to type \"Command[P@Command]\" (reportGeneralTypeIssues)\n+         Type \"None\" cannot be assigned to type \"Command[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:374:16 - error: Type of \"converter_for\" is partially unknown\n+     Type of \"converter_for\" is \"type[Command[Unknown]]\" (reportUnknownMemberType)\n- 8737 errors, 49 warnings, 0 informations \n+ 8738 errors, 49 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a recent regression that resulted in unsolved type arguments when a \"bare\" generic class (like `dict`) is passed as an argument to a function that accepts a `type[T]`. This addresses #5392. (#5494)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621115dac254a19ac29071f",
    "number": 5493,
    "body": "…s to the same variable hundreds of times with different types. This mitigates the performance problem reported in #5475.",
    "head_branch": "issue5475",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added code to handle pathological case in unannotated code that writes to the same variable hundreds of times with different types. This mitigates the performance problem reported in #5475. (#5493)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621115dac254a19ac290720",
    "number": 5484,
    "body": "Bumps [semver](https://github.com/npm/node-semver) from 5.7.1 to 5.7.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/npm/node-semver/releases\">semver's releases</a>.</em></p>\n<blockquote>\n<h2>v5.7.2</h2>\n<h2><a href=\"https://github.com/npm/node-semver/compare/v5.7.1...v5.7.2\">5.7.2</a> (2023-07-10)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\"><code>2f8fd41</code></a> <a href=\"https://redirect.github.com/npm/node-semver/pull/585\">#585</a> better handling of whitespace (<a href=\"https://redirect.github.com/npm/node-semver/issues/585\">#585</a>) (<a href=\"https://github.com/joaomoreno\"><code>@​joaomoreno</code></a>, <a href=\"https://github.com/lukekarrys\"><code>@​lukekarrys</code></a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/npm/node-semver/blob/v5.7.2/CHANGELOG.md\">semver's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/npm/node-semver/compare/v5.7.1...v5.7.2\">5.7.2</a> (2023-07-10)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\"><code>2f8fd41</code></a> <a href=\"https://redirect.github.com/npm/node-semver/pull/585\">#585</a> better handling of whitespace (<a href=\"https://redirect.github.com/npm/node-semver/issues/585\">#585</a>) (<a href=\"https://github.com/joaomoreno\"><code>@​joaomoreno</code></a>, <a href=\"https://github.com/lukekarrys\"><code>@​lukekarrys</code></a>)</li>\n</ul>\n<h2>5.7</h2>\n<ul>\n<li>Add <code>minVersion</code> method</li>\n</ul>\n<h2>5.6</h2>\n<ul>\n<li>Move boolean <code>loose</code> param to an options object, with\nbackwards-compatibility protection.</li>\n<li>Add ability to opt out of special prerelease version handling with\nthe <code>includePrerelease</code> option flag.</li>\n</ul>\n<h2>5.5</h2>\n<ul>\n<li>Add version coercion capabilities</li>\n</ul>\n<h2>5.4</h2>\n<ul>\n<li>Add intersection checking</li>\n</ul>\n<h2>5.3</h2>\n<ul>\n<li>Add <code>minSatisfying</code> method</li>\n</ul>\n<h2>5.2</h2>\n<ul>\n<li>Add <code>prerelease(v)</code> that returns prerelease components</li>\n</ul>\n<h2>5.1</h2>\n<ul>\n<li>Add Backus-Naur for ranges</li>\n<li>Remove excessively cute inspection methods</li>\n</ul>\n<h2>5.0</h2>\n<ul>\n<li>Remove AMD/Browserified build artifacts</li>\n<li>Fix ltr and gtr when using the <code>*</code> range</li>\n<li>Fix for range <code>*</code> with a prerelease identifier</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/f8cc313550691a50d9662d8c94f0c033717efd7d\"><code>f8cc313</code></a> chore: release 5.7.2</li>\n<li><a href=\"https://github.com/npm/node-semver/commit/2f8fd41487acf380194579ecb6f8b1bbfe116be0\"><code>2f8fd41</code></a> fix: better handling of whitespace (<a href=\"https://redirect.github.com/npm/node-semver/issues/585\">#585</a>)</li>\n<li><a href=\"https://github.com/npm/node-semver/commit/deb5ad51bf58868fa243c1683775305fe9e0e365\"><code>deb5ad5</code></a> chore: <code>@​npmcli/template-oss</code><a href=\"https://github.com/4\"><code>@​4</code></a>.16.0</li>\n<li>See full diff in <a href=\"https://github.com/npm/node-semver/compare/v5.7.1...v5.7.2\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~lukekarrys\">lukekarrys</a>, a new releaser for semver since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=semver&package-manager=npm_and_yarn&previous-version=5.7.1&new-version=5.7.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/vscode-pyright/semver-5.7.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump semver from 5.7.1 to 5.7.2 in /packages/vscode-pyright (#5484)\n\nBumps [semver](https://github.com/npm/node-semver) from 5.7.1 to 5.7.2.\r\n- [Release notes](https://github.com/npm/node-semver/releases)\r\n- [Changelog](https://github.com/npm/node-semver/blob/v5.7.2/CHANGELOG.md)\r\n- [Commits](https://github.com/npm/node-semver/compare/v5.7.1...v5.7.2)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: semver\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621115eac254a19ac290721",
    "number": 5482,
    "body": "…guage keyword. Also added minimal support for the `rename` parameter to the `namedtuple` function. This addresses #5423.",
    "head_branch": "issue5423-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added detection of errors when a namedtuple definition includes a language keyword. Also added minimal support for the `rename` parameter to the `namedtuple` function. This addresses #5423. (#5482)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621115fac254a19ac290722",
    "number": 5480,
    "body": "…n code bases that make heavy use of protocols.",
    "head_branch": "issue5260",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved protocol type cache for improved type analysis performance in code bases that make heavy use of protocols. (#5480)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211160ac254a19ac290723",
    "number": 5472,
    "body": "… arguments beyond the first one. This addresses https://github.com/microsoft/pylance-release/issues/4565.",
    "head_branch": "issue4565",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for deferred annotation evaluation for `Annotated` type arguments beyond the first one. This addresses https://github.com/microsoft/pylance-release/issues/4565. (#5472)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211161ac254a19ac290724",
    "number": 5471,
    "body": "…pressions within annotation expressions so they are emitted as part of the `reportGeneralTypeIssue` diagnostic rule rather than unconditionally. This addresses https://github.com/microsoft/pylance-release/issues/4587.",
    "head_branch": "issue4587",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Modified diagnostic checks for list, dictionary, and tuple literal expressions within annotation expressions so they are emitted as part of the `reportGeneralTypeIssue` diagnostic rule rather than unconditionally. This addresses https://github.com/microsoft/pylance-release/issues/4587. (#5471)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211162ac254a19ac290725",
    "number": 5470,
    "body": null,
    "head_branch": "issue5405-5406",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-       Type \"E@listen | str | None\" cannot be assigned to type \"EventType\"\n+       Type \"EventType\" cannot be assigned to type \"E@listen | str | None\"\n-       Type \"str\" cannot be assigned to type \"E@listen\"\n+       Type \"E@listen\" cannot be assigned to type \"str\"\n-       Type \"None\" cannot be assigned to type \"E@listen\"\n+       Type \"E@listen\" cannot be assigned to type \"None\"\n-       Type \"E@listener | str | None\" cannot be assigned to type \"EventType\"\n+       Type \"EventType\" cannot be assigned to type \"E@listener | str | None\"\n-       Type \"str\" cannot be assigned to type \"E@listener\"\n+       Type \"E@listener\" cannot be assigned to type \"str\"\n-       Type \"None\" cannot be assigned to type \"E@listener\"\n+       Type \"E@listener\" cannot be assigned to type \"None\"\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.31x faster (51.5s -> 39.3s)\n(Performance measurements are based on a single noisy sample)\n-   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/tornado/web/compat.py:7:36 - error: Expression of type \"type[ThreadPoolExecutor]\" cannot be assigned to declared type \"type[ThreadPoolExecutor]\"\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/contrib/tornado/web/compat.py:7:36 - error: Expression of type \"type[concurrent.futures.thread.ThreadPoolExecutor]\" cannot be assigned to declared type \"type[tests.contrib.tornado.web.compat.ThreadPoolExecutor]\"\n-     Type \"type[ThreadPoolExecutor]\" cannot be assigned to type \"type[ThreadPoolExecutor]\" (reportGeneralTypeIssues)\n+     Type \"type[concurrent.futures.thread.ThreadPoolExecutor]\" cannot be assigned to type \"type[tests.contrib.tornado.web.compat.ThreadPoolExecutor]\" (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Issue5405 5406 (#5470)\n\n* Improved assignment mismatch errors to better handle the case where the two types have the same short name but different fully-qualified names. In this case, the types are now expanded to avoid confusion. This addresses #5406.\r\n\r\n* Fixed incorrect type mismatch error messages within constraint solver logic. The source and destination types were swapped, which led to confusing messages. This addresses #5405.\r\n\r\n---------\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211163ac254a19ac290726",
    "number": 5469,
    "body": "…der function involving a ParamSpec. This addresses #5409.",
    "head_branch": "issue5409",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in incorrect type evaluation for a higher-order function involving a ParamSpec. This addresses #5409. (#5469)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211164ac254a19ac290727",
    "number": 5468,
    "body": "… an async generator function. This addresses #5411.",
    "head_branch": "issue5411",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/WindowsGraphicsCaptureMethod.py:100:19 - error: Return type, \"Unknown | None\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/WindowsGraphicsCaptureMethod.py:100:19 - error: Return type, \"Coroutine[Any, Any, Unknown | None]\", is partially unknown (reportUnknownParameterType)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:72:11 - error: Return type is unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/steam.py/examples/discord_integration.py:72:11 - error: Return type, \"Coroutine[Any, Any, Unknown]\", is partially unknown (reportUnknownParameterType)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:447:15 - error: Return type is unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/converters.py:447:15 - error: Return type, \"Coroutine[Any, Any, Unknown]\", is partially unknown (reportUnknownParameterType)\n\n```"
    ],
    "commit_messages": [
      "Fixed bug that led to a confusing hover type for the return result of an async generator function. This addresses #5411. (#5468)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211165ac254a19ac290728",
    "number": 5467,
    "body": null,
    "head_branch": "issue5413",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:37:19 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:37:19 - error: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Unknown | Overload[(__key: str, /) -> (Any | None), (__key: str, __default: Any | _T@get, /) -> (Any | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:38:66 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:38:66 - error: Type of \"get\" is partially unknown\n-     Type of \"get\" is \"Unknown | Overload[(__key: str, /) -> (Any | None), (__key: str, __default: Any | _T@get, /) -> (Any | _T@get)]\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:38:42 - error: Type of \"upper\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/steam.py/scripts/blacken_docs_correctly.py:38:42 - error: Type of \"upper\" is partially unknown\n-     Type of \"upper\" is \"Unknown | Any\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/steam.py/steam/gateway.py:843:55 - error: Operator \"in\" not supported for types \"int\" and \"Iterable[ID64]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:172:62 - error: \"qualified_name\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 8737 errors, 49 warnings, 0 informations \n+ 8733 errors, 49 warnings, 0 informations \n\nkoda-validate (https://github.com/keithasaurus/koda-validate)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/dataclasses.py:146:37 - error: Operator \"in\" not supported for types \"str\" and \"Dict[str, Validator[Any]] | None\"\n+     Operator \"in\" not supported for types \"str\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/dataclasses.py:146:17 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:195:16 - error: Expression of type \"AlwaysValid[Any] | None\" cannot be assigned to return type \"AlwaysValid[A@AlwaysValid]\"\n+     Type \"AlwaysValid[Any] | None\" cannot be assigned to type \"AlwaysValid[A@AlwaysValid]\"\n+       Type \"None\" cannot be assigned to type \"AlwaysValid[A@AlwaysValid]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/generic.py:320:16 - error: Expression of type \"NotBlank[Any] | None\" cannot be assigned to return type \"NotBlank[StrOrBytes@NotBlank]\"\n+     Type \"NotBlank[Any] | None\" cannot be assigned to type \"NotBlank[StrOrBytes@NotBlank]\"\n+       Type \"None\" cannot be assigned to type \"NotBlank[StrOrBytes@NotBlank]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/namedtuple.py:139:37 - error: Operator \"in\" not supported for types \"str\" and \"Dict[str, Validator[Any]] | None\"\n+     Operator \"in\" not supported for types \"str\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/namedtuple.py:139:17 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+ /tmp/mypy_primer/projects/koda-validate/koda_validate/typeddict.py\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/typeddict.py:143:37 - error: Operator \"in\" not supported for types \"str\" and \"Dict[str, Validator[Any]] | None\"\n+     Operator \"in\" not supported for types \"str\" and \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/koda-validate/koda_validate/typeddict.py:143:17 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n- 172 errors, 5 warnings, 0 informations \n+ 180 errors, 5 warnings, 0 informations \n\npydantic (https://github.com/samuelcolvin/pydantic)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:480:62 - error: Argument of type \"JsonSchemaValue | None\" cannot be assigned to parameter \"json_schema\" of type \"JsonSchemaValue\" in function \"populate_defs\"\n+     Type \"JsonSchemaValue | None\" cannot be assigned to type \"JsonSchemaValue\"\n+       Type \"None\" cannot be assigned to type \"JsonSchemaValue\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:481:49 - error: Argument of type \"JsonSchemaValue | None\" cannot be assigned to parameter \"json_schema\" of type \"JsonSchemaValue\" in function \"convert_to_all_of\"\n+     Type \"JsonSchemaValue | None\" cannot be assigned to type \"JsonSchemaValue\"\n+       Type \"None\" cannot be assigned to type \"JsonSchemaValue\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/json_schema.py:482:20 - error: Expression of type \"JsonSchemaValue | None\" cannot be assigned to return type \"JsonSchemaValue\"\n+     Type \"JsonSchemaValue | None\" cannot be assigned to type \"JsonSchemaValue\"\n+       Type \"None\" cannot be assigned to type \"JsonSchemaValue\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/main.py:216:17 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/main.py:253:25 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/main.py:1109:27 - error: \"pop\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/main.py:1112:21 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/pydantic/pydantic/_internal/_generate_schema.py:1314:86 - error: Argument of type \"Iterable[Any]\" cannot be assigned to parameter \"annotations\" of type \"tuple[Any, ...]\" in function \"_get_prepare_pydantic_annotations_for_known_type\"\n+     \"Iterable[Any]\" is incompatible with \"tuple[Any, ...]\" (reportGeneralTypeIssues)\n- 66 errors, 0 warnings, 0 informations \n+ 74 errors, 0 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:454:33 - error: Argument of type \"_ConverterSig[Any] | Sequence[_ConverterSig[Any]]\" cannot be assigned to parameter \"_str_converters\" of type \"Sequence[_ConverterSig[Any]]\" in function \"__init__\"\n+     Type \"_ConverterSig[Any] | Sequence[_ConverterSig[Any]]\" cannot be assigned to type \"Sequence[_ConverterSig[Any]]\"\n+       \"function\" is incompatible with \"Sequence[_ConverterSig[Any]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1551:80 - error: \"_ConverterSig[_T@__getitem__]\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1551:80 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"converter\" in function \"__init__\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1551:80 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"other_converters\" in function \"__init__\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:571:32 - error: Argument of type \"str\" cannot be assigned to parameter \"__s\" of type \"slice\" in function \"__getitem__\"\n+     \"str\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:575:25 - error: Argument of type \"str\" cannot be assigned to parameter \"__key\" of type \"slice\" in function \"__setitem__\"\n+     \"str\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:575:25 - error: Argument of type \"_TreeT\" cannot be assigned to parameter \"__value\" of type \"Iterable[tuple[list[str], MessageCommand[Any]]]\" in function \"__setitem__\"\n+     \"_TreeT\" is incompatible with \"Iterable[tuple[list[str], MessageCommand[Any]]]\"\n+       TypeVar \"_T_co@Iterable\" is covariant\n+         Type \"str | _IndexKeys\" cannot be assigned to type \"tuple[list[str], MessageCommand[Any]]\"\n+           \"_IndexKeys\" is incompatible with \"tuple[list[str], MessageCommand[Any]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:584:32 - error: Argument of type \"Literal[_IndexKeys.COMMANDS]\" cannot be assigned to parameter \"__s\" of type \"slice\" in function \"__getitem__\"\n+     \"Literal[_IndexKeys.COMMANDS]\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:584:21 - warning: Type of \"commands\" is partially unknown\n+     Type of \"commands\" is \"dict[str | _IndexKeys, _TreeT | list[tuple[list[str], MessageCommand[Any]]]] | list[tuple[list[str], MessageCommand[Any]]] | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:588:21 - error: Argument of type \"Literal[_IndexKeys.COMMANDS]\" cannot be assigned to parameter \"__key\" of type \"slice\" in function \"__setitem__\"\n+     \"Literal[_IndexKeys.COMMANDS]\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:652:24 - error: Argument of type \"str\" cannot be assigned to parameter \"__s\" of type \"slice\" in function \"__getitem__\"\n+     \"str\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:715:27 - error: Argument of type \"Literal[_IndexKeys.COMMANDS]\" cannot be assigned to parameter \"__s\" of type \"slice\" in function \"__getitem__\"\n+     \"Literal[_IndexKeys.COMMANDS]\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:702:28 - error: Argument of type \"str\" cannot be assigned to parameter \"__s\" of type \"slice\" in function \"__getitem__\"\n+     \"str\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:715:17 - warning: Type of \"entries\" is partially unknown\n+     Type of \"entries\" is \"dict[str | _IndexKeys, _TreeT | list[tuple[list[str], MessageCommand[Any]]]] | list[tuple[list[str], MessageCommand[Any]]] | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:718:24 - error: Argument of type \"Literal[_IndexKeys.COMMANDS]\" cannot be assigned to parameter \"__s\" of type \"slice\" in function \"__getitem__\"\n+     \"Literal[_IndexKeys.COMMANDS]\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:719:25 - error: Argument of type \"Literal[_IndexKeys.COMMANDS]\" cannot be assigned to parameter \"__key\" of type \"SupportsIndex | slice\" in function \"__delitem__\"\n+     Type \"Literal[_IndexKeys.COMMANDS]\" cannot be assigned to type \"SupportsIndex | slice\"\n+       \"Literal[_IndexKeys.COMMANDS]\" is incompatible with protocol \"SupportsIndex\"\n+         \"__index__\" is not present\n+       \"Literal[_IndexKeys.COMMANDS]\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:727:35 - error: Cannot access member \"get\" for type \"list[tuple[list[str], MessageCommand[Any]]]\"\n+     Member \"get\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:727:30 - warning: Type of \"get\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:727:30 - warning: Type of \"get\" is partially unknown\n+     Type of \"get\" is \"Overload[(__key: str | _IndexKeys, /) -> (dict[str | _IndexKeys, _TreeT | list[tuple[list[str], MessageCommand[Any]]]] | list[tuple[list[str], MessageCommand[Any]]] | None), (__key: str | _IndexKeys, __default: dict[str | _IndexKeys, _TreeT | list[tuple[list[str], MessageCommand[Any]]]] | list[tuple[list[str], MessageCommand[Any]]] | _T@get, /) -> (dict[str | _IndexKeys, _TreeT | list[tuple[list[str], MessageCommand[Any]]]] | list[tuple[list[str], MessageCommand[Any]]] | _T@get)] | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:727:21 - warning: Type of \"parent\" is partially unknown\n+     Type of \"parent\" is \"dict[str | _IndexKeys, _TreeT | list[tuple[list[str], MessageCommand[Any]]]] | list[tuple[list[str], MessageCommand[Any]]] | Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1736:30 - error: \"ConverterSig[float]\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1736:30 - error: \"ConverterSig[int]\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1736:30 - error: \"ConverterSig[str]\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1736:17 - warning: Type of \"converter\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1793:28 - error: Argument of type \"_AnyConverterSig | Sequence[_AnyConverterSig]\" cannot be assigned to parameter \"converters\" of type \"list[_AnyConverterSig] | None\" in function \"__init__\"\n+     Type \"_AnyConverterSig | Sequence[_AnyConverterSig]\" cannot be assigned to type \"list[_AnyConverterSig] | None\"\n+       Type \"Sequence[_AnyConverterSig]\" cannot be assigned to type \"list[_AnyConverterSig] | None\"\n+         \"Sequence[_AnyConverterSig]\" is incompatible with \"list[_AnyConverterSig]\"\n+         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:194:5 - warning: Type of \"command\" is partially unknown\n-     Type of \"command\" is \"Unknown | MessageCommand[Any]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:198:37 - warning: Argument type is partially unknown\n-     Argument corresponds to parameter \"command\" in function \"with_annotated_args\"\n-     Argument type is \"Unknown | MessageCommand[Any]\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:200:12 - warning: Type of \"parser\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:200:12 - warning: Type of \"parser\" is partially unknown\n-     Type of \"parser\" is \"Unknown | MessageParser | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:201:23 - warning: Type of \"wrapped_command\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:201:23 - warning: Type of \"wrapped_command\" is partially unknown\n-     Type of \"wrapped_command\" is \"Unknown | ExecutableCommand[Any] | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:202:12 - warning: Type of \"wrapped_command\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:202:12 - warning: Type of \"wrapped_command\" is partially unknown\n-     Type of \"wrapped_command\" is \"Unknown | ExecutableCommand[Any] | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:203:12 - warning: Type of \"wrapped_command\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:203:12 - warning: Type of \"wrapped_command\" is partially unknown\n-     Type of \"wrapped_command\" is \"Unknown | ExecutableCommand[Any] | None\" (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:210:5 - warning: Type of \"command\" is partially unknown\n-     Type of \"command\" is \"Unknown | MessageCommand[Any]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/test_annotations.py:214:37 - warning: Argument type is partially unknown\n-     Argument corresponds to parameter \"command\" in function \"with_annotated_args\"\n\n... (truncated 61 lines) ...\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+ /tmp/mypy_primer/projects/freqtrade/freqtrade/configuration/configuration.py\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/configuration/configuration.py:44:16 - error: Expression of type \"Config | None\" cannot be assigned to return type \"Config\"\n+     Type \"Config | None\" cannot be assigned to type \"Config\"\n+       Type \"None\" cannot be assigned to type \"Config\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py:43:23 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py:47:25 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py:49:35 - error: Argument of type \"Config | None\" cannot be assigned to parameter \"config\" of type \"Config\" in function \"_load_strategy\"\n+     Type \"Config | None\" cannot be assigned to type \"Config\"\n+       Type \"None\" cannot be assigned to type \"Config\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py:50:30 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py:82:67 - error: Argument of type \"Config | None\" cannot be assigned to parameter \"config\" of type \"Config\" in function \"_override_attribute_helper\"\n+     Type \"Config | None\" cannot be assigned to type \"Config\"\n+       Type \"None\" cannot be assigned to type \"Config\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/resolvers/strategy_resolver.py:88:65 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n- 759 errors, 54 warnings, 0 informations \n+ 766 errors, 54 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/ops/charm.py\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1295:26 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1296:32 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1297:31 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/operator/ops/charm.py:1298:29 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:1568:81 - error: Argument of type \"Dict[str, Any] | None\" cannot be assigned to parameter \"headers\" of type \"MutableMapping[str, str]\" in function \"__init__\"\n+     Type \"Dict[str, Any] | None\" cannot be assigned to type \"MutableMapping[str, str]\"\n+       Type \"None\" cannot be assigned to type \"MutableMapping[str, str]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/operator/ops/testing.py\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1685:53 - error: \"name\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 3 errors, 0 warnings, 0 informations \n+ 9 errors, 0 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:78:31 - error: Type of \"extra\" is partially unknown\n-     Type of \"extra\" is \"Any | Unknown\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:78:69 - error: Argument type is partially unknown\n-     Argument corresponds to parameter \"x\" in function \"_is_dependency\"\n-     Argument type is \"Any | Unknown\" (reportUnknownArgumentType)\n-     Type of \"methods\" is \"dict[str, ((...) -> Any) | staticmethod[Any, Unknown] | classmethod[Any, (...), Unknown]]\" (reportUnknownVariableType)\n+     Type of \"methods\" is \"Dict[str, ((...) -> Any) | staticmethod[Any, Unknown] | classmethod[Any, (...), Unknown]]\" (reportUnknownVariableType)\n-     Type of \"methods\" is \"dict[str, ((...) -> Any) | staticmethod[Any, Unknown] | classmethod[Any, (...), Unknown]]\" (reportUnknownVariableType)\n+     Type of \"methods\" is \"Dict[str, ((...) -> Any) | staticmethod[Any, Unknown] | classmethod[Any, (...), Unknown]]\" (reportUnknownVariableType)\n- 4272 errors, 76 warnings, 0 informations \n+ 4270 errors, 76 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:127:27 - error: Argument of type \"Dict[Any, Unknown] | None\" cannot be assigned to parameter \"column_dict\" of type \"dict[Any, Unknown]\" in function \"_validate_columns\"\n+     Type \"Dict[Any, Unknown] | None\" cannot be assigned to type \"dict[Any, Unknown]\"\n+       Type \"None\" cannot be assigned to type \"dict[Any, Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:128:36 - error: Argument of type \"Dict[Any, Unknown] | None\" cannot be assigned to parameter \"columns\" of type \"dict[Any, Unknown]\" in function \"_columns_renamed\"\n+     Type \"Dict[Any, Unknown] | None\" cannot be assigned to type \"dict[Any, Unknown]\"\n+       Type \"None\" cannot be assigned to type \"dict[Any, Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/model_components.py:268:12 - error: Expression of type \"tuple[AnyCallable | classmethod[Unknown, (...), Unknown], classmethod[Unknown, (...), Unknown] | classmethod[Any, (), Any]]\" cannot be assigned to return type \"Tuple[AnyCallable, classmethod[Unknown, (...), Unknown]]\"\n+     Type \"AnyCallable | classmethod[Unknown, (...), Unknown]\" cannot be assigned to type \"AnyCallable\"\n+       Type \"classmethod[Unknown, (...), Unknown]\" cannot be assigned to type \"AnyCallable\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/container.py:116:27 - error: Argument of type \"Dict[Any, Unknown] | None\" cannot be assigned to parameter \"column_dict\" of type \"dict[Any, Unknown]\" in function \"_validate_columns\"\n+     Type \"Dict[Any, Unknown] | None\" cannot be assigned to type \"dict[Any, Unknown]\"\n+       Type \"None\" cannot be assigned to type \"dict[Any, Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/container.py:117:36 - error: Argument of type \"Dict[Any, Unknown] | None\" cannot be assigned to parameter \"columns\" of type \"dict[Any, Unknown]\" in function \"_columns_renamed\"\n+     Type \"Dict[Any, Unknown] | None\" cannot be assigned to type \"dict[Any, Unknown]\"\n+       Type \"None\" cannot be assigned to type \"dict[Any, Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pyspark/model_components.py:244:12 - error: Expression of type \"tuple[AnyCallable | classmethod[Unknown, (...), Unknown], classmethod[Unknown, (...), Unknown] | classmethod[Any, (), Any]]\" cannot be assigned to return type \"Tuple[AnyCallable, classmethod[Unknown, (...), Unknown]]\"\n+     Type \"AnyCallable | classmethod[Unknown, (...), Unknown]\" cannot be assigned to type \"AnyCallable\"\n+       Type \"classmethod[Unknown, (...), Unknown]\" cannot be assigned to type \"AnyCallable\" (reportGeneralTypeIssues)\n- 1041 errors, 10 warnings, 0 informations \n+ 1047 errors, 10 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1615:24 - error: Object of type \"None\" cannot be used as iterable value (reportOptionalIterable)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1615:24 - error: \"Builds[((...) -> Any) -> ((...) -> Any)]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1615:24 - error: \"ZenPartialBuilds[((...) -> Any) -> ((...) -> Any)]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1615:24 - error: \"HydraPartialBuilds[((...) -> Any) -> ((...) -> Any)]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1615:24 - error: \"Just[((...) -> Any) -> ((...) -> Any)]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1615:24 - error: \"type[Builds[((...) -> Any) -> ((...) -> Any)]]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1615:24 - error: \"type[ZenPartialBuilds[((...) -> Any) -> ((...) -> Any)]]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1615:24 - error: \"type[HydraPartialBuilds[((...) -> Any) -> ((...) -> Any)]]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1615:24 - error: \"type[Just[((...) -> Any) -> ((...) -> Any)]]\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1615:24 - error: \"((...) -> Any) -> ((...) -> Any)\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1631:40 - error: Cannot access member \"append\" for type \"Sequence[str | Builds[Any]]\"\n+     Member \"append\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1639:40 - error: Cannot access member \"append\" for type \"Sequence[str | Builds[Any]]\"\n+     Member \"append\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1642:36 - error: Cannot access member \"append\" for type \"Sequence[str | Builds[Any]]\"\n+     Member \"append\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_implementations.py:1649:36 - error: Cannot access member \"append\" for type \"Sequence[str | Builds[Any]]\"\n+     Member \"append\" is unknown (reportGeneralTypeIssues)\n- 182 errors, 0 warnings, 0 informations \n+ 196 errors, 0 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/file.py\n+   /tmp/mypy_primer/projects/discord.py/discord/file.py:114:59 - error: Argument of type \"str | None\" cannot be assigned to parameter \"filename\" of type \"str\" in function \"_strip_spoiler\"\n+     Type \"str | None\" cannot be assigned to type \"str\"\n+       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:715:46 - error: \"get\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/discord.py/discord/http.py:695:50 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/discord.py/discord/utils.py:1175:62 - error: Argument of type \"Dict[str, Any] | None\" cannot be assigned to parameter \"cache\" of type \"Dict[str, Any]\" in function \"evaluate_annotation\"\n+     Type \"Dict[str, Any] | None\" cannot be assigned to type \"Dict[str, Any]\"\n+       Type \"None\" cannot be assigned to type \"Dict[str, Any]\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:464:106 - warning: Unnecessary \"# type: ignore\" comment\n+ /tmp/mypy_primer/projects/discord.py/discord/ext/commands/hybrid.py\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/hybrid.py:541:30 - error: \"wrapped\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:562:9 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:566:13 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:568:13 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:572:13 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:574:13 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:578:13 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:580:13 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:583:9 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:587:13 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/discord.py/discord/webhook/async_.py:589:13 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n\n... (truncated 41 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211166ac254a19ac290729",
    "number": 5466,
    "body": "…used as keys or values within a dictionary expression. This addresses #5422.",
    "head_branch": "issue5422",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1008:26 - error: Expression of type \"dict[str, RPCMessageType | str | float | datetime | bool | None]\" cannot be assigned to declared type \"RPCBuyMsg\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1008:26 - error: Expression of type \"dict[str, RPCMessageType | Unknown | str | float | Any | datetime | bool | None]\" cannot be assigned to declared type \"RPCBuyMsg\"\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1041:29 - error: Expression of type \"dict[str, RPCMessageType | str | float | bool | None]\" cannot be assigned to declared type \"RPCCancelMsg\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1041:29 - error: Expression of type \"dict[str, RPCMessageType | Unknown | str | Any | float | bool | None]\" cannot be assigned to declared type \"RPCCancelMsg\"\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1730:27 - error: Expression of type \"dict[str, RPCMessageType | str | float | datetime | bool | None]\" cannot be assigned to declared type \"RPCSellMsg\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1730:27 - error: Expression of type \"dict[str, RPCMessageType | Unknown | str | float | datetime | Any | bool | None]\" cannot be assigned to declared type \"RPCSellMsg\"\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1785:33 - error: Expression of type \"dict[str, RPCMessageType | str | float | datetime | bool | None]\" cannot be assigned to declared type \"RPCSellCancelMsg\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1785:33 - error: Expression of type \"dict[str, RPCMessageType | Unknown | str | float | int | datetime | Any | bool | None]\" cannot be assigned to declared type \"RPCSellCancelMsg\"\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:1224:50 - error: Expression of type \"dict[str, Any] | dict[Unknown | None, Any]\" cannot be assigned to declared type \"Dict[str, Any]\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:1224:50 - error: Expression of type \"dict[str, Any] | dict[Unknown | None, Index | Unknown]\" cannot be assigned to declared type \"Dict[str, Any]\"\n-     Type \"dict[str, Any] | dict[Unknown | None, Any]\" cannot be assigned to type \"Dict[str, Any]\"\n+     Type \"dict[str, Any] | dict[Unknown | None, Index | Unknown]\" cannot be assigned to type \"Dict[str, Any]\"\n-       \"dict[Unknown | None, Any]\" is incompatible with \"Dict[str, Any]\"\n+       \"dict[Unknown | None, Index | Unknown]\" is incompatible with \"Dict[str, Any]\"\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:151:24 - error: Argument of type \"dict[str, Text | Unknown | int]\" cannot be assigned to parameter \"tags\" of type \"_MetaDictType\" in function \"set_tags\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:151:24 - error: Argument of type \"dict[str, Unknown | int]\" cannot be assigned to parameter \"tags\" of type \"_MetaDictType\" in function \"set_tags\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:205:28 - error: Argument of type \"dict[str, Text | Unknown | int]\" cannot be assigned to parameter \"tags\" of type \"_MetaDictType\" in function \"set_tags\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:205:28 - error: Argument of type \"dict[str, Unknown | int]\" cannot be assigned to parameter \"tags\" of type \"_MetaDictType\" in function \"set_tags\"\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in incorrect hover results for identifiers used as keys or values within a dictionary expression. This addresses #5422. (#5466)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211167ac254a19ac29072a",
    "number": 5465,
    "body": "…guage keyword. Also added minimal support for the `rename` parameter to the `namedtuple` function. This addresses #5423.",
    "head_branch": "issue5423",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon)\n+   /tmp/mypy_primer/projects/alectryon/alectryon/core.py:62:39 - error: Field names cannot be a keyword\n- 14 errors, 37 warnings, 0 informations \n+ 15 errors, 37 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_common.py:226:46 - error: Field names cannot be a keyword\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_common.py:185:46 - error: Field names cannot be a keyword\n- 8054 errors, 423 warnings, 0 informations \n+ 8056 errors, 423 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211168ac254a19ac29072b",
    "number": 5464,
    "body": "…supports `==` and `!=` with values that are unions of literal types. This addresses #5435.",
    "head_branch": "issue5435",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Extended support for TypedDict discrimination by literal field so it supports `==` and `!=` with values that are unions of literal types. This addresses #5435. (#5464)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211168ac254a19ac29072c",
    "number": 5463,
    "body": "…clude\" directives end in \".py\" or \".pyi\". This addresses #5441.",
    "head_branch": "issue5441",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.33x faster (56.7s -> 42.5s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Removed limitation that files specified on the command line or in \"include\" directives end in \".py\" or \".pyi\". This addresses #5441. (#5463)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211169ac254a19ac29072d",
    "number": 5462,
    "body": "…ich resulted in a false positive error when using strict mode. This addresses #5452.",
    "head_branch": "issue5452",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed recent regression in the synthesized TypedDict `get` method, which resulted in a false positive error when using strict mode. This addresses #5452. (#5462)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621116aac254a19ac29072e",
    "number": 5461,
    "body": null,
    "head_branch": "issue5453-5454",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Issue5453 5454 (#5461)\n\n* Fixed bug that resulted in false positive error when calling the same generic function with a ParamSpec multiple times as separate arguments within a call expression. This addresses #5453.\r\n\r\n* Fixed another ParamSpec-related issue. This addresses #5454.\r\n\r\n---------\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621116bac254a19ac29072f",
    "number": 5460,
    "body": "… unpacked tuple operation. This addresses #5458.",
    "head_branch": "issue5458",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added special-case support for enum fields that are assigned using an unpacked tuple operation. This addresses #5458. (#5460)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621116cac254a19ac290730",
    "number": 5457,
    "body": "Trying out an impl for https://github.com/microsoft/pyright/issues/5446.\r\n\r\nRequires a pull of the latest typeshed.",
    "head_branch": "hashbrowns",
    "is_a_fork": true,
    "comments": [
      "@microsoft-github-policy-service agree",
      "As discussed in the linked issue, this implementation doesn't match the CPython implementation, so I'm going to close it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621116dac254a19ac290731",
    "number": 5420,
    "body": "Temporary and hopefully inoffensive fix for https://github.com/microsoft/pyright/issues/5415. It would be better to pipe through `configOptions.exclude` but that's al arger change. ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Better to fix https://github.com/RobertCraigie/pyright-python/issues/191"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621116eac254a19ac290732",
    "number": 5401,
    "body": "rollup of the following changes:\r\n\r\nHere's the list of changes to include:\r\n    https://github.com/microsoft/pyrx/commit/6d83e146e412424e83168940f9046b0745bdf94d make sure we have pyrightFileSystem wrapping any given file system. https://github.com/microsoft/pyrx/pull/3795\r\n    https://github.com/microsoft/pyrx/commit/306646932f8581842ff65b574d449f65da7cdf48 Fixed importedBy using staled dependency graph https://github.com/microsoft/pyrx/pull/3785\r\n    https://github.com/microsoft/pyrx/commit/816ae37347669f5d395c261ebae233001b747a90 Fix vscode.dev to be able to read from the workspace too https://github.com/microsoft/pyrx/pull/3787\r\n    https://github.com/microsoft/pyrx/commit/cb326cb5d3b7ec71d37ec85778111e5494a98fed Next stage in sync server https://github.com/microsoft/pyrx/pull/3772",
    "head_branch": "pull-pylance-with-pyright-1.1.316",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.316 (#5401)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621116fac254a19ac290733",
    "number": 5389,
    "body": "PS C:\\Python Programing> & C:/Users/95sau/AppData/Local/Microsoft/WindowsApps/python3.11.exe \"c:/Python Programing/Traffic singal detection.py\" Traceback (most recent call last):\r\n  File \"c:\\Python Programing\\Traffic singal detection.py\", line 2, in <module>\r\n    from PIL import Image, ImageTk\r\nModuleNotFoundError: No module named 'PIL'\r\nPS C:\\Python Programing>",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Looks like you created a PR against pyright accidentally."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211170ac254a19ac290734",
    "number": 5383,
    "body": null,
    "head_branch": "protocolCache",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+         Type \"ReadableBuffer\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n-         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n-           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n-             \"__buffer__\" is not present (reportGeneralTypeIssues)\n+         Type \"ReadableBuffer\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n-         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n-           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n-             \"__buffer__\" is not present (reportGeneralTypeIssues)\n+         Type \"ReadableBuffer\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n-         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n-           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n-             \"__buffer__\" is not present (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211171ac254a19ac290735",
    "number": 5381,
    "body": "…lled its own constructor using its own type parameters as type arguments. This partially addresses https://github.com/microsoft/pyright/issues/5373.",
    "head_branch": "issue5373-1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/game_server.py:254:20 - error: Expression of type \"Query[T_co@Query]\" cannot be assigned to return type \"Q\"\n+     \"Query[T_co@Query]\" is incompatible with \"Q\"\n+       TypeVar \"T_co@Query\" is covariant\n+         \"object*\" is incompatible with \"Q\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/game_server.py:259:16 - error: Expression of type \"Query[T_co@Query]\" cannot be assigned to return type \"Q\"\n+     \"Query[T_co@Query]\" is incompatible with \"Q\"\n+       TypeVar \"T_co@Query\" is covariant\n+         \"object*\" is incompatible with \"Q\" (reportGeneralTypeIssues)\n- 8735 errors, 49 warnings, 0 informations \n+ 8737 errors, 49 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false negative when a generic class with called its own constructor using its own type parameters as type arguments. This partially addresses https://github.com/microsoft/pyright/issues/5373. (#5381)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211171ac254a19ac290736",
    "number": 5379,
    "body": "…ion out of the comprehension scope to better reflect runtime behavior.",
    "head_branch": "comprehensionBinding",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nmaterialize (https://github.com/MaterializeInc/materialize)\n-   /tmp/mypy_primer/projects/materialize/misc/python/materialize/scratch.py:102:31 - error: \"tags\" is unbound (reportUnboundVariable)\n- 199 errors, 58 warnings, 0 informations \n+ 198 errors, 58 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Moved the evaluation of the first iterator in a comprehension expression out of the comprehension scope to better reflect runtime behavior. (#5379)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211172ac254a19ac290737",
    "number": 5378,
    "body": "… be evaluated at a later time than where they are defined. This partially addresses https://github.com/microsoft/pyright/issues/5376.",
    "head_branch": "issue5376",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/colify.py:72:18 - error: \"configs\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:736:26 - error: \"pkg_name\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:736:36 - error: \"s\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:737:46 - error: \"filename\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:738:20 - error: \"dependency_pkg_cls\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:741:29 - error: \"s\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:741:59 - error: \"dependency_pkg_cls\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:744:17 - error: \"errors\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:744:31 - error: \"error_cls\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1103:44 - error: \"key_prefix\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/binary_distribution.py:1110:69 - error: \"key_prefix\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:521:46 - error: \"other_compiler\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:521:62 - error: \"spec\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:570:20 - error: \"ret\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/concretize.py:578:16 - error: \"ret\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1647:64 - error: \"pkg\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/package_prefs.py:153:91 - error: Cannot access member \"variants\" for type \"str\"\n+     Member \"variants\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:1637:76 - error: \"spec\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4142:60 - error: \"name\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4142:66 - error: \"self\" is possibly unbound (reportUnboundVariable)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/version.py:846:38 - error: Argument of type \"ConcreteVersion | ClosedOpenRange\" cannot be assigned to parameter \"other\" of type \"ClosedOpenRange | StandardVersion | GitVersion | VersionList\" in function \"satisfies\"\n-     Type \"ConcreteVersion | ClosedOpenRange\" cannot be assigned to type \"ClosedOpenRange | StandardVersion | GitVersion | VersionList\"\n-       Type \"ConcreteVersion\" cannot be assigned to type \"ClosedOpenRange | StandardVersion | GitVersion | VersionList\"\n-         \"ConcreteVersion\" is incompatible with \"ClosedOpenRange\"\n-         \"ConcreteVersion\" is incompatible with \"StandardVersion\"\n-         \"ConcreteVersion\" is incompatible with \"GitVersion\"\n-         \"ConcreteVersion\" is incompatible with \"VersionList\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/uninstall.py:167:72 - error: \"name\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:2222:86 - error: \"path\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/util/web.py:635:27 - error: \"url\" is possibly unbound (reportUnboundVariable)\n- 3397 errors, 49 warnings, 0 informations \n+ 3419 errors, 49 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/base_models/FreqaiMultiOutputClassifier.py:62:62 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqai/base_models/FreqaiMultiOutputRegressor.py:54:62 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n- 762 errors, 54 warnings, 0 informations \n+ 764 errors, 54 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/components.py:1398:45 - error: \"injector\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/components.py:1411:45 - error: \"injector\" is not a known member of \"None\" (reportOptionalMemberAccess)\n- 2053 errors, 9912 warnings, 0 informations \n+ 2055 errors, 9912 warnings, 0 informations \n\nmkosi (https://github.com/systemd/mkosi)\n+ /tmp/mypy_primer/projects/mkosi/mkosi/run.py\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:359:58 - error: \"Unbound\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:359:58 - error: \"cmd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:361:22 - error: \"Unbound\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:361:23 - error: \"cmdline\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:361:32 - error: \"template\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:361:90 - error: \"env\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:428:58 - error: \"Unbound\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:428:58 - error: \"cmd\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:430:22 - error: \"Unbound\" is not iterable (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:430:23 - error: \"cmdline\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:430:32 - error: \"template\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:430:90 - error: \"env\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:433:16 - error: \"tmp\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:434:17 - error: \"resolve\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:435:29 - error: \"tmp\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/mkosi/mkosi/run.py:435:34 - error: \"resolve\" is possibly unbound (reportUnboundVariable)\n- 2 errors, 0 warnings, 0 informations \n+ 18 errors, 0 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+   /tmp/mypy_primer/projects/discord.py/discord/abc.py:1167:79 - error: \"id\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+   /tmp/mypy_primer/projects/discord.py/discord/abc.py:1169:82 - error: \"id\" is not a known member of \"None\" (reportOptionalMemberAccess)\n+ /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py:278:30 - error: Cannot access member \"get_role\" for type \"User\"\n+     Member \"get_role\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/app_commands/checks.py:280:45 - error: Cannot access member \"roles\" for type \"User\"\n+     Member \"roles\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:1290:13 - error: \"ctx\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/discord.py/discord/ext/commands/core.py:1290:27 - error: \"original\" is possibly unbound (reportUnboundVariable)\n- 47 errors, 18 warnings, 0 informations \n+ 53 errors, 18 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/pymemcache/client.py:350:13 - error: \"span\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/ext/sql.py:45:12 - error: \"dsn_dict\" is possibly unbound (reportUnboundVariable)\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/internal/test_safety.py:84:31 - error: Object of type \"None\" is not subscriptable (reportOptionalSubscript)\n- 8003 errors, 423 warnings, 0 informations \n+ 8006 errors, 423 warnings, 0 informations \n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:196:27 - error: Argument of type \"str\" cannot be assigned to parameter \"index\" of type \"slice\" in function \"__getitem__\"\n+     \"str\" is incompatible with \"slice\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:196:27 - error: \"__getitem__\" method not defined on type \"int\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:196:27 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"__iterable\" in function \"__new__\"\n+     Argument type is \"Generator[Unknown | int, None, None]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:196:13 - warning: Type of \"shape\" is partially unknown\n+     Type of \"shape\" is \"tuple[Unknown | int, ...]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/dataarray.py:198:45 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"__p0\"\n+     Argument type is \"tuple[Unknown | int, ...] | Sequence[int] | int\" (reportUnknownArgumentType)\n- 46 errors, 181 warnings, 0 informations \n+ 48 errors, 184 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n-   /tmp/mypy_primer/projects/materialize/misc/python/materialize/scratch.py:102:31 - error: \"tags\" is unbound (reportUnboundVariable)\n- 199 errors, 58 warnings, 0 informations \n+ 198 errors, 58 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211173ac254a19ac290738",
    "number": 5372,
    "body": "… assign a class to a `Callable` type when the class is generic and the constructor includes class-scoped type variables in its parameter annotations. This addresses https://github.com/microsoft/pyright/issues/5369.",
    "head_branch": "issue5369",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that results in a false positive error when attempting to assign a class to a `Callable` type when the class is generic and the constructor includes class-scoped type variables in its parameter annotations. This addresses https://github.com/microsoft/pyright/issues/5369. (#5372)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211174ac254a19ac290739",
    "number": 5371,
    "body": "… class type compatibility.",
    "head_branch": "opt1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Removed some unnecessary code in the code path for comparing generic class types for type compatibility."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211175ac254a19ac29073a",
    "number": 5365,
    "body": "…classes so it more closely matches the signature (and therefore the behavior) of the `get` method in `dict`. This addresses https://github.com/microsoft/pyright/issues/5364.",
    "head_branch": "issue5364",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-     Type of \"get\" is \"Overload[(k: Literal['appid']) -> str, (k: Literal['appid'], default: Any) -> str, (k: Literal['common']) -> Common, (k: Literal['common'], default: Any) -> Common, (k: Literal['extended']) -> (Extended | None), (k: Literal['extended'], default: Extended) -> Extended, (k: Literal['extended'], default: __TDefault@AppInfo) -> (Extended | __TDefault@AppInfo), (k: Literal['config']) -> Unknown, (k: Literal['config'], default: Any) -> Unknown, (k: Literal['depots']) -> (Depot | Unknown), (k: Literal['depots'], default: Any) -> (Depot | Unknown), (k: Literal['ufs']) -> Unknown, (k: Literal['ufs'], default: Any) -> Unknown, (k: Literal['sysreqs']) -> Unknown, (k: Literal['sysreqs'], default: Any) -> Unknown, (k: Literal['localization']) -> Unknown, (k: Literal['localization'], default: Any) -> Unknown, (k: str) -> (Any | None), (k: str, default: __TDefault@AppInfo) -> (Any | __TDefault@AppInfo)]\" (reportUnknownMemberType)\n+     Type of \"get\" is \"Overload[(k: Literal['appid']) -> str, (k: Literal['appid'], default: Any) -> str, (k: Literal['common']) -> Common, (k: Literal['common'], default: Any) -> Common, (k: Literal['extended']) -> (Extended | None), (k: Literal['extended'], default: Extended | __TDefault@AppInfo) -> (Extended | __TDefault@AppInfo), (k: Literal['config']) -> Unknown, (k: Literal['config'], default: Any) -> Unknown, (k: Literal['depots']) -> (Depot | Unknown), (k: Literal['depots'], default: Any) -> (Depot | Unknown), (k: Literal['ufs']) -> Unknown, (k: Literal['ufs'], default: Any) -> Unknown, (k: Literal['sysreqs']) -> Unknown, (k: Literal['sysreqs'], default: Any) -> Unknown, (k: Literal['localization']) -> Unknown, (k: Literal['localization'], default: Any) -> Unknown, (k: str) -> (Any | None), (k: str, default: Any | __TDefault@AppInfo) -> (Any | __TDefault@AppInfo)]\" (reportUnknownMemberType)\n-     Type of \"get\" is \"Overload[(k: Literal['name']) -> str, (k: Literal['name'], default: Any) -> str, (k: Literal['type']) -> str, (k: Literal['type'], default: Any) -> str, (k: Literal['has_adult_content']) -> (Literal['0', '1'] | None), (k: Literal['has_adult_content'], default: Literal['0', '1']) -> Literal['0', '1'], (k: Literal['has_adult_content'], default: __TDefault@Common) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['has_adult_content_violence']) -> (Literal['0', '1'] | None), (k: Literal['has_adult_content_violence'], default: Literal['0', '1']) -> Literal['0', '1'], (k: Literal['has_adult_content_violence'], default: __TDefault@Common) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['market_presence']) -> (Literal['0', '1'] | None), (k: Literal['market_presence'], default: Literal['0', '1']) -> Literal['0', '1'], (k: Literal['market_presence'], default: __TDefault@Common) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['workshop_visible']) -> (Literal['0', '1'] | None), (k: Literal['workshop_visible'], default: Literal['0', '1']) -> Literal['0', '1'], (k: Literal['workshop_visible'], default: __TDefault@Common) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['community_hub_visible']) -> (Literal['0', '1'] | None), (k: Literal['community_hub_visible'], default: Literal['0', '1']) -> Literal['0', '1'], (k: Literal['community_hub_visible'], default: __TDefault@Common) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['community_visible_stats']) -> (Literal['0', '1'] | None), (k: Literal['community_visible_stats'], default: Literal['0', '1']) -> Literal['0', '1'], (k: Literal['community_visible_stats'], default: __TDefault@Common) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['controller_support']) -> (Literal['full', 'partial', 'none'] | None), (k: Literal['controller_support'], default: Literal['full', 'partial', 'none']) -> Literal['full', 'partial', 'none'], (k: Literal['controller_support'], default: __TDefault@Common) -> (__TDefault@Common | Literal['full', 'partial', 'none']), (k: Literal['associations']) -> (VDFList | None), (k: Literal['associations'], default: VDFList) -> VDFList, (k: Literal['associations'], default: __TDefault@Common) -> (VDFList | __TDefault@Common), (k: Literal['languages']) -> (Unknown | None), (k: Literal['languages'], default: Unknown) -> Unknown, (k: Literal['languages'], default: __TDefault@Common) -> (Unknown | __TDefault@Common), (k: Literal['steam_release_date']) -> (str | None), (k: Literal['steam_release_date'], default: str) -> str, (k: Literal['steam_release_date'], default: __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['review_score']) -> (str | None), (k: Literal['review_score'], default: str) -> str, (k: Literal['review_score'], default: __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['review_percentage']) -> (str | None), (k: Literal['review_percentage'], default: str) -> str, (k: Literal['review_percentage'], default: __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['oslist']) -> (str | None), (k: Literal['oslist'], default: str) -> str, (k: Literal['oslist'], default: __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['icon']) -> (str | None), (k: Literal['icon'], default: str) -> str, (k: Literal['icon'], default: __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['logo']) -> (str | None), (k: Literal['logo'], default: str) -> str, (k: Literal['logo'], default: __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['parent']) -> (int | None), (k: Literal['parent'], default: int) -> int, (k: Literal['parent'], default: __TDefault@Common) -> (int | __TDefault@Common), (k: str) -> (Any | None), (k: str, default: __TDefault@Common) -> (Any | __TDefault@Common)]\" (reportUnknownMemberType)\n+     Type of \"get\" is \"Overload[(k: Literal['name']) -> str, (k: Literal['name'], default: Any) -> str, (k: Literal['type']) -> str, (k: Literal['type'], default: Any) -> str, (k: Literal['has_adult_content']) -> (Literal['0', '1'] | None), (k: Literal['has_adult_content'], default: __TDefault@Common | Literal['0', '1']) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['has_adult_content_violence']) -> (Literal['0', '1'] | None), (k: Literal['has_adult_content_violence'], default: __TDefault@Common | Literal['0', '1']) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['market_presence']) -> (Literal['0', '1'] | None), (k: Literal['market_presence'], default: __TDefault@Common | Literal['0', '1']) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['workshop_visible']) -> (Literal['0', '1'] | None), (k: Literal['workshop_visible'], default: __TDefault@Common | Literal['0', '1']) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['community_hub_visible']) -> (Literal['0', '1'] | None), (k: Literal['community_hub_visible'], default: __TDefault@Common | Literal['0', '1']) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['community_visible_stats']) -> (Literal['0', '1'] | None), (k: Literal['community_visible_stats'], default: __TDefault@Common | Literal['0', '1']) -> (__TDefault@Common | Literal['0', '1']), (k: Literal['controller_support']) -> (Literal['full', 'partial', 'none'] | None), (k: Literal['controller_support'], default: __TDefault@Common | Literal['full', 'partial', 'none']) -> (__TDefault@Common | Literal['full', 'partial', 'none']), (k: Literal['associations']) -> (VDFList | None), (k: Literal['associations'], default: VDFList | __TDefault@Common) -> (VDFList | __TDefault@Common), (k: Literal['languages']) -> (Unknown | None), (k: Literal['languages'], default: Unknown | __TDefault@Common) -> (Unknown | __TDefault@Common), (k: Literal['steam_release_date']) -> (str | None), (k: Literal['steam_release_date'], default: str | __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['review_score']) -> (str | None), (k: Literal['review_score'], default: str | __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['review_percentage']) -> (str | None), (k: Literal['review_percentage'], default: str | __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['oslist']) -> (str | None), (k: Literal['oslist'], default: str | __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['icon']) -> (str | None), (k: Literal['icon'], default: str | __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['logo']) -> (str | None), (k: Literal['logo'], default: str | __TDefault@Common) -> (str | __TDefault@Common), (k: Literal['parent']) -> (int | None), (k: Literal['parent'], default: int | __TDefault@Common) -> (int | __TDefault@Common), (k: str) -> (Any | None), (k: str, default: Any | __TDefault@Common) -> (Any | __TDefault@Common)]\" (reportUnknownMemberType)\n\n... (truncated 42 lines) ...\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-   /tmp/mypy_primer/projects/discord.py/discord/automod.py:253:64 - error: Argument of type \"Any | List[AutoModerationTriggerPresets] | list[Unknown]\" cannot be assigned to parameter \"value\" of type \"List[int]\" in function \"_from_value\"\n+   /tmp/mypy_primer/projects/discord.py/discord/automod.py:253:64 - error: Argument of type \"Any | list[int] | List[AutoModerationTriggerPresets]\" cannot be assigned to parameter \"value\" of type \"List[int]\" in function \"_from_value\"\n-     Type \"Any | List[AutoModerationTriggerPresets] | list[Unknown]\" cannot be assigned to type \"List[int]\"\n+     Type \"Any | list[int] | List[AutoModerationTriggerPresets]\" cannot be assigned to type \"List[int]\"\n\n```"
    ],
    "commit_messages": [
      "Modified the signature of the synthesized `get` method for TypedDict classes so it more closely matches the signature (and therefore the behavior) of the `get` method in `dict`. This addresses https://github.com/microsoft/pyright/issues/5364. (#5365)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211176ac254a19ac29073b",
    "number": 5363,
    "body": "… the `defaultdict` constructor. If an unspecialized class type is used as a upper or lower constraint within the constraint solver, we now use default type arguments (typically `Unknown`) rather than leaving these type arguments unspecified. This addresses https://github.com/microsoft/pyright/issues/5354.",
    "head_branch": "issue5354",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:110:35 - error: Argument of type \"Unknown\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"Unknown\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:236:28 - error: Cannot access member \"_start_mark\" for type \"object*\"\n-     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:352:47 - error: Argument of type \"tuple[type, Any]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"tuple[type, Any]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:363:42 - error: \"__getitem__\" method not defined on type \"object*\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:3154:34 - error: Argument of type \"tuple[Unknown, Unknown] | Unknown\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"tuple[Unknown, Unknown] | Unknown\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4546:29 - error: Cannot access member \"spec\" for type \"object*\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4575:39 - error: Cannot access member \"deptypes\" for type \"object*\"\n-     Member \"deptypes\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:332:33 - error: Argument of type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:346:33 - error: Argument of type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:307:18 - error: Cannot access member \"prefix\" for type \"object*\"\n-     Member \"prefix\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:305:15 - error: Cannot access member \"spec\" for type \"object*\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/__init__.py:461:47 - error: Cannot access member \"spec\" for type \"object*\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/__init__.py:461:65 - error: Cannot access member \"spec\" for type \"object*\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/arch.py:72:29 - error: Cannot access member \"family\" for type \"object*\"\n-     Member \"family\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/arch.py:78:55 - error: Cannot access member \"ancestors\" for type \"object*\"\n-     Member \"ancestors\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:164:28 - error: Argument of type \"tuple[Unknown, ...]\" cannot be assigned to parameter \"__element\" of type \"_T@set\" in function \"add\"\n-     Type \"tuple[Unknown, ...]\" cannot be assigned to type \"_T@set\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/modules/__init__.py:328:55 - error: Cannot access member \"spec\" for type \"object*\"\n-     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:186:53 - error: Argument of type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[_T@set] | list[set[_T@set]]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:186:53 - error: Argument of type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[Unknown] | list[set[Unknown]]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n-     Type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[_T@set] | list[set[_T@set]]\" cannot be assigned to type \"Iterable[str]\"\n+     Type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[Unknown] | list[set[Unknown]]\" cannot be assigned to type \"Iterable[str]\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:223:49 - error: Argument of type \"DetectedPackage\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"DetectedPackage\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:285:53 - error: Argument of type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[_T@set] | list[set[_T@set]]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:285:53 - error: Argument of type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[Unknown] | list[set[Unknown]]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n-     Type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[_T@set] | list[set[_T@set]]\" cannot be assigned to type \"Iterable[str]\"\n+     Type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[Unknown] | list[set[Unknown]]\" cannot be assigned to type \"Iterable[str]\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:321:49 - error: Argument of type \"DetectedPackage\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"DetectedPackage\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:361:35 - error: Argument of type \"tuple[str, ...]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"tuple[str, ...]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:387:36 - error: Argument of type \"tuple[str, ...]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"tuple[str, ...]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:459:63 - error: \"object*\" is not iterable\n-     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1446:21 - error: Argument of type \"DeclaredVersion\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"DeclaredVersion\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1749:21 - error: Argument of type \"DeclaredVersion\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"DeclaredVersion\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1792:85 - error: Cannot access member \"satisfies\" for type \"object*\"\n-     Member \"satisfies\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1774:21 - error: Argument of type \"DeclaredVersion\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"DeclaredVersion\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1812:17 - error: Argument of type \"DeclaredVersion\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"DeclaredVersion\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:2044:78 - error: Cannot access member \"satisfies\" for type \"object*\"\n-     Member \"satisfies\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:2044:29 - error: Argument of type \"Generator[_T@set, None, None]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n-     \"Generator[_T@set, None, None]\" is incompatible with \"Iterable[SupportsRichComparisonT@sorted]\"\n-       TypeVar \"_T_co@Iterable\" is covariant\n-         Type \"_T@set\" cannot be assigned to type \"SupportsRichComparison\"\n-           Type \"_T@set\" cannot be assigned to type \"SupportsRichComparison\"\n-             \"object*\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n-             \"object*\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:2078:54 - error: Argument of type \"StandardVersion\" cannot be assigned to parameter \"__element\" of type \"_T@set\" in function \"add\"\n-     Type \"StandardVersion\" cannot be assigned to type \"_T@set\" (reportGeneralTypeIssues)\n\n... (truncated 20 lines) ...\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/commands/data_commands.py:127:53 - error: Argument of type \"str\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"str\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/edge/edge_positioning.py:124:39 - error: Argument of type \"str\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"str\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n- 764 errors, 54 warnings, 0 informations \n+ 762 errors, 54 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:18:9 - error: Type of \"__files\" is partially unknown\n+     Type of \"__files\" is \"dict[str, Unknown]\" (reportUnknownVariableType)\n- 4271 errors, 76 warnings, 0 informations \n+ 4272 errors, 76 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2309:26 - error: Argument of type \"snicaddr\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"snicaddr\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2353:50 - error: \"object*\" is not iterable\n-     \"__iter__\" method not defined (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2364:21 - error: Argument of type \"shwtemp\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"shwtemp\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:443:21 - error: Argument of type \"shwtemp\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"shwtemp\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:797:42 - error: Argument of type \"tuple[Unknown, int]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"tuple[Unknown, int]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1245:31 - error: Argument of type \"tuple[Unknown | str | object, float, float | Unknown | None, float | Unknown | None]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"tuple[Unknown | str | object, float, float | Unknown | None, float | Unknown | None]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1289:35 - error: Argument of type \"tuple[Literal[''], float, float | Unknown | None, float | Unknown | None]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"tuple[Literal[''], float, float | Unknown | None, float | Unknown | None]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1321:31 - error: Argument of type \"sfan\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"sfan\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n- 8001 errors, 423 warnings, 0 informations \n+ 7993 errors, 423 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n-   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:155:40 - error: Argument of type \"str\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n-     Type \"str\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:157:13 - error: Expression of type \"tuple[DefaultDict[str, Set[str]], defaultdict[Unknown, list[_T@list]]]\" cannot be assigned to return type \"Tuple[DepMap, DepBuilder]\"\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:157:13 - error: Expression of type \"tuple[DefaultDict[str, Set[str]], defaultdict[Unknown, list[Unknown]]]\" cannot be assigned to return type \"Tuple[DepMap, DepBuilder]\"\n- 200 errors, 58 warnings, 0 informations \n+ 199 errors, 58 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that resulted in a false positive when passing a class to the `defaultdict` constructor. If an unspecialized class type is used as a upper or lower constraint within the constraint solver, we now use default type arguments (typically `Unknown`) rather than leaving these type arguments unspecified. This addresses https://github.com/microsoft/pyright/issues/5354. (#5363)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211177ac254a19ac29073c",
    "number": 5361,
    "body": "…allback protocol was invoked in a nested manner. This addresses https://github.com/microsoft/pyright/issues/5356.",
    "head_branch": "issue5356",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that resulted in incorrect type evaluation when a generic callback protocol was invoked in a nested manner. This addresses https://github.com/microsoft/pyright/issues/5356. (#5361)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211178ac254a19ac29073d",
    "number": 5360,
    "body": "…y expansion and a dictionary literal expression for an argument corresponding to an unpacked TypedDict `**kwargs` parameter. This addresses https://github.com/microsoft/pyright/issues/5358.",
    "head_branch": "issue5358",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Added support for bidirectional type inference when using a dictionary expansion and a dictionary literal expression for an argument corresponding to an unpacked TypedDict `**kwargs` parameter. This addresses https://github.com/microsoft/pyright/issues/5358. (#5360)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211179ac254a19ac29073e",
    "number": 5359,
    "body": "rollup of the following changes:\n    1. Next step in sync server support https://github.com/microsoft/pyrx/pull/3733\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.315",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.315 (#5359)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621117aac254a19ac29073f",
    "number": 5348,
    "body": "…sed on the number of entries in a tuple if the type derives from a tuple. This addresses https://github.com/microsoft/pyright/issues/5346.",
    "head_branch": "tupleGuard1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Enhanced the `isinstance` type narrowing logic so it filters types based on the number of entries in a tuple if the type derives from a tuple. This addresses https://github.com/microsoft/pyright/issues/5346. (#5348)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621117bac254a19ac290740",
    "number": 5347,
    "body": "… type guard in certain cases where the guard type and the pre-narrowed type are both generic.",
    "head_branch": "dupTypeVar1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type narrowing for the `isinstance` type guard in certain cases where the guard type and the pre-narrowed type are both generic. (#5347)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621117cac254a19ac290741",
    "number": 5345,
    "body": "…ert_type` call involving a `Callable[[], X]` type. Pyright was generating a signature with a positional-only separator in this case. This addresses https://github.com/python/typeshed/pull/10325#issuecomment-1598858415.",
    "head_branch": "callable1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that caused an incorrect false positive error for an `assert_type` call involving a `Callable[[], X]` type. Pyright was generating a signature with a positional-only separator in this case. This addresses https://github.com/python/typeshed/pull/10325#issuecomment-1598858415. (#5345)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621117dac254a19ac290742",
    "number": 5343,
    "body": "Addresses #5307 \r\n\r\n@erictraut, I'm not sure if this is working property for generic dataclasses when the descriptor's get and/or set types are generic. Currently I'm calling `makeTopLevelTypeVarsConcrete` on the get/set type when synthesizing the descriptor. Is this the right thing to do?\r\n\r\nI initially tried to get this to work by passing the dataclass's `typeVarScopeId` to the descriptor. But then the revealed type of `g.field1` and `g.field2` at the end of the new test file was `Unknown` instead of `float`. It looked like this was because in `applyDescriptorAccessMethod` the return type of the synthesized descriptor's `__get__` method was not specialized (`_T` instead of `float`). ",
    "head_branch": "pep712_assignments",
    "is_a_fork": true,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py): typechecking got 1.35x faster (64.7s -> 47.9s)\n(Performance measurements are based on a single noisy sample)\n\n```"
    ],
    "commit_messages": [
      "Support PEP 712's new attribute assignment conversion (#5343)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621117eac254a19ac290743",
    "number": 5338,
    "body": "…f a variable in a nested loop. This addresses https://github.com/microsoft/pyright/issues/5339.",
    "head_branch": "issue4509",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621117fac254a19ac290744",
    "number": 5337,
    "body": "…ludes a default value and the expected type doesn't include that parameter. This improvement was suggested in the [mypy issue tracker](https://github.com/python/mypy/issues/15459).",
    "head_branch": "issue15459",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved type inference for lambdas in the case where a parameter includes a default value and the expected type doesn't include that parameter. This improvement was suggested in the [mypy issue tracker](https://github.com/python/mypy/issues/15459). (#5337)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211180ac254a19ac290745",
    "number": 5336,
    "body": "…ass instances. This addresses https://github.com/microsoft/pyright/issues/5333.",
    "head_branch": "issue5333-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1618:20 - error: Unnecessary \"cast\" call; type is already \"type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1621:16 - error: Unnecessary \"cast\" call; type is already \"type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1792:16 - error: Unnecessary \"cast\" call; type is already \"type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1825:16 - error: Unnecessary \"cast\" call; type is already \"type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1864:16 - error: Unnecessary \"cast\" call; type is already \"Str\" (reportUnnecessaryCast)\n- 2048 errors, 9912 warnings, 0 informations \n+ 2053 errors, 9912 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:348:19 - warning: Unnecessary \"cast\" call; type is already \"Any\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_custom.py:300:11 - warning: Unnecessary \"cast\" call; type is already \"type[EventSubscriber[InitializationEvent]]\" (reportUnnecessaryCast)\n- 4271 errors, 74 warnings, 0 informations \n+ 4271 errors, 76 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/block.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:512:21 - error: Unnecessary \"cast\" call; type is already \"_TSource@Block\" (reportUnnecessaryCast)\n+ /tmp/mypy_primer/projects/Expression/expression/core/typing.py\n+   /tmp/mypy_primer/projects/Expression/expression/core/typing.py:106:12 - error: Unnecessary \"cast\" call; type is already \"_Derived@downcast\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:154:37 - error: Unnecessary \"cast\" call; type is already \"_A@and_then\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:154:55 - error: Unnecessary \"cast\" call; type is already \"_B@and_then\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:205:36 - error: Unnecessary \"cast\" call; type is already \"_A@map\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:320:45 - error: Unnecessary \"cast\" call; type is already \"_A@parse_zero_or_more\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:346:49 - error: Unnecessary \"cast\" call; type is already \"_A@many1\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:543:24 - error: Unnecessary \"cast\" call; type is already \"_A@bind\" (reportUnnecessaryCast)\n- 272 errors, 0 warnings, 0 informations \n+ 280 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Improved `reportUnnecessaryCast` so it works with types other than cl… (#5336)\n\nImproved `reportUnnecessaryCast` so it works with types other than class instances. This addresses https://github.com/microsoft/pyright/issues/5333."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211181ac254a19ac290746",
    "number": 5335,
    "body": "…ass instances. This addresses https://github.com/microsoft/pyright/issues/5333.",
    "head_branch": "issue5333-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1618:20 - error: Unnecessary \"cast\" call; type is already \"Type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1621:16 - error: Unnecessary \"cast\" call; type is already \"Type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1792:16 - error: Unnecessary \"cast\" call; type is already \"Type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1825:16 - error: Unnecessary \"cast\" call; type is already \"Type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1864:16 - error: Unnecessary \"cast\" call; type is already \"Str\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/clients.py:3140:20 - error: Unnecessary \"cast\" call; type is already \"Iterable[Unknown]\" (reportUnnecessaryCast)\n- 2048 errors, 9912 warnings, 0 informations \n+ 2054 errors, 9912 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/block.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:67:16 - error: Unnecessary \"cast\" call; type is already \"Block[Unknown]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:72:14 - error: Unnecessary \"cast\" call; type is already \"List[Unknown]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:512:21 - error: Unnecessary \"cast\" call; type is already \"_TSource@Block\" (reportUnnecessaryCast)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/map.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/map.py:243:17 - error: Unnecessary \"cast\" call; type is already \"Map[Unknown, Unknown]\" (reportUnnecessaryCast)\n+ /tmp/mypy_primer/projects/Expression/expression/core/typing.py\n+   /tmp/mypy_primer/projects/Expression/expression/core/typing.py:106:12 - error: Unnecessary \"cast\" call; type is already \"_Derived@downcast\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:154:37 - error: Unnecessary \"cast\" call; type is already \"_A@and_then\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:154:55 - error: Unnecessary \"cast\" call; type is already \"_B@and_then\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:205:36 - error: Unnecessary \"cast\" call; type is already \"_A@map\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:320:45 - error: Unnecessary \"cast\" call; type is already \"_A@parse_zero_or_more\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:346:49 - error: Unnecessary \"cast\" call; type is already \"_A@many1\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:543:24 - error: Unnecessary \"cast\" call; type is already \"_A@bind\" (reportUnnecessaryCast)\n- 272 errors, 0 warnings, 0 informations \n+ 283 errors, 0 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:348:19 - warning: Unnecessary \"cast\" call; type is already \"Any\" (reportUnnecessaryCast)\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_interface.py:531:71 - warning: Unnecessary \"# type: ignore\" comment\n- /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_internal.py\n-   /tmp/mypy_primer/projects/antidote/src/antidote/lib/interface_ext/_internal.py:173:73 - warning: Unnecessary \"# type: ignore\" comment\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_exceptions.py:18:48 - warning: Unnecessary \"cast\" call; type is already \"Unknown\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_custom.py:300:11 - warning: Unnecessary \"cast\" call; type is already \"Type[EventSubscriber[InitializationEvent]]\" (reportUnnecessaryCast)\n- 4271 errors, 74 warnings, 0 informations \n+ 4271 errors, 75 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211182ac254a19ac290747",
    "number": 5334,
    "body": "…ass instances. This addresses https://github.com/microsoft/pyright/issues/5333.",
    "head_branch": "issue5333-1",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1618:20 - error: Unnecessary \"cast\" call; type is already \"Type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1621:16 - error: Unnecessary \"cast\" call; type is already \"Type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1792:16 - error: Unnecessary \"cast\" call; type is already \"Type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1825:16 - error: Unnecessary \"cast\" call; type is already \"Type[_T@__getitem__]\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/annotations.py:1864:16 - error: Unnecessary \"cast\" call; type is already \"Str\" (reportUnnecessaryCast)\n- 2048 errors, 9912 warnings, 0 informations \n+ 2053 errors, 9912 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+   /tmp/mypy_primer/projects/AutoSplit/src/hotkeys.py:232:9 - error: Unnecessary \"cast\" call; type is already \"Unknown\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/AutoSplit/src/menu_bar.py:42:37 - error: Unnecessary \"cast\" call; type is already \"Unknown\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/AutoSplit/src/menu_bar.py:79:45 - error: Unnecessary \"cast\" call; type is already \"Unknown\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/AutoSplit/src/menu_bar.py:318:40 - error: Unnecessary \"cast\" call; type is already \"Unknown\" (reportUnnecessaryCast)\n- 388 errors, 34 warnings, 7 informations \n+ 392 errors, 34 warnings, 7 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_inject.py:348:19 - warning: Unnecessary \"cast\" call; type is already \"Any\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/antidote/tests/core/test_internal.py:11:15 - warning: Unnecessary \"cast\" call; type is already \"Unknown\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/antidote/tests/lib/interface/test_custom.py:300:11 - warning: Unnecessary \"cast\" call; type is already \"Type[EventSubscriber[InitializationEvent]]\" (reportUnnecessaryCast)\n- 4271 errors, 74 warnings, 0 informations \n+ 4271 errors, 77 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/collections/block.py\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:512:21 - error: Unnecessary \"cast\" call; type is already \"_TSource@Block\" (reportUnnecessaryCast)\n+ /tmp/mypy_primer/projects/Expression/expression/core/typing.py\n+   /tmp/mypy_primer/projects/Expression/expression/core/typing.py:106:12 - error: Unnecessary \"cast\" call; type is already \"_Derived@downcast\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:154:37 - error: Unnecessary \"cast\" call; type is already \"_A@and_then\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:154:55 - error: Unnecessary \"cast\" call; type is already \"_B@and_then\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:205:36 - error: Unnecessary \"cast\" call; type is already \"_A@map\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:320:45 - error: Unnecessary \"cast\" call; type is already \"_A@parse_zero_or_more\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:346:49 - error: Unnecessary \"cast\" call; type is already \"_A@many1\" (reportUnnecessaryCast)\n+   /tmp/mypy_primer/projects/Expression/expression/extra/parser.py:543:24 - error: Unnecessary \"cast\" call; type is already \"_A@bind\" (reportUnnecessaryCast)\n- 272 errors, 0 warnings, 0 informations \n+ 280 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211183ac254a19ac290748",
    "number": 5332,
    "body": "…ances when a literal type argument was used in conjunction with a protocol that used a covariant type parameter and an implementation of that protocol that used an invariant type parameter. This addresses https://github.com/microsoft/pyright/issues/5282.",
    "head_branch": "issue5282-1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive error under certain circumstances when a literal type argument was used in conjunction with a protocol that used a covariant type parameter and an implementation of that protocol that used an invariant type parameter. This addresses https://github.com/microsoft/pyright/issues/5282. (#5332)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211183ac254a19ac290749",
    "number": 5331,
    "body": "…ion for a base class in a class declaration statement. This addresses https://github.com/microsoft/pyright/pull/5326.",
    "head_branch": "issue5326-3",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a false positive error arising from the use of a binary expression for a base class in a class declaration statement. This addresses https://github.com/microsoft/pyright/pull/5326. (#5331)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211184ac254a19ac29074a",
    "number": 5330,
    "body": "…ion for a base class in a class declaration statement. This addresses https://github.com/microsoft/pyright/pull/5326.",
    "head_branch": "issue5326-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/help.py:25:19 - error: Expected type arguments for generic class \"Command\" (reportMissingTypeArgument)\n- 8719 errors, 49 warnings, 0 informations \n+ 8718 errors, 49 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211185ac254a19ac29074b",
    "number": 5329,
    "body": "…ion for a base class in a class declaration statement. This addresses https://github.com/microsoft/pyright/issues/5326.",
    "head_branch": "issue5326",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nbidict (https://github.com/jab/bidict)\n+   /tmp/mypy_primer/projects/bidict/bidict/_orderedbidict.py:130:26 - error: Expected no type arguments for class \"_OrderedBidictKeysView[KT@_OrderedBidictKeysView]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/bidict/bidict/_orderedbidict.py:130:55 - error: Expected no type arguments for class \"_OrderedBidictItemsView[KT@_OrderedBidictItemsView, VT@_OrderedBidictItemsView]\" (reportGeneralTypeIssues)\n- 12 errors, 0 warnings, 0 informations \n+ 14 errors, 0 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/id.py:562:10 - error: Expected no type arguments for class \"ID[TypeT@ID]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/steam.py/steam/id.py:541:44 - error: Expected no type arguments for class \"ID[TypeT@ID]\" (reportGeneralTypeIssues)\n- 8719 errors, 49 warnings, 0 informations \n+ 8721 errors, 49 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/core/result.py\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:105:16 - error: Expected no type arguments for class \"Ok[_TSource@Ok, _TError@Ok]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:105:39 - error: Expected no type arguments for class \"Error[_TSource@Error, _TError@Error]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:195:16 - error: Expected no type arguments for class \"Ok[_TSource@Ok, _TError@Ok]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:195:39 - error: Expected no type arguments for class \"Error[_TSource@Error, _TError@Error]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:398:8 - error: Expected no type arguments for class \"Ok[_TSource@Ok, _TError@Ok]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:398:32 - error: Expected no type arguments for class \"Error[_TSource@Error, _TError@Error]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:399:8 - error: Expected no type arguments for class \"Ok[_TSource@Ok, _TError@Ok]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Expression/expression/core/result.py:399:31 - error: Expected no type arguments for class \"Error[_TSource@Error, _TError@Error]\" (reportGeneralTypeIssues)\n- 272 errors, 0 warnings, 0 informations \n+ 280 errors, 0 warnings, 0 informations \n\nspeedrun.com_global_scoreboard_webapp (https://github.com/Avasam/speedrun.com_global_scoreboard_webapp)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py:73:28 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py:74:25 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py:75:33 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py:76:34 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py:77:32 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/core_models.py:78:34 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/game_search_models.py:24:28 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/game_search_models.py:25:32 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/game_search_models.py:26:27 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/game_search_models.py:27:32 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/game_search_models.py:28:40 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/game_search_models.py:29:28 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/game_search_models.py:30:30 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/game_search_models.py:31:30 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:20:17 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:23:23 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:24:26 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:33:21 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:34:18 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:139:35 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:140:36 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:141:43 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:142:32 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:144:33 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:39:37 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:40:32 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:41:29 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:44:29 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:45:25 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:46:31 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:47:34 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:48:26 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:87:17 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:89:18 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:94:29 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:95:25 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:96:26 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:97:29 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:126:28 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:243:36 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:244:25 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:214:33 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:215:36 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:125:27 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:127:35 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:124:24 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:236:17 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/speedrun.com_global_scoreboard_webapp/backend/models/tournament_scheduler_models.py:231:28 - error: Expected no type arguments for class \"Column\" (reportGeneralTypeIssues)\n- 18 errors, 19 warnings, 1 information \n+ 66 errors, 19 warnings, 1 information \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211186ac254a19ac29074c",
    "number": 5328,
    "body": "…ric class (with a constructor that includes class-scoped TypeVars) as an argument for a callable parameter. The class was being specialized prematurely (with type arguments set to `Unknown`) before the constraint solver was able to solve the higher-order function's type variables. This addresses https://github.com/microsoft/pyright/issues/5324.",
    "head_branch": "issue5324",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:110:35 - error: Argument of type \"Unknown\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"Unknown\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:236:28 - error: Cannot access member \"_start_mark\" for type \"object*\"\n+     Member \"_start_mark\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:352:47 - error: Argument of type \"tuple[type, Any]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[type, Any]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/audit.py:363:42 - error: \"__getitem__\" method not defined on type \"object*\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/provider_index.py:222:89 - error: Argument of type \"Type[list[Unknown]]\" cannot be assigned to parameter \"out_mapping_type\" of type \"Type[dict[Unknown, Unknown]]\" in function \"_transform\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/provider_index.py:222:89 - error: Argument of type \"Type[list[_T@list]]\" cannot be assigned to parameter \"out_mapping_type\" of type \"Type[dict[Unknown, Unknown]]\" in function \"_transform\"\n-     \"Type[list[Unknown]]\" is incompatible with \"Type[dict[Unknown, Unknown]]\"\n+     \"Type[list[_T@list]]\" is incompatible with \"Type[dict[Unknown, Unknown]]\"\n-     Type \"Type[list[Unknown]]\" cannot be assigned to type \"Type[dict[Unknown, Unknown]]\" (reportGeneralTypeIssues)\n+     Type \"Type[list[_T@list]]\" cannot be assigned to type \"Type[dict[Unknown, Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:3154:34 - error: Argument of type \"tuple[Unknown, Unknown] | Unknown\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[Unknown, Unknown] | Unknown\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4546:29 - error: Cannot access member \"spec\" for type \"object*\"\n+     Member \"spec\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/spec.py:4575:39 - error: Cannot access member \"deptypes\" for type \"object*\"\n+     Member \"deptypes\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:332:33 - error: Argument of type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/traverse.py:346:33 - error: Argument of type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"Unknown | tuple[Unknown, Unknown]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:307:18 - error: Cannot access member \"prefix\" for type \"object*\"\n+     Member \"prefix\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/build_systems/python.py:305:15 - error: Cannot access member \"spec\" for type \"object*\"\n+     Member \"spec\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/__init__.py:461:47 - error: Cannot access member \"spec\" for type \"object*\"\n+     Member \"spec\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/__init__.py:461:65 - error: Cannot access member \"spec\" for type \"object*\"\n+     Member \"spec\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/arch.py:72:29 - error: Cannot access member \"family\" for type \"object*\"\n+     Member \"family\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/arch.py:78:55 - error: Cannot access member \"ancestors\" for type \"object*\"\n+     Member \"ancestors\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/unit_test.py:164:28 - error: Argument of type \"tuple[Unknown, ...]\" cannot be assigned to parameter \"__element\" of type \"_T@set\" in function \"add\"\n+     Type \"tuple[Unknown, ...]\" cannot be assigned to type \"_T@set\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/modules/__init__.py:328:55 - error: Cannot access member \"spec\" for type \"object*\"\n+     Member \"spec\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:186:53 - error: Argument of type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[Unknown] | list[set[Unknown]]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:186:53 - error: Argument of type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[_T@set] | list[set[_T@set]]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n-     Type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[Unknown] | list[set[Unknown]]\" cannot be assigned to type \"Iterable[str]\"\n+     Type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[_T@set] | list[set[_T@set]]\" cannot be assigned to type \"Iterable[str]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:223:49 - error: Argument of type \"DetectedPackage\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"DetectedPackage\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:285:53 - error: Argument of type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[Unknown] | list[set[Unknown]]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:285:53 - error: Argument of type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[_T@set] | list[set[_T@set]]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[str]\" in function \"join\"\n-     Type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[Unknown] | list[set[Unknown]]\" cannot be assigned to type \"Iterable[str]\"\n+     Type \"list[Unknown] | list[<subclass of set and str>] | list[<subclass of set and Spec>] | set[_T@set] | list[set[_T@set]]\" cannot be assigned to type \"Iterable[str]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/detection/path.py:321:49 - error: Argument of type \"DetectedPackage\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"DetectedPackage\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:361:35 - error: Argument of type \"tuple[str, ...]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[str, ...]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:387:36 - error: Argument of type \"tuple[str, ...]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[str, ...]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/modules/lmod.py:459:63 - error: \"object*\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1446:21 - error: Argument of type \"DeclaredVersion\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"DeclaredVersion\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1749:21 - error: Argument of type \"DeclaredVersion\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"DeclaredVersion\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1792:85 - error: Cannot access member \"satisfies\" for type \"object*\"\n+     Member \"satisfies\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1774:21 - error: Argument of type \"DeclaredVersion\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"DeclaredVersion\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:1812:17 - error: Argument of type \"DeclaredVersion\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"DeclaredVersion\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:2044:78 - error: Cannot access member \"satisfies\" for type \"object*\"\n+     Member \"satisfies\" is unknown (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/solver/asp.py:2044:29 - error: Argument of type \"Generator[_T@set, None, None]\" cannot be assigned to parameter \"__iterable\" of type \"Iterable[SupportsRichComparisonT@sorted]\" in function \"sorted\"\n\n... (truncated 28 lines) ...\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/commands/data_commands.py:127:53 - error: Argument of type \"str\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"str\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/edge/edge_positioning.py:124:39 - error: Argument of type \"str\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"str\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n- 764 errors, 53 warnings, 0 informations \n+ 766 errors, 53 warnings, 0 informations \n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:354:2 - error: Argument of type \"(argument: str) -> None\" cannot be assigned to parameter of type \"(str) -> Command[(...)]\"\n+   /tmp/mypy_primer/projects/steam.py/tests/unit/test_commands.py:354:2 - error: Argument of type \"(argument: str) -> None\" cannot be assigned to parameter of type \"(str) -> Command[P@Command]\"\n-     Type \"(argument: str) -> None\" cannot be assigned to type \"(str) -> Command[(...)]\"\n+     Type \"(argument: str) -> None\" cannot be assigned to type \"(str) -> Command[P@Command]\"\n-       Function return type \"None\" is incompatible with type \"Command[(...)]\"\n+       Function return type \"None\" is incompatible with type \"Command[P@Command]\"\n-         Type \"None\" cannot be assigned to type \"Command[(...)]\" (reportGeneralTypeIssues)\n+         Type \"None\" cannot be assigned to type \"Command[P@Command]\" (reportGeneralTypeIssues)\n\nantidote (https://github.com/Finistere/antidote)\n-   /tmp/mypy_primer/projects/antidote/tests/test_examples.py:18:9 - error: Type of \"__files\" is partially unknown\n-     Type of \"__files\" is \"dict[str, Unknown]\" (reportUnknownVariableType)\n- 4272 errors, 74 warnings, 0 informations \n+ 4271 errors, 74 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n-   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:80:32 - error: Argument of type \"Type[Just[Unknown]]\" cannot be assigned to parameter \"x\" of type \"HasTarget\" in function \"_get_target\"\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:80:32 - error: Argument of type \"Type[Just[T@Just]]\" cannot be assigned to parameter \"x\" of type \"HasTarget\" in function \"_get_target\"\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2309:26 - error: Argument of type \"snicaddr\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"snicaddr\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2353:50 - error: \"object*\" is not iterable\n+     \"__iter__\" method not defined (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/__init__.py:2364:21 - error: Argument of type \"shwtemp\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"shwtemp\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_psbsd.py:443:21 - error: Argument of type \"shwtemp\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"shwtemp\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:797:42 - error: Argument of type \"tuple[Unknown, int]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[Unknown, int]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1245:31 - error: Argument of type \"tuple[Unknown | str | object, float, float | Unknown | None, float | Unknown | None]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[Unknown | str | object, float, float | Unknown | None, float | Unknown | None]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1289:35 - error: Argument of type \"tuple[Literal[''], float, float | Unknown | None, float | Unknown | None]\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"tuple[Literal[''], float, float | Unknown | None, float | Unknown | None]\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1321:31 - error: Argument of type \"sfan\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"sfan\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n- 7967 errors, 418 warnings, 0 informations \n+ 7975 errors, 418 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:155:40 - error: Argument of type \"str\" cannot be assigned to parameter \"__object\" of type \"_T@list\" in function \"append\"\n+     Type \"str\" cannot be assigned to type \"_T@list\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:157:13 - error: Expression of type \"tuple[DefaultDict[str, Set[str]], defaultdict[Unknown, list[Unknown]]]\" cannot be assigned to return type \"Tuple[DepMap, DepBuilder]\"\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/cli/crate_diagram.py:157:13 - error: Expression of type \"tuple[DefaultDict[str, Set[str]], defaultdict[Unknown, list[_T@list]]]\" cannot be assigned to return type \"Tuple[DepMap, DepBuilder]\"\n- 199 errors, 58 warnings, 0 informations \n+ 200 errors, 58 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to incorrect type evaluation when passing a generic class (with a constructor that includes class-scoped TypeVars) as an argument for a callable parameter. The class was being specialized prematurely (with type arguments set to `Unknown`) before the constraint solver was able to solve the higher-order function's type variables. This addresses https://github.com/microsoft/pyright/issues/5324. (#5328)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211187ac254a19ac29074d",
    "number": 5327,
    "body": "…thods for purposes of calculating the variance of a TypeVar. This mirrors the behavior of mypy.",
    "head_branch": "autovariance",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Changed auto-variance algorithm to ignore `__new__` and `__init__` methods for purposes of calculating the variance of a TypeVar. This mirrors the behavior of mypy. (#5327)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211188ac254a19ac29074e",
    "number": 5323,
    "body": "…he same TypeVar in an invariant context. This addresses https://github.com/microsoft/pyright/issues/5321.",
    "head_branch": "issue5321",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+           \"Literal['/hello']\" is incompatible with \"str\"\n-           Type \"Literal['/world']\" cannot be assigned to type \"Prefix\"\n+           Type \"Literal['/hello']\" cannot be assigned to type \"Prefix\"\n-             \"Literal['/world']\" is incompatible with \"bytes\"\n+             \"Literal['/hello']\" is incompatible with \"str\"\n-           Type \"Literal['/world']\" cannot be assigned to type \"Prefix\"\n+           \"Literal['/hello']\" is incompatible with \"str\"\n-           Type \"Literal['/world']\" cannot be assigned to type \"Prefix\"\n+           Type \"Literal['/hello']\" cannot be assigned to type \"Prefix\"\n-             \"Literal['/world']\" is incompatible with \"bytes\"\n+             \"Literal['/hello']\" is incompatible with \"str\"\n-           Type \"Literal['/world']\" cannot be assigned to type \"Prefix\"\n\nfreqtrade (https://github.com/freqtrade/freqtrade)\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1008:26 - error: Expression of type \"dict[str, RPCMessageType | Unknown | str | float | Any | datetime | bool | None]\" cannot be assigned to declared type \"RPCBuyMsg\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1008:26 - error: Expression of type \"dict[str, RPCMessageType | str | float | datetime | bool | None]\" cannot be assigned to declared type \"RPCBuyMsg\"\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1041:29 - error: Expression of type \"dict[str, RPCMessageType | Unknown | str | Any | float | bool | None]\" cannot be assigned to declared type \"RPCCancelMsg\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1041:29 - error: Expression of type \"dict[str, RPCMessageType | str | float | bool | None]\" cannot be assigned to declared type \"RPCCancelMsg\"\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1730:27 - error: Expression of type \"dict[str, RPCMessageType | Unknown | str | float | datetime | Any | bool | None]\" cannot be assigned to declared type \"RPCSellMsg\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1730:27 - error: Expression of type \"dict[str, RPCMessageType | str | float | datetime | bool | None]\" cannot be assigned to declared type \"RPCSellMsg\"\n-   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1785:33 - error: Expression of type \"dict[str, RPCMessageType | Unknown | str | float | int | datetime | Any | bool | None]\" cannot be assigned to declared type \"RPCSellCancelMsg\"\n+   /tmp/mypy_primer/projects/freqtrade/freqtrade/freqtradebot.py:1785:33 - error: Expression of type \"dict[str, RPCMessageType | str | float | datetime | bool | None]\" cannot be assigned to declared type \"RPCSellCancelMsg\"\n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_make_custom_builds.py:304:16 - error: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_make_custom_builds.py:292:9 - error: Return type is unknown (reportUnknownParameterType)\n+ /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_type_guards.py:80:32 - error: Argument of type \"Type[Just[Unknown]]\" cannot be assigned to parameter \"x\" of type \"HasTarget\" in function \"_get_target\"\n+     \"_target_\" is invariant because it is mutable\n+     \"_target_\" is an incompatible type\n+       \"Literal['hydra_zen.funcs.get_obj']\" is incompatible with \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:852:16 - error: Return type is unknown (reportUnknownVariableType)\n- 180 errors, 0 warnings, 0 informations \n+ 184 errors, 0 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py)\n+ /tmp/mypy_primer/projects/discord.py/discord/automod.py\n+   /tmp/mypy_primer/projects/discord.py/discord/automod.py:253:64 - error: Argument of type \"Any | List[AutoModerationTriggerPresets] | list[Unknown]\" cannot be assigned to parameter \"value\" of type \"List[int]\" in function \"_from_value\"\n+     Type \"Any | List[AutoModerationTriggerPresets] | list[Unknown]\" cannot be assigned to type \"List[int]\"\n+       \"List[AutoModerationTriggerPresets]\" is incompatible with \"List[int]\"\n+         TypeVar \"_T@list\" is invariant\n+           Type \"AutoModerationTriggerPresets\" cannot be assigned to type \"int\"\n+             \"Literal[1]\" is incompatible with \"int\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/discord.py/discord/invite.py\n+   /tmp/mypy_primer/projects/discord.py/discord/invite.py:192:36 - error: Cannot assign member \"features\" for type \"PartialInviteGuild\"\n+     \"List[GuildFeature]\" is incompatible with \"List[str]\"\n+       TypeVar \"_T@list\" is invariant\n+         Type \"GuildFeature\" cannot be assigned to type \"str\"\n+           \"Literal['ANIMATED_BANNER']\" is incompatible with \"str\" (reportGeneralTypeIssues)\n- 45 errors, 18 warnings, 0 informations \n+ 47 errors, 18 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-             Tuple entry 2 is incorrect type\n+             Tuple entry 1 is incorrect type\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:151:24 - error: Argument of type \"dict[str, Unknown | int]\" cannot be assigned to parameter \"tags\" of type \"_MetaDictType\" in function \"set_tags\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:151:24 - error: Argument of type \"dict[str, Text | Unknown | int]\" cannot be assigned to parameter \"tags\" of type \"_MetaDictType\" in function \"set_tags\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:205:28 - error: Argument of type \"dict[str, Unknown | int]\" cannot be assigned to parameter \"tags\" of type \"_MetaDictType\" in function \"set_tags\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/aioredis/patch.py:205:28 - error: Argument of type \"dict[str, Text | Unknown | int]\" cannot be assigned to parameter \"tags\" of type \"_MetaDictType\" in function \"set_tags\"\n-             Tuple entry 2 is incorrect type\n+             Tuple entry 1 is incorrect type\n-             Tuple entry 2 is incorrect type\n+             Tuple entry 1 is incorrect type\n-             Tuple entry 2 is incorrect type\n+             Tuple entry 1 is incorrect type\n-             Tuple entry 2 is incorrect type\n+             Tuple entry 1 is incorrect type\n-             Tuple entry 2 is incorrect type\n+             Tuple entry 1 is incorrect type\n-             Tuple entry 2 is incorrect type\n+             Tuple entry 1 is incorrect type\n-             Tuple entry 2 is incorrect type\n+             Tuple entry 1 is incorrect type\n-             Tuple entry 2 is incorrect type\n+             Tuple entry 1 is incorrect type\n-             Tuple entry 2 is incorrect type\n+             Tuple entry 1 is incorrect type\n+   /tmp/mypy_primer/projects/dd-trace-py/tests/tracer/test_tagset.py:161:30 - error: Argument of type \"OrderedDict[Literal['a', 'b', 'somereallylongkey'], Literal['1', '2', 'somereallyreallylongvalue']]\" cannot be assigned to parameter \"values\" of type \"Dict[str, str]\" in function \"encode_tagset_values\"\n+     \"OrderedDict[Literal['a', 'b', 'somereallylongkey'], Literal['1', '2', 'somereallyreallylongvalue']]\" is incompatible with \"Dict[str, str]\"\n+       TypeVar \"_KT@dict\" is invariant\n+         Type \"Literal['a', 'b', 'somereallylongkey']\" cannot be assigned to type \"str\"\n+           \"Literal['a']\" is incompatible with \"str\"\n+       TypeVar \"_VT@dict\" is invariant\n+         Type \"Literal['1', '2', 'somereallyreallylongvalue']\" cannot be assigned to type \"str\"\n+           \"Literal['1']\" is incompatible with \"str\" (reportGeneralTypeIssues)\n- 7966 errors, 418 warnings, 0 informations \n+ 7967 errors, 418 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:1175:50 - error: Expression of type \"dict[str, Any] | dict[Unknown | None, Index | Unknown]\" cannot be assigned to declared type \"Dict[str, Any]\"\n+   /tmp/mypy_primer/projects/pandera/pandera/api/pandas/container.py:1175:50 - error: Expression of type \"dict[str, Any] | dict[Unknown | None, Any]\" cannot be assigned to declared type \"Dict[str, Any]\"\n-     Type \"dict[str, Any] | dict[Unknown | None, Index | Unknown]\" cannot be assigned to type \"Dict[str, Any]\"\n+     Type \"dict[str, Any] | dict[Unknown | None, Any]\" cannot be assigned to type \"Dict[str, Any]\"\n-       \"dict[Unknown | None, Index | Unknown]\" is incompatible with \"Dict[str, Any]\"\n+       \"dict[Unknown | None, Any]\" is incompatible with \"Dict[str, Any]\"\n\n```"
    ],
    "commit_messages": [
      "Fixed false negative when a literal and non-literal are assigned to the same TypeVar in an invariant context. This addresses https://github.com/microsoft/pyright/issues/5321. (#5323)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211189ac254a19ac29074f",
    "number": 5322,
    "body": "…pressions where an inner call expression used a ParamSpec. This addresses https://github.com/microsoft/pyright/issues/5281.",
    "head_branch": "issue5281",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-     Type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to type \"AnyOrLiteralStr@basename\" (reportGeneralTypeIssues)\n+     Type \"str | Unknown | Any | Literal[b\"\"]\" is incompatible with constrained type variable \"AnyOrLiteralStr\" (reportGeneralTypeIssues)\n-     Type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to type \"AnyOrLiteralStr@basename\" (reportGeneralTypeIssues)\n+     Type \"str | Unknown | Any | Literal[b\"\"]\" is incompatible with constrained type variable \"AnyOrLiteralStr\" (reportGeneralTypeIssues)\n-     Type \"Unknown | Literal['parallel_studio_xe'] | None\" cannot be assigned to type \"AnyStr@escape\" (reportGeneralTypeIssues)\n+     Type \"Unknown | Literal['parallel_studio_xe'] | None\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n-         Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparisonT@sorted\" (reportGeneralTypeIssues)\n+         Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+           Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n-         Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparisonT@sorted\" (reportGeneralTypeIssues)\n+         Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+           Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n-         Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparisonT@sorted\" (reportGeneralTypeIssues)\n+         Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+           Type \"AspFunction\" cannot be assigned to type \"SupportsRichComparison\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderLT[Any]\"\n+             \"AspFunction\" is incompatible with protocol \"SupportsDunderGT[Any]\" (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"AnyOrLiteralStr@basename\" (reportGeneralTypeIssues)\n+     Type \"Unknown | None\" is incompatible with constrained type variable \"AnyOrLiteralStr\" (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"AnyOrLiteralStr@basename\" (reportGeneralTypeIssues)\n+     Type \"Unknown | None\" is incompatible with constrained type variable \"AnyOrLiteralStr\" (reportGeneralTypeIssues)\n-     Type \"Literal['log_dir']\" cannot be assigned to type \"_VT@dict\"\n-     Type \"Literal['repro_dir']\" cannot be assigned to type \"_VT@dict\"\n-     Type \"Literal['test_dir']\" cannot be assigned to type \"_VT@dict\"\n+     \"Literal['SPACK_LOCAL_MIRROR_DIR']\" is incompatible with \"tuple[str, str]\"\n+     \"Literal['SPACK_CONCRETE_ENV_DIR']\" is incompatible with \"tuple[str, str]\"\n+     \"Literal['SPACK_JOB_SPEC_DAG_HASH']\" is incompatible with \"tuple[str, str]\"\n-     \"Literal['SPACK_LOCAL_MIRROR_DIR']\" is incompatible with \"tuple[str, str]\" (reportGeneralTypeIssues)\n+     \"Literal['SPACK_JOB_SPEC_PKG_NAME']\" is incompatible with \"tuple[str, str]\" (reportGeneralTypeIssues)\n\nbidict (https://github.com/jab/bidict)\n+     \"tuple[VT@OrderedBidict, Any]\" is incompatible with \"tuple[KT@OrderedBidict, VT@OrderedBidict]\"\n+       Tuple entry 1 is incorrect type\n-     Type \"VT@OrderedBidict\" cannot be assigned to type \"KT@OrderedBidict\" (reportGeneralTypeIssues)\n+         Type \"VT@OrderedBidict\" cannot be assigned to type \"KT@OrderedBidict\" (reportGeneralTypeIssues)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/utils.py:452:74 - warning: Unnecessary \"# type: ignore\" comment\n-     Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MC@__call__\" (reportGeneralTypeIssues)\n+     Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MaybeCommand\"\n+       Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MaybeCommand\"\n+         Type \"CommandDeco*\" cannot be assigned to type \"MaybeCommand\"\n+           Type \"CommandDeco*\" cannot be assigned to type \"(...) -> Command[(Any)]\"\n+             Function return type \"MC@__call__\" is incompatible with type \"Command[(Any)]\"\n+           \"CommandDeco*\" is incompatible with protocol \"CallbackType[(Any)]\"\n+             \"__commands_checks__\" is not present\n+             \"__commands_cooldown__\" is not present (reportGeneralTypeIssues)\n-     Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MC@__call__\" (reportGeneralTypeIssues)\n+     Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MaybeCommand\"\n+       Type \"CommandDeco* | ((...) -> Command[(Any)]) | CallbackType[(Any)]*\" cannot be assigned to type \"MaybeCommand\"\n+         Type \"CommandDeco*\" cannot be assigned to type \"MaybeCommand\"\n+           Type \"CommandDeco*\" cannot be assigned to type \"(...) -> Command[(Any)]\"\n+             Function return type \"MC@__call__\" is incompatible with type \"Command[(Any)]\"\n+           \"CommandDeco*\" is incompatible with protocol \"CallbackType[(Any)]\"\n+             \"__commands_checks__\" is not present\n+             \"__commands_cooldown__\" is not present (reportGeneralTypeIssues)\n-     Function return type \"Command[P@command]\" is incompatible with type \"((((**P@command) -> Coroutine[Any, Any, Any])) -> C@command) | C@command\"\n+     Function return type \"Command[P@command]\" is incompatible with type \"((BaseCallback[P@command]) -> C@command) | C@command\"\n-       Type \"Command[P@command]\" cannot be assigned to type \"((((**P@command) -> Coroutine[Any, Any, Any])) -> C@command) | C@command\"\n+       Type \"Command[P@command]\" cannot be assigned to type \"((BaseCallback[P@command]) -> C@command) | C@command\"\n-         Type \"Command[P@command]\" cannot be assigned to type \"((**P@command) -> Coroutine[Any, Any, Any]) -> C@command\"\n+         Type \"Command[P@command]\" cannot be assigned to type \"(BaseCallback[P@command]) -> C@command\"\n-           Parameter 1: type \"(**P@command) -> Coroutine[Any, Any, Any]\" cannot be assigned to type \"Context[Bot]\"\n+           Parameter 1: type \"BaseCallback[P@command]\" cannot be assigned to type \"Context[Bot]\"\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:907:5 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Function return type \"(BaseCallback[P@command]) -> Command[P@command]\" is incompatible with type \"((CallT@command) -> C@command) | C@command\"\n+       Type \"(BaseCallback[P@command]) -> Command[P@command]\" cannot be assigned to type \"((CallT@command) -> C@command) | C@command\"\n+         Type \"(BaseCallback[P@command]) -> Command[P@command]\" cannot be assigned to type \"(CallT@command) -> C@command\"\n+           Function return type \"Command[P@command]\" is incompatible with type \"C@command\"\n+             \"Command[P@command]\" is incompatible with \"Command[(Any)]*\"\n+         \"function\" is incompatible with \"Command[(Any)]*\" (reportGeneralTypeIssues)\n-           Function return type \"Command[(...)]\" is incompatible with type \"C@command\"\n+           Function return type \"Command[P@command]\" is incompatible with type \"C@command\"\n-             Type \"Command[(...)]\" cannot be assigned to type \"C@command\"\n+             Type \"Command[P@command]\" cannot be assigned to type \"C@command\"\n-     Function return type \"Group[P@group]\" is incompatible with type \"((((**P@group) -> Coroutine[Any, Any, Any])) -> G@group) | G@group\"\n+     Function return type \"Group[P@group]\" is incompatible with type \"((BaseCallback[P@group]) -> G@group) | G@group\"\n-       Type \"Group[P@group]\" cannot be assigned to type \"((((**P@group) -> Coroutine[Any, Any, Any])) -> G@group) | G@group\"\n+       Type \"Group[P@group]\" cannot be assigned to type \"((BaseCallback[P@group]) -> G@group) | G@group\"\n-         Type \"Group[P@group]\" cannot be assigned to type \"((**P@group) -> Coroutine[Any, Any, Any]) -> G@group\"\n+         Type \"Group[P@group]\" cannot be assigned to type \"(BaseCallback[P@group]) -> G@group\"\n-           Parameter 1: type \"(**P@group) -> Coroutine[Any, Any, Any]\" cannot be assigned to type \"Context[Bot]\"\n+           Parameter 1: type \"BaseCallback[P@group]\" cannot be assigned to type \"Context[Bot]\"\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:974:5 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Function return type \"(BaseCallback[P@group]) -> Group[P@group]\" is incompatible with type \"((CallT@group) -> G@group) | G@group\"\n+       Type \"(BaseCallback[P@group]) -> Group[P@group]\" cannot be assigned to type \"((CallT@group) -> G@group) | G@group\"\n+         Type \"(BaseCallback[P@group]) -> Group[P@group]\" cannot be assigned to type \"(CallT@group) -> G@group\"\n+           Function return type \"Group[P@group]\" is incompatible with type \"G@group\"\n+             \"Group[P@group]\" is incompatible with \"Group[(Any)]*\"\n+         \"function\" is incompatible with \"Group[(Any)]*\" (reportGeneralTypeIssues)\n-     Function return type \"Command[P@command]\" is incompatible with type \"((((**P@command) -> Coroutine[Any, Any, Any])) -> C@command) | C@command\"\n+     Function return type \"Command[P@command]\" is incompatible with type \"((BaseCallback[P@command]) -> C@command) | C@command\"\n-       Type \"Command[P@command]\" cannot be assigned to type \"((((**P@command) -> Coroutine[Any, Any, Any])) -> C@command) | C@command\"\n+       Type \"Command[P@command]\" cannot be assigned to type \"((BaseCallback[P@command]) -> C@command) | C@command\"\n-         Type \"Command[P@command]\" cannot be assigned to type \"((**P@command) -> Coroutine[Any, Any, Any]) -> C@command\"\n+         Type \"Command[P@command]\" cannot be assigned to type \"(BaseCallback[P@command]) -> C@command\"\n-           Parameter 1: type \"(**P@command) -> Coroutine[Any, Any, Any]\" cannot be assigned to type \"Context[Bot]\"\n+           Parameter 1: type \"BaseCallback[P@command]\" cannot be assigned to type \"Context[Bot]\"\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:732:9 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Function return type \"(BaseCallback[P@command]) -> Command[P@command]\" is incompatible with type \"((CallT@command) -> C@command) | C@command\"\n+       Type \"(BaseCallback[P@command]) -> Command[P@command]\" cannot be assigned to type \"((CallT@command) -> C@command) | C@command\"\n+         Type \"(BaseCallback[P@command]) -> Command[P@command]\" cannot be assigned to type \"(CallT@command) -> C@command\"\n+           Function return type \"Command[P@command]\" is incompatible with type \"C@command\"\n+             \"Command[P@command]\" is incompatible with \"Command[(Any)]*\"\n+         \"function\" is incompatible with \"Command[(Any)]*\" (reportGeneralTypeIssues)\n-       Keyword parameter \"cls\" of type \"Type[C@command] | None\" cannot be assigned to type \"Type[G@command] | None\" (reportGeneralTypeIssues)\n+       Keyword parameter \"cls\" of type \"Type[C@command] | None\" cannot be assigned to type \"Type[G@command] | None\"\n+       Function return type \"((**P@command) -> Any) -> C@command\" is incompatible with type \"((CallT@command) -> C@command) | C@command\"\n+         Type \"((**P@command) -> Any) -> C@command\" cannot be assigned to type \"((CallT@command) -> C@command) | C@command\"\n+           Type \"((**P@command) -> Any) -> C@command\" cannot be assigned to type \"(CallT@command) -> C@command\"\n+             Parameter 1: type \"CallT@command\" cannot be assigned to type \"(**P@command) -> Any\"\n+           \"function\" is incompatible with \"Command[(Any)]*\" (reportGeneralTypeIssues)\n-     Function return type \"Group[P@group]\" is incompatible with type \"((((**P@group) -> Coroutine[Any, Any, Any])) -> G@group) | G@group\"\n+     Function return type \"Group[P@group]\" is incompatible with type \"((BaseCallback[P@group]) -> G@group) | G@group\"\n-       Type \"Group[P@group]\" cannot be assigned to type \"((((**P@group) -> Coroutine[Any, Any, Any])) -> G@group) | G@group\"\n+       Type \"Group[P@group]\" cannot be assigned to type \"((BaseCallback[P@group]) -> G@group) | G@group\"\n-         Type \"Group[P@group]\" cannot be assigned to type \"((**P@group) -> Coroutine[Any, Any, Any]) -> G@group\"\n+         Type \"Group[P@group]\" cannot be assigned to type \"(BaseCallback[P@group]) -> G@group\"\n-           Parameter 1: type \"(**P@group) -> Coroutine[Any, Any, Any]\" cannot be assigned to type \"Context[Bot]\"\n+           Parameter 1: type \"BaseCallback[P@group]\" cannot be assigned to type \"Context[Bot]\"\n+   /tmp/mypy_primer/projects/steam.py/steam/ext/commands/commands.py:801:9 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Function return type \"(BaseCallback[P@group]) -> Group[P@group]\" is incompatible with type \"((CallT@group) -> G@group) | G@group\"\n+       Type \"(BaseCallback[P@group]) -> Group[P@group]\" cannot be assigned to type \"((CallT@group) -> G@group) | G@group\"\n+         Type \"(BaseCallback[P@group]) -> Group[P@group]\" cannot be assigned to type \"(CallT@group) -> G@group\"\n+           Function return type \"Group[P@group]\" is incompatible with type \"G@group\"\n+             \"Group[P@group]\" is incompatible with \"Group[(Any)]*\"\n+         \"function\" is incompatible with \"Group[(Any)]*\" (reportGeneralTypeIssues)\n- 8715 errors, 48 warnings, 0 informations \n\n... (truncated 1 lines) ...\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py:410:9 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Type \"(self: Self@MenuCommand[_AnyMenuCallbackSigT@MenuCommand, _MenuTypeT@MenuCommand], callback: _CallbackishT[_AnyMenuCallbackSigT@MenuCommand], type_: Any, name: str | Mapping[str, str], /, *, always_defer: bool = False, default_member_permissions: Unknown | int | None = None, default_to_ephemeral: bool | None = None, dm_enabled: bool | None = None, is_global: bool = True, _wrapped_command: ExecutableCommand[Any] | None = None) -> None\" cannot be assigned to type \"(self: MenuCommand[_UserCallbackSigT@__init__, Unknown], callback: _UserCallbackSigT@__init__, type_: Unknown, name: str | Mapping[str, str], /, *, always_defer: bool = False, default_member_permissions: Unknown | int | None = None, default_to_ephemeral: bool | None = None, dm_enabled: bool | None = None, is_global: bool = True, _wrapped_command: ExecutableCommand[Any] | None = None) -> None\"\n+       Parameter 2: type \"_UserCallbackSigT@__init__\" cannot be assigned to type \"_CallbackishT[_AnyMenuCallbackSigT@MenuCommand]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py:410:9 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Type \"(self: Self@MenuCommand[_AnyMenuCallbackSigT@MenuCommand, _MenuTypeT@MenuCommand], callback: _CallbackishT[_AnyMenuCallbackSigT@MenuCommand], type_: Any, name: str | Mapping[str, str], /, *, always_defer: bool = False, default_member_permissions: Unknown | int | None = None, default_to_ephemeral: bool | None = None, dm_enabled: bool | None = None, is_global: bool = True, _wrapped_command: ExecutableCommand[Any] | None = None) -> None\" cannot be assigned to type \"(self: MenuCommand[_UserCallbackSigT@__init__, Unknown], callback: _AnyCommandT[_UserCallbackSigT@__init__], type_: Unknown, name: str | Mapping[str, str], /, *, always_defer: bool = False, default_member_permissions: Unknown | int | None = None, default_to_ephemeral: bool | None = None, dm_enabled: bool | None = None, is_global: bool = True, _wrapped_command: ExecutableCommand[Any] | None = None) -> None\"\n+       Parameter 2: type \"_AnyCommandT[_UserCallbackSigT@__init__]\" cannot be assigned to type \"_CallbackishT[_AnyMenuCallbackSigT@MenuCommand]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py:410:9 - error: Overloaded implementation is not consistent with signature of overload 3\n+     Type \"(self: Self@MenuCommand[_AnyMenuCallbackSigT@MenuCommand, _MenuTypeT@MenuCommand], callback: _CallbackishT[_AnyMenuCallbackSigT@MenuCommand], type_: Any, name: str | Mapping[str, str], /, *, always_defer: bool = False, default_member_permissions: Unknown | int | None = None, default_to_ephemeral: bool | None = None, dm_enabled: bool | None = None, is_global: bool = True, _wrapped_command: ExecutableCommand[Any] | None = None) -> None\" cannot be assigned to type \"(self: MenuCommand[_MessageCallbackSigT@__init__, Unknown], callback: _MessageCallbackSigT@__init__, type_: Unknown, name: str | Mapping[str, str], /, *, always_defer: bool = False, default_member_permissions: Unknown | int | None = None, default_to_ephemeral: bool | None = None, dm_enabled: bool | None = None, is_global: bool = True, _wrapped_command: ExecutableCommand[Any] | None = None) -> None\"\n+       Parameter 2: type \"_MessageCallbackSigT@__init__\" cannot be assigned to type \"_CallbackishT[_AnyMenuCallbackSigT@MenuCommand]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py:410:9 - error: Overloaded implementation is not consistent with signature of overload 4\n+     Type \"(self: Self@MenuCommand[_AnyMenuCallbackSigT@MenuCommand, _MenuTypeT@MenuCommand], callback: _CallbackishT[_AnyMenuCallbackSigT@MenuCommand], type_: Any, name: str | Mapping[str, str], /, *, always_defer: bool = False, default_member_permissions: Unknown | int | None = None, default_to_ephemeral: bool | None = None, dm_enabled: bool | None = None, is_global: bool = True, _wrapped_command: ExecutableCommand[Any] | None = None) -> None\" cannot be assigned to type \"(self: MenuCommand[_MessageCallbackSigT@__init__, Unknown], callback: _AnyCommandT[_MessageCallbackSigT@__init__], type_: Unknown, name: str | Mapping[str, str], /, *, always_defer: bool = False, default_member_permissions: Unknown | int | None = None, default_to_ephemeral: bool | None = None, dm_enabled: bool | None = None, is_global: bool = True, _wrapped_command: ExecutableCommand[Any] | None = None) -> None\"\n+       Parameter 2: type \"_AnyCommandT[_MessageCallbackSigT@__init__]\" cannot be assigned to type \"_CallbackishT[_AnyMenuCallbackSigT@MenuCommand]\" (reportGeneralTypeIssues)\n- 2044 errors, 9912 warnings, 0 informations \n+ 2048 errors, 9912 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:491:5 - error: Overloaded implementation is not consistent with signature of overload 2\n+     Function return type \"((**P@zen) -> R@zen) -> Zen[P@zen, R@zen]\" is incompatible with type \"Zen[P@zen, Any] | ((((**P@zen) -> Any)) -> Zen[P@zen, Any])\"\n+       Type \"((**P@zen) -> R@zen) -> Zen[P@zen, R@zen]\" cannot be assigned to type \"Zen[P@zen, Any] | ((((**P@zen) -> Any)) -> Zen[P@zen, Any])\"\n+         \"function\" is incompatible with \"Zen[P@zen, Any]\"\n+         Type \"((**P@zen) -> R@zen) -> Zen[P@zen, R@zen]\" cannot be assigned to type \"((**P@zen) -> Any) -> Zen[P@zen, Any]\"\n+           Parameter 1: type \"(**P@zen) -> Any\" cannot be assigned to type \"(**P@zen) -> R@zen\"\n+             Type \"(**P@zen) -> Any\" cannot be assigned to type \"(**P@zen) -> R@zen\" (reportGeneralTypeIssues)\n- 179 errors, 0 warnings, 0 informations \n+ 180 errors, 0 warnings, 0 informations \n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-         Type \"int | list[Any]\" cannot be assigned to type \"_SupportsSumNoDefaultT@sum\" (reportGeneralTypeIssues)\n+         Type \"int | list[Any]\" cannot be assigned to type \"_SupportsSumWithNoDefaultGiven\"\n+           Type \"int | list[Any]\" cannot be assigned to type \"_SupportsSumWithNoDefaultGiven\"\n+             \"list[Any]\" is incompatible with protocol \"_SupportsSumWithNoDefaultGiven\" (reportGeneralTypeIssues)\n-     Type \"Literal[1]\" cannot be assigned to type \"AnyStr@to_unicode\" (reportGeneralTypeIssues)\n+     Type \"Literal[1]\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n-     Type \"Literal[True]\" cannot be assigned to type \"AnyStr@to_unicode\" (reportGeneralTypeIssues)\n+     Type \"Literal[True]\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n-     Type \"None\" cannot be assigned to type \"AnyStr@to_unicode\" (reportGeneralTypeIssues)\n+     Type \"None\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n-     Type \"dict[str, str]\" cannot be assigned to type \"AnyStr@to_unicode\" (reportGeneralTypeIssues)\n+     Type \"dict[str, str]\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n\ndiscord.py (https://github.com/Rapptz/discord.py)\n-         Type \"Literal[TranslationContextLocation.command_name]\" cannot be assigned to type \"_L@TranslationContext\"\n-       Parameter 3: type \"Command[Any, (...), Any] | ContextMenu\" cannot be assigned to type \"_D@TranslationContext\"\n-         Type \"Command[Any, (...), Any] | ContextMenu\" cannot be assigned to type \"_D@TranslationContext\" (reportGeneralTypeIssues)\n+       Parameter 3: type \"Command[Any, (...), Any] | ContextMenu\" cannot be assigned to type \"_D@TranslationContext\" (reportGeneralTypeIssues)\n-         Type \"Literal[TranslationContextLocation.command_description]\" cannot be assigned to type \"_L@TranslationContext\"\n-       Parameter 3: type \"Command[Any, (...), Any]\" cannot be assigned to type \"_D@TranslationContext\"\n-         Type \"Command[Any, (...), Any]\" cannot be assigned to type \"_D@TranslationContext\" (reportGeneralTypeIssues)\n+       Parameter 3: type \"Command[Any, (...), Any]\" cannot be assigned to type \"_D@TranslationContext\" (reportGeneralTypeIssues)\n-         Type \"Literal[TranslationContextLocation.group_name, TranslationContextLocation.group_description]\" cannot be assigned to type \"_L@TranslationContext\"\n-       Parameter 3: type \"Group\" cannot be assigned to type \"_D@TranslationContext\"\n-         Type \"Group\" cannot be assigned to type \"_D@TranslationContext\" (reportGeneralTypeIssues)\n+       Parameter 3: type \"Group\" cannot be assigned to type \"_D@TranslationContext\" (reportGeneralTypeIssues)\n-         Type \"Literal[TranslationContextLocation.parameter_name, TranslationContextLocation.parameter_description]\" cannot be assigned to type \"_L@TranslationContext\"\n-       Parameter 3: type \"Parameter\" cannot be assigned to type \"_D@TranslationContext\"\n-         Type \"Parameter\" cannot be assigned to type \"_D@TranslationContext\" (reportGeneralTypeIssues)\n+       Parameter 3: type \"Parameter\" cannot be assigned to type \"_D@TranslationContext\" (reportGeneralTypeIssues)\n-         Type \"Literal[TranslationContextLocation.choice_name]\" cannot be assigned to type \"_L@TranslationContext\"\n-       Parameter 3: type \"Choice[Any]\" cannot be assigned to type \"_D@TranslationContext\"\n-         Type \"Choice[Any]\" cannot be assigned to type \"_D@TranslationContext\" (reportGeneralTypeIssues)\n+       Parameter 3: type \"Choice[Any]\" cannot be assigned to type \"_D@TranslationContext\" (reportGeneralTypeIssues)\n-       Parameter 2: type \"Literal[TranslationContextLocation.other]\" cannot be assigned to type \"_L@TranslationContext\"\n-         Type \"Literal[TranslationContextLocation.other]\" cannot be assigned to type \"_L@TranslationContext\" (reportGeneralTypeIssues)\n+       Parameter 2: type \"Literal[TranslationContextLocation.other]\" cannot be assigned to type \"_L@TranslationContext\" (reportGeneralTypeIssues)\n\nExpression (https://github.com/cognitedata/Expression)\n+ /tmp/mypy_primer/projects/Expression/expression/core/curry.py\n+   /tmp/mypy_primer/projects/Expression/expression/core/curry.py:183:5 - error: Overloaded implementation is not consistent with signature of overload 1\n+     Function return type \"((**_P@curry_flip) -> _A@curry_flip) -> ((**_P@curry_flip) -> _A@curry_flip)\" is incompatible with type \"((...) -> Any) -> ((...) -> Any)\"\n+       Type \"((**_P@curry_flip) -> _A@curry_flip) -> ((**_P@curry_flip) -> _A@curry_flip)\" cannot be assigned to type \"((...) -> Any) -> ((...) -> Any)\"\n+         Parameter 1: type \"(...) -> Any\" cannot be assigned to type \"(**_P@curry_flip) -> _A@curry_flip\"\n+           Type \"(...) -> Any\" cannot be assigned to type \"(**_P@curry_flip) -> _A@curry_flip\" (reportGeneralTypeIssues)\n+ /tmp/mypy_primer/projects/Expression/expression/effect/option.py\n+   /tmp/mypy_primer/projects/Expression/expression/effect/option.py:30:9 - error: Method \"__call__\" overrides class \"Builder\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"(**_P@__call__) -> (Generator[_TSource@OptionBuilder | None, _TSource@OptionBuilder, _TSource@OptionBuilder | None] | Generator[_TSource@OptionBuilder | None, None, _TSource@OptionBuilder | None])\", override parameter is type \"(**_P@__call__) -> (Generator[_TSource@OptionBuilder | None, _TSource@OptionBuilder, _TSource@OptionBuilder | None] | Generator[_TSource@OptionBuilder | None, None, _TSource@OptionBuilder | None])\"\n+     Return type mismatch: base method returns type \"(**_P@__call__) -> Option[Any]\", override returns type \"(**_P@__call__) -> Option[_TSource@OptionBuilder]\"\n+       Type \"(**_P@__call__) -> (Generator[_TSource@OptionBuilder | None, _TSource@OptionBuilder, _TSource@OptionBuilder | None] | Generator[_TSource@OptionBuilder | None, None, _TSource@OptionBuilder | None])\" cannot be assigned to type \"(**_P@__call__) -> (Generator[_TSource@OptionBuilder | None, _TSource@OptionBuilder, _TSource@OptionBuilder | None] | Generator[_TSource@OptionBuilder | None, None, _TSource@OptionBuilder | None])\"\n+       Type \"(**_P@__call__) -> Option[_TSource@OptionBuilder]\" cannot be assigned to type \"(**_P@__call__) -> Option[Any]\" (reportIncompatibleMethodOverride)\n+ /tmp/mypy_primer/projects/Expression/expression/effect/result.py\n+   /tmp/mypy_primer/projects/Expression/expression/effect/result.py:35:9 - error: Method \"__call__\" overrides class \"Builder\" in an incompatible manner\n+     Parameter 2 type mismatch: base parameter is type \"(**_P@__call__) -> (Generator[_TSource@ResultBuilder | None, _TSource@ResultBuilder, _TSource@ResultBuilder | None] | Generator[_TSource@ResultBuilder | None, None, _TSource@ResultBuilder | None])\", override parameter is type \"(**_P@__call__) -> (Generator[_TSource@ResultBuilder | None, _TSource@ResultBuilder, _TSource@ResultBuilder | None] | Generator[_TSource@ResultBuilder | None, None, _TSource@ResultBuilder | None])\"\n+     Return type mismatch: base method returns type \"(**_P@__call__) -> Result[Any, _TError@ResultBuilder]\", override returns type \"(**_P@__call__) -> Result[_TSource@ResultBuilder, _TError@ResultBuilder]\"\n+       Type \"(**_P@__call__) -> (Generator[_TSource@ResultBuilder | None, _TSource@ResultBuilder, _TSource@ResultBuilder | None] | Generator[_TSource@ResultBuilder | None, None, _TSource@ResultBuilder | None])\" cannot be assigned to type \"(**_P@__call__) -> (Generator[_TSource@ResultBuilder | None, _TSource@ResultBuilder, _TSource@ResultBuilder | None] | Generator[_TSource@ResultBuilder | None, None, _TSource@ResultBuilder | None])\"\n+       Type \"(**_P@__call__) -> Result[_TSource@ResultBuilder, _TError@ResultBuilder]\" cannot be assigned to type \"(**_P@__call__) -> Result[Any, _TError@ResultBuilder]\" (reportIncompatibleMethodOverride)\n- 269 errors, 0 warnings, 0 informations \n+ 272 errors, 0 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-       Function accepts too few positional parameters; expected 4 but received 1\n+       Function accepts too few positional parameters; expected 4 but received 1 (reportGeneralTypeIssues)\n-       Function return type \"Coroutine[Any, Any, Unknown] | None\" is incompatible with type \"F@check_output\"\n-         Type \"Coroutine[Any, Any, Unknown] | None\" cannot be assigned to type \"F@check_output\" (reportGeneralTypeIssues)\n\n```"
    ],
    "commit_messages": [
      "Fixed bug that led to an incorrect type evaluation for nested call expressions where an inner call expression used a ParamSpec. This addresses https://github.com/microsoft/pyright/issues/5281. (#5322)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621118aac254a19ac290750",
    "number": 5317,
    "body": "…thin an \"expected type\" should be used for bidirectional type inference. This addresses https://github.com/microsoft/pyright/issues/5312.",
    "head_branch": "issue5312",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py) got 1.27x faster (50.5s -> 39.7s)\n\n```"
    ],
    "commit_messages": [
      "Improved the heuristic used to determine which subtypes of a union within an \"expected type\" should be used for bidirectional type inference. This addresses https://github.com/microsoft/pyright/issues/5312. (#5317)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621118bac254a19ac290751",
    "number": 5316,
    "body": "…ase where Any or Unknown arguments are present.",
    "head_branch": "issue5216-4",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:415:13 - warning: Type of \"results\" is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:21 - warning: Type of \"count\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:43 - warning: Type of \"count\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:13 - warning: Type of \"level\" is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:419:13 - warning: Type of \"level\" is partially unknown\n-     Type of \"level\" is \"Unknown | int\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:421:16 - warning: Return type, \"Unknown | int\", is partially unknown (reportUnknownVariableType)\n- 2044 errors, 9918 warnings, 0 informations \n+ 2044 errors, 9912 warnings, 0 informations \n\ndiscord.py (https://github.com/Rapptz/discord.py) got 1.19x faster (51.4s -> 43.0s)\n\n```"
    ],
    "commit_messages": [
      "Fixed several subtle bugs in the overload matching algorithm in the case where Any or Unknown arguments are present. (#5316)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621118cac254a19ac290752",
    "number": 5315,
    "body": "…ase where Any or Unknown arguments are present.",
    "head_branch": "issue5216-3",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/url.py:432:38 - error: Argument of type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to parameter \"p\" of type \"AnyOrLiteralStr@basename\" in function \"basename\"\n-     Type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to type \"AnyOrLiteralStr@basename\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/url.py:626:38 - error: Argument of type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to parameter \"p\" of type \"AnyOrLiteralStr@basename\" in function \"basename\"\n-     Type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to type \"AnyOrLiteralStr@basename\" (reportGeneralTypeIssues)\n- 3398 errors, 49 warnings, 0 informations \n+ 3396 errors, 49 warnings, 0 informations \n\nfreqtrade (https://github.com/freqtrade/freqtrade) got 1.29x faster (23.3s -> 18.1s)\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:415:13 - warning: Type of \"results\" is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:21 - warning: Type of \"count\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:43 - warning: Type of \"count\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:13 - warning: Type of \"level\" is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:419:13 - warning: Type of \"level\" is partially unknown\n-     Type of \"level\" is \"Unknown | int\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:421:16 - warning: Return type, \"Unknown | int\", is partially unknown (reportUnknownVariableType)\n- 2044 errors, 9918 warnings, 0 informations \n+ 2044 errors, 9912 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/ops/storage.py\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:48:12 - error: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:44:5 - error: Return type is unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:376:9 - error: Type of \"p\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:377:12 - error: Type of \"stdout\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:377:30 - error: Type of \"stdout\" is unknown (reportUnknownMemberType)\n- 3 errors, 0 warnings, 0 informations \n+ 8 errors, 0 warnings, 0 informations \n\nhydra-zen (https://github.com/mit-ll-responsible-ai/hydra-zen)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_make_custom_builds.py:304:16 - error: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/structured_configs/_make_custom_builds.py:292:9 - error: Return type is unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:837:20 - error: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/hydra-zen/src/hydra_zen/wrapper/_implementations.py:852:16 - error: Return type is unknown (reportUnknownVariableType)\n- 179 errors, 0 warnings, 0 informations \n+ 183 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621118dac254a19ac290753",
    "number": 5314,
    "body": "… mypy. It now determines whether an argument's type contains an Any or Unknown (including a type argument) that leads to an ambiguous match.",
    "head_branch": "issue5216-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack) got 1.15x slower (73.0s -> 84.1s)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:322:27 - error: Operator \"+\" not supported for types \"Literal['URL does not exist: ']\" and \"Unknown | None\"\n-     Operator \"+\" not supported for types \"Literal['URL does not exist: ']\" and \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/url.py:432:38 - error: Argument of type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to parameter \"p\" of type \"AnyOrLiteralStr@basename\" in function \"basename\"\n-     Type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to type \"AnyOrLiteralStr@basename\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/url.py:626:38 - error: Argument of type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to parameter \"p\" of type \"AnyOrLiteralStr@basename\" in function \"basename\"\n-     Type \"str | Unknown | Any | Literal[b\"\"]\" cannot be assigned to type \"AnyOrLiteralStr@basename\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/config.py:446:17 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"__value\" of type \"list[Any]\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/config.py:446:17 - error: Argument of type \"str\" cannot be assigned to parameter \"__value\" of type \"list[Any]\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1945:50 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1945:50 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1981:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1981:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1985:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1985:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2021:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2021:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2025:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2025:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2064:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2064:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2068:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2068:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2108:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2108:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2112:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2112:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2222:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2222:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2226:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2226:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2341:52 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2341:52 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2347:52 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2347:52 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:195:23 - error: Argument of type \"Unknown | str | None\" cannot be assigned to parameter \"path\" of type \"StrOrBytesPath\" in function \"__call__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:195:23 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"path\" of type \"StrOrBytesPath\" in function \"__call__\"\n-     Type \"Unknown | str | None\" cannot be assigned to type \"StrOrBytesPath\"\n+     Type \"Unknown | None\" cannot be assigned to type \"StrOrBytesPath\"\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/test/util/log_parser.py\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/util/log_parser.py:33:18 - error: Cannot access member \"text\" for type \"list[float]\"\n-     Member \"text\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/util/log_parser.py:36:18 - error: Cannot access member \"text\" for type \"list[float]\"\n-     Member \"text\" is unknown (reportGeneralTypeIssues)\n- 3398 errors, 49 warnings, 0 informations \n+ 3393 errors, 49 warnings, 0 informations \n\npandas (https://github.com/pandas-dev/pandas) got 1.15x slower (60.8s -> 69.7s)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n+   /tmp/mypy_primer/projects/steam.py/steam/app.py:1469:71 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n- 8730 errors, 48 warnings, 0 informations \n+ 8731 errors, 48 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun) got 1.13x slower (40.5s -> 45.6s)\n+   /tmp/mypy_primer/projects/Tanjun/examples/checks.py:78:2 - error: Untyped function decorator obscures type of function; ignoring decorator (reportUntypedFunctionDecorator)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:415:13 - warning: Type of \"results\" is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:21 - warning: Type of \"count\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:43 - warning: Type of \"count\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:13 - warning: Type of \"level\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:419:13 - warning: Type of \"level\" is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:419:13 - warning: Type of \"level\" is partially unknown\n-     Type of \"level\" is \"Unknown | int\" (reportUnknownVariableType)\n-     Type of \"command\" is \"MenuCommand[SlashCommand[Any] | MessageCommand[Any] | MenuCommand[Any, Any], Unknown]\" (reportUnknownVariableType)\n+     Type of \"command\" is \"MenuCommand[Unknown, Unknown]\" (reportUnknownVariableType)\n-     Type of \"command\" is \"MenuCommand[SlashCommand[Any] | MessageCommand[Any] | MenuCommand[Any, Any], Unknown]\" (reportUnknownVariableType)\n+     Type of \"command\" is \"MenuCommand[Unknown, Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_message.py:94:5 - warning: Type of \"command\" is partially unknown\n+     Type of \"command\" is \"MessageCommand[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_message.py:124:5 - warning: Type of \"command\" is partially unknown\n+     Type of \"command\" is \"MessageCommandGroup[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_message.py:790:100 - warning: Type of \"mock_execute\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_message.py:818:100 - warning: Type of \"mock_execute\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_message.py:843:100 - warning: Type of \"mock_execute\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_slash.py:143:5 - warning: Type of \"command\" is partially unknown\n+     Type of \"command\" is \"SlashCommand[Unknown]\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_slash.py:1896:89 - error: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_slash.py:2143:98 - error: Unnecessary \"# type: ignore\" comment\n- 2044 errors, 9918 warnings, 0 informations \n+ 2043 errors, 9920 warnings, 0 informations \n\noperator (https://github.com/canonical/operator)\n+ /tmp/mypy_primer/projects/operator/ops/model.py\n+   /tmp/mypy_primer/projects/operator/ops/model.py:858:13 - error: Type of \"interface_info\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:859:35 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:859:13 - error: Type of \"interface_name\" is partially unknown\n+     Type of \"interface_name\" is \"Unknown | str\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:860:51 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:860:13 - error: Type of \"addrs\" is partially unknown\n+     Type of \"addrs\" is \"Unknown | List[_AddressDict] | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:862:21 - error: Type of \"address_info\" is partially unknown\n+     Type of \"address_info\" is \"Unknown | _AddressDict\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:863:61 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"name\" in function \"__init__\"\n+     Argument type is \"Unknown | str\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:863:77 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"address_info\" in function \"__init__\"\n+     Argument type is \"Unknown | _AddressDict\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:866:13 - error: Type of \"address\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:867:65 - error: Argument type is unknown\n+     Argument corresponds to parameter \"raw\" in function \"_cast_network_address\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:870:13 - error: Type of \"subnet\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/model.py:871:61 - error: Argument type is unknown\n+     Argument corresponds to parameter \"address\" in function \"ip_network\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:776:38 - error: Argument type is unknown\n+     Argument corresponds to parameter \"__map\" in function \"__init__\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:776:9 - error: Type of \"on_check_failure\" is partially unknown\n+     Type of \"on_check_failure\" is \"dict[Unknown, Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:799:34 - error: Type of \"on_check_failure\" is partially unknown\n+     Type of \"on_check_failure\" is \"dict[Unknown, Unknown]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:783:9 - error: Type of \"fields\" is partially unknown\n+     Type of \"fields\" is \"list[tuple[Literal['summary'], str] | tuple[Literal['description'], str] | tuple[Literal['startup'], str] | tuple[Literal['override'], str] | tuple[Literal['command'], str] | tuple[Literal['after'], list[str]] | tuple[Literal['before'], list[str]] | tuple[Literal['requires'], list[str]] | tuple[Literal['environment'], dict[str, str]] | tuple[Literal['user'], str] | tuple[Literal['user-id'], int | None] | tuple[Literal['group'], str] | tuple[Literal['group-id'], int | None] | tuple[Literal['on-success'], str] | tuple[Literal['on-failure'], str] | tuple[Literal['on-check-failure'], dict[Unknown, Unknown]] | tuple[Literal['backoff-delay'], str] | tuple[Literal['backoff-factor'], int | None] | tuple[Literal['backoff-limit'], str]]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:804:38 - error: Type of \"value\" is partially unknown\n+     Type of \"value\" is \"str | list[str] | dict[str, str] | int | dict[Unknown, Unknown] | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/pebble.py:804:9 - error: Type of \"dct\" is partially unknown\n+     Type of \"dct\" is \"dict[str, str | list[str] | dict[str, str] | int | dict[Unknown, Unknown]]\" (reportUnknownVariableType)\n+ /tmp/mypy_primer/projects/operator/ops/storage.py\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:48:12 - error: Return type, \"CompletedProcess[Unknown]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:44:5 - error: Return type, \"CompletedProcess[Unknown]\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:376:9 - error: Type of \"p\" is partially unknown\n+     Type of \"p\" is \"CompletedProcess[Unknown]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:377:12 - error: Type of \"stdout\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/storage.py:377:30 - error: Type of \"stdout\" is unknown (reportUnknownMemberType)\n+ /tmp/mypy_primer/projects/operator/ops/testing.py\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1450:21 - error: Type of \"full_args\" is partially unknown\n+     Type of \"full_args\" is \"tuple[Unknown, ...]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1515:18 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1515:9 - error: Type of \"option\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1522:25 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1508:9 - error: Type of \"cfg\" is partially unknown\n+     Type of \"cfg\" is \"Unknown | Dict[str, _ConfigOption]\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1509:67 - error: Type of \"items\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1509:67 - error: Type of \"items\" is partially unknown\n+     Type of \"items\" is \"Unknown | (() -> dict_items[str, _ConfigOption])\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1509:53 - error: Type of \"key\" is partially unknown\n+     Type of \"key\" is \"Unknown | str\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1509:58 - error: Type of \"value\" is partially unknown\n+     Type of \"value\" is \"Unknown | _ConfigOption\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1509:22 - error: Type of \"get\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1509:22 - error: Type of \"get\" is partially unknown\n+     Type of \"get\" is \"Unknown | Overload[(k: Literal['type']) -> Literal['string', 'int', 'float', 'boolean'], (k: Literal['type'], default: Any) -> Literal['string', 'int', 'float', 'boolean'], (k: Literal['description']) -> str, (k: Literal['description'], default: Any) -> str, (k: Literal['default']) -> (str | int | float | bool), (k: Literal['default'], default: Any) -> (str | int | float | bool), (k: str) -> (Any | None), (k: str, default: __TDefault@_ConfigOption) -> (Any | __TDefault@_ConfigOption)]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1522:9 - error: Type of \"declared_type\" is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1530:77 - error: Argument type is unknown\n+     Argument corresponds to parameter \"args\" in function \"format\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1532:27 - error: Argument type is unknown\n+     Argument corresponds to parameter \"__key\" in function \"__getitem__\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:1534:60 - error: Argument type is unknown\n+     Argument corresponds to parameter \"args\" in function \"format\" (reportUnknownArgumentType)\n- 3 errors, 0 warnings, 0 informations \n+ 41 errors, 0 warnings, 0 informations \n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:913:9 - error: Type of \"capture\" is partially unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplit.py:913:9 - error: Type of \"capture\" is unknown (reportUnknownVariableType)\n-     Type of \"capture\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n-     Type of \"capture\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n+     Type of \"capture\" is \"Unknown | MatLike | None\" (reportUnknownVariableType)\n-     Argument type is \"MatLike | Unknown\" (reportUnknownArgumentType)\n+     Argument type is \"Unknown | MatLike | None\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:113:13 - error: Type of \"image\" is partially unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:113:13 - error: Type of \"image\" is unknown (reportUnknownVariableType)\n-     Type of \"image\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:122:37 - error: Argument type is unknown\n+     Argument corresponds to parameter \"src\" in function \"inRange\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:124:13 - error: Type of \"image\" is partially unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:124:13 - error: Type of \"image\" is unknown (reportUnknownVariableType)\n-     Type of \"image\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:127:38 - error: Argument type is unknown\n+     Argument corresponds to parameter \"src\" in function \"cvtColor\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:127:17 - error: Type of \"image\" is partially unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/AutoSplitImage.py:127:17 - error: Type of \"image\" is unknown (reportUnknownVariableType)\n-     Type of \"image\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:28:5 - error: Type of \"source_hist\" is partially unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:28:5 - error: Type of \"source_hist\" is unknown (reportUnknownVariableType)\n-     Type of \"source_hist\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:29:5 - error: Type of \"capture_hist\" is partially unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:29:5 - error: Type of \"capture_hist\" is unknown (reportUnknownVariableType)\n-     Type of \"capture_hist\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:31:19 - error: Argument type is unknown\n+     Argument corresponds to parameter \"src\" in function \"normalize\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:31:32 - error: Argument type is unknown\n+     Argument corresponds to parameter \"dst\" in function \"normalize\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:32:19 - error: Argument type is unknown\n+     Argument corresponds to parameter \"src\" in function \"normalize\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:32:33 - error: Argument type is unknown\n+     Argument corresponds to parameter \"dst\" in function \"normalize\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:34:32 - error: Argument type is unknown\n+     Argument corresponds to parameter \"H1\" in function \"compareHist\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:34:45 - error: Argument type is unknown\n+     Argument corresponds to parameter \"H2\" in function \"compareHist\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:68:5 - error: Type of \"result\" is partially unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:68:5 - error: Type of \"result\" is unknown (reportUnknownVariableType)\n-     Type of \"result\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/compare.py:69:33 - error: Argument type is unknown\n+     Argument corresponds to parameter \"src\" in function \"minMaxLoc\" (reportUnknownArgumentType)\n-     Type of \"source\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n+     Type of \"source\" is \"Unknown | MatLike\" (reportUnknownVariableType)\n-     Type of \"capture\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n+     Type of \"capture\" is \"Unknown | MatLike\" (reportUnknownVariableType)\n-     Type of \"template\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n+     Type of \"template\" is \"Unknown | MatLike\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:253:9 - error: Type of \"resized\" is partially unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:253:9 - error: Type of \"resized\" is unknown (reportUnknownVariableType)\n-     Type of \"resized\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:255:45 - error: Argument type is unknown\n+     Argument corresponds to parameter \"templ\" in function \"matchTemplate\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:255:9 - error: Type of \"result\" is partially unknown\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:255:9 - error: Type of \"result\" is unknown (reportUnknownVariableType)\n-     Type of \"result\" is \"MatLike | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/region_selection.py:256:49 - error: Argument type is unknown\n+     Argument corresponds to parameter \"src\" in function \"minMaxLoc\" (reportUnknownArgumentType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py:59:16 - error: Return type, \"tuple[MatLike | Unknown, Literal[False]]\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py:59:16 - error: Return type, \"tuple[Unknown, Literal[False]]\", is partially unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py:36:9 - error: Return type, \"tuple[None, Literal[False]] | tuple[MatLike | Unknown, Literal[False]]\", is partially unknown (reportUnknownParameterType)\n+   /tmp/mypy_primer/projects/AutoSplit/src/capture_method/DesktopDuplicationCaptureMethod.py:36:9 - error: Return type, \"tuple[None, Literal[False]] | tuple[Unknown, Literal[False]]\", is partially unknown (reportUnknownParameterType)\n- 388 errors, 34 warnings, 7 informations \n+ 399 errors, 34 warnings, 7 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:518:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:521:23 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:521:23 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:522:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:523:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:524:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:524:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:530:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:535:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:535:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:540:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:540:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:545:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:545:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n\n... (truncated 98 lines) ...```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621118eac254a19ac290754",
    "number": 5310,
    "body": "…validated against the `**kwargs` parameter type. This addresses https://github.com/microsoft/pyright/issues/5309.",
    "head_branch": "issue5309",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a false negative where an unpacked dictionary argument was not validated against the `**kwargs` parameter type. This addresses https://github.com/microsoft/pyright/issues/5309. (#5310)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621118fac254a19ac290755",
    "number": 5308,
    "body": "Clarifies that `--version` prints the version *and exits*, this is fairly common language used by most CLI apps to indicate what the behavior of `--version` is. It may surprise new users that `--version` exits rather than appending the version with the previous language.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "> @rjdbcm please read the following Contributor License Agreement(CLA). If you agree with the CLA, please reply with the following information.\r\n> \r\n> ```\r\n> @microsoft-github-policy-service agree [company=\"{your company}\"]\r\n> ```\r\n> \r\n> > Options:\r\n> > \r\n> > * (default - no company specified) I have sole ownership of intellectual property rights to my Submissions and I am not making Submissions in the course of work for my employer.\r\n> > \r\n> > ```\r\n> > @microsoft-github-policy-service agree\r\n> > ```\r\n> > \r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > \r\n> > * (when company given) I am making Submissions in the course of work for my employer (or my employer has intellectual property rights in my Submissions by contract or applicable law). I have permission from my employer to make Submissions and enter into this Agreement on behalf of my employer. By signing below, the defined term “You” includes me and my employer.\r\n> > \r\n> > ```\r\n> > @microsoft-github-policy-service agree company=\"Microsoft\"\r\n> > ```\r\n> \r\n> Contributor License Agreement\r\n> ### Contribution License Agreement\r\n> \r\n> This Contribution License Agreement (**“Agreement”**) is agreed to by the party signing below (**“You”**), and conveys certain license rights to Microsoft Corporation and its affiliates (“Microsoft”) for Your contributions to Microsoft open source projects. This Agreement is effective as of the latest signature date below.\r\n> \r\n>     1. **Definitions**.\r\n>        **“Code”** means the computer software code, whether in human-readable or machine-executable form,\r\n>        that is delivered by You to Microsoft under this Agreement.\r\n>        **“Project”** means any of the projects owned or managed by Microsoft and offered under a license\r\n>        approved by the Open Source Initiative ([www.opensource.org](http://www.opensource.org)).\r\n>        **“Submit”** is the act of uploading, submitting, transmitting, or distributing code or other content to any\r\n>        Project, including but not limited to communication on electronic mailing lists, source code control\r\n>        systems, and issue tracking systems that are managed by, or on behalf of, the Project for the purpose of\r\n>        discussing and improving that Project, but excluding communication that is conspicuously marked or\r\n>        otherwise designated in writing by You as “Not a Submission.”\r\n>        **“Submission”** means the Code and any other copyrightable material Submitted by You, including any\r\n>        associated comments and documentation.\r\n> \r\n>     2. **Your Submission**. You must agree to the terms of this Agreement before making a Submission to any\r\n>        Project. This Agreement covers any and all Submissions that You, now or in the future (except as\r\n>        described in Section 4 below), Submit to any Project.\r\n> \r\n>     3. **Originality of Work**. You represent that each of Your Submissions is entirely Your original work.\r\n>        Should You wish to Submit materials that are not Your original work, You may Submit them separately\r\n>        to the Project if You (a) retain all copyright and license information that was in the materials as You\r\n>        received them, (b) in the description accompanying Your Submission, include the phrase “Submission\r\n>        containing materials of a third party:” followed by the names of the third party and any licenses or other\r\n>        restrictions of which You are aware, and (c) follow any other instructions in the Project’s written\r\n>        guidelines concerning Submissions.\r\n> \r\n>     4. **Your Employer**. References to “employer” in this Agreement include Your employer or anyone else\r\n>        for whom You are acting in making Your Submission, e.g. as a contractor, vendor, or agent. If Your\r\n>        Submission is made in the course of Your work for an employer or Your employer has intellectual\r\n>        property rights in Your Submission by contract or applicable law, You must secure permission from Your\r\n>        employer to make the Submission before signing this Agreement. In that case, the term “You” in this\r\n>        Agreement will refer to You and the employer collectively. If You change employers in the future and\r\n>        desire to Submit additional Submissions for the new employer, then You agree to sign a new Agreement\r\n>        and secure permission from the new employer before Submitting those Submissions.\r\n> \r\n>     5. **Licenses**.\r\n> \r\n> \r\n>     * **Copyright License**. You grant Microsoft, and those who receive the Submission directly or\r\n>       indirectly from Microsoft, a perpetual, worldwide, non-exclusive, royalty-free, irrevocable license in the\r\n>       Submission to reproduce, prepare derivative works of, publicly display, publicly perform, and distribute\r\n>       the Submission and such derivative works, and to sublicense any or all of the foregoing rights to third\r\n>       parties.\r\n> \r\n>     * **Patent License**. You grant Microsoft, and those who receive the Submission directly or\r\n>       indirectly from Microsoft, a perpetual, worldwide, non-exclusive, royalty-free, irrevocable license under\r\n>       Your patent claims that are necessarily infringed by the Submission or the combination of the\r\n>       Submission with the Project to which it was Submitted to make, have made, use, offer to sell, sell and\r\n>       import or otherwise dispose of the Submission alone or with the Project.\r\n> \r\n>     * **Other Rights Reserved**. Each party reserves all rights not expressly granted in this Agreement.\r\n>       No additional licenses or rights whatsoever (including, without limitation, any implied licenses) are\r\n>       granted by implication, exhaustion, estoppel or otherwise.\r\n> \r\n> \r\n>     6. **Representations and Warranties**. You represent that You are legally entitled to grant the above\r\n>        licenses. You represent that each of Your Submissions is entirely Your original work (except as You may\r\n>        have disclosed under Section 3). You represent that You have secured permission from Your employer to\r\n>        make the Submission in cases where Your Submission is made in the course of Your work for Your\r\n>        employer or Your employer has intellectual property rights in Your Submission by contract or applicable\r\n>        law. If You are signing this Agreement on behalf of Your employer, You represent and warrant that You\r\n>        have the necessary authority to bind the listed employer to the obligations contained in this Agreement.\r\n>        You are not expected to provide support for Your Submission, unless You choose to do so. UNLESS\r\n>        REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING, AND EXCEPT FOR THE WARRANTIES\r\n>        EXPRESSLY STATED IN SECTIONS 3, 4, AND 6, THE SUBMISSION PROVIDED UNDER THIS AGREEMENT IS\r\n>        PROVIDED WITHOUT WARRANTY OF ANY KIND, INCLUDING, BUT NOT LIMITED TO, ANY WARRANTY OF\r\n>        NONINFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE.\r\n> \r\n>     7. **Notice to Microsoft**. You agree to notify Microsoft in writing of any facts or circumstances of which\r\n>        You later become aware that would make Your representations in this Agreement inaccurate in any\r\n>        respect.\r\n> \r\n>     8. **Information about Submissions**. You agree that contributions to Projects and information about\r\n>        contributions may be maintained indefinitely and disclosed publicly, including Your name and other\r\n>        information that You submit with Your Submission.\r\n> \r\n>     9. **Governing Law/Jurisdiction**. This Agreement is governed by the laws of the State of Washington, and\r\n>        the parties consent to exclusive jurisdiction and venue in the federal courts sitting in King County,\r\n>        Washington, unless no federal subject matter jurisdiction exists, in which case the parties consent to\r\n>        exclusive jurisdiction and venue in the Superior Court of King County, Washington. The parties waive all\r\n>        defenses of lack of personal jurisdiction and forum non-conveniens.\r\n> \r\n>     10. **Entire Agreement/Assignment**. This Agreement is the entire agreement between the parties, and\r\n>         supersedes any and all prior agreements, understandings or communications, written or oral, between\r\n>         the parties relating to the subject matter hereof. This Agreement may be assigned by Microsoft.\r\n\r\n@microsoft-github-policy-service agree",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Clarification of --version argument usage string (#5308)\n\n* Update command-line.md\r\n\r\nclarify that `--version` prints the version *and exits*\r\n\r\n* Update --version usage string\r\n\r\nClarifies that `--version` prints the version *and exits*, this is fairly common language used by most CLI apps to indicate what the behavior of `--version` is. It may surprise new users that `--version` exits rather than appending the version with the previous language."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211190ac254a19ac290756",
    "number": 5305,
    "body": null,
    "head_branch": "issue5296",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n+           Type \"bytes | str\" cannot be assigned to type \"bytes\"\n-           \"str\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n+             \"str\" is incompatible with \"bytes\" (reportGeneralTypeIssues)\n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:127:15 - error: Argument of type \"BytesIO\" cannot be assigned to parameter \"path_or_buf\" of type \"None\" in function \"to_csv\"\n-     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:130:15 - error: Argument of type \"BytesIO\" cannot be assigned to parameter \"path_or_buf\" of type \"None\" in function \"to_csv\"\n-     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_io.py:95:41 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"path\" of type \"None\" in function \"to_orc\"\n-     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_io.py:95:31 - error: \"assert_type\" mismatch: expected \"None\" but received \"Unknown\" (reportGeneralTypeIssues)\n- 1245 errors, 0 warnings, 0 informations \n+ 1241 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed bug that led to false positive errors when (#5305)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211191ac254a19ac290757",
    "number": 5304,
    "body": "…` call. There were situations where the incorrect MRO class was used. This addresses https://github.com/microsoft/pyright/issues/5299.",
    "head_branch": "issue5299-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug in type evaluation of the two-argument form of the `super` call. There were situations where the incorrect MRO class was used. This addresses https://github.com/microsoft/pyright/issues/5299. (#5304)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211192ac254a19ac290758",
    "number": 5302,
    "body": "…atibleMethodOverride` check when a child class is overriding an overloaded method in the base class and one or more of the overloads doesn't apply because the `self` or `cls` parameter is explicitly annotated in a way that's not applicable to the child class. This addresses https://github.com/microsoft/pyright/issues/5288.",
    "head_branch": "issue5288-2",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that leads to a false positive error in the `reportIncompatibleMethodOverride` check when a child class is overriding an overloaded method in the base class and one or more of the overloads doesn't apply because the `self` or `cls` parameter is explicitly annotated in a way that's not applicable to the child class. This addresses https://github.com/microsoft/pyright/issues/5288. (#5302)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211193ac254a19ac290759",
    "number": 5301,
    "body": "…` call. There were situations where the incorrect MRO class was used. This addresses https://github.com/microsoft/pyright/issues/5299.",
    "head_branch": "issue5299",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npydantic (https://github.com/samuelcolvin/pydantic)\n+ /tmp/mypy_primer/projects/pydantic/pydantic/root_model.py\n+   /tmp/mypy_primer/projects/pydantic/pydantic/root_model.py:56:16 - error: Expression of type \"BaseModel\" cannot be assigned to return type \"Model@model_construct\"\n+     Type \"BaseModel\" cannot be assigned to type \"Model@model_construct\" (reportGeneralTypeIssues)\n- 58 errors, 0 warnings, 0 informations \n+ 59 errors, 0 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211194ac254a19ac29075a",
    "number": 5300,
    "body": "…atibleMethodOverride` check when a child class is overriding an overloaded method in the base class and one or more of the overloads doesn't apply because the `self` or `cls` parameter is explicitly annotated in a way that's not applicable to the child class. This addresses https://github.com/microsoft/pyright/issues/5288.",
    "head_branch": "issue5288",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nsteam.py (https://github.com/Gobot1234/steam.py)\n+       \"Type[Message[UserT@Message]]\" is incompatible with \"Type[ChatMessage[AuthorT@ChatMessage, MemberT@ChatMessage]]\"\n+       Type \"Type[Message[UserT@Message]]\" cannot be assigned to type \"Type[ChatMessage[AuthorT@ChatMessage, MemberT@ChatMessage]]\"\n-           Type \"AuthorT@ChatMessage\" cannot be assigned to type \"UserT@Message\" (reportIncompatibleMethodOverride)\n+     ... (reportIncompatibleMethodOverride)\n-     Parameter \"id\" is missing in override (reportIncompatibleMethodOverride)\n+     Parameter \"id\" is missing in override\n+       \"Type[ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]]\" is incompatible with \"Type[Clan]\"\n+       Type \"Type[ChatGroup[MemberT@ChatGroup, ChatT@ChatGroup, ChatGroupTypeT@ChatGroup]]\" cannot be assigned to type \"Type[Clan]\" (reportIncompatibleMethodOverride)\n-     Parameter \"**kwargs\" has no corresponding parameter (reportIncompatibleMethodOverride)\n+     Parameter \"**kwargs\" has no corresponding parameter\n+       \"_IOMixin\" is incompatible with \"ManifestPath\" (reportIncompatibleMethodOverride)\n-     Parameter \"**kwargs\" has no corresponding parameter (reportIncompatibleMethodOverride)\n+     Parameter \"**kwargs\" has no corresponding parameter\n+       \"_IOMixin\" is incompatible with \"ManifestPath\" (reportIncompatibleMethodOverride)\n+       \"Type[Message[UserT@Message]]\" is incompatible with \"Type[UserMessage[UserMessageAuthorT@UserMessage]]\"\n+       Type \"Type[Message[UserT@Message]]\" cannot be assigned to type \"Type[UserMessage[UserMessageAuthorT@UserMessage]]\"\n-     Parameter \"**kwargs\" has no corresponding parameter (reportIncompatibleMethodOverride)\n+     Parameter \"**kwargs\" has no corresponding parameter\n+       \"_IOMixin\" is incompatible with \"Award\" (reportIncompatibleMethodOverride)\n+       \"collections.ChainMap\" is incompatible with \"steam.utils.ChainMap\"\n+       \"dict[_KT@dict, _VT@dict]\" is incompatible with \"ConverterDict\"\n+       \"Mapping[_KT@Mapping, _VT_co@Mapping]\" is incompatible with \"CaseInsensitiveDict[_VT@CaseInsensitiveDict]\"\n-     Positional parameter count mismatch; base method has 4, but override has 2 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 4, but override has 2\n+       \"GCMessage\" is incompatible with \"CraftResponse\" (reportIncompatibleMethodOverride)\n-     Positional parameter count mismatch; base method has 4, but override has 2 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 4, but override has 2\n+       \"GCMessage\" is incompatible with \"CacheSubscribedCheck\" (reportIncompatibleMethodOverride)\n-     Positional parameter count mismatch; base method has 3, but override has 2 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 3, but override has 2\n+       \"Message\" is incompatible with \"ClientGetLegacyGameKeyResponse\" (reportIncompatibleMethodOverride)\n-     Positional parameter count mismatch; base method has 3, but override has 2 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 3, but override has 2\n+       \"Message\" is incompatible with \"ClientGetFriendsWhoPlayGameResponse\" (reportIncompatibleMethodOverride)\n-     Parameter 2 name mismatch: base parameter is named \"message\", override parameter is named \"arguments\" (reportIncompatibleMethodOverride)\n+     Parameter 2 name mismatch: base parameter is named \"message\", override parameter is named \"arguments\"\n+       \"Bot\" is incompatible with \"TheTestBot\" (reportIncompatibleMethodOverride)\n+       \"ConverterBase[T_co@ConverterBase]\" is incompatible with \"MediaConverter\"\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+       \"tanjun.abc.Client\" is incompatible with \"tanjun.clients.Client\"\n+       \"tanjun.abc.Component\" is incompatible with \"tanjun.components.Component\"\n\nExpression (https://github.com/cognitedata/Expression)\n+     \"MutableSequence[_T@MutableSequence]\" is incompatible with \"TypedArray[_TSource@TypedArray]\"\n+       \"MutableSequence[_T@MutableSequence]\" is incompatible with \"TypedArray[_TSource@TypedArray]\"\n\nAutoSplit (https://github.com/Toufool/AutoSplit)\n+     \"dict[_KT@dict, _VT@dict]\" is incompatible with \"CaptureMethodDict\"\n-     Positional parameter count mismatch; base method has 3, but override has 2 (reportIncompatibleMethodOverride)\n+     Positional parameter count mismatch; base method has 3, but override has 2\n+       \"dict[_KT@dict, _VT@dict]\" is incompatible with \"CaptureMethodDict\" (reportIncompatibleMethodOverride)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211195ac254a19ac29075b",
    "number": 5296,
    "body": "…e case where a partially-solved type variable with a solution of `Any` are provided by other argument types in a call. This addresses https://github.com/microsoft/pyright/issues/5243.",
    "head_branch": "issue5243-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1774:38 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"fdst\" of type \"SupportsWrite[AnyStr@copyfileobj]\" in function \"copyfileobj\"\n-     \"BufferedWriter\" is incompatible with protocol \"SupportsWrite[AnyStr@copyfileobj]\"\n-       TypeVar \"_T_contra@SupportsWrite\" is contravariant\n-         Type \"ReadableBuffer\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n- 3412 errors, 49 warnings, 0 informations \n+ 3411 errors, 49 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Modified protocol matching and the constraint solver to handle an edge case where a partially-solved type variable with a solution of `Any` are provided by other argument types in a call. This addresses https://github.com/microsoft/pyright/issues/5243. (#5296)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211196ac254a19ac29075c",
    "number": 5295,
    "body": "…ument` diagnostic when using a generic type in conjunction with the `|` union operator in the second argument to an `isinstance` or `issubclass` call. This addresses https://github.com/microsoft/pyright/issues/5294.",
    "head_branch": "issue5294",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon) got 2.24x faster (11.5s -> 5.1s)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py) got 1.09x slower (78.5s -> 85.9s)\n\n```"
    ],
    "commit_messages": [
      "Fixed a regression that caused a false positive `reportMissingTypeArgument` diagnostic when using a generic type in conjunction with the `|` union operator in the second argument to an `isinstance` or `issubclass` call. This addresses https://github.com/microsoft/pyright/issues/5294. (#5295)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211197ac254a19ac29075d",
    "number": 5293,
    "body": "rollup of the following changes:\n    1. Next step in sync server https://github.com/microsoft/pyrx/pull/3695\n    2. call handle memory high usage in completion https://github.com/microsoft/pyrx/pull/3689\n    3. refactored runEditMode https://github.com/microsoft/pyrx/pull/3687\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.314",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack) got 1.09x slower (63.9s -> 69.4s)\n\n```"
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.314 (#5293)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211198ac254a19ac29075e",
    "number": 5291,
    "body": " - adding a publisher name to pyright-internal to match vscode-pyright.  Loc pipeline uses this publisher name.\r\n - adding dev dependency on vscode's loc tools\r\n - current plan is to have pylance run the localization update for both repos",
    "head_branch": "loc-pipeline-update",
    "is_a_fork": true,
    "comments": [
      "i've reworked the loc pipeline so these changes are no longer needed. benefits is one less package to npm install"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211199ac254a19ac29075f",
    "number": 5284,
    "body": "…tion that returns a callable with a ParamSpec that does not appear outside of the return type annotation. This addresses https://github.com/microsoft/pyright/issues/5283.",
    "head_branch": "issue5283",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/schedules.py:406:39 - warning: Type of \"_loop\" is partially unknown\n+     Type of \"_loop\" is \"(client: Unknown, /) -> Coroutine[Any, Any, None]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/schedules.py:406:50 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"client\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/schedules.py:1099:39 - warning: Type of \"_loop\" is partially unknown\n+     Type of \"_loop\" is \"(client: Unknown, /) -> Coroutine[Any, Any, None]\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/schedules.py:1099:50 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"client\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/reloaders.py:499:53 - warning: Argument type is unknown\n+     Argument corresponds to parameter \"client\" (reportUnknownArgumentType)\n- 2067 errors, 9913 warnings, 0 informations \n+ 2067 errors, 9918 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a regression that caused an incorrect type evaluation of a function that returns a callable with a ParamSpec that does not appear outside of the return type annotation. This addresses https://github.com/microsoft/pyright/issues/5283. (#5284)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621119aac254a19ac290760",
    "number": 5280,
    "body": "…pandas-stubs library. More investigation is needed.\"\r\n\r\nThis reverts commit 24b612fda2720db163336a03bc81cc1af39e8e2e.",
    "head_branch": "issue5216",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack) got 1.13x slower (77.5s -> 87.2s)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/config.py:446:17 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"__value\" of type \"list[Any]\" in function \"__setitem__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/cmd/config.py:446:17 - error: Argument of type \"str\" cannot be assigned to parameter \"__value\" of type \"list[Any]\" in function \"__setitem__\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1945:50 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1945:50 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1981:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1981:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1985:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:1985:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2021:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2021:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2025:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2025:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2064:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2064:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2068:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2068:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2108:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2108:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2112:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2112:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2222:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2222:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2226:54 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2226:54 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2341:52 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2341:52 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2347:52 - error: Argument of type \"LiteralString\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:2347:52 - error: Argument of type \"str\" cannot be assigned to parameter \"paths\" of type \"BytesPath\" in function \"join\"\n-     Type \"LiteralString\" cannot be assigned to type \"BytesPath\"\n+     Type \"str\" cannot be assigned to type \"BytesPath\"\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:195:23 - error: Argument of type \"Unknown | str | None\" cannot be assigned to parameter \"path\" of type \"StrOrBytesPath\" in function \"__call__\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/llnl/util/lock.py:195:23 - error: Argument of type \"Unknown | None\" cannot be assigned to parameter \"path\" of type \"StrOrBytesPath\" in function \"__call__\"\n-     Type \"Unknown | str | None\" cannot be assigned to type \"StrOrBytesPath\"\n+     Type \"Unknown | None\" cannot be assigned to type \"StrOrBytesPath\"\n- /tmp/mypy_primer/projects/spack/lib/spack/spack/test/util/log_parser.py\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/util/log_parser.py:33:18 - error: Cannot access member \"text\" for type \"list[float]\"\n-     Member \"text\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/util/log_parser.py:36:18 - error: Cannot access member \"text\" for type \"list[float]\"\n-     Member \"text\" is unknown (reportGeneralTypeIssues)\n- 3412 errors, 49 warnings, 0 informations \n+ 3410 errors, 49 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:518:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:521:23 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:521:23 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:522:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:523:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:524:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:524:23 - error: \"assert_type\" mismatch: expected \"Series[Unknown]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:530:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:535:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:535:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:540:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:540:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:545:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:545:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:577:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:577:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:586:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:593:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:593:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:599:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[tuple[int, int, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:599:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:604:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[dict[str, int]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:604:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:622:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Series[Unknown]]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:622:13 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:695:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:695:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:701:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:701:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:707:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:707:21 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:713:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:713:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:720:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"DataFrame\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:720:13 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:912:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1134:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1134:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1139:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1139:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1154:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1154:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1160:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:1160:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2152:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Series[Unknown]\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2152:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2467:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2502:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2503:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2534:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:2535:23 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:256:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[Timestamp]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:256:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[Timestamp]]\" but received \"IntervalIndex[Unknown]\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:411:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[int]]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_indexes.py:411:13 - error: \"assert_type\" mismatch: expected \"IntervalIndex[Interval[int]]\" but received \"IntervalIndex[Unknown]\" (reportGeneralTypeIssues)\n\n... (truncated 89 lines) ...\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py) got 1.12x slower (69.5s -> 77.5s)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:413:43 - error: Argument of type \"LiteralString | None\" cannot be assigned to parameter \"url\" of type \"str\" in function \"_set_url_tag\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/contrib/django/patch.py:413:43 - error: Argument of type \"str | None\" cannot be assigned to parameter \"url\" of type \"str\" in function \"_set_url_tag\"\n-     Type \"LiteralString | None\" cannot be assigned to type \"str\"\n+     Type \"str | None\" cannot be assigned to type \"str\"\n\nTanjun (https://github.com/FasterSpeeding/Tanjun) got 1.15x slower (42.5s -> 48.9s)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:415:13 - warning: Type of \"results\" is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:21 - warning: Type of \"count\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:43 - warning: Type of \"count\" is unknown (reportUnknownMemberType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:416:13 - warning: Type of \"level\" is unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:419:13 - warning: Type of \"level\" is partially unknown\n-     Type of \"level\" is \"Unknown | int\" (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:421:16 - warning: Return type, \"Unknown | int\", is partially unknown (reportUnknownVariableType)\n-   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_slash.py:1896:89 - error: Unnecessary \"# type: ignore\" comment\n-   /tmp/mypy_primer/projects/Tanjun/tests/commands/test_slash.py:2143:98 - error: Unnecessary \"# type: ignore\" comment\n- 2067 errors, 9913 warnings, 0 informations \n+ 2065 errors, 9907 warnings, 0 informations \n\nExpression (https://github.com/cognitedata/Expression)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/block.py:310:22 - error: Argument type is unknown\n+     Argument corresponds to parameter \"value\" in function \"__init__\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Expression/expression/collections/seq.py:217:20 - error: Argument type is unknown\n+     Argument corresponds to parameter \"iterable\" in function \"__init__\" (reportUnknownArgumentType)\n- 310 errors, 0 warnings, 0 informations \n+ 312 errors, 0 warnings, 0 informations \n\npandas (https://github.com/pandas-dev/pandas) got 1.16x slower (66.7s -> 77.1s)\n\nxarray-dataclasses (https://github.com/astropenguin/xarray-dataclasses)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/datamodel.py:135:20 - warning: Return type is unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/xarray-dataclasses/xarray_dataclasses/typing.py:300:12 - error: Expression of type \"Type[DataclassInstance]\" cannot be assigned to return type \"Type[DataClass[(Any)]]\"\n+     \"DataclassInstance\" is incompatible with protocol \"DataClass[(Any)]\"\n+     Type \"Type[DataclassInstance]\" cannot be assigned to type \"Type[DataClass[(Any)]]\"\n+       TypeVar \"PInit@DataClass\" is invariant\n+         Type \"()\" cannot be assigned to type \"(Any)\"\n+           Function accepts too many positional parameters; expected 0 but received 1 (reportGeneralTypeIssues)\n- 46 errors, 181 warnings, 0 informations \n+ 47 errors, 182 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621119bac254a19ac290761",
    "number": 5279,
    "body": "…rride` error for overloaded method overrides in cases where the overloads are differentiated based on explicit types for the `self` or `cls` parameter. This addresses https://github.com/microsoft/pyright/discussions/5275.",
    "head_branch": "issue5275",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\ndd-trace-py (https://github.com/DataDog/dd-trace-py) got 1.18x faster (72.6s -> 61.6s)\n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:203:9 - warning: Method \"with_on_error\" overrides class \"Hooks\" in an incompatible manner\n+     Overload 0 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:253:9 - warning: Method \"with_on_parser_error\" overrides class \"Hooks\" in an incompatible manner\n+     Overload 0 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:300:9 - warning: Method \"with_post_execution\" overrides class \"Hooks\" in an incompatible manner\n+     Overload 0 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:347:9 - warning: Method \"with_pre_execution\" overrides class \"Hooks\" in an incompatible manner\n+     Overload 0 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:394:9 - warning: Method \"with_on_success\" overrides class \"Hooks\" in an incompatible manner\n+     Overload 0 is not compatible with base method (reportIncompatibleMethodOverride)\n- 2067 errors, 9908 warnings, 0 informations \n+ 2067 errors, 9913 warnings, 0 informations \n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:203:9 - warning: Method \"with_on_error\" overrides class \"Hooks\" in an incompatible manner\n+     Overload 0 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:253:9 - warning: Method \"with_on_parser_error\" overrides class \"Hooks\" in an incompatible manner\n+     Overload 0 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:300:9 - warning: Method \"with_post_execution\" overrides class \"Hooks\" in an incompatible manner\n+     Overload 0 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:347:9 - warning: Method \"with_pre_execution\" overrides class \"Hooks\" in an incompatible manner\n+     Overload 0 is not compatible with base method (reportIncompatibleMethodOverride)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/hooks.py:394:9 - warning: Method \"with_on_success\" overrides class \"Hooks\" in an incompatible manner\n+     Overload 0 is not compatible with base method (reportIncompatibleMethodOverride)\n- 2067 errors, 9908 warnings, 0 informations \n+ 2067 errors, 9913 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false positive `reportIncompatibleMethodOverride` error for overloaded method overrides in cases where the overloads are differentiated based on explicit types for the `self` or `cls` parameter. This addresses https://github.com/microsoft/pyright/discussions/5275. (#5279)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621119bac254a19ac290762",
    "number": 5276,
    "body": "…en analyzing an overloaded function that includes a ParamSpec that uses itself as an argument. This addresses https://github.com/microsoft/pyright/issues/5163.",
    "head_branch": "issue5163",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack) got 1.12x faster (58.2s -> 52.0s)\n\n```"
    ],
    "commit_messages": [
      "Fixed a bug that led to infinite analysis time and heap exhaustion when analyzing an overloaded function that includes a ParamSpec that uses itself as an argument. This addresses https://github.com/microsoft/pyright/issues/5163. (#5276)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621119cac254a19ac290763",
    "number": 5274,
    "body": "Updated typeshed to the latest version.",
    "head_branch": "typeshedUpdate-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-       Type \"str\" cannot be assigned to type \"ReadableBuffer\"\n-         \"str\" is incompatible with \"ReadOnlyBuffer\"\n+       \"str\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"str\" is incompatible with \"bytearray\"\n-         \"str\" is incompatible with \"memoryview\"\n-         \"str\" is incompatible with \"array[Any]\"\n-         \"str\" is incompatible with \"mmap\"\n-         \"str\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:353:78 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"ReadOnlyBuffer\" in function \"ioctl\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:353:78 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"Buffer\" in function \"ioctl\"\n-     \"Literal['1234']\" is incompatible with \"ReadOnlyBuffer\" (reportGeneralTypeIssues)\n+     \"Literal['1234']\" is incompatible with protocol \"Buffer\"\n+       \"__buffer__\" is not present (reportGeneralTypeIssues)\n-       \"match_to_ansi\" is incompatible with \"ReadOnlyBuffer\"\n+       \"match_to_ansi\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present\n+       Type \"match_to_ansi\" cannot be assigned to type \"(Match[bytes]) -> ReadableBuffer\"\n+         Function return type \"str | Unknown\" is incompatible with type \"ReadableBuffer\"\n+           Type \"str | Unknown\" cannot be assigned to type \"ReadableBuffer\"\n+             \"str\" is incompatible with protocol \"ReadableBuffer\" (reportGeneralTypeIssues)\n-       \"match_to_ansi\" is incompatible with \"bytearray\"\n-       \"match_to_ansi\" is incompatible with \"memoryview\"\n-       \"match_to_ansi\" is incompatible with \"array[Any]\"\n-       \"match_to_ansi\" is incompatible with \"mmap\"\n-       \"match_to_ansi\" is incompatible with \"_CData\"\n-       \"match_to_ansi\" is incompatible with \"PickleBuffer\"\n-     ... (reportGeneralTypeIssues)\n-       Type \"Literal[True]\" cannot be assigned to type \"ReadableBuffer\"\n-         \"Literal[True]\" is incompatible with \"ReadOnlyBuffer\"\n+       \"Literal[True]\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"Literal[True]\" is incompatible with \"bytearray\"\n-         \"Literal[True]\" is incompatible with \"memoryview\"\n-         \"Literal[True]\" is incompatible with \"array[Any]\"\n-         \"Literal[True]\" is incompatible with \"mmap\"\n-         \"Literal[True]\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1774:38 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"fdst\" of type \"SupportsWrite[AnyStr@copyfileobj]\" in function \"copyfileobj\"\n+     \"BufferedWriter\" is incompatible with protocol \"SupportsWrite[AnyStr@copyfileobj]\"\n+       TypeVar \"_T_contra@SupportsWrite\" is contravariant\n+         Type \"ReadableBuffer\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[bytes]\"\n+     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[AnyStr@copyfileobj]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:372:42 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"fdst\" of type \"SupportsWrite[AnyStr@copyfileobj]\" in function \"copyfileobj\"\n+     \"BufferedWriter\" is incompatible with protocol \"SupportsWrite[AnyStr@copyfileobj]\"\n+       TypeVar \"_T_contra@SupportsWrite\" is contravariant\n+         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n+           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n+             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[bytes]\"\n+     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[AnyStr@copyfileobj]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1332:44 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"fdst\" of type \"SupportsWrite[AnyStr@copyfileobj]\" in function \"copyfileobj\"\n+     \"BufferedWriter\" is incompatible with protocol \"SupportsWrite[AnyStr@copyfileobj]\"\n+       TypeVar \"_T_contra@SupportsWrite\" is contravariant\n+         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n+           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n+             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[bytes]\"\n+     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[AnyStr@copyfileobj]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1379:44 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"fdst\" of type \"SupportsWrite[AnyStr@copyfileobj]\" in function \"copyfileobj\"\n+     \"BufferedWriter\" is incompatible with protocol \"SupportsWrite[AnyStr@copyfileobj]\"\n+       TypeVar \"_T_contra@SupportsWrite\" is contravariant\n+         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n+           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n+             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-       Type \"str\" cannot be assigned to type \"ReadableBuffer\"\n-         \"str\" is incompatible with \"ReadOnlyBuffer\"\n+       \"str\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"str\" is incompatible with \"bytearray\"\n-         \"str\" is incompatible with \"memoryview\"\n-         \"str\" is incompatible with \"array[Any]\"\n-         \"str\" is incompatible with \"mmap\"\n-         \"str\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n-       Type \"str\" cannot be assigned to type \"ReadableBuffer\"\n-         \"str\" is incompatible with \"ReadOnlyBuffer\"\n+       \"str\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"str\" is incompatible with \"bytearray\"\n-         \"str\" is incompatible with \"memoryview\"\n-         \"str\" is incompatible with \"array[Any]\"\n-         \"str\" is incompatible with \"mmap\"\n-         \"str\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n- 3408 errors, 49 warnings, 0 informations \n+ 3412 errors, 49 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:127:15 - error: Argument of type \"BytesIO\" cannot be assigned to parameter \"path_or_buf\" of type \"None\" in function \"to_csv\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:130:15 - error: Argument of type \"BytesIO\" cannot be assigned to parameter \"path_or_buf\" of type \"None\" in function \"to_csv\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_io.py:95:41 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"path\" of type \"None\" in function \"to_orc\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_io.py:95:31 - error: \"assert_type\" mismatch: expected \"None\" but received \"Unknown\" (reportGeneralTypeIssues)\n- 1241 errors, 0 warnings, 0 informations \n+ 1245 errors, 0 warnings, 0 informations \n\nalectryon (https://github.com/cpitclaudel/alectryon)\n-       Type \"str\" cannot be assigned to type \"ReadableBuffer\"\n-         \"str\" is incompatible with \"ReadOnlyBuffer\"\n+       \"str\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"str\" is incompatible with \"bytearray\"\n-         \"str\" is incompatible with \"memoryview\"\n-         \"str\" is incompatible with \"array[Any]\"\n-         \"str\" is incompatible with \"mmap\"\n-         \"str\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n\noperator (https://github.com/canonical/operator)\n-         \"int\" is incompatible with \"ReadOnlyBuffer\"\n+         \"int\" is incompatible with protocol \"ReadableBuffer\"\n+           \"__buffer__\" is not present\n-         \"int\" is incompatible with \"bytearray\"\n-         \"int\" is incompatible with \"memoryview\"\n-         \"int\" is incompatible with \"array[Any]\"\n-         \"int\" is incompatible with \"mmap\"\n+         \"int\" is incompatible with \"str\"\n-         \"int\" is incompatible with \"_CData\" (reportGeneralTypeIssues)\n+         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/context.py:206:52 - error: Argument of type \"Text\" cannot be assigned to parameter \"__o\" of type \"ReadableBuffer | Iterable[SupportsIndex] | SupportsIndex | SupportsBytes\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/context.py:206:52 - error: Argument of type \"Text\" cannot be assigned to parameter \"__o\" of type \"Iterable[SupportsIndex] | SupportsIndex | SupportsBytes | ReadableBuffer\" in function \"__new__\"\n-     Type \"Text\" cannot be assigned to type \"ReadableBuffer | Iterable[SupportsIndex] | SupportsIndex | SupportsBytes\"\n+     Type \"Text\" cannot be assigned to type \"Iterable[SupportsIndex] | SupportsIndex | SupportsBytes | ReadableBuffer\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/remoteconfig/_connectors.py:88:17 - error: Argument of type \"str\" cannot be assigned to parameter \"__o\" of type \"ReadableBuffer | Iterable[SupportsIndex] | SupportsIndex | SupportsBytes\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/remoteconfig/_connectors.py:88:17 - error: Argument of type \"str\" cannot be assigned to parameter \"__o\" of type \"Iterable[SupportsIndex] | SupportsIndex | SupportsBytes | ReadableBuffer\" in function \"__new__\"\n-     Type \"str\" cannot be assigned to type \"ReadableBuffer | Iterable[SupportsIndex] | SupportsIndex | SupportsBytes\"\n+     Type \"str\" cannot be assigned to type \"Iterable[SupportsIndex] | SupportsIndex | SupportsBytes | ReadableBuffer\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/settings/config.py:279:39 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__x\" of type \"ReadableBuffer | SupportsFloat | SupportsIndex | str\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/settings/config.py:279:39 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__x\" of type \"SupportsFloat | SupportsIndex | str | ReadableBuffer\" in function \"__new__\"\n-     Type \"str | None\" cannot be assigned to type \"ReadableBuffer | SupportsFloat | SupportsIndex | str\"\n+     Type \"str | None\" cannot be assigned to type \"SupportsFloat | SupportsIndex | str | ReadableBuffer\"\n-       Type \"None\" cannot be assigned to type \"ReadableBuffer | SupportsFloat | SupportsIndex | str\"\n+       Type \"None\" cannot be assigned to type \"SupportsFloat | SupportsIndex | str | ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         Type \"None\" cannot be assigned to type \"ReadOnlyBuffer\"\n-         Type \"None\" cannot be assigned to type \"bytearray\"\n-         Type \"None\" cannot be assigned to type \"memoryview\"\n-     ... (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_compat.py:329:62 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"ReadOnlyBuffer\" in function \"ioctl\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_compat.py:329:62 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"Buffer\" in function \"ioctl\"\n-     \"Literal['1234']\" is incompatible with \"ReadOnlyBuffer\" (reportGeneralTypeIssues)\n+     \"Literal['1234']\" is incompatible with protocol \"Buffer\"\n+       \"__buffer__\" is not present (reportGeneralTypeIssues)\n-       Type \"str\" cannot be assigned to type \"ReadableBuffer\"\n-         \"str\" is incompatible with \"ReadOnlyBuffer\"\n+       \"str\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"str\" is incompatible with \"bytearray\"\n-         \"str\" is incompatible with \"memoryview\"\n-         \"str\" is incompatible with \"array[Any]\"\n-         \"str\" is incompatible with \"mmap\"\n-         \"str\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1342:28 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1342:28 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n-     Type \"Unknown | str | object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+     Type \"Unknown | str | object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-       Type \"object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+       Type \"object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-         \"object\" is incompatible with \"ReadOnlyBuffer\"\n+         \"object\" is incompatible with protocol \"ReadableBuffer\"\n+           \"__buffer__\" is not present\n-         \"object\" is incompatible with \"bytearray\"\n-         \"object\" is incompatible with \"memoryview\"\n-         \"object\" is incompatible with \"array[Any]\"\n-         \"object\" is incompatible with \"mmap\"\n+         \"object\" is incompatible with protocol \"SupportsInt\"\n+           \"__int__\" is not present\n+         \"object\" is incompatible with protocol \"SupportsIndex\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1374:23 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1374:23 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n-     Type \"Unknown | str | object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+     Type \"Unknown | str | object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-       Type \"object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+       Type \"object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-         \"object\" is incompatible with \"ReadOnlyBuffer\"\n+         \"object\" is incompatible with protocol \"ReadableBuffer\"\n+           \"__buffer__\" is not present\n-         \"object\" is incompatible with \"bytearray\"\n-         \"object\" is incompatible with \"memoryview\"\n-         \"object\" is incompatible with \"array[Any]\"\n-         \"object\" is incompatible with \"mmap\"\n+         \"object\" is incompatible with protocol \"SupportsInt\"\n+           \"__int__\" is not present\n+         \"object\" is incompatible with protocol \"SupportsIndex\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:707:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:707:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n-     Type \"Unknown | str | object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+     Type \"Unknown | str | object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-       Type \"object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+       Type \"object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-         \"object\" is incompatible with \"ReadOnlyBuffer\"\n+         \"object\" is incompatible with protocol \"ReadableBuffer\"\n+           \"__buffer__\" is not present\n-         \"object\" is incompatible with \"bytearray\"\n-         \"object\" is incompatible with \"memoryview\"\n-         \"object\" is incompatible with \"array[Any]\"\n-         \"object\" is incompatible with \"mmap\"\n+         \"object\" is incompatible with protocol \"SupportsInt\"\n+           \"__int__\" is not present\n+         \"object\" is incompatible with protocol \"SupportsIndex\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:708:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:708:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n-     Type \"Unknown | str | object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+     Type \"Unknown | str | object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-       Type \"object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+       Type \"object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-         \"object\" is incompatible with \"ReadOnlyBuffer\"\n+         \"object\" is incompatible with protocol \"ReadableBuffer\"\n+           \"__buffer__\" is not present\n-         \"object\" is incompatible with \"bytearray\"\n-         \"object\" is incompatible with \"memoryview\"\n-         \"object\" is incompatible with \"array[Any]\"\n\n... (truncated 310 lines) ...\n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:615:17 - error: Argument of type \"None\" cannot be assigned to parameter \"s\" of type \"str\" in function \"write\"\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:615:17 - error: Argument of type \"str | Unknown | None\" cannot be assigned to parameter \"s\" of type \"str\" in function \"write\"\n+     Type \"str | Unknown | None\" cannot be assigned to type \"str\"\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:618:21 - error: \"strip\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:618:21 - error: Cannot access member \"strip\" for type \"None\"\n-     Member \"strip\" is unknown (reportGeneralTypeIssues)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-     Type of \"search\" is \"Overload[(string: str, pos: int = 0, endpos: int = sys.maxsize) -> (Match[str] | None), (string: bytes | bytearray | memoryview | array[Any] | mmap | _CData | PickleBuffer, pos: int = 0, endpos: int = sys.maxsize) -> (Match[bytes] | None), (string: Unknown, pos: int = 0, endpos: int = sys.maxsize) -> (Match[Unknown] | None)]\" (reportUnknownMemberType)\n+     Type of \"search\" is \"Overload[(string: str, pos: int = 0, endpos: int = sys.maxsize) -> (Match[str] | None), (string: Buffer, pos: int = 0, endpos: int = sys.maxsize) -> (Match[bytes] | None), (string: Unknown, pos: int = 0, endpos: int = sys.maxsize) -> (Match[Unknown] | None)]\" (reportUnknownMemberType)\n\n```",
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nalectryon (https://github.com/cpitclaudel/alectryon)\n-       Type \"str\" cannot be assigned to type \"ReadableBuffer\"\n-         \"str\" is incompatible with \"ReadOnlyBuffer\"\n+       \"str\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"str\" is incompatible with \"bytearray\"\n-         \"str\" is incompatible with \"memoryview\"\n-         \"str\" is incompatible with \"array[Any]\"\n-         \"str\" is incompatible with \"mmap\"\n-         \"str\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n\nspack (https://github.com/spack/spack)\n-       Type \"str\" cannot be assigned to type \"ReadableBuffer\"\n-         \"str\" is incompatible with \"ReadOnlyBuffer\"\n+       \"str\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"str\" is incompatible with \"bytearray\"\n-         \"str\" is incompatible with \"memoryview\"\n-         \"str\" is incompatible with \"array[Any]\"\n-         \"str\" is incompatible with \"mmap\"\n-         \"str\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:353:78 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"ReadOnlyBuffer\" in function \"ioctl\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/llnl/util/tty/__init__.py:353:78 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"Buffer\" in function \"ioctl\"\n-     \"Literal['1234']\" is incompatible with \"ReadOnlyBuffer\" (reportGeneralTypeIssues)\n+     \"Literal['1234']\" is incompatible with protocol \"Buffer\"\n+       \"__buffer__\" is not present (reportGeneralTypeIssues)\n-       \"match_to_ansi\" is incompatible with \"ReadOnlyBuffer\"\n+       \"match_to_ansi\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present\n+       Type \"match_to_ansi\" cannot be assigned to type \"(Match[bytes]) -> ReadableBuffer\"\n+         Function return type \"str | Unknown\" is incompatible with type \"ReadableBuffer\"\n+           Type \"str | Unknown\" cannot be assigned to type \"ReadableBuffer\"\n+             \"str\" is incompatible with protocol \"ReadableBuffer\" (reportGeneralTypeIssues)\n-       \"match_to_ansi\" is incompatible with \"bytearray\"\n-       \"match_to_ansi\" is incompatible with \"memoryview\"\n-       \"match_to_ansi\" is incompatible with \"array[Any]\"\n-       \"match_to_ansi\" is incompatible with \"mmap\"\n-       \"match_to_ansi\" is incompatible with \"_CData\"\n-       \"match_to_ansi\" is incompatible with \"PickleBuffer\"\n-     ... (reportGeneralTypeIssues)\n-       Type \"Literal[True]\" cannot be assigned to type \"ReadableBuffer\"\n-         \"Literal[True]\" is incompatible with \"ReadOnlyBuffer\"\n+       \"Literal[True]\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"Literal[True]\" is incompatible with \"bytearray\"\n-         \"Literal[True]\" is incompatible with \"memoryview\"\n-         \"Literal[True]\" is incompatible with \"array[Any]\"\n-         \"Literal[True]\" is incompatible with \"mmap\"\n-         \"Literal[True]\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/ci.py:1774:38 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"fdst\" of type \"SupportsWrite[AnyStr@copyfileobj]\" in function \"copyfileobj\"\n+     \"BufferedWriter\" is incompatible with protocol \"SupportsWrite[AnyStr@copyfileobj]\"\n+       TypeVar \"_T_contra@SupportsWrite\" is contravariant\n+         Type \"ReadableBuffer\" is incompatible with constrained type variable \"AnyStr\" (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[bytes]\"\n+     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[AnyStr@copyfileobj]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:372:42 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"fdst\" of type \"SupportsWrite[AnyStr@copyfileobj]\" in function \"copyfileobj\"\n+     \"BufferedWriter\" is incompatible with protocol \"SupportsWrite[AnyStr@copyfileobj]\"\n+       TypeVar \"_T_contra@SupportsWrite\" is contravariant\n+         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n+           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n+             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[bytes]\"\n+     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[AnyStr@copyfileobj]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1332:44 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"fdst\" of type \"SupportsWrite[AnyStr@copyfileobj]\" in function \"copyfileobj\"\n+     \"BufferedWriter\" is incompatible with protocol \"SupportsWrite[AnyStr@copyfileobj]\"\n+       TypeVar \"_T_contra@SupportsWrite\" is contravariant\n+         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n+           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n+             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[bytes]\"\n+     Type \"Unknown | None\" cannot be assigned to type \"SupportsRead[AnyStr@copyfileobj]\"\n+   /tmp/mypy_primer/projects/spack/lib/spack/spack/fetch_strategy.py:1379:44 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"fdst\" of type \"SupportsWrite[AnyStr@copyfileobj]\" in function \"copyfileobj\"\n+     \"BufferedWriter\" is incompatible with protocol \"SupportsWrite[AnyStr@copyfileobj]\"\n+       TypeVar \"_T_contra@SupportsWrite\" is contravariant\n+         Type \"str* | bytes*\" cannot be assigned to type \"ReadableBuffer\"\n+           \"str*\" is incompatible with protocol \"ReadableBuffer\"\n+             \"__buffer__\" is not present (reportGeneralTypeIssues)\n-       Type \"str\" cannot be assigned to type \"ReadableBuffer\"\n-         \"str\" is incompatible with \"ReadOnlyBuffer\"\n+       \"str\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"str\" is incompatible with \"bytearray\"\n-         \"str\" is incompatible with \"memoryview\"\n-         \"str\" is incompatible with \"array[Any]\"\n-         \"str\" is incompatible with \"mmap\"\n-         \"str\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n-       Type \"str\" cannot be assigned to type \"ReadableBuffer\"\n-         \"str\" is incompatible with \"ReadOnlyBuffer\"\n+       \"str\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"str\" is incompatible with \"bytearray\"\n-         \"str\" is incompatible with \"memoryview\"\n-         \"str\" is incompatible with \"array[Any]\"\n-         \"str\" is incompatible with \"mmap\"\n-         \"str\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n- 3408 errors, 49 warnings, 0 informations \n+ 3412 errors, 49 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:127:15 - error: Argument of type \"BytesIO\" cannot be assigned to parameter \"path_or_buf\" of type \"None\" in function \"to_csv\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:130:15 - error: Argument of type \"BytesIO\" cannot be assigned to parameter \"path_or_buf\" of type \"None\" in function \"to_csv\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_io.py:95:41 - error: Argument of type \"BufferedWriter\" cannot be assigned to parameter \"path\" of type \"None\" in function \"to_orc\"\n+     Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_io.py:95:31 - error: \"assert_type\" mismatch: expected \"None\" but received \"Unknown\" (reportGeneralTypeIssues)\n- 1241 errors, 0 warnings, 0 informations \n+ 1245 errors, 0 warnings, 0 informations \n\npandera (https://github.com/pandera-dev/pandera)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:615:17 - error: Argument of type \"None\" cannot be assigned to parameter \"s\" of type \"str\" in function \"write\"\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:615:17 - error: Argument of type \"str | Unknown | None\" cannot be assigned to parameter \"s\" of type \"str\" in function \"write\"\n+     Type \"str | Unknown | None\" cannot be assigned to type \"str\"\n-     Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+       Type \"None\" cannot be assigned to type \"str\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:618:21 - error: \"strip\" is not a known member of \"None\" (reportOptionalMemberAccess)\n-   /tmp/mypy_primer/projects/pandera/tests/io/test_io.py:618:21 - error: Cannot access member \"strip\" for type \"None\"\n-     Member \"strip\" is unknown (reportGeneralTypeIssues)\n\ndd-trace-py (https://github.com/DataDog/dd-trace-py)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/context.py:206:52 - error: Argument of type \"Text\" cannot be assigned to parameter \"__o\" of type \"ReadableBuffer | Iterable[SupportsIndex] | SupportsIndex | SupportsBytes\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/context.py:206:52 - error: Argument of type \"Text\" cannot be assigned to parameter \"__o\" of type \"Iterable[SupportsIndex] | SupportsIndex | SupportsBytes | ReadableBuffer\" in function \"__new__\"\n-     Type \"Text\" cannot be assigned to type \"ReadableBuffer | Iterable[SupportsIndex] | SupportsIndex | SupportsBytes\"\n+     Type \"Text\" cannot be assigned to type \"Iterable[SupportsIndex] | SupportsIndex | SupportsBytes | ReadableBuffer\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/remoteconfig/_connectors.py:88:17 - error: Argument of type \"str\" cannot be assigned to parameter \"__o\" of type \"ReadableBuffer | Iterable[SupportsIndex] | SupportsIndex | SupportsBytes\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/internal/remoteconfig/_connectors.py:88:17 - error: Argument of type \"str\" cannot be assigned to parameter \"__o\" of type \"Iterable[SupportsIndex] | SupportsIndex | SupportsBytes | ReadableBuffer\" in function \"__new__\"\n-     Type \"str\" cannot be assigned to type \"ReadableBuffer | Iterable[SupportsIndex] | SupportsIndex | SupportsBytes\"\n+     Type \"str\" cannot be assigned to type \"Iterable[SupportsIndex] | SupportsIndex | SupportsBytes | ReadableBuffer\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/settings/config.py:279:39 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__x\" of type \"ReadableBuffer | SupportsFloat | SupportsIndex | str\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/settings/config.py:279:39 - error: Argument of type \"str | None\" cannot be assigned to parameter \"__x\" of type \"SupportsFloat | SupportsIndex | str | ReadableBuffer\" in function \"__new__\"\n-     Type \"str | None\" cannot be assigned to type \"ReadableBuffer | SupportsFloat | SupportsIndex | str\"\n+     Type \"str | None\" cannot be assigned to type \"SupportsFloat | SupportsIndex | str | ReadableBuffer\"\n-       Type \"None\" cannot be assigned to type \"ReadableBuffer | SupportsFloat | SupportsIndex | str\"\n+       Type \"None\" cannot be assigned to type \"SupportsFloat | SupportsIndex | str | ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         Type \"None\" cannot be assigned to type \"ReadOnlyBuffer\"\n-         Type \"None\" cannot be assigned to type \"bytearray\"\n-         Type \"None\" cannot be assigned to type \"memoryview\"\n-     ... (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_compat.py:329:62 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"ReadOnlyBuffer\" in function \"ioctl\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_compat.py:329:62 - error: Argument of type \"Literal['1234']\" cannot be assigned to parameter \"__arg\" of type \"Buffer\" in function \"ioctl\"\n-     \"Literal['1234']\" is incompatible with \"ReadOnlyBuffer\" (reportGeneralTypeIssues)\n+     \"Literal['1234']\" is incompatible with protocol \"Buffer\"\n+       \"__buffer__\" is not present (reportGeneralTypeIssues)\n-       Type \"str\" cannot be assigned to type \"ReadableBuffer\"\n-         \"str\" is incompatible with \"ReadOnlyBuffer\"\n+       \"str\" is incompatible with protocol \"ReadableBuffer\"\n+         \"__buffer__\" is not present (reportGeneralTypeIssues)\n-         \"str\" is incompatible with \"bytearray\"\n-         \"str\" is incompatible with \"memoryview\"\n-         \"str\" is incompatible with \"array[Any]\"\n-         \"str\" is incompatible with \"mmap\"\n-         \"str\" is incompatible with \"_CData\"\n-     ... (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1342:28 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1342:28 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n-     Type \"Unknown | str | object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+     Type \"Unknown | str | object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-       Type \"object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+       Type \"object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-         \"object\" is incompatible with \"ReadOnlyBuffer\"\n+         \"object\" is incompatible with protocol \"ReadableBuffer\"\n+           \"__buffer__\" is not present\n-         \"object\" is incompatible with \"bytearray\"\n-         \"object\" is incompatible with \"memoryview\"\n-         \"object\" is incompatible with \"array[Any]\"\n-         \"object\" is incompatible with \"mmap\"\n+         \"object\" is incompatible with protocol \"SupportsInt\"\n+           \"__int__\" is not present\n+         \"object\" is incompatible with protocol \"SupportsIndex\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1374:23 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:1374:23 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n-     Type \"Unknown | str | object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+     Type \"Unknown | str | object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-       Type \"object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+       Type \"object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-         \"object\" is incompatible with \"ReadOnlyBuffer\"\n+         \"object\" is incompatible with protocol \"ReadableBuffer\"\n+           \"__buffer__\" is not present\n-         \"object\" is incompatible with \"bytearray\"\n-         \"object\" is incompatible with \"memoryview\"\n-         \"object\" is incompatible with \"array[Any]\"\n-         \"object\" is incompatible with \"mmap\"\n+         \"object\" is incompatible with protocol \"SupportsInt\"\n+           \"__int__\" is not present\n+         \"object\" is incompatible with protocol \"SupportsIndex\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:707:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:707:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n-     Type \"Unknown | str | object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+     Type \"Unknown | str | object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-       Type \"object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+       Type \"object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-         \"object\" is incompatible with \"ReadOnlyBuffer\"\n+         \"object\" is incompatible with protocol \"ReadableBuffer\"\n+           \"__buffer__\" is not present\n-         \"object\" is incompatible with \"bytearray\"\n-         \"object\" is incompatible with \"memoryview\"\n-         \"object\" is incompatible with \"array[Any]\"\n-         \"object\" is incompatible with \"mmap\"\n+         \"object\" is incompatible with protocol \"SupportsInt\"\n+           \"__int__\" is not present\n+         \"object\" is incompatible with protocol \"SupportsIndex\"\n-   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:708:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n+   /tmp/mypy_primer/projects/dd-trace-py/ddtrace/vendor/psutil/_pslinux.py:708:24 - error: Argument of type \"Unknown | str | object\" cannot be assigned to parameter \"__x\" of type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\" in function \"__new__\"\n-     Type \"Unknown | str | object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+     Type \"Unknown | str | object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-       Type \"object\" cannot be assigned to type \"ReadableBuffer | str | SupportsInt | SupportsIndex | SupportsTrunc\"\n+       Type \"object\" cannot be assigned to type \"str | ReadableBuffer | SupportsInt | SupportsIndex | SupportsTrunc\"\n-         \"object\" is incompatible with \"ReadOnlyBuffer\"\n+         \"object\" is incompatible with protocol \"ReadableBuffer\"\n+           \"__buffer__\" is not present\n-         \"object\" is incompatible with \"bytearray\"\n-         \"object\" is incompatible with \"memoryview\"\n-         \"object\" is incompatible with \"array[Any]\"\n\n... (truncated 310 lines) ...\n\noperator (https://github.com/canonical/operator)\n-         \"int\" is incompatible with \"ReadOnlyBuffer\"\n+         \"int\" is incompatible with protocol \"ReadableBuffer\"\n+           \"__buffer__\" is not present\n-         \"int\" is incompatible with \"bytearray\"\n-         \"int\" is incompatible with \"memoryview\"\n-         \"int\" is incompatible with \"array[Any]\"\n-         \"int\" is incompatible with \"mmap\"\n+         \"int\" is incompatible with \"str\"\n-         \"int\" is incompatible with \"_CData\" (reportGeneralTypeIssues)\n+         Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\n\nsteam.py (https://github.com/Gobot1234/steam.py)\n-     Type of \"search\" is \"Overload[(string: str, pos: int = 0, endpos: int = sys.maxsize) -> (Match[str] | None), (string: bytes | bytearray | memoryview | array[Any] | mmap | _CData | PickleBuffer, pos: int = 0, endpos: int = sys.maxsize) -> (Match[bytes] | None), (string: Unknown, pos: int = 0, endpos: int = sys.maxsize) -> (Match[Unknown] | None)]\" (reportUnknownMemberType)\n+     Type of \"search\" is \"Overload[(string: str, pos: int = 0, endpos: int = sys.maxsize) -> (Match[str] | None), (string: Buffer, pos: int = 0, endpos: int = sys.maxsize) -> (Match[bytes] | None), (string: Unknown, pos: int = 0, endpos: int = sys.maxsize) -> (Match[Unknown] | None)]\" (reportUnknownMemberType)\n\n```"
    ],
    "commit_messages": [
      "Typeshed update 2 (#5274)\n\n* Improved the protocol matching logic so it honors partially-solved type variables whose values are provided by other argument types in a call. This addresses https://github.com/microsoft/pyright/issues/5243.\r\n\r\n* Updated typeshed to the latest version.\r\n\r\n---------\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621119dac254a19ac290764",
    "number": 5273,
    "body": "…pe variables whose values are provided by other argument types in a call. This addresses https://github.com/microsoft/pyright/issues/5243.",
    "head_branch": "issue5243-3",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Improved the protocol matching logic so it honors partially-solved type variables whose values are provided by other argument types in a call. This addresses https://github.com/microsoft/pyright/issues/5243. (#5273)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621119eac254a19ac290765",
    "number": 5272,
    "body": "…required to fix https://github.com/microsoft/pyright/issues/5243.",
    "head_branch": "issue5243-cleanup",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Cleaned up code in protocols module in prep for a significant change required to fix https://github.com/microsoft/pyright/issues/5243. (#5272)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621119fac254a19ac290766",
    "number": 5271,
    "body": "…pe variables whose values are provided by other argument types in a call. This addresses https://github.com/microsoft/pyright/issues/5243.",
    "head_branch": "issue5243-2",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\npandas-stubs (https://github.com/pandas-dev/pandas-stubs) got 1.28x faster (32.2s -> 25.1s)\n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a0ac254a19ac290767",
    "number": 5270,
    "body": "…pe variables whose values are provided by other argument types in a call. This addresses https://github.com/microsoft/pyright/issues/5243.",
    "head_branch": "issue5243",
    "is_a_fork": false,
    "comments": [
      "Diff from [mypy_primer](https://github.com/hauntsaninja/mypy_primer), showing the effect of this PR on open source code:\n```diff\nspack (https://github.com/spack/spack)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:3022:40 - error: Cannot access member \"version\" for type \"SpecBuildInterface\"\n-     Member \"version\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:3022:40 - error: Cannot access member \"version\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"version\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:3024:40 - error: Cannot access member \"version\" for type \"SpecBuildInterface\"\n-     Member \"version\" is unknown (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/spack/lib/spack/spack/test/cmd/env.py:3024:40 - error: Cannot access member \"version\" for type \"tuple[Unknown, Unknown]\"\n-     Member \"version\" is unknown (reportGeneralTypeIssues)\n- 3422 errors, 50 warnings, 0 informations \n+ 3418 errors, 50 warnings, 0 informations \n\npandas-stubs (https://github.com/pandas-dev/pandas-stubs)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:993:21 - error: \"assert_type\" mismatch: expected \"bool\" but received \"Scalar\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:993:21 - error: \"assert_type\" mismatch: expected \"bool\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_frame.py:997:21 - error: \"assert_type\" mismatch: expected \"DataFrame\" but received \"Unknown\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:301:27 - error: \"assert_type\" mismatch: expected \"str\" but received \"NAType | NaTType | str | None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:301:27 - error: \"assert_type\" mismatch: expected \"str\" but received \"str | NAType | NaTType | None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:306:21 - error: \"assert_type\" mismatch: expected \"NaTType | NAType | None\" but received \"NAType | NaTType | str | None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:306:21 - error: \"assert_type\" mismatch: expected \"NaTType | NAType | None\" but received \"str | NAType | NaTType | None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:331:27 - error: \"assert_type\" mismatch: expected \"bool\" but received \"NAType | bool | None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:331:27 - error: \"assert_type\" mismatch: expected \"bool\" but received \"bool | NAType | None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:337:21 - error: \"assert_type\" mismatch: expected \"NaTType | NAType | None\" but received \"NAType | bool | None\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_pandas.py:337:21 - error: \"assert_type\" mismatch: expected \"NaTType | NAType | None\" but received \"bool | NAType | None\" (reportGeneralTypeIssues)\n-   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:743:21 - error: \"assert_type\" mismatch: expected \"bool\" but received \"Scalar\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:743:21 - error: \"assert_type\" mismatch: expected \"bool\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:746:23 - error: \"assert_type\" mismatch: expected \"Series[int]\" but received \"Unknown\" (reportGeneralTypeIssues)\n+   /tmp/mypy_primer/projects/pandas-stubs/tests/test_series.py:1210:17 - error: \"assert_type\" mismatch: expected \"int\" but received \"Unknown\" (reportGeneralTypeIssues)\n- 1241 errors, 0 warnings, 0 informations \n+ 1244 errors, 0 warnings, 0 informations \n\nTanjun (https://github.com/FasterSpeeding/Tanjun)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:243:22 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"__i\" in function \"next\"\n+     Argument type is \"SupportsNext[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:243:5 - warning: Type of \"parameter\" is partially unknown\n+     Type of \"parameter\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:244:25 - warning: Type of \"kind\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:247:8 - warning: Type of \"annotation\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:247:32 - warning: Type of \"empty\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/__init__.py:252:31 - warning: Type of \"annotation\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:96:30 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"__i\" in function \"next\"\n+     Argument type is \"SupportsNext[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:96:17 - warning: Type of \"entry\" is partially unknown\n+     Type of \"entry\" is \"Unknown | None\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:101:13 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"Unknown | str\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:104:15 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:143:70 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:143:70 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"__default\" in function \"get\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:143:20 - warning: Type of \"format\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:143:20 - warning: Type of \"format\" is partially unknown\n+     Type of \"format\" is \"((*args: object, **kwargs: object) -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:143:20 - warning: Return type, \"str | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:145:16 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:145:16 - warning: Type of \"format\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:145:16 - warning: Type of \"format\" is partially unknown\n+     Type of \"format\" is \"((*args: object, **kwargs: object) -> str) | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/_internal/localisation.py:145:16 - warning: Return type, \"str | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py:555:16 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py:555:16 - warning: Return type, \"str | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/menu.py:584:35 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:952:16 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:952:16 - warning: Return type, \"str | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:971:16 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:971:16 - warning: Return type, \"str | Unknown\", is partially unknown (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1157:13 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1157:13 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"name\" in function \"__init__\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1159:13 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1159:13 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"description\" in function \"__init__\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1724:22 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1724:9 - warning: Type of \"key\" is partially unknown\n+     Type of \"key\" is \"str | Unknown\" (reportUnknownVariableType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1774:22 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1776:29 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1790:22 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1790:22 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"name\" in function \"__init__\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1795:21 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"key\" in function \"__init__\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1789:35 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:1789:13 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"__key\" in function \"__setitem__\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2068:37 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2068:13 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"__key\" in function \"__setitem__\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2225:37 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2225:13 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"__key\" in function \"__setitem__\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2392:39 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/commands/slash.py:2392:13 - warning: Argument type is partially unknown\n+     Argument corresponds to parameter \"__key\" in function \"__setitem__\"\n+     Argument type is \"str | Unknown\" (reportUnknownArgumentType)\n-     Argument type is \"Iterator[Unknown]\" (reportUnknownArgumentType)\n+     Argument type is \"SupportsNext[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:1076:21 - warning: Type of \"default_value\" is partially unknown\n+     Type of \"default_value\" is \"str | Unknown\" (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:1076:21 - warning: Type of \"removesuffix\" is unknown (reportUnknownMemberType)\n+   /tmp/mypy_primer/projects/Tanjun/tanjun/dependencies/limiters.py:1076:21 - warning: Type of \"removesuffix\" is partially unknown\n+     Type of \"removesuffix\" is \"((__suffix: str, /) -> str) | Unknown\" (reportUnknownMemberType)\n\n... (truncated 5 lines) ...\n\noperator (https://github.com/canonical/operator)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:2567:34 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__i\" in function \"next\"\n+     Argument type is \"SupportsNext[Unknown]\" (reportUnknownArgumentType)\n+   /tmp/mypy_primer/projects/operator/ops/testing.py:2567:13 - error: Type of \"first_service\" is unknown (reportUnknownVariableType)\n- 117 errors, 0 warnings, 0 informations \n+ 119 errors, 0 warnings, 0 informations \n\nantidote (https://github.com/Finistere/antidote)\n+   /tmp/mypy_primer/projects/antidote/src/antidote/core/_injection.py:212:51 - error: Argument type is partially unknown\n+     Argument corresponds to parameter \"__i\" in function \"next\"\n+     Argument type is \"SupportsNext[Unknown]\" (reportUnknownArgumentType)\n- 4272 errors, 74 warnings, 0 informations \n+ 4273 errors, 74 warnings, 0 informations \n\nmaterialize (https://github.com/MaterializeInc/materialize)\n+   /tmp/mypy_primer/projects/materialize/misc/python/materialize/zippy/replica_actions.py:110:53 - error: Argument of type \"ReplicaExists | None\" cannot be assigned to parameter \"capability\" of type \"T@remove_capability_instance\" in function \"remove_capability_instance\"\n+     Type \"ReplicaExists | None\" cannot be assigned to type \"T@remove_capability_instance\" (reportGeneralTypeIssues)\n- 188 errors, 58 warnings, 0 informations \n+ 189 errors, 58 warnings, 0 informations \n\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a1ac254a19ac290768",
    "number": 5269,
    "body": "…n preparation for further changes.",
    "head_branch": "simplify1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Simplified buildTypeVarContextFromSpecializedClass utility function in preparation for further changes. (#5269)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a2ac254a19ac290769",
    "number": 5263,
    "body": "…le of length one to a function that requires more (or fewer) than one positional argument. This addresses https://github.com/microsoft/pyright/issues/5261.",
    "head_branch": "issue5261",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed a bug that led to a false negative when passing an unpacked tuple of length one to a function that requires more (or fewer) than one positional argument. This addresses https://github.com/microsoft/pyright/issues/5261. (#5263)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a3ac254a19ac29076a",
    "number": 5262,
    "body": "…singTypeArgument` check when defining an old-style type alias. This same bug resulted in inconsistent behavior between `Union` and `|`, which should be equivalent. This addresses https://github.com/microsoft/pyright/issues/5256.",
    "head_branch": "issue5256",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [
      "Fixed bug that resulted in a false negative when using the `reportMissingTypeArgument` check when defining an old-style type alias. This same bug resulted in inconsistent behavior between `Union` and `|`, which should be equivalent. This addresses https://github.com/microsoft/pyright/issues/5256. (#5262)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a4ac254a19ac29076b",
    "number": 5259,
    "body": "When both scripts are executed in `scripts:` section, and `pyright` reports error, second script is not executed.\r\n\r\nBest way to ensure report are always converted, is to use `after_script:` block.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks for the contribution."
    ],
    "commit_messages": [
      "Update ci-integration.md (#5259)\n\nWhen both scripts are executed in `scripts:` section, and `pyright` reports error, second script is not executed.\r\n\r\nBest way to ensure report are always converted, is to use `after_script:` block."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a5ac254a19ac29076c",
    "number": 5257,
    "body": null,
    "head_branch": "testPR1",
    "is_a_fork": false,
    "comments": [
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅",
      "According to [mypy_primer](https://github.com/hauntsaninja/mypy_primer), this change doesn't affect type check results on a corpus of open source code. ✅"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a6ac254a19ac29076d",
    "number": 5248,
    "body": "rollup of the following changes:\r\n   1. some refactoring to share code\r\n   2. support removing folder in FileSystem\r\n   3. and etc\r\n   \r\nCo-authored-by:\r\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>",
    "head_branch": "pull-pylance-2023611",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push pylance changes to pyright (#5248)\n\n* Push pylance changes to pyright\r\n\r\n* Update packages/pyright-internal/src/backgroundThreadBase.ts\r\n\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a7ac254a19ac29076e",
    "number": 5247,
    "body": null,
    "head_branch": "esbuild",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Switched from ts-loader to esbuild-loader for better build performance. (#5247)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a8ac254a19ac29076f",
    "number": 5238,
    "body": "The first paragraph of this page of documentation has been modified to be less wordy and more informative. It now provides a more detailed overview of this page of documentation with the same number of words as before.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "I appreciate your interest in pyright, but I think the current wording in the documentation is preferable to your changes. I'm therefore going to leave it unmodified."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a9ac254a19ac290770",
    "number": 5211,
    "body": "rollup of the following changes:\n    1. Exposed user file indexing limit to settings. https://github.com/microsoft/pyrx/pull/3530\n    2. Fixed a bug where incorrect casing is used. https://github.com/microsoft/pyrx/pull/3531\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.311",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.311 (#5211)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111a9ac254a19ac290771",
    "number": 5184,
    "body": " to better align with vscode/l10n-dev localization toollchain:\r\n\r\nhttps://github.com/microsoft/vscode-l10n/tree/main/l10n-dev",
    "head_branch": "reformat-loc-files",
    "is_a_fork": true,
    "comments": [
      "What is the reason for this change? Are you preparing to add localized support for more languages? If there's not a good reason to make the change, I'd prefer to keep it as is. The new technique takes up a bunch of extra memory because it includes a bunch of redundant strings.",
      "Yes this is to add localization..\r\n\r\nI think I could add a transformation to the localization pipeline to convert between our version and their expected format instead then. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111aaac254a19ac290772",
    "number": 5171,
    "body": "rollup of the following changes:\n    1. Tweaked our server so that if python path is not set, we will turn off semantic features https://github.com/microsoft/pyrx/pull/3525\n    2. Support anything for the 'type' comment https://github.com/microsoft/pyrx/pull/3524\n    3. Only allow rename local symbols in untitled files\n    4. Add isUntitled to renameProvider\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>\n    ",
    "head_branch": "pull-pylance-with-pyright-1.1.310",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.310 (#5171)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111abac254a19ac290773",
    "number": 5155,
    "body": null,
    "head_branch": "pull-pylance-with-pyright-1.1.274",
    "is_a_fork": true,
    "comments": [
      "I presume this PR was created in error, so I will close it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111acac254a19ac290774",
    "number": 5152,
    "body": "The current parser does not keep track of whether or not there are parentheses around unary operators. This causes ambiguity when it comes to converting the parse tree back into a string, as there are some operators tighter than unary operators; for example, `reveal_type((-2) ** 2)` currently incorrectly reports the expression to be `-2 ** 2`, which is actually equivalent to `-(2 ** 2)`.\r\n\r\nThis simple change makes it so that the nodes for unary operators and `await` expressions store whether or not they were parenthesized in the same manner that binary operators already did, fixing the printing of expressions such as `(await f())[0]`.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Thanks for the contribution. The change looks good to me. I'll merge as soon as the CI tests pass.",
      "@microsoft-github-policy-service agree"
    ],
    "commit_messages": [
      "Preserve parentheses around unary operators for printing (#5152)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111adac254a19ac290775",
    "number": 5143,
    "body": "Forgot to add this in https://github.com/microsoft/pyright/pull/5034\r\n\r\nAlso changed the first character of some recently added lines to be lowercase for consistency. Left Self and TypedDict capitalized since they are type names.",
    "head_branch": "pep712docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add PEP 712 to features.md (#5143)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111aeac254a19ac290776",
    "number": 5142,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4393\r\n\r\n`SmartSelectionProvider` calls `TextRange.combine` on `ParseNode` arrays. Currently that causes the `start` and/or `length` of the first node in the array to be changed to the combined range's length.\r\n\r\nThis would be an easy mistake to make in other places. In fact, I believe these other two usages are also resulting in unintended `ParseNode` changes:\r\n- https://github.com/microsoft/pyright/blob/fedcafb706c335b17ca2617d3d2d1ab07030f51f/packages/pyright-internal/src/analyzer/typeEvaluator.ts#LL15171\r\n- https://github.com/microsoft/pyrx/blob/main/packages/pylance-internal/src/languageService/completionProvider.ts#L579\r\n\r\nSo I've modified `combine` to leave the input ranges unchanged.\r\n\r\nI looked through the other calls to `TextRange.combine` and none of them are relying on the current behavior. ",
    "head_branch": "pylance4393",
    "is_a_fork": true,
    "comments": [
      "it would be nice if all these parse node is marked as `readonly` outside of `parser.ts`",
      "> it would be nice if all these parse node is marked as `readonly` outside of `parser.ts`\r\n\r\nWe're tracking that work in general with https://github.com/microsoft/pyrx/issues/3333. It would be awesome to improve this. We've had several bugs of this type over the past few months."
    ],
    "commit_messages": [
      "`TextRange.combine` should not modify input ranges (#5142)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111afac254a19ac290777",
    "number": 5132,
    "body": "…ariant. This is related to https://github.com/microsoft/pyright/issues/5118.",
    "head_branch": "pep705-ReadOnly",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Implemented `ReadOnly` TypedDict fields to explore proposed PEP 705 variant. This is related to https://github.com/microsoft/pyright/issues/5118. (#5132)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b0ac254a19ac290778",
    "number": 5131,
    "body": "Rollup of the following changes:\r\n\r\n- https://github.com/microsoft/pyrx/commit/8dd24d74d28ed7050487be7b3efc93576c1ac859 Made engine version sync with stable python extension and made pylance not wait for python extension activation https://github.com/microsoft/pyrx/pull/3506\r\n- https://github.com/microsoft/pyrx/commit/2782b07d89222136dcb825af59df8ec8e2e134b8 got rid of indexing state tracking from sourceFile https://github.com/microsoft/pyrx/pull/3505\r\n- https://github.com/microsoft/pyrx/commit/03d9f1f039f4d9a83580b4ad1ee4b9a564b8d8ad Removed most of indexing from pyright https://github.com/microsoft/pyrx/pull/3495\r\n\r\n\r\n\r\n\r\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n    Co-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n    Co-authored-by: Stella Huang <stellahuang@microsoft.com>",
    "head_branch": "pull-pylance-2023531",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push pylance changes to pyright (#5131)\n\n* Push pylance changes to pyright\r\n\r\n* Fixup merge problems\r\n\r\n* Update packages/pyright-internal/src/analyzer/backgroundAnalysisProgram.ts\r\n\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b1ac254a19ac290779",
    "number": 5093,
    "body": "rollup of the following changes:\r\n    1. update packages (https://github.com/microsoft/pyrx/pull/3491)\r\n    2. Moved document symbol and workspace symbol out of program. (https://github.com/microsoft/pyrx/pull/3489)\r\n    3. removed test_createSourceMapper (https://github.com/microsoft/pyrx/pull/3486)\r\n    4. Fix google doc string regression (https://github.com/microsoft/pyrx/pull/3488)\r\n    5. adding call argument name inlayhints (https://github.com/microsoft/pyrx/pull/3457)\r\n    6. Moving completion out of program (https://github.com/microsoft/pyrx/pull/3454)\r\n    7. Use the new 'edit' mode for the workspace service to speed up fix all (https://github.com/microsoft/pyrx/pull/3451)\r\n    8. Removed parameter that is no longer needed since `program` is now passed in (https://github.com/microsoft/pyrx/pull/3460)\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>",
    "head_branch": "pull-pylance-with-pyright-1.1.307",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.307 (#5093)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b2ac254a19ac29077a",
    "number": 5066,
    "body": "Rollup of the following changes:\r\n\r\n- Fix dependabot issues\r\n- Move rename out of program\r\n- Move indentation to pylance\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>",
    "head_branch": "pull-pylance-2023511",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push pylance changes to pyright (#5066)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b3ac254a19ac29077b",
    "number": 5055,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4285\r\n\r\nIn the bug the same symbol is defined in two different modules and because both modules are referenced as implicit imports, both symbols get pulled in.\r\n\r\nThe fix here is to skip declarations that resolve to a different module than the original position.\r\n\r\nAll of the changes were in pyright, so I submitted the PR here.",
    "head_branch": "rchiodo/filter_refs",
    "is_a_fork": true,
    "comments": [
      "I think actual bug is `collectImportedByFiles` being used for non notebook files. I think we need to make `collectImportedByFiles` to check whether given file's `ipythonMode` is `Cell` otherwise, return nothing.\r\n\r\nthat should block it from gathering all `import alias` this file is `imported into`",
      "one more thing, now, code is changed to get `ProgramView`, any code that has access to `ProgramView` probably no longer need to get `ImportedBy` since it can call it themselves. and when they do, it should check `ipythonMode` and only call it when it is not `None` like how checker currently does."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b4ac254a19ac29077c",
    "number": 5046,
    "body": "Fixed broken link to conditional types docs in `mypy-comparison.md`.",
    "head_branch": "docFix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix broken link in `mypy-comparison.md` (#5046)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b5ac254a19ac29077d",
    "number": 5045,
    "body": " I generated this by running `npm audit fix` at the root.",
    "head_branch": "rchiodo/fix_dependabot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update dependabot problem (#5045)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b5ac254a19ac29077e",
    "number": 5034,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4290\r\n\r\nAdds support for a `converter` parameter on `dataclasses.field` as described in https://peps.python.org/pep-0712/.\r\n\r\nPEP 712 is still a draft. We're adding this support so users can play with the typing behavior. If the PEP is approved, this support will be updated to match the final spec. If the PEP is rejected, this support will be removed.\r\n\r\nUsers would also need to modify their `dataclasses.pyi` stub file to add support for `converter`. While testing I created and used the stubs below. Also note that the PEP author (@thejcannon) has implemented CPython support in a [personal branch](https://github.com/thejcannon/cpython/tree/converter).\r\n\r\n<details>\r\n<summary>Prototype stub change</summary>\r\n\r\n```python\r\n    from typing import ParamSpec, Concatenate\r\n\r\n    _P = ParamSpec(\"_P\")\r\n    _InputT = TypeVar(\"_InputT\")\r\n    _ReturnT = TypeVar(\"_ReturnT\")\r\n\r\n    @overload\r\n    def field(\r\n        *,\r\n        default: _InputT,\r\n        init: bool = True,\r\n        repr: bool = True,\r\n        hash: bool | None = None,\r\n        compare: bool = True,\r\n        metadata: Mapping[Any, Any] | None = None,\r\n        kw_only: bool = ...,\r\n        converter: Callable[Concatenate[_InputT, _P], _ReturnT]\r\n    ) -> _ReturnT: ...\r\n    @overload\r\n    def field(\r\n        *,\r\n        default: _T,\r\n        init: bool = True,\r\n        repr: bool = True,\r\n        hash: bool | None = None,\r\n        compare: bool = True,\r\n        metadata: Mapping[Any, Any] | None = None,\r\n        kw_only: bool = ...,\r\n    ) -> _T: ...\r\n    @overload\r\n    def field(\r\n        *,\r\n        default_factory: Callable[[], _InputT],\r\n        init: bool = True,\r\n        repr: bool = True,\r\n        hash: bool | None = None,\r\n        compare: bool = True,\r\n        metadata: Mapping[Any, Any] | None = None,\r\n        kw_only: bool = ...,\r\n        converter: Callable[Concatenate[_InputT, _P], _ReturnT]\r\n    ) -> _ReturnT: ...\r\n    @overload\r\n    def field(\r\n        *,\r\n        default_factory: Callable[[], _T],\r\n        init: bool = True,\r\n        repr: bool = True,\r\n        hash: bool | None = None,\r\n        compare: bool = True,\r\n        metadata: Mapping[Any, Any] | None = None,\r\n        kw_only: bool = ...,\r\n    ) -> _T: ...\r\n    @overload\r\n    def field(\r\n        *,\r\n        init: bool = True,\r\n        repr: bool = True,\r\n        hash: bool | None = None,\r\n        compare: bool = True,\r\n        metadata: Mapping[Any, Any] | None = None,\r\n        kw_only: bool = ...,\r\n        converter: Callable | None\r\n    ) -> Any: ...\r\n```\r\n</details>",
    "head_branch": "pep712",
    "is_a_fork": true,
    "comments": [
      "Wow I'm flattered! I'll play around with this early next week.\n\n🙌",
      "wow. that look like a good one!",
      "what do your a blender addon?"
    ],
    "commit_messages": [
      "Add support for PEP 712 (#5034)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b6ac254a19ac29077f",
    "number": 5031,
    "body": "Wrote a simple test, but also used this in pyrx to change how fix-all works. \r\n\r\nI put back the change events for the program/sourceFile. It was the easiest way to capture the events (otherwise I believe all the changes would be a full document replace).",
    "head_branch": "rchiodo/copy_on_write",
    "is_a_fork": true,
    "comments": [
      "Perf data for this is very promising.\r\n\r\nOld way of clone for the https://github.com/microsoft/pylance-release/issues/4263:\r\n- 2200ms\r\n\r\nNew way with copy on write:\r\n- 100ms\r\n\r\nI believe this is functionally equivalent. In the fix all command, instead of cloning the service, we enter edit mode. During edit mode, all changes to a source file create a new SourceFileInfo and SourceFile. From then on, all changes are tracked. \r\n\r\nOnce done with the changes, we leave edit mode and the changes made are returned in a list."
    ],
    "commit_messages": [
      "Idea for copy on write (#5031)\n\n* Idea for copy on write\r\n\r\n* Fix tests and hygiene\r\n\r\n* Add a test for edit mode\r\n\r\n* Handle opening of a new file in edit mode\r\n\r\n* Refactor to use SourceFiles to track data instead.\r\n\r\n* Use full edits instead\r\n\r\n* Review feedback eliminate unused file too\r\n\r\n* Move edits up one level"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b7ac254a19ac290780",
    "number": 5028,
    "body": "fix https://github.com/microsoft/pyright/issues/5025",
    "head_branch": "addFlag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added a flag in resolve alias declaration so that we can skip early bail out (perf optimization) when needed. (#5028)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b8ac254a19ac290781",
    "number": 5023,
    "body": "This PR is not intended to check in but to show some bug discovered around `SourceFileInfo`.",
    "head_branch": "sourceFileInfo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111b9ac254a19ac290782",
    "number": 5019,
    "body": "…responsible for applying any delta changes and updating the contents for each of the workspaces associated with that file. This allows source code contents to be shared between workspaces, which reduces memory usage. It also eliminates a correctness issue that can occur if new workspaces are added after files are open. It addresses https://github.com/microsoft/pyright/issues/4994.",
    "head_branch": "shared-source-contents",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111baac254a19ac290783",
    "number": 5015,
    "body": "Rollup of the following changes:\r\n\r\n- https://github.com/microsoft/pylance-release/issues/4234\r\n- File indexing max is not respected on rerun\r\n- https://github.com/microsoft/pylance-release/issues/3743",
    "head_branch": "pull-pylance-2023441",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push pylance changes to pyright (#5015)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111bbac254a19ac290784",
    "number": 5013,
    "body": "I am trying to get rid of `getBoundSourceFileInfo` from `ProgramView`.\r\n\r\nreasoning is having both `getSourceFileInfo` and `getBoundSourceFileInfo` is confusing since both return same `SourceFileInfo` and things like `getParseResults` depends on which way `SourceFileInfo` is obtained to return valid value.\r\n\r\nwe could introduce `SourceFileInfo` and `BoundSourceFileInfo` where only `BoundSourceFileInfo` has `getParseResults` and etc, but for now, I am thinking we just make it simpler by exposing only `getSourceFileInfo` and `getParseResults` directly off `ProgramView`\r\n\r\nwe want `getSourceFileInfo` since we don't want to do expansive file reading/parsing/binding just to see dependency graph and etc. also, there is no guarantee `SourceFileInfo` people got from things like `SourceFileInfo.ImportedBy` are bound. and if people ends up consume `getParseResults` off those file info, they will get undetermined behavior based on what happened before.",
    "head_branch": "tweakQuickFix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "some tweak on performQuickAction (#5013)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111bcac254a19ac290785",
    "number": 5011,
    "body": "I think the rest of IDE features will be refactored out from `pylance` side and pushed up to `pyright`\r\n\r\nIDE features left are\r\n\r\n1. completion provider - it uses indices so it needs to be refactored with related indexing code in pylance.\r\n2. document symbol, workspace symbol provider - they use indices as well. so, we need to refactor indices portion out first in pylance.\r\n3. rename, move symbol, rename module provider - since all of them, at the end, rename references of a name, these are all in reference each other internally. but move symbol and rename module provider are split between in pylance and pyright. so doing it from pylance is much easier.\r\n\r\nafter those changes, we will probably take out any APIs in the program that doesn't require any internal state of program to its own type sucn as `getAutoImport` and etc.",
    "head_branch": "findAllReferences",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored find all references out of program (#5011)\n\n* refactored find all references out of program\r\n\r\nRemoved micro-optimization that could potentially compromise immutability for now. We should consider adding it back if it actually causes issues. In practice, the operating system is likely to still have a cache of the file content that was just read from the disk.\r\n\r\n* addressed feedback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111bdac254a19ac290786",
    "number": 5010,
    "body": "Helping @heejaechang out with the refactor work",
    "head_branch": "rchiodo/perform_quick_action",
    "is_a_fork": true,
    "comments": [
      "L"
    ],
    "commit_messages": [
      "Refactor performQuickActions out of program and service (#5010)\n\nCo-authored-by: Heejae Chang <1333179+heejaechang@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111beac254a19ac290787",
    "number": 5005,
    "body": null,
    "head_branch": "callHierarchy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored out call hierarchy from program (#5005)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111beac254a19ac290788",
    "number": 5004,
    "body": null,
    "head_branch": "signatureHelp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored signature help out of program (#5004)\n\n* Refactored signature help out of program\r\n\r\n* remove unnecessary export"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111bfac254a19ac290789",
    "number": 5002,
    "body": null,
    "head_branch": "DocumentHighlight",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored DocumentHighlightProvider out of program (#5002)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c0ac254a19ac29078a",
    "number": 5001,
    "body": "moved `go to definition`, `go to declaration` and `go to type definition` out of `program`",
    "head_branch": "gotoDefinition",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "refactored DefinitionProvider (#5001)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c1ac254a19ac29078b",
    "number": 4990,
    "body": "I will start sending PR for each IDE features in the program.",
    "head_branch": "refactorHoverProvider",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "convert hover provider to regular class rather than static type. (#4990)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c2ac254a19ac29078c",
    "number": 4989,
    "body": "This takes out HoverProvider out of program without any changes on HoverProvider.",
    "head_branch": "extractOutHover",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move HoverProvider out of Program (#4989)\n\n* move HoverProvider out of program\r\n\r\n* rename createSourceMapper to getSourceMapper\r\n\r\n* rename missed this one."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c3ac254a19ac29078d",
    "number": 4981,
    "body": "open to gather feedbacks.",
    "head_branch": "hoverProviderRefactoring",
    "is_a_fork": true,
    "comments": [
      "tagging @erictraut to get feedback",
      "closed. I will split the PR into 2 PRs."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c4ac254a19ac29078e",
    "number": 4975,
    "body": "pull from pylance:\r\n\r\n- Implement get outgoing calls for aliases \r\n- Fix indentation problems outside of functions \r\n- Use a more precise regex to detect params in docstrings\r\n- Add import statement for override in completions",
    "head_branch": "pull-pylance-with-pyright-1.1.304",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.304 (#4975)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c5ac254a19ac29078f",
    "number": 4958,
    "body": null,
    "head_branch": "fix-arg-comment-spacing",
    "is_a_fork": true,
    "comments": [
      "Thanks for doing this, @bschnurr."
    ],
    "commit_messages": [
      "Fixed: Argument comment spacing (#4958)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c6ac254a19ac290790",
    "number": 4955,
    "body": "… that are assigned to variables\r\n\r\n\r\nThis solves the wall of text issue with functions with a lot of parameters when they are assigned to variables.\r\n\r\n\r\nfixes \r\nhttps://github.com/microsoft/pylance-release/issues/4242\r\n\r\n\r\nnew function assigned to variable hover\r\n![image](https://user-images.githubusercontent.com/1946977/232094283-55331cb9-4001-4bb0-be7a-1aee506fd867.png)\r\n\r\nnew overload assigned to variable hover\r\n![image](https://user-images.githubusercontent.com/1946977/232093996-f0eb40c9-456e-42b5-b9b0-2ab5baff6ead.png)\r\n",
    "head_branch": "add-formatted-variable-hovers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Format completions and hovers for functions and overloaded functions … (#4955)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c7ac254a19ac290791",
    "number": 4946,
    "body": "pylance rollup of:\r\n\r\n-  use new flag added to pyright and also make completion override to fallback to syntax if we can't get type info\r\n-  add cancellation to `runScript` in `fullAccessHost`",
    "head_branch": "pull-pylance-with-pyright-1.1.303",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.303 (#4946)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c7ac254a19ac290792",
    "number": 4939,
    "body": "rollup of the following changes:\r\n* improved move symbol's blank line handling\r\n* made completion override to use semantic info rather than syntax info\r\n* use indices if it exists even if `indexing` is off",
    "head_branch": "pull-pylance-2023421",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push pylance changes to pyright (#4939)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c8ac254a19ac290793",
    "number": 4937,
    "body": "…entsIfUnknown`. Exposed this flag and `printUnknownWithAny` from the type evaluator. This addresses https://github.com/microsoft/pyright/issues/4933.",
    "head_branch": "typePrinterTypeArgs",
    "is_a_fork": false,
    "comments": [
      "thank you!"
    ],
    "commit_messages": [
      "Changed typePrinter option `OmitTypeArgumentsIfAny` to `OmitTypeArgumentsIfUnknown`. Exposed this flag and `printUnknownWithAny` from the type evaluator. This addresses https://github.com/microsoft/pyright/issues/4933. (#4937)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111c9ac254a19ac290794",
    "number": 4923,
    "body": "python.analysis.extraPaths needs to be defined in settings.json to include the \"typings\" folder path. Full path was required for me.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This is incorrect. It isn't recommended that you use `extraPaths` to define the stub locations. You should use `stubPath` instead. And `stubPath` should already default to a project-local directory called `typings`. If you're finding that this doesn't work as you expect, please file a bug with repro steps.",
      "Correct. Setting it on stubPath was not working (local or absolute path). However, I could not reproduce it in an Ubuntu testing VM. I purged all the relevant config folders in my system and now it works as expected. I will keep an eye on it and file a relevant bug if it ever reappears. Thanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111caac254a19ac290795",
    "number": 4910,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.302",
    "is_a_fork": false,
    "comments": [
      "This should have the fix asked for in the last one with relation to the parser utils."
    ],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.302 (#4910)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111cbac254a19ac290796",
    "number": 4907,
    "body": "Pull Pylance rollup of:\r\n\r\n- fixed \"suggestion details\" when intellisense stopped showing on Ctrl+Space in notebooks due to not passing in a unique filepath to get the workspace ( https://github.com/microsoft/pylance-release/issues/4153)\r\n- Make sure we don't put wrong decls from the given name when renaming https://github.com/microsoft/pylance-release/issues/4129\r\n- Fixed move symbol bug around comments handling https://github.com/microsoft/pylance-release/issues/4136\r\n- Fix for potential stack overflow in chained files https://github.com/microsoft/pylance-release/issues/4141\r\n- Default workspace should not be limited https://github.com/microsoft/pylance-release/issues/4142 https://github.com/microsoft/pylance-release/issues/4162\r\n- refactored getImplicitImports\r\n- Fix problem with switching kernels https://github.com/microsoft/pylance-release/issues/4166",
    "head_branch": "pull-pylance-with-pyright-1.1.302",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111ccac254a19ac290797",
    "number": 4903,
    "body": "…e to bring pylance and pyright into alignment. Also deprecated the \"--lib\" command-line option, which was previously used to enable `useLibraryCodeForTypes` from the command line.",
    "head_branch": "enableUseLibraryCodeForTypes",
    "is_a_fork": false,
    "comments": [
      "@debonte, I decided not to include this change in this week's pyright release. I'll merge it now, and it will be in next week's (1.1.303). This gives pyright users one week to respond to the [open issue](https://github.com/microsoft/pyright/issues/4904) that's tracking it."
    ],
    "commit_messages": [
      "Changed the default of the `useLibraryCodeForTypes` from false to true to bring pylance and pyright into alignment. Also deprecated the \"--lib\" command-line option, which was previously used to enable `useLibraryCodeForTypes` from the command line. (#4903)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111cdac254a19ac290798",
    "number": 4882,
    "body": "related to https://github.com/microsoft/pylance-release/issues/4179",
    "head_branch": "revert-auto-imports",
    "is_a_fork": true,
    "comments": [
      "@heejaechang, are you OK with this revert?",
      "I'm going to merge this change because this regression makes pyright very hard to use. \r\n\r\n@heejaechang, I'm going to assume that you're OK with this."
    ],
    "commit_messages": [
      "Revert \"when indexing is off, include import alias from user files\" (#4882)\n\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111ceac254a19ac290799",
    "number": 4865,
    "body": "- Support `Show Call Hierarchy` for aliases\r\n  - https://github.com/microsoft/pyrx/pull/3300\r\n  - https://github.com/microsoft/pylance-release/issues/3893\r\n- When indexing is off, include import alias from user files\r\n  - https://github.com/microsoft/pyrx/pull/3316\r\n  - https://github.com/microsoft/pylance-release/issues/4065\r\n- Update completion provider to add parens for just class assignments and usages of builtins as arguments\r\n  - https://github.com/microsoft/pyrx/pull/3291\r\n  - https://github.com/microsoft/pylance-release/issues/3969\r\n- Fix potential issue if init is still using 'rootPath'\r\n  - https://github.com/microsoft/pyrx/pull/3321\r\n- Fix subfolder workspaces to have all the open files of the current workspace\r\n  - https://github.com/microsoft/pyrx/pull/3325\r\n  - https://github.com/microsoft/pylance-release/issues/4144 ",
    "head_branch": "pull-pylance-with-pyright-1.1.301",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.301 (#4865)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111cfac254a19ac29079a",
    "number": 4858,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/4157\r\n\r\nI haven't been able to reproduce this crash. Also I don't see a way for a `Comment` to be created with an out-of-range `start` value.\r\n\r\nHowever, I noticed that `_addDiagnosticForRegionComment` was modifying `start` and `length` on `Comment` ranges to include the `#` sign. This was modifying the `Comment` data in `ParseResults`, so I could imagine it causing downstream problems. I verified that if `Checker` called `_checkRegions()` twice in a row we hit the `convertOffsetToPosition` assertion in the bug.\r\n\r\nI considered [returning](https://github.com/microsoft/pyright/commit/9af9c78f32d27b1f77ec868549b9791da2e6fd8d) `undefined` from `getRegionCommentType` when `hashOffset` was out of range. But I think it's best to make this change and see if the crash disappears in telemetry.",
    "head_branch": "pylance4157",
    "is_a_fork": true,
    "comments": [
      "Btw, @erictraut, this is the second time recently I've heard of a problem like this. Stella had a similar problem (in unsubmitted code) where she modified the path on a `Declaration` object not knowing that it would be reused. I wonder if there's a way that these objects could be made read-only?",
      "Yeah, I think that's worth considering. I haven't personally hit this problem because I know that these data structures are meant to be immutable, so I treat them as such. But as others contribute to the code base, it would be nice if the TS compiler could enforce immutability.\r\n\r\nFor ranges in particular, I think it would require a change in the way the ranges are built in the parser. Descriptors (which are mostly built in the binder) might be an easier place to start."
    ],
    "commit_messages": [
      "Don't modify `Comment` range data (#4858)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111cfac254a19ac29079b",
    "number": 4849,
    "body": "The current absolute link to the Pyright logo doesn't render on GitHub (or in VSC), the new one renders both on GitHub and your docsify site.\r\nOther Markdown link changes are straightforward.\r\nYou can check the website with all the changes [here](https://molkree.github.io/pyright/).\r\nP.S. After deploying the docs I've noticed that main page has \"Document\" title and changed it in this PR, let me know if you want another one/separate PR.",
    "head_branch": "fix-markdown-links",
    "is_a_fork": true,
    "comments": [
      "Thanks for the contribution. Looks good to me."
    ],
    "commit_messages": [
      "Fix Markdown links (#4849)\n\n* Fixed Markdown links\r\n\r\n* Gave main doc page prettier name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d0ac254a19ac29079c",
    "number": 4816,
    "body": "Roll up of the following changes:\r\n- Make sure we check whether cancellation token is already cancelled before trying to cancel again -- https://github.com/microsoft/pylance-release/issues/4055 // https://github.com/microsoft/pyrx/pull/3290\r\n- Add auto import source in the sort text so that shorter (ex, stdlib) source goes to the top of the list -- https://github.com/microsoft/pylance-release/issues/3760 // https://github.com/microsoft/pyrx/pull/3289\r\n- Fix hover problems caused by telemetry comment -- https://github.com/microsoft/pylance-release/issues/4082 // https://github.com/microsoft/pyrx/pull/3292",
    "head_branch": "pull-pylance-with-pyright-1.1.300",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.300 (#4816)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d1ac254a19ac29079d",
    "number": 4797,
    "body": "- Propagate open file changes to other workspaces (ex. notebooks) - https://github.com/microsoft/pyrx/pull/3276",
    "head_branch": "pull-pylance-with-pyright-1.1.299",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.299 (#4797)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d2ac254a19ac29079e",
    "number": 4796,
    "body": "…and is used.\r\n\r\nexample of lightgbm imports that weren't included in the .pyi\r\n\r\nhttps://github.com/microsoft/LightGBM/blob/2fe2bf0675ef127a29f9bc49511fc0099cf3e140/python-package/lightgbm/__init__.py#L13",
    "head_branch": "fix-trycatch-import-createTypeStubs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixed missing imports inside try/catch blocks when createTypeStub comm… (#4796)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d3ac254a19ac29079f",
    "number": 4790,
    "body": "…ne to assume that any function that lacks a return type annotation is _not_ a NoReturn function. This greatly speeds up type analysis in certain unannotated code bases, but it results in less accurate type analysis.",
    "head_branch": "noReturnOptimization",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d4ac254a19ac2907a0",
    "number": 4783,
    "body": "Rollup of the following changes:\r\n\r\n- Dependency update -- https://github.com/microsoft/pyrx/pull/3229\r\n- Prevent `CacheManager` from emptying cache in the middle of a recursive call -- https://github.com/microsoft/pyrx/pull/3256\r\n- Refactoring to allow notebooks to be in the same workspace as other notebooks/files that are using the same python path -- https://github.com/microsoft/pyrx/pull/3238 / https://github.com/microsoft/pylance-release/issues/4022\r\n- Find declarations across notebook cells -- https://github.com/microsoft/pyrx/pull/3234 / https://github.com/microsoft/pylance-release/issues/3279\r\n- Refactoring to allow LSP client lifetime management to be moved to Pylance -- https://github.com/microsoft/pyrx/pull/3235\r\n- Give internal extensions access to TypeEvaluator -- https://github.com/microsoft/pyrx/pull/3258 / https://github.com/microsoft/pylance-release/issues/4039\r\n- Include module hash in completion and hover telemetry -- https://github.com/microsoft/pyrx/pull/3267\r\n- Ensure we don't call `updateSettings` unit initialize is done -- https://github.com/microsoft/pyrx/pull/3268 / https://github.com/microsoft/pyrx/issues/3266",
    "head_branch": "pull-pylance-2023331",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push pylance changes to pyright (#4783)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d5ac254a19ac2907a1",
    "number": 4782,
    "body": "Rollup of the following changes:\r\n\r\n- Dependency update -- https://github.com/microsoft/pyrx/pull/3229\r\n- Prevent `CacheManager` from emptying cache in the middle of a recursive call -- https://github.com/microsoft/pyrx/pull/3256\r\n- Refactoring to allow notebooks to be in the same workspace as other notebooks/files that are using the same python path -- https://github.com/microsoft/pyrx/pull/3238 / https://github.com/microsoft/pylance-release/issues/4022\r\n- Find declarations across notebook cells -- https://github.com/microsoft/pyrx/pull/3234 / https://github.com/microsoft/pylance-release/issues/3279\r\n- Refactoring to allow LSP client lifetime management to be moved to Pylance -- https://github.com/microsoft/pyrx/pull/3235\r\n- Give internal extensions access to TypeEvaluator -- https://github.com/microsoft/pyrx/pull/3258 / https://github.com/microsoft/pylance-release/issues/4039\r\n- Include module hash in completion and hover telemetry -- https://github.com/microsoft/pyrx/pull/3267\r\n- Ensure we don't call `updateSettings` unit initialize is done -- https://github.com/microsoft/pyrx/pull/3268 / https://github.com/microsoft/pyrx/issues/3266",
    "head_branch": "pull-pylance-2023331",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d6ac254a19ac2907a2",
    "number": 4779,
    "body": null,
    "head_branch": "pull-pylance-2023331",
    "is_a_fork": true,
    "comments": [
      "Don't we usually have a description?\r\n\r\nWith like all the bugs fixed.",
      "I'm going to abandon this, merge my notebook PR, and then restart.",
      "Good idea. Should we fix the notebook chain problem on reopen/move cells too? I can look into that"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d7ac254a19ac2907a3",
    "number": 4774,
    "body": "Bumps [webpack](https://github.com/webpack/webpack) from 5.75.0 to 5.76.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/webpack/releases\">webpack's releases</a>.</em></p>\n<blockquote>\n<h2>v5.76.0</h2>\n<h2>Bugfixes</h2>\n<ul>\n<li>Avoid cross-realm object access by <a href=\"https://github.com/Jack-Works\"><code>@​Jack-Works</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16500\">webpack/webpack#16500</a></li>\n<li>Improve hash performance via conditional initialization by <a href=\"https://github.com/lvivski\"><code>@​lvivski</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16491\">webpack/webpack#16491</a></li>\n<li>Serialize <code>generatedCode</code> info to fix bug in asset module cache restoration by <a href=\"https://github.com/ryanwilsonperkin\"><code>@​ryanwilsonperkin</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16703\">webpack/webpack#16703</a></li>\n<li>Improve performance of <code>hashRegExp</code> lookup by <a href=\"https://github.com/ryanwilsonperkin\"><code>@​ryanwilsonperkin</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16759\">webpack/webpack#16759</a></li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>add <code>target</code> to <code>LoaderContext</code> type by <a href=\"https://github.com/askoufis\"><code>@​askoufis</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16781\">webpack/webpack#16781</a></li>\n</ul>\n<h2>Security</h2>\n<ul>\n<li><a href=\"https://github.com/advisories/GHSA-3rfm-jhwj-7488\">CVE-2022-37603</a> fixed by <a href=\"https://github.com/akhilgkrishnan\"><code>@​akhilgkrishnan</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16446\">webpack/webpack#16446</a></li>\n</ul>\n<h2>Repo Changes</h2>\n<ul>\n<li>Fix HTML5 logo in README by <a href=\"https://github.com/jakebailey\"><code>@​jakebailey</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16614\">webpack/webpack#16614</a></li>\n<li>Replace TypeScript logo in README by <a href=\"https://github.com/jakebailey\"><code>@​jakebailey</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16613\">webpack/webpack#16613</a></li>\n<li>Update actions/cache dependencies by <a href=\"https://github.com/piwysocki\"><code>@​piwysocki</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16493\">webpack/webpack#16493</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/Jack-Works\"><code>@​Jack-Works</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16500\">webpack/webpack#16500</a></li>\n<li><a href=\"https://github.com/lvivski\"><code>@​lvivski</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16491\">webpack/webpack#16491</a></li>\n<li><a href=\"https://github.com/jakebailey\"><code>@​jakebailey</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16614\">webpack/webpack#16614</a></li>\n<li><a href=\"https://github.com/akhilgkrishnan\"><code>@​akhilgkrishnan</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16446\">webpack/webpack#16446</a></li>\n<li><a href=\"https://github.com/ryanwilsonperkin\"><code>@​ryanwilsonperkin</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16703\">webpack/webpack#16703</a></li>\n<li><a href=\"https://github.com/piwysocki\"><code>@​piwysocki</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16493\">webpack/webpack#16493</a></li>\n<li><a href=\"https://github.com/askoufis\"><code>@​askoufis</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16781\">webpack/webpack#16781</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0\">https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/webpack/webpack/commit/97b1718720c33f1b17302a74c5284b01e02ec001\"><code>97b1718</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16781\">#16781</a> from askoufis/loader-context-target-type</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/b84efe6224b276bf72e4c5e2f4e76acddfaeef07\"><code>b84efe6</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16759\">#16759</a> from ryanwilsonperkin/real-content-hash-regex-perf</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/c98e9e001441b165c7ed4845700839730b505833\"><code>c98e9e0</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16493\">#16493</a> from piwysocki/patch-1</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/5f34acfbc074da6cc09f48944d7f2b4273ffb3f8\"><code>5f34acf</code></a> feat: Add <code>target</code> to <code>LoaderContext</code> type</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/b7fc4d876deb958d7ee81ecc00a312e39a354a44\"><code>b7fc4d8</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16703\">#16703</a> from ryanwilsonperkin/ryanwilsonperkin/fix-16160</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/63ea82da4d4e4242b6a6285fc937f0684f264fe8\"><code>63ea82d</code></a> Merge branch 'webpack:main' into patch-1</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/4ba225225b1348c8776ca5b5fe53468519413bc0\"><code>4ba2252</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16446\">#16446</a> from akhilgkrishnan/patch-1</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/1acd6350be3d74d4ac70b64cbbc60f27724b618b\"><code>1acd635</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16613\">#16613</a> from jakebailey/ts-logo</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/302eb37fe19ed7ca60eaf895aca4f9da9dfd7931\"><code>302eb37</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16614\">#16614</a> from jakebailey/html5-logo</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/cfdb1dfe59b33bf7441b8a8e4fc58d75e4f54cee\"><code>cfdb1df</code></a> Improve performance of hashRegExp lookup</li>\n<li>Additional commits viewable in <a href=\"https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~evilebottnawi\">evilebottnawi</a>, a new releaser for webpack since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=webpack&package-manager=npm_and_yarn&previous-version=5.75.0&new-version=5.76.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/pyright/webpack-5.76.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump webpack from 5.75.0 to 5.76.0 in /packages/pyright (#4774)\n\nBumps [webpack](https://github.com/webpack/webpack) from 5.75.0 to 5.76.0.\r\n- [Release notes](https://github.com/webpack/webpack/releases)\r\n- [Commits](https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: webpack\r\n  dependency-type: direct:development\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d8ac254a19ac2907a4",
    "number": 4773,
    "body": "Bumps [webpack](https://github.com/webpack/webpack) from 5.75.0 to 5.76.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/webpack/releases\">webpack's releases</a>.</em></p>\n<blockquote>\n<h2>v5.76.0</h2>\n<h2>Bugfixes</h2>\n<ul>\n<li>Avoid cross-realm object access by <a href=\"https://github.com/Jack-Works\"><code>@​Jack-Works</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16500\">webpack/webpack#16500</a></li>\n<li>Improve hash performance via conditional initialization by <a href=\"https://github.com/lvivski\"><code>@​lvivski</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16491\">webpack/webpack#16491</a></li>\n<li>Serialize <code>generatedCode</code> info to fix bug in asset module cache restoration by <a href=\"https://github.com/ryanwilsonperkin\"><code>@​ryanwilsonperkin</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16703\">webpack/webpack#16703</a></li>\n<li>Improve performance of <code>hashRegExp</code> lookup by <a href=\"https://github.com/ryanwilsonperkin\"><code>@​ryanwilsonperkin</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16759\">webpack/webpack#16759</a></li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>add <code>target</code> to <code>LoaderContext</code> type by <a href=\"https://github.com/askoufis\"><code>@​askoufis</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16781\">webpack/webpack#16781</a></li>\n</ul>\n<h2>Security</h2>\n<ul>\n<li><a href=\"https://github.com/advisories/GHSA-3rfm-jhwj-7488\">CVE-2022-37603</a> fixed by <a href=\"https://github.com/akhilgkrishnan\"><code>@​akhilgkrishnan</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16446\">webpack/webpack#16446</a></li>\n</ul>\n<h2>Repo Changes</h2>\n<ul>\n<li>Fix HTML5 logo in README by <a href=\"https://github.com/jakebailey\"><code>@​jakebailey</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16614\">webpack/webpack#16614</a></li>\n<li>Replace TypeScript logo in README by <a href=\"https://github.com/jakebailey\"><code>@​jakebailey</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16613\">webpack/webpack#16613</a></li>\n<li>Update actions/cache dependencies by <a href=\"https://github.com/piwysocki\"><code>@​piwysocki</code></a> in <a href=\"https://redirect.github.com/webpack/webpack/pull/16493\">webpack/webpack#16493</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/Jack-Works\"><code>@​Jack-Works</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16500\">webpack/webpack#16500</a></li>\n<li><a href=\"https://github.com/lvivski\"><code>@​lvivski</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16491\">webpack/webpack#16491</a></li>\n<li><a href=\"https://github.com/jakebailey\"><code>@​jakebailey</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16614\">webpack/webpack#16614</a></li>\n<li><a href=\"https://github.com/akhilgkrishnan\"><code>@​akhilgkrishnan</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16446\">webpack/webpack#16446</a></li>\n<li><a href=\"https://github.com/ryanwilsonperkin\"><code>@​ryanwilsonperkin</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16703\">webpack/webpack#16703</a></li>\n<li><a href=\"https://github.com/piwysocki\"><code>@​piwysocki</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16493\">webpack/webpack#16493</a></li>\n<li><a href=\"https://github.com/askoufis\"><code>@​askoufis</code></a> made their first contribution in <a href=\"https://redirect.github.com/webpack/webpack/pull/16781\">webpack/webpack#16781</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0\">https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/webpack/webpack/commit/97b1718720c33f1b17302a74c5284b01e02ec001\"><code>97b1718</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16781\">#16781</a> from askoufis/loader-context-target-type</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/b84efe6224b276bf72e4c5e2f4e76acddfaeef07\"><code>b84efe6</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16759\">#16759</a> from ryanwilsonperkin/real-content-hash-regex-perf</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/c98e9e001441b165c7ed4845700839730b505833\"><code>c98e9e0</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16493\">#16493</a> from piwysocki/patch-1</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/5f34acfbc074da6cc09f48944d7f2b4273ffb3f8\"><code>5f34acf</code></a> feat: Add <code>target</code> to <code>LoaderContext</code> type</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/b7fc4d876deb958d7ee81ecc00a312e39a354a44\"><code>b7fc4d8</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16703\">#16703</a> from ryanwilsonperkin/ryanwilsonperkin/fix-16160</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/63ea82da4d4e4242b6a6285fc937f0684f264fe8\"><code>63ea82d</code></a> Merge branch 'webpack:main' into patch-1</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/4ba225225b1348c8776ca5b5fe53468519413bc0\"><code>4ba2252</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16446\">#16446</a> from akhilgkrishnan/patch-1</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/1acd6350be3d74d4ac70b64cbbc60f27724b618b\"><code>1acd635</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16613\">#16613</a> from jakebailey/ts-logo</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/302eb37fe19ed7ca60eaf895aca4f9da9dfd7931\"><code>302eb37</code></a> Merge pull request <a href=\"https://redirect.github.com/webpack/webpack/issues/16614\">#16614</a> from jakebailey/html5-logo</li>\n<li><a href=\"https://github.com/webpack/webpack/commit/cfdb1dfe59b33bf7441b8a8e4fc58d75e4f54cee\"><code>cfdb1df</code></a> Improve performance of hashRegExp lookup</li>\n<li>Additional commits viewable in <a href=\"https://github.com/webpack/webpack/compare/v5.75.0...v5.76.0\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~evilebottnawi\">evilebottnawi</a>, a new releaser for webpack since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=webpack&package-manager=npm_and_yarn&previous-version=5.75.0&new-version=5.76.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/vscode-pyright/webpack-5.76.0",
    "is_a_fork": false,
    "comments": [
      "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d8ac254a19ac2907a5",
    "number": 4747,
    "body": "Before:\r\n```\r\ndef origin() -> dict[{\"x\": int, \"y\": int}]:\r\n    return {\"x\": 0, \"y\": 0}\r\n\r\np = origin()\r\nreveal_type(p)  # Type of \"p\" is \"<TypedDict>\"\r\n```\r\n\r\nAfter:\r\n```\r\ndef origin() -> dict[{\"x\": int, \"y\": int}]:\r\n    return {\"x\": 0, \"y\": 0}\r\n\r\np = origin()\r\nreveal_type(p)  # Type of \"p\" is \"dict[{\"x\": int, \"y\": int}]\"\r\n```\r\n\r\nI think it's a much more helpful description of the type",
    "head_branch": "decorator-factory/pretty-inline-typeddict-repr",
    "is_a_fork": true,
    "comments": [
      "@microsoft-github-policy-service agree",
      "I don't think we'd want to do it this way. This logic should probably go into the typePrinter and take into account the various flags accepted by the typePrinter. It's also not clear whether it's a good idea to print out the entire definition. The pylance team should make that call, since they need to ensure that this works with hover text, completion suggestions, inlined types, etc.\r\n\r\nLet's leave this out for now. We can refine it later if/when the PEP is filed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111d9ac254a19ac2907a6",
    "number": 4745,
    "body": "Rollup of the following changes:\r\n\r\n- https://github.com/microsoft/pyrx/commit/3a10f643f65b3e868dffa26b072941dfcc7b7659 remove `def` from property signatures. this was previously added to p… (#3236)\r\n- https://github.com/microsoft/pyrx/commit/dbbac48a61527817cca81ad04cb76438e500a8a0 fixed a bug where we got into infinite loop when symbol from library file is moved. (#3233)\r\n- https://github.com/microsoft/pyrx/commit/4872c335cfd6026d8a372702fcebc238268db6ca Improve completion's literal supports (#3228)\r\n- https://github.com/microsoft/pyrx/commit/a35cfeabc743626914c51b0e87a8b8b79c559eac Fix intellicode for Azure (#3223)",
    "head_branch": "pull-pylance-with-pyright-1.1.298",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.298 (#4745)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111daac254a19ac2907a7",
    "number": 4717,
    "body": "This PR fixes an issue where markdown code blocks do not parse correctly when they started on an indented line in a docstring.\r\n\r\n```python\r\ndef test():\r\n    \"\"\"\r\n    A test function\r\n\r\n    Example:\r\n        ```python\r\n        print(test())\r\n        ```\r\n    \"\"\"\r\n    pass\r\n```\r\n\r\nCurrently this docstring looks like this when hovering `test`: \r\n![image](https://user-images.githubusercontent.com/5047809/222246442-6db923e7-8d59-4236-84e0-d42ada48295d.png)\r\n\r\nAfter the fix it renders correctly:\r\n![image](https://user-images.githubusercontent.com/5047809/222276577-57ad01d1-5be2-41b3-92bd-4e5a71bdd8ef.png)\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Bug Report: https://github.com/microsoft/pyright/issues/4718",
      "@microsoft-github-policy-service agree"
    ],
    "commit_messages": [
      "Fix indented code blocks in docstrings (#4717)\n\n* fix indented code blocks in docstrings\r\n\r\n* require same indent level for closing tag\r\n\r\n* nit: comments\r\n\r\n* review: added test\r\n\r\n* use tripleTick constant instead of escaping\r\n\r\n* chore: prettier\r\n\r\n---------\r\n\r\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111dbac254a19ac2907a8",
    "number": 4716,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.296",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.296 (#4716)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111dcac254a19ac2907a9",
    "number": 4714,
    "body": "rollup of the following changes:\r\n\r\n- made auto parenthese to check snippet support \r\n- node in a variable decl just points to the variable name. it should be expanded to the assignment statement to get proper end position. \r\n- Fix error node parsing for completions \r\n- Fix type ignore ending up on the wrong line\r\n- Fix slots doc strings \r\n- Fix action warnings about deprecated features\r\n- Remove unused imports after moving symbol.\r\n- Fix offset when checking if current indent should be retained\r\n- Fixed move symbol bug ",
    "head_branch": "pull-pylance-with-pyright-1.1.296",
    "is_a_fork": false,
    "comments": [
      "going to retrigger, due to updating branch with main"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111ddac254a19ac2907aa",
    "number": 4704,
    "body": "Adding details on making gitlab ci integration - in response to https://github.com/microsoft/pyright/issues/4628 issue.",
    "head_branch": "add-documentation-for-gitlab-ci",
    "is_a_fork": true,
    "comments": [
      "@microsoft-github-policy-service agree",
      "Nice! Thanks for the contribution."
    ],
    "commit_messages": [
      "add gitlab ci documentation (#4704)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111deac254a19ac2907ab",
    "number": 4698,
    "body": null,
    "head_branch": "mzat/readme-ale-clarification",
    "is_a_fork": true,
    "comments": [
      "Thanks for the contribution."
    ],
    "commit_messages": [
      "Pedantic clarification on ALE support (#4698)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111dfac254a19ac2907ac",
    "number": 4691,
    "body": "…ich module has the unknown member in the case of a union of modules being asked.\r\n\r\nissue found in the tensorNet codebase here. https://github.com/taehoonlee/tensornets/blob/c9b1d78f806892193efdebee2789a47fd148b984/tensornets/utils.py#L118\r\n\r\nprevious diagnostic hover\r\n![image](https://user-images.githubusercontent.com/1946977/221329638-1af86c5d-1f4d-4e1d-a515-b0ffa2cadc71.png)\r\n\r\nwhere `tf` is a union of modules\r\n![image](https://user-images.githubusercontent.com/1946977/221329674-2b35f3a1-ad15-44f2-b458-64a0c72e7fc9.png)\r\n\r\n\r\nnew hover now mentions the name of the module\r\n![image](https://user-images.githubusercontent.com/1946977/221329834-376abe8c-b620-4bd7-9003-1a09639953a3.png)\r\n",
    "head_branch": "add-name-to-moduleUnknownMember",
    "is_a_fork": true,
    "comments": [
      "In this particular scenario it's not clear to me that this is an improvement since at first glance I thought that the `\"tf\"` in the hover text was referring to the `tf` in `tf.GraphKeys` rather than helping me differentiate between `tf` and `tf.v1`.\r\n\r\nAlso, if you had a union of 3+ modules and 2+ of them were missing `GraphKeys`, would it give you a list of the modules that didn't have a `GraphKeys` member?\r\n\r\nWhen there's a union of types and some of them are missing a member, we list out the types that are missing that member. For example, in this `Union[Good, Bad1, Bad2]` where only `Good` has the member `maybe_missing`:\r\n\r\n![image](https://user-images.githubusercontent.com/12820898/221331536-34615bfa-7667-4d8c-8fb9-55d2a6c7f998.png)\r\n",
      "i'll double check the case of union with 3",
      "here is an example where v1 and v2 are missing `GraphKeys`\r\nI'm also considering changing the module name string to use `printType` to create `Module(\"v1\")` and `Module(\"v2\")`\r\n![image](https://user-images.githubusercontent.com/1946977/221645219-ceabb176-9608-4e58-ad4b-d27397389c96.png)\r\n",
      "going to stop using printType inorder to remove the redundant Module(\"..\") string \r\n![image](https://user-images.githubusercontent.com/1946977/221656383-9175b3da-f009-4c7e-9911-e2579850dd7b.png)\r\n"
    ],
    "commit_messages": [
      "added module name to moduleUnknownMember diagnostic to help inform wh… (#4691)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111dfac254a19ac2907ad",
    "number": 4684,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.295",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111e0ac254a19ac2907ae",
    "number": 4682,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action\r\n\r\n https://github.com/microsoft/pyrx/commit/0eb06860111f7953e0a7d6762ebca094e5fa2147 some clean up around workspace edit helper code. (#3183)\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>",
    "head_branch": "pull-pylance-with-pyright-1.1.295",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.295 (#4682)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111e1ac254a19ac2907af",
    "number": 4681,
    "body": "For https://github.com/microsoft/pylance-release/issues/3429\n\nUse new field priority instead of importtype for sorting",
    "head_branch": "rchiodo/import_sorting",
    "is_a_fork": true,
    "comments": [
      "> Do we need to hotfix Pylance with this? Eric seemed to think the regression in Pyright was pretty bad. Is it less impactful in Pylance?\r\n\r\nI don't see why not"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111e2ac254a19ac2907b0",
    "number": 4678,
    "body": "rollup from pylance\r\n\r\n- fixed missing import. Do not store host in 2 different places. \r\n- some clean up around workspace edit helper code",
    "head_branch": "pull-pylance-with-pyright-null",
    "is_a_fork": false,
    "comments": [
      "this PR is updated. pyrx one should be recloned?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111e3ac254a19ac2907b1",
    "number": 4676,
    "body": "Fixes #4680 \r\n\r\nAdds two new GitHub actions based on Pylance's build and release actions.\r\n\r\nI've tested both of them in my fork except for the final step of actually publishing. We can try that with the next release. The publishing PAT is already [in place](https://github.com/microsoft/pyright/settings/secrets/actions).\r\n\r\n### build.yml\r\nTriggered when a new `1.1.###` tag is pushed. Does the following:\r\n1. Checks out that tag.\r\n2. Installs node and runs `npm run install:all`\r\n3. Builds a new VSIX with `npm run package`.\r\n4. Saves that VSIX as a build artifact.\r\n5. Creates a new release named \"Published `<tag name>`\". That naming matches the [existing releases](https://github.com/microsoft/pyright/releases).\r\n6. Saves the VSIX as a release asset.\r\n\r\n### release.yml\r\nTriggered when someone edits the release and pushes the \"Publish Release\" button. Does the following:\r\n1. Downloads the VSIX asset from the release.\r\n2. Publishes it to the VS Code Marketplace via `vsce`.",
    "head_branch": "publishAction",
    "is_a_fork": true,
    "comments": [
      "tagging @rchiodo and @bschnurr \r\n\r\nit looks good to me as well. \r\n\r\none thing, some of github action shows warning to move to newer version of actions? such as actions/checkout@v2? \r\n\r\nbut we could fix those when we fix them in pyrx as well.",
      "I'm working on addressing the warnings that HeeJae mentioned. Some of them will become failures in May, so might as well fix them now."
    ],
    "commit_messages": [
      "Actions to publish to VS Code Marketplace (#4676)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111e4ac254a19ac2907b2",
    "number": 4675,
    "body": "pull from pylance.\r\n\r\nrollup of:\r\n    https://github.com/microsoft/pyrx/commit/13e3f45ee1f8d820c07bd95ecea719ebecef54ff Move symbol end to end working. (#3159)\r\n    https://github.com/microsoft/pyrx/commit/469b48389b1c095dae181df865e43823a5fe17ec Refactor some of the extension code to allow for better cleanup (#3176)\r\n    https://github.com/microsoft/pyrx/commit/32d88a67a0e9267cb9f060822ba876f691debeb0 Upgrading dep versions (#3161)\r\n    https://github.com/microsoft/pyrx/commit/9a3dac36a0579198d7b30c431cf7bf8d33169923 Change importType on excluded imports to be 3rd party to improve import sorting (#3163)",
    "head_branch": "pull-pylance-with-pyright-1.1.295",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.295 (#4675)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111e5ac254a19ac2907b3",
    "number": 4669,
    "body": "pull from pylance.\r\n\r\nrollup of:\r\n    https://github.com/microsoft/pyrx/commit/13e3f45ee1f8d820c07bd95ecea719ebecef54ff Move symbol end to end working. (#3159)\r\n    https://github.com/microsoft/pyrx/commit/469b48389b1c095dae181df865e43823a5fe17ec Refactor some of the extension code to allow for better cleanup (#3176)\r\n    https://github.com/microsoft/pyrx/commit/32d88a67a0e9267cb9f060822ba876f691debeb0 Upgrading dep versions (#3161)\r\n    https://github.com/microsoft/pyrx/commit/9a3dac36a0579198d7b30c431cf7bf8d33169923 Change importType on excluded imports to be 3rd party to improve import sorting (#3163)\r\n",
    "head_branch": "pull-pylance-with-pyright-1.1.294",
    "is_a_fork": false,
    "comments": [
      "restarting"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111e6ac254a19ac2907b4",
    "number": 4666,
    "body": "The `vscode-languageserver-node` dependency will attempt dynamic capability registration for workspace folder change notifications if this `workspace.workspaceFolders.changeNotifications` is not set in the `InitializeResult`. That is problematic for clients that don't support dynamic capability registration: if we send a JSONRPC error, the server will exit because of the rejected promise.\r\n\r\nThe server has support for workspace folders and requests and uses change notifications as far as I can see, so I believe it's more correct to declare support for these up-front anyways.\r\n\r\nThis is the recommended way to avoid dynamic capability registration for this case with `vscode-languageserver-node`: [(comment)](https://github.com/microsoft/vscode-languageserver-node/issues/713#issuecomment-754551117)\r\n\r\nFixes https://github.com/microsoft/pyright/issues/2690\r\nFixes https://github.com/microsoft/pyright/issues/1302\r\nThis and a change within Helix (https://github.com/helix-editor/helix/pull/6058) will resolve issues we started seeing in 1.1.293 (https://github.com/microsoft/pyright/discussions/4602)\r\nSee also https://github.com/microsoft/vscode-languageserver-node/commit/5bc82ac3c1c656aa70615c9e3e065fa04e41506e\r\nRevelant part of the spec: https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#workspace_workspaceFolders\r\n[Here](https://github.com/microsoft/pyright/blob/d22850b041edbc747ec043553a23bdbff55696d6/packages/pyright-internal/src/languageServerBase.ts#L772-L786) is where the change notification handler is set up in pyright and what triggers dynamic capability registration within vscode-languageserver-node.",
    "head_branch": "md-declare-change-notifications",
    "is_a_fork": true,
    "comments": [
      "Thanks for the contribution. Looks good to me.\r\n\r\n@heejaechang, I'm adding you as a reviewer also.",
      "@heejaechang, any thoughts on this PR? If I don't hear from you in the next day, I'll assume it's OK and merge it.",
      "I think it is right thing to do. we already listen for workspace folder change event and support workspace folders.",
      "It looks like when we register for workspace folder change event, LSP library automatically send registerCapabilities for workspace folder change support. and that's why it worked fine for vscode and we didn't notice."
    ],
    "commit_messages": [
      "Declare workspaceFolders support in server capabilities (#4666)\n\n* Declare workspaceFolders support in server capabilities\r\n\r\nThe `vscode-languageserver-node` dependency will attempt dynamic\r\ncapability registration for workspace folder change notifications\r\nif this `workspace.workspaceFolders.changeNotifications` is not set\r\nin the `InitializeResult`. That is problematic for clients that don't\r\nsupport dynamic capability registration: if we send a JSONRPC error,\r\nthe server will exit because of the rejected promise.\r\n\r\nThe server has support for workspace folders and requests and uses\r\nchange notifications as far as I can see, so I believe it's more\r\ncorrect to declare support for these up-front anyways.\r\n\r\n* Fix formatting\r\n\r\n---------\r\n\r\nCo-authored-by: Heejae Chang <1333179+heejaechang@users.noreply.github.com>\r\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111e7ac254a19ac2907b5",
    "number": 4662,
    "body": "Closes https://github.com/microsoft/pylance-release/issues/2143\r\n\r\nWith docstring:\r\n![image](https://user-images.githubusercontent.com/28958079/219932207-c524a163-8f63-4689-b917-797b2d05f512.png)\r\n\r\n![image](https://user-images.githubusercontent.com/28958079/219932213-42c7af0a-077a-46d5-bf5c-a689772e424a.png)\r\n\r\nWithout docstring:\r\n![image](https://user-images.githubusercontent.com/28958079/219932190-6956ae73-d5d1-4c98-838f-ec8d2797a58f.png)\r\n\r\n![image](https://user-images.githubusercontent.com/28958079/219932197-a5ad0e8d-09e8-4ed8-995c-992b96ce6146.png)\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "@microsoft-github-policy-service agree",
      "I think this PR is redundant. Please look at this [other pending PR](https://github.com/microsoft/pyright/pull/4655) and confirm.",
      "The approach you're using is a bit different than the one used in the other pending PR. I think the other approach (of caching the docstring during binding) is preferable and is more consistent with other docstring processing. I'm therefore going to close this PR.\r\n\r\nThanks for taking the time to submit the change."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111e8ac254a19ac2907b6",
    "number": 4655,
    "body": "closes [microsoft/pylance-release#2143](https://github.com/microsoft/pylance-release/issues/2143)\r\n\r\nScreenshots:\r\nWithout docstring:\r\n<img width=\"295\" alt=\"image\" src=\"https://user-images.githubusercontent.com/36574477/219823314-63af349e-99c7-45bf-92e4-6c7d9ad99897.png\">\r\n\r\n\r\nWith docstring:\r\n<img width=\"326\" alt=\"image\" src=\"https://user-images.githubusercontent.com/36574477/219823254-81344617-35fe-4519-821a-606c97b96b3a.png\">\r\n",
    "head_branch": "feat/param-documentation-hover",
    "is_a_fork": true,
    "comments": [
      "> @microsoft-github-policy-service agree\r\n\r\n@microsoft-github-policy-service agree",
      "@erictraut Thank you for the feedback! To follow up on your question, the way I interpreted the discussion linked above was that the parameter's docstring would be displayed throughout the function. While the symbol can be reassigned I feel as though the docstring would still hold up in most cases. I agree that it is important to weigh the value that comes with displaying the docstring throughout (especially in longer / more complex functions) vs. the confusion that could arise if reassigned. I personally lean more toward the former, but a discussion on this would be great.",
      "@debonte, please discuss with pylance team and review the proposed change. I'm good with it if you are.",
      "@erictraut, Pylance is good with this change."
    ],
    "commit_messages": [
      "Added parameter documentation on hover from function docString (#4655)\n\n* Added parameter documentation on hover from function docString\r\n\r\n* Added test cases for hover, cleaned up nits\r\n\r\n* Added edge case test for parameter symbol reassignment\r\n\r\n* Ran prettier\r\n\r\n---------\r\n\r\nCo-authored-by: Rich Chiodo <rchiodo@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111e9ac254a19ac2907b7",
    "number": 4648,
    "body": "This is just an idea we discussed today:\r\nhttps://github.com/microsoft/pylance-release/issues/3892#issuecomment-1433613560\r\n\r\nWith the goal being able to have docs for each specific type of message. Similar to how C# has docs like this example:\r\nhttps://learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-messages/cs0029\r\n\r\nHaving custom docs for each message allows:\r\n- Searching on the message id. Like how searching for CS0029 brings up that example above.\r\n- Allow for more information about each message that we can update independent from shipping\r\n- Allow for translations (at least as much as a browser can)\r\n\r\nThis draft PR is just to get the idea in front of you @erictraut. This would be the first stage, just making sure we have a unique identifier for every message.\r\n\r\nThe second stage might be to add a new folder under [docs](https://github.com/microsoft/pyright/tree/main/docs) that would contain an `.md` for every identifier. \r\n\r\n3rd stage would be to start flushing out each error's description and give them examples. Might even use ChatGPT to generate the messages.",
    "head_branch": "rchiodo/errorids",
    "is_a_fork": true,
    "comments": [
      "I think you're biting off a lot of work (both upfront and ongoing) for relatively little user benefit. I've maintained per-diagnostic error numbers in previous projects I've worked on, and it's a major pain to maintain. Also, don't underestimate the work involved in documenting all of these codes. My sense is that this isn't a good route to go down. Let's discuss more before you go further.",
      "Okay thanks. Hopefully we can still meet after today to discuss. \r\n\r\nI'm curious what the ongoing maintenance cost is. Well and if you have an alternative method that helps users.",
      "In this [file](https://github.com/microsoft/pyright/blob/7fc77ec1492a953ae980217f6b596416b7a70a36/packages/pyright-internal/src/localization/package.nls.en-us.json#L3) there are 672 different possible diagnostic messages.\r\n\r\nWriting all of those might take a while but we could automate a script that generates the md files and just has the message in them. Filling in those that happen more often as we go.",
      "If a diagnostic message is sufficiently unclear to be understood on its own, then we should consider ways to make them clearer. This would be more convenient to users than forcing them to go to another source for documentation and explanations.",
      "I wonder if we could contact the C# team and ask them their thoughts about the same thing. ",
      "> If a diagnostic message is sufficiently unclear to be understood on its own, then we should consider ways to make them clearer. This would be more convenient to users than forcing them to go to another source for documentation and explanations.\r\n\r\nI don't feel like this is always possible. At least in the UI that we have now. Perhaps we could show the extra information inside of VS code though? \r\n\r\nIf you look at the C# error, it has a wall of text for a single error. Did they do that because they didn't find a way to explain things in the product? How come? What other things did they try? Maybe they would do things differently now.\r\n\r\nTypescript also has error numbers but they don't document them like C# does. How come? Did they just let stack overflow document them? The internet has done a pretty good job of explaining them all. Could we do something like that? Just give the errors numbers and let the rest of the world document what to do about them?\r\n\r\nI mean if we had error numbers, your responses to those errors would generate implicit documentation.",
      "Talking to the C# and TypeScript teams is a good suggestion. It'd be good to hear what their experience is with maintaining unique IDs and detailed documentation for all of their diagnostics.",
      "One idea to consider (not sure if I like it, but I figured I'd throw it out there) is to use the internal localization key (e.g. \"overloadWithImplementation\") rather than some randomly-assigned numeric value. We already maintain localization keys, guarantee that they're unique (one per diagnostic message), and they are semi-human-readable.",
      "I like that idea. Better than numbers anyway. More like C++ error messages. Oh I guess C++ has error numbers too. I seem to recall suppressing specific warnings by name though.",
      "I assume that we're not moving forward with this idea as prototyped, so I'm going to close this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111eaac254a19ac2907b8",
    "number": 4639,
    "body": "- fix for hover not showing `Unknown` type https://github.com/microsoft/pyright/issues/4604\r\n- refactoring move symbol https://github.com/microsoft/pylance-release/issues/3724\r\n- fixes for rename file issue https://github.com/microsoft/pylance-release/issues/3929",
    "head_branch": "pull-pylance-2023211",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push pylance changes to pyright (#4639)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111eaac254a19ac2907b9",
    "number": 4614,
    "body": "Address https://github.com/microsoft/pylance-release/issues/3939\r\n\r\nMove `\"Fields without default values cannot appear after fields with default values\"` to the `reportGeneralTypeIssues` diagnostic so the error is not reported for users with `typeCheckingMode` set to `off`.",
    "head_branch": "pylance3939",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change dataClassFieldWithDefault from error to diagnostic (#4614)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111ebac254a19ac2907ba",
    "number": 4612,
    "body": "Bumps [cacheable-request](https://github.com/jaredwray/cacheable-request) from 10.2.2 to 10.2.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/jaredwray/cacheable-request/releases\">cacheable-request's releases</a>.</em></p>\n<blockquote>\n<h2>v10.2.6</h2>\n<h1>Fix for memory leak on Listeners</h1>\n<p>The listener was not being removed on <code>response</code> and just error but new handlers were being added causing a memory leak.</p>\n<p><a href=\"https://github.com/jaredwray/cacheable-request/blob/c4815689be40854a3d748a3927959354c09b0ebb/src/index.ts#L220-L225\">line 220 in src/index.ts was modified to remove the listener on response also </a></p>\n<pre><code>\t\t\tif (this.cache instanceof Keyv) {\n\t\t\t\tconst cachek = this.cache;\n\t\t\t\tcachek.once('error', errorHandler);\n\t\t\t\tee.on('error', () =&gt; cachek.removeListener('error', errorHandler));\n\t\t\t\tee.on('response', () =&gt; cachek.removeListener('error', errorHandler));\n\t\t\t}\n</code></pre>\n<h2>What's Changed</h2>\n<ul>\n<li>upgrading jest and components to latest by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/220\">jaredwray/cacheable-request#220</a></li>\n<li>upgrading <code>@​types/jest</code> to 29.2.6 by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/221\">jaredwray/cacheable-request#221</a></li>\n<li>fixing listener memory leak - issue <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/issues/222\">#222</a> by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/223\">jaredwray/cacheable-request#223</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/jaredwray/cacheable-request/compare/v10.2.5...v10.2.6\">https://github.com/jaredwray/cacheable-request/compare/v10.2.5...v10.2.6</a></p>\n<h2>v10.2.5</h2>\n<p>Types definition issue with http-cache-sematics as that type definition needs to be in dependencies. Thanks <a href=\"https://github.com/Maxim-Mazurok\"><code>@​Maxim-Mazurok</code></a></p>\n<h2>What's Changed</h2>\n<ul>\n<li>Move <code>@​types/http-cache-semantics</code> from dev to deps by <a href=\"https://github.com/Maxim-Mazurok\"><code>@​Maxim-Mazurok</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/219\">jaredwray/cacheable-request#219</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/jaredwray/cacheable-request/compare/v10.2.4...v10.2.5\">https://github.com/jaredwray/cacheable-request/compare/v10.2.4...v10.2.5</a></p>\n<h1>v10.2.4</h1>\n<p>Minor updates with one exception is that we removed <code>@types/http-cache-semantics</code> from the main dependencies as it does not look to be needed.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>upgrading typescript to 4.9.4 by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/214\">jaredwray/cacheable-request#214</a></li>\n<li>upgrading jest types and eslint for jest to latest by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/215\">jaredwray/cacheable-request#215</a></li>\n<li>upgrading sqlite3 to 5.1.4 by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/216\">jaredwray/cacheable-request#216</a></li>\n<li>removing <code>@​types/http-cache-semantics</code> from the dependencies and moving… by <a href=\"https://github.com/jaredwray\"><code>@​jaredwray</code></a> in <a href=\"https://github-redirect.dependabot.com/jaredwray/cacheable-request/pull/217\">jaredwray/cacheable-request#217</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/jaredwray/cacheable-request/compare/v10.2.3...v10.2.4\">https://github.com/jaredwray/cacheable-request/compare/v10.2.3...v10.2.4</a></p>\n<h1>v10.2.3 Maintenance Release</h1>\n<p>Upgrading core modules in the system such as keyv and also a minor fix to an uncaught exception that we were seeing referenced here: <a href=\"https://github-redirect.dependabot.com/sindresorhus/got/issues/1925\">sindresorhus/got#1925</a></p>\n<p>Additional update is moving <code>normalize-url</code> to <code>8.0.0</code> which after testing it looks to not affect anything but will post the release notes here: <a href=\"https://github.com/sindresorhus/normalize-url/releases/tag/v8.0.0\">https://github.com/sindresorhus/normalize-url/releases/tag/v8.0.0</a></p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/jaredwray/cacheable-request/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cacheable-request&package-manager=npm_and_yarn&previous-version=10.2.2&new-version=10.2.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/cacheable-request-10.2.7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump cacheable-request from 10.2.2 to 10.2.7 (#4612)\n\nBumps [cacheable-request](https://github.com/jaredwray/cacheable-request) from 10.2.2 to 10.2.7.\r\n- [Release notes](https://github.com/jaredwray/cacheable-request/releases)\r\n- [Commits](https://github.com/jaredwray/cacheable-request/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: cacheable-request\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111ecac254a19ac2907bb",
    "number": 4607,
    "body": "I made the `findNodeByOffset` function to use `binarySearch` if possible, reducing the cost of `findNodeByOffset` to depend on the tree depth rather than both width + depth.\r\n\r\npreviously, if we want to find all `identifier` from a file, we will need to use parse tree walker since using token stream to find all `identifier` and use `findNodeByOffset` to find `name node` would be too costly since `findNodeByOffset` will always visit all siblings left to right for all matching sub tree until it finds the leaf node that match. and that can lead to n^2 cost compared to walker whose cost is linear to number of nodes.\r\n\r\nSince parse tree doesn't guarantee increasing order between children's nodes (textual order), we might want to use tokenizer when we want the textual order to be intact. and this will let us use another approach when needed.\r\n\r\nnow, in practice, cost of repeatedly searching node using `findNodeByOffset` will remain almost constant. \r\n\r\n...\r\n\r\nI wrote simple code to compare perf. what it does is, among 2k statements, finding the last statement 1000 times.\r\n\r\nold `findNodeByOffset` took 20ms, new one took 1ms. making the size of code or repetition larger made old code number go up but new one stayed flat. for example, making 10K statements, made old code to take over 100ms, but new code stay at 2 ms.\r\n\r\n",
    "head_branch": "findNodeByOffset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use binary search in findNodeByOffset if we can. (#4607)\n\n* use binary search in findNodeByOffset if we can\r\n\r\n* address PR feedbacks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111edac254a19ac2907bc",
    "number": 4599,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/3868\r\n\r\nSpecial case completions and signature help for kwargs that come from TypedDicts.",
    "head_branch": "rchiodo/pep692_additions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Completions and signature help for PEP 692 (#4599)\n\n* Completions and signature help for PEP 692\r\n\r\n* Fix comment\r\n\r\n* More comment changes\r\n\r\n* Use common function for parameter checking\r\n\r\n* Review feedback\r\n\r\n* Update comment\r\n\r\n* More review feedback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111eeac254a19ac2907bd",
    "number": 4595,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action\r\n\r\n- fix for duplicate property docstring on hover",
    "head_branch": "pull-pylance-with-pyright-1.1.293",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.293 (#4595)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111efac254a19ac2907be",
    "number": 4581,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action\r\n\r\nrollup of:\r\n- enhance our expand env variable\r\n- support unused symbols in notebooks",
    "head_branch": "pull-pylance-with-pyright-1.1.292",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.292 (#4581)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f0ac254a19ac2907bf",
    "number": 4578,
    "body": "Bumps [http-cache-semantics](https://github.com/kornelski/http-cache-semantics) from 4.1.0 to 4.1.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/kornelski/http-cache-semantics/commit/24496504352199caf360d1b4d4a01efdc8a7249e\"><code>2449650</code></a> Update mocha</li>\n<li><a href=\"https://github.com/kornelski/http-cache-semantics/commit/560b2d8ef452bbba20ffed69dc155d63ac757b74\"><code>560b2d8</code></a> Don't use regex to trim whitespace</li>\n<li><a href=\"https://github.com/kornelski/http-cache-semantics/commit/b1bdb92638426fab978f31e1330b6833015cabf0\"><code>b1bdb92</code></a> Remove linting package zoo</li>\n<li><a href=\"https://github.com/kornelski/http-cache-semantics/commit/c20dc7eeca608339143857953ee7ed9343fe6d3d\"><code>c20dc7e</code></a> Cache 308</li>\n<li>See full diff in <a href=\"https://github.com/kornelski/http-cache-semantics/compare/v4.1.0...v4.1.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=http-cache-semantics&package-manager=npm_and_yarn&previous-version=4.1.0&new-version=4.1.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/http-cache-semantics-4.1.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump http-cache-semantics from 4.1.0 to 4.1.1 (#4578)\n\nBumps [http-cache-semantics](https://github.com/kornelski/http-cache-semantics) from 4.1.0 to 4.1.1.\r\n- [Release notes](https://github.com/kornelski/http-cache-semantics/releases)\r\n- [Commits](https://github.com/kornelski/http-cache-semantics/compare/v4.1.0...v4.1.1)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: http-cache-semantics\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f1ac254a19ac2907c0",
    "number": 4577,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f2ac254a19ac2907c1",
    "number": 4575,
    "body": "…loring friendly.\r\n\r\n\r\n- adding prefix `def` before function names to improve textmate coloring\r\n- adding postfix `: ...` to overloaded functions and constructors to help when multiple singatures are displayed.\r\n- changing class instance hovers `(class)` to `class ` to improve textmate coloring.\r\n\r\nprevious\r\n![image](https://user-images.githubusercontent.com/1946977/216472678-b6663228-f164-4675-93c8-48e86a6b1245.png)\r\n\r\n\r\nnew\r\n![image](https://user-images.githubusercontent.com/1946977/216472721-9b71db95-9190-4f6b-9be1-1fd5cddc9a0a.png)\r\n\r\n",
    "head_branch": "fix-function-textmate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "modifying class and function signatures to make them more textmate co… (#4575)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f2ac254a19ac2907c2",
    "number": 4565,
    "body": "- goto def reworking an dcompletions for parameters\r\n- add parens for assignment expressions in classes",
    "head_branch": "pull-pylance-feb1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pull from pylance feb1 (#4565)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f3ac254a19ac2907c3",
    "number": 4563,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f4ac254a19ac2907c4",
    "number": 4554,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action\r\n\r\nnew map of string locales",
    "head_branch": "pull-pylance-with-pyright-1.1.291",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.291 (#4554)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f5ac254a19ac2907c5",
    "number": 4530,
    "body": "…ype guard expressions of the form `L == X` and `L != X` where `L` is a literal and `X` is a narrowable expression. The more common forms `X == L` and `X != L` are still supported. The less-common expression forms were never documented to work. This addresses issue https://github.com/microsoft/pyright/issues/4519.",
    "head_branch": "perf_4519",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f6ac254a19ac2907c6",
    "number": 4529,
    "body": "…\"python.analysis.formatFunctionSignature\" in vscode) which will insert a newline between parameters to give more display room to right and also moving the return type annotation to its own line.  Formatting is defaulted to off.\r\n\r\nalso affects signatures displayed in completions.\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/1946977/214718622-8f47aa77-8feb-4809-9a79-049dcb2dc8ab.png)\r\n\r\nNote: indentation is different compared to my last PR. this time i only indent a constant 4 spaces on each newline. Previously I tried to align the open and close braces `()`, but found that sacrificed a lot of room on the righthand side of the display\r\n\r\n\r\nrelated to issue https://github.com/microsoft/pylance-release/issues/3425",
    "head_branch": "add-formatSignature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding a new setting (\"formatFunctionSignature\" in pyrightconfig and … (#4529)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f7ac254a19ac2907c7",
    "number": 4527,
    "body": "rollup of the following changes:\r\n    1. some refactoring on test functions to share test code.\r\n    2. improve when to show signature help inside of format string \r\n    3. now, we add extra commit chars to completion item only if there is matching pretext exists if extra commit char is enabled.",
    "head_branch": "pull-pylance-with-pyright-1.1.291",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.291 (#4527)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f8ac254a19ac2907c8",
    "number": 4522,
    "body": "When adding declaration to symbols, there's at least one case where the resolved declaration (which is obtained via the submodule fallback) is of type `Alias` and it refers to a module (not a node), hence the empty range should be used.\r\n\r\nWithout this fix, LSP clients can fail to jump to the location because although the file exists the ranges might not.\r\n\r\nFixes #4521 ",
    "head_branch": "fix/empty-range-for-submodule-fallback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: empty range for submodule fallback (#4522)\n\nThis addresses https://github.com/microsoft/pyright/issues/4521\r\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f9ac254a19ac2907c9",
    "number": 4501,
    "body": "Addresses https://github.com/microsoft/pyright/issues/4496\r\n\r\nThe detection logic for `#region` and `#endregion` was recently [changed](https://[github.com](https://github.com/microsoft/pyrx/pull/3024)/microsoft/pyrx/pull/3024) to require whitespace after the word \"region\" or \"endregion\". This was too strict.\r\n\r\nChange the logic to allow any non-identifier character (i.e. anything other than `a-zA-Z0-9_`) after the word \"region\" or \"endregion\".\r\n\r\nSo these are good:\r\n- `#region`\r\n- `#region foo`\r\n- `#region: foo`\r\n\r\nAnd these are not:\r\n- `#regionfoo`\r\n- `#region_name`",
    "head_branch": "issue4496",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow non-identifier characters immediately after #region (#4501)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111f9ac254a19ac2907ca",
    "number": 4500,
    "body": "rollup of the following changes:\n    1. Officepy (#3039)\n    2. improve when to show signature help inside of format string (#3088)\n    3. now, we add extra commit chars to completion item only if there is matching pretext exists. (#3084)",
    "head_branch": "pull-pylance-with-pyright-1.1.290",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111faac254a19ac2907cb",
    "number": 4498,
    "body": "accomodate -> accommodate",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111fbac254a19ac2907cc",
    "number": 4492,
    "body": "…hen hovering over a name that is part of a call expression. In such cases, the context of the call's arguments often provides sufficient context to select one (or in some cases, several) overloads.",
    "head_branch": "hover-overloads",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Changed hover provider to limit its display of overloaded functions w… (#4492)\n\n* Changed hover provider to limit its display of overloaded functions when hovering over a name that is part of a call expression. In such cases, the context of the call's arguments often provides sufficient context to select one (or in some cases, several) overloads.\r\n\r\n* Added unit test for overload-aware hover capability.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111fcac254a19ac2907cd",
    "number": 4489,
    "body": "rollup of the following changes:\r\n1. improved calculating indentation of multiline expressions \r\n2. added support for expanding ~ in some specific locations.\r\n3. etc",
    "head_branch": "pull-pylance-with-pyright-1.1.290",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.290 (#4489)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111fdac254a19ac2907ce",
    "number": 4487,
    "body": "rollup of the following changes:\r\n1. improved calculating indentation of multiline expressions \r\n2. added support for expanding ~ in some specific locations.",
    "head_branch": "pull-pylance-with-pyright-1.1.290",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111feac254a19ac2907cf",
    "number": 4449,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662111ffac254a19ac2907d0",
    "number": 4443,
    "body": "rollup of the following changes:\r\n1. updated LSP dependency to the latest\r\n2. improved `find all reference` to find both instance creation (call node) and `__init__` when `__init__` is searched.\r\n3. improved auto indent behavior around multiple constructs. (to follow pep8)\r\n4. reduced refresh time from 10 min to 10 secs for multiroot workspace",
    "head_branch": "pull-pylance-with-pyright-null",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-null (#4443)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211200ac254a19ac2907d1",
    "number": 4441,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.288",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211201ac254a19ac2907d2",
    "number": 4404,
    "body": "Rollup of the following changes:\r\n\r\n1. updated dependencies.\r\n2. shared code to generate and show tooltips for hover and completion.\r\n3. supported module doc string on more locations.\r\n4. improved region/endregion handling.\r\n5. fixed indentation regression caused by parser tree shape changes.\r\n6. and etc.",
    "head_branch": "pull-pylance-2023111",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push pylance changes to pyright (#4404)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211202ac254a19ac2907d3",
    "number": 4400,
    "body": "* https://github.com/actions/cache/releases\r\n* https://github.com/actions/checkout/releases\r\n* https://github.com/actions/setup-node/releases",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade GitHub Actions (#4400)\n\n* https://github.com/actions/cache/releases\r\n* https://github.com/actions/checkout/releases\r\n* https://github.com/actions/setup-node/releases"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211203ac254a19ac2907d4",
    "number": 4399,
    "body": "[`codespell --ignore-words-list=classe,te --skip=\"./.*,*.json,*.pyi,*.ts\"`](https://pypi.org/project/codespell)",
    "head_branch": "codespell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typos discovered by codespell (#4399)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211203ac254a19ac2907d5",
    "number": 4398,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo (#4398)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211204ac254a19ac2907d6",
    "number": 4392,
    "body": "Bumps [json5](https://github.com/json5/json5) from 2.2.1 to 2.2.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/json5/json5/releases\">json5's releases</a>.</em></p>\n<blockquote>\n<h2>v2.2.3</h2>\n<ul>\n<li>Fix: json5@2.2.3 is now the 'latest' release according to npm instead of v1.0.2. (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/299\">#299</a>)</li>\n</ul>\n<h2>v2.2.2</h2>\n<ul>\n<li>Fix: Properties with the name <code>__proto__</code> are added to objects and arrays.\n(<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/199\">#199</a>) This also fixes a prototype pollution vulnerability reported by\nJonathan Gregson! (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/295\">#295</a>).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/json5/json5/blob/main/CHANGELOG.md\">json5's changelog</a>.</em></p>\n<blockquote>\n<h3>v2.2.3 [<a href=\"https://github.com/json5/json5/tree/v2.2.3\">code</a>, <a href=\"https://github.com/json5/json5/compare/v2.2.2...v2.2.3\">diff</a>]</h3>\n<ul>\n<li>Fix: json5@2.2.3 is now the 'latest' release according to npm instead of\nv1.0.2. (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/299\">#299</a>)</li>\n</ul>\n<h3>v2.2.2 [<a href=\"https://github.com/json5/json5/tree/v2.2.2\">code</a>, <a href=\"https://github.com/json5/json5/compare/v2.2.1...v2.2.2\">diff</a>]</h3>\n<ul>\n<li>Fix: Properties with the name <code>__proto__</code> are added to objects and arrays.\n(<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/199\">#199</a>) This also fixes a prototype pollution vulnerability reported by\nJonathan Gregson! (<a href=\"https://github-redirect.dependabot.com/json5/json5/issues/295\">#295</a>).</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/json5/json5/commit/c3a75242772a5026a49c4017a16d9b3543b62776\"><code>c3a7524</code></a> 2.2.3</li>\n<li><a href=\"https://github.com/json5/json5/commit/94fd06d82eeed225fa172f6fb2ca27375cbd2e39\"><code>94fd06d</code></a> docs: update CHANGELOG for v2.2.3</li>\n<li><a href=\"https://github.com/json5/json5/commit/3b8cebf0c474a8b20c78bd75c89cca0c4dce84ce\"><code>3b8cebf</code></a> docs(security): use GitHub security advisories</li>\n<li><a href=\"https://github.com/json5/json5/commit/f0fd9e194dde282caff114a110f4fac635f3a62c\"><code>f0fd9e1</code></a> docs: publish a security policy</li>\n<li><a href=\"https://github.com/json5/json5/commit/6a91a05fffeda16ff6b3b5008b6b340d42d31ec0\"><code>6a91a05</code></a> docs(template): bug -&gt; bug report</li>\n<li><a href=\"https://github.com/json5/json5/commit/14f8cb186e8abdfaccf6527171da7b1224374650\"><code>14f8cb1</code></a> 2.2.2</li>\n<li><a href=\"https://github.com/json5/json5/commit/10cc7ca9169b59c5e0f5afc03dbd870cd06bcc46\"><code>10cc7ca</code></a> docs: update CHANGELOG for v2.2.2</li>\n<li><a href=\"https://github.com/json5/json5/commit/7774c1097993bc3ce9f0ac4b722a32bf7d6871c8\"><code>7774c10</code></a> fix: add <strong>proto</strong> to objects and arrays</li>\n<li><a href=\"https://github.com/json5/json5/commit/edde30abd8b22facf2c06c72586b9f6edf12700d\"><code>edde30a</code></a> Readme: slight tweak to intro</li>\n<li><a href=\"https://github.com/json5/json5/commit/97286f8bd542c89dcee096bc05dd28ed2dfc1e16\"><code>97286f8</code></a> Improve example in readme</li>\n<li>Additional commits viewable in <a href=\"https://github.com/json5/json5/compare/v2.2.1...v2.2.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=json5&package-manager=npm_and_yarn&previous-version=2.2.1&new-version=2.2.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/json5-2.2.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump json5 from 2.2.1 to 2.2.3 (#4392)\n\nBumps [json5](https://github.com/json5/json5) from 2.2.1 to 2.2.3.\r\n- [Release notes](https://github.com/json5/json5/releases)\r\n- [Changelog](https://github.com/json5/json5/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/json5/json5/compare/v2.2.1...v2.2.3)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: json5\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211205ac254a19ac2907d7",
    "number": 4356,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make reportImportCycles work again (#4356)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211206ac254a19ac2907d8",
    "number": 4354,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix typos in mypy-comparison (#4354)\n\n* fix typos in mypy-comparison\r\n\r\n* fix versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211207ac254a19ac2907d9",
    "number": 4327,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211208ac254a19ac2907da",
    "number": 4323,
    "body": "Addresses https://github.com/microsoft/pyright/issues/4322\r\n\r\nGenerated regex wasn't handling '.foo' as a directory.",
    "head_branch": "rchiodo/exclusion_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix exclusions/inclusions to work with '.' prefixed directories (#4323)\n\n* Match on '.' prefixed directories too\r\n\r\n* Exclude the '.' folder but nothing else. Add more tests\r\n\r\n* Fix window test failures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211209ac254a19ac2907db",
    "number": 4316,
    "body": "I noticed this in a tool I wrote that does some comparison between the errors generated and the settings in `pyrightconfig.json`. Note, I haven't actually tested this, I made the change in the browser.",
    "head_branch": "import-cycle-diagnostic",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211209ac254a19ac2907dc",
    "number": 4295,
    "body": "-   Bug fix: `source.unusedImports` is very slow and adds unnecessary whitespace [pylance-release#3715](https://github.com/microsoft/pylance-release/issues/3715)\r\n-   Bug fix: Bad autocomplete when typing an open square bracket [pylance-release#3651](https://github.com/microsoft/pylance-release/issues/3651)\r\n-   Enhancement: Apply includeAllSymbols flag to the default option\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>\r\n",
    "head_branch": "pull-pylance-with-pyright-1.1.283",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.283 (#4295)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621120aac254a19ac2907dd",
    "number": 4284,
    "body": "Fixes this complaint:\r\n\r\n```\r\n/foobar.py\r\n  /foobar.py:44:23 - error: Argument of type \"int\" cannot be assigned to parameter \"level\" of type \"str | None\" in function \"log_to_stderr\"\r\n    Type \"int\" cannot be assigned to type \"str | None\"\r\n      \"int\" is incompatible with \"str\"\r\n      Type cannot be assigned to type \"None\" (reportGeneralTypeIssues)\r\n```\r\n\r\nFor this code:\r\n\r\n```python\r\nimport logging\r\nfrom multiprocessing import log_to_stderr\r\n\r\nlog_to_stderr(logging.DEBUG)\r\n```\r\n\r\nSee also typeshed stubs MR: https://github.com/python/typeshed/pull/9334",
    "head_branch": "mikepii/fix-type-multiprocessing-log_to_stderr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621120bac254a19ac2907de",
    "number": 4283,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/3636\r\n\r\nUse parsed source file to determine module doc strings on hover even when the module is not used.",
    "head_branch": "rchiodo/module_hover",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Show doc strings on module part hover (#4283)\n\n* Make hover show doc strings regardless of whether module is used or not\r\n\r\n* Remove dupe code\r\n\r\n* Review feedback\r\n\r\n* Add more tests and remove unnecessary code in _addDocumentationParts\r\n\r\n* Add test with docstring in stub\r\n\r\n* Build error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621120cac254a19ac2907df",
    "number": 4282,
    "body": "Addresses https://github.com/microsoft/pyright/issues/4277",
    "head_branch": "rchiodo/fix_underscore_stdlib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make sure no stdlib modules starting with '_' are counted as stdlib modules (#4282)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621120dac254a19ac2907e0",
    "number": 4271,
    "body": "…  Currently its defaulted to false so that we insert newline between function parameters, but in tests we enable compact mode so that we don't need to re-write every test when we want to change the display format.\r\n\r\n\r\nThis time i dont modify `printType` and restrict the formatting to a higher level in `hoverProvider` and `completionProvider`.\r\n\r\ntodo:\r\n\r\n- [x]  add some actual tests around the new non-compact hover/completion layouts\r\n- [ ]  HeeJae also suggested we re-rewrite `printType` to use a `DisplayStruct` under the hood, with a list of string and token kind, so that we can do proper formatting outside of printType.  similar to `getFuncitonParts` but something like `getTypeParts`\r\n\r\n\r\nOne important note.\r\nthis doesn't currently handle the case of a function or overloaded function being assigned to a variable, and then having the variables hover show nicely formatted overloads with parameters separated on an individual line.  Variables use 'printType()' and not `getFunctionParts()` so I dont have access to the separate parts.  I probably could get the variables alias type and see if its a function/overload. Will investigate\r\n\r\n\r\nexample\r\nclass constructors\r\n![image](https://user-images.githubusercontent.com/1946977/208198736-80229103-ea01-49cb-ab0a-20234eeeb4ed.png)\r\n\r\nfunctions\r\n![image](https://user-images.githubusercontent.com/1946977/208198783-9b6c76da-25bc-4e03-a0ae-4921ba067aff.png)\r\n\r\n\r\ncurrently if there is only 1 parameter will wont separate out the parens to new lines.  Also note I considered 2 options for the closing parens and decided to place the closing paren on a new line, in order to give return type annotations more horizontal space.\r\n![image](https://user-images.githubusercontent.com/1946977/208200936-bac2f816-af66-4549-82d2-e09a4baf07f0.png)\r\n\r\n",
    "head_branch": "fix-function-display",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621120eac254a19ac2907e1",
    "number": 4270,
    "body": "Addresses https://github.com/microsoft/pyright/issues/4269\n\nAllow relative imports for stdlib modules without showing a warning",
    "head_branch": "rchiodo/relative_shadowed_okay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow relative imports for stdlib modules (#4270)\n\n* Allow relative imports for stdlib modules\r\n\r\n* Use another way to check if relative"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621120fac254a19ac2907e2",
    "number": 4266,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/3636\r\n\r\nThis shortcut added in https://github.com/microsoft/pyright/commit/b02711fd941beb5b85bcf1c754cf2d0ffd645927 to improve perf treats module subnames as not resolvable. \r\n\r\nThis makes hover over different parts of an import statement inconsistent. \r\n\r\n",
    "head_branch": "rchiodo/fix_module_hover",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211210ac254a19ac2907e3",
    "number": 4257,
    "body": "- Small perf improvement for file io\r\n- Fix dict key completions to work better\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>",
    "head_branch": "pull-pylance-with-pyright-1.1.282",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.282 (#4257)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211211ac254a19ac2907e4",
    "number": 4251,
    "body": "…pe annotations to separate lines\r\n\r\n- moving `(method)/(function)/(class)` labels to a separate line \r\n- moving return type annotation to a separate line to give its types more horizontal visual spacing\r\n![image](https://user-images.githubusercontent.com/1946977/204718920-835744ef-8d91-44d3-8ad4-8da58c5e3cc7.png)\r\n\r\n\r\n- methods with overloads\r\n![image](https://user-images.githubusercontent.com/1946977/204718002-8896e4d0-6db6-4a57-a137-4402873fdd9f.png)\r\n\r\n- adding an additional lines between overloads when an overloaded function is assigned to a variable. \r\n- 'choice:' isn't appearing blue due to \":\" \r\n![image](https://user-images.githubusercontent.com/1946977/204719895-467ecd95-5194-4060-8ad1-7e7d3795ce16.png)\r\n\r\n",
    "head_branch": "fix-hover-parameters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211211ac254a19ac2907e5",
    "number": 4249,
    "body": "- Fix multiple workspaces to not get out of sync\r\n- Use semantic info to generate better type strings\r\n- Fix auto indent when hitting enter\r\n- Add experimental option to allow auto import of user symbols\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>",
    "head_branch": "pull-pylance-with-pyright-1.1.281",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.281 (#4249)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211212ac254a19ac2907e6",
    "number": 4209,
    "body": "- Provide type annotation for class variable if possible\r\n- Diagnostics for unmatched `#region`/`#endregion` comments\r\n- Properly shutdown language service and workers -- https://github.com/microsoft/pyright/issues/4142\r\n- Update dependency versions",
    "head_branch": "pull-pylance-20221141",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push pylance changes to pyright (#4209)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211213ac254a19ac2907e7",
    "number": 4200,
    "body": "Rollup of the following changes:\r\n- Alias declarations have a range so they are deduped correctly\r\n- source.fixall support in pylance\r\n- allow # pyright : ignore  in unused code\r\n- support 'reportShadowedImports' being overridden in pylance\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>",
    "head_branch": "pull-pylance-with-pyright-1.1.280",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.280 (#4200)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211214ac254a19ac2907e8",
    "number": 4194,
    "body": "Bumps [loader-utils](https://github.com/webpack/loader-utils) from 2.0.3 to 2.0.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/loader-utils/releases\">loader-utils's releases</a>.</em></p>\n<blockquote>\n<h2>v2.0.4</h2>\n<h3><a href=\"https://github.com/webpack/loader-utils/compare/v2.0.3...v2.0.4\">2.0.4</a> (2022-11-11)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li>ReDoS problem (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/225\">#225</a>) (<a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\">ac09944</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/loader-utils/blob/v2.0.4/CHANGELOG.md\">loader-utils's changelog</a>.</em></p>\n<blockquote>\n<h3><a href=\"https://github.com/webpack/loader-utils/compare/v2.0.3...v2.0.4\">2.0.4</a> (2022-11-11)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li>ReDoS problem (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/225\">#225</a>) (<a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\">ac09944</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/6688b5028106f144ee9f543bebc8e6a87b57829f\"><code>6688b50</code></a> chore(release): 2.0.4</li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/ac09944dfacd7c4497ef692894b09e63e09a5eeb\"><code>ac09944</code></a> fix: ReDoS problem (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/225\">#225</a>)</li>\n<li>See full diff in <a href=\"https://github.com/webpack/loader-utils/compare/v2.0.3...v2.0.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=loader-utils&package-manager=npm_and_yarn&previous-version=2.0.3&new-version=2.0.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/pyright/loader-utils-2.0.4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump loader-utils from 2.0.3 to 2.0.4 in /packages/pyright (#4194)\n\nBumps [loader-utils](https://github.com/webpack/loader-utils) from 2.0.3 to 2.0.4.\r\n- [Release notes](https://github.com/webpack/loader-utils/releases)\r\n- [Changelog](https://github.com/webpack/loader-utils/blob/v2.0.4/CHANGELOG.md)\r\n- [Commits](https://github.com/webpack/loader-utils/compare/v2.0.3...v2.0.4)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: loader-utils\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211215ac254a19ac2907e9",
    "number": 4180,
    "body": "Not much else to say.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo `in` -> `is`, in typed-libraries.md (#4180)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211216ac254a19ac2907ea",
    "number": 4174,
    "body": "Rollup of changes:\r\n- Rename fixes\r\n- Diag links jumping directly correct explanation\r\n- Handle UNC paths \r\n\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>",
    "head_branch": "pull-pylance-20221121",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "20221121 (#4174)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211217ac254a19ac2907eb",
    "number": 4169,
    "body": "Changed the `dataclass_transform` mechanism to assume that a class-based dataclass-like classes (like that used by pydantic) area frozen so a `__hash__` method is synthesized. This addresses https://github.com/microsoft/pyright/issues/4168.",
    "head_branch": "pydantic_frozen",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211218ac254a19ac2907ec",
    "number": 4167,
    "body": "Bumps [loader-utils](https://github.com/webpack/loader-utils) from 2.0.2 to 2.0.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/loader-utils/releases\">loader-utils's releases</a>.</em></p>\n<blockquote>\n<h2>v2.0.3</h2>\n<h3><a href=\"https://github.com/webpack/loader-utils/compare/v2.0.1...v2.0.3\">2.0.3</a> (2022-10-20)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>security:</strong> prototype pollution exploit (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/217\">#217</a>) (<a href=\"https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c\">a93cf6f</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/webpack/loader-utils/blob/v2.0.3/CHANGELOG.md\">loader-utils's changelog</a>.</em></p>\n<blockquote>\n<h3><a href=\"https://github.com/webpack/loader-utils/compare/v2.0.1...v2.0.3\">2.0.3</a> (2022-10-20)</h3>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>security:</strong> prototype pollution exploit (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/217\">#217</a>) (<a href=\"https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c\">a93cf6f</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/7162619fb982c394ed75098a0a0ed7e7f3177c70\"><code>7162619</code></a> chore(release): 2.0.3</li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/a93cf6f4702012030f6b5ee8340d5c95ec1c7d4c\"><code>a93cf6f</code></a> fix(security): prototype polution exploit (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/217\">#217</a>)</li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/90c7c4be17e3e0b2f6091a69c67db7a6df9fd044\"><code>90c7c4b</code></a> chore(release): 2.0.2</li>\n<li><a href=\"https://github.com/webpack/loader-utils/commit/8c2d24ee400bc4567335e97ee6004c3baa6ef66f\"><code>8c2d24e</code></a> fix: base64 generation and unicode characters (<a href=\"https://github-redirect.dependabot.com/webpack/loader-utils/issues/197\">#197</a>)</li>\n<li>See full diff in <a href=\"https://github.com/webpack/loader-utils/compare/v2.0.2...v2.0.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=loader-utils&package-manager=npm_and_yarn&previous-version=2.0.2&new-version=2.0.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/pyright/loader-utils-2.0.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump loader-utils from 2.0.2 to 2.0.3 in /packages/pyright (#4167)\n\nBumps [loader-utils](https://github.com/webpack/loader-utils) from 2.0.2 to 2.0.3.\r\n- [Release notes](https://github.com/webpack/loader-utils/releases)\r\n- [Changelog](https://github.com/webpack/loader-utils/blob/v2.0.3/CHANGELOG.md)\r\n- [Commits](https://github.com/webpack/loader-utils/compare/v2.0.2...v2.0.3)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: loader-utils\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211219ac254a19ac2907ed",
    "number": 4165,
    "body": null,
    "head_branch": "checkerRefactoring2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621121aac254a19ac2907ee",
    "number": 4164,
    "body": "Address https://github.com/microsoft/pylance-release/issues/3282\r\n\r\nDon't report an error for an unused expression at the end of a notebook cell, as it is treated as the cell's value.\r\n\r\nThe tests are checking the diagnostic count which we would normally do by testing a sample `.py` file, but I don't believe we have a way to enable `ipythonMode` with that approach. If you'd prefer the tests to work that way, I can look into making that work.",
    "head_branch": "pylance3282",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "\"Expression value is unused\" should not be reported for last expression in notebook cell (#4164)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621121bac254a19ac2907ef",
    "number": 4158,
    "body": "Still working in progress. Just to show the approach I am taking.\r\n\r\nThe purpose of the refactoring is to make each concern to be isolated to each appropriate component. For example, complexity check should be done by only the walker, or each diagnostic check shouldn't be affected by other checks.\r\n\r\nmy goal (hope) is splitting out each check to each file that should be independent to other checks.\r\n\r\nthings need to be done\r\n\r\n- [x] make sure the walker respects return value of the visitor (that controls whether its sub nodes should be visited or not) or find a way things to work without it.\r\n- [ ] make sure the refactoring didn't break existing behavior\r\n- [ ] perf test to make sure refactored checker doesn't cause perf issue\r\n\r\n\r\n\r\n",
    "head_branch": "checkerRefactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621121cac254a19ac2907f0",
    "number": 4141,
    "body": "- fixes django stubs `CharField()`\r\n- support overloads on dunder new/init\r\n- changed function/method type prints that were preventing function names from being colored blue in vscode python textmate  due to an \":\" being inserted after the function name. now function names also become blue.\r\n \r\n![image](https://user-images.githubusercontent.com/1946977/203173430-e2f23543-6b7e-4bea-9dac-ae1394c11c34.png)\r\n\r\n\r\n\r\nie.  `foo(..)` was being printed as `foo: (`\r\nthe code for adding \":\" was ment for handling the property case only. no longer using `_getTypeText()` but instead using the underlining `printType()` call\r\n\r\n\r\nhttps://github.com/microsoft/pylance-release/issues/3431\r\n\r\nprevious fix was a hack to just edit the django stubs to remove\r\n`def __init__(self, *args: Any, **kwargs: Any) -> None: ...`\r\nfrom the base class.\r\n\r\n\r\n\r\nexample of django-stubs's CharField's `__new__` signature \r\n![image](https://user-images.githubusercontent.com/1946977/203173141-ee89e858-f9da-4a89-ac0d-309a4d7fd4b0.png)",
    "head_branch": "fix-hover-signature-dunderNew",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support __new__ for class constructor hover and signature help (#4141)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621121dac254a19ac2907f1",
    "number": 4133,
    "body": "This is the first step to refactor checker to use 1 walker but multiple visitors which do its own checking inside of the checker.\r\n\r\nPR with perf test (https://github.com/microsoft/pyrx/pull/2895)\r\n\r\nand the result is pasted below.\r\n\r\n`original walker` is what we have now \r\n`heap based walker (with 1 switch)` is a heap based (no recursion) [walker](https://github.com/microsoft/pyrx/blob/09287d8d55320e9b33215ba280696480b3e3130f/packages/pyright/packages/pyright-internal/src/analyzer/parseTreeWalker4.ts#L100) of the `original walker`\r\n `refactored walker (with 2 switch)`  is what I have in this PR\r\n`heap based walker (with 2 switch)` is a heap based [walker](https://github.com/microsoft/pyrx/pull/2895/files#diff-a438e8c98f3ef4ee1f33c7a54814400af89b6bf6a60e26d4abe95358c7be8044) for `refactored walker (with 2 switch)`\r\n\r\nI believe all perf difference comes from the fact that `original walker` had only 1 big switch to dispatch node based on node kind, but  `refactored walker (with 2 switch)`  has 2 of those (visit and getChildNodes)\r\n\r\nconverting recursion based to heap base didn't improve perf probably because it now has a real stack in heap to hold nodes to visit.\r\n\r\nand as you said, the `original walker` is the fastest one, about 10% to 20% faster than other ones.\r\n\r\nbut that being said, it is like avg 0.02-0.04ms differences in elapsed time per tree or 0.00001-0.00002ms difference per node. which won't be noticeable. especially if walker does actual work rather than just purely iterating through all nodes.\r\n\r\n```\r\n  ~#@❯  npm run perftest                                                            \r\n\r\n> pylance-internal@9999.0.0-dev perftest\r\n> ts-node --project ./tsconfig.withBaseUrl.json -r tsconfig-paths/register ./src/walkerPerf.ts\r\n\r\nscan files in D:\\pytest\\requestTest\\.env\\Lib\\site-packages\r\nfound 4998 files\r\n\r\n\r\nrun 1 *******\r\nrun gc to clean memory\r\n\r\ntotal file size 69548977bytes, total parse time 15.14sec for 4998 trees (3.03ms per tree)\r\noriginal walker\r\ntotal walking time 1.21sec for 4998 trees and 8770308 nodes. (0.24ms per tree) (0.000138ms per node)\r\nheap based walker (with 1 switch)\r\ntotal walking time 1.09sec for 4998 trees and 8770308 nodes. (0.22ms per tree) (0.000124ms per node)\r\nrefactored walker (with 2 switch)\r\ntotal walking time 1.19sec for 4998 trees and 8770308 nodes. (0.24ms per tree) (0.000135ms per node)\r\nheap based walker (with 2 switch)\r\ntotal walking time 1.11sec for 4998 trees and 8770308 nodes. (0.22ms per tree) (0.000126ms per node)\r\n\r\n\r\n\r\nrun 2 *******\r\nrun gc to clean memory\r\n\r\ntotal file size 69548977bytes, total parse time 15.63sec for 4998 trees (3.13ms per tree)\r\noriginal walker\r\ntotal walking time 0.93sec for 4998 trees and 8770308 nodes. (0.19ms per tree) (0.000105ms per node)\r\nheap based walker (with 1 switch)\r\ntotal walking time 1sec for 4998 trees and 8770308 nodes. (0.20ms per tree) (0.000114ms per node)\r\nrefactored walker (with 2 switch)\r\ntotal walking time 1.13sec for 4998 trees and 8770308 nodes. (0.23ms per tree) (0.000129ms per node)\r\nheap based walker (with 2 switch)\r\ntotal walking time 1.12sec for 4998 trees and 8770308 nodes. (0.22ms per tree) (0.000127ms per node)\r\n\r\n\r\n\r\nrun 3 *******\r\nrun gc to clean memory\r\n\r\ntotal file size 69548977bytes, total parse time 15.65sec for 4998 trees (3.13ms per tree)\r\noriginal walker\r\ntotal walking time 0.96sec for 4998 trees and 8770308 nodes. (0.19ms per tree) (0.000110ms per node)\r\nheap based walker (with 1 switch)\r\ntotal walking time 0.99sec for 4998 trees and 8770308 nodes. (0.20ms per tree) (0.000113ms per node)\r\nrefactored walker (with 2 switch)\r\ntotal walking time 1.13sec for 4998 trees and 8770308 nodes. (0.23ms per tree) (0.000129ms per node)\r\nheap based walker (with 2 switch)\r\ntotal walking time 1.1sec for 4998 trees and 8770308 nodes. (0.22ms per tree) (0.000125ms per node)\r\n\r\n\r\n\r\nrun 4 *******\r\nrun gc to clean memory\r\n\r\ntotal file size 69548977bytes, total parse time 15.29sec for 4998 trees (3.06ms per tree)\r\noriginal walker\r\ntotal walking time 0.97sec for 4998 trees and 8770308 nodes. (0.19ms per tree) (0.000111ms per node)\r\nheap based walker (with 1 switch)\r\ntotal walking time 0.99sec for 4998 trees and 8770308 nodes. (0.20ms per tree) (0.000113ms per node)\r\nrefactored walker (with 2 switch)\r\ntotal walking time 1.14sec for 4998 trees and 8770308 nodes. (0.23ms per tree) (0.000130ms per node)\r\nheap based walker (with 2 switch)\r\ntotal walking time 1.08sec for 4998 trees and 8770308 nodes. (0.22ms per tree) (0.000123ms per node)\r\n\r\n\r\n\r\nrun 5 *******\r\nrun gc to clean memory\r\n\r\ntotal file size 69548977bytes, total parse time 15.62sec for 4998 trees (3.13ms per tree)\r\noriginal walker\r\ntotal walking time 0.97sec for 4998 trees and 8770308 nodes. (0.19ms per tree) (0.000111ms per node)\r\nheap based walker (with 1 switch)\r\ntotal walking time 0.98sec for 4998 trees and 8770308 nodes. (0.20ms per tree) (0.000112ms per node)\r\nrefactored walker (with 2 switch)\r\ntotal walking time 1.12sec for 4998 trees and 8770308 nodes. (0.22ms per tree) (0.000128ms per node)\r\nheap based walker (with 2 switch)\r\ntotal walking time 1.1sec for 4998 trees and 8770308 nodes. (0.22ms per tree) (0.000125ms per node)\r\n```\r\n\r\none idea to remove second switch is putting childnodes to each parse node itself rather than having extra function to get those. only problem is since parse node is interface, we need to put it as field which consume memory.",
    "head_branch": "refactorWalker",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Split TreeWalker to Visitor and getChildNodes (#4133)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621121eac254a19ac2907f2",
    "number": 4132,
    "body": "Addresses https://github.com/microsoft/pylance-release/issues/3550\r\n\r\nThis change is providing a warning when the user has something like so:\r\n\r\n![image](https://user-images.githubusercontent.com/19672699/199835056-a34aaa7e-db1b-4809-9641-5e10cdc54d4c.png)\r\n\r\nWhere they have a python file in their workspace that is the same name as a stdlib module (we hit this constantly with people with notebooks). In the example above, `random.py` is in the workspace.\r\n\r\nWhen this occurs (and 'reportShadowedImport' is on), it will show something like so for any import of the offending module:\r\n\r\n![image](https://user-images.githubusercontent.com/19672699/199835260-85ad1dad-2db8-404f-8545-cc49b4a87dc7.png)\r\n\r\nAnd in the file, itself something like so:\r\n\r\n![image](https://user-images.githubusercontent.com/19672699/199835374-21af2a35-9938-42ba-9260-ac020b181393.png)\r\n\r\nDefault for this in pyright will be none.\r\n\r\nWhen this is ingested into pylance, the default will be a warning (as typechecking mode basic turns it on).\r\n",
    "head_branch": "rchiodo/shadow_stdlib_warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Show a warning when a stdlib module is being overridden (#4132)\n\n* Working for simple cases\r\n\r\n* Fix localize\r\n\r\n* Move logic to source mapper\r\n\r\n* Add support for the current file\r\n\r\n* Add rename file command\r\n\r\n* Fix comments\r\n\r\n* Closer to getting tests to work. Rename added\r\n\r\n* Rework how stdlib modules are found. Fix tests\r\n\r\n* Do the rename without bringing up a dialog\r\n\r\n* Fix tests and add docs\r\n\r\n* Fix tests on unix\r\n\r\n* Review feedback\r\n\r\n* Default shadowed imports to off\r\n\r\n* Missed spot for execEnv not needing to be passed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621121fac254a19ac2907f3",
    "number": 4125,
    "body": "Address https://github.com/microsoft/pylance-release/issues/3512\r\n\r\nWhen a dataclass has unknown ancestor types, we call `FunctionType.addDefaultParameters(initType)` to configure the `__init__` method with args and kwargs. But then we don't actually use the `__init__` method that we've set up.\r\n\r\nFixed to call `symbolTable.set` for `__init__` in this scenario.",
    "head_branch": "pylance3512",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix __init__ method of dataclass with unknown ancestor (#4125)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211220ac254a19ac2907f4",
    "number": 4122,
    "body": "Rollup of changes\r\n- Fix 100% CPU problem with large source bases\r\n- Support more tokens \r\n- Cache checking debug flag (hotpath item)",
    "head_branch": "pull-pylance-with-pyright-1.1.278",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.278 (#4122)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211221ac254a19ac2907f5",
    "number": 4105,
    "body": "issue https://github.com/microsoft/pylance-release/issues/3275\r\n\r\nhad knock on issues with keyword and position arg markers '*' '/'",
    "head_branch": "revert-signaturehelp-paramspec-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "revert signature help fix for paramspec (#4105)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211221ac254a19ac2907f6",
    "number": 4104,
    "body": "Address #4102\r\n\r\nEnhanced `narrowTypeForContainerType` to expand enums into their constituent literals in the negative (\"else\") narrowing case of `enumInstance in tupleOfEnums`. Previously it would return the enum type.",
    "head_branch": "issue4102",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Expand enums in negative narrowing of `x in y` (#4104)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211222ac254a19ac2907f7",
    "number": 4099,
    "body": "Fixed typo in documentation.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update type-concepts.md (#4099)\n\nFixed typo in documentation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211223ac254a19ac2907f8",
    "number": 4096,
    "body": "rollup of the following changes:\r\n- fixed source mapper perf issue\r\n- no longer mark \"import X as X\" or \"from M import X as X\" as unused import\r\n- consider privatePyTypedImport in indexing\r\n\r\n",
    "head_branch": "pull-pylance-with-pyright-1.1.277",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.277 (#4096)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211224ac254a19ac2907f9",
    "number": 4072,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211225ac254a19ac2907fa",
    "number": 4067,
    "body": "rollup of the following changes:\r\n1. improved doc formatter to handle cv2 style doc string better.\r\n\r\n",
    "head_branch": "pull-pylance-with-pyright-1.1.276",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.276 (#4067)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211226ac254a19ac2907fb",
    "number": 4041,
    "body": "rollup of the following changes:\r\n- improvement on source mapper to handle multiple pyi files for 1 py file case.\r\n- made cache manager not static object but instance object which lifetime is tied to LS.",
    "head_branch": "pull-pylance-20221021",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improved source mapper and made cache manager non static (#4041)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211226ac254a19ac2907fc",
    "number": 4029,
    "body": "A fix to add a missing parameter to isinstance as:\r\n - isinstance(val, Bar)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update type-concepts.md (#4029)\n\nA fix to add a missing parameter to isinstance as:\r\n - isinstance(val, Bar)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211227ac254a19ac2907fd",
    "number": 4020,
    "body": "The content is identical to [Pylance's](https://github.com/microsoft/pylance-release/blob/main/TROUBLESHOOTING.md#editable-install-modules-not-found) except that:\r\n1. I replaced the word Pylance with Pyright in a couple places.\r\n2. I changed the title from \"Editable install modules not found\" to just \"Editable installs\" since this isn't a troubleshooting doc.\r\n3. I updated the header depths (ex. ###) to match this file",
    "head_branch": "editableInstallDocs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Editable install docs (#4020)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211228ac254a19ac2907fe",
    "number": 4013,
    "body": "For https://github.com/microsoft/pylance-release/issues/3304\r\n\r\nAttributes on classes decorated with `dataclass_transform` and their base classes should not be treated as dataclasses. That is, attributes on those classes are not fields.\r\n\r\nFixed by not calling `applyDataClassDefaultBehaviors` for these classes.",
    "head_branch": "issue3304",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't treat classes decorated with `dataclass_transform` as dataclasses (#4013)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211229ac254a19ac2907ff",
    "number": 4012,
    "body": "Rollup of the following changes:\r\n1. better parser recovery when there are missing statements\r\n2. implicit future scope on chained files/cells in notebook",
    "head_branch": "pull-pylance-with-pyright-1.1.274",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.274 (#4012)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621122aac254a19ac290800",
    "number": 4008,
    "body": "Added a global \"cache manager\" to track heap usage for all type analyzer service instances. This prevents out-of-memory conditions when many roots are used in a multi-root workspace. This addresses bug https://github.com/microsoft/pylance-release/issues/3408#issuecomment-1266613951.",
    "head_branch": "cacheManager",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added a global \"cache manager\" (#4008)\n\n* Added a global \"cache manager\" to track heap usage for all type analyzer service instances. This prevents out-of-memory conditions when many roots are used in a multi-root workspace.\r\n\r\n* Incorporated PR feedback.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621122bac254a19ac290801",
    "number": 3992,
    "body": "- Upgrade Lerna to pull in parse-url with latest security fixes.",
    "head_branch": "pull-pylance-with-pyright-1.1.273",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update lerna (#3992)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621122cac254a19ac290802",
    "number": 3991,
    "body": "- Expose \"Dump token streams\", \"Dump parse tree\", \"Dump type info\", \"Dump cached type info\", and \"Dump code flow graph for node\" commands in development mode.",
    "head_branch": "pull-pylance-with-pyright-1.1.273",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.273 (#3991)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>\r\nCo-authored-by: Rich Chiodo <rchiodo@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621122dac254a19ac290803",
    "number": 3976,
    "body": "- Don't report diagnostics within IPython cell magics\r\n- Fix display of big integers",
    "head_branch": "pull-pylance-with-pyright-1.1.272",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.272 (#3976)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621122eac254a19ac290804",
    "number": 3975,
    "body": "Possible fix for #3974. When calculating the number of remaining positional args (`argsRemainingCount`) I think we shouldn't subtract one for a `VarArgList` that is after `positionalOnlyLimitIndex`.\r\n\r\nThere's a problem with verifying the new tests. Each of the two scenarios should produce one error, but the bug caused them to produce zero and two errors respectively. So both with and without my fix, the total number of errors is 2. Since the validation logic checks the total number of errors in the sample file, it can't tell if the bug has occurred. Should I remove one of the test cases?",
    "head_branch": "issue3974",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix argsRemainingCount calculation (#3975)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621122fac254a19ac290805",
    "number": 3973,
    "body": "This builds on my previous PR: https://github.com/microsoft/pyright/pull/3967\r\n\r\nAfter a bunch of discussion with the team, one of the things that's hard to reason about is the state of the TypeEvaluator as the checker runs. \r\n\r\nThis change logs the state of the TypeEvaluator before and after every call. \r\n\r\nThis is the first step in a plan to write a tool that parses the log and shows diffs so you can track down where state went wrong.\r\n\r\nThe idea is based on [redux logging](https://github.com/LogRocket/redux-logger#readme) where tracking down changes to state is done one 'action' at a time.",
    "head_branch": "rchiodo/state_logging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621122fac254a19ac290806",
    "number": 3972,
    "body": "Address #3971\r\n\r\nIf the last positional parameter of a function is an unbounded unpacked tuple and no argument is supplied, we currently report an error (\"Expected 1 more positional argument\"), even though it's legal to pass 0 arguments for that tuple.\r\n\r\n```python\r\ndef func(x: Callable[[Unpack[tuple[int, ...]]], None]):\r\n    x() # Expected 1 more positional argument\r\n```\r\n\r\nIf there's another parameter after the tuple, `matchFunctionArgumentsToParameters` works properly. But if the tuple is the last parameter, we exit the loop that processes positional arguments without running the `ParameterCategory.VarArgList` related logic for the tuple. This means that `paramIndex` doesn't get incremented and thus we report the positional argument count error.\r\n\r\nFixed by checking for this case after the loop and incrementing `paramIndex`.\r\n\r\nI considered trying to go around the loop again for this case, but doing that safely required a lot of additional array length checks. This seemed cleaner.\r\n\r\nI noticed that in the following scenario we say, \"Expected 2 more positional arguments\". Would you agree that it should say \"Expected 1 more...\"? Wanted to get feedback on my approach here before looking into that.\r\n\r\n```python\r\ndef func(x: Callable[[Unpack[tuple[int, ...]], int], None]):\r\n    x() # Expected 2 more positional arguments\r\n```",
    "head_branch": "issue3971",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Increment paramIndex if last parameter is an unfilled unbounded tuple (#3972)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211231ac254a19ac290807",
    "number": 3967,
    "body": "This simplifies the `createTypeEvaluatorWithTracker` to be more generic. \r\n\r\nWrapping of functions is done with a function 'factory'. This has the benefit of:\r\n- Args are just passed through. No special casing for args anymore\r\n- Function is set one time, so no more lambda that gets called even if no logging\r\n\r\nPerf is about the same with the change. There should be more functions being timed now (as it's timing every function instead of just the ones that were specified in the table before).\r\n\r\nExample:\r\n\r\nTest Suites: 45 passed, 45 total\r\nTests:       1852 passed, 1852 total\r\nSnapshots:   0 total\r\nTime:        796.917 s\r\nRan all test suites.\r\n\r\nWithout:\r\n\r\nTest Suites: 44 passed, 44 total\r\nTests:       1848 passed, 1848 total\r\nSnapshots:   0 total\r\nTime:        800.37 s\r\n",
    "head_branch": "rchiodo/tracker_no_lambda",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplify `createTypeEvaluatorWithTracker` to use a factory function (#3967)\n\n* Testing idea for generating type eval docs\r\n\r\n* Rework withTracker to use a function factory instead of lambdas\r\n\r\n* Make sure time is tracked when not logging\r\n\r\n* Remove MD generator idea, not relevant\r\n\r\n* Put back package.json\r\n\r\n* Remove unnecessary comment\r\n\r\n* Review feedback\r\n\r\n* Remove unnecessary default\r\n\r\n* Ensure filePaths are either strings or AbsoluteModuleDescriptors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211231ac254a19ac290808",
    "number": 3965,
    "body": "Fix https://github.com/microsoft/pyright/issues/3962\r\n\r\nRevert `service.ts` change that caused a regression where users with `pyproject.toml` files didn't get the default include and exclude file specs.",
    "head_branch": "issue3962",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use default includes/excludes when user has pyproject.toml (#3965)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211232ac254a19ac290809",
    "number": 3946,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.271",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.271 (#3946)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211233ac254a19ac29080a",
    "number": 3920,
    "body": "- Update LSP to latest versions\r\n- Added VS Code settings for include, exclude, and ignore paths: `python.analysis.include`, `python.analysis.exclude`, `python.analysis.ignore`.\r\n- Made \"remove all unused imports\" only remove top level imports, and made individual \"remove unused import\" command remove leading whitespace\r\n- Fixed bug with handling ipython magics that appear after a dedent.",
    "head_branch": "pull-pylance-with-pyright-1.1.270",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.270 (#3920)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211234ac254a19ac29080b",
    "number": 3903,
    "body": "This description is modified from docs/configuration.md\r\nhttps://github.com/microsoft/pyright/blob/bab8e4e0123c2793adc85df4c263c89e8b436b0c/docs/configuration.md#L159\r\nThe original one seems to be copied from reportSelfClsParameterName\r\nhttps://github.com/microsoft/pyright/blob/e077a8a1d01e8bff884124e202015db23258ade7/packages/vscode-pyright/package.json#L655-L665",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: fix wrong description of reportUndefinedVariable (#3903)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211235ac254a19ac29080c",
    "number": 3887,
    "body": "rollup of the following changes:\r\n- Use workspace.isInitialized to block other LSP requests for cells\r\n- Allow top-level async for and async with in notebooks\r\n- make sure we initialize default root folders even when workspaceFolder capability is not supported by client.\r\n- Fix ignore of LSP notebook files",
    "head_branch": "pull-pylance-with-pyright-1.1.269",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.269 (#3887)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211236ac254a19ac29080d",
    "number": 3885,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.269",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211236ac254a19ac29080e",
    "number": 3838,
    "body": "Pull Pylance: rollup of the following changes:\r\n\r\n- initial draft of running LS in unit test",
    "head_branch": "pull-pylance-with-pyright-1.1.267",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.267 (#3838)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211237ac254a19ac29080f",
    "number": 3816,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.266",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.266 (#3816)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211238ac254a19ac290810",
    "number": 3810,
    "body": "Roll up changes from pylance:\r\n- improvement on virtual workspace handling by letting workspace be able to point to a file rather than folder only.\r\n- improvement on renaming on virtual workspace by making sure rename doesn't touch file outside of virtual workspace.\r\n- improvement on doc string markdown handling.",
    "head_branch": "pull-pylance-with-pyright-1.1.266",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.266 (#3810)\n\nCo-authored-by:\r\nCo-authored-by: Bill Schnurr bschnurr@microsoft.com\r\nCo-authored-by: HeeJae Chang hechang@microsoft.com\r\nCo-authored-by: Erik De Bonte erikd@microsoft.com"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211239ac254a19ac290811",
    "number": 3783,
    "body": "pull pylance, Rollup of:\r\n\r\n* Making auto/add import to use new import format options\r\n* Dependency updates.\r\n",
    "head_branch": "pull-pylance-with-pyright-1.1.265",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.265 (#3783)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621123aac254a19ac290812",
    "number": 3755,
    "body": "Rollup of the following changes:\r\n1. updated dependencies\r\n2. updated bunch of helper methods and utils.\r\n3. updated test helper methods.",
    "head_branch": "pull-pylance-with-pyright-1.1.264",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.264 (#3755)\n\nCo-authored-by:\r\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621123bac254a19ac290813",
    "number": 3726,
    "body": "rollup of the following changes:\r\n    1. each workspace now can have its own file system so it can have local fs or other type of fs such as mem-fs\r\n    2. dependencies are updated\r\n    3. some test helper updated\r\n",
    "head_branch": "pull-pylance-with-pyright-1.1.262",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.262 (#3726)\n\nCo-authored-by:\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621123cac254a19ac290814",
    "number": 3724,
    "body": "Bumps [terser](https://github.com/terser/terser) from 5.10.0 to 5.14.2.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/terser/terser/blob/master/CHANGELOG.md\">terser's changelog</a>.</em></p>\n<blockquote>\n<h2>v5.14.2</h2>\n<ul>\n<li>Security fix for RegExps that should not be evaluated (regexp DDOS)</li>\n<li>Source maps improvements (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1211\">#1211</a>)</li>\n<li>Performance improvements in long property access evaluation (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1213\">#1213</a>)</li>\n</ul>\n<h2>v5.14.1</h2>\n<ul>\n<li>keep_numbers option added to TypeScript defs (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1208\">#1208</a>)</li>\n<li>Fixed parsing of nested template strings (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1204\">#1204</a>)</li>\n</ul>\n<h2>v5.14.0</h2>\n<ul>\n<li>Switched to <code>@​jridgewell/source-map</code> for sourcemap generation (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1190\">#1190</a>, <a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1181\">#1181</a>)</li>\n<li>Fixed source maps with non-terminated segments (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1106\">#1106</a>)</li>\n<li>Enabled typescript types to be imported from the package (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1194\">#1194</a>)</li>\n<li>Extra DOM props have been added (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1191\">#1191</a>)</li>\n<li>Delete the AST while generating code, as a means to save RAM</li>\n</ul>\n<h2>v5.13.1</h2>\n<ul>\n<li>Removed self-assignments (<code>varname=varname</code>) (closes <a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1081\">#1081</a>)</li>\n<li>Separated inlining code (for inlining things into references, or removing IIFEs)</li>\n<li>Allow multiple identifiers with the same name in <code>var</code> destructuring (eg <code>var { a, a } = x</code>) (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1176\">#1176</a>)</li>\n</ul>\n<h2>v5.13.0</h2>\n<ul>\n<li>All calls to eval() were removed (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1171\">#1171</a>, <a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1184\">#1184</a>)</li>\n<li><code>source-map</code> was updated to 0.8.0-beta.0 (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1164\">#1164</a>)</li>\n<li>NavigatorUAData was added to domprops to avoid property mangling (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1166\">#1166</a>)</li>\n</ul>\n<h2>v5.12.1</h2>\n<ul>\n<li>Fixed an issue with function definitions inside blocks (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1155\">#1155</a>)</li>\n<li>Fixed parens of <code>new</code> in some situations (closes <a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1159\">#1159</a>)</li>\n</ul>\n<h2>v5.12.0</h2>\n<ul>\n<li><code>TERSER_DEBUG_DIR</code> environment variable</li>\n<li><a href=\"https://github.com/copyright\"><code>@​copyright</code></a> comments are now preserved with the comments=&quot;some&quot; option (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1153\">#1153</a>)</li>\n</ul>\n<h2>v5.11.0</h2>\n<ul>\n<li>Unicode code point escapes (<code>\\u{abcde}</code>) are not emitted inside RegExp literals anymore (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1147\">#1147</a>)</li>\n<li>acorn is now a regular dependency</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/terser/terser/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=terser&package-manager=npm_and_yarn&previous-version=5.10.0&new-version=5.14.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/vscode-pyright/terser-5.14.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump terser from 5.10.0 to 5.14.2 in /packages/vscode-pyright (#3724)\n\nBumps [terser](https://github.com/terser/terser) from 5.10.0 to 5.14.2.\r\n- [Release notes](https://github.com/terser/terser/releases)\r\n- [Changelog](https://github.com/terser/terser/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/terser/terser/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: terser\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621123dac254a19ac290815",
    "number": 3723,
    "body": "Bumps [terser](https://github.com/terser/terser) from 5.10.0 to 5.14.2.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/terser/terser/blob/master/CHANGELOG.md\">terser's changelog</a>.</em></p>\n<blockquote>\n<h2>v5.14.2</h2>\n<ul>\n<li>Security fix for RegExps that should not be evaluated (regexp DDOS)</li>\n<li>Source maps improvements (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1211\">#1211</a>)</li>\n<li>Performance improvements in long property access evaluation (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1213\">#1213</a>)</li>\n</ul>\n<h2>v5.14.1</h2>\n<ul>\n<li>keep_numbers option added to TypeScript defs (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1208\">#1208</a>)</li>\n<li>Fixed parsing of nested template strings (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1204\">#1204</a>)</li>\n</ul>\n<h2>v5.14.0</h2>\n<ul>\n<li>Switched to <code>@​jridgewell/source-map</code> for sourcemap generation (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1190\">#1190</a>, <a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1181\">#1181</a>)</li>\n<li>Fixed source maps with non-terminated segments (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1106\">#1106</a>)</li>\n<li>Enabled typescript types to be imported from the package (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1194\">#1194</a>)</li>\n<li>Extra DOM props have been added (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1191\">#1191</a>)</li>\n<li>Delete the AST while generating code, as a means to save RAM</li>\n</ul>\n<h2>v5.13.1</h2>\n<ul>\n<li>Removed self-assignments (<code>varname=varname</code>) (closes <a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1081\">#1081</a>)</li>\n<li>Separated inlining code (for inlining things into references, or removing IIFEs)</li>\n<li>Allow multiple identifiers with the same name in <code>var</code> destructuring (eg <code>var { a, a } = x</code>) (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1176\">#1176</a>)</li>\n</ul>\n<h2>v5.13.0</h2>\n<ul>\n<li>All calls to eval() were removed (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1171\">#1171</a>, <a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1184\">#1184</a>)</li>\n<li><code>source-map</code> was updated to 0.8.0-beta.0 (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1164\">#1164</a>)</li>\n<li>NavigatorUAData was added to domprops to avoid property mangling (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1166\">#1166</a>)</li>\n</ul>\n<h2>v5.12.1</h2>\n<ul>\n<li>Fixed an issue with function definitions inside blocks (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1155\">#1155</a>)</li>\n<li>Fixed parens of <code>new</code> in some situations (closes <a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1159\">#1159</a>)</li>\n</ul>\n<h2>v5.12.0</h2>\n<ul>\n<li><code>TERSER_DEBUG_DIR</code> environment variable</li>\n<li><a href=\"https://github.com/copyright\"><code>@​copyright</code></a> comments are now preserved with the comments=&quot;some&quot; option (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1153\">#1153</a>)</li>\n</ul>\n<h2>v5.11.0</h2>\n<ul>\n<li>Unicode code point escapes (<code>\\u{abcde}</code>) are not emitted inside RegExp literals anymore (<a href=\"https://github-redirect.dependabot.com/terser/terser/issues/1147\">#1147</a>)</li>\n<li>acorn is now a regular dependency</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/terser/terser/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=terser&package-manager=npm_and_yarn&previous-version=5.10.0&new-version=5.14.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/pyright/terser-5.14.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump terser from 5.10.0 to 5.14.2 in /packages/pyright (#3723)\n\nBumps [terser](https://github.com/terser/terser) from 5.10.0 to 5.14.2.\r\n- [Release notes](https://github.com/terser/terser/releases)\r\n- [Changelog](https://github.com/terser/terser/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/terser/terser/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: terser\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621123eac254a19ac290816",
    "number": 3692,
    "body": "This PR includes\r\n\r\n1. fixed a bug in parser where it creates error node with overlapped spans with another node.\r\n2. fixed a bug in completion where it sometimes loses completion with certain member name \r\nex) symbol.is <= \"is\" is keyword, so user can't write something like is_valid since we lose completion at \"is\" since we think it is keyword.\r\n3. make sure py.typed library shadow bundled partial stubs (only bundled one, user installed partial stubs work as expected)\r\n4. added support for extra commit char when enabled.\r\n5. added support for disabling library file watching to workaround inotify limit issue on linux (hidden option)",
    "head_branch": "pull-pylance-with-pyright-1.1.260",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.260 (#3692)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621123eac254a19ac290817",
    "number": 3686,
    "body": null,
    "head_branch": "update-packages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "npm audit fix (#3686)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621123fac254a19ac290818",
    "number": 3667,
    "body": "changes included.\r\n\r\n1. Fixed nested call signature help bug\r\n2. Some helper code added\r\n3. Some checker changes on ipython mode.",
    "head_branch": "pull-pylance-2022712",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixed nested call signature help bug (#3667)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211240ac254a19ac290819",
    "number": 3661,
    "body": "Bumps [parse-url](https://github.com/IonicaBizau/parse-url) from 6.0.0 to 6.0.2.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/IonicaBizau/parse-url/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=parse-url&package-manager=npm_and_yarn&previous-version=6.0.0&new-version=6.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/parse-url-6.0.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump parse-url from 6.0.0 to 6.0.2 (#3661)\n\nBumps [parse-url](https://github.com/IonicaBizau/parse-url) from 6.0.0 to 6.0.2.\r\n- [Release notes](https://github.com/IonicaBizau/parse-url/releases)\r\n- [Commits](https://github.com/IonicaBizau/parse-url/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: parse-url\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211241ac254a19ac29081a",
    "number": 3647,
    "body": "Remove `allCommitCharacters` from `completionProvider`. This is the fix for https://github.com/microsoft/pylance-release/issues/2987.",
    "head_branch": "pull-pylance-2022711",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pull Pylance 2022.7.11 (#3647)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211242ac254a19ac29081b",
    "number": 3642,
    "body": "we should put it back once we make sure we only auto show completion after \".\" when it is for member access or relative module\r\n\r\notherwise, typing dot shouldn't bring up completion. ",
    "head_branch": "removeDotCommitChar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "don't use \".\" as one of commit char (#3642)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211243ac254a19ac29081c",
    "number": 3638,
    "body": "- update dependences\r\n- remove 'undefined' from completions.\r\n- adding InlayHint types to fourslash types",
    "head_branch": "pull-pylance-2022631-two",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update dependencies (#3638)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211244ac254a19ac29081d",
    "number": 3637,
    "body": "- update dependences\r\n- remove 'undefined' from completions.\r\n- adding InlayHint types to fourslash types",
    "head_branch": "pull-pylance-2022631",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211245ac254a19ac29081e",
    "number": 3618,
    "body": "... so that the anonymous variable can still be re-assigned with any values even if it's declared as a class or function in the same scope.",
    "head_branch": "no_declared_types_for_anonymous_classes_or_functions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211246ac254a19ac29081f",
    "number": 3606,
    "body": "pull from pylance, rollup of:\r\n- Ensure that updateChaninedFilePath doesn't create cycles\r\n- support doc string for defaultdic and deque in collections\r\n- dedup file watchers\r\n- refactor AnalyzerServer params into AnalyzerServiceOptions",
    "head_branch": "pull-pylance-with-pyright-1.1.255",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.255 (#3606)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211247ac254a19ac290820",
    "number": 3601,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix typo (#3601)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211248ac254a19ac290821",
    "number": 3590,
    "body": "**_Added Pull request template_**  👍 ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211248ac254a19ac290822",
    "number": 3584,
    "body": "Fixes https://github.com/microsoft/pylance-release/issues/2150\r\n\r\nUpdated the auto-import symbol searching logic to only filter out import aliases from workspace files (`isUserCode`), not from libraries.\r\n\r\nI figured it was better to check this into Pyright directly since it was reported as a Pyright issue and it will ship sooner this way.",
    "head_branch": "issue2150_autoImportDagster",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Auto-import should include import aliases from libraries (#3584)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211249ac254a19ac290823",
    "number": 3579,
    "body": "remove previous connection wrapper for browser, now we dedup packages instead",
    "head_branch": "pull-pylance-202261",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove preivous connection wrapper for browser, now we dedup packages instead (#3579)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621124aac254a19ac290824",
    "number": 3578,
    "body": null,
    "head_branch": "fix-missing-getConflictedFile",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621124bac254a19ac290825",
    "number": 3568,
    "body": "Partial stubs should always overlay the original package even if that package is marked \"py.typed\".",
    "head_branch": "erictr/partial_stub_override",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Changed the handling of partial stub packages to conform with PEP 561. They should always overlay the original package even if that package is marked \"py.typed\". (#3568)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621124cac254a19ac290826",
    "number": 3556,
    "body": "- Show module paths in auto import dialog\r\n- Upgrade LSP to latest\r\n- Fix file watcher to treat ZIPs as files instead of directories\r\n- Fix cancellation errors in vscode.dev scenarios\r\n- Use windows-latest for Windows-based test runs to maximize machine availability\r\n- Fix webpack watch mode (i.e. fast incremental builds)",
    "head_branch": "pull-pylance-with-pyright-1.1.253",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.253 (#3556)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621124dac254a19ac290827",
    "number": 3549,
    "body": "… annotation using the 'Callable' keyword.\r\n\r\nex:\r\n(....) -> int\r\nbecomes\r\nCallable[..., int]",
    "head_branch": "add-print-callable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621124eac254a19ac290828",
    "number": 3508,
    "body": "Changes to support LSP notebooks in Pylance:\r\n\r\n- Allow chained file path to be changed\r\n- Allow derived servers to provide alternate UriParser implementations\r\n- Upgrade to @types/vscode 1.67.0",
    "head_branch": "pull-pylance-with-pyright-1.1.249",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.249 (#3508)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621124fac254a19ac290829",
    "number": 3477,
    "body": "Please accept this contribution adding the standard Microsoft SECURITY.MD :lock: file to help the community understand the security policy and how to safely report security issues. GitHub uses the presence of this file to light-up security reminders and a link to the file. This pull request commits the latest official SECURITY.MD file from https://github.com/microsoft/repo-templates/blob/main/shared/SECURITY.md.\n\nMicrosoft teams can [learn more about this effort and share feedback](https://docs.opensource.microsoft.com/releasing/maintain/templates/) within the open source guidance available internally.\n",
    "head_branch": "users/GitHubPolicyService/33db2434-7992-48c2-9355-7279ed5f18e5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Microsoft mandatory file (#3477)\n\nCo-authored-by: microsoft-github-policy-service[bot] <77245923+microsoft-github-policy-service[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211250ac254a19ac29082a",
    "number": 3474,
    "body": "Update to stable LSP release (8.0.1 / 3.17.1) with fix for LanguageClient restart race condition",
    "head_branch": "pull-pylance-with-pyright-1.1.247",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.247 (#3474)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211251ac254a19ac29082b",
    "number": 3434,
    "body": "pull from Pylance\r\n\r\nUpdate completions to handle fstring better with string literal items\r\n",
    "head_branch": "pull-pylance-with-pyright-1.1.244",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.244 (#3434)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211252ac254a19ac29082c",
    "number": 3425,
    "body": "Contains fix to show class variables from parent class in completion lists -- https://github.com/microsoft/pylance-release/issues/2059",
    "head_branch": "pull-pylance-with-pyright-1.1.244",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.244 (#3425)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211252ac254a19ac29082d",
    "number": 3410,
    "body": null,
    "head_branch": "__",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211253ac254a19ac29082e",
    "number": 3403,
    "body": "Eglot is an alternative to lsp-mode that is lightweight and uses more Emacs inbuild functionatlity than lsp-mode.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add \"eglot\" to the Emacs section (#3403)\n\nEglot is an alternative to lsp-mode that is lightweight and uses more Emacs inbuild functionatlity than lsp-mode."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211254ac254a19ac29082f",
    "number": 3392,
    "body": "Some dependencies (like the LSP libs) have already dropped node 12 support by emitting code with new syntax. pyright still supports node 12, so run all input JS source through esbuild via `esbuild-loader` to transform the unsupported syntax.\r\n\r\nThis has no noticeable impact on build times; esbuild is really fast. (It'd acutally be worthwhile to swap out the default terser minifier with the one in `esbuild-loader` too, but that's another PR.)",
    "head_branch": "esbuild-js",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Preprocess JS files with esbuild to support Node 12 (#3392)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211255ac254a19ac290830",
    "number": 3362,
    "body": "The new version of vscode-languageclient (8.0.0-next.14) depends on VS Code 1.66+, so to be safe we're matching that dependency on vscode-pyright since it depends on vscode-languageclient.",
    "head_branch": "engine1.66",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Increase vscode engine to 1.66.0+ (#3362)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211256ac254a19ac290831",
    "number": 3360,
    "body": "rollup of the following changes:\r\n    improved source mapper to handle builtin modules such as _io or _collections and updated LSP version.",
    "head_branch": "pull-pylance-with-pyright-1.1.239",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.239 (#3360)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <Erik.DeBonte@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211257ac254a19ac290832",
    "number": 3357,
    "body": "I will summarize in commit msg when ready -- solved a lot of separate problems.",
    "head_branch": "builtins",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211258ac254a19ac290833",
    "number": 3349,
    "body": "Previous change around file watcher added isTracked check so that we don't refresh service just because py file under project root is changed. isTracked will make sure the py file changed is actually part of the source files.\r\n\r\nBut the fix found a bug where some of the paths that are used under file watcher are not normalized. because of that, isTracked returned some files as not part of the source files breaking file watcher in some cases.\r\n\r\nNow, we make sure all paths involved in the file watcher are all normalized.",
    "head_branch": "fixFileWatcherBug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add i to glob pattern regex for case insensitive file system. (#3349)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211259ac254a19ac290834",
    "number": 3348,
    "body": "## Screenshot\r\n\r\n![union-typeddict](https://user-images.githubusercontent.com/23125036/163497494-bfac378f-fdf4-4cc9-a05f-7ae9c08145b2.jpeg)\r\n\r\n",
    "head_branch": "feat/typeddict-union-hover",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for showing key on hover for unions of TypedDicts (#3348)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621125aac254a19ac290835",
    "number": 3339,
    "body": "rollup of the following changes:\r\n1. support renaming overridden functions together\r\n2. put named arguments higher on completion with exact match",
    "head_branch": "pull-pylance-with-pyright-1.1.237",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "pull-pylance-with-pyright-1.1.237 (#3339)\n\n    Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    Co-authored-by: Erik De Bonte <Erik.DeBonte@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621125bac254a19ac290836",
    "number": 3298,
    "body": "rollup of:\r\n\r\n- rely on vscode's file watcher for all folders. remove non-workspace paths node file watcher\r\n- fix normalize path and slash for LSP\r\n- fix missing docstrings in Pillow due to improper typeshed typeshedFallback stub folder path parsing",
    "head_branch": "pull-pylance-with-pyright-1.1.235",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.235 (#3298)\n\n 1. Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n 2. Co-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621125cac254a19ac290837",
    "number": 3289,
    "body": "I added support for this to both \"Go to Definition\" and \"Go to Type Definition\" as in my opinion they are interchangeable in this case and supporting both cases provides the best UX.\r\n\r\n## Demo\r\n\r\nhttps://user-images.githubusercontent.com/23125036/161362858-782fa9e5-59db-4800-9dc5-339f84fa567f.mp4\r\n",
    "head_branch": "feat/typeddict-goto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for going to definition for TypedDict keys (#3289)\n\n* Add support for going to definition for TypedDict keys\r\n\r\n* Use lookUpObjectMember for resolving symbols\r\n\r\n* Remove unused imports\r\n\r\n* Move declarations resolving to the type evaluator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621125cac254a19ac290838",
    "number": 3286,
    "body": "closes https://github.com/microsoft/pylance-release/issues/2508\r\n\r\nScreenshots:\r\n\r\nWithout docstring:\r\n![2bc604757abb4e39a1c5e91dd48c6900](https://user-images.githubusercontent.com/23125036/161211840-ce3bbaef-f16c-46b7-a80f-93dce3e5ba02.jpg)\r\n\r\nWith docstring:\r\n![94bcde8ffcd34cb78c5dfb9213996106](https://user-images.githubusercontent.com/23125036/161211725-7fd2ea0e-08bc-468f-9424-c538c1bc334f.jpg)",
    "head_branch": "feat/typeddict-key-hover",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Show TypedDict key type and docstring on hover (#3286)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621125dac254a19ac290839",
    "number": 3285,
    "body": "…nfiguration` LSP command.",
    "head_branch": "scopeUri",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621125eac254a19ac29083a",
    "number": 3276,
    "body": "rollup of the following changes:\r\n\r\n- Adding v8 shim for getHeapStatistics()\r\n- added special handling for var delc in completion\r\n- renameSymbol now handles import rename \r\n- fix for conda temp.txt causing re-analysis\r\n- fix for rename namespace folder and added a test",
    "head_branch": "pull-pylance-with-pyright-1.1.234",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.234 (#3276)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Erik De Bonte <Erik.DeBonte@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621125fac254a19ac29083b",
    "number": 3273,
    "body": "…ne` patterns where `b` is a member variable that distinguishes two different classes.",
    "head_branch": "descriminatedNone",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added support for type guard based on `a.b is None` or `a.b is not None` patterns where `b` is a member variable that distinguishes two different classes. (#3273)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211260ac254a19ac29083c",
    "number": 3271,
    "body": "Unions of NamedTuples were not being narrowed when comparing fields against `None` with the `is` operator. This change allows NamedTuples to narrow Unions with both numerical indexing and attribute access. There are a few examples of the new behavior in the two test samples.\r\n\r\nAttribute narrowing was added through a new `narrowTypeForDiscriminatedFieldNoneComparison` function. This code is based on both the `narrowTypeForDiscriminatedFieldComparison` and `narrowTupleTypeForIsNone` functions. There was some commonality with the narrowing for `X.Y is <literal>` but I kept the functions separate because the `None` specific logic cluttered the function. Tests for this addition are in [typeNarrowingIsNoneNamedTuple1.py](https://github.com/microsoft/pyright/pull/3271/files#diff-2a1199dba8a8bf5992864c66bcd22cab47e502c5204e2e2ba57be13dc36736db)\r\n\r\nIndex narrowing was added by modifying `narrowTupleTypeForIsNone` to support not only `Tuples` but also subclasses. Tests for this addition are in [typeNarrowingIsNoneNamedTuple2.py](https://github.com/microsoft/pyright/pull/3271/files#diff-0b982abad7e4d103fd0776f7daba84d2e879999f526a648ba5d4ff226c93ab7b)",
    "head_branch": "kevin.coffey/namedtuple-type-narrowing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for type narrowing of NamedTuple fields with \"is None\" (#3271)\n\n* Add support for type narrowing of NamedTuple fields with is None.\r\n\r\n* Add description for `x.y is None` narrowing\r\n\r\nFix capitalization for filename of sample in test."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211261ac254a19ac29083d",
    "number": 3266,
    "body": null,
    "head_branch": "m-novikov-fix-cache-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211262ac254a19ac29083e",
    "number": 3243,
    "body": "rollup of:\r\n - Made reportMissingSourceModule work for all different import cases.\r\n- fixed using wrong property over any. and made sure we use property off strong type. \r\n- added prepareRename support. this will let users know rename is not allowed rather than show \"no results\" \r\n\r\n\r\n\r\n",
    "head_branch": "pull-pylance-with-pyright-1.1.232",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.232 (#3243)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211263ac254a19ac29083f",
    "number": 3213,
    "body": null,
    "head_branch": "local_function_imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211264ac254a19ac290840",
    "number": 3205,
    "body": "- update vsce \r\n- Let rename on excluded files under project root work as single file mode\r\n- fixed test failure. it worked before since marked all test file as tracked which will create sourcefile internally regardless whether it is actually used or not.\r\n\r\n\r\nAutomated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.230",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.230 (#3205)\n\n Co-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211265ac254a19ac290841",
    "number": 3195,
    "body": "When building pyright-internal with `tsc --emitDeclarationOnly --declaration`, it gives an error:\r\n\r\n```\r\nsrc/analyzer/dataClasses.ts:68:16 - error TS4078: Parameter 'evaluator' of exported function has or is using private name 'TypeEvaluator'.\r\n\r\n68     evaluator: TypeEvaluator,\r\n                  ~~~~~~~~~~~~~\r\n```\r\n\r\nThis is caused by a duplicate definition of `TypeEvaluator`. The definition on L119 is not exported and tsc seems to confuse it with the exported parameter on line 68, which is exported and references `TypeEvalulator` defined in typeEvaluatorTypes.ts L279.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211265ac254a19ac290842",
    "number": 3165,
    "body": "Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action",
    "head_branch": "pull-pylance-with-pyright-1.1.228",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[PylanceBot] Pull Pylance with Pyright 1.1.228 (#3165)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211266ac254a19ac290843",
    "number": 3139,
    "body": "Bumps various things, with Dependabot commit message taken from [jest](https://github.com/facebook/jest) from 27.4.7 to 27.5.1.\r\n<details>\r\n<summary>Release notes</summary>\r\n<p><em>Sourced from <a href=\"https://github.com/facebook/jest/releases\">jest's releases</a>.</em></p>\r\n<blockquote>\r\n<h2>v27.5.1</h2>\r\n<h2>Features</h2>\r\n<ul>\r\n<li><code>[jest-config]</code> Support comments in JSON config file (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12316\">#12316</a>)</li>\r\n<li><code>[pretty-format]</code> Expose <code>ConvertAnsi</code> plugin (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12308\">#12308</a>)</li>\r\n</ul>\r\n<h2>Fixes</h2>\r\n<ul>\r\n<li><code>[expect]</code> Add type definitions for asymmetric <code>closeTo</code> matcher (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12304\">#12304</a>)</li>\r\n<li><code>[jest-cli]</code> Load binary via exported API (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12315\">#12315</a>)</li>\r\n<li><code>[jest-config]</code> Replace <code>jsonlint</code> with <code>parse-json</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12316\">#12316</a>)</li>\r\n<li><code>[jest-repl]</code> Make module importable (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12311\">#12311</a> &amp; <a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12315\">#12315</a>)</li>\r\n</ul>\r\n<h2>Chore &amp; Maintenance</h2>\r\n<ul>\r\n<li><code>[*]</code> Avoid anonymous default exports (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12313\">#12313</a>)</li>\r\n</ul>\r\n<h2>New Contributors</h2>\r\n<ul>\r\n<li><a href=\"https://github.com/zoltan-boros\"><code>@​zoltan-boros</code></a> made their first contribution in <a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12206\">facebook/jest#12206</a></li>\r\n</ul>\r\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/facebook/jest/compare/v27.5.0...v27.5.1\">https://github.com/facebook/jest/compare/v27.5.0...v27.5.1</a></p>\r\n<h2>v27.5.0</h2>\r\n<h2>Features</h2>\r\n<ul>\r\n<li><code>[expect]</code> Add asymmetric matcher <code>expect.closeTo</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12243\">#12243</a>)</li>\r\n<li><code>[jest-mock]</code> Added <code>mockFn.mock.lastCall</code> to retrieve last argument (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12285\">#12285</a>)</li>\r\n</ul>\r\n<h2>Fixes</h2>\r\n<ul>\r\n<li><code>[expect]</code> Add a fix for <code>.toHaveProperty('')</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12251\">#12251</a>)</li>\r\n<li><code>[jest-each, @jest/globals]</code> Allow passing <code>ReadonlyArray</code> type of a table to <code>describe.each</code> and <code>test.each</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12297\">#12297</a>)</li>\r\n<li><code>[@jest/globals]</code> Add missing <code>options</code> argument to <code>jest.doMock</code> typing (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12292\">#12292</a>)</li>\r\n<li><code>[jest-environment-node]</code> Add <code>atob</code> and <code>btoa</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12269\">#12269</a>)</li>\r\n<li><code>[jest-matcher-utils]</code> Correct diff for expected asymmetric matchers (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12264\">#12264</a>)</li>\r\n<li><code>[jest-message-util]</code> Fix <code>.getTopFrame()</code> (and <code>toMatchInlineSnapshot()</code>) with <code>mjs</code> files (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12277\">#12277</a>)</li>\r\n</ul>\r\n<h2>Chore &amp; Maintenance</h2>\r\n<ul>\r\n<li><code>[*]</code> Update <code>graceful-fs</code> to <code>^4.2.9</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/11749\">#11749</a>)</li>\r\n</ul>\r\n<h2>Performance</h2>\r\n<ul>\r\n<li><code>[jest-resolve]</code> perf: skip error creation on not found <code>stat</code> calls (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/11749\">#11749</a>)</li>\r\n</ul>\r\n<h2>New Contributors</h2>\r\n<ul>\r\n<li><a href=\"https://github.com/markjm\"><code>@​markjm</code></a> made their first contribution in <a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/11749\">facebook/jest#11749</a></li>\r\n<li><a href=\"https://github.com/benjamingr\"><code>@​benjamingr</code></a> made their first contribution in <a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12266\">facebook/jest#12266</a></li>\r\n<li><a href=\"https://github.com/aduh95\"><code>@​aduh95</code></a> made their first contribution in <a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12269\">facebook/jest#12269</a></li>\r\n<li><a href=\"https://github.com/piranna\"><code>@​piranna</code></a> made their first contribution in <a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12272\">facebook/jest#12272</a></li>\r\n</ul>\r\n<!-- raw HTML omitted -->\r\n</blockquote>\r\n<p>... (truncated)</p>\r\n</details>\r\n<details>\r\n<summary>Changelog</summary>\r\n<p><em>Sourced from <a href=\"https://github.com/facebook/jest/blob/main/CHANGELOG.md\">jest's changelog</a>.</em></p>\r\n<blockquote>\r\n<h2>27.5.1</h2>\r\n<h3>Features</h3>\r\n<ul>\r\n<li><code>[jest-config]</code> Support comments in JSON config file (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12316\">#12316</a>)</li>\r\n<li><code>[pretty-format]</code> Expose <code>ConvertAnsi</code> plugin (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12308\">#12308</a>)</li>\r\n</ul>\r\n<h3>Fixes</h3>\r\n<ul>\r\n<li><code>[expect]</code> Add type definitions for asymmetric <code>closeTo</code> matcher (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12304\">#12304</a>)</li>\r\n<li><code>[jest-cli]</code> Load binary via exported API (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12315\">#12315</a>)</li>\r\n<li><code>[jest-config]</code> Replace <code>jsonlint</code> with <code>parse-json</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12316\">#12316</a>)</li>\r\n<li><code>[jest-repl]</code> Make module importable (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12311\">#12311</a> &amp; <a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12315\">#12315</a>)</li>\r\n</ul>\r\n<h3>Chore &amp; Maintenance</h3>\r\n<ul>\r\n<li><code>[*]</code> Avoid anonymous default exports (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12313\">#12313</a>)</li>\r\n</ul>\r\n<h2>27.5.0</h2>\r\n<h3>Features</h3>\r\n<ul>\r\n<li><code>[expect]</code> Add asymmetric matcher <code>expect.closeTo</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12243\">#12243</a>)</li>\r\n<li><code>[jest-mock]</code> Added <code>mockFn.mock.lastCall</code> to retrieve last argument (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12285\">#12285</a>)</li>\r\n</ul>\r\n<h3>Fixes</h3>\r\n<ul>\r\n<li><code>[expect]</code> Add a fix for <code>.toHaveProperty('')</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12251\">#12251</a>)</li>\r\n<li><code>[jest-each, @jest/globals]</code> Allow passing <code>ReadonlyArray</code> type of a table to <code>describe.each</code> and <code>test.each</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12297\">#12297</a>)</li>\r\n<li><code>[@jest/globals]</code> Add missing <code>options</code> argument to <code>jest.doMock</code> typing (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12292\">#12292</a>)</li>\r\n<li><code>[jest-environment-node]</code> Add <code>atob</code> and <code>btoa</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12269\">#12269</a>)</li>\r\n<li><code>[jest-matcher-utils]</code> Correct diff for expected asymmetric matchers (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12264\">#12264</a>)</li>\r\n<li><code>[jest-message-util]</code> Fix <code>.getTopFrame()</code> (and <code>toMatchInlineSnapshot()</code>) with <code>mjs</code> files (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/12277\">#12277</a>)</li>\r\n</ul>\r\n<h3>Chore &amp; Maintenance</h3>\r\n<ul>\r\n<li><code>[*]</code> Update <code>graceful-fs</code> to <code>^4.2.9</code> (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/11749\">#11749</a>)</li>\r\n</ul>\r\n<h3>Performance</h3>\r\n<ul>\r\n<li><code>[jest-resolve]</code> perf: skip error creation on not found <code>stat</code> calls (<a href=\"https://github-redirect.dependabot.com/facebook/jest/pull/11749\">#11749</a>)</li>\r\n</ul>\r\n</blockquote>\r\n</details>\r\n<details>\r\n<summary>Commits</summary>\r\n<ul>\r\n<li><a href=\"https://github.com/facebook/jest/commit/67c1aa20c5fec31366d733e901fee2b981cb1850\"><code>67c1aa2</code></a> v27.5.1</li>\r\n<li><a href=\"https://github.com/facebook/jest/commit/a838175e06a39ffae7e73fb9ca7b768b5af11765\"><code>a838175</code></a> chore: update changelog for release</li>\r\n<li><a href=\"https://github.com/facebook/jest/commit/0e3013a22b8f2d29ed99e14c7d4db9898f837b5e\"><code>0e3013a</code></a> ci(jest-changed-files): enable <code>mercurial</code> related test on CI (<a href=\"https://github-redirect.dependabot.com/facebook/jest/issues/12327\">#12327</a>)</li>\r\n<li><a href=\"https://github.com/facebook/jest/commit/55caeb74cd8f91817f624feb8d54752e28f16767\"><code>55caeb7</code></a> chore: remove unnecessary checks</li>\r\n<li><a href=\"https://github.com/facebook/jest/commit/506a0629147b2cad1469709b0b3e40bcaddc1a8d\"><code>506a062</code></a> chore: avoid backticks without template in strings (<a href=\"https://github-redirect.dependabot.com/facebook/jest/issues/12328\">#12328</a>)</li>\r\n<li><a href=\"https://github.com/facebook/jest/commit/dfbe71d6beb5f8627423d2253d84a1cade242cc4\"><code>dfbe71d</code></a> chore: remove <code>@babel/plugin-proposal-class-properties</code></li>\r\n<li><a href=\"https://github.com/facebook/jest/commit/1596aab6f8ee4d90b8927740ab3ba1dd669eaa88\"><code>1596aab</code></a> chore(jest-config): remove unused dev dep (<a href=\"https://github-redirect.dependabot.com/facebook/jest/issues/12319\">#12319</a>)</li>\r\n<li><a href=\"https://github.com/facebook/jest/commit/201901f3e75d0a08bc5f08dc1a4b9fd8ea4c67b3\"><code>201901f</code></a> Revert &quot;chore: remove unused import from test&quot; (<a href=\"https://github-redirect.dependabot.com/facebook/jest/issues/12321\">#12321</a>)</li>\r\n<li><a href=\"https://github.com/facebook/jest/commit/762b9b721ab5971d7cdbcb6ce3e2b1d7fa7f5a04\"><code>762b9b7</code></a> chore: run prettier</li>\r\n<li><a href=\"https://github.com/facebook/jest/commit/7400207f0344534a5bf8828a510364fb83e92cbf\"><code>7400207</code></a> docs: added info about modern and legacy timers (<a href=\"https://github-redirect.dependabot.com/facebook/jest/issues/12317\">#12317</a>)</li>\r\n<li>Additional commits viewable in <a href=\"https://github.com/facebook/jest/compare/v27.4.7...v27.5.1\">compare view</a></li>\r\n</ul>\r\n</details>\r\n<br />\r\n\r\n\r\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jest&package-manager=npm_and_yarn&previous-version=27.4.7&new-version=27.5.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\r\n\r\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\r\n\r\n[//]: # (dependabot-automerge-start)\r\n[//]: # (dependabot-automerge-end)\r\n\r\n---\r\n\r\n<details>\r\n<summary>Dependabot commands and options</summary>\r\n<br />\r\n\r\nYou can trigger Dependabot actions by commenting on this PR:\r\n- `@dependabot rebase` will rebase this PR\r\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\r\n- `@dependabot merge` will merge this PR after your CI passes on it\r\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\r\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\r\n- `@dependabot reopen` will reopen this PR if it is closed\r\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\r\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\r\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\r\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\r\n\r\n\r\n</details>",
    "head_branch": "multi-dependency-bump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211267ac254a19ac290844",
    "number": 3135,
    "body": null,
    "head_branch": "pull-pylance-with-pyright-1.1.226",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211268ac254a19ac290845",
    "number": 3101,
    "body": "For options like `-v,--venv-path <DIRECTORY>` omitting the `<DIRECTORY>`\r\nshould result in the command failing. command-line-args apparently\r\ndoesn't take care of that and just sets venvpath to null.\r\n\r\nThis is especially unfortunate because users might assume that -v\r\nenables verbose output, so running `pyright -v` should really fail\r\ninstead of happily running as if no option was passed.",
    "head_branch": "strict-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make pyright command fail if option value is missing (#3101)\n\nFor options like -v,--venv-path <DIRECTORY> omitting the <DIRECTORY>\r\nshould result in the command failing. command-line-args apparently\r\ndoesn't take care of that and just sets venvpath to null.\r\n\r\nThis is especially unfortunate because users might assume that -v\r\nenables verbose output, so running `pyright -v` should really fail\r\ninstead of happily running as if no option was passed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211269ac254a19ac290846",
    "number": 3072,
    "body": "…able memory rather than a hard-coded size. For the pyright VS Code extension, changed the default \"max heap size\" from 1.7GB to 3.0GB on 32-bit systems. On 64-bit systems, this value appears to already be a higher value (4GB), and it doesn't appear to get overridden by the lower number.",
    "head_branch": "heapSize",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Changed heap overflow detection to use a dynamic value based on available memory rather than a hard-coded size. For the pyright VS Code extension, changed the default \"max heap size\" from 1.7GB to 3.0GB on 32-bit systems. On 64-bit systems, this value appears to already be a higher value (4GB), and it doesn't appear to get overridden by the lower number. (#3072)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621126aac254a19ac290847",
    "number": 3070,
    "body": "I tested your transform_descriptor_types prototype and it wasn't working for me because my __set__ method had overloads. To be honest, it's not clear to me why overloading `__set__` would be interesting, but [SQLAlchemy's `Mapped` class](https://github.com/sqlalchemy/sqlalchemy/blob/f24a34140f6007cada900a8ae5ed03fe40ce2631/lib/sqlalchemy/orm/base.py#L656) has overloads for `__set__`, so I think we should handle this more gracefully.\r\n\r\nCurrently I'm getting the value type from the implementation function. However SQLAlchemy's current `Mapped` class has no annotation on the `__set__` impl's value parameter. We could use a Union of the types found on the overloads, but perhaps we should require library authors to annotate the `__set__` impl's value parameter?\r\n\r\nWhat do you think?",
    "head_branch": "transformDescriptorTypesOverloads",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621126bac254a19ac290848",
    "number": 3064,
    "body": "- Update Mac and Ubuntu workflows to use latest so we have access to more VMs.\r\n- Add IPython display scope to binder\r\n- Add a way to chain source files (for notebooks)",
    "head_branch": "pull-pylance-202223",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Push from Pylance (#3064)\n\nUpdate Mac and Ubuntu workflows to use latest so we have access to more VMs, Add IPython display scope to binder, Add a way to chain source files (for notebooks)\r\n\r\n1. Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n2. Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n3. Co-authored-by: Erik De Bonte <erikd@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621126bac254a19ac290849",
    "number": 3063,
    "body": "You published 1.1.222 last night, but when we pulled pyright this morning I noticed that the versions in package.json and lerna.json are still 1.1.221.\r\n\r\nNot sure if taking this PR is the right fix, but wanted to save you some time if it is.\r\n\r\nDoes Pyright 1.1.222 need to be republished with this change?",
    "head_branch": "updateVersions1.1.221",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621126cac254a19ac29084a",
    "number": 3061,
    "body": "- Added IPython display scope to binder and added a way to chain source files. \r\n- update build agents to latest os versions (improves agent availability)",
    "head_branch": "pull-pylance-with-pyright-1.1.222",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621126dac254a19ac29084b",
    "number": 3060,
    "body": "- Added IPython display scope to binder and added a way to chain source files",
    "head_branch": "pull-pylance-with-pyright-1.1.221",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621126eac254a19ac29084c",
    "number": 3051,
    "body": "Documented analysis of psycopg library and recommendations for changes in pyright. Posting as a PR to encourage feedback in the form of PR comments.\r\n\r\nThis PR won't be merged into the main branch. Its branch will be deleted after the discussion is complete and we settle on a final plan.",
    "head_branch": "psycopg_analysis",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621126fac254a19ac29084d",
    "number": 3040,
    "body": "…r diagnostic rule severity levels. The bug caused all settings overrides to be ignored if a pyrightconfig.json file was present. The new logic applies the default values, then the settings overrides, then the pyrightconfig.json file values. The change also simplifies the code, which was getting a bit unmaintainable.",
    "head_branch": "settingsOverrides",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211270ac254a19ac29084e",
    "number": 3018,
    "body": "Last minute pyright change for today's Pylance release\r\n\r\nMade any folder under workspace starts with '.' auto-excluded and library timer back off time to 10 min",
    "head_branch": "pull-pylance-202221",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Made any folder under workspace starts with '.' auto-excluded and library timer back off time to 10 min (#3018)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211271ac254a19ac29084f",
    "number": 3015,
    "body": "- Don't raise await error on top level statement in ipython mode\r\n- update dependencies",
    "head_branch": "pull-pylance-202221",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pull from pylance (#3015)\n\nDon't raise await error on top level statement in ipython mode, update dependencies\r\n\r\n1. Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n2. Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n3. Co-authored-by: Erik De Bonte <Erik.DeBonte@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211272ac254a19ac290850",
    "number": 2996,
    "body": "reveal_locals() was not documented anywhere, which may be part of why so few people know about it.\r\n\r\nHappy to put this somewhere else if you prefer.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Document reveal_type() and reveal_locals() (#2996)\n\nreveal_locals() was not documented anywhere, which may be part of why so few people know about it.\r\n\r\nHappy to put this somewhere else if you prefer."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211273ac254a19ac290851",
    "number": 2992,
    "body": "Bumps [simple-get](https://github.com/feross/simple-get) from 3.1.0 to 3.1.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/feross/simple-get/commit/496166d2fff21b4ec1d4ab9e7c8d4b2ab11ebf18\"><code>496166d</code></a> 3.1.1</li>\n<li><a href=\"https://github.com/feross/simple-get/commit/6eb82c090e30e7146fa5e9ae7212ca16b24b08b4\"><code>6eb82c0</code></a> Bug fix: Thirdparty cookie leak</li>\n<li>See full diff in <a href=\"https://github.com/feross/simple-get/compare/v3.1.0...v3.1.1\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~linusu\">linusu</a>, a new releaser for simple-get since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=simple-get&package-manager=npm_and_yarn&previous-version=3.1.0&new-version=3.1.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/vscode-pyright/simple-get-3.1.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump simple-get from 3.1.0 to 3.1.1 in /packages/vscode-pyright (#2992)\n\nBumps [simple-get](https://github.com/feross/simple-get) from 3.1.0 to 3.1.1.\r\n- [Release notes](https://github.com/feross/simple-get/releases)\r\n- [Commits](https://github.com/feross/simple-get/compare/v3.1.0...v3.1.1)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: simple-get\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211274ac254a19ac290852",
    "number": 2976,
    "body": "…es when there is no textual changes on the file, add .pytest_cache as one of auto excluding path, add ipython mode to tokenizer",
    "head_branch": "pull-pylance-202220",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update types to 17.0.8, fix logging typo, don't clear user file indic… (#2976)\n\n1. Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n2. Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n3. Co-authored-by: Erik De Bonte <Erik.DeBonte@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211275ac254a19ac290853",
    "number": 2941,
    "body": "…orkspaceSymbols, update vsce to fix markdown-it security warning, connect VerboseOuput with LogLevel Trace setting",
    "head_branch": "pull-pylance-202214",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix import alias, make autoimport configurable, allow disabling of  w… (#2941)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211276ac254a19ac290854",
    "number": 2918,
    "body": "Bumps [node-fetch](https://github.com/node-fetch/node-fetch) from 2.6.6 to 2.6.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/node-fetch/node-fetch/releases\">node-fetch's releases</a>.</em></p>\n<blockquote>\n<h2>v2.6.7</h2>\n<h1>Security patch release</h1>\n<p>Recommended to upgrade, to not leak sensitive cookie and authentication header information to 3th party host while a redirect occurred</p>\n<h2>What's Changed</h2>\n<ul>\n<li>fix: don't forward secure headers to 3th party by <a href=\"https://github.com/jimmywarting\"><code>@​jimmywarting</code></a> in <a href=\"https://github-redirect.dependabot.com/node-fetch/node-fetch/pull/1453\">node-fetch/node-fetch#1453</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/node-fetch/node-fetch/compare/v2.6.6...v2.6.7\">https://github.com/node-fetch/node-fetch/compare/v2.6.6...v2.6.7</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/1ef4b560a17e644a02a3bfdea7631ffeee578b35\"><code>1ef4b56</code></a> backport of <a href=\"https://github-redirect.dependabot.com/node-fetch/node-fetch/issues/1449\">#1449</a> (<a href=\"https://github-redirect.dependabot.com/node-fetch/node-fetch/issues/1453\">#1453</a>)</li>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/8fe5c4ea66b9b8187600e6d5ec9b1b6781f44009\"><code>8fe5c4e</code></a> 2.x: Specify encoding as an optional peer dependency in package.json (<a href=\"https://github-redirect.dependabot.com/node-fetch/node-fetch/issues/1310\">#1310</a>)</li>\n<li>See full diff in <a href=\"https://github.com/node-fetch/node-fetch/compare/v2.6.6...v2.6.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=node-fetch&package-manager=npm_and_yarn&previous-version=2.6.6&new-version=2.6.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/node-fetch-2.6.7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump node-fetch from 2.6.6 to 2.6.7 (#2918)\n\nBumps [node-fetch](https://github.com/node-fetch/node-fetch) from 2.6.6 to 2.6.7.\r\n- [Release notes](https://github.com/node-fetch/node-fetch/releases)\r\n- [Changelog](https://github.com/node-fetch/node-fetch/blob/main/docs/CHANGELOG.md)\r\n- [Commits](https://github.com/node-fetch/node-fetch/compare/v2.6.6...v2.6.7)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: node-fetch\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211276ac254a19ac290855",
    "number": 2913,
    "body": " - fix missing autoImports labels example `atan` from both `cmath` and `math` should appear",
    "head_branch": "pull-pylance-202212-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix missing autoImports labels (#2913)\n\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211277ac254a19ac290856",
    "number": 2899,
    "body": "rollup of :\r\n\r\n- updated dependencies \r\n- filter duplicate completions\r\n- add python.analysis.index config option\r\n- fixed a bug where completion shows builtin symbols in import completion list\r\n- handle doc string on overloads better",
    "head_branch": "pull-pylance-202212",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pull pylance (#2899)\n\n    1. Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n    2. Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n    3. Co-authored-by: Erik De Bonte <Erik.DeBonte@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211278ac254a19ac290857",
    "number": 2891,
    "body": "This allows Pyright to properly infer namespace packages spread\r\nacross multiple directories using pkgutil or pkg_resources as specified\r\nhere:\r\n\r\nhttps://packaging.python.org/en/latest/guides/packaging-namespace-packages/#pkgutil-style-namespace-packages\r\n\r\nSee https://github.com/microsoft/pyright/issues/2882 for more details.",
    "head_branch": "2882_pkgutil_pkgresources_namespaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211279ac254a19ac290858",
    "number": 2864,
    "body": "[//]: # (dependabot-start)\n⚠️  **Dependabot is rebasing this PR** ⚠️ \n\nRebasing might not happen immediately, so don't worry if this takes some time.\n\nNote: if you make any changes to this PR yourself, they will take precedence over the rebase.\n\n---\n\n[//]: # (dependabot-end)\n\nBumps [shelljs](https://github.com/shelljs/shelljs) from 0.8.4 to 0.8.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/shelljs/shelljs/releases\">shelljs's releases</a>.</em></p>\n<blockquote>\n<h2>v0.8.5</h2>\n<p>This was a small security fix for <a href=\"https://github-redirect.dependabot.com/shelljs/shelljs/issues/1058\">#1058</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/shelljs/shelljs/commit/70668a4555c7d49c4f67d53ea063b899be4d6d40\"><code>70668a4</code></a> 0.8.5</li>\n<li><a href=\"https://github.com/shelljs/shelljs/commit/d919d22dd6de385edaa9d90313075a77f74b338c\"><code>d919d22</code></a> fix(exec): lockdown file permissions (<a href=\"https://github-redirect.dependabot.com/shelljs/shelljs/issues/1060\">#1060</a>)</li>\n<li>See full diff in <a href=\"https://github.com/shelljs/shelljs/compare/v0.8.4...v0.8.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=shelljs&package-manager=npm_and_yarn&previous-version=0.8.4&new-version=0.8.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/pyright-internal/shelljs-0.8.5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump shelljs from 0.8.4 to 0.8.5 in /packages/pyright-internal (#2864)\n\nBumps [shelljs](https://github.com/shelljs/shelljs) from 0.8.4 to 0.8.5.\r\n- [Release notes](https://github.com/shelljs/shelljs/releases)\r\n- [Changelog](https://github.com/shelljs/shelljs/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/shelljs/shelljs/compare/v0.8.4...v0.8.5)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: shelljs\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621127aac254a19ac290859",
    "number": 2863,
    "body": "Bumps [shelljs](https://github.com/shelljs/shelljs) from 0.8.4 to 0.8.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/shelljs/shelljs/releases\">shelljs's releases</a>.</em></p>\n<blockquote>\n<h2>v0.8.5</h2>\n<p>This was a small security fix for <a href=\"https://github-redirect.dependabot.com/shelljs/shelljs/issues/1058\">#1058</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/shelljs/shelljs/commit/70668a4555c7d49c4f67d53ea063b899be4d6d40\"><code>70668a4</code></a> 0.8.5</li>\n<li><a href=\"https://github.com/shelljs/shelljs/commit/d919d22dd6de385edaa9d90313075a77f74b338c\"><code>d919d22</code></a> fix(exec): lockdown file permissions (<a href=\"https://github-redirect.dependabot.com/shelljs/shelljs/issues/1060\">#1060</a>)</li>\n<li>See full diff in <a href=\"https://github.com/shelljs/shelljs/compare/v0.8.4...v0.8.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=shelljs&package-manager=npm_and_yarn&previous-version=0.8.4&new-version=0.8.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/pyright/shelljs-0.8.5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump shelljs from 0.8.4 to 0.8.5 in /packages/pyright (#2863)\n\nBumps [shelljs](https://github.com/shelljs/shelljs) from 0.8.4 to 0.8.5.\r\n- [Release notes](https://github.com/shelljs/shelljs/releases)\r\n- [Changelog](https://github.com/shelljs/shelljs/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/shelljs/shelljs/compare/v0.8.4...v0.8.5)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: shelljs\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621127bac254a19ac29085a",
    "number": 2862,
    "body": "[//]: # (dependabot-start)\n⚠️  **Dependabot is rebasing this PR** ⚠️ \n\nRebasing might not happen immediately, so don't worry if this takes some time.\n\nNote: if you make any changes to this PR yourself, they will take precedence over the rebase.\n\n---\n\n[//]: # (dependabot-end)\n\nBumps [shelljs](https://github.com/shelljs/shelljs) from 0.8.4 to 0.8.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/shelljs/shelljs/releases\">shelljs's releases</a>.</em></p>\n<blockquote>\n<h2>v0.8.5</h2>\n<p>This was a small security fix for <a href=\"https://github-redirect.dependabot.com/shelljs/shelljs/issues/1058\">#1058</a>.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/shelljs/shelljs/commit/70668a4555c7d49c4f67d53ea063b899be4d6d40\"><code>70668a4</code></a> 0.8.5</li>\n<li><a href=\"https://github.com/shelljs/shelljs/commit/d919d22dd6de385edaa9d90313075a77f74b338c\"><code>d919d22</code></a> fix(exec): lockdown file permissions (<a href=\"https://github-redirect.dependabot.com/shelljs/shelljs/issues/1060\">#1060</a>)</li>\n<li>See full diff in <a href=\"https://github.com/shelljs/shelljs/compare/v0.8.4...v0.8.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=shelljs&package-manager=npm_and_yarn&previous-version=0.8.4&new-version=0.8.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/vscode-pyright/shelljs-0.8.5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump shelljs from 0.8.4 to 0.8.5 in /packages/vscode-pyright (#2862)\n\nBumps [shelljs](https://github.com/shelljs/shelljs) from 0.8.4 to 0.8.5.\r\n- [Release notes](https://github.com/shelljs/shelljs/releases)\r\n- [Changelog](https://github.com/shelljs/shelljs/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/shelljs/shelljs/compare/v0.8.4...v0.8.5)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: shelljs\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621127cac254a19ac29085b",
    "number": 2854,
    "body": "rollup of:\r\n\r\n- completion improvements for override methods\r\n- expand USERNAME and VIRTUAL_ENV names in path\r\n- handle indexer key completion for simple `__getitem__` case",
    "head_branch": "pull-pylance-202211",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pull pylance (#2854)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621127dac254a19ac29085c",
    "number": 2824,
    "body": "This was causing ParseResultBytes.geturl() to be labelled  with the return type str when it returns bytes.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621127eac254a19ac29085d",
    "number": 2820,
    "body": "Fix typo in example code for field definition.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update dataclass_transforms.md (#2820)\n\nFix typo in example code for field definition."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621127fac254a19ac29085e",
    "number": 2818,
    "body": "improve untitled file support",
    "head_branch": "pull-pylance-202210",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pull from Pylance (#2818)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621127fac254a19ac29085f",
    "number": 2712,
    "body": "Fixes #2711.",
    "head_branch": "ProtocolTypeVarVarianceFix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Protocol type var variance fix (#2712)\n\n* Add a test for validating protocol type variable variances with unions of multiple type variables\r\n\r\nThe test is supposed to fail at this point.\r\n\r\n* Fix bug that protocol type variables existing in a union type of multiple type varaibles are not treated as covariant with this union type\r\n\r\n* Fix typos, replacing \"arbitary\" with \"arbitrary\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211280ac254a19ac290860",
    "number": 2710,
    "body": null,
    "head_branch": "ProtocolTypeVarVarianceFix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211281ac254a19ac290861",
    "number": 2682,
    "body": null,
    "head_branch": "pull-pylance-2021121",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pull pylance: smart indent fixes, dependency update (#2682)\n\n  1. Co-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\n  2. Co-authored-by: HeeJae Chang <hechang@microsoft.com>\r\n  3. Co-authored-by: Erik De Bonte <Erik.DeBonte@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211282ac254a19ac290862",
    "number": 2677,
    "body": "… the currently-selected Python interpreter to omit the working directory if it happens to be in the \"sys.path\" list.",
    "head_branch": "erictr/python_path",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug that resulted in the import resolution paths retrieved from the currently-selected Python interpreter to omit the working directory if it happens to be in the \"sys.path\" list. (#2677)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211283ac254a19ac290863",
    "number": 2645,
    "body": "rollup of:\r\n\r\n- adding go to Type Definition `getTypeDefinitionsForPosition`\r\n- refactor LanguageServerBase LSP handlers from lambdas to member functions \r\n- refactor handling of incoming URI and position",
    "head_branch": "pull-pylance20",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pull Pylance (#2645)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211284ac254a19ac290864",
    "number": 2641,
    "body": "…ference symbol and avoiding additional work for that file if there is no chance of finding a reference within it.",
    "head_branch": "erictr/FindReferencePerf",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Sped up \"find reference\" by performing a quick text search for the re… (#2641)\n\n* Sped up \"find reference\" by performing a quick text search for the reference symbol and avoiding additional work for that file if there is no chance of finding a reference within it.\r\n\r\n* Avoid parsing the file if its contents don't contain the reference symbol text.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211284ac254a19ac290865",
    "number": 2635,
    "body": "copying the information provided as answer to https://github.com/microsoft/pyright/issues/2634",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "extend documentation on JSON (#2635)\n\ncopying the information provided as answer to https://github.com/microsoft/pyright/issues/2634"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211285ac254a19ac290866",
    "number": 2615,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added keyword-only check to dataclasess `__match_args__` (#2615)\n\n* Add keyword-only check to dataclasess `__match_args__`\r\n\r\n* Fixed tests added in add keyword-only check to dataclasess `__match_args__`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211286ac254a19ac290867",
    "number": 2581,
    "body": "fixes https://github.com/microsoft/pyright/issues/2562",
    "head_branch": "pythonVersion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use shared helper method to call python interpreter to have consistent behavior between different calls. (#2581)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211287ac254a19ac290868",
    "number": 2579,
    "body": null,
    "head_branch": "push-pyright-20211117",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added helper method for future refactoring (#2579)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211288ac254a19ac290869",
    "number": 2559,
    "body": null,
    "head_branch": "fix-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo: add missing quotation mark (#2559)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211289ac254a19ac29086a",
    "number": 2556,
    "body": "Pushing pyright changes from pylance. Various small changes such as dependency updates, a bug fix on file open/close happening repeatedly in short period of times and putting more protection on calling getPythonVersion which will execute python in isolated environment. and helper method that can return expected indentation of given position.",
    "head_branch": "push-pyright-20211110",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "dependency updates, bug fix on file open/close, update on getPythonVersion (#2556)\n\nCo-authored-by: Jake Bailey <5341706+jakebailey@users.noreply.github.com> \r\nCo-authored-by: Rich Chiodo <rchiodo@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621128aac254a19ac29086b",
    "number": 2546,
    "body": "…onReferences\" and \"onExecuteCommand\" handlers in language server.",
    "head_branch": "erictr/progressReporting",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed incorrect handling of client-initiated progress reporting for \"… (#2546)\n\n* Fixed incorrect handling of client-initiated progress reporting for \"onReferences\" and \"onExecuteCommand\" handlers in language server.\r\n\r\n* Incorporated code review feedback.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621128bac254a19ac29086c",
    "number": 2530,
    "body": "dependency updates and helper methods for future refactoring features",
    "head_branch": "push-pyright-20211103",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "dependency updates and helper methods for future refactoring features (#2530)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621128cac254a19ac29086d",
    "number": 2520,
    "body": "…operly identified as such and prioritized higher in the completion list than other non-member symbols.",
    "head_branch": "erictr/enum_completion",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added support in completion provide for enum members. They are now properly identified as such and prioritized higher in the completion list than other non-member symbols. (#2520)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621128dac254a19ac29086e",
    "number": 2519,
    "body": "Links the description of the `executionEnvironment` option. Would have partially prevented a question in #2518.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update configuration.md (#2519)\n\nLinks the description of the `executionEnvironment` option. Would have partially prevented a question in #2518."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621128eac254a19ac29086f",
    "number": 2504,
    "body": "There was a typo in ef773d2407f485f94f6a0fa6fd903267c65ac26c which used the wrong flag.\r\n\r\n`command-line-args` doesn't really type any of its arguments, so this was missed.",
    "head_branch": "fix-skipunannotated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix --skipunannotated flag (#2504)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621128fac254a19ac290870",
    "number": 2471,
    "body": "See https://github.com/microsoft/pylance-release/issues/1520#issuecomment-949038552.\r\n\r\n50 MB is the point at which VS Code starts to warn the user that the file is too big and start disabling features, so is good to match for consistency.",
    "head_branch": "increase-max-size",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Increase max file size to 50 MB, matching VS Code (#2471)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621128fac254a19ac290871",
    "number": 2470,
    "body": "For #2469.\r\n\r\nWe had changed the way file watching works when we were working on supporting the browser, but the changes meant that the CLI was changed from the chokidar watcher to a no-op watcher without us noticing. (Then, the code was eventually deleted as dead.)\r\n\r\nRestore the code as it was previously for the CLI case. The LS still uses `fs.watch`, but that's not a regression as it has used `fs.watch` for non-workspace folders for a good while now. I'm currently working on changing our file watcher to fix things (which will likely eliminate chokidar; VS Code is also doing this and moving to `@parcel/watcher`), but this PR at least brings things back to the way they used to be.\r\n\r\nTesting locally, watch mode appears to work.",
    "head_branch": "restore-cli-watcher",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Restore CLI file watcher to pre-refactor state (#2470)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211290ac254a19ac290872",
    "number": 2466,
    "body": "fix completions in lists",
    "head_branch": "pylance-19",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pull pylance (#2466)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211291ac254a19ac290873",
    "number": 2448,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      " Rik de Graaff Added broader support for context managers in with statements which swallow exceptions. (#2448)\n\n* Added broader support for context managers in with statements which swallow exceptions.\r\n\r\n* Make sure formatting adheres to the pyright standards.\r\n\r\nCo-authored-by: Rik de Graaff <rdegraaff@verity.ch>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211292ac254a19ac290874",
    "number": 2434,
    "body": "fixed a bug where third party import is only suggested from third par… (#1935)\r\n* fixed a bug where third party import is only suggested from third party typeshed when it is fully typed or not including pylance bundled typeshed\r\n\r\n* added tests\r\n\r\nCo-authored-by: Jake Bailey <5341706+jakebailey@users.noreply.github.com>",
    "head_branch": "pylance-18",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pull pylance (#2434)\n\nCo-authored-by: Jake Bailey <5341706+jakebailey@users.noreply.github.com>\r\nCo-authored-by: Heejae Chang <heejaechang@outlook.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211293ac254a19ac290875",
    "number": 2422,
    "body": "Rollup of:\r\n\r\n- Fix import completions for parent directory resolution (https://github.com/microsoft/pylance-release/issues/1929)\r\n- Update code related to the WIP module refactorings",
    "head_branch": "pylance-77",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix import completions for parent directory resolution, changes for new module refactorings (#2422)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211294ac254a19ac290876",
    "number": 2400,
    "body": "…ype when aliased types are combined in a union.",
    "head_branch": "erictr/retain_type_aliases",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Implemented logic to retain type aliases in printed form of a union t… (#2400)\n\n* Implemented logic to retain type aliases in printed form of a union type when aliased types are combined in a union.\r\n\r\n* Retrain alias for another case of type transform.\r\n\r\n* Added back special-casing of default value of None.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211295ac254a19ac290877",
    "number": 2395,
    "body": "For https://github.com/microsoft/pylance-release/issues/1914.",
    "head_branch": "none-parameter-union",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Avoid unioning already optional parameter type when default value is None. (#2395)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211296ac254a19ac290878",
    "number": 2389,
    "body": null,
    "head_branch": "pylance-17",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "relative path fixes for refactoring (#2389)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211297ac254a19ac290879",
    "number": 2369,
    "body": "Rollup of:\r\n\r\n- Fix more unresolvable import completions\r\n- Update of the module refactoring code.\r\n- Remove use of `getDeclaredTypeForExpression` in favor of new `getExpectedType`.\r\n- Fix `launch.json`.",
    "head_branch": "pylance-76",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix more unresolvable import completions, module refactoring updates, remove getDeclaredTypeForExpression (#2369)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211298ac254a19ac29087a",
    "number": 2355,
    "body": "This PR contains changes that to further support new module refactorings.",
    "head_branch": "pylance-75",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor and add code for future code refactoring (#2355)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211299ac254a19ac29087b",
    "number": 2350,
    "body": "This is a fairly big PR, but is mostly tests for new work-in-progress refactoring or code moves.\r\n\r\nRollup of:\r\n\r\n- The import resolver will now try failed absolute imports in the directory of the file doing the import (then its parent, and so on, until the workspace root). This greatly alleviates unresolved absolute imports when files are located in nested folders in the workspace, e.g. a scripts directory, or in open-file mode. This was previously a Pylance feature as the \"import heuristic\", but it's been so successful that it's now enabled permanently, and is being contributed back to pyright for consistency.\r\n- The \"Add Optional to Type Annotation\" quick fix has been fixed. It wasn't properly providing the URI of the file being edited, so failed to run.\r\n- Auto-imports will no longer mistakenly add to `*` imports, instead creating a new import for the member that isn't a part of `__all__`.\r\n- A lot of structural changes and new tests for the work in progress module rename refactoring.",
    "head_branch": "pylance-74",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync from Pylance (#2350)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621129aac254a19ac29087c",
    "number": 2336,
    "body": "... for the benefit of language service providers.",
    "head_branch": "erictr/getExpectedType",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Implemented getExpectedType function within typeEvaluator for the benefit of language service providers. (#2336)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621129aac254a19ac29087d",
    "number": 2334,
    "body": "This PR adds support for autocompleting keys for `TypedDict` arguments to functions.\r\n\r\n![Image showcasing completions](https://i.gyazo.com/2748daf91f1133114cc34ca371e33b8b.png)\r\n\r\nIt should be noted that this does _not_ add support for https://github.com/microsoft/pylance-release/issues/654.\r\n\r\n## Features\r\n\r\n### Nested TypedDicts\r\n\r\n![Image of nested TypedDicts](https://i.gyazo.com/a93de06440ac65277b1631302f42b9a8.png)\r\n\r\n### Unions of TypedDicts\r\n\r\n![Image of unions of TypedDicts](https://i.gyazo.com/e35b6914121ec9cb214d0436945ea3de.png)\r\n\r\n### Narrows unions of TypedDicts\r\n\r\nIf the keys that are already present in the dictionary are not valid for one or more TypedDicts then suggestions will be removed.\r\n\r\n![Image of narrowing unions of TypedDicts](https://i.gyazo.com/31ca0bc4032e42486f06dc97c36b9a9e.png)\r\n\r\n### Removes redundant completions\r\n\r\nKeys that are already present in the dictionary will not be suggested.\r\n\r\n![Image showcasing removing redundant completions](https://i.gyazo.com/6ea6cd9babc144992e74582928227301.png)\r\n\r\n### Lists of TypedDicts\r\n\r\n![Image showcasing completions for lists of TypedDicts](https://i.gyazo.com/87e6fb2311eaaba6c57738eae55dcecc.png)\r\n\r\n## Additional notes\r\n\r\n### Erroneous parsing\r\n\r\nDictionary expressions that are not fully complete, e.g.\r\n\r\n```py\r\n{\r\n    'hello': 'world',\r\n    '.'\r\n}\r\n```\r\n\r\nare handled naively, I simply check that the cursor is inside a string inside a dictionary and that the previous token is a comma. I do not know if there is a better method for achieving this.\r\n\r\n### Completion bug\r\n\r\nWhile writing tests for this feature I ran into a bug. Parameter arguments are suggested while inside string literals, see [this](https://github.com/microsoft/pyright/compare/main...RobertCraigie:typeddict-arg-complete?expand=1#diff-091452b93d749b8b9475a3aa506d5121c4eb0c67f37b24403fa8812d59ad699bR15) test case.\r\n\r\n## Motivation\r\n\r\nAdding key completions for TypedDict arguments will significantly improve the experience using https://github.com/RobertCraigie/prisma-client-py\r\n",
    "head_branch": "typeddict-arg-complete",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621129bac254a19ac29087e",
    "number": 2329,
    "body": "Rollup of:\r\n\r\n- Update dependencies\r\n- Fix a parser bug with relative import name ranges, where multiple dots were not included in the range.\r\n- Add launch task to run specific jest test.\r\n- Various refactorings/helper functions to support future refactoring features.\r\n- Use locale from the LSP initialize notification if available. This is more portable than using the VS Code specific `VSCODE_NLS_CONFIG` environment variable.\r\n- Fix signature help appearing within strings that are followed by method calls.",
    "head_branch": "pylance-73",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync from Pylance (#2329)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621129cac254a19ac29087f",
    "number": 2326,
    "body": "This PR adds the use of the \"Deprecated\" hint tag. In VS Code, these are styled with a strike-through effect. Deprecated symbols are not flagged at the time they are imported, but rather when they are used. \r\n\r\n![Screen Shot 2021-09-21 at 11 48 03 PM](https://user-images.githubusercontent.com/7040122/134296774-e686f2f7-ce49-4b49-9c55-078d0e67a5ca.png)\r\n\r\n\r\nI found what appears to be a bug in VS Code. It is applying the strike-through style for text ranges that were not included in the hint's text range. We will need to work with the VS Code team to diagnose and fix this issue.\r\n\r\n![Screen Shot 2021-09-21 at 11 47 27 PM](https://user-images.githubusercontent.com/7040122/134296748-e74943fc-63a1-4473-8215-2dd17e1038ce.png)\r\n\r\n",
    "head_branch": "erictr/deprecated",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Implemented support for deprecated code hints. Also implemented code to detect the use of PEP 585-deprecated types, but this check is disabled for the time being because we think it will be too noisy and annoying for most users."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621129dac254a19ac290880",
    "number": 2323,
    "body": "This should prevent the warnings/failures seen in https://github.com/microsoft/pyright/pull/2318/checks?check_run_id=3659653151.",
    "head_branch": "fix-codeql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update CodeQL to match new template (#2323)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621129eac254a19ac290881",
    "number": 2318,
    "body": "Bumps [nth-check](https://github.com/fb55/nth-check) from 2.0.0 to 2.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/fb55/nth-check/releases\">nth-check's releases</a>.</em></p>\n<blockquote>\n<h2>v2.0.1</h2>\n<p><strong>Fixes:</strong></p>\n<ul>\n<li>Replace regex with hand-rolled parser for nth-expressions (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/9\">#9</a>)  9894c1d\n<ul>\n<li>Ensures parsing will always have linear time complexity.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Internal:</strong></p>\n<ul>\n<li>chore(ci): Use GitHub Actions, Dependabot (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/10\">#10</a>)  e02b4dd</li>\n<li>Bump dependencies</li>\n</ul>\n<p><a href=\"https://github.com/fb55/nth-check/compare/v2.0.0...v2.0.1\">https://github.com/fb55/nth-check/compare/v2.0.0...v2.0.1</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/fb55/nth-check/commit/65e40b02b0437daf5d41760352433435ad2370a0\"><code>65e40b0</code></a> 2.0.1</li>\n<li><a href=\"https://github.com/fb55/nth-check/commit/ff63f1d17320ace1a2c5f39f6e75bd81bf37f892\"><code>ff63f1d</code></a> Bump eslint-config-prettier from 6.15.0 to 8.3.0 (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/11\">#11</a>)</li>\n<li><a href=\"https://github.com/fb55/nth-check/commit/ff24c93f9e20ae42ace67a5170c0cf1489d8dc11\"><code>ff24c93</code></a> Bump jest from 26.6.3 to 27.2.0 (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/17\">#17</a>)</li>\n<li><a href=\"https://github.com/fb55/nth-check/commit/da9d78a0ea529ba2559bea4500dfc35974770dd1\"><code>da9d78a</code></a> Bump <code>@​typescript-eslint/parser</code> from 4.9.0 to 4.31.1 (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/18\">#18</a>)</li>\n<li><a href=\"https://github.com/fb55/nth-check/commit/fa35cafd1ef3e5440ffaf7a5f16f566319222812\"><code>fa35caf</code></a> Bump <code>@​types/node</code> from 14.14.10 to 16.9.1 (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/16\">#16</a>)</li>\n<li><a href=\"https://github.com/fb55/nth-check/commit/5f394023c49a7dd5d356037d4ec9128400baf556\"><code>5f39402</code></a> Bump <code>@​typescript-eslint/eslint-plugin</code> from 4.9.0 to 4.31.1 (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/19\">#19</a>)</li>\n<li><a href=\"https://github.com/fb55/nth-check/commit/a11c0c10d075e2abd344f00589b73e31951df9ad\"><code>a11c0c1</code></a> Bump prettier from 2.2.1 to 2.4.0 (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/20\">#20</a>)</li>\n<li><a href=\"https://github.com/fb55/nth-check/commit/3ddd820a7de8fa3eeec84ed2a36f05264d390552\"><code>3ddd820</code></a> Bump <code>@​types/jest</code> from 26.0.15 to 27.0.1 (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/13\">#13</a>)</li>\n<li><a href=\"https://github.com/fb55/nth-check/commit/732ab0ae677fc7febfb87904eefa0bd5d9020624\"><code>732ab0a</code></a> Bump ts-jest from 26.4.4 to 26.5.6 (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/15\">#15</a>)</li>\n<li><a href=\"https://github.com/fb55/nth-check/commit/7efd9daa51aeba371611424bc3984c2069659525\"><code>7efd9da</code></a> Bump eslint from 7.14.0 to 7.32.0 (<a href=\"https://github-redirect.dependabot.com/fb55/nth-check/issues/14\">#14</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/fb55/nth-check/compare/v2.0.0...v2.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nth-check&package-manager=npm_and_yarn&previous-version=2.0.0&new-version=2.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/vscode-pyright/nth-check-2.0.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621129fac254a19ac290882",
    "number": 2309,
    "body": "Rollup of:\r\n\r\n- Update dependencies; TS 4.4, Prettier 2.4\r\n- Explicitly handle unrooted execution environments (e.g., open file mode), preventing various crashes and oddities.\r\n- Generate default values in method overload signatures. Previously, we didn't include them, which generated the wrong signature.\r\n- Disable webpack caching (which recently broke upstream).\r\n- Use attribute docstrings for type aliases in completion and hover.\r\n- Clean up import resolver search path cache, which was leftover from the per-execution environment python interpreter removal.\r\n- Modify parser to change the range of parenthesized expressions to their contents. This improves the ranges returned in hovers, document highlight, etc.\r\n- Add boolean to ConfigOptions to check if the config was loaded from a config object (i.e., was produced in part by a `pyrightconfig.json` or `pyproject.toml` with a pyright section).",
    "head_branch": "pylance-72",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync from Pylance (#2309)\n\nRollup of:\r\n\r\n- Update dependencies; TS 4.4, Prettier 2.4\r\n- Explicitly handle unrooted execution environments (e.g., open file mode), preventing various crashes and oddities.\r\n- Generate default values in method overload signatures. Previously, we didn't include them, which generated the wrong signature.\r\n- Disable webpack caching (which recently broke upstream).\r\n- Use attribute docstrings for type aliases in completion and hover.\r\n- Clean up import resolver search path cache, which was leftover from the per-execution environment python interpreter removal.\r\n- Modify parser to change the range of parenthesized expressions to their contents. This improves the ranges returned in hovers, document highlight, etc.\r\n- Add boolean to ConfigOptions to check if the config was loaded from a config object (i.e., was produced in part by a `pyrightconfig.json` or `pyproject.toml` with a pyright section).\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a0ac254a19ac290883",
    "number": 2291,
    "body": "The rationale is as follows.\r\n\r\n>Tuple Expressions\r\n>When inferring the type of a tuple expression (in the absence of bidirectional inference hints), Pyright assumes that the tuple has a fixed length, and each tuple element is >typed as specifically as possible.\r\n\r\n```python\r\n# The inferred type is Tuple[Literal[1], Literal[\"a\"], Literal[True]]\r\nvar1 = (1, \"a\", True)\r\n\r\ndef func1(a: int):\r\n    # The inferred type is Tuple[int, int]\r\n    var2 = (a, a)\r\n\r\n    # If you want the type to be Tuple[int, ...]\r\n    # (i.e. a homogenous tuple of indeterminate length),\r\n    # use a type annotation.\r\n    var3: Tuple[int, ...] = (a, a)\r\n```",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ambiguous tuples become as specific as possible. (#2291)\n\nThe rationale is as follows.\r\n\r\n>Tuple Expressions\r\n>When inferring the type of a tuple expression (in the absence of bidirectional inference hints), Pyright assumes that the tuple has a fixed length, and each tuple element is >typed as specifically as possible.\r\n\r\n```python\r\n# The inferred type is Tuple[Literal[1], Literal[\"a\"], Literal[True]]\r\nvar1 = (1, \"a\", True)\r\n\r\ndef func1(a: int):\r\n    # The inferred type is Tuple[int, int]\r\n    var2 = (a, a)\r\n\r\n    # If you want the type to be Tuple[int, ...]\r\n    # (i.e. a homogenous tuple of indeterminate length),\r\n    # use a type annotation.\r\n    var3: Tuple[int, ...] = (a, a)\r\n```"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a1ac254a19ac290884",
    "number": 2290,
    "body": "Before this change, simple scripts with missing colons such as:\r\n\r\n```python\r\nif True\r\n    pass\r\n```\r\n\r\nresult in quite a lot of diagnostic output:\r\n\r\n- Expected \":\"\r\n- Expected expression\r\n- Unindent not expected\r\n- Expected expression\r\n- Statements must be separated by newlines or semicolons\r\n\r\nSome of this output is also seen when part way through writing (eventually) valid code.\r\n\r\nThe parser consumes the newline in error recovery which causes some onward confusion as it tries to parse the indent as a simple statement.\r\n\r\nThe PR avoids consuming the newline in error recovery, giving it a chance to parse the following indented block which first looks for that newline. I've also avoided parsing as a simple statement if the parser has consumed the line in the error recovery, as I can't see how that can succeed. After the change we just get the first error.\r\n\r\nI wasn't sure how best to approach the testing. Most of the parser tests are indirect but it seemed worth having direct tests for error recovery.\r\n\r\nI hope the error recovery doesn't add too much complexity. I think it's worthwhile here as the knock-on errors can be quite confusing and can be intimidating to new programmers.",
    "head_branch": "suite-parse-recovery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve suite 'Expected \":\"' knock-on errors (#2290)\n\nPreviously the recovery consumed the newline which meant we'd always\r\nfail to parse a following indented block.\r\n\r\nAlso take care not to parse as a simple statement when error recovery\r\nhas eaten the whole line."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a2ac254a19ac290885",
    "number": 2280,
    "body": "Rollup of:\r\n\r\n- Disable docstring inheritence from builtins, which have caused unwanted docs to appear in Pylance since doc inheritance was added. This has no effect in pyright, which doesn't have builtin docs.\r\n- Fix up a test added for submodule completions to be more strict.",
    "head_branch": "pylance-71",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Disable doc inheritence from builtins, test fixup (#2280)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a3ac254a19ac290886",
    "number": 2279,
    "body": "… private to that module — e.g. a private-name type alias, a private-named function in a \".py\" file within a py.typed library, or a non-re-exported import within a type stub.",
    "head_branch": "erictr/private_export",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a4ac254a19ac290887",
    "number": 2264,
    "body": "TypeScript and isort handle sorting of `_` differently. This can result in the auto-import insert position not matching the isort behavior.\r\n\r\nThis PR adds a workaround to better handle underscores when sorting import names.\r\n\r\n#### Example\r\n```py\r\nfrom lib import (\r\n    ...\r\n    # auto-import\r\n    MY_CONST_VAR,\r\n    # isort\r\n    ....\r\n)\r\n\r\nMYA_CONST_VAR  # import from lib\r\n```",
    "head_branch": "import-sorting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adjust auto-import sorting to better match isort (#2264)\n\n* Adjust auto-import sorting to better match isort\r\n\r\n* Replace all occurrances"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a5ac254a19ac290888",
    "number": 2263,
    "body": "The `strictSetInference` row was missing from the Diagnostic Rule Defaults table.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing `strictSetInference` option to table (#2263)\n\nThe `strictSetInference` row was missing from the Diagnostic Rule Defaults table."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a5ac254a19ac290889",
    "number": 2250,
    "body": "Rollup of:\r\n\r\n- Verify import completions before returning them; in some cases, we can find a folder that could be a module, but would not resolve due to namespace package handling (which the existing import suggestion code is unaware of). This should not hurt performance, as the info is already cached.\r\n- Remove the unused parameter `similarityLimit`.",
    "head_branch": "pylance-70",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Verify that import completions can resolve, remove unused similarityLimit (#2250)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a6ac254a19ac29088a",
    "number": 2247,
    "body": "Rollup of:\r\n\r\n- Update dependencies\r\n- Plumb diagnostic versions to publishDiagnostics.\r\n- Contextualize keyword completions on the current Python version (`async`/`await` in 3.5+, `match`/`case` in 3.10+).",
    "head_branch": "pylance-69",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update dependencies, plumb diagnostic versions, contextualize keyword completion on python version (#2247)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a7ac254a19ac29088b",
    "number": 2238,
    "body": "Creating `Pyproject.toml` as it is currently shown in the docs title will not work,\nbecause the file name is case sensitive. It should be exactly `pyproject.toml`",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix docs/configuration.md misleading case sensitive `Pyproject.toml` typo (#2238)\n\nCreating `Pyproject.toml` as it is currently shown in the docs title will not work,\r\nbecause the file name is case sensitive. It should be exactly `pyproject.toml`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a8ac254a19ac29088c",
    "number": 2230,
    "body": "Fix documentation errors",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update type-concepts.md (#2230)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112a9ac254a19ac29088d",
    "number": 2227,
    "body": "Rollup of\r\n   1. Added more capability checks\r\n   2. Made eggs/zip handle better \r\n   3. Added support for pth file in extra paths\r\n  4.  Added guard for misbehaving clients.",
    "head_branch": "push-pyright-20210825",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added more capability checks, made eggs/zip handle better, added support for pth file in extra paths, added guard for misbehaving clients. (#2227)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112aaac254a19ac29088e",
    "number": 2210,
    "body": "Rollup of:\r\n     - Enhancement: added dist-packages as one of search paths in tests (fourslash tests)\r\n",
    "head_branch": "pylance-sync-20210819",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixed attribute doc string on hover, fixed new file issue and support for dist-packages (#2210)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112abac254a19ac29088f",
    "number": 2198,
    "body": "https://github.com/microsoft/pylance-release/issues/1675\r\nhttps://pycqa.github.io/isort/docs/configuration/options.html#order-by-type\r\n\r\nI wasn't sure where or if I should add tests for it. Please let me know and I'd be happy to do them.",
    "head_branch": "auto-import-sorting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sort auto-imports by import symbol type (#2198)\n\n* Sort auto-imports by import symbol type\r\n\r\n* Add test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112acac254a19ac290890",
    "number": 2190,
    "body": "Rollup of:\r\n\r\n- Fix mapping of non-`file://` schemas, including untitled files.\r\n- Fix attribute docstrings for hover and signature help (previous support only handled completions)",
    "head_branch": "pylance-68",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix non-file schema diagnostics, fix attribute docs in hover (#2190)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112adac254a19ac290891",
    "number": 2176,
    "body": "Rollup of:\r\n\r\n- Host abstraction refactoring to support environment where python interpreter is not available.\r\n- Support Literal types in more places such as method parameter type or dictionary key type\r\n- Fixed a bug where we use wrong console to report debug trace\r\n",
    "head_branch": "pylance-20210811",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added literal type support in more places, fixed using wrong console bug and some refactoring around Host environment (#2176)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112aeac254a19ac290892",
    "number": 2156,
    "body": "Fixes the tar thing dependabot is fixing too.",
    "head_branch": "pylance-67",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update dependencies (#2156)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112aeac254a19ac290893",
    "number": 2155,
    "body": null,
    "head_branch": "fix-issue-template-labels",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update issue template labels (#2155)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112afac254a19ac290894",
    "number": 2148,
    "body": "Bumps [tar](https://github.com/npm/node-tar) from 4.4.13 to 4.4.15.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/node-tar/commit/843c897e6844f70a34bb115df6c8a9b60112aaf5\"><code>843c897</code></a> 4.4.15</li>\n<li><a href=\"https://github.com/npm/node-tar/commit/46fe35083e2676e31c4e0a81639dce6da7aaa356\"><code>46fe350</code></a> Remove paths from dirCache when no longer dirs</li>\n<li><a href=\"https://github.com/npm/node-tar/commit/df3aa4d10253a886be82519acb901b446ca3feeb\"><code>df3aa4d</code></a> 4.4.14</li>\n<li><a href=\"https://github.com/npm/node-tar/commit/6d2801396fbad917ab8332ec8e91ff3d15bc22c6\"><code>6d28013</code></a> add publishConfig tag</li>\n<li><a href=\"https://github.com/npm/node-tar/commit/efc6bb0dbd54df8c7285d7aac12bba959b8387a6\"><code>efc6bb0</code></a> fix: strip absolute paths more comprehensively</li>\n<li>See full diff in <a href=\"https://github.com/npm/node-tar/compare/v4.4.13...v4.4.15\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=tar&package-manager=npm_and_yarn&previous-version=4.4.13&new-version=4.4.15)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/tar-4.4.15",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b0ac254a19ac290895",
    "number": 2147,
    "body": "moved vscode dependency from 1.54 to 1.57",
    "head_branch": "pylance-67",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "upgrade vscode dependency to 1.57 (#2147)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b1ac254a19ac290896",
    "number": 2126,
    "body": "`{}[\"constructor\"]` gives back a function; lookup tables like this are unsafe.\r\n\r\nFor completeness, I did a jsbench of `Map` versus `Object.hasOwnProperty`, but `hasOwnProperty` is actually 2x slower than `Map.has`.\r\n\r\nThere are loads of these kinds of lookup tables, especially in the type evaluator for special cases; those should be fixed separately but this fixes a regression.\r\n\r\nAlso, sync a change from pylance for disabling the checker selectively.",
    "head_branch": "pylance-66",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed bug in tokenizer which treated 'constructor' as a keyword (#2126)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b2ac254a19ac290897",
    "number": 2125,
    "body": "rollup of:\r\n\r\n- Add VirtualDirent class\r\n- URI path conversion Updates\r\n- Language locale update \r\n- Improved OpenFile mode with better on the fly file tracking",
    "head_branch": "pylance-16",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add VirtualDirent class, URI path conversion Updates, Language Updates, Improved OpenFile mode (#2125)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b3ac254a19ac290898",
    "number": 2110,
    "body": "When the background thread was time sliced (paused then resumed), we'd dispose of the token, so cancellations in the future wouldn't actually run, leaving the background thread to continue running when its result isn't needed.",
    "head_branch": "pylance-65",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix a bug where BG won't cancel analysis chunks (#2110)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b4ac254a19ac290899",
    "number": 2105,
    "body": "rollup up of:\r\n- refactor platform dependencies in filesytem\r\n- refactor platform dependencies in crypto\r\n- Abstract out cancellation into a CancellationProvider interface",
    "head_branch": "pylance-15",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "refactored filesystem, refactored crypto for better platform abstraction (#2105)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Jake Bailey <5341706+jakebailey@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b5ac254a19ac29089a",
    "number": 2095,
    "body": "Rollup of:\r\n\r\n- Update dependencies, which fixes outstanding `npm audit` problems.\r\n- Eliminate `tsconfig-paths-webpack-plugin`, which has a number of bugs, including one that silently breaks packaging when two files have the same name in two of our packages.\r\n- Begin refactorings for de-nodifying codebase.",
    "head_branch": "pylance-64",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update dependencies, eliminate broken webpack plugin, begin browser refactorings (#2095)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b6ac254a19ac29089b",
    "number": 2084,
    "body": "rollup of:\r\n- Fix document highlight regression\r\n- handle mixed literal dict completions",
    "head_branch": "pylance-14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "document highlight fixes, dict completions improvements for non string literals (#2084)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>\r\nCo-authored-by: Jake Bailey <5341706+jakebailey@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b6ac254a19ac29089c",
    "number": 2064,
    "body": "Rollup of:\r\n - ExecuteCommand now can return a result instead of just applying workspaceEdits\r\n - New CommandResult wrapper for returning custom data along with workspaceEdits\r\n - Changed Program API to expose tracked files\r\n - updated assert signature",
    "head_branch": "pylance-14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "minor change to assert, execute command (#2064)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b7ac254a19ac29089d",
    "number": 2027,
    "body": "Rollup of:\r\n\r\n- dict key completion fixes (duplicated keys and symbols)\r\n- fixed assert in documentSymbolCollector.ts",
    "head_branch": "pylance-13",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "singe file mode import fixes (#2027)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b8ac254a19ac29089e",
    "number": 1993,
    "body": "Rollup of:\r\n- added basic dictionary key completion\r\n\r\n",
    "head_branch": "pylance-12",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added basic dictionary key completion (#1993)  \n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112b9ac254a19ac29089f",
    "number": 1984,
    "body": "Currently, writing overloads can be quite cumbersome as Ellipsis don't work too well with completion results. Since `.` is treated as a separator, all possible results are suggested. When combined with `editor.acceptSuggestionOnEnter = on` (the default), it means you first need to press escape, before you can continue with the next line.\r\n\r\nAdding `...` to the list of keywords also doesn't work, as it would just add three additional `.` The best solution I found was to check if the previous text is `...` and just return an empty completion list for it.\r\n\r\n<img width=\"511\" alt=\"Screen Shot 2021-06-14 at 18 20 31\" src=\"https://user-images.githubusercontent.com/30130371/121925447-3755c880-cd3d-11eb-9360-b9a7406d0c43.png\">",
    "head_branch": "completion-ellipsis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Return empty completionList for Ellipsis (#1984)\n\n* Return empty completionList for Ellipsis\r\n\r\n* Only check for .."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112baac254a19ac2908a0",
    "number": 1980,
    "body": "![image](https://user-images.githubusercontent.com/60603110/121781428-42d0b480-cbc2-11eb-82c6-bda1f2563133.png)\r\n\r\nAs per the usage, , the --ignoreexternal flag must be placed after the package and hence this PR adds a note. I struggled a lot with this and hope it helps other people!",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update command-line.md to emphazise flags with arguments (#1980)\n\n* Update command-line.md\r\n\r\n* Update command-line.md\r\n\r\n* Update command-line.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112bbac254a19ac2908a1",
    "number": 1977,
    "body": "Rollup of:\r\n\r\n- Update all dependencies, including TS 4.3, Jest 27, and Lerna 4.\r\n- Make zipfile support lazily loaded via new yarn FS update.\r\n- Restore the `sys.path` exists/directory checks to fix partial stub loading with broken zips.",
    "head_branch": "pylance-63",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update dependencies, restore sys.path check for directories (#1977)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112bcac254a19ac2908a2",
    "number": 1973,
    "body": "…ow detected earlier so we don't attempt to load the file contents and crash the language server in the process.",
    "head_branch": "erictr/really_big_file",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added error handling for very large source files. This situation is n… (#1973)\n\n* Added error handling for very large source files. This situation is now detected earlier so we don't attempt to load the file contents and crash the language server in the process.\r\n\r\n* Moved file length check into timing wrapper so stat check is treated as part of the file read operation.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112bdac254a19ac2908a3",
    "number": 1967,
    "body": "Rollup of:\r\n\r\n- Fix libzip when the zipfiles are corrupted.\r\n- Change `getPythonSearchPaths` to protected for use in Pylance.\r\n- Make file watcher register error a warning.\r\n- Normalize paths coming from python via native realpath call.\r\n- Add space after tables in docstrings.",
    "head_branch": "pylance-62",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "libzip fixes, change function to protected in resolver, make watcher error a warning (#1967)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112beac254a19ac2908a4",
    "number": 1966,
    "body": "Rollup of:\r\n\r\n- Fix libzip crashes by more carefully checking for zips.\r\n- Normalize paths from python using native realpath, which may fix casing problems.\r\n- Switch an import resolver to protected for Pylance use.",
    "head_branch": "pylance-61",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112bfac254a19ac2908a5",
    "number": 1965,
    "body": "Bumps [css-what](https://github.com/fb55/css-what) from 5.0.0 to 5.0.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/fb55/css-what/releases\">css-what's releases</a>.</em></p>\n<blockquote>\n<h2>v5.0.1</h2>\n<p><strong>Fixes:</strong></p>\n<ul>\n<li>Hand-roll attribute parsing (<a href=\"https://github-redirect.dependabot.com/fb55/css-what/issues/503\">#503</a>)  4cdaacf\n<ul>\n<li>Attribute values are slightly more permissive now. Ensures attribute parsing will always be linear.</li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://github.com/fb55/css-what/compare/v5.0.0...v5.0.1\">https://github.com/fb55/css-what/compare/v5.0.0...v5.0.1</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/fb55/css-what/commit/e9106aa26ece8efbdf85e3219a9f8513897160ab\"><code>e9106aa</code></a> 5.0.1</li>\n<li><a href=\"https://github.com/fb55/css-what/commit/a5b38560a32a1a0f66c45490d8be9922654ad695\"><code>a5b3856</code></a> build(deps-dev): bump jest from 26.6.3 to 27.0.1 (<a href=\"https://github-redirect.dependabot.com/fb55/css-what/issues/500\">#500</a>)</li>\n<li><a href=\"https://github.com/fb55/css-what/commit/4cdaacfd0d4b6fd00614be030da0dea6c2994655\"><code>4cdaacf</code></a> fix(parse): Hand-roll attribute parsing (<a href=\"https://github-redirect.dependabot.com/fb55/css-what/issues/503\">#503</a>)</li>\n<li><a href=\"https://github.com/fb55/css-what/commit/8c5eda2ca238fac3ed2fcf97785b575d3b5d95ba\"><code>8c5eda2</code></a> build(deps-dev): bump <code>@​types/node</code> from 15.3.0 to 15.6.1 (<a href=\"https://github-redirect.dependabot.com/fb55/css-what/issues/501\">#501</a>)</li>\n<li><a href=\"https://github.com/fb55/css-what/commit/9eb321e7063eb4fa644fff4a769225ba81ebd8d5\"><code>9eb321e</code></a> build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 4.24.0 to 4.25.0 (<a href=\"https://github-redirect.dependabot.com/fb55/css-what/issues/498\">#498</a>)</li>\n<li><a href=\"https://github.com/fb55/css-what/commit/9f901b2828f452a558b6a8f84ea1dde0696d47f3\"><code>9f901b2</code></a> build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 4.24.0 to 4.25.0 ...</li>\n<li><a href=\"https://github.com/fb55/css-what/commit/bc00726e2752d37d7d6201016c9f0559922a49d4\"><code>bc00726</code></a> build(deps-dev): bump eslint from 7.26.0 to 7.27.0 (<a href=\"https://github-redirect.dependabot.com/fb55/css-what/issues/499\">#499</a>)</li>\n<li><a href=\"https://github.com/fb55/css-what/commit/0d6190c39645e9e70fddccd67ff3ffd3520ce622\"><code>0d6190c</code></a> build(deps-dev): bump typescript from 4.2.4 to 4.3.2 (<a href=\"https://github-redirect.dependabot.com/fb55/css-what/issues/502\">#502</a>)</li>\n<li><a href=\"https://github.com/fb55/css-what/commit/de688259ebe618c10c718593f077a8712ac599fa\"><code>de68825</code></a> build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 4.23.0 to 4.24.0 (<a href=\"https://github-redirect.dependabot.com/fb55/css-what/issues/494\">#494</a>)</li>\n<li><a href=\"https://github.com/fb55/css-what/commit/2f5bfac90806f6df40043cda53d607eadca8ec52\"><code>2f5bfac</code></a> build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> (<a href=\"https://github-redirect.dependabot.com/fb55/css-what/issues/493\">#493</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/fb55/css-what/compare/v5.0.0...v5.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=css-what&package-manager=npm_and_yarn&previous-version=5.0.0&new-version=5.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/vscode-pyright/css-what-5.0.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c0ac254a19ac2908a6",
    "number": 1958,
    "body": "",
    "head_branch": "fixe-type-concepts-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixing wrong type `int` to `str` of type-concepts.md (#1958)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c1ac254a19ac2908a7",
    "number": 1937,
    "body": "Rollup of:\r\n\r\n- Typecheck all JS files (and fix the missing `exclude` statements that `extends` does not bring). This allows CI to check our build scripts and to ensure VS Code uses the right types.\r\n- Enable webpack caching for development builds.\r\n- Add zip/egg file support; egg and zip files are treated as directories and loaded on the fly, fixing libraries like `transformers` when installed via `conda`.\r\n- Clean up some unused dependencies.",
    "head_branch": "pylance-60",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Typecheck JS, webpack caching, zip/egg support (#1937)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c1ac254a19ac2908a8",
    "number": 1923,
    "body": "Bumps [ws](https://github.com/websockets/ws) from 7.4.5 to 7.4.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/websockets/ws/releases\">ws's releases</a>.</em></p>\n<blockquote>\n<h2>7.4.6</h2>\n<h1>Bug fixes</h1>\n<ul>\n<li>Fixed a ReDoS vulnerability (00c425ec).</li>\n</ul>\n<p>A specially crafted value of the <code>Sec-Websocket-Protocol</code> header could be used\nto significantly slow down a ws server.</p>\n<pre lang=\"js\"><code>for (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {\n  const value = 'b' + ' '.repeat(length) + 'x';\n  const start = process.hrtime.bigint();\n<p>value.trim().split(/ *, */);</p>\n<p>const end = process.hrtime.bigint();</p>\n<p>console.log('length = %d, time = %f ns', length, end - start);\n}\n</code></pre></p>\n<p>The vulnerability was responsibly disclosed along with a fix in private by\n<a href=\"https://github.com/robmcl4\">Robert McLaughlin</a> from University of California, Santa Barbara.</p>\n<p>In vulnerable versions of ws, the issue can be mitigated by reducing the maximum\nallowed length of the request headers using the <a href=\"https://nodejs.org/api/cli.html#cli_max_http_header_size_size\"><code>--max-http-header-size=size</code></a>\nand/or the <a href=\"https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener\"><code>maxHeaderSize</code></a> options.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/websockets/ws/commit/f5297f7090f6a628832a730187c5b3a06a247f00\"><code>f5297f7</code></a> [dist] 7.4.6</li>\n<li><a href=\"https://github.com/websockets/ws/commit/00c425ec77993773d823f018f64a5c44e17023ff\"><code>00c425e</code></a> [security] Fix ReDoS vulnerability</li>\n<li><a href=\"https://github.com/websockets/ws/commit/990306d1446faf346c76452409a4c11455690514\"><code>990306d</code></a> [lint] Fix prettier error</li>\n<li><a href=\"https://github.com/websockets/ws/commit/32e3a8439b7c8273b44fe1adb5682f529e34d0ba\"><code>32e3a84</code></a> [security] Remove reference to Node Security Project</li>\n<li><a href=\"https://github.com/websockets/ws/commit/8c914d18b86a7d1408884d18eeadae0fa41b0bb5\"><code>8c914d1</code></a> [minor] Fix nits</li>\n<li><a href=\"https://github.com/websockets/ws/commit/fc7e27d12ad0af90ce05302afc85c292024000b4\"><code>fc7e27d</code></a> [ci] Test on node 16</li>\n<li><a href=\"https://github.com/websockets/ws/commit/587c201bfc22c460658ca304d23477fc7ebd2a60\"><code>587c201</code></a> [ci] Do not test on node 15</li>\n<li>See full diff in <a href=\"https://github.com/websockets/ws/compare/7.4.5...7.4.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ws&package-manager=npm_and_yarn&previous-version=7.4.5&new-version=7.4.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/pyright-internal/ws-7.4.6",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump ws from 7.4.5 to 7.4.6 in /packages/pyright-internal (#1923)\n\nBumps [ws](https://github.com/websockets/ws) from 7.4.5 to 7.4.6.\r\n- [Release notes](https://github.com/websockets/ws/releases)\r\n- [Commits](https://github.com/websockets/ws/compare/7.4.5...7.4.6)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c2ac254a19ac2908a9",
    "number": 1918,
    "body": "…lready analyzed it and the file contents are the same as before. This restores the behavior that existed prior to this change: https://github.com/microsoft/pyright/commit/2d90df325fd9ffb6bd72e727ec59039b50cdf537#diff-32dc01623d13bd967864d6e0b14c73f5e490534e7bb337a1d182169b8c670a79R426.",
    "head_branch": "erictr/openFile",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Avoid reanalyzing a file when it is opened in the editor if we have already analyzed it and the file contents are the same as before. This restores the behavior that existed prior to this change: https://github.com/microsoft/pyright/commit/2d90df325fd9ffb6bd72e727ec59039b50cdf537#diff-32dc01623d13bd967864d6e0b14c73f5e490534e7bb337a1d182169b8c670a79R426. (#1918)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c3ac254a19ac2908aa",
    "number": 1913,
    "body": "Rollup of:\r\n\r\n- Drop unused parse trees in indexing step to save memory. We do this already for library code, but can do the same for workspace files opened only for indexing.\r\n- Small refactorings to support pylance changes.",
    "head_branch": "pylance-59",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Drop unused parse trees in indexing step, small refactorings (#1913)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c4ac254a19ac2908ab",
    "number": 1905,
    "body": "I'm working on the type completeness dashboard and hit https://github.com/nodejs/node/issues/6379 (and associated issues) when capturing pyright's output.\r\n\r\nAvoid using `process.exit` to stop the process, instead exiting gracefully with the exit code set. `process.exit` synchronously exits the process, but doesn't flush `console`'s internal buffers or stdout. This can lead to a truncated output, especially when the output is large (which is the case with `--verifytypes` and many libraries). There isn't a good way to force a flush (besides calling undocumented functions to put stdout into blocking mode), so avoiding `process.exit` is a better method and fits with the NodeJS docs that say `process.exit` is not recommended.\r\n\r\nAfter #1822 fixed the file watcher hang, this should be safe to do, but does rely on all promises resolving before the process can exit.",
    "head_branch": "no-process-exit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't use process.exit in CLI to prevent truncated stdout (#1905)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c5ac254a19ac2908ac",
    "number": 1895,
    "body": "My first attempt with typescript. Rather hacky but it's better than nothing. \r\nOn Linux `.`, resolves to the pyright script directory, $PWD returns where editor(vim) is executed.\r\nhttps://github.com/microsoft/pylance-release/issues/1312\r\nhttps://github.com/microsoft/pylance-release/issues/1301",
    "head_branch": "pylance-1301",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c6ac254a19ac2908ad",
    "number": 1883,
    "body": "Rollup of:\r\n\r\n- Filter auto-imports more strictly in some cases (like TypeScript) to reduce the number of completions returned. Matches require at least the first character to match before fuzzy matching is applied.\r\n- Add support for tables in docstrings.\r\n- Clean up unused code in FS abstraction.\r\n- Add test cases for new `py.typed` behavior.",
    "head_branch": "pylance-58",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Filter auto-imports like TS, docstring tables, cleanups, testing (#1883)\n\nRollup of:\r\n\r\n- Filter auto-imports more strictly in some cases (like TypeScript) to reduce the number of completions returned. Matches require at least the first character to match before fuzzy matching is applied.\r\n- Add support for tables in docstrings.\r\n- Clean up unused code in FS abstraction.\r\n- Add test cases for new `py.typed` behavior.\r\n\r\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c7ac254a19ac2908ae",
    "number": 1877,
    "body": "This PR adds fairly minimal support for dynamically evaluated `__all__` values, specifically when using list comprehensions.\n\nExample:\n```python\n__all__ = [x for x in dir() if not x.startswith(\"_\")]\n```\n\n# Justification\n\nI am working on a project that pylance takes _forever_ to update the type annotations, and frequently stops giving me code suggestions when working with sympy. I suspect its because it has a lot of `*` imports. However, it's not entirely feasible for me to manually add `__all__` to all the modules.\n\nThis will allow me to keep using `*` imports, but also limit the import tree, without having to waste time updating `__all__` manually, or setting up some tool to do it automatically. This approach also does not allow arbirary code execution, since the evaluation of the list comprehension is done analytically, not by actually executing any python code.\n\n\n### Why draft?\n\nI'm looking for feedback before I do any more work on this. Do I have the right approach here? Does pyright already have an expression evaluator or something similar that I should be using instead? Should I move `createFilterFunction` out of the binder?\n\nWhat should I do for tests? I added a couple, but I had to export a field that was private.\n\n\n### Additional Context\n\nFixes:\n- https://github.com/microsoft/pylance-release/issues/289\n- https://github.com/microsoft/pylance-release/issues/852\n- https://github.com/microsoft/pylance-release/issues/1032\n\nRelated:\n- https://github.com/microsoft/pylance-release/issues/980﻿\n\n\n",
    "head_branch": "dynamic-dunder-all",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c8ac254a19ac2908af",
    "number": 1876,
    "body": "Supercedes #1783.",
    "head_branch": "signature-help-index",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use a friendlier value for marking signatures as unhighlighted (#1876)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112c9ac254a19ac2908b0",
    "number": 1874,
    "body": "There are stubs in typeshed that are py.typed on PyPI, such as `click`, a dependency of `black`. If pyright is run where python has that in its site-packages (for me, my global interpreter where my package manager has installed `black`), those imports get resolved instead of the ones in typeshed itself, causing resolution problems.\r\n\r\nIf the execution environment is typeshed itself, then we can skip `py.typed` check we added previously, restoring the old behavior.\r\n\r\nWe don't need to do anything special for stubPath (aka typings), as the first part of this function already checks there first and returns early; this means we aren't regressing for that use case. But, we can't set typeshed as a stubPath (aka typings) because of its unique folder structure; we rely on the typeshed resolution to resolve imports when working on typeshed itself.\r\n\r\nThis at least restores the old behavior for this one special case; I don't expect there to be any more. Another approach may be to create a \"never call python for its search paths\" mode, but that's going to be more invasive and prevent things like source mapping when working on typeshed (which may not be _that_ bad).",
    "head_branch": "typeshed-pytyped",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't prefer py.typed libraries when the execution environment is typeshed (#1874)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112caac254a19ac2908b1",
    "number": 1866,
    "body": "Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.7.6 to 4.7.7.\r\n- [Release notes](https://github.com/wycats/handlebars.js/releases)\r\n- [Changelog](https://github.com/handlebars-lang/handlebars.js/blob/master/release-notes.md)\r\n- [Commits](https://github.com/wycats/handlebars.js/compare/v4.7.6...v4.7.7)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>",
    "head_branch": "dependabot/npm_and_yarn/handlebars-4.7.7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112cbac254a19ac2908b2",
    "number": 1862,
    "body": "Rollup of:\r\n\r\n- Prefer `py.typed` libraries over typeshed (#1764, https://github.com/microsoft/pylance-release/issues/1197).\r\n- Minor helper cleanup.",
    "head_branch": "pylance-57",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prefer py.typed libraries over typeshed, minor helper cleanups (#1862)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112ccac254a19ac2908b3",
    "number": 1860,
    "body": "Rollup of:\r\n\r\n- Update dependencies. Minimum VS Code has been set to v1.54, to match the Python extension. Prettier also updated, fixing a number of formatting odities.\r\n- Update to targeting ES2019. We target Node 12+, so don't need to target lower than that. See: https://github.com/microsoft/TypeScript/wiki/Node-Target-Mapping (Presumably, this will improve performance and lower emitted code size.)\r\n- Fix `.git` folders not being ignored in FS watching events.\r\n- Ensure paths from `sys.path` are normalized, fixing pywin32.\r\n- Enable `noImplicitReturns` in the base tsconfig.",
    "head_branch": "pylance-56",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update deps, better ignore .git, bump to ES2019, fix case problem (#1860)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112cdac254a19ac2908b4",
    "number": 1828,
    "body": "Syncing changes to these helpers, now they actually assert things to the TypeScript compiler (which makes them much more useful).",
    "head_branch": "pylance-55",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update debug helpers (#1828)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112ceac254a19ac2908b5",
    "number": 1826,
    "body": "Rollup of:\r\n\r\n- Add a binding/parsing mode that processes module-level symbols only (for indexing).\r\n- Improve perf of `normalizeSlashes` (avoid replace call when string is normalized).\r\n- Remove `clean-webpack-plugin` (webpack 5 does this natively).",
    "head_branch": "pylance-54",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Performance improvements, remove dep (#1826)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112cfac254a19ac2908b6",
    "number": 1822,
    "body": "Rollup of:\r\n\r\n- Performance improvements to module doc strings.\r\n- Eliminate upfront docstring \"decoding\" (this is done by each provider during docstring conversion).\r\n- Eliminate duplicated docstring code (old \"decode\" function was 3x faster than the one in the docstring converter, so delete the latter).\r\n- Fix concatenated strings in docstrings.\r\n- Don't start the config file watcher when not in watch mode (fixes jest hangs).\r\n- Fix a source mapper infinite recursion bug.\r\n- Improve performance for auto-imports (move cancellation check outside very tight loop, precalculate completion kind).",
    "head_branch": "pylance-53",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Performance improvements, fix config file watching (#1822)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112cfac254a19ac2908b7",
    "number": 1819,
    "body": "…minimum (and optionally the maximum) version supported by each module in stdlib.",
    "head_branch": "erictr/typeshed_versions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112d0ac254a19ac2908b8",
    "number": 1816,
    "body": "…thon 3.10, reflecting a recent decision by the Python steering committee.",
    "head_branch": "erictr/pep563_default",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Removed PEP 563 (deferred type annotation) behavior as default for Py… (#1816)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112d2ac254a19ac2908b9",
    "number": 1813,
    "body": "…, etc.) from binder to checker for performance reasons.",
    "head_branch": "erictr/string_errors_optimization",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Moved checks for string literal errors (unsupported escape characters, etc.) from binder to checker for performance reasons. (#1813)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112d2ac254a19ac2908ba",
    "number": 1812,
    "body": "… the common cases (no format string and no escape characters) using a fast path.",
    "head_branch": "erictr/string_unesecape_optimization",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improved performance of string token value unescape logic by handling the common cases (no format string and no escape characters) using a fast path. (#1812)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112d3ac254a19ac2908bb",
    "number": 1811,
    "body": "",
    "head_branch": "add-match-case",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add match and case keywords to completion provider (#1811)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112d4ac254a19ac2908bc",
    "number": 1810,
    "body": "Forcing all logging to stderr lets me inherit stderr in `pyright-action` (so they are logged), but still capture the JSON summary over stdout to process.",
    "head_branch": "cli-stderr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Log to stderr in outputjson mode (#1810)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112d5ac254a19ac2908bd",
    "number": 1807,
    "body": "…hen they contain classes or class instances that are apparently the same type but internally appear different because they are \"pseudo-generic\". Pseudo-generic classes are those that have no type annotations in the `__init__` method and are treated internally as generics to improve type inference.",
    "head_branch": "erictr/pseudo-generic",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug in type inference of dictionary, list and set expressions when they contain classes or class instances that are apparently the same type but internally appear different because they are \"pseudo-generic\". Pseudo-generic classes are those that have no type annotations in the `__init__` method and are treated internally as generics to improve type inference. (#1807)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112d7ac254a19ac2908be",
    "number": 1803,
    "body": "Rollup of:\r\n\r\n- Make signature help docstring consistent with hover/completion.\r\n- Improve formatting of tables and links in docstrings.\r\n- Improve allocation performance of auto-import completions.",
    "head_branch": "pylance-52",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tooltip improvements, auto-import allocation improvement (#1803)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112d8ac254a19ac2908bf",
    "number": 1791,
    "body": "…y` files so implicit import of submodule \"a\" is performed only if it's not a multi-part module path.",
    "head_branch": "erictr/implicit_import",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Changed binder logic for \"from .a import b\" statements in `__init__.p… (#1791)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112d9ac254a19ac2908c0",
    "number": 1789,
    "body": "",
    "head_branch": "pylance-51",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update dependencies (#1789)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112daac254a19ac2908c1",
    "number": 1783,
    "body": "LSP 3.16 (current) specification says that `SignatureHelp.activeParameter` should be `uinteger`. (https://microsoft.github.io/language-server-protocol/specifications/specification-3-16/#textDocument_signatureHelp) But `pyright-langserver` returns `-1` in certain situation. It makes Rust lsp-types break. (https://docs.rs/lsp-types/0.89.0/lsp_types/struct.SignatureHelp.html#structfield.active_parameter)",
    "head_branch": "uinteger-active-parameter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112dbac254a19ac2908c2",
    "number": 1781,
    "body": "Assigning a generator to a slice like this isn't well-defined; use a list instead.\r\n\r\n(Updating to match the core extension's isolated runner.)",
    "head_branch": "pylance-50",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix sys.path script for pypy (#1781)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112dbac254a19ac2908c3",
    "number": 1776,
    "body": "Through profiling, I found that we were calling python 4 times at startup. This was due to a couple of issues:\r\n\r\n- We wanted to log the search paths (for helping debug users), but called out to python to get them directly (distinctly from the import resolver). Instead, don't do this, and print the actual set of import roots later (per execution environment), which is what we actually want to know.\r\n- The file watcher setup functions were invalidating the import cache. I have no idea why; the setup functions are called directly after a new import resolver is constructed. The import resolver's caches are certainly empty.\r\n- The ensure partial stub function was run on setConfig, but then all callers of setConfig immediately created a new import resolver, leading to an extra python call as the ensure function fetches search paths. (It's also dubious that the partial stubs are even ready in the old code, if the import resolver was created _after_ the ensure call; @heejaechang I'm curious if you think this is alright in the new code.)\r\n\r\nNow, we only call twice, once to get the default interpreter's version, once to get the import roots. Those are in entirely different parts of the code, so is less simple to fix (but would be nice later).",
    "head_branch": "fix-partial-and-invalidations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make fewer calls to python at config time, print actual import roots (#1776)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112dcac254a19ac2908c4",
    "number": 1775,
    "body": "Through profiling, I found that these two branches took a significant number of time to build, mainly due to printing types. When their rules aren't enabled, there's no reason to spend time printing them, so don't.\r\n\r\nThis mirrors a couple of other checks in the type evaluator that do the same optimization.",
    "head_branch": "skip-diags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Skip building two diagnostics when their rules are disabled (#1775)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112ddac254a19ac2908c5",
    "number": 1774,
    "body": "Through profiling, I found that these functions accounted for more than 75% of the memory allocations when running on a test application. Both build strings via `+=`. Rewrite them to push into an array instead and `join('')` at the end, which is much faster overall. Presumably v8 knows to preallocate the output to the correct size when it sees it's joining an array of strings.\r\n\r\nThis halves the time spent in GC from 11% to around 5% of total CPU time.\r\n\r\n(There are further tweaks that could be made to reuse these arrays and allocate less, but this fixes the great bulk of the problem.)",
    "head_branch": "string-garbage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Optimize getUnescapedString and _skipToEndOfStringLiteral (#1774)\n\nThis halves the time spent in GC from 11% to around 5% of total CPU time."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112deac254a19ac2908c6",
    "number": 1773,
    "body": "",
    "head_branch": "erictr/dataclass_transforms",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Implemented first cut at generalized support for dataclass transforms. (#1773)\n\n* Implemented first cut at generalized support for dataclass transforms.\r\n\r\n* Updated spec.\r\n\r\n* Updated spec to include specific instructions on how to modify attrs and pydantic to incorporate support for this functionality. Renamed spec from \".txt\" to \".md\" so it is rendered better in github.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112dfac254a19ac2908c7",
    "number": 1769,
    "body": "Bumps [ssri](https://github.com/npm/ssri) from 6.0.1 to 6.0.2.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/npm/ssri/blob/v6.0.2/CHANGELOG.md\">ssri's changelog</a>.</em></p>\n<blockquote>\n<h2><a href=\"https://github.com/zkat/ssri/compare/v6.0.1...v6.0.2\">6.0.2</a> (2021-04-07)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li>backport regex change from 8.0.1 (<a href=\"https://github.com/zkat/ssri/commit/b30dfdb\">b30dfdb</a>), closes <a href=\"https://github-redirect.dependabot.com/zkat/ssri/issues/19\">#19</a></li>\n</ul>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/ssri/commit/b7c8c7c61db89aeb9fbf7596c0ef17071bc216ef\"><code>b7c8c7c</code></a> chore(release): 6.0.2</li>\n<li><a href=\"https://github.com/npm/ssri/commit/b30dfdb00bb94ddc49a25a85a18fb27afafdfbb1\"><code>b30dfdb</code></a> fix: backport regex change from 8.0.1</li>\n<li>See full diff in <a href=\"https://github.com/npm/ssri/compare/v6.0.1...v6.0.2\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~nlf\">nlf</a>, a new releaser for ssri since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ssri&package-manager=npm_and_yarn&previous-version=6.0.1&new-version=6.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/ssri-6.0.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump ssri from 6.0.1 to 6.0.2 (#1769)\n\nBumps [ssri](https://github.com/npm/ssri) from 6.0.1 to 6.0.2.\r\n- [Release notes](https://github.com/npm/ssri/releases)\r\n- [Changelog](https://github.com/npm/ssri/blob/v6.0.2/CHANGELOG.md)\r\n- [Commits](https://github.com/npm/ssri/compare/v6.0.1...v6.0.2)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112e0ac254a19ac2908c8",
    "number": 1760,
    "body": "Rollup of:\r\n\r\n- Remove duplicate yield keyword in completions\r\n- Source mapper improvements (for more complicated stub layouts like numpy)\r\n- Improve performance of import name creation in import resolver by 20%",
    "head_branch": "pylance-49",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove duplicate yield keyword, source mapper improvements (#1760)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112e1ac254a19ac2908c9",
    "number": 1749,
    "body": "Since https://github.com/microsoft/pyright/commit/ba901d1449fceb0642934bfd1993e79ed0fb136d#diff-c3f0fa903325059f6e7dda1116458aafa72061ac3d1a51ddfd077a5dc0801030R394, the `--outputjson` result schema has changed.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update command line directions with new output format (#1749)\n\nSince https://github.com/microsoft/pyright/commit/ba901d1449fceb0642934bfd1993e79ed0fb136d#diff-c3f0fa903325059f6e7dda1116458aafa72061ac3d1a51ddfd077a5dc0801030R394, the `--outputjson` result schema has changed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112e2ac254a19ac2908ca",
    "number": 1743,
    "body": "Rollup of:\r\n\r\n- Fix native stub extension marking replaced files as native.\r\n- Fix __all__ performance optimization for py.typed libraries\r\n- Trim tooltips\r\n- Add a VS-specific fix for completion insertion.",
    "head_branch": "pylance-48",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Native stub fix, py.typed __all__ fix, trim tooltips, VS workaround (#1743)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112e3ac254a19ac2908cb",
    "number": 1735,
    "body": "…file is apparently importing from itself but intends instead to import from one of its submodules.",
    "head_branch": "erictr/submodule_import",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added support for an import edge case where a module's `__init__.py` file is apparently importing from itself but intends instead to import from one of its submodules. (#1735)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112e3ac254a19ac2908cc",
    "number": 1732,
    "body": "…g it to return a bad response when the insertion point was immediately after a comma and a call expression preceded the comma.",
    "head_branch": "erictr/signature_help",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug in signature help provider where its heuristics were causing it to return a bad response when the insertion point was immediately after a comma and a call expression preceded the comma. (#1732)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112e4ac254a19ac2908cd",
    "number": 1726,
    "body": "It currently searches from the current working directory all the way up the folder hierarchy. This makes sense only for a command-line tool, not for a language server. The latter already knows the project root, and we should look only in that directory for a config file.",
    "head_branch": "erictr/find_config_file",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Changed the logic that searches for a config file. It currently searches from the current working directory all the way up the folder hierarchy. This makes sense only for a command-line tool, not for a language server. The latter already knows the project root, and we should look only in that directory for a config file. (#1726)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112e6ac254a19ac2908ce",
    "number": 1708,
    "body": "Rollup of:\r\n\r\n- Don't fill out function bodies in override completions in stub files. Stubs shouldn't have statements other than `...`.\r\n- Fix partial stub mapping for open files; some features weren't working properly.\r\n- Ensure partial stubs are scanned early enough (at config setup time).\r\n- Clean up perf data that we're no longer using.\r\n- Expose some import resolver methods as protected.\r\n- Update the completion \"extension\" API.",
    "head_branch": "pylance-47",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve override completion, partial stub fixes, perf data cleanup, update extension interface (#1708)\n\nRollup of:\r\n\r\n- Don't fill out function bodies in override completions in stub files. Stubs shouldn't have statements other than ....\r\n- Fix partial stub mapping for open files; some features weren't working properly.\r\n- Ensure partial stubs are scanned early enough (at config setup time).\r\n- Clean up perf data that we're no longer using.\r\n- Expose some import resolver methods as protected.\r\n- Update the completion \"extension\" API.\r\n\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112e7ac254a19ac2908cf",
    "number": 1707,
    "body": "Changed 'ane' to and ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update configuration.md (#1707)\n\nFixing a typo in \"extraPaths\" of configuration.md document"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112e8ac254a19ac2908d0",
    "number": 1699,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix typo in settings documentation. (#1699)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112e9ac254a19ac2908d1",
    "number": 1698,
    "body": "For https://github.com/microsoft/pylance-release/issues/1102.\r\n\r\n`realpath` can fail similarly to `stat` (because it's largely a stat wrapper). Wrap it like we do `stat` to ensure we don't fail to `realpath` a broken link.",
    "head_branch": "safe-realpath",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make calls to realpath safe, like stat (#1698)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112eaac254a19ac2908d2",
    "number": 1685,
    "body": "Rollup of:\r\n\r\n- Merge function doc paths between hover/completion/signature help.\r\n- Add perf tracking for completion extension.\r\n- Remember conflicted files in FS for doc mapping.",
    "head_branch": "pylance-46",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge function doc paths, add perf tracking for completion extension, remember conflicted files for doc mapping (#1685)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112ebac254a19ac2908d3",
    "number": 1662,
    "body": "As of\nhttps://github.com/tornadoweb/tornado/commit/354d8c0ddac3809b2ee5528c5e58285f1d90053b\nin v6.1, no other `Future` implementation has been available, and as of\nhttps://github.com/tornadoweb/tornado/commit/ac13ee5f64cd3bceb1628dbcbbfc77445358038f\n`asyncio.Future` has been preferred. Updating the type stubs to match.",
    "head_branch": "update-tornado-stubs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112ecac254a19ac2908d4",
    "number": 1661,
    "body": "See https://github.com/microsoft/pyright/discussions/1342#discussioncomment-502941 for more context. This enables me to see diagnostic output like:\r\n\r\n``` sh\r\nerror: Expression of type \"tornado.concurrent.Future[None]\" cannot be assigned to declared type \"asyncio.futures.Future[None]\"\r\n```\r\nrather than the less helpful previous output:\r\n\r\n``` sh\r\nerror: Expression of type \"Future[None]\" cannot be assigned to declared type \"Future[None]\"\r\n```\r\nNot sure where at this point to add tests or to add the parsing of the flag (as a command-line or `pyrightconfig.json` option?) but all feedback very much appreciated!",
    "head_branch": "absolute-type-names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112edac254a19ac2908d5",
    "number": 1655,
    "body": "Updates all of the dependencies, including updating our LSP libraries to their latest stable versions (been holding off until now).\r\n\r\nThe minimum supported VS Code version is now 1.52 (two months ago).",
    "head_branch": "pylance-45",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update dependencies (#1655)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112eeac254a19ac2908d6",
    "number": 1653,
    "body": "For https://github.com/microsoft/pylance-release/issues/1070.\r\n\r\nThis `_matchFiles` function recurses on `getFileSystemEntries`. When we changed this to follow symlinks (plus the bugfix to actually handle directories), this function now has the potential to keep going searching for source files to match forever.\r\n\r\nBefore recursing, check the realpath of the directory and skip if we're already visiting it.\r\n\r\nAs far as I'm aware, this is the only use of `getFileSystemEntries` which actually walks down the results recursively; the uses in the import resolver only ever go as far as any one import requires (which is bounded). `_matchFiles` is what lists out the files to check in workspace mode, so is not bounded.\r\n\r\nWhile here, change a `try stat catch` block to a `tryStat`; the catch is likely to mask actual exceptions and this was the only place I didn't change to `tryStat`.\r\n\r\nIn the future, it'd be good to add a specific walker which does this work for us, but this is the only place in pyright that we do this. (Pylance's indexer may need this as well.)",
    "head_branch": "match-files-recursion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Avoid recursing infinitely in _matchFiles (#1653)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112efac254a19ac2908d7",
    "number": 1645,
    "body": "Rollup of:\r\n\r\n- Add user index results back to quick fixes only.\r\n- Expose `formatImportName` as protected for use in ImportResolver subclasses",
    "head_branch": "pylance-44",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add user index results to quick fixes, expose method from ImportResolver for use in subclasses (#1645)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f0ac254a19ac2908d8",
    "number": 1637,
    "body": "Rollup of:\r\n\r\n- Include all items from `__all__` for auto-imports (even lowercased). This filter was already a heuristic but to some was inconsistent.\r\n- Fix completions for members in stubs; the completion provider only offered symbols that were exported from the stub (versus things actually accessible internally).\r\n- Pass the log tracker to the background analysis.\r\n- Add a horizontal line to the hover tooltip, matching the completion tooltip.",
    "head_branch": "pylance-43",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add lowercased items from __all__ in auto-imports, fix completion in stubs, log tracker passing (#1637)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f0ac254a19ac2908d9",
    "number": 1636,
    "body": "…perly handles properties.",
    "head_branch": "erictr/completion",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improved completion provider's handling of method overrides so it pro… (#1636)\n\n* Improved completion provider's handling of method overrides so it properly handles properties.\r\n\r\n* Incorporated PR feedback.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f1ac254a19ac2908da",
    "number": 1632,
    "body": "Added new top-level \"extraPaths\" config option for pythonconfig.json that specifies the default extraPaths to use when no execution environments apply to a file. Changed settings logic to use the new default extraPaths mechanism for the \"python.analysis.extraPaths\" setting.",
    "head_branch": "erictr/defaultExtraPaths",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added new top-level \"extraPaths\" config option for pythonconfig.json that specifies the default extraPaths to use when no execution environments apply to a file. Changed settings logic to use the new default extraPaths mechanism for the \"python.analysis.extraPaths\" setting. (#1632)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f2ac254a19ac2908db",
    "number": 1627,
    "body": "Calls to this function only happen either on settings update (we do a bunch of work scanning files for other reasons that are no slower than calling Python), or in the import resolver (which has a cache for this call explicitly). Remove this cache so that editable installs modified while the LS is running are properly handled.\r\n\r\nLast thing to finish https://github.com/microsoft/pylance-release/issues/78.",
    "head_branch": "remove-interp-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove global search path cache (#1627)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f3ac254a19ac2908dc",
    "number": 1622,
    "body": "For https://github.com/microsoft/pylance-release/issues/1031.\r\n\r\nFixes a copy/paste error in https://github.com/microsoft/pyright/commit/3ad0555d44b8377fd7afe2e9ab7c1bc910ec7588.",
    "head_branch": "fix-dirent-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix getFileSystemEntriesFromDirEntries for directory symlinks (#1622)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f4ac254a19ac2908dd",
    "number": 1615,
    "body": "Rollup of:\r\n\r\n- Make auto-import \"additional text edits\" lazy, if the client supports it. Building these edits took a significant amount of time when many auto-import candidates are present.\r\n- Handle path mapping to files in partial stub folders; navigation would previously jump to nonexistent files in the merged filesystem, but now jump to the real file in its true location.\r\n- Split overloads in hover, matching the tooltip that already exists in completions.\r\n- Add an extra newline in overload tooltips, if the line would be too long.\r\n- Disable use of user code indexer results for auto-imports while we test changed (only active in Pylance).",
    "head_branch": "pylance-42",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make auto-import edits lazy, handle partial path mapping, split overloads in hover, disable user index results for auto imports temporarily (#1615)\n\nRollup of:\r\n\r\n- Make auto-import \"additional text edits\" lazy, if the client supports it. Building these edits took a significant amount of time when many auto-import candidates are present.\r\n- Handle path mapping to files in partial stub folders; navigation would previously jump to nonexistent files in the merged filesystem, but now jump to the real file in its true location.\r\n- Split overloads in hover, matching the tooltip that already exists in completions.\r\n- Add an extra newline in overload tooltips, if the line would be too long.\r\n- Disable use of user code indexer results for auto-imports while we test changed (only active in Pylance).\r\n\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f5ac254a19ac2908de",
    "number": 1614,
    "body": "There were still a few places in the code that didn't handle symlinks (via other readdirEntries variants), clean those up.\r\n\r\nSince the \"try/catch stat and do something\" is done so often, add a helper for it and replace all of the easy cases with it.",
    "head_branch": "more-symlink",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix more symlink cases, add tryStat helper to clean up many try/catch stat calls (#1614)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f6ac254a19ac2908df",
    "number": 1607,
    "body": " Added support for symbolic links in import resolver both for resolution of \".pth\" files and for imports themselves.",
    "head_branch": "erictr/symlink2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added support for symbolic links in import resolver both for resolution of \".pth\" files and for imports themselves. (#1607)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f7ac254a19ac2908e0",
    "number": 1606,
    "body": " Added support for symbolic links in import resolver both for resolution of \".pth\" files and for imports themselves.",
    "head_branch": "erictr/symlink1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f8ac254a19ac2908e1",
    "number": 1600,
    "body": "Rollup of:\r\n\r\n- Cache filename to module name mapping.\r\n- Fix crash in docstring mapping when the source is a function but the stub is not.\r\n- Fix HTML escaping happening inside code blocks in docstrings.",
    "head_branch": "pylance-41",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cache filename to module name, fix crash on function with stub as differing type, fix HTML escaping in code blocks (#1600)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112f9ac254a19ac2908e2",
    "number": 1599,
    "body": "",
    "head_branch": "erictr/fs_cache2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added file system caching to import resolver for performance reasons. (#1599)\n\n* Added file system caching to import resolver for performance reasons.\r\n\r\n* PR feedback\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112faac254a19ac2908e3",
    "number": 1590,
    "body": "This change significantly improves import resolution performance for large projects, especially those that use namespace modules internally. Namespace modules require full searches of all import resolution paths.\r\n\r\nMy team's code base consists of ~250K lines of code in over 700 files. The \"Resolve Imports\" time for analysis consumed about 2 sec several months ago, but it has ballooned to over 6 sec as we added bug fixes for namespace import resolutions.\r\n\r\nThis change gains back all of the perf loss and then some, resulting in a 30% overall perf improvement for analysis times.\r\n\r\nPrior to change:\r\n----------------\r\n    Searching for source files\r\n    Found 712 source files\r\n    0 errors, 0 warnings, 0 infos \r\n    Completed in 20.721sec\r\n\r\n    Analysis stats\r\n    Total files analyzed: 1426\r\n\r\n    Timing stats\r\n    Find Source Files:    0.17sec\r\n    Read Source Files:    0.56sec\r\n    Tokenize:             0.48sec\r\n    Parse:                0.94sec\r\n    Resolve Imports:      6.25sec\r\n    Bind:                 1sec\r\n    Check:                10.04sec\r\n    Detect Cycles:        0.65sec\r\n\r\n\r\nAfter change:\r\n-------------\r\n    Searching for source files\r\n    Found 712 source files\r\n    0 errors, 0 warnings, 0 infos \r\n    Completed in 15.645sec\r\n\r\n    Analysis stats\r\n    Total files analyzed: 1426\r\n\r\n    Timing stats\r\n    Find Source Files:    0.17sec\r\n    Read Source Files:    0.64sec\r\n    Tokenize:             0.47sec\r\n    Parse:                0.95sec\r\n    Resolve Imports:      1.28sec\r\n    Bind:                 0.93sec\r\n    Check:                9.85sec\r\n    Detect Cycles:        0.65sec\r\n",
    "head_branch": "erictr/fs_cache",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112fbac254a19ac2908e4",
    "number": 1580,
    "body": "…is within a function that has no input parameter annotations.",
    "head_branch": "erictr/elif_heuristic",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added a heruistic to disable the \"implied else\" analysis if the code … (#1580)\n\n* Added a heruistic to disable the \"implied else\" analysis if the code is within a function that has no input parameter annotations.\r\n\r\n* Small readability improvement.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112fbac254a19ac2908e5",
    "number": 1570,
    "body": "Rollup of:\r\n\r\n- Ignore files with `.git` extension in file watching; these are created by some git tools/VS Code extensions and cause re-analysis.\r\n- Inherit method docs from parent classes.\r\n- Improve logging, perf tracing, disable in debug mode.\r\n- Support partial stubs, as defined in PEP 561.",
    "head_branch": "pylance-40",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ignore .git files, doc string inherit, logging, partial stubs (#1570)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112fcac254a19ac2908e6",
    "number": 1566,
    "body": "## Notes\r\n\r\nIssue: somehow related to https://github.com/microsoft/pyright/issues/1395\r\n\r\nFile paths are relative to be consistent with other reports.\r\n\r\n## Changes\r\n\r\nEnhancement: `pyright --verifytypes` output shows file path\r\nEnhancement: `pyright --verifytypes` output shows node range\r\nBugfix: `pyright --verifytypes` JSON output shows correct `file` path\r\nBugfix: `pyright --verifytypes` JSON output shows correct node `range` in diagnostics",
    "head_branch": "verifytypes-path",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Show file path in verifytypes output (#1566)\n\n* Add file field to verifytypes JSON output\r\n\r\n* Add filename to diagnostics output\r\n\r\n* Add range info to diagnostics"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112fdac254a19ac2908e7",
    "number": 1564,
    "body": "## Notes\r\n\r\nIssue: https://github.com/microsoft/pyright/issues/1563\r\n\r\nUnknown and partially unknows type errors from external libraries can be ignored with a CLI flag:\r\n\r\n```bash\r\n# show my_lib and imported unknown types\r\npyright --verifytypes my_lib\r\n\r\n# show only my_lib unknown types\r\npyright --verifytypes my_lib --ignore-external\r\n```\r\n\r\nI have left old undocumented behavior untouched: if package name ends with a bang, external imports are ignored. Not sure if it is a good idea to have it.\r\n\r\n## CLI changes\r\n\r\n### Added\r\n\r\n- `--ignore-external` CLI flag for `pyright --verifytypes` mode",
    "head_branch": "verifytypes-external",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add --ignore-external CLI flag (#1564)\n\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112feac254a19ac2908e8",
    "number": 1548,
    "body": "Rollup of:\r\n\r\n- Update dependencies (including TS 4.2)\r\n- Fix indexing code for py.typed libraries and `__all__`\r\n- Fix duplicate auto-import in some racy conditions\r\n- Handle `Union` in source mapper",
    "head_branch": "pylance-39",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump deps, handle py.typed in indexer, duplicate auto-import fix (#1548)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662112ffac254a19ac2908e9",
    "number": 1536,
    "body": "Rollup of:\r\n\r\n- Improve auto-import performance by about 5-8%.\r\n- Add extra perf tracking for auto-imports.",
    "head_branch": "pylance-38",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve auto-import performance, add extra perf tracking (#1536)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211300ac254a19ac2908ea",
    "number": 1535,
    "body": "….json config file.",
    "head_branch": "erictr/jsonc_config_file",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added support for comments and trailing comments within pyrightconfig… (#1535)\n\n* Added support for comments and trailing comments within pyrightconfig.json config file.\r\n\r\n* Replaced tabs with spaces\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211301ac254a19ac2908eb",
    "number": 1529,
    "body": "These are overridden by pyrightconfig.json settings.",
    "head_branch": "erictr/platform_version",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Implemented command-line switches for pythonplatform and pythonversion. These are overridden by pyrightconfig.json settings. (#1529)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211302ac254a19ac2908ec",
    "number": 1528,
    "body": "",
    "head_branch": "pylance-37",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix potential infinite recusion in source mapping, crash in doc strings (#1528)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211303ac254a19ac2908ed",
    "number": 1524,
    "body": "…n using the \"venv\" configuration option in pythonconfig.json.",
    "head_branch": "erictr/pth_files",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added support for \".pth\" files (often used for editable installs) whe… (#1524)\n\n* Added support for \".pth\" files (often used for editable installs) when using the \"venv\" configuration option in pythonconfig.json.\r\n\r\n* Addressed code review feedback.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211304ac254a19ac2908ee",
    "number": 1512,
    "body": "Handles:\r\n\r\n- Import aliases of classes\r\n- Type aliases\r\n- Class methods\r\n- Variables\r\n- Class fields\r\n- Parameters\r\n- Mismatched types between stubs and real code (e.g. when something is declared as a function in typeshed, but is a class in the real code)\r\n",
    "head_branch": "pylance-36",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve source mapper to handle more cases (#1512)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211305ac254a19ac2908ef",
    "number": 1501,
    "body": "Building the completion list was an n^2 operation; use a set to deduplicate results which greatly reduces completion time with a large number of items.",
    "head_branch": "pylance-35",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix n^2 duplicate completion check (#1501)\n\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211306ac254a19ac2908f0",
    "number": 1496,
    "body": "According to the code the value of \"python.analysis.logLevel\" are\r\n\"error\", \"warn\", \"info\" and \"log\", and not what was said in the\r\ndocumentation and the schema.",
    "head_branch": "fix/log-levels",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync python.analysis.logLevel setting with the code (#1496)\n\n* Sync python.analysis.logLevel setting with the code\r\n\r\nAccording to the code the value of \"python.analysis.logLevel\" are\r\n\"error\", \"warn\", \"info\" and \"log\", and not what was said in the\r\ndocumentation and the schema.\r\n\r\n* revert changes and just fix schema"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211307ac254a19ac2908f1",
    "number": 1476,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo in import (#1476)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211308ac254a19ac2908f2",
    "number": 1475,
    "body": "Plain revert, as this was causing too many problems. Non-workspace folders may not be watched properly, which was the old behavior, but at least that wasn't crashing people.",
    "head_branch": "pylance-34",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert file watcher change (#1475)\n\nPlain revert, as this was causing too many problems. Non-workspace folders may not be watched properly, which was the old behavior, but at least that wasn't crashing people."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211309ac254a19ac2908f3",
    "number": 1472,
    "body": "Rollup of:\r\n\r\n- Print FS events before ignoring them in verboseOutput mode.\r\n- Use chokidar for non-workspace file watching; fixes library installs outside of the workspace.\r\n- Add performance tracker for type evaluator\r\n- Add go-to-declaration support. Go-to-definition now prefers source, while go-to-declaration prefers stubs.",
    "head_branch": "pylance-33",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "FS watch fixes, perf tracker, go-to-def/decl (#1472)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621130aac254a19ac2908f4",
    "number": 1471,
    "body": "Thanks to [David Dworken](https://daviddworken.com/).",
    "head_branch": "fix-load-json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix server not cd-ing into the server root, bad paths in sys.path, potential to load json module\n\nThanks to [David Dworken](https://daviddworken.com/)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621130aac254a19ac2908f5",
    "number": 1465,
    "body": "",
    "head_branch": "fix-load-json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621130bac254a19ac2908f6",
    "number": 1457,
    "body": "The `--version` should be printed in new line, before:\r\n\r\n```\r\n  Options:\r\n  --createstub IMPORT              Create type stub file(s) for import\r\n  --dependencies                   Emit import dependency information\r\n  -h,--help                        Show this help message\r\n  --lib                            Use library code to infer types when stubs are missing\r\n  --outputjson                     Output results in JSON format\r\n  -p,--project FILE OR DIRECTORY   Use the configuration file at this location\r\n  --stats                          Print detailed performance stats\r\n  -t,--typeshed-path DIRECTORY     Use typeshed type stubs at this location\r\n  -v,--venv-path DIRECTORY         Directory that contains virtual environments\r\n  --verbose                        Emit verbose diagnostics\r\n  --verifytypes PACKAGE            Verify type completeness of a py.typed package  --version                        Print Pyright version\r\n  -w,--watch                       Continue to run and watch for changes\r\n```\r\n\r\nAfter:\r\n\r\n```\r\n  Options:\r\n  --createstub IMPORT              Create type stub file(s) for import\r\n  --dependencies                   Emit import dependency information\r\n  -h,--help                        Show this help message\r\n  --lib                            Use library code to infer types when stubs are missing\r\n  --outputjson                     Output results in JSON format\r\n  -p,--project FILE OR DIRECTORY   Use the configuration file at this location\r\n  --stats                          Print detailed performance stats\r\n  -t,--typeshed-path DIRECTORY     Use typeshed type stubs at this location\r\n  -v,--venv-path DIRECTORY         Directory that contains virtual environments\r\n  --verbose                        Emit verbose diagnostics\r\n  --verifytypes PACKAGE            Verify type completeness of a py.typed package  \r\n  --version                        Print Pyright version\r\n  -w,--watch                       Continue to run and watch for changes\r\n```",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: printUsage (#1457)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621130cac254a19ac2908f7",
    "number": 1449,
    "body": "Rollup of:\r\n\r\n- Greatly improved docstring formatting for indented regions (like parameter sections), nested lists, and epydoc.\r\n- Add type evaluator wrapper to get performance metrics on specific calls.\r\n- Ignore `.tmp` files in file watching to prevent unwanted reanalysis.",
    "head_branch": "pylance-32",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improved docstrings, performance metrics, ignore tmp files (#1449)\n\nCo-authored-by: Bill Schnurr <bschnurr@microsoft.com>\r\nCo-authored-by: HeeJae Chang <hechang@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621130dac254a19ac2908f8",
    "number": 1435,
    "body": "This fixes bugs in the new layout commit, where some code was still assuming that the third party typeshed path contained the modules (when it instead contains distributions that themselves contain modules).",
    "head_branch": "pylance-31",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix import resolver for third party typeshed stubs (#1435)\n\nThis fixes bugs in the new layout commit, where some code was still assuming that the third party typeshed path contained the modules (when it instead contains distributions that themselves contain modules)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621130eac254a19ac2908f9",
    "number": 1419,
    "body": "…ing a namespace module if it found one in the workspace path or extraPaths even if a traditional (non-namespace) module satisfied the import from the PYTHONPATH. The interpreter searches all paths and always prefers a traditional module if it can find it. Second, it was resolving a namespace module if a traditional module only partially resolved the import path. The real interpreter always prefers a traditional module even if it partially resolves the path (in which case the full import fails).",
    "head_branch": "erictr/import_logic",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed two issues in the import resolution logic. First, it was returning a namespace module if it found one in the workspace path or extraPaths even if a traditional (non-namespace) module satisfied the import from the PYTHONPATH. The interpreter searches all paths and always prefers a traditional module if it can find it. Second, it was resolving a namespace module if a traditional module only partially resolved the import path. The real interpreter always prefers a traditional module even if it partially resolves the path (in which case the full import fails). (#1419)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621130fac254a19ac2908fa",
    "number": 1415,
    "body": "Platforms supported by this PR:\r\n\r\n- [x]  Windows 64bit\r\n- [x]  Windows 32bit\r\n- [x] Linux 64bit\r\n- [x] MacOS 64bit",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211310ac254a19ac2908fb",
    "number": 1405,
    "body": "For context, see microsoft/vscode#109754 and golang/go#42348. To get folder deletion events, we either need to watch the workspace and filter events ourselves (this code), or register a file watcher for every folder in the workspace and manage them.",
    "head_branch": "pylance-30",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change client watch glob to get folder change events (#1405)\n\nCo-authored-by: Heejae Chang <heejaechang@outlook.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211311ac254a19ac2908fc",
    "number": 1399,
    "body": "Don't make `super()` calls in method override completions when a class has no parent class (only `object`).",
    "head_branch": "pylance-29",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't make super calls in base class methods (#1399)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211312ac254a19ac2908fd",
    "number": 1390,
    "body": "Hi, what do you think about supporting generic TypedDicts?\r\n\r\nIn this pull request I tried to add this functionality hopefully without mangling too many other things.\r\nThe basis of the implementation is by enhancing the `getTypedDictMembersForClass` and `getTypedDictMembersForClassRecursive`.\r\n\r\nThere is also a [mypy issue](https://github.com/python/mypy/issues/3863) on adding support for generic TypedDicts.\r\n\r\nIn the following code you can see this PR in action, but there are still a few actions TODO items. I just wanted to get some feedback before moving forward.\r\n\r\n```python\r\nfrom typing import TypedDict, TypeVar, Generic, List\r\nT = TypeVar(\"T\")\r\n\r\nclass TD(Generic[T], TypedDict):\r\n    f1: List[T]\r\n    \r\ndef test_td(aa: TD[T], bb: TD[T]):\r\n    return aa[\"f1\"], bb[\"f1\"]\r\n\r\ntd1 = test_td({\"f1\": [\"foo\"]}, {\"f1\": [\"bar\"]})\r\nreveal_type(td1) # info: Type of \"td1\" is \"tuple[List[str], List[str]]\"\r\n\r\ntest_td({\"f1\": [\"foo\"]}, {\"f1\": [1]}) # error\r\n\r\nclass TD2(TD[T]):\r\n    f2: T\r\n\r\ntd21: TD2[str] = {\r\n    'f1':[\"far\"],\r\n    'f2':\"boo\"\r\n}\r\nreveal_type(td21[\"f1\"]) # info: Type of \"td21[\"f1\"]\" is \"List[str]\"\r\n\r\ntd22 = TD2(\r\n    f1=[\"far\"],\r\n    f2=\"boo\"\r\n)\r\nreveal_type(td22) # info: Type of \"td22\" is \"TD2[str]\"\r\n\r\ntd23: TD2[str] = {\r\n    'f1':[0],\r\n    'f2':\"boo\"\r\n} # error\r\n\r\ntd24: TD2[str] = TD2(\r\n    f1=[0],\r\n    f2=\"boo\"\r\n) # error\r\n\r\ntd25 = TD2(\r\n    f1=[0],\r\n    f2=\"boo\"\r\n) \r\nreveal_type(td25) #  info: Type of \"td25\" is \"TD2[int | Literal['boo']]\r\n```\r\n\r\n_TODO_\r\n- Support for declaring with TypedDict constructor notation\r\n- Adding proper test cases to the automated test suite\r\n- And never enough testing to make sure no corner cases were missed\r\n\r\n",
    "head_branch": "generic-typed-dict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211313ac254a19ac2908fe",
    "number": 1389,
    "body": "Fixes signature help when the closing paren is missing.",
    "head_branch": "pylance-28",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Handle signature help with missing parens (#1389)\n\nCo-authored-by: Heejae Chang <heejaechang@outlook.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211314ac254a19ac2908ff",
    "number": 1375,
    "body": "Updates dependencies to their latest.\r\n\r\nLSP updates will come later; updating that also upgrades the minimum version of VS Code required (which I need to verify is alright in the Python extension).",
    "head_branch": "pylance-27",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update deps (#1375)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211315ac254a19ac290900",
    "number": 1370,
    "body": "This matches what TS does. \"Text\" is VS Code's default for any unknown completions, so it's best to avoid it.",
    "head_branch": "pylance-26",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change literal string completion kind to \"constant\" (#1370)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211316ac254a19ac290901",
    "number": 1369,
    "body": "Fixed minor typos in documentation.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update typed-libraries.md (#1369)\n\nFixed minor typos in documentation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211317ac254a19ac290902",
    "number": 1344,
    "body": "Fix for missing docs in completion list due to only checking the setter for docs because its definition comes after the getter. This primary declaration logic comes from overloads were the doc strings are using on the last function. Now if the setter is missing a doc string we check the other declarations until we find a doc string.\r\n\r\nDuring onHover we always look at the first declaration which would be the getter.\r\n\r\nthis._addResultsForDeclaration(format, sourceMapper, results.parts, declarations[0], node, evaluator);\r\n\r\nin hoverProvider.ts\r\n\r\nbefore \r\n![image](https://user-images.githubusercontent.com/1946977/104045955-315b2a80-5194-11eb-9587-8637052950dd.png)\r\n\r\nafter\r\n![image](https://user-images.githubusercontent.com/1946977/104045987-3d46ec80-5194-11eb-947f-b1f3b9b95f63.png)\r\n\r\nbetter aligns with Hover\r\n![image](https://user-images.githubusercontent.com/1946977/104046026-4f288f80-5194-11eb-9486-a3de544328d3.png)\r\n",
    "head_branch": "fix-property-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix for missing docs in completion list due to only checking the setter for docs because its definition comes after the getter. This primary declaration logic comes from overloads were the doc strings are using on the last function. Now if the setter is missing a doc string we check the other declarations until we find a doc string. (#1344)\n\nDuring onHover we always look at the first declaration which would be the getter.\r\n\r\nthis._addResultsForDeclaration(format, sourceMapper, results.parts, declarations[0], node, evaluator);\r\n\r\nin hoverProvider.ts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211318ac254a19ac290903",
    "number": 1337,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated README to refer to PEP 586. (#1337)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211319ac254a19ac290904",
    "number": 1333,
    "body": "",
    "head_branch": "ts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621131aac254a19ac290905",
    "number": 1331,
    "body": "When TypedDict is an expected value, but the Dict expression does not fulfill the requirements, the generated error message does not provide enough information to narrow down the error.\r\n\r\n```python\r\nfrom typing import TypedDict, Dict\r\n\r\nMovie = TypedDict(\"Movie\", name=str, year=int)\r\nmove: Movie = {\r\n    \"name\": \"M\",\r\n    \"year\": \"5\"\r\n    # this should generate an error about year\r\n}\r\n\r\nclass Inner(TypedDict, total=False):\r\n    inner_key: Dict[str, 'Inner']\r\n    something: str\r\n\r\na: Inner = {\r\n    \"inner_key\": {\r\n        \"akey\": {\r\n            \"inner_key\": {\r\n                \"bkey\": {\r\n                    \"something\": 22\r\n                    # this should generate an error about \"something\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nBefore this change:\r\n```\r\n  4:15 - error: Expression of type \"dict[str, str]\" cannot be assigned to declared type \"Movie\"\r\n    \"dict[str, str]\" is incompatible with \"Movie\" (reportGeneralTypeIssues)\r\n  14:12 - error: Expression of type \"dict[str, dict[str, dict[str, dict[str, dict[str, int]]]]]\" cannot be assigned to declared type \"Inner\"\r\n    \"dict[str, dict[str, dict[str, dict[str, dict[str, int]]]]]\" is incompatible with \"Inner\" (reportGeneralTypeIssues)\r\n```\r\n\r\nAfter this change:\r\n```\r\n  4:15 - error: Expression of type \"dict[str, str]\" cannot be assigned to declared type \"Movie\"\r\n    Type \"Literal['5']\" is not assignable to field \"year\" (reportGeneralTypeIssues)\r\n  14:12 - error: Expression of type \"dict[str, dict[str, dict[str, dict[str, dict[str, int]]]]]\" cannot be assigned to declared type \"Inner\"\r\n    Type \"dict[str, dict[str, dict[str, dict[str, int]]]]\" is not assignable to field \"inner_key\"\r\n      Type \"dict[str, dict[str, int]]\" is not assignable to field \"inner_key\"\r\n        Type \"Literal[22]\" is not assignable to field \"something\" (reportGeneralTypeIssues)\r\n```\r\n\r\nGround work had been done in the commit: https://github.com/microsoft/pyright/commit/dc033502ee7df5471e527397c5733e85f9b6fa43. But it may have regressed somewhere along the line.\r\n\r\nAll tests are passing. Feel free to let me know if you have suggestions. I would also like to work on to see if we can report the errors at a more a narrowed down levels than all at the outer expression.\r\n\r\nPS: Thanks for this project. It has been an invaluable resource.\r\n\r\n",
    "head_branch": "typed-dict-err-msgs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improving error messages for expected TypeDicts (#1331)\n\n* Improved error messages for dictionary statements that are assigned to TypedDict variables or function arguments.\r\n\r\nInitial work done in commit: dc033502ee\r\n\r\n* Provide hint when inferred inner dict value type does not match expected type\r\n\r\n* Fix eslint style and prettier formmating issues"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621131aac254a19ac290906",
    "number": 1322,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "correct useLibraryCodeForTypes CLI argument (#1322)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621131bac254a19ac290907",
    "number": 1318,
    "body": "Integration with [pre-commit](https://github.com/pre-commit/pre-commit) would make *Pyright* easier to run on CI environments.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621131cac254a19ac290908",
    "number": 1306,
    "body": "Bumps [node-notifier](https://github.com/mikaelbr/node-notifier) from 8.0.0 to 8.0.1.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/mikaelbr/node-notifier/blob/v8.0.1/CHANGELOG.md\">node-notifier's changelog</a>.</em></p>\n<blockquote>\n<h3><code>v8.0.1</code></h3>\n<ul>\n<li>fixes possible injection issue for notify-send</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/mikaelbr/node-notifier/commit/5d62799dab88505a709cd032653b2320c5813fce\"><code>5d62799</code></a> v8.0.1</li>\n<li><a href=\"https://github.com/mikaelbr/node-notifier/commit/0c4a80df9a3b5015cd1e1ab858e008be3fece082\"><code>0c4a80d</code></a> chore: adds changelog</li>\n<li><a href=\"https://github.com/mikaelbr/node-notifier/commit/f5a7bc647589fc89ac64b0f1d259a853fcf057bc\"><code>f5a7bc6</code></a> fix: test cases</li>\n<li><a href=\"https://github.com/mikaelbr/node-notifier/commit/b9d148d697d3db807f653e2e6953c3de57dfeb8a\"><code>b9d148d</code></a> patch: fixes possible injection issue for notify-send</li>\n<li>See full diff in <a href=\"https://github.com/mikaelbr/node-notifier/compare/v8.0.0...v8.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=node-notifier&package-manager=npm_and_yarn&previous-version=8.0.0&new-version=8.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/packages/pyright-internal/node-notifier-8.0.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump node-notifier from 8.0.0 to 8.0.1 in /packages/pyright-internal (#1306)\n\nBumps [node-notifier](https://github.com/mikaelbr/node-notifier) from 8.0.0 to 8.0.1.\r\n- [Release notes](https://github.com/mikaelbr/node-notifier/releases)\r\n- [Changelog](https://github.com/mikaelbr/node-notifier/blob/v8.0.1/CHANGELOG.md)\r\n- [Commits](https://github.com/mikaelbr/node-notifier/compare/v8.0.0...v8.0.1)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621131dac254a19ac290909",
    "number": 1294,
    "body": "…er of arguments is above a threshold (6). This avoids long analysis times for complex unannotated functions.",
    "head_branch": "erictr/call-site-inference-heuristic",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added a heuristic to skip call-site return type inference if the number of arguments is above a threshold (6). This avoids long analysis times for complex unannotated functions. (#1294)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621131eac254a19ac29090a",
    "number": 1290,
    "body": "Followup to #1283. The function was in the wrong class, and there were a couple of things that should also have replacements which will now be fixed too.",
    "head_branch": "pylance-25",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix up path setting expansion (#1290)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621131fac254a19ac29090b",
    "number": 1286,
    "body": "…values.",
    "head_branch": "erictr/paramspec",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Enhanced ParamSpec mechanism to support parameters that have default values. (#1286)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211320ac254a19ac29090c",
    "number": 1283,
    "body": "Variables can be used in paths (`${workspaceFolder}` or `${env:HOME}`)\nbut they were already being resolved to absolute paths before expanding\nthe variables, which made the expansions not do the \"right\" thing.\n\nThis commit changes it to expand the variables early, in the server\nconstructor.\n\nRelates to #1267",
    "head_branch": "expand-paths-early",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Expand variables in paths early (#1283)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211321ac254a19ac29090d",
    "number": 1277,
    "body": "Rollup of:\r\n\r\n- Update dependencies, including changes for TS 4.1 and omitting `baseUrl` to fix auto-imports in the monorepo.\r\n- Use the window progress reporter when possible, dropping the custom LSP protocol from the client.\r\n- Modify the fourslash test harness to not add non-source files to the `Program`, and modify the assertion in `SourceFile` to show the bad filename.",
    "head_branch": "pylance-24",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update deps (TS 4.1, others), switch to LSP-native progress reporting (#1277)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211322ac254a19ac29090e",
    "number": 1275,
    "body": "Bumps [ini](https://github.com/isaacs/ini) from 1.3.5 to 1.3.8.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/npm/ini/commit/a2c5da86604bc2238fe393c5ff083bf23a9910eb\"><code>a2c5da8</code></a> 1.3.8</li>\n<li><a href=\"https://github.com/npm/ini/commit/af5c6bb5dca6f0248c153aa87e25bddfc515ff6e\"><code>af5c6bb</code></a> Do not use Object.create(null)</li>\n<li><a href=\"https://github.com/npm/ini/commit/8b648a1ac49e1b3b7686ea957e0b95e544bc6ec1\"><code>8b648a1</code></a> don't test where our devdeps don't even work</li>\n<li><a href=\"https://github.com/npm/ini/commit/c74c8af35f32b801a7e82a8309eab792a95932f6\"><code>c74c8af</code></a> 1.3.7</li>\n<li><a href=\"https://github.com/npm/ini/commit/024b8b55ac1c980c6225607b007714c54eb501ba\"><code>024b8b5</code></a> update deps, add linting</li>\n<li><a href=\"https://github.com/npm/ini/commit/032fbaf5f0b98fce70c8cc380e0d05177a9c9073\"><code>032fbaf</code></a> Use Object.create(null) to avoid default object property hazards</li>\n<li><a href=\"https://github.com/npm/ini/commit/2da90391ef70db41d10f013e3a87f9a8c5d01a72\"><code>2da9039</code></a> 1.3.6</li>\n<li><a href=\"https://github.com/npm/ini/commit/cfea636f534b5ca7550d2c28b7d1a95d936d56c6\"><code>cfea636</code></a> better git push script, before publish instead of after</li>\n<li><a href=\"https://github.com/npm/ini/commit/56d2805e07ccd94e2ba0984ac9240ff02d44b6f1\"><code>56d2805</code></a> do not allow invalid hazardous string as section name</li>\n<li>See full diff in <a href=\"https://github.com/isaacs/ini/compare/v1.3.5...v1.3.8\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~isaacs\">isaacs</a>, a new releaser for ini since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ini&package-manager=npm_and_yarn&previous-version=1.3.5&new-version=1.3.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/ini-1.3.8",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211323ac254a19ac29090f",
    "number": 1272,
    "body": "…gs errors when TypeVars are used incorrectly. In particular, it flags the use of a single instance of a TypeVar within a generic function signature.",
    "head_branch": "erictr/type_var_usage",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge branch 'erictr/type_var_usage'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211323ac254a19ac290910",
    "number": 1269,
    "body": "…initiated progress reporting mechanism.",
    "head_branch": "erictr/progress",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211324ac254a19ac290911",
    "number": 1267,
    "body": "It is useful to be able to have virtualenvironments in a shared folder\r\n(`~/.virtualenvs` in my case) and have the settings work without hard-coding a\r\npath.\r\n\r\nThis probably doesn't make any sense on Windows.\r\n\r\n(I use coc-pyright, not VSCode if it makes any difference)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Expand ${env:HOME} in settings (#1267)\n\nIt is useful to be able to have virtualenvironments in a shared folder\r\n(`~/.virtualenvs` in my case) and have the settings work without hard-coding a\r\npath.\r\n\r\nThis probably doesn't make any sense on Windows."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211325ac254a19ac290912",
    "number": 1259,
    "body": "…he diagnostic rule (if applicable) is now reported in the \"code\" field, and a URL points to general documentation for diagnostic rules.",
    "head_branch": "erictr/diag-code",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Changed encoding of diagnostics reported through the LSP interface. T… (#1259)\n\n* Changed encoding of diagnostics reported through the LSP interface. The diagnostic rule (if applicable) is now reported in the \"code\" field, and a URL points to general documentation for diagnostic rules.\r\n\r\n* PR feedback.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211326ac254a19ac290913",
    "number": 1258,
    "body": "Rollup of:\r\n\r\n- Fix infinite recursion when mapping pyi files to py files (#1252).\r\n- Add source mapping to TS code for production builds.",
    "head_branch": "pylance-23",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix infinite source mapping recursion, add TS source maps in production (#1258)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211327ac254a19ac290914",
    "number": 1222,
    "body": "Rollup of:\r\n\r\n- Bump the LSP libraries to their latest.\r\n- Reuse existing imports for auto-imports (e.g. if `import os.path` is present, `join` will use `os.path.join`).\r\n- Fix inverted MRO order for completions. Fixes cases where the completion item said one method, but hover said another once inserted.\r\n- Update method overrides to generate the `super` call.\r\n",
    "head_branch": "pylance-22",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump LSP libs, reuse imports in auto-imports, fix MRO in completions, override super calls (#1222)\n\nRollup of:\r\n\r\n- Bump the LSP libraries to their latest.\r\n- Reuse existing imports for auto-imports (e.g. if `import os.path` is present, `join` will use `os.path.join`).\r\n- Fix inverted MRO order for completions. Fixes cases where the completion item said one method, but hover said another once inserted.\r\n- Update method overrides to generate the `super` call."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211328ac254a19ac290915",
    "number": 1185,
    "body": "Rollup of:\r\n\r\n- Update dependencies.\r\n- Rework the import resolver to allow for native module replacement.",
    "head_branch": "pylance-21",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update deps, changes for native module replacements in import resolver (#1185)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211329ac254a19ac290916",
    "number": 1184,
    "body": "…rget type contains a type var and the source is concrete. This change generally makes the core type checker more strict about the use of type variables.",
    "head_branch": "erictr/typevar12",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed bug whereby an assignment was not flagged as an error if the target type contains a type var and the source is concrete. This change generally makes the core type checker more strict about the use of type variables. (#1184)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621132aac254a19ac290917",
    "number": 1179,
    "body": "Don't include `NotImplemented` in except suggestions. It should be `except NotImplementedError`.\r\nThis is a common beginner mistake.\r\nSee: https://github.com/microsoft/pylance-release/issues/563\r\n\r\n--\r\nThe change works as intended, but it doesn't feel right. Maybe there is another position to insert this check. Ideally that would also allow us to also check every other suggestion if it inherits from `BaseException`.",
    "head_branch": "except-suggestions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621132bac254a19ac290918",
    "number": 1178,
    "body": "* Don't exclude CamelCase variables / type aliases\r\n* Exclude protected and private constants\r\n\r\nSee: https://github.com/microsoft/pylance-release/issues/606",
    "head_branch": "import-symbols",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve handling of public symbols for imports (#1178)\n\n* Improve handling of public symbols for imports + added tests\r\n\r\n* Change test file name\r\n\r\n* Removed undefined check"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621132cac254a19ac290919",
    "number": 1177,
    "body": "Pyright shouldn't attempt to provide suggestions after `with Y as [ ]`.\r\n\r\n### Before\r\n![Screen Shot 2020-11-16 at 14 31 13](https://user-images.githubusercontent.com/30130371/99258131-63957f00-2818-11eb-9672-6103f004fd49.png)\r\n\r\n### After\r\n<img width=\"479\" alt=\"Screen Shot 2020-11-16 at 14 27 48\" src=\"https://user-images.githubusercontent.com/30130371/99257828-e964fa80-2817-11eb-9e81-1a9219e7f886.png\">\r\n\r\n",
    "head_branch": "with-as",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't add suggestions for 'with Y as [ ]' (#1177)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621132dac254a19ac29091a",
    "number": 1174,
    "body": "Match type alias from completion provider with hover provider. The type alias will only be expanded if the completion item is the alias itself to preserve readability.\r\n\r\nSee: https://github.com/microsoft/pylance-release/issues/562\r\n\r\n https://github.com/microsoft/pyright/blob/51ad4c20df30bae7acbdd23fdb04ab88cda7b3f5/packages/pyright-internal/src/languageService/hoverProvider.ts#L161-L174\r\n\r\n<img width=\"862\" alt=\"Screen Shot 2020-11-16 at 00 06 32\" src=\"https://user-images.githubusercontent.com/30130371/99199468-a5ceaa00-279f-11eb-82fb-ef6cb44daa2f.png\">\r\n\r\n<img width=\"794\" alt=\"Screen Shot 2020-11-16 at 00 08 14\" src=\"https://user-images.githubusercontent.com/30130371/99199496-d57db200-279f-11eb-93c5-aaf0be7a0252.png\">",
    "head_branch": "expand-type-alias",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Expand type alias for completion provider (#1174)\n\n* Expand type alias for completion provider\r\n\r\n* Add test\r\n\r\nCo-authored-by: Eric Traut <eric@traut.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621132eac254a19ac29091b",
    "number": 1173,
    "body": "See: https://github.com/microsoft/pylance-release/issues/539",
    "head_branch": "future-import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add __future__ module as import suggestion (#1173)\n\n* Add __future__ module as import suggestion\r\n\r\n* Add test\r\n\r\n* Improved test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621132fac254a19ac29091c",
    "number": 1168,
    "body": "A first attempt to improve the suggestion list. See: https://github.com/microsoft/pylance-release/issues/608\r\n\r\nInstead of the Levenshtein Distance I though that Longest Common Subsequence might work better. The only drawback being that that user must only enter chars that appear in the symbol he/she is looking for and they must be in the correct order.\r\n\r\nAn example result would look like this:\r\n<img width=\"530\" alt=\"Screen Shot 2020-11-13 at 15 18 38\" src=\"https://user-images.githubusercontent.com/30130371/99081732-8aa74300-25c3-11eb-8551-2b6ec4a1dc15.png\">\r\n\r\nPlease let me know if that's something worth exploring further.\r\n\r\n--\r\nAlgorithm used: Similar to `isPatternInWord` from [VS Code](https://github.com/microsoft/vscode/blob/21dc66054203ab742d36be9f0ef6ecb774ae62f2/src/vs/base/common/filters.ts#L506-L514)",
    "head_branch": "fuzzy-matching",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve suggestion results (#1168)\n\n* Implement Longest common subsequence for suggestion results\r\n\r\n* Fix style issus\r\n\r\n* Change matching algroithm / use isPatternInWord from VSC\r\n\r\n* Remove leven + alternative algorithm\r\n\r\n* Add test case\r\n\r\n* Review changes\r\n\r\n* Leave computeCompletionSimilarity in place\r\n* Moved code to isPatternInSymbol\r\n* Change function signature to return boolean\r\n* Replaced references\r\n* Moved tests for computeCompletionSimilarity and\r\n  isPatternInWord to existing stringUtils.test.ts\r\n* Re-added leven package\r\n\r\n* Fix missing reference\r\n\r\nCo-authored-by: Heejae Chang <heejaechang@outlook.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621132fac254a19ac29091d",
    "number": 1165,
    "body": "On Red Hat derived systems, Python's `purelib` and `platlib` are set to `<prefix>/lib` and `<prefix>/lib64` respectively. This means that Python packages are installed to either of those directories depending on whether they contain native libraries or not (as I understand it). This distinction is also present in pipenv's virtualenvs. See:\r\n\r\n```\r\n$  . /home/truls/.local/share/virtualenvs/pyright-test-Fm_xQ9MX/bin/activate\r\n(pyright-test) truls@dhcp-111-236 ~/foo/pyright-test $ python\r\nPython 3.9.0 (default, Oct  6 2020, 00:00:00) \r\n[GCC 10.2.1 20200826 (Red Hat 10.2.1-3)] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import sysconfig\r\n>>> sysconfig.get_path('purelib')\r\n'/home/truls/.local/share/virtualenvs/pyright-test-Fm_xQ9MX/lib/python3.9/site-packages'\r\n>>> sysconfig.get_path('platlib')\r\n'/home/truls/.local/share/virtualenvs/pyright-test-Fm_xQ9MX/lib64/python3.9/site-packages'\r\n>>> \r\n```\r\n\r\nThe current virtualenv include path detection logic in pyright returns only the first extant `site-packages` directory it finds. This is insufficient for discovering the full include path for virtualenvs where packages may be installed in both the `lib` and `lib64` directories. This PR changes the virtualenv include path detection logic so that it returns all of the extant `site-packages` dirs it finds in the `lib`, `lib64` or `Lib` directories.\r\n",
    "head_branch": "multiple-venv-dirs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support detecting multiple site-packages directories in venvs (#1165)\n\n* Support detecting multiple site-packages paths in venvs\r\n\r\n* Remove redundant else block"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211330ac254a19ac29091e",
    "number": 1160,
    "body": "Rollup of:\r\n\r\n- Don't offer completions in contexts such as class names, function names, parameter names, etc. For functions with `@overload`, names will still be suggested for other functions to better aid in writing overloads.\r\n- Respect the client's doc kind in signature help.\r\n- Helper functions/types for extracting and checking nodes from text selections.",
    "head_branch": "pylance-20",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve completion context detection, respect sig help doc kind, helpers (#1160)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211331ac254a19ac29091f",
    "number": 1140,
    "body": "Rollup of:\r\n\r\n- Fix completions after `#` character in line.\r\n- Fix crash on parsing an empty fstring expression.",
    "head_branch": "pylance-18",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix completion after '#', fix parser crash on empty fstring expression (#1140)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211332ac254a19ac290920",
    "number": 1137,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211333ac254a19ac290921",
    "number": 1135,
    "body": "Rollup of:\r\n\r\n- Verify `package-lock.json` state in checks to avoid lerna modifying things.\r\n- Add infrastructure for module abbreviations in completions.\r\n- Removed unused auto-import mapping from `completion/resolve` handler.\r\n- Add `isInImport` to completion data for checking the completion context.\r\n- Allow completion verification in fourslash tests to be overridden.",
    "head_branch": "pylance-17",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Module abbreviation infrastructure, remove unused mappings on completion resolve, other (#1135)\n\nRollup of:\r\n\r\n- Verify `package-lock.json` state in checks to avoid lerna modifying things.\r\n- Add infrastructure for module abbreviations in completions.\r\n- Removed unused auto-import mapping from `completion/resolve` handler.\r\n- Add `isInImport` to completion data for checking the completion context.\r\n- Allow completion verification in fourslash tests to be overridden."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211334ac254a19ac290922",
    "number": 1126,
    "body": "Rollup of:\r\n\r\n- Update deps; biggest change is bumping webpack-cli to drop about 600 dev dependencies.\r\n- Rename \"module context\" to better reflect its use as member info only.\r\n- Call the number of counts in the timer code to produce better metrics.",
    "head_branch": "pylance-16",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update deps, add/rename completion member metadata, count calls in timer (#1126)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211335ac254a19ac290923",
    "number": 1109,
    "body": "Rollup of:\r\n\r\n- Add incremental document syncing support.\r\n- Add completions to log tracker, to see what is being analyzed to serve a particular completion in trace mode.\r\n- Update dependencies.",
    "head_branch": "pylance-14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Incremental document sync support, improved completion logging (#1109)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211336ac254a19ac290924",
    "number": 1099,
    "body": "Rollup of:\r\n\r\n- Check the completion item kind in fourslash tests.\r\n- Add a fast path for checking properties in completions.",
    "head_branch": "pylance-13",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Check completion item kind, non-property completion fast path (#1099)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211337ac254a19ac290925",
    "number": 1096,
    "body": "Rollup of:\r\n\r\n- Update all dependencies, including for the recent Webpack 5 stable release. This is the bulk of the line changes (yay package-lock).\r\n- Add a script to manage dependency updates; this is more reliable than `npm update`, using `npm-check-updates`.\r\n- Fix invalid call signature info outside the bounds of the call arguments.\r\n- Add support for plaintext documentation for hovers/completions.\r\n- Remove some unused dependencies that were leftover from the monorepo restructuring.",
    "head_branch": "pylance-12",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update deps, fix call sig args, add plaintext doc support (#1096)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211338ac254a19ac290926",
    "number": 1093,
    "body": "Rollup of:\r\n\r\n- Improve performance of validation workflow on Windows.\r\n- Support streaming clients for references and workspace symbols (work reporters). This is VS, but VS Code in the future.\r\n- Include analysis error in analysis result.\r\n- Changes to support improved indexing performance in Pylance.",
    "head_branch": "pylance-11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Streaming references/symbols, analysis error, indexing changes (#1093)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211339ac254a19ac290927",
    "number": 1086,
    "body": "",
    "head_branch": "erictr/test_break",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621133aac254a19ac290928",
    "number": 1074,
    "body": "Rollup of:\r\n\r\n- Fix pythonPath and other path configuration when not defined. My previous fix here didn't check for a value before resolving the path (the old code assigned without resolving, so undefined remained undefined). Would have been caught had it not been for the type of the returned being `any`.\r\n- Print search paths in trace log mode.\r\n- Fix tmpdir on systems with shared temporary folders and multiple processes.\r\n- Move \"Auto-import\" text to \"details\" property so it shows in the completion list.\r\n- Show the class doc for constructor calls when the constructor has no docstring. Other doc fetches are non-calls and would have returned the class docs anyway.\r\n- Fix `isNodeReachable` helper to not return true on missing nodes (fixes semantic highlight issues).",
    "head_branch": "pylance-10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix paths when unset, fix tmpdir, other visual tweaks (#1074)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621133bac254a19ac290929",
    "number": 1057,
    "body": "Fixed a bug in the handling of wildcard imports when a dunder all symbol is present in the target and the dunder all array refers to an implicitly-imported submodule.",
    "head_branch": "erictr/all_implicit_imports",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621133cac254a19ac29092a",
    "number": 1056,
    "body": "Rollup of:\r\n\r\n- Ensure pyright builds with TypeScript 4.1's RC.\r\n- Add tmpfile creation to the FS abstraction.\r\n- Add infrastructure for supporting source mapping to generated source code (i.e. scraping); used in Pylance in a prototype phase for builtins, but may be moved here once we figure that all out.\r\n- Add a parse tree util to check if inside a type comment.\r\n- Ensure paths are rooted relative to workspaces when needed (#1052).",
    "head_branch": "pylance-9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync from Pylance (#1056)\n\nRollup of:\r\n\r\n- Ensure pyright builds with TypeScript 4.1's RC.\r\n- Add tmpfile creation to the FS abstraction.\r\n- Add infrastructure for supporting source mapping to generated source code (i.e. scraping); used in Pylance in a prototype phase for builtins, but may be moved here once we figure that all out.\r\n- Add a parse tree util to check if inside a type comment.\r\n- Ensure paths are rooted relative to workspaces when needed (#1052)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621133dac254a19ac29092b",
    "number": 1025,
    "body": "Bumps [node-fetch](https://github.com/bitinn/node-fetch) from 2.6.0 to 2.6.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/bitinn/node-fetch/releases\">node-fetch's releases</a>.</em></p>\n<blockquote>\n<h2>v2.6.1</h2>\n<p><strong>This is an important security release. It is strongly recommended to update as soon as possible.</strong></p>\n<p>See <a href=\"https://github.com/node-fetch/node-fetch/blob/master/docs/CHANGELOG.md#v261\">CHANGELOG</a> for details.</p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/node-fetch/node-fetch/blob/master/docs/CHANGELOG.md\">node-fetch's changelog</a>.</em></p>\n<blockquote>\n<h2>v2.6.1</h2>\n<p><strong>This is an important security release. It is strongly recommended to update as soon as possible.</strong></p>\n<ul>\n<li>Fix: honor the <code>size</code> option after following a redirect.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/b5e2e41b2b50bf2997720d6125accaf0dd68c0ab\"><code>b5e2e41</code></a> update version number</li>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/2358a6c2563d1730a0cdaccc197c611949f6a334\"><code>2358a6c</code></a> Honor the <code>size</code> option after following a redirect and revert data uri support</li>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/8c197f8982a238b3c345c64b17bfa92e16b4f7c4\"><code>8c197f8</code></a> docs: Fix typos and grammatical errors in README.md (<a href=\"https://github-redirect.dependabot.com/bitinn/node-fetch/issues/686\">#686</a>)</li>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/1e99050f944ac435fce26a9549eadcc2419a968a\"><code>1e99050</code></a> fix: Change error message thrown with redirect mode set to error (<a href=\"https://github-redirect.dependabot.com/bitinn/node-fetch/issues/653\">#653</a>)</li>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/244e6f63d42025465796e3ca4ce813bf2c31fc5b\"><code>244e6f6</code></a> docs: Show backers in README</li>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/6a5d192034a0f438551dffb6d2d8df2c00921d16\"><code>6a5d192</code></a> fix: Properly parse meta tag when parameters are reversed (<a href=\"https://github-redirect.dependabot.com/bitinn/node-fetch/issues/682\">#682</a>)</li>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/47a24a03eb49a49d81b768892aee10074ed54a91\"><code>47a24a0</code></a> chore: Add opencollective badge</li>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/7b136627c537cb24430b0310638c9177a85acee1\"><code>7b13662</code></a> chore: Add funding link</li>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/5535c2ed478d418969ecfd60c16453462de2a53f\"><code>5535c2e</code></a> fix: Check for global.fetch before binding it (<a href=\"https://github-redirect.dependabot.com/bitinn/node-fetch/issues/674\">#674</a>)</li>\n<li><a href=\"https://github.com/node-fetch/node-fetch/commit/1d5778ad0d910dbd1584fb407a186f5a0bc1ea22\"><code>1d5778a</code></a> docs: Add Discord badge</li>\n<li>Additional commits viewable in <a href=\"https://github.com/bitinn/node-fetch/compare/v2.6.0...v2.6.1\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~akepinski\">akepinski</a>, a new releaser for node-fetch since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=node-fetch&package-manager=npm_and_yarn&previous-version=2.6.0&new-version=2.6.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/configuring-github-dependabot-security-updates)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/node-fetch-2.6.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump node-fetch from 2.6.0 to 2.6.1 (#1025)\n\nBumps [node-fetch](https://github.com/bitinn/node-fetch) from 2.6.0 to 2.6.1.\r\n- [Release notes](https://github.com/bitinn/node-fetch/releases)\r\n- [Changelog](https://github.com/node-fetch/node-fetch/blob/master/docs/CHANGELOG.md)\r\n- [Commits](https://github.com/bitinn/node-fetch/compare/v2.6.0...v2.6.1)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621133dac254a19ac29092c",
    "number": 1024,
    "body": "fixed UnhandledPromiseRejectionWarning caused by improper async usage\r\nadded hidden flag that control indexing. and set false as default\r\nmade _handleMemoryHighUsage to drop parse tree and binding info as well\r\nalways add import statement after invocation point\r\n",
    "head_branch": "pushpylance1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update from Pylance. (#1024)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621133eac254a19ac29092d",
    "number": 1023,
    "body": "",
    "head_branch": "push-from-pyrx22",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621133fac254a19ac29092e",
    "number": 1019,
    "body": "ALE has out-of-the-box support for Pyright, and the ALE project is firmly committed to making Pyright support work with no or very little configuration on the Vim side.\r\n\r\nI am the author of ALE, and I use Pyright every day at work now. If anything ever goes wrong with Pyright support, I'll be fixing it pretty quickly.\r\n\r\nThank you for making what I view as being the _definitive_ Python language server. :+1: ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Mention ALE in the README (#1019)\n\nALE has out-of-the-box support for Pyright, and the ALE project is firmly committed to making Pyright support work with no or very little configuration on the Vim side."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211340ac254a19ac29092f",
    "number": 1018,
    "body": "…eyond the high-water mark.",
    "head_branch": "erictr/purge_parsed_results",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211341ac254a19ac290930",
    "number": 1007,
    "body": "… claim to have inlined types versus those that don't. Also added support for \"partial\" stub packages (a \"-stub\" package that has a py.typed file that includes the line \"partial\\n\" as described in PEP 561).",
    "head_branch": "erictr/pep561",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added support for py.typed files to distinguish between packages that… (#1007)\n\n* Added support for py.typed files to distinguish between packages that claim to have inlined types versus those that don't. Also added support for \"partial\" stub packages (a \"-stub\" package that has a py.typed file that includes the line \"partial\\n\" as described in PEP 561).\r\n\r\n* Fixed style issue.\r\n\r\n* Removed unnecessary truthy tests for results returned by resolveAbsoluteImport.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211342ac254a19ac290931",
    "number": 995,
    "body": "Rollup of:\r\n\r\n- Update the background thread implementation for extensibility.\r\n- Add a \"context\" to completion results, for use in analyzing which stubs would improve completion.\r\n- Make fourslash test state overridable for extensibility.\r\n- Refactor workspace server instance to allow adding extra settings.\r\n- Display default stubPath in VS Code UI.",
    "head_branch": "pylance-8-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Extensibility updates in threading and fourslash, add completion context (#995)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211343ac254a19ac290932",
    "number": 994,
    "body": "Rollup of:\r\n\r\n- Update the background thread implementation for extensibility.\r\n- Add a \"context\" to completion results, for use in analyzing which stubs would improve completion.\r\n- Make fourslash test state overridable for extensibility.\r\n- Refactor workspace server instance to allow adding extra settings.\r\n- Display default stubPath in VS Code UI.",
    "head_branch": "pylance-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211344ac254a19ac290933",
    "number": 991,
    "body": "schema default is none https://github.com/microsoft/pyright/blob/58a349b50e5212d29ab1606f8f3cb8b6557c7aa5/packages/vscode-pyright/schemas/pyrightconfig.schema.json#L138-L142",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211345ac254a19ac290934",
    "number": 984,
    "body": "…ariables and code blocks in gray) if the LSP client claims not to support this tag.",
    "head_branch": "erictr/unnecessar_tag",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Suppress the use of \"Unnecessary\" diagnostic hints (used to display variables and code blocks in gray) if the LSP client claims not to support this tag. (#984)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211346ac254a19ac290935",
    "number": 980,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add sublime text to the list of supported editors (#980)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211347ac254a19ac290936",
    "number": 979,
    "body": "I made a mistake in the pipeline; `lerna bootstrap` won't always refresh `package-lock.json` when bootstrapping. The style check should have been running `install:all` to ensure that `package-lock.json` is touched if out of date.\r\n\r\nThis PR should fail the first run (as I missed one of the `package-lock.json` files in my original PR), but I will fix it in a second commit; making sure I'm correct.",
    "head_branch": "fix-style-job",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Run install:all in style checker, fix desynced package-lock.json (#979)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211348ac254a19ac290937",
    "number": 978,
    "body": "This is a complete refactoring of the repo structure.\r\n\r\n- Instead of nested packages, all packages are placed in `packages` and are managed by `lerna`.\r\n- The core internal code has been moved into `pyright-internal`. This is a private package, and isn't published.\r\n- Packages that can actually execute code (the pyright CLI and VS Code extension) pull in the internal code via TypeScript path mappings (rather than long relative imports) and webpack, rather than building the bits and copying them around.\r\n- No modules have side effects; the only modules that execute code at the top level are the entrypoints in the CLI and in the extension.\r\n- `typeshed-fallback` is located in `pyright-internal`, and is copied as needed.\r\n\r\nThis leads to faster installs, a cleaner project structure, and the ability to enable watch mode when testing the extension.",
    "head_branch": "monorepo-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Convert repo into a lerna monorepo, add a validation workflow (#978)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211349ac254a19ac290938",
    "number": 977,
    "body": "- Fixes an issue with the types on the progress reporter; the vscode-jsonrpc library can't be a part of the public API.\r\n- Many changes to the auto-import / symbol search system.\r\n- Infrastructure improvements for worker threads.\r\n- Improved auto-import tooltips to display the code that would be inserted (e.g. `from foo import bar` or `import foobar`).",
    "head_branch": "pylance-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix progress reporter type, auto-import/symbol changes, worker thread updates, improve auto-import tooltips (#977)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621134aac254a19ac290939",
    "number": 971,
    "body": "Updates the deps, but pins a set of known-compatible LSP libraries. I've also pinned the node types to 12, as VSC runs 12 (not 14).",
    "head_branch": "fix-deps",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update deps, pin LSP libraries together, use Node 12.x (#971)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621134bac254a19ac29093a",
    "number": 970,
    "body": "",
    "head_branch": "erictr/updateDeps",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621134cac254a19ac29093b",
    "number": 969,
    "body": "",
    "head_branch": "update-readme-emacs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Emacs lsp-mode support in Readme (#969)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621134dac254a19ac29093c",
    "number": 961,
    "body": "Rollup of:\r\n\r\n- Update the LSP libraries to fix client configuration bug.\r\n- Ensure `verboseOutput` is respected when set via a file.\r\n- Ignore spurious file watcher events by porting fix from VS Code's chokidar wrapper and ignoring `__pycache__` events. This drops the peak memory usage back down to levels similar to when the library watcher isn't being used.\r\n- Fix signature help for overloads with no parameters when called without parameters.\r\n- Make completion handler an overridable method in the LS base.",
    "head_branch": "pylance-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync from Pylance (#961)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621134dac254a19ac29093d",
    "number": 940,
    "body": "…ser code or opened files, not library files that are closed.",
    "head_branch": "erictr/workspacesymbol",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Changed \"find workspace symbols\" to return only symbols from within u… (#940)\n\n* Changed \"find workspace symbols\" to return only symbols from within user code or opened files, not library files that are closed.\r\n\r\n* Incorporated PR feedback — don't include open files in the \"workplace symbol\" results.\r\n\r\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621134eac254a19ac29093e",
    "number": 934,
    "body": "- Use the new VS Code object setting schema support to declare in the UI which settings are available, their options, and their descriptions. This raises the minimum VS Code version to 1.47, and ensures this list is always up to date and synced with the enum and pyrightconfigschema.\r\n\r\n![image](https://user-images.githubusercontent.com/5341706/89934337-491e8a80-dbc5-11ea-81d8-378d08443728.png)\r\n\r\n- Update configuration querying code to support querying top-level settings (the `undefined` scope) in Pylance.",
    "head_branch": "pylance-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Declare severity overrides for VS Code UI, fix up some configuration pulling code (#934)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621134fac254a19ac29093f",
    "number": 917,
    "body": "If `python.analysis.autoImportCompletions` is false, auto-import completions will be disabled. Quick-fixes are not affected (as they only appear on request, and VS Code offers more control over that UI via other settings).",
    "head_branch": "pylance-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add python.analysis.autoImportCompletions to control auto-import completions (#917)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211350ac254a19ac290940",
    "number": 915,
    "body": "Syncing from Pylance.\r\n\r\nFixes the case where `python` points to Python 2, as Python 2's `--version` flag outputs via stderr. Parsing `--version` is not recommended by the Python docs in favor of `sys.version_info`. Do that instead as we already do for `sys.path`.",
    "head_branch": "pylance-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use `sys.version_info` to query interpreter version (#915)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211351ac254a19ac290941",
    "number": 888,
    "body": "Rollup of:\r\n\r\n- Refactor initialization process to make it overridable.\r\n- Rework signature help to use new VS Code / LSP APIs. Function overrides and active parameters are handled much, much better.",
    "head_branch": "pylance-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync from Pylance (#888)\n\nRefactor initialization process to make it overridable.\r\n\r\nRework signature help to use new VS Code / LSP APIs. Function overrides and active parameters are handled much, much better."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211352ac254a19ac290942",
    "number": 876,
    "body": "Fixed minor typo on line 33.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed typo (#876)\n\nFixed minor typo on line 33."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211353ac254a19ac290943",
    "number": 841,
    "body": "- Updates Webpack to version 5\r\n- Allow find all references to search libraries if invoked from non-user files\r\n- Fix some webpack config prettier violations",
    "head_branch": "pylance-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync from Pylance (#841)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211354ac254a19ac290944",
    "number": 840,
    "body": "Bumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to 4.17.19.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/lodash/lodash/releases\">lodash's releases</a>.</em></p>\n<blockquote>\n<h2>4.17.16</h2>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/commit/d7fbc52ee0466a6d248f047b5d5c3e6d1e099056\"><code>d7fbc52</code></a> Bump to v4.17.19</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/2e1c0f22f425e9c013815b2cd7c2ebd51f49a8d6\"><code>2e1c0f2</code></a> Add npm-package</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/1b6c282299f4e0271f932b466c67f0f822aa308e\"><code>1b6c282</code></a> Bump to v4.17.18</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/a370ac81408de2da77a82b3c4b61a01a3b9c2fac\"><code>a370ac8</code></a> Bump to v4.17.17</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/1144918f3578a84fcc4986da9b806e63a6175cbb\"><code>1144918</code></a> Rebuild lodash and docs</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/3a3b0fd339c2109563f7e8167dc95265ed82ef3e\"><code>3a3b0fd</code></a> Bump to v4.17.16</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12\"><code>c84fe82</code></a> fix(zipObjectDeep): prototype pollution (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4759\">#4759</a>)</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/e7b28ea6cb17b4ca021e7c9d66218c8c89782f32\"><code>e7b28ea</code></a> Sanitize sourceURL so it cannot affect evaled code (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4518\">#4518</a>)</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/0cec225778d4ac26c2bac95031ecc92a94f08bbb\"><code>0cec225</code></a> Fix lodash.isEqual for circular references (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4320\">#4320</a>) (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4515\">#4515</a>)</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/94c3a8133cb4fcdb50db72b4fd14dd884b195cd5\"><code>94c3a81</code></a> Document matches* shorthands for over* methods (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4510\">#4510</a>) (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4514\">#4514</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/lodash/lodash/compare/4.17.15...4.17.19\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~mathias\">mathias</a>, a new releaser for lodash since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.15&new-version=4.17.19)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/server/lodash-4.17.19",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump lodash from 4.17.15 to 4.17.19 in /server (#840)\n\nBumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to 4.17.19.\r\n- [Release notes](https://github.com/lodash/lodash/releases)\r\n- [Commits](https://github.com/lodash/lodash/compare/4.17.15...4.17.19)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211355ac254a19ac290945",
    "number": 839,
    "body": "Bumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to 4.17.19.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/lodash/lodash/releases\">lodash's releases</a>.</em></p>\n<blockquote>\n<h2>4.17.16</h2>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/commit/d7fbc52ee0466a6d248f047b5d5c3e6d1e099056\"><code>d7fbc52</code></a> Bump to v4.17.19</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/2e1c0f22f425e9c013815b2cd7c2ebd51f49a8d6\"><code>2e1c0f2</code></a> Add npm-package</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/1b6c282299f4e0271f932b466c67f0f822aa308e\"><code>1b6c282</code></a> Bump to v4.17.18</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/a370ac81408de2da77a82b3c4b61a01a3b9c2fac\"><code>a370ac8</code></a> Bump to v4.17.17</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/1144918f3578a84fcc4986da9b806e63a6175cbb\"><code>1144918</code></a> Rebuild lodash and docs</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/3a3b0fd339c2109563f7e8167dc95265ed82ef3e\"><code>3a3b0fd</code></a> Bump to v4.17.16</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12\"><code>c84fe82</code></a> fix(zipObjectDeep): prototype pollution (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4759\">#4759</a>)</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/e7b28ea6cb17b4ca021e7c9d66218c8c89782f32\"><code>e7b28ea</code></a> Sanitize sourceURL so it cannot affect evaled code (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4518\">#4518</a>)</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/0cec225778d4ac26c2bac95031ecc92a94f08bbb\"><code>0cec225</code></a> Fix lodash.isEqual for circular references (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4320\">#4320</a>) (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4515\">#4515</a>)</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/94c3a8133cb4fcdb50db72b4fd14dd884b195cd5\"><code>94c3a81</code></a> Document matches* shorthands for over* methods (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4510\">#4510</a>) (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4514\">#4514</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/lodash/lodash/compare/4.17.15...4.17.19\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~mathias\">mathias</a>, a new releaser for lodash since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.15&new-version=4.17.19)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/client/lodash-4.17.19",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump lodash from 4.17.15 to 4.17.19 in /client (#839)\n\nBumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to 4.17.19.\r\n- [Release notes](https://github.com/lodash/lodash/releases)\r\n- [Commits](https://github.com/lodash/lodash/compare/4.17.15...4.17.19)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211356ac254a19ac290946",
    "number": 838,
    "body": "Bumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to 4.17.19.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/lodash/lodash/releases\">lodash's releases</a>.</em></p>\n<blockquote>\n<h2>4.17.16</h2>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/lodash/lodash/commit/d7fbc52ee0466a6d248f047b5d5c3e6d1e099056\"><code>d7fbc52</code></a> Bump to v4.17.19</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/2e1c0f22f425e9c013815b2cd7c2ebd51f49a8d6\"><code>2e1c0f2</code></a> Add npm-package</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/1b6c282299f4e0271f932b466c67f0f822aa308e\"><code>1b6c282</code></a> Bump to v4.17.18</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/a370ac81408de2da77a82b3c4b61a01a3b9c2fac\"><code>a370ac8</code></a> Bump to v4.17.17</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/1144918f3578a84fcc4986da9b806e63a6175cbb\"><code>1144918</code></a> Rebuild lodash and docs</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/3a3b0fd339c2109563f7e8167dc95265ed82ef3e\"><code>3a3b0fd</code></a> Bump to v4.17.16</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12\"><code>c84fe82</code></a> fix(zipObjectDeep): prototype pollution (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4759\">#4759</a>)</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/e7b28ea6cb17b4ca021e7c9d66218c8c89782f32\"><code>e7b28ea</code></a> Sanitize sourceURL so it cannot affect evaled code (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4518\">#4518</a>)</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/0cec225778d4ac26c2bac95031ecc92a94f08bbb\"><code>0cec225</code></a> Fix lodash.isEqual for circular references (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4320\">#4320</a>) (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4515\">#4515</a>)</li>\n<li><a href=\"https://github.com/lodash/lodash/commit/94c3a8133cb4fcdb50db72b4fd14dd884b195cd5\"><code>94c3a81</code></a> Document matches* shorthands for over* methods (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4510\">#4510</a>) (<a href=\"https://github-redirect.dependabot.com/lodash/lodash/issues/4514\">#4514</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/lodash/lodash/compare/4.17.15...4.17.19\">compare view</a></li>\n</ul>\n</details>\n<details>\n<summary>Maintainer changes</summary>\n<p>This version was pushed to npm by <a href=\"https://www.npmjs.com/~mathias\">mathias</a>, a new releaser for lodash since your current version.</p>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.15&new-version=4.17.19)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/lodash-4.17.19",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump lodash from 4.17.15 to 4.17.19 (#838)\n\nBumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to 4.17.19.\r\n- [Release notes](https://github.com/lodash/lodash/releases)\r\n- [Commits](https://github.com/lodash/lodash/compare/4.17.15...4.17.19)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211357ac254a19ac290947",
    "number": 835,
    "body": "The previous PR (#810 ) for adding an entrypoint for `pyright-langserver` had a problem, the `__rootDirectory` was calculated incorrectly.\r\n\r\n",
    "head_branch": "fix-pyright-langserver-root-directory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "server.ts: Use __rootDirectory from entrypoint if available (#835)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211357ac254a19ac290948",
    "number": 810,
    "body": "- As discussed in #99. This PR adds a new executable `pyright-langserver` that is installed when `npm install -g pyright` is done. This would make it easy to be utilized by other editors.",
    "head_branch": "add-entrypoint-for-pyright-langserver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add new entrypoint for pyright-langserver (#810)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211358ac254a19ac290949",
    "number": 807,
    "body": "Code Action range fix\r\nDisplay of multi-line literals\r\nRemove self from signature in completion item when more appropriate\r\n",
    "head_branch": "push2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes from Pylance. (#807)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211359ac254a19ac29094a",
    "number": 797,
    "body": "PEP 561 - distributing and packaging type information for background provides useful background reading, including sample code for type annotations.\r\n\r\nAddition is in order by PEP number, checked validity of Markdown by looking at \"Preview changes\" in GitHub.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add reference to PEP-561 - distributing and packaging type information for background (#797)\n\nAdd a reference to PEP 561, since I found it useful background reading for type annotations. Addition is in order by PEP number, checked by looking at \"Preview changes\"."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621135aac254a19ac29094b",
    "number": 771,
    "body": "This fixes #764 \r\n\r\nThe [typeshed](https://github.com/python/typeshed/blob/master/CONTRIBUTING.md#stub-file-coding-style) has this to say:\r\n> When adding type annotations for context manager classes, annotate\r\nthe return type of `__exit__` as bool only if the context manager\r\nsometimes suppresses exceptions -- if it sometimes returns `True`\r\nat runtime. If the context manager never suppresses exceptions,\r\nhave the return type be either `None` or `Optional[bool]`. If you\r\nare not sure whether exceptions are suppressed or not or if the\r\ncontext manager is meant to be subclassed, pick `Optional[bool]`.\r\nSee https://github.com/python/mypy/issues/7214 for more details.\r\n\r\nThis PR makes `pyright` follow the statement above, by adding additional code flow analysis to track `with` blocks and check the return type of the context managers.\r\n\r\nThe tests are based on https://github.com/python/mypy/pull/7317 but have been modified to more closely resemble the tests in this repo.",
    "head_branch": "contextlib-suppress",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621135bac254a19ac29094c",
    "number": 766,
    "body": "I'm working on making object settings editable from the GUI in vscode https://github.com/microsoft/vscode/issues/99635. The change in this PR would make the `diagnosticSeverityOverrides`  setting editable from the GUI. We can make it stricter by adding schemas for all of these options mentioned here: https://github.com/microsoft/pyright/blob/master/docs/configuration.md#type-check-diagnostics-settings.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add severity level enum to package.json (#766)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621135cac254a19ac29094d",
    "number": 765,
    "body": "",
    "head_branch": "latest625",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added more logging and fixed hover bug (#765)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621135dac254a19ac29094e",
    "number": 749,
    "body": "",
    "head_branch": "push2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "eslint/prettier fixes, platform and version detection (#749)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621135eac254a19ac29094f",
    "number": 748,
    "body": "",
    "head_branch": "push1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621135fac254a19ac290950",
    "number": 743,
    "body": "Rollup of:\r\n\r\n- Upgrade dependencies, including an LSP bump for new features.\r\n- Fix code actions that appear on the first line.\r\n- Tweak progress bar displaying to display less often for behind-the-scenes analysis.\r\n- Make leveled logging more consistent, configurable.\r\n- Add package scanner for auto-importing top-level package names.\r\n- Fix docstring fetching in relative import cases, `-stub` packages.\r\n\r\n",
    "head_branch": "update-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade dependencies, fix first line code actions, progress bar tweak, logging, package scanning (#743)\n\nRollup of:\r\n\r\n- Upgrade dependencies, including an LSP bump for new features.\r\n- Fix code actions that appear on the first line.\r\n- Tweak progress bar displaying to display less often for behind-the-scenes analysis.\r\n- Make leveled logging more consistent, configurable.\r\n- Add package scanner for auto-importing top-level package names.\r\n- Fix docstring fetching in relative import cases, `-stub` packages."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211360ac254a19ac290951",
    "number": 734,
    "body": "There's a setting to show errors for files _other_ than the files currently open. While I can't think of a scenario where this would make sense, I guess there are and some people find this desireable.\r\n\r\nHowever, this is set to true by default as well. This results in pyright showing errors for files _other_ than the currently open file, which doesn't really make sense. Aside from being extremely confusing, it's quite orthogonal to what any other checker does too.\r\n\r\nThis change makes the default what any developer would expect: when opening a file, see errors for that file and not for other files.\r\n\r\nIt also documents what the alternative setting does, since it's not at all obvious.\r\n\r\n(I was going to open a bug report thinking `pyright` was broken, but it seems its just an oversight in having the werid-case being the default, rather than the normal case).\r\n\r\nThanks for maintaining this, btw!",
    "head_branch": "fix-showing-tons-of-unrelated-errors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211361ac254a19ac290952",
    "number": 719,
    "body": "rollup of:\r\n- fixed linux test break\r\n- fixed duplicate auto import duplications\r\n- refactored progress reporting",
    "head_branch": "update-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix duplicate imports, updated progress reporting, fix linux test break (#719)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211362ac254a19ac290953",
    "number": 711,
    "body": "Hi, I'm a PM on the GitHub security team. This repository is eligible to try the new [GitHub Advanced Security code scanning](https://help.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/about-code-scanning) beta.\n\nCode scanning runs a static analysis tool called CodeQL which scans your code at build time to find any potential security issues. We've tuned the set of queries to be only the most severe, most precise issues. We'll show alerts in the security tab, and we'll show alerts for any net new vulnerabilities on pull requests as well. We've tried to make this super developer friendly, but we'd love your feedback as we work through the beta. \n\nIf you're interested in trying it out, you can merge this pull request to set up the Actions workflow. You can also get this set up yourself in any additional repositories in this organization by following these [instructions](https://help.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/enabling-code-scanning)",
    "head_branch": "codeql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add CodeQL security scanning (#711)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211362ac254a19ac290954",
    "number": 709,
    "body": "",
    "head_branch": "erictr/pythonPath",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211363ac254a19ac290955",
    "number": 708,
    "body": "* [Documentation](https://pre-commit.com/#new-hooks)\r\n* [Examples of other projects that have pre-commit hooks](https://pre-commit.com/hooks.html)",
    "head_branch": "pre-commit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added pre-commit hook (#708)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211364ac254a19ac290956",
    "number": 701,
    "body": "Rollup of:\r\n\r\n- Fix the import message template\r\n- Tweak LS extension interface\r\n- Print LS version on startup\r\n- Improve auto-import completions for package names\r\n- Improve find-all-references/rename for stub+source case",
    "head_branch": "update-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix import message template, add to LS extension, print LS version, auto-import improvements (#701)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211365ac254a19ac290957",
    "number": 685,
    "body": "Rollup of:\r\n\r\n- Initial docstring support via source files, even when stubs are present\r\n- Do not show references in library code\r\n- Add information level\r\n- Underlying support for overriding diagnostics via client settings\r\n- Improve fourslash async tests",
    "head_branch": "update-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use docstrings from source code, fix references showing in libraries, add information level, client override support (#685)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211366ac254a19ac290958",
    "number": 673,
    "body": "Rollup of:\r\n\r\n- A bugfix for Windows paths for compiled libraries\r\n- PEP 604 format printing of Union/Optional for tooltips, messages, etc\r\n- A bugfix for the unused import action showing for variables\r\n- Adding of stubPath and diagnosticMode settings.",
    "head_branch": "update-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix windows bug, add PEP 604 printing, fix unused variable action, add stubPath and diagnosticMode (#673)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211367ac254a19ac290959",
    "number": 663,
    "body": "… refactored \"auto import\" code.\r\n\r\nAlso, unit tests covering auto imports are added.",
    "head_branch": "autoImport",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Introduced UnboundVariable and UndefinedVariable diagnostic rules and refactored auto import and add tests (#663)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211368ac254a19ac29095a",
    "number": 662,
    "body": "Also enables the `eqeqeq` lint rule. 🙂 ",
    "head_branch": "update-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add extraPath support, accept minor versions in version_info, make completion extension async (#662)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211369ac254a19ac29095b",
    "number": 647,
    "body": "changes also have some refactorings and unit tests as well.",
    "head_branch": "renameLibrary",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "prevent rename from changing library code (#647)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621136aac254a19ac29095c",
    "number": 636,
    "body": "",
    "head_branch": "miss-source-diag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add diagnostic for missing imported source file. (#636)\n\nCo-authored-by: Jake Bailey <5341706+jakebailey@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621136bac254a19ac29095d",
    "number": 634,
    "body": "this PR also includes changes where we set completion as completion after a few characters once completion is up",
    "head_branch": "fixCrash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix crash due to exception on bg and etc (#634)\n\nthis PR also includes changes where we set completion as completion after a few characters once completion is up"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621136cac254a19ac29095e",
    "number": 624,
    "body": "… etc\r\n\r\ntagging @MikhailArkhipov ",
    "head_branch": "background",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "moving analysis to background thread and add cancellation support and etc (#624)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621136dac254a19ac29095f",
    "number": 613,
    "body": "Rollup to fix the version mismatches between the packages and prevent VS Code from highlighting the first parameter when no parameter is specified as active (as the LSP client converts `null` to `0` rather than an out-of-bounds value).",
    "head_branch": "update-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Synchronize package.json dependencies, tweak signature help para… (#613)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621136eac254a19ac290960",
    "number": 612,
    "body": "…ype annotations. This makes hover text and completion suggestion text more readable in code bases that are lacking type annotations.",
    "head_branch": "erictr/remove_unknowns",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Changed text representation of functions to omit \"Unused\" parameter type annotations. This makes hover text and completion suggestion text more readable in code bases that are lacking type annotations. (#612)\n\nCo-authored-by: Eric Traut <erictr@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621136fac254a19ac290961",
    "number": 610,
    "body": "This uses the new Prettier 2.0 defaults, with the exception of retaining the old `endOfLine` behavior as the new version always uses LF (whereas we're all using git's auto mode to handle that).",
    "head_branch": "update-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade to Prettier 2.0, reformat (#610)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211370ac254a19ac290962",
    "number": 608,
    "body": "… support for vscode client-base file watcher for files within all workspaces. Chokidar file watcher is no longer used for VS Code extension — only for the command-line version of Pyright.",
    "head_branch": "erictr/filewatcher",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211371ac254a19ac290963",
    "number": 597,
    "body": "Rollup of a few changes.\r\n\r\n- Context based signature help.\r\n- Configuration queries for clients without `workspace/configuration`.\r\n- Minor function additions for LS extensions.",
    "head_branch": "update-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add contextual signature help, handle configuration events as fa… (#597)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211372ac254a19ac290964",
    "number": 596,
    "body": "I implemented support for incremental text changes. Unfortunately, I think this is going to be slower and more expensive than the alternative because incremental changes are specified in terms of lines/columns rather than file offsets. That means the code needs to scan the old file contents to break it into lines, then insert the text change.\r\n\r\nMy inclination is to discard this change and stick with \"full\" text updates. Python source files are typically are, at most, several K in size. Passing the entire contents is cheap.",
    "head_branch": "erictr/incremental_text",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211373ac254a19ac290965",
    "number": 583,
    "body": "cancellation support is added through vscode-languageserver's new cancellation strategy API.\r\n\r\nmore tests on hover and completion.",
    "head_branch": "cancellationSupport3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added cancellation support and more tests. (#583)\n\ncancellation support is added through vscode-languageserver's new cancellation strategy API.\r\n\r\nmore tests on hover and completion."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211373ac254a19ac290966",
    "number": 579,
    "body": "",
    "head_branch": "miscChanges1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added completion test coverage (#579)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211374ac254a19ac290967",
    "number": 574,
    "body": "…rary changes and more tests added.\r\n\r\nauto venv detection makes sure pyright automatically exlude virtual environment from user codes\r\nLS extension points lets plug in such as intellicode to extend what shows up in completion list\r\nauto detection on library let pyright to refresh automatically when new packages are installed/removed.\r\n\r\nmore test coverage on code fix, new features and etc",
    "head_branch": "venvandtest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added auto venv detection, LS extension points, auto detection on library changes and more tests added. (#574)\n\nauto venv detection makes sure pyright automatically exlude virtual environment from user codes\r\nLS extension points lets plug in such as intellicode to extend what shows up in completion list\r\nauto detection on library let pyright to refresh automatically when new packages are installed/removed.\r\n\r\nmore test coverage on code fix, new features and etc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211375ac254a19ac290968",
    "number": 570,
    "body": "…rary changes and more tests added.\r\n\r\nauto venv detection makes sure pyright automatically exlude virtual environment from user codes\r\nLS extension points lets plug in such as intellicode to extend what shows up in completion list\r\nauto detection on library let pyright to refresh automatically when new packages are installed/removed.\r\n\r\nmore test coverage on code fix, new features",
    "head_branch": "moreTests2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211376ac254a19ac290969",
    "number": 566,
    "body": "…on common and tokenizers.",
    "head_branch": "cancellationSupport2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added initial support for cancellation and added more test coverages on common and tokenizers. (#566)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211377ac254a19ac29096a",
    "number": 564,
    "body": "Bumps [acorn](https://github.com/acornjs/acorn) from 7.1.0 to 7.1.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/acornjs/acorn/commit/6d194895783b03b2a37441f01857c34302eab4c8\"><code>6d19489</code></a> Mark release 7.1.1</li>\n<li><a href=\"https://github.com/acornjs/acorn/commit/793c0e569ed1158672e3a40aeed1d8518832b802\"><code>793c0e5</code></a> More rigorously check surrogate pairs in regexp validator</li>\n<li><a href=\"https://github.com/acornjs/acorn/commit/b5c17877ac0511e31579ea31e7650ba1a5871e51\"><code>b5c1787</code></a> Fix incorrect comment in regexp parser</li>\n<li><a href=\"https://github.com/acornjs/acorn/commit/12ae8fed7ebc5b7c894c5976575f33cf36a223cc\"><code>12ae8fe</code></a> Parameterize dummy value and export <code>isDummy</code></li>\n<li><a href=\"https://github.com/acornjs/acorn/commit/fa3ad8cef0f39f5ae0cbd8be0bf65eb0a782133e\"><code>fa3ad8c</code></a> Further refine acorn-walk types</li>\n<li><a href=\"https://github.com/acornjs/acorn/commit/1d5028637852c2834091739646e25dd6558ee7a8\"><code>1d50286</code></a> Fix some errors in walk types</li>\n<li><a href=\"https://github.com/acornjs/acorn/commit/97801f0b5835bc93739666b3494c9b49aeb5fc1d\"><code>97801f0</code></a> Mark acorn-walk 7.1.1</li>\n<li><a href=\"https://github.com/acornjs/acorn/commit/e9372c151f63fe254c7f5e7ffd7a820e34422208\"><code>e9372c1</code></a> Further clean up walker types</li>\n<li><a href=\"https://github.com/acornjs/acorn/commit/de6edeb654cf665e732d822d95c97e2d2fc879bc\"><code>de6edeb</code></a> Remove NarrowNode from walk.d.ts</li>\n<li><a href=\"https://github.com/acornjs/acorn/commit/1d85e7ce982a979bb5411cd00fd9156eecf952a5\"><code>1d85e7c</code></a> Fix: acorn-walk type work with acorn's</li>\n<li>Additional commits viewable in <a href=\"https://github.com/acornjs/acorn/compare/7.1.0...7.1.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=acorn&package-manager=npm_and_yarn&previous-version=7.1.0&new-version=7.1.1)](https://help.github.com/articles/configuring-automated-security-fixes)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language\n- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language\n- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language\n- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language\n\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/pyright/network/alerts).\n\n</details>",
    "head_branch": "dependabot/npm_and_yarn/acorn-7.1.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #564 from microsoft/dependabot/npm_and_yarn/acorn-7.1.1\n\nBump acorn from 7.1.0 to 7.1.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211378ac254a19ac29096b",
    "number": 559,
    "body": "",
    "head_branch": "erictr/restart_server",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #559 from microsoft/erictr/restart_server\n\nImplemented \"Restart Server\" command."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211379ac254a19ac29096c",
    "number": 557,
    "body": "code coverage info should be published to CI now.",
    "head_branch": "benchmark",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added code coverage on CI. (#557)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621137aac254a19ac29096d",
    "number": 553,
    "body": "this should let derived class to override behavior on analysis complete",
    "head_branch": "telemetry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "refactored on analysis completed handler (#553)\n\nthis should let derived class to override behavior on analysis complete"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621137bac254a19ac29096e",
    "number": 552,
    "body": "it is common pratice where user start vscode on repo root but sources are under src. this change introduces a new option called \"autoSearchPaths\" (on by default) that will let LS to detect such case and add \"src\" as extra path to search packages.\r\n\r\nthis PR also includes misc fix on test framework where all file path is normalized to absolute path, let verify diagnostics to handle empty error case and etc.",
    "head_branch": "absolutePath2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "made LS to automatically add \"src\" as one of extra path to find imports. (#552)\n\nit is common pratice where user start vscode on repo root but sources are under src. this change introduces a new option called \"autoSearchPaths\" (on by default) that will let LS to detect such case and add \"src\" as extra path to search packages.\r\n\r\nthis PR also includes misc fix on test framework where all file path is normalized to absolute path, let verify diagnostics to handle empty error case and etc."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621137cac254a19ac29096f",
    "number": 551,
    "body": "PR to test pipelines",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621137dac254a19ac290970",
    "number": 550,
    "body": "adding test created by @huguesv to pyright on doc string.",
    "head_branch": "docStringTest3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added test for hover doc string (#550)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621137eac254a19ac290971",
    "number": 546,
    "body": "this includes changes from @huguesv on doc string improvement and style fix up from @jakebailey ",
    "head_branch": "pyrightChanges",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #546 from heejaechang/pyrightChanges\n\nimproved doc string and more style changes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621137fac254a19ac290972",
    "number": 543,
    "body": "this reformat whole repo using prettier and put all launch setting in repo root rather than splitting them in root and server.",
    "head_branch": "formatting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #543 from heejaechang/formatting\n\nuse prettier for formatting and put all launch setting on repo root"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211380ac254a19ac290973",
    "number": 541,
    "body": "…mmandline arguments so that the benchmark tool can set stdin/stdout",
    "head_branch": "connection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "changing the connection type from IPC to be based on the process's commandline arguments so that the benchmark tool can set stdin/stdout (#541)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211381ac254a19ac290974",
    "number": 537,
    "body": "test",
    "head_branch": "lsiftest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211382ac254a19ac290975",
    "number": 536,
    "body": "Testing Rich Code Nav indexer",
    "head_branch": "richNavTest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211383ac254a19ac290976",
    "number": 534,
    "body": "there are 2 kinds of code actions, one that introduce new files or one that returns text edits. this introduce test for one that adds files. there will be another PR for ones that return text edits.\r\n\r\nthis also includes misc changes such as making del-cli works on windows. and some refactoring to remove language service dependencies on command handler and etc.",
    "head_branch": "codeActionTest2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added code action tests (#534)\n\nthere are 2 kinds of code actions, one that introduce new files or one that returns text edits. this introduce test for one that adds files. there will be another PR for ones that return text edits.\r\n\r\nthis also includes misc changes such as making del-cli works on windows. and some refactoring to remove language service dependencies on command handler and etc."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211384ac254a19ac290977",
    "number": 515,
    "body": "sending PR on behalf of @huguesv \r\n\r\n@erictraut already looked and signed off. this PR is just to make sure CI passes.",
    "head_branch": "importResolverChange2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added a hook to ImportResolver for custom importing logic. (#515)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211384ac254a19ac290978",
    "number": 514,
    "body": "1. added an ability to add library code directly in fourslash test file.\r\n2. added an ability to mount different folder as typeshed folder in virtual file system in fourslash test.\r\n3. added an ability to mount multiple folders in virtual file system.",
    "head_branch": "fourslashLibrary2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "3 fourslash improvement to support custom lib/typeshed folders (#514)\n\n* 3 fourslash improvement to support custom lib/typeshed folders\r\n\r\n1. added an ability to add library code directly in fourslash test file.\r\n2. added an ability to mount different folder as typeshed folder in virtual file system in fourslash test.\r\n3. added an ability to mount multiple folders in virtual file system.\r\n\r\n* addressed PR feedbacks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211385ac254a19ac290979",
    "number": 513,
    "body": "this is over erictr/clean branch.",
    "head_branch": "fixNpm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211386ac254a19ac29097a",
    "number": 512,
    "body": "…ile system directly.\r\n\r\nthis is over erictr/debugging branch.",
    "head_branch": "useVFS",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211387ac254a19ac29097b",
    "number": 511,
    "body": "…debug version of server.",
    "head_branch": "erictr/clean",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #511 from microsoft/erictr/clean\n\nAdded \"clean\" command to build script. Fixed bug in build script for …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211388ac254a19ac29097c",
    "number": 510,
    "body": "Recent changes broke debugging (setting breakpoints, etc.).",
    "head_branch": "erictr/debugging",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #510 from microsoft/erictr/debugging\n\nFixed debug builds."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211389ac254a19ac29097d",
    "number": 509,
    "body": "…_dirname/..)\r\n\r\nfixed the assert and added comments indicating what is supposed to point what.",
    "head_branch": "fixRootDirectoryIssue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #509 from heejaechang/fixRootDirectoryIssue\n\npreviously added assert was using wrong path (__dirname rather than _…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621138aac254a19ac29097e",
    "number": 507,
    "body": "user will now see squiggle on third party library on import statement if it doesn't have a typestub.\r\n\r\nthis will also enable corresponding \"create type stub\" code action to light up. when invoked, \"generated typestub\" can improve user's editing experience.",
    "head_branch": "codeActionRefactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "made reportMissingTypeStub diagnostics warning by default and some refactoring around code actions. (#507)\n\n* enable generate type stub diagnostic (and hence code action) on by default as \"warning\"\r\n\r\n* refactored code action code a bit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621138bac254a19ac29097f",
    "number": 503,
    "body": "my previous work to make pyright test to pass on windows broke linux and mac scenarios.\r\n\r\nthis should fix the issues.",
    "head_branch": "prBugFix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixed regex issue on linux/mac (#503)\n\nmy previous work to make pyright test to pass on windows broke linux and mac scenarios.\r\n\r\nthis should fix the issues."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621138cac254a19ac290980",
    "number": 502,
    "body": "people decided to use tslint for some code style and this fixes those issues. and include changes from @MikhailArkhipov on command handler refactoring.",
    "head_branch": "stylefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixed bunch of tslint issue and refactoring on how command handling works (#502)\n\n* fixes many es/tslint style warnings\r\n* Remove map inside map"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621138dac254a19ac290981",
    "number": 501,
    "body": "ported typescript fourslash test framework to pyright\r\n\r\nthis PR consists of 3 main changes.\r\n\r\nrefactoring on pyright, 2. bunch of helper methods in src/common, 3. fourslash related codes in src/test\r\n...\r\n\r\nfor 1. refactoring.\r\n\r\nit has 2 refactorings on pyright and that affects many pyright code. which made file counts of this PR high.\r\n\r\nfirst refactoring is rename of DiagnosticTextPosition and related types to Position/Range and move them out from diagnostics.ts to textRange.ts.\r\n\r\nthis is done since I needed line column and it is not diagnostic specific concept.\r\n\r\nsecond one is introducing virtual file system to pyright (server/src/common/vfs.ts).\r\n\r\nthis is needed since I needed pyright to run over virtual file system constructed from fourslash files.\r\nalso, after this, nobody in pyright should interact with file system directly (no import * from \"fs\").\r\n\r\n...\r\n\r\nfor 2. bunch of helper methods in src/common\r\n\r\nit is just bunch of helper methods over path, collections, strings and etc fourslash test framework was using. mostly about string, path comparisons, adding/removing collections without caring about corner cases and etc.\r\n\r\n...\r\n\r\nfor 3. fourslash related codes in src/test\r\n\r\nall code related to it should be under src/test/harness and actual tests will be in src/test/fourslash\r\n\r\nfourslash test framework is consist of 5 components\r\n\r\nvirtual file system - this is a file system (server/src/tests/harness/vfs/filesystem.ts) emulating real one. it is a standalone lib people can use for other purpose as well. see (server/src/tests/filesystem.test.ts) on how to use it.\r\n\r\nfourslash test reader/parser\r\nit reads fourslash file like (server/src/tests/fourslash/dataclass1.fourslash.ts) or (server/src/tests/fourSlashParser.test.ts) and return FourSlashData that contains source + markup information.\r\nthis is also a standalone library one can use on other scenarios just for markups.\r\n\r\ntestState\r\nit maintain current test states. such as what file is opened, where the caret position is, what is current active files, selection is. and hold pyright program, virtual file system and etc. this will be given to a fourslash test file when the test run. and people can interact with it to manipulate or verify test results. see (server/src/tests/testState.test.ts) for what it currently supports. this should keep updated as we add new tests and new test ability.\r\none thing to remember is that, TestState is what run at runtime (implementation), but for editting, fourslash.ts (declaration) (server/src/tests/fourslash/fourslash.ts) is the one that is used.\r\nthat is why there is reference path=\"fourslash.ts\" at the top of each fourslash test file (ex, server/src/tests/fourslash/dataclass1.fourslash.ts). because of that, it is important to put declaration in fourslash.ts if one added new functionality in TestState.\r\n\r\nfourslash test runner\r\nthis puts everything together and run given fourslash markup strings. to learn how it actually run code. see (server/src/tests/harness/fourslash/runner.ts).\r\nbasically, it gets sources (python code) out of fourslash string, and construct virtual file system and connect it to pyright using TestState and then compile the given fourslash markup string since it is actually pure typescript code and then wrapped the compiled javascript code under function and eval the code and run it with TestState as argument. the reference path=\"..\" trick works since it gets ignored within method body as a regular comment.\r\nthis is also a standalone lib people can use in other way if wants. see (\r\n\r\nserver/src/tests/testState.test.ts\r\n\r\n test('VerifyDiagnosticsTest1', () => { \r\n) on how to use it.\r\n\r\njest test suite\r\nthis connects fourslash test framework to jest. it basically read fourslash test files in **/test/fourslahs/*.fourslash.ts and register it to jest and run them with the fourslash test runner.\r\n(server/src/tests/fourSlashRunner.test.ts)\r\n...\r\n\r\nPR also includes some misc changes such as ignoring eslint on fourslash.ts files. or js/ts formatting rule such as putting space after template string since that seems what pyright currently has as a code style. and this also includes some of checker.test.ts converted to fourslahst test to show differences. and debugger launch settings for fourslash tests.\r\n\r\n...\r\n\r\nhow to run fourslash tests.\r\n\r\non command line, if one runs jest tests (ex, npm run test), it will run fourslash tests as well. in vscode, if users choose vscode-jest-tests, it will run fourslash tests as well. if user opens fourslash.ts file and then select fourslash current file in debugger configuration and F5, vscode will run only that fourslash test file.",
    "head_branch": "fourslashRI",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #501 from heejaechang/fourslashRI\n\nported typescript fourslash test framework to pyright"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621138eac254a19ac290982",
    "number": 499,
    "body": "- Shared command ids between client and server\r\n- Use enum so ids can me accessed in interfaces with property defaults\r\n- Use TS project reference mechanism to access common definitions from client in server since definitions are outside root directory",
    "head_branch": "commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #499 from MikhailArkhipov/commands\n\nUnify command identifiers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621138fac254a19ac290983",
    "number": 498,
    "body": "…regardless of whether there's a config file.",
    "head_branch": "erictr/typings",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #498 from microsoft/erictr/typings\n\n494: Moved code that sets default typingsPath value so it's executed …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211390ac254a19ac290984",
    "number": 493,
    "body": "",
    "head_branch": "config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #493 from MikhailArkhipov/config\n\nAllow custom configuration settings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211391ac254a19ac290985",
    "number": 488,
    "body": "pretty much work in progress. most of code is straight copy from typescript with some tweaks to make it work in pyright setup.\r\n\r\nadded unit tests to cover code ported. \r\n\r\nthis only includes ones that can be built and pass tests. fixed some existing unit tests to pass on windows over path separator. also fixed/workaround an issue where process.cwd() is used in test when some test do process.changecwd which breaks global state for other tests. \r\n\r\n* work items - open issues to audit usage of normalizeSlashes and process.cwd",
    "head_branch": "pathutils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211391ac254a19ac290986",
    "number": 487,
    "body": "This is to resolve typeshed fallback when bundle setup is different from standard client.",
    "head_branch": "typeshed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #487 from MikhailArkhipov/typeshed\n\nAdd parameter to language server base to pass root directory"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211392ac254a19ac290987",
    "number": 481,
    "body": "- Move server code into a base class and derive specific server from it.\r\n- Add debugging instructions",
    "head_branch": "lsbase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #481 from MikhailArkhipov/lsbase\n\nRefactor server code into a class"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211393ac254a19ac290988",
    "number": 467,
    "body": "There was two \"VS Code Integration\" sessions, and the first had an incomplete content similar to the content of the second one.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #467 from rubenbelem/patch-1\n\nCorrection of README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211394ac254a19ac290989",
    "number": 436,
    "body": "In specific cases it is useful to add custom builtins to get auto completion and type checking without importing a module.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211395ac254a19ac29098a",
    "number": 426,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #426 from jeongukjae/master\n\nFixed wrong arguments in a f-string test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211396ac254a19ac29098b",
    "number": 389,
    "body": "",
    "head_branch": "mistypeOption",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #389 from heejaechang/mistypeOption\n\nadded test for pythonPlatform extraction from json"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211397ac254a19ac29098c",
    "number": 384,
    "body": "added .vs as one of git ignore directory and fixed typo in configOptions.ts",
    "head_branch": "mistypeOption",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #384 from heejaechang/mistypeOption\n\nfixed typo in configoption file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211398ac254a19ac29098d",
    "number": 379,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #379 from cshesse/patch-5\n\nmention multi-root workspaces in configuration doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211399ac254a19ac29098e",
    "number": 367,
    "body": "Currently the `--help` output looks like this:\r\n\r\n```\r\npyright --help\r\nUsage: pyright [options] files...\r\n  Options:\r\n  --createstub IMPORT              Create type stub file(s) for import\r\n  --dependencies                   Emit import dependency information\r\n  -h,--help                        Show this help message\r\n  --lib                            Use library code to infer types when stubs are missing  --outputjson                     Output results in JSON format\r\n  -p,--project FILE OR DIRECTORY   Use the configuration file at this location\r\n  --stats                          Print detailed performance stats\r\n  -t,--typeshed-path DIRECTORY     Use typeshed type stubs at this location\r\n  -v,--venv-path DIRECTORY         Directory that contains virtual environments\r\n  --verbose                        Emit verbose diagnostics\r\n  --version                        Print Pyright version\r\n  -w,--watch                       Continue to run and watch for changes\r\n```",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #367 from cshesse/patch-3\n\nadd missing newline in --help output"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211399ac254a19ac29098f",
    "number": 365,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #365 from cshesse/patch-2\n\nadd missing single quote to error message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621139aac254a19ac290990",
    "number": 357,
    "body": "In my tests `# type ignore` did not seem to work, but `# type: ignore` did.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #357 from cshesse/patch-1\n\ntype: ignore"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621139bac254a19ac290991",
    "number": 339,
    "body": "- Remove double quote before comment\r\n- Highlight `pyrightconfig.json`",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #339 from mesaugat/patch-1\n\nUpdate getting-started.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621139cac254a19ac290992",
    "number": 288,
    "body": "When using the fallback code to get the Python library search paths\r\nfrom the interpreter (i.e. `sys.path`), use the `json` module to\r\ndump the list of paths as output. This enables us to use\r\nJavascript's built-in parser on the result, rather than an ad-hoc\r\nparsing routine.\r\n\r\nNote that the `json` module is available in all versions of Python 3\r\nso backward compatibility should not be an issue.",
    "head_branch": "fix/use-builtin-json-module-when-configuring-via-python-interpreter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #288 from necaris/fix/use-builtin-json-module-when-configuring-via-python-interpreter\n\nUse built-in `json` module to format library search paths, when getting them from the Python interpreter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621139dac254a19ac290993",
    "number": 237,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #237 from fannheyward/patch-1\n\nAdd con-pyright"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621139eac254a19ac290994",
    "number": 226,
    "body": "In the README, the link to the extension links to the same github page.\r\n\r\nPR Changes link to the extension page, https://marketplace.visualstudio.com/items?itemName=ms-pyright.pyright",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #226 from tonybaloney/master\n\nUpdate README link to VS Code extension"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621139fac254a19ac290995",
    "number": 171,
    "body": "#170 This has been fixed in my environment.\r\n![スクリーンショット 2019-07-18 20 48 40](https://user-images.githubusercontent.com/12731507/61455056-7c302380-a99d-11e9-8358-554f0ed04187.png)\r\n",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #171 from higoshi/fix\n\nfix #170"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a0ac254a19ac290996",
    "number": 142,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a1ac254a19ac290997",
    "number": 137,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #137 from ldorigo/patch-1\n\nFix small typo that made list display incorrectly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a1ac254a19ac290998",
    "number": 127,
    "body": "When it is Warning only, it exit normally, and when it is an error, it ends with end code 1.\r\n\r\n```\r\n$ pyright\r\nLoading configuration file at /Users/higoshi/demo/pyrightconfig.json\r\nSearching for source files\r\nFound 1 source file\r\n/Users/higoshi/demo/src/intentional-warnings.py\r\n  3:12 - warning: Inferred type of 'the_list', 'list[Unknown]', is partially unknown\r\n  6:1 - warning: 'CONST_VAR' is constant and cannot be redefined\r\n  13:14 - warning: '_private_var' is private and used outside of its owning class\r\n0 errors, 3 warnings\r\nCompleted in 3.312sec\r\n```\r\n\r\n```\r\n$ echo $?\r\n1\r\n```\r\n\r\nThis PR -> \r\n\r\n```\r\n$ echo $?\r\n0\r\n```",
    "head_branch": "warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #127 from higoshi/warnings\n\nDon't exit at code 1 if only warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a2ac254a19ac290999",
    "number": 118,
    "body": "Enables support of `--version` argument descibed in #117",
    "head_branch": "feature/version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #118 from butuzov/feature/version\n\n`--version` cli argument added to pyright"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a3ac254a19ac29099a",
    "number": 115,
    "body": "Support for multiple workspace folders in vscode.",
    "head_branch": "multiroot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #115 from mhzed/multiroot\n\nAdd support for multi-root workspace"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a4ac254a19ac29099b",
    "number": 112,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #112 from ixje/patch-1\n\nfix typo readme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a5ac254a19ac29099c",
    "number": 87,
    "body": "If 'Boolean' is not specified, 'command-line-args' will set files list as a value of 'watch' property, not the 'files' property the code expects. Now 'pyright --watch *.py' correctly pass python files into the default 'files' property.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #87 from grigoryvp/patch-2\n\nAllow --watch usage with filespec"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a6ac254a19ac29099d",
    "number": 84,
    "body": "'error' object is something like 'RangeError', it doesn't have any 'properties' in JSON sense and will yield a \"{}\" string. But it do have toString() method, so casting it to string will produce a meaningful error description.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a7ac254a19ac29099e",
    "number": 69,
    "body": "",
    "head_branch": "fix-print-compatible-in-python3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #69 from zhangkaizhao/fix-print-compatible-in-python3\n\nFixed print compatible in Python 3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a8ac254a19ac29099f",
    "number": 65,
    "body": "Fix the 'typing.NamedTuple' type check.",
    "head_branch": "namedtuplefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113a9ac254a19ac2909a0",
    "number": 63,
    "body": "Clarifying differences between the Python extension and Pyright extension",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #63 from qubitron/master\n\nSuggestions to update readme for VS Code clarifications"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113aaac254a19ac2909a1",
    "number": 61,
    "body": "Add type check support for sub classed NamedTyple.",
    "head_branch": "namedtuple",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113abac254a19ac2909a2",
    "number": 60,
    "body": "Add type checking for classes extend from typing.NamedTuple.\r\n\r\n",
    "head_branch": "namedtuple",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #60 from mhzed/namedtuple\n\nSupport for subclassing Namedtuple"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113abac254a19ac2909a3",
    "number": 56,
    "body": "",
    "head_branch": "log_warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113acac254a19ac2909a4",
    "number": 55,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113adac254a19ac2909a5",
    "number": 48,
    "body": "fix typo.\r\noptiona -> optional",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #48 from upaver20/master\n\nfix typo."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113aeac254a19ac2909a6",
    "number": 42,
    "body": "The function is not written completely",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #42 from freezestudio/patch-1\n\nUpdate internals.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113afac254a19ac2909a7",
    "number": 36,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #36 from jugmac00/patch-1\n\nFix typo."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113b0ac254a19ac2909a8",
    "number": 35,
    "body": "Minimal change but I found the sentence confusing at first...",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113b1ac254a19ac2909a9",
    "number": 31,
    "body": "Made command-line.md a bit more readable",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #31 from Shwetago/master\n\nUpdate command-line.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113b2ac254a19ac2909aa",
    "number": 27,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #27 from pykong/patch-1\n\nEnhancing FAQ readability"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113b3ac254a19ac2909ab",
    "number": 25,
    "body": "I added some lines to docs.configuration because there is no sample configuration of venv.\r\n\r\nI was stuck at the configuration of venv, so I think this sample will help the users.",
    "head_branch": "docs_configuration_venv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #25 from tamuhey/docs_configuration_venv\n\nAdd sample of vev configuration in docs.configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113b4ac254a19ac2909ac",
    "number": 5,
    "body": "Hello,\r\n\r\nThere seems to be some inconsistency with the log messages. In the VSCode output, I can see that when I open a file the server is printing\r\n\r\n`/home/kinow/Development/python/workspace/cylc/lib/cylc/network/__init__.py opened.`\r\n\r\nBut when I close it, it says:\r\n\r\n`file:///home/kinow/Development/python/workspace/cylc/lib/cylc/network/__init__.py closed.`\r\n\r\nThis change uses the same method used in other `on____()` methods, for the close event, creating a log message more similar to open/change/etc.\r\n\r\nCheers\r\nBruno",
    "head_branch": "log-consistency-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #5 from kinow/log-consistency-1\n\nBe consistent on log messages, using file location instead of URI as in other methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113b4ac254a19ac2909ad",
    "number": 2,
    "body": "Sorry, missed one typo in the README file and noticed while preparing this pull request that is a bit trickier than the previous one.\r\n\r\nIt changes the name of two methods. Used the IDE to alter the methods and find their usages, but not quite sure if that's enough to guarantee I am not breaking anything else.\r\n\r\n`npm run build` passed locally FWIW\r\n\r\nThanks",
    "head_branch": "typo-in-method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2 from kinow/typo-in-method\n\nFix typos in methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113b5ac254a19ac2909ae",
    "number": 1,
    "body": "Fixes a few typos and indentation in a couple of files.\r\n\r\nThanks\r\nBruno ",
    "head_branch": "typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1 from kinow/typos\n\nFix typos"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  }
]