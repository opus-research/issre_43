[
  {
    "_id": "66214c99ac254a19ac294737",
    "number": 2902,
    "body": "Bumps [aiohttp](https://github.com/aio-libs/aiohttp) from 3.9.3 to 3.9.4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/aio-libs/aiohttp/releases\">aiohttp's releases</a>.</em></p>\n<blockquote>\n<h2>3.9.4</h2>\n<h2>Bug fixes</h2>\n<ul>\n<li>\n<p>The asynchronous internals now set the underlying causes\nwhen assigning exceptions to the future objects\n-- by :user:<code>webknjaz</code>.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8089\">#8089</a>.</p>\n</li>\n<li>\n<p>Treated values of <code>Accept-Encoding</code> header as case-insensitive when checking\nfor gzip files -- by :user:<code>steverep</code>.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8104\">#8104</a>.</p>\n</li>\n<li>\n<p>Improved the DNS resolution performance on cache hit -- by :user:<code>bdraco</code>.</p>\n<p>This is achieved by avoiding an :mod:<code>asyncio</code> task creation in this case.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8163\">#8163</a>.</p>\n</li>\n<li>\n<p>Changed the type annotations to allow <code>dict</code> on :meth:<code>aiohttp.MultipartWriter.append</code>,\n:meth:<code>aiohttp.MultipartWriter.append_json</code> and\n:meth:<code>aiohttp.MultipartWriter.append_form</code> -- by :user:<code>cakemanny</code></p>\n<p><em>Related issues and pull requests on GitHub:</em>\n<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7741\">#7741</a>.</p>\n</li>\n<li>\n<p>Ensure websocket transport is closed when client does not close it\n-- by :user:<code>bdraco</code>.</p>\n<p>The transport could remain open if the client did not close it. This\nchange ensures the transport is closed when the client does not close\nit.</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/aio-libs/aiohttp/blob/master/CHANGES.rst\">aiohttp's changelog</a>.</em></p>\n<blockquote>\n<h1>3.9.4 (2024-04-11)</h1>\n<h2>Bug fixes</h2>\n<ul>\n<li>\n<p>The asynchronous internals now set the underlying causes\nwhen assigning exceptions to the future objects\n-- by :user:<code>webknjaz</code>.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n:issue:<code>8089</code>.</p>\n</li>\n<li>\n<p>Treated values of <code>Accept-Encoding</code> header as case-insensitive when checking\nfor gzip files -- by :user:<code>steverep</code>.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n:issue:<code>8104</code>.</p>\n</li>\n<li>\n<p>Improved the DNS resolution performance on cache hit -- by :user:<code>bdraco</code>.</p>\n<p>This is achieved by avoiding an :mod:<code>asyncio</code> task creation in this case.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n:issue:<code>8163</code>.</p>\n</li>\n<li>\n<p>Changed the type annotations to allow <code>dict</code> on :meth:<code>aiohttp.MultipartWriter.append</code>,\n:meth:<code>aiohttp.MultipartWriter.append_json</code> and\n:meth:<code>aiohttp.MultipartWriter.append_form</code> -- by :user:<code>cakemanny</code></p>\n<p><em>Related issues and pull requests on GitHub:</em>\n:issue:<code>7741</code>.</p>\n</li>\n<li>\n<p>Ensure websocket transport is closed when client does not close it\n-- by :user:<code>bdraco</code>.</p>\n<p>The transport could remain open if the client did not close it. This\nchange ensures the transport is closed when the client does not close\nit.</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/b3397c7ac44fc80206d28f1dd0d1f3b10c4ec572\"><code>b3397c7</code></a> Release v3.9.4 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8201\">#8201</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/a7e240a9f625a0b9559bdf5f0049c71565352400\"><code>a7e240a</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8320\">#8320</a>/9ba9a4e5 backport][3.9] Fix Python parser to mark responses without...</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/28335525d1eac015a7e7584137678cbb6ff19397\"><code>2833552</code></a> Escape filenames and paths in HTML when generating index pages (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8317\">#8317</a>) (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8319\">#8319</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/ed43040613988fc4666109aca82a5180ff165df5\"><code>ed43040</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8309\">#8309</a>/c29945a1 backport][3.9] Improve reliability of run_app test (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8315\">#8315</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/ec2be0500e2674eea019c0966a7a905e9b3d6608\"><code>ec2be05</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8299\">#8299</a>/28d026eb backport][3.9] Create marker for internal tests (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8307\">#8307</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/292d961f4ee2829a1b13fad92444a4fd693fbc87\"><code>292d961</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8304\">#8304</a>/88c80c14 backport][3.9] Check for backports in CI (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8305\">#8305</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/cebe526b9c34dc3a3da9140409db63014bc4cf19\"><code>cebe526</code></a> Fix handling of multipart/form-data (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8280\">#8280</a>) (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8302\">#8302</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/270ae9cf6a9e6159b5e29a950deb6ff7600aebc5\"><code>270ae9c</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8297\">#8297</a>/d15f07cf backport][3.9] Upgrade to llhttp 9.2.1 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8292\">#8292</a>) (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8298\">#8298</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/bb231059b14277c34a8a0331e51406d5abe4f424\"><code>bb23105</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8283\">#8283</a>/54e13b0a backport][3.9] Fix blocking I/O in the event loop while pr...</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/3f79241bcbc02c9850348fc04c064fcbc980e8f0\"><code>3f79241</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8286\">#8286</a>/28f1fd88 backport][3.9] docs: remove repetitive word in comment (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8\">#8</a>...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/aio-libs/aiohttp/compare/v3.9.3...v3.9.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=aiohttp&package-manager=pip&previous-version=3.9.3&new-version=3.9.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/aiohttp-3.9.4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214c9aac254a19ac294738",
    "number": 2900,
    "body": "This solves an issue @ianco was seeing in connection reuse with did:peer:2/4.\r\n\r\nThere was a conflict between my expectations while working on did exchange 1.1 updates and what was implemented for connection reuse for did:peer; I was expecting `my_did` and `their_did` to only be set by operations taken in the DID Exchange manager whereas connection reuse was using these values to transfer knowledge of the invitation DID. Ultimately, for the implementation in DID Exchange, I need `my_did` and `their_did` to be unpopulated so we know we need to generate a new DID (which is generally what we want, a \"pairwise\" relationship). The `use_did` implementation and the logic that prevents generation of a new DID rely on `my_did` in particular.\r\n\r\nThe compromise I've landed on is to consider any invitation DID as a \"public\" DID, from the perspective of the connection record. While peer DIDs are not technically public, they are resolvable and the rest of the logic surrounding public DIDs transfers well to this scenario.",
    "head_branch": "fix/connection-reuse-did-peer",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2900) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2900&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2900&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2900&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2900)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2900 from dbluhm/fix/connection-reuse-did-peer\n\nfix: consider all resolvable dids in invites \"public\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214c9aac254a19ac294739",
    "number": 2899,
    "body": "Upgrades `swagger-codegen-cli` and `openapi-generator-cli` to latest releases.\n\nThe swagger one makes no difference to the spec, but the openapi one has some improvements.\n\ne.g. nested models used to reference to subschemas:\n```\n      \"InvitationRecord\" : {\n        \"properties\" : {\n...\n          \"invitation\" : {\n            \"$ref\" : \"#/components/schemas/InvitationRecord_invitation\"\n          },\n\n...\n\n      \"InvitationRecord_invitation\" : {\n        \"allOf\" : [ {\n          \"$ref\" : \"#/components/schemas/InvitationMessage\"\n        } ],\n        \"description\" : \"Out of band invitation message\",\n        \"type\" : \"object\"\n      },\n```\n\nwhich now references directly:\n```\n      \"InvitationRecord\" : {\n        \"properties\" : {\n...\n          \"invitation\" : {\n            \"allOf\" : [ {\n              \"$ref\" : \"#/components/schemas/InvitationMessage\"\n            } ],\n            \"description\" : \"Out of band invitation message\",\n            \"type\" : \"object\"\n          },\n```\n\nNote: there's a \"Connection state\" enum field which was defined from a python set, so its ordering would vary every time the spec is regenerated. I converted that to a sorted list, so its ordering will remain consistent.",
    "head_branch": "update/openapi-codegen-tools",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2899) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2899&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2899&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2899&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2899)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2899 from ff137/update/openapi-codegen-tools\n\n:arrow_up: Upgrade codegen tools used in generate-open-api-specols"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214c9bac254a19ac29473a",
    "number": 2898,
    "body": "The most minor of quality of life improvements.\r\n\r\nThe motivation was to fix typos that appear in the openapi spec, because typos in the model descriptions would propagate to autogenerated clients. \r\n\r\nFixing those, I would 'find all' to fix all instances in the codebase. So at first it was just to fix typos in model descriptions, and that expanded to more parts. \r\nWhen I started correcting double spaces, that's when I knew I'd gone too far.\r\n\r\nUsing the Code Spell Checker vscode extension made this pretty straightforward. Can recommend.\r\n\r\nNo external model names or anything changed, so no breaking changes as a result of corrections. Just internal variable names, comments, and some readme improvements.\r\n\r\nEdit: I also modified model descriptions to no longer contain \\n characters or excessive whitespace, and committed the updated openapi specs, to reflect the changes there as well.\r\n\r\nEdit2: Went a bit above and beyond to correct typos in more modules. Lots of files changed, I know... but a scanning review should just take a couple minutes!",
    "head_branch": "fix/typos",
    "is_a_fork": true,
    "comments": [
      "Looks like a regen of the openapi and swagger json files is necessary after merging #2899 :slightly_smiling_face: ",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2898) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2898&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2898&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2898&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2898)\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214c9cac254a19ac29473b",
    "number": 2897,
    "body": "Fixes #2896.",
    "head_branch": "fix/oob-record-their-service-update",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2897) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2897&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2897&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2897&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2897)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2897 from dbluhm/fix/oob-record-their-service-update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214c9dac254a19ac29473c",
    "number": 2894,
    "body": "A previous refactoring, which introduced a `DictWithIndyAttrValueSchema` class ([^](https://github.com/hyperledger/aries-cloudagent-python/commit/d8a6f3f5a4b9d9b58e9e64916fef23da0c130587)), caused the `IndyAttrValue` model to drop from the openapi spec.\n\nThis PR re-adds the model to the spec\n\nSigned-off-by: ff137 <ff137@proton.me>",
    "head_branch": "fix/openapi-missing-model-IndyAttrValue",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2894) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2894&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2894&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2894&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2894)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2894 from ff137/fix/openapi-missing-model-IndyAttrValue\n\n:bug: Fix IndyAttrValue model that was dropped from openapi spec"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214c9eac254a19ac29473d",
    "number": 2893,
    "body": "Bumps the all-actions group with 1 update: [psf/black](https://github.com/psf/black).\n\nUpdates `psf/black` from 24.3.0 to 24.4.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/releases\">psf/black's releases</a>.</em></p>\n<blockquote>\n<h2>24.4.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fix unwanted crashes caused by AST equivalency check (<a href=\"https://redirect.github.com/psf/black/issues/4290\">#4290</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li><code>if</code> guards in <code>case</code> blocks are now wrapped in parentheses when the line is too long.\n(<a href=\"https://redirect.github.com/psf/black/issues/4269\">#4269</a>)</li>\n<li>Stop moving multiline strings to a new line unless inside brackets (<a href=\"https://redirect.github.com/psf/black/issues/4289\">#4289</a>)</li>\n</ul>\n<h3>Integrations</h3>\n<ul>\n<li>Add a new option <code>use_pyproject</code> to the GitHub Action <code>psf/black</code>. This will read the\nBlack version from <code>pyproject.toml</code>. (<a href=\"https://redirect.github.com/psf/black/issues/4294\">#4294</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/blob/main/CHANGES.md\">psf/black's changelog</a>.</em></p>\n<blockquote>\n<h2>24.4.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fix unwanted crashes caused by AST equivalency check (<a href=\"https://redirect.github.com/psf/black/issues/4290\">#4290</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li><code>if</code> guards in <code>case</code> blocks are now wrapped in parentheses when the line is too long.\n(<a href=\"https://redirect.github.com/psf/black/issues/4269\">#4269</a>)</li>\n<li>Stop moving multiline strings to a new line unless inside brackets (<a href=\"https://redirect.github.com/psf/black/issues/4289\">#4289</a>)</li>\n</ul>\n<h3>Integrations</h3>\n<ul>\n<li>Add a new option <code>use_pyproject</code> to the GitHub Action <code>psf/black</code>. This will read the\nBlack version from <code>pyproject.toml</code>. (<a href=\"https://redirect.github.com/psf/black/issues/4294\">#4294</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/black/commit/8fe627072f15ff2e3d380887b92f7868efaf6d05\"><code>8fe6270</code></a> Prepare release 24.4.0 (<a href=\"https://redirect.github.com/psf/black/issues/4307\">#4307</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/6b25e7cdabe2cd0dc2ec9d0009668af085b1e732\"><code>6b25e7c</code></a> Bump peter-evans/find-comment from 3.0.0 to 3.1.0 (<a href=\"https://redirect.github.com/psf/black/issues/4304\">#4304</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/07fe1ca88abee9a0c88efb6b4213ea04d3fe2eae\"><code>07fe1ca</code></a> docs: remove repetitive word (<a href=\"https://redirect.github.com/psf/black/issues/4303\">#4303</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/3383f531bc25955eebb2644ba5b389413bd10219\"><code>3383f53</code></a> GitHub Action: Allow reading version from pyproject.toml (<a href=\"https://redirect.github.com/psf/black/issues/4294\">#4294</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/c8f1a5542c257491e1e093b1404481ece7f7e02c\"><code>c8f1a55</code></a> [pre-commit.ci] pre-commit autoupdate (<a href=\"https://redirect.github.com/psf/black/issues/4297\">#4297</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/836acad86371578527408a4c8f968cde1302e130\"><code>836acad</code></a> Improve AST safety check (<a href=\"https://redirect.github.com/psf/black/issues/4290\">#4290</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/13bd0925eb347926399a5bcb8b70853549f3da07\"><code>13bd092</code></a> fix: Stop moving multiline strings to a new line unless inside brackets (<a href=\"https://redirect.github.com/psf/black/issues/4289\">#4289</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/c9d2635b55d03cd125465cd6d7477e6c3cb8fba3\"><code>c9d2635</code></a> Remove mocking from tests (<a href=\"https://redirect.github.com/psf/black/issues/4287\">#4287</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/bf1195612c00b008ea67ea0472ae527956eb66fe\"><code>bf11956</code></a> Fix two logging calls in the test helper (<a href=\"https://redirect.github.com/psf/black/issues/4286\">#4286</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/97993f997fe01cf565924072e4915126cdb86ed2\"><code>97993f9</code></a> Bump pypa/cibuildwheel from 2.16.5 to 2.17.0 (<a href=\"https://redirect.github.com/psf/black/issues/4283\">#4283</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/black/compare/24.3.0...24.4.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=psf/black&package-manager=github_actions&previous-version=24.3.0&new-version=24.4.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore <dependency name> major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself)\n- `@dependabot ignore <dependency name> minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself)\n- `@dependabot ignore <dependency name>` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself)\n- `@dependabot unignore <dependency name>` will remove all of the ignore conditions of the specified dependency\n- `@dependabot unignore <dependency name> <ignore condition>` will remove the ignore condition of the specified dependency and ignore conditions\n\n\n</details>",
    "head_branch": "dependabot/github_actions/all-actions-b53b6014b9",
    "is_a_fork": false,
    "comments": [
      "@dependabot rebase",
      "Looks like this PR has been edited by someone other than Dependabot. That means Dependabot can't rebase it - sorry!\n\nIf you're happy for Dependabot to recreate it from scratch, overwriting any edits, you can request `@dependabot recreate`.\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2893) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2893&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2893&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2893&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2893)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2893 from hyperledger/dependabot/github_actions/all-actions-b53b6014b9\n\nchore(deps): Bump psf/black from 24.3.0 to 24.4.0 in the all-actions group"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214c9fac254a19ac29473e",
    "number": 2892,
    "body": "Resolves #2865\r\n\r\nThis PR removes all components and tests referencing the Indy SDK library. This was accomplished by working through each module depending on the library, removing it, and then adjusting the places that referenced that module to be updated to point to replacing components.\r\n\r\nIt should be noted that the code base was already in a pretty good state; the Indy SDK dependencies were pretty neatly isolated. The \"worst\" of these updates was the odd test here and there that was directly using Indy SDK pieces when they should have been using things like `InMemoryProfile.test_profile()` or similar.\r\n\r\nWe have already ceased running tests for Indy specific components automatically in GHA. Because of this, I'm confident the removal of Indy specific tests should not cause a gap we've not already filled. However, I think this will technically result in less overall code coverage of the tests, if you were considering both the indy and non-indy tests.",
    "head_branch": "feature/drop-indy-sdk",
    "is_a_fork": true,
    "comments": [
      "~~I'm not sure about my changes in `aries_cloudagent/ledger/multiple_ledger/manager_provider.py`~~ I think I figured it out.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2892) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2892&resolved=false&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2892&resolutions=WONTFIX)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2892&resolved=false&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2892)\n\n",
      "@jamshale @ianco merged in main and resolved conflicts in the poetry lock. This will need a fresh review but then should be ready to merge. Thanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca0ac254a19ac29473f",
    "number": 2891,
    "body": "Fixes #2890.\r\n\r\nWhen reusing DIDs in invitations, the invitation key is no longer a unique value by which a connection record can be discovered. To workaround this, this change causes connection records to be looked up by invitation message id (request message's pthid) instead of by invitation key.",
    "head_branch": "fix/did-reuse-invitation-issue",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2891) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2891&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2891&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2891&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2891)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2891 from dbluhm/fix/did-reuse-invitation-issue\n\nfix: look up conn record by invite msg id instead of key"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca1ac254a19ac294740",
    "number": 2889,
    "body": "A quick fix for the integration tests. I added the `use_did_method` parameter to the `get_invite` method of the support agent class but forgot to update the `handshake_protocols` list used to did exchange 1.1. Without this change, the int tests were actually just defaulting back to 1.0 behavior of unqualified DIDs.\r\n\r\nThis is just a correction in the tests and does not impact the behavior of ACA-Py which, according to my own testing at least, is still correctly sending qualified DIDs in the appropriate circumstances.",
    "head_branch": "fix/int-tests-use-didex-1.1",
    "is_a_fork": true,
    "comments": [
      "Good catch I just noticed this one today\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2889) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2889&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2889&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2889&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2889)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2889 from dbluhm/fix/int-tests-use-didex-1.1\n\nfix: integration tests should use didex 1.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca1ac254a19ac294741",
    "number": 2888,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "publish-docs-cleanup",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2888) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2888&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2888&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2888&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2888)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2888 from swcurran/publish-docs-cleanup\n\nSome updates to the mkdocs publishing process"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca2ac254a19ac294742",
    "number": 2887,
    "body": "Bumps [idna](https://github.com/kjd/idna) from 3.6 to 3.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/releases\">idna's releases</a>.</em></p>\n<blockquote>\n<h2>v3.7</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/kjd/idna/compare/v3.6...v3.7\">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/blob/master/HISTORY.rst\">idna's changelog</a>.</em></p>\n<blockquote>\n<p>3.7 (2024-04-11)\n++++++++++++++++</p>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could\ntake exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d\"><code>1d365e1</code></a> Release v3.7</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6\"><code>c1b3154</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/172\">#172</a> from kjd/optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623\"><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966\"><code>cd58a23</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/152\">#152</a> from elliotwutingfeng/dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7\"><code>5beb28b</code></a> More efficient resolution of joiner contexts</li>\n<li><a href=\"https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b\"><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>\n<li><a href=\"https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067\"><code>d516b87</code></a> Update Github actions/checkout to v4</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7\"><code>c095c75</code></a> Merge branch 'master' into dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98\"><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201\"><code>5918a0e</code></a> Merge branch 'master' into dev</li>\n<li>Additional commits viewable in <a href=\"https://github.com/kjd/idna/compare/v3.6...v3.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.6&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/idna-3.7",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2887) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2887&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2887&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2887&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2887)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2887 from hyperledger/dependabot/pip/idna-3.7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca3ac254a19ac294743",
    "number": 2886,
    "body": "Bumps [idna](https://github.com/kjd/idna) from 3.4 to 3.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/releases\">idna's releases</a>.</em></p>\n<blockquote>\n<h2>v3.7</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could take exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/kjd/idna/compare/v3.6...v3.7\">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/kjd/idna/blob/master/HISTORY.rst\">idna's changelog</a>.</em></p>\n<blockquote>\n<p>3.7 (2024-04-11)\n++++++++++++++++</p>\n<ul>\n<li>Fix issue where specially crafted inputs to encode() could\ntake exceptionally long amount of time to process. [CVE-2024-3651]</li>\n</ul>\n<p>Thanks to Guido Vranken for reporting the issue.</p>\n<p>3.6 (2023-11-25)\n++++++++++++++++</p>\n<ul>\n<li>Fix regression to include tests in source distribution.</li>\n</ul>\n<p>3.5 (2023-11-24)\n++++++++++++++++</p>\n<ul>\n<li>Update to Unicode 15.1.0</li>\n<li>String codec name is now &quot;idna2008&quot; as overriding the system codec\n&quot;idna&quot; was not working.</li>\n<li>Fix typing error for codec encoding</li>\n<li>&quot;setup.cfg&quot; has been added for this release due to some downstream\nlack of adherence to PEP 517. Should be removed in a future release\nso please prepare accordingly.</li>\n<li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport\nwith PEP 517 and the Python Packaging User Guide for sdist archives.</li>\n<li>Added security reporting protocol for project</li>\n</ul>\n<p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions\nto this release.</p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d\"><code>1d365e1</code></a> Release v3.7</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6\"><code>c1b3154</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/172\">#172</a> from kjd/optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623\"><code>0394ec7</code></a> Merge branch 'master' into optimize-contextj</li>\n<li><a href=\"https://github.com/kjd/idna/commit/cd58a23173d2b0a40b95ee680baf3e59e8d33966\"><code>cd58a23</code></a> Merge pull request <a href=\"https://redirect.github.com/kjd/idna/issues/152\">#152</a> from elliotwutingfeng/dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5beb28b9dd77912c0dd656d8b0fdba3eb80222e7\"><code>5beb28b</code></a> More efficient resolution of joiner contexts</li>\n<li><a href=\"https://github.com/kjd/idna/commit/1b121483ed04d9576a1291758f537e1318cddc8b\"><code>1b12148</code></a> Update ossf/scorecard-action to v2.3.1</li>\n<li><a href=\"https://github.com/kjd/idna/commit/d516b874c3388047934938a500c7488d52c4e067\"><code>d516b87</code></a> Update Github actions/checkout to v4</li>\n<li><a href=\"https://github.com/kjd/idna/commit/c095c75943413c75ebf8ac74179757031b7f80b7\"><code>c095c75</code></a> Merge branch 'master' into dev</li>\n<li><a href=\"https://github.com/kjd/idna/commit/60a0a4cb61ec6834d74306bd8a1fa46daac94c98\"><code>60a0a4c</code></a> Fix typo in GitHub Actions workflow key</li>\n<li><a href=\"https://github.com/kjd/idna/commit/5918a0ef8034379c2e409ae93ee11d24295bb201\"><code>5918a0e</code></a> Merge branch 'master' into dev</li>\n<li>Additional commits viewable in <a href=\"https://github.com/kjd/idna/compare/v3.4...v3.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=idna&package-manager=pip&previous-version=3.4&new-version=3.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/demo/playground/examples/idna-3.7",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2886) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2886&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2886&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2886&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2886)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2886 from hyperledger/dependabot/pip/demo/playground/examples/idna-3.7\n\nchore(deps): Bump idna from 3.4 to 3.7 in /demo/playground/examples"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca4ac254a19ac294744",
    "number": 2885,
    "body": "See https://github.com/hyperledger/aries-cloudagent-python/issues/2884\r\n\r\nJust decided to fix this when I saw it. Doesn't cause any issues but prevents an unwanted 500 error.",
    "head_branch": "feat/2884",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2885) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2885&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2885&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2885&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2885)\n\n"
    ],
    "commit_messages": [
      "Prevent 500 error when re-promoting DID with endorsement (#2885)\n\nSigned-off-by: jamshale <jamiehalebc@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca5ac254a19ac294745",
    "number": 2883,
    "body": "Prevents the `TransactionManagerError` when doing endorsement ack without setting up jobs in auto_endorse mode.",
    "head_branch": "feat/2873",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2883) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2883&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2883&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2883&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2883)\n\n"
    ],
    "commit_messages": [
      "Fix ack during for auto endorsement (#2883)\n\nSigned-off-by: jamshale <jamiehalebc@gmail.com>\r\nCo-authored-by: Stephen Curran <swcurran@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca6ac254a19ac294746",
    "number": 2882,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.12.0",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2882) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2882&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2882&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2882&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2882)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2882 from swcurran/0.12.0\n\n0.12.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca7ac254a19ac294747",
    "number": 2881,
    "body": "Adds a migration guide controllers to upgrade to anoncreds.",
    "head_branch": "feat/2875",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2881) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2881&resolved=false&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2881&resolutions=WONTFIX)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2881&resolved=false&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2881)\n\n",
      "> I'm not as close to the AnonCreds changes of late so it might be valuable to get input from others still but I found this document to be quite thorough and informative and, to my knowledge, accurate.\r\n\r\n:+1: I think it's good enough for now. We might need to make changes when people start using it, but we can adjust it then."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca7ac254a19ac294748",
    "number": 2880,
    "body": "Fixes #2879. See the issue for details and reasoning.",
    "head_branch": "fix/conn-proto-at-invite-phase",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2880) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2880&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2880&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2880&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2880)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2880 from dbluhm/fix/conn-proto-at-invite-phase\n\nfix: conn proto in invite webhook if known"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca8ac254a19ac294749",
    "number": 2878,
    "body": "Final (we hope) RC before the release.  Need to focus a little more on the content of the Changelog message. Doesn't have to be perfect on this one, but feedback definitely welcome on what we highlight, what we talk about, and what links to additional material we cover.\r\n",
    "head_branch": "0.12.0rc3",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2878) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2878&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2878&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2878&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2878)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2878 from swcurran/0.12.0rc3\n\n0.12.0rc3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ca9ac254a19ac29474a",
    "number": 2877,
    "body": "See https://github.com/hyperledger/aries-cloudagent-python/issues/2876",
    "head_branch": "feat/2876",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2877) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2877&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2877&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2877&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2877)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2877 from jamshale/feat/2876\n\nAdd wallet.type config to /settings endpoint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214caaac254a19ac29474b",
    "number": 2872,
    "body": "Addresses issue #2859\r\n",
    "head_branch": "fix/issue-2859",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2872) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2872&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2872&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2872&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2872)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2872 from ianco/fix/issue-2859\n\nEmit the OOB done event even for multi-use invites"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cabac254a19ac29474c",
    "number": 2871,
    "body": null,
    "head_branch": "dependabot",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2871) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2871&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2871&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2871&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2871)\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cacac254a19ac29474d",
    "number": 2870,
    "body": "This PR adds some cleanup to the logging setup to make it easier to understand. Redundant tests have been removed.",
    "head_branch": "refactor/logging",
    "is_a_fork": true,
    "comments": [
      "Overall looks good.  This is the error that's showing up in the integration tests:\r\n\r\n`ValueError: log_file (--log-file) must be provided in multitenant mode.`\r\n",
      "Putting this into draft until we get 0.12.0 out.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2870) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2870&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2870&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2870&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2870)\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cacac254a19ac29474e",
    "number": 2869,
    "body": "Bumps [pillow](https://github.com/python-pillow/Pillow) from 10.2.0 to 10.3.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/releases\">pillow's releases</a>.</em></p>\n<blockquote>\n<h2>10.3.0</h2>\n<p><a href=\"https://pillow.readthedocs.io/en/stable/releasenotes/10.3.0.html\">https://pillow.readthedocs.io/en/stable/releasenotes/10.3.0.html</a></p>\n<h2>Changes</h2>\n<ul>\n<li>CVE-2024-28219: Use strncpy to avoid buffer overflow <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7928\">#7928</a> [<a href=\"https://github.com/hugovk\"><code>@​hugovk</code></a>]</li>\n<li>Use <code>functools.lru_cache</code> for <code>hopper()</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7912\">#7912</a> [<a href=\"https://github.com/hugovk\"><code>@​hugovk</code></a>]</li>\n<li>Raise ValueError if seeking to greater than offset-sized integer in TIFF <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7883\">#7883</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Improve speed of loading QOI images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7925\">#7925</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Added RGB to I;16N conversion <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7920\">#7920</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Add --report argument to <strong>main</strong>.py to omit supported formats <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7818\">#7818</a> [<a href=\"https://github.com/nulano\"><code>@​nulano</code></a>]</li>\n<li>Added RGB to I;16, I;16L and I;16B conversion <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7918\">#7918</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Fix editable installation with custom build backend and configuration options <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7658\">#7658</a> [<a href=\"https://github.com/nulano\"><code>@​nulano</code></a>]</li>\n<li>Fix putdata() for I;16N on big-endian <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7209\">#7209</a> [<a href=\"https://github.com/Yay295\"><code>@​Yay295</code></a>]</li>\n<li>Determine MPO size from markers, not EXIF data <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7884\">#7884</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Improved conversion from RGB to RGBa, LA and La <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7888\">#7888</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Support FITS images with GZIP_1 compression <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7894\">#7894</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Use I;16 mode for 9-bit JPEG 2000 images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7900\">#7900</a> [<a href=\"https://github.com/scaramallion\"><code>@​scaramallion</code></a>]</li>\n<li>Raise ValueError if kmeans is negative <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7891\">#7891</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Remove TIFF tag OSUBFILETYPE when saving using libtiff <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7893\">#7893</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Raise ValueError for negative values when loading P1-P3 PPM images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7882\">#7882</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Added reading of JPEG2000 palettes <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7870\">#7870</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Added alpha_quality argument when saving WebP images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7872\">#7872</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Fixed joined corners for ImageDraw rounded_rectangle() non-integer dimensions <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7881\">#7881</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Removed Python and NumPy pinning on Cygwin <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7880\">#7880</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Update UnidentifiedImageError and <strong>version</strong> imports <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7644\">#7644</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Stop reading EPS image at EOF marker <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7753\">#7753</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>PSD layer co-ordinates may be negative <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7706\">#7706</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Use subprocess with CREATE_NO_WINDOW flag in ImageShow WindowsViewer <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7791\">#7791</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>When saving GIF frame that restores to background color, do not fill identical pixels <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7788\">#7788</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Fixed reading PNG iCCP compression method <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7823\">#7823</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Allow writing IFDRational to UNDEFINED tag <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7840\">#7840</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Fix logged tag name when loading Exif data <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7842\">#7842</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Use maximum frame size in IHDR chunk when saving APNG images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7821\">#7821</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Prevent opening P TGA images without a palette <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7797\">#7797</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Use palette when loading ICO images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7798\">#7798</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Use consistent arguments for load_read and load_seek <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7713\">#7713</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Turn off nullability warnings for macOS SDK <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7827\">#7827</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Fix shift-sign issue in Convert.c <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7838\">#7838</a> [<a href=\"https://github.com/r-barnes\"><code>@​r-barnes</code></a>]</li>\n<li>winbuild: Refactor dependency versions into constants <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7843\">#7843</a> [<a href=\"https://github.com/hugovk\"><code>@​hugovk</code></a>]</li>\n<li>Build macOS arm64 wheels natively <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7852\">#7852</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Fixed typo <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7855\">#7855</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Open 16-bit grayscale PNGs as I;16 <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7849\">#7849</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Handle truncated chunks at the end of PNG images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7709\">#7709</a> [<a href=\"https://github.com/lajiyuan\"><code>@​lajiyuan</code></a>]</li>\n<li>Match mask size to pasted image size in GifImagePlugin <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7779\">#7779</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Changed SupportsGetMesh protocol to be public <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7841\">#7841</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Release GIL while calling <code>WebPAnimDecoderGetNext</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7782\">#7782</a> [<a href=\"https://github.com/evanmiller\"><code>@​evanmiller</code></a>]</li>\n<li>Fixed reading FLI/FLC images with a prefix chunk <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7804\">#7804</a> [<a href=\"https://github.com/twolife\"><code>@​twolife</code></a>]</li>\n<li>Updated package name for Tidelift <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7810\">#7810</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n<li>Removed unused code <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7744\">#7744</a> [<a href=\"https://github.com/radarhere\"><code>@​radarhere</code></a>]</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/python-pillow/Pillow/blob/main/CHANGES.rst\">pillow's changelog</a>.</em></p>\n<blockquote>\n<h2>10.3.0 (2024-04-01)</h2>\n<ul>\n<li>\n<p>CVE-2024-28219: Use <code>strncpy</code> to avoid buffer overflow <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7928\">#7928</a>\n[radarhere, hugovk]</p>\n</li>\n<li>\n<p>Deprecate <code>eval()</code>, replacing it with <code>lambda_eval()</code> and <code>unsafe_eval()</code> <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7927\">#7927</a>\n[radarhere, hugovk]</p>\n</li>\n<li>\n<p>Raise <code>ValueError</code> if seeking to greater than offset-sized integer in TIFF <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7883\">#7883</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Add <code>--report</code> argument to <code>__main__.py</code> to omit supported formats <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7818\">#7818</a>\n[nulano, radarhere, hugovk]</p>\n</li>\n<li>\n<p>Added RGB to I;16, I;16L, I;16B and I;16N conversion <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7918\">#7918</a>, <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7920\">#7920</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Fix editable installation with custom build backend and configuration options <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7658\">#7658</a>\n[nulano, radarhere]</p>\n</li>\n<li>\n<p>Fix putdata() for I;16N on big-endian <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7209\">#7209</a>\n[Yay295, hugovk, radarhere]</p>\n</li>\n<li>\n<p>Determine MPO size from markers, not EXIF data <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7884\">#7884</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Improved conversion from RGB to RGBa, LA and La <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7888\">#7888</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Support FITS images with GZIP_1 compression <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7894\">#7894</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Use I;16 mode for 9-bit JPEG 2000 images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7900\">#7900</a>\n[scaramallion, radarhere]</p>\n</li>\n<li>\n<p>Raise ValueError if kmeans is negative <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7891\">#7891</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Remove TIFF tag OSUBFILETYPE when saving using libtiff <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7893\">#7893</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Raise ValueError for negative values when loading P1-P3 PPM images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7882\">#7882</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Added reading of JPEG2000 palettes <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7870\">#7870</a>\n[radarhere]</p>\n</li>\n<li>\n<p>Added alpha_quality argument when saving WebP images <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7872\">#7872</a>\n[radarhere]</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/5c89d88eee199ba53f64581ea39b6a1bc52feb1a\"><code>5c89d88</code></a> 10.3.0 version bump</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/63cbfcfdea2d163ec93bae8d283fcfe4b73b5dc7\"><code>63cbfcf</code></a> Update CHANGES.rst [ci skip]</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/2776126aa9af322b416eaca247f4f8ebefd08128\"><code>2776126</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7928\">#7928</a> from python-pillow/lcms</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/aeb51cbb169eb3285818ba1390ddf2771d897e6e\"><code>aeb51cb</code></a> Merge branch 'main' into lcms</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/5beb0b66648db8b542bb5260eed79b25e33d643b\"><code>5beb0b6</code></a> Update CHANGES.rst [ci skip]</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/cac6ffa7b399ea79b6239984d1307056a0b19af2\"><code>cac6ffa</code></a> Merge pull request <a href=\"https://redirect.github.com/python-pillow/Pillow/issues/7927\">#7927</a> from python-pillow/imagemath</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/f5eeeacf7539eaa0d93a677d7666bc7c142c8d1c\"><code>f5eeeac</code></a> Name as 'options' in lambda_eval and unsafe_eval, but '_dict' in deprecated eval</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/facf3af93dabcbdd8cdbda8c3b50eefafa3bb04c\"><code>facf3af</code></a> Added release notes</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/2a93aba5cfcf6e241ab4f9392c13e3b74032c061\"><code>2a93aba</code></a> Use strncpy to avoid buffer overflow</li>\n<li><a href=\"https://github.com/python-pillow/Pillow/commit/a670597bc30e9d489656fc9d807170b8f3d7ca57\"><code>a670597</code></a> Update CHANGES.rst [ci skip]</li>\n<li>Additional commits viewable in <a href=\"https://github.com/python-pillow/Pillow/compare/10.2.0...10.3.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=10.2.0&new-version=10.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/pillow-10.3.0",
    "is_a_fork": false,
    "comments": [
      "@dependabot rebase",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2869) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2869&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2869&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2869&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2869)\n\n",
      "I'm confident the failing int test is a fluke so I'm going to go ahead and merge"
    ],
    "commit_messages": [
      "Merge pull request #2869 from hyperledger/dependabot/pip/pillow-10.3.0\n\nchore(deps): Bump pillow from 10.2.0 to 10.3.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cadac254a19ac29474f",
    "number": 2867,
    "body": "I replaced the custom `IssuanceOptionsSchema` schema on the vc/issue endpoint with the previous `LDProofOptionsSchema`. The idea will be to revisit the idea of having custom options field for different endpoints in a post 1.0 version. The verificationMethod option is necessary when issuing using unconventional did methods, such as did:web where the wallet can't correlate a verificationMethod with a specific did",
    "head_branch": "pstlouis/add-missing-verificaiton-method-option",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2867) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2867&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2867&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2867&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2867)\n\n",
      "@dbluhm @jamshale this should be a fairly straight forward review. For a refresher, on the vc-api issuance endpoints, if the controller doesn't provide a `proofType`, it will default to `Ed25519Signature2020` or `BbsBlsSignature2020` depending on the key method of the did."
    ],
    "commit_messages": [
      "Merge pull request #2867 from OpSecId/pstlouis/add-missing-verificaiton-method-option\n\nAdd missing verificaiton method option"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214caeac254a19ac294750",
    "number": 2866,
    "body": "Fix a change that I think @dbluhm did awhile back, which is now causing issues when trying to run tests locally.\r\n\r\n@dbluhm  what was the reason for the fix?  This PR removes your change but maybe there is an alternative that addresses your reasons without breaking local tests ...\r\n",
    "head_branch": "fix/run_tests",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2866) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2866&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2866&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2866&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2866)\n\n",
      "Ah, shoot. Sorry about that. This change fixed a minor annoyance in my environment and I incorrectly assumed that it would work in more \"traditional\" docker environments.",
      "Thanks @ianco !"
    ],
    "commit_messages": [
      "Merge pull request #2866 from ianco/fix/run_tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cafac254a19ac294751",
    "number": 2862,
    "body": "This implements #2857. With one modification: rather than having a single parameter `use_did`, I found that the processing became significantly simpler by having a `use_did` and `use_did_method` parameter. Hopefully that's an acceptable trade off.\r\n\r\nWIP: Currently, just the updates to the did exchange routes have been made. Working through the OOB route updates now. Wanted to open early for feedback.",
    "head_branch": "refactor/use-did",
    "is_a_fork": true,
    "comments": [
      "Quick update, I took a stab at wrangling the logic of the `create_invitation` method on the OOB manager by introducing a separate class for the purpose. Felt like overkill but the more I leaned into the approach, the clearer it became to me that the logic _is_ rather complex and having it be split up this way might help. Interested in feedback if anyone has any.",
      "https://github.com/hyperledger/aries-cloudagent-python/actions/runs/8542753211/job/23405071552?pr=2862#step:3:31413\r\n\r\nI think this test failure is unrelated so I'll focus on fixing unit tests first and removing the emit flags officially.",
      "Yes — we are getting this error too often. Pretty sure it is that the DID Seed is not random enough — we keep reusing DIDs used in earlier tests...",
      "Quick note that with the removal of the `--emit-did-peer-4` and `--emit-did-peer-2` flags, I believe that would mean that the AATH tests recently added for qualified DIDs might need to be updated since those tests depend on using these flags.",
      "I was seeing test failures that I was not certain were related to my changes here so I went ahead and fixed #2855 in 62744c1",
      "Interop testing is looking pretty good. I have some small issues to sort out with backwards compat still (my respond-in-kind for the message version is a little wonky) but should be wrapping up soon.",
      "This is ready for review!",
      "Good point! I'll see if I can toss in a quick doc update somewhere",
      "As I was writing the docs, I realized there is one case I overlooked: when the inviter creates an invite with didexchage/1.1 only and the invitee supports 1.1, it is still sending an unqualified DID in a 1.1 message if the invitee accepts the invitation without specifying a `use_did_method`. I believe it would be preferable for the invitee to automatically prefer using `did:peer:4` in this case. I'll go ahead and make that tweak but open to thoughts if there are any.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2862) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2862&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2862&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2862&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2862)\n\n",
      "@ianco @jamshale I made a couple of fixes and added a new doc outlining use of qualified DIDs in ACA-Py, with details on OOB, DID Exchange, and DID Rotation.",
      "@dbluhm — are you happy that this is ready to merge?  If so — we can push 0.12.0-rc3 out.\r\n",
      "Yep, ready! I was half keeping an eye on the integration tests just to be sure but my testing indicates that it should be fine"
    ],
    "commit_messages": [
      "Merge pull request #2862 from dbluhm/refactor/use-did\n\nrefactor: introduce use_did and use_did_method"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb0ac254a19ac294752",
    "number": 2861,
    "body": "### Summary\r\nPull request introduces comprehensive support for AnonCreds within the W3C VCDI formats. The changes include the addition of new models, methods, and protocols that enable the Aries Cloud Agent Python to issue, hold, and verify credentials in alignment with W3C's VCDI standards.\r\n\r\n### Changes Overview\r\n\r\n- AnonCreds Integration: Updated the anoncreds module to handle VCDI-compliant credential offers, requests, and credentials.\r\n- Indy Models: Adapted indy/models to map onto VCDI credential.\r\n- Issue Credential Protocol v2.0: Incorporated VCDI support into the existing issue_credential protocol\r\n- VCDI Credential Format Handling: Introduced a new vc_di module within formats to handle the specificities of the VCDI credential format.\r\n- Updated alice/faber demo: Introduced handling of multiple cred demo with cred-type argument\r\n\r\n### Detailed Changes\r\n\r\n- Added handler.py in protocols/issue_credential/v2_0/formats/vc_di to manage VCDI credential operations.\r\n- Created test_handler.py in the same directory to ensure robustness and reliability through comprehensive testing.\r\n- Introduced vc_di.py within models/detail for detailed VCDI model definitions.\r\n- Updated test_routes.py to test the integration of VCDI routes within the agent's service layer.\r\n- Revised routes.py to handle API endpoints related to VCDI credential operations.\r\n- Updated faber.py\r\n- Update alice.py\r\n- Updated agent_container.py\r\n- Updated performance.py\r\n\r\n\r\n### Additional Notes\r\nLink to the detailed documentation and specifications: [W3C VCDI Integration](https://hackmd.io/@swcurran/ryZDzTbta)",
    "head_branch": "feat/vc-di",
    "is_a_fork": true,
    "comments": [
      "Does this replace the other PR?  (In which case we can close it)\r\n\r\nAlso please make sure to include in the description of this PR a ...  description of what the PR includes (and if there is any work still in progress) to help us to know what to review.\r\n\r\nThanks",
      "> Does this replace the other PR? (In which case we can close it)\r\n> \r\n> Also please make sure to include in the description of this PR a ... description of what the PR includes (and if there is any work still in progress) to help us to know what to review.\r\n> \r\n> Thanks\r\n\r\nThank you for your comments. Indeed, this replaces the previous PR and will close that one. I will update the detaild description as soon as I complete the modification and testing.",
      "Looks good @sarthakvijayvergiya make sure as you wrap up to check all the comments in https://github.com/hyperledger/aries-cloudagent-python/pull/2830 as well",
      "> Does this replace the other PR? (In which case we can close it)\r\n> \r\n> Also please make sure to include in the description of this PR a ... description of what the PR includes (and if there is any work still in progress) to help us to know what to review.\r\n> \r\n> Thanks\r\n\r\nyes, closed the other.  this one is not fully ready for review yet, @sarthakvijayvergiya however can you keep the description up to date on what parts are complete?",
      "Also ...  I think for the demo we should add an option where the user can change Faber's credential_type \"on the fly\" (i.e. specify on startup but then change while faber is running).  Eventually we need to test issuing a credential using \"vc_di\" and then testing a \"legacy\" proof request, or issuing a \"legacy\" credential and then requesting a \"vc_di\" proof.\r\n\r\nAgain not necessary for this PR ...\r\n",
      "I'm still doing some testing, but overall looks good!  Just a few minor comments ...\r\n\r\nA couple of things we need:\r\n- updates to documentation - a reference in the demo docs that `--cred-type vc_di` is now an option\r\n- maybe in `docs/features` ... reference to `vc_di` as a supported format for issuing credentials (@swcurran where should this be documented?)\r\n- at least one integration test\r\n\r\nFor the last one, it should be a simple matter of adding a new scenario to `0453-issue-credential.feature`, like:\r\n\r\n```\r\n    @GHA @WalletType_Askar_AnonCreds @BasicTest\r\n    Examples:\r\n       | Acme_capabilities                          | Bob_capabilities              | Schema_name    | Credential_data          | Acme_extra | Bob_extra |\r\n       | --public-did --wallet-type askar-anoncreds | --wallet-type askar-anoncreds | driverslicense | Data_DL_NormalizedValues |            |           |\r\n       | --public-did --wallet-type askar-anoncreds --cred-type vc_di | --wallet-type askar-anoncreds | driverslicense | Data_DL_NormalizedValues |            |           |\r\n```\r\n",
      "I would really like to see at least an interactive run of using Credo-TS as a holder, and using ACA-Py as an issuer and verifier.  Crucial for the CWU is to see the interop.  Thoughts on that?  We can engage the devs from Animo in helping with that. ",
      "> I would really like to see at least an interactive run of using Credo-TS as a holder, and using ACA-Py as an issuer and verifier. Crucial for the CWU is to see the interop. Thoughts on that? We can engage the devs from Animo in helping with that.\r\n\r\nCould we do this using AATH?  (Or AMTH?)",
      "AATH would be awesome.  I don’t know the effort, but we would need someone that knows AATH to help out. The scope is too much for this work, unfortunately.  My big concern is the current state of the Credo Backchannel. It needs work.",
      "I ran a quick test of the alice/faber demo and it failed.  I did the `./run_demo build ...` on each agent and then:\r\n\r\nFaber:  `$ AGENT_PORT_OVERRIDE=8010 ./run_demo run faber --wallet-type askar-anoncreds --cred-type vc_di`\r\n\r\nAlice:  `$ ./run_demo run alice --wallet-type askar-anoncreds`\r\n\r\nThen connected and tried to issue a credential:\r\n\r\n```\r\n[1/2/3/4/T/X] 1                                                                                                                                                                                                    \r\n\r\n#13 Issue credential offer to X\r\nFaber      | Credential: state = offer-sent, cred_ex_id = d5d5afa6-bb30-4b35-a085-96b935cbb9cc\r\nFaber      | 2024-04-29 16:19:42,627 aries_cloudagent.messaging.models.base ERROR V20CredRequest message validation error:\r\nFaber      | Traceback (most recent call last):\r\nFaber      |   File \"/home/aries/aries_cloudagent/messaging/models/base.py\", line 196, in deserialize\r\nFaber      |     schema.loads(obj) if isinstance(obj, str) else schema.load(obj),\r\nFaber      |   File \"/home/aries/.local/lib/python3.9/site-packages/marshmallow/schema.py\", line 723, in load\r\nFaber      |     return self._do_load(\r\nFaber      |   File \"/home/aries/.local/lib/python3.9/site-packages/marshmallow/schema.py\", line 910, in _do_load\r\nFaber      |     raise exc\r\nFaber      | marshmallow.exceptions.ValidationError: {'binding_proof': {'anoncreds_link_secret': {'entropy': ['Value did:peer:4zQmetubuCeDizQRVaJWscDcGxrz65Cyv7RyFMAmCCFpQk22 is not an indy decentralized identifier (DID)']}}}\r\nFaber      | 2024-04-29 16:19:42,630 aries_cloudagent.core.dispatcher ERROR Message parsing failed: Error deserializing message: V20CredRequest schema validation failed, sending problem report\r\n```\r\n\r\nTagging @swcurran  and @dbluhm  because it looks like we're using a `did:peer:4` here for some reason and the marshmallow schema isn't accepting it ...\r\n\r\n",
      "... also when I run the integration tests they all report as \"pass\" but when I look through the logs there are errors:\r\n\r\n```\r\n$ AGENT_PORT_OVERRIDE=8030 ./run_bdd -t @T003-RFC0453\r\n...\r\n    When \"Bob\" requests a credential with data Data_DL_NormalizedValues from \"Acme\" it fails # features/steps/0453-issue-credential.py:127\r\nBob.agent  | 2024-04-29 16:41:48,606 aries_cloudagent.admin.server ERROR Handler error with exception: Unprocessable Entity\r\nBob.agent  | Traceback (most recent call last):\r\nBob.agent  |   File \"/home/aries/.local/lib/python3.9/site-packages/webargs/asyncparser.py\", line 90, in parse\r\nBob.agent  |     result = schema.load(parsed)\r\nBob.agent  |   File \"/home/aries/.local/lib/python3.9/site-packages/marshmallow/schema.py\", line 723, in load\r\n>>> after_scenario activated\r\n>>> shutting down active agents ...\r\n    shutting down: Acme\r\nShutting down agent ...\r\nBob.agent  |     return self._do_load(\r\nBob.agent  |   File \"/home/aries/.local/lib/python3.9/site-packages/marshmallow/schema.py\", line 910, in _do_load\r\nBob.agent  |     raise exc\r\nBob.agent  | marshmallow.exceptions.ValidationError: {'filter': {'ld_proof': ['Missing data for required field.']}}\r\nBob.agent  | \r\nBob.agent  | During handling of the above exception, another exception occurred:\r\nBob.agent  | \r\nBob.agent  | Traceback (most recent call last):\r\nBob.agent  |   File \"/home/aries/aries_cloudagent/admin/server.py\", line 181, in ready_middleware\r\nBob.agent  |     return await handler(request)\r\nBob.agent  |   File \"/home/aries/aries_cloudagent/admin/server.py\", line 218, in debug_middleware\r\nBob.agent  |     return await handler(request)\r\nBob.agent  |   File \"/home/aries/aries_cloudagent/admin/server.py\", line 386, in check_multitenant_authorization\r\nBob.agent  |     return await handler(request)\r\nBob.agent  |   File \"/home/aries/aries_cloudagent/admin/server.py\", line 451, in setup_context\r\nBob.agent  |     return await task\r\nBob.agent  |   File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\nBob.agent  |     yield self  # This tells Task to wait for completion.\r\nBob.agent  |   File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\nBob.agent  |     future.result()\r\nBob.agent  |   File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\nBob.agent  |     raise self._exception\r\nBob.agent  |   File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 256, in __step\r\nBob.agent  |     result = coro.send(None)\r\nBob.agent  |   File \"/home/aries/.local/lib/python3.9/site-packages/aiohttp_apispec/middlewares.py\", line 33, in validation_middleware\r\nBob.agent  |     data = await request.app[\"_apispec_parser\"].parse(\r\nBob.agent  |   File \"/home/aries/.local/lib/python3.9/site-packages/webargs/asyncparser.py\", line 94, in parse\r\nBob.agent  |     await self._on_validation_error(\r\nBob.agent  |   File \"/home/aries/.local/lib/python3.9/site-packages/webargs/asyncparser.py\", line 108, in _on_validation_error\r\nBob.agent  |     await error_handler(error, req, schema, error_status_code, error_headers)\r\nBob.agent  |   File \"/home/aries/.local/lib/python3.9/site-packages/webargs/aiohttpparser.py\", line 163, in handle_error\r\nBob.agent  |     raise error_class(\r\nBob.agent  | aiohttp.web_exceptions.HTTPUnprocessableEntity: Unprocessable Entity\r\n```\r\n",
      "Running the alice/faber demo with the `--events` flag I can see that alice receives the credential offer and sends the credential request, and faber gets the error receiving the request.  Here is the cred request, I'm not sure how the `did:peer:4` gets in there or why faber cares what is the format of the \"entropy\":\r\n\r\n```\r\n        \"cred_request\": {\r\n            \"vc_di\": {\r\n                \"data_model_version\": \"2.0\",\r\n                \"binding_proof\": {\r\n                    \"anoncreds_link_secret\": {\r\n                        \"entropy\": \"did:peer:4zQmSz9RPHAXYyKe8RNEaH3DWz6jAzYVADZWt82h88URnYTg\",\r\n                        \"cred_def_id\": \"7JcY3HVEaUwXdoXeSeFSSi:3:CL:176:faber.agent.degree_schema\",\r\n                        \"blinded_ms\": {\r\n                            \"u\": \"98157803620660872170402354543798974200462544452245591862217725500504386281160961655563679393987978770632568196480064042932031478725476063915670091399243123044122923246815807721802098890962420986125428117490105853961326051702005632977344987905700321953571139659140865989527824169498631840709995380507817419826662772277722439467289687048146883920558627162230071386049697776277292986334401664583542979134445423113364037510563284891531520997746722867719148651795256773203744802404879619935812531852155599459431918862100233592485693666170250989538356501445054894228211868579282658727052977550795345340387507015924540012548\",\r\n                            \"ur\": null,\r\n                            \"hidden_attributes\": [\r\n                                \"master_secret\"\r\n                            ],\r\n                            \"committed_attributes\": {}\r\n                        },\r\n                        \"blinded_ms_correctness_proof\": {\r\n                            \"c\": \"59433802809596338271128470279603183486702814236484143165828684066161975073261\",\r\n                            \"v_dash_cap\": \"2291688135408765057454102999713290079468470806026404345010878504526654291637245987562467966244405580205292137949428093919085198310059447159324212870553877066735257526420053820932460859921179097316828804442130780534924326501078304785117073706502754035170388518062719574873475329608590008271662112168037204411383802356689765012068442072241086717499759364113588149218843455030220001906292019130107467050776769753277284854618996023764841503608868017026452558261583504715139095668493430196979432551095789861656950035970995288498080778896408155269698695357277285620211683342360165406497987029591209902977936516027482604268823342975636845320416001178746420147803174461964012518294044516186535247995738909218895238190583877815\",\r\n                            \"m_caps\": {\r\n                                \"master_secret\": \"22460859598887235898916958953680270931050220445132084890048716866094989991233598532889415785637083539883931553700153352400740539022798084603405103364810530827905738895125862866024\"\r\n                            },\r\n                            \"r_caps\": {}\r\n                        },\r\n                        \"nonce\": \"595869006883776147466000\"\r\n                    },\r\n                    \"didcomm_signed_attachment\": {\r\n                        \"attachment_id\": \"test\"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n```\r\n",
      "> I ran a quick test of the alice/faber demo and it failed. I did the `./run_demo build ...` on each agent and then:\r\n> \r\n> Faber: `$ AGENT_PORT_OVERRIDE=8010 ./run_demo run faber --wallet-type askar-anoncreds --cred-type vc_di`\r\n> \r\n> Alice: `$ ./run_demo run alice --wallet-type askar-anoncreds`\r\n> \r\n> Then connected and tried to issue a credential:\r\n> \r\n> ```\r\n> [1/2/3/4/T/X] 1                                                                                                                                                                                                    \r\n> \r\n> #13 Issue credential offer to X\r\n> Faber      | Credential: state = offer-sent, cred_ex_id = d5d5afa6-bb30-4b35-a085-96b935cbb9cc\r\n> Faber      | 2024-04-29 16:19:42,627 aries_cloudagent.messaging.models.base ERROR V20CredRequest message validation error:\r\n> Faber      | Traceback (most recent call last):\r\n> Faber      |   File \"/home/aries/aries_cloudagent/messaging/models/base.py\", line 196, in deserialize\r\n> Faber      |     schema.loads(obj) if isinstance(obj, str) else schema.load(obj),\r\n> Faber      |   File \"/home/aries/.local/lib/python3.9/site-packages/marshmallow/schema.py\", line 723, in load\r\n> Faber      |     return self._do_load(\r\n> Faber      |   File \"/home/aries/.local/lib/python3.9/site-packages/marshmallow/schema.py\", line 910, in _do_load\r\n> Faber      |     raise exc\r\n> Faber      | marshmallow.exceptions.ValidationError: {'binding_proof': {'anoncreds_link_secret': {'entropy': ['Value did:peer:4zQmetubuCeDizQRVaJWscDcGxrz65Cyv7RyFMAmCCFpQk22 is not an indy decentralized identifier (DID)']}}}\r\n> Faber      | 2024-04-29 16:19:42,630 aries_cloudagent.core.dispatcher ERROR Message parsing failed: Error deserializing message: V20CredRequest schema validation failed, sending problem report\r\n> ```\r\n> \r\n> Tagging @swcurran and @dbluhm because it looks like we're using a `did:peer:4` here for some reason and the marshmallow schema isn't accepting it ...\r\n\r\nI created issue #2923 for this — I think it is an urgent one for 0.12.1. An qualified DID is being used by Alice, being sent in the `request` message, and is incorrectly being verified and required to be an unqualified (or did:sov) peer DID.  The verification needs to be removed from wherever it is happening.",
      "> I created issue #2923 for this — I think it is an urgent one for 0.12.1. An qualified DID is being used by Alice, being sent in the `request` message, and is incorrectly being verified and required to be an unqualified (or did:sov) peer DID. The verification needs to be removed from wherever it is happening.\r\n\r\nI suspect this is just an issue with the new vc_di but I will do a bit of digging\r\n",
      "@ianco when you take a look at this, my thought is if the code is correct and passing the current integration tests, we should merge this PR before it gets more outdated, and start a new one for any additional integration tests and also the one for the DIF format (see questions there)\r\n\r\nLet me know if you think differently.",
      "One question - if in the DIF pr they are calling it `di_vc` should we change all references in here to `di_vc` ?  @swcurran was there a decision made about what the name is, of Veriable Credentials with Data Integrity, 'vc_di' or 'di_vc' ?",
      "> @ianco when you take a look at this, my thought is if the code is correct and passing the current integration tests, we should merge this PR before it gets more outdated, and start a new one for any additional integration tests and also the one for the DIF format (see questions there)\r\n> \r\n> Let me know if you think differently.\r\n\r\nYes once this is working we should merge, and then we can deal with outstanding functionality in separate PR's.\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2861) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2861&resolved=false&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2861&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2861&resolved=false&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2861)\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb1ac254a19ac294753",
    "number": 2860,
    "body": "Resolves #2318 \r\n\r\nOpening draft PR early for feedback while I work through the changes across the code (and fixing/updating/adding tests as needed).\r\n\r\nThe PR removes the authentication middleware and the logic they deal with, and implements two decorators:\r\n\r\n- `admin_authentication`: to be used for routes that should ONLY be invoked by an administrator, such as the multitenancy endpoints, the server endpoints and so on, independently of the mode the agent is running as.\r\n- `tenant_authentication`: to be used to require authentication by either providing a tenant token (multi-tenant mode) or a valid api-key (single-tenant mode).\r\n\r\nBoth decorators account for unauthenticated `options` requests as well as insecure mode. Insecure paths will just not be decorated. Middleware code - currently commented-out - will be removed.\r\n\r\nI think the bit of refactoring required for this to work (including plugins once released) is well worth the flexibility - looking for early feedback especially from @dbluhm, @ianco, @jamshale ",
    "head_branch": "feature/api-key-tweaks",
    "is_a_fork": true,
    "comments": [
      "Looks good upon first glance.\r\n",
      "> Looks good upon first glance.\r\n\r\nThanks @ianco . I've pushed updates to all the route handlers, now working on cleaning-up and fixing/adding tests and validating things really work as expected.",
      "Fixed the route tests, still need to tackle removing the now failing middleware tests and add tests for the decorator functions.\r\nUnsure why the formatter check is failing as it looks (to me) like the change it suggests is the same as the change that is already there?",
      "Rebased code off the latest main. I am currently fighting with failing unit tests: when calling endpoints in the `server` API namespace, I get the following error and have been so far unable to figure out why it is being triggered even after stepping through the code execution:\r\n```log\r\n2024-04-08 18:21:29,365 aiohttp.server ERROR Error handling request\r\nTraceback (most recent call last):\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/aiohttp/web_protocol.py\", line 433, in _handle_request\r\n    resp = await request_handler(request)\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/aiohttp/web_app.py\", line 504, in _handle\r\n    resp = await handler(request)\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/aiohttp/web_middlewares.py\", line 117, in impl\r\n    return await handler(request)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 180, in ready_middleware\r\n    return await handler(request)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 217, in debug_middleware\r\n    return await handler(request)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 362, in setup_context\r\n    return await task\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\n    future.result()\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 256, in __step\r\n    result = coro.send(None)\r\n  File \"/usr/local/lib/python3.9/site-packages/aiohttp_apispec/middlewares.py\", line 45, in validation_middleware\r\n    return await handler(request)\r\nTypeError: admin_auth() takes 1 positional argument but 2 were given\r\n```\r\nStepping through the code with the debugger shows that the exception is thrown at [this line](https://github.com/esune/aries-cloudagent-python/blob/9ea43ad38fe26c6f36b0cee75f5091d45fd28c2d/aries_cloudagent/admin/server.py#L181).\r\n\r\nAn easy way to reproduce is to start the agent and call any of the endpoints protected with `admin-authentication` in the `server` namespace. Please note that calling similarly set-up endpoints in the `multitenancy` namespace does work as expected.\r\nAny input is appreciated as this is now blocking progress (want to fix this scenario before creating new tests for the decorators).",
      "All tests should be fixed now. I updated/synced the version of Black as three different versions were specified between `pyproject.toml`, `.pre-commit-config.yaml` and `blackformat.yml` and ran the formatter on the project, however it still raises potential changes - if anyone has an idea of why/how to address this please let me know.\r\n\r\nOnly thing left now is adding tests specific to the decorators.",
      "> All tests should be fixed now. I updated/synced the version of Black as three different versions were specified between `pyproject.toml`, `.pre-commit-config.yaml` and `blackformat.yml` and ran the formatter on the project, however it still raises potential changes - if anyone has an idea of why/how to address this please let me know.\r\n\r\nI haven't looked into the pre-commit or black format files. I use the `ruff` vscode extension to format my files and it seems to work well with the project. If I do get a fail from black on the PR I use the `Run and Debug` black or ruff process from the devcontainer and it re-formats the code correctly for me. \r\n\r\n",
      "This is - finally - ready for review.",
      "There's one failing unit test because of a ruff formatting error. `aries_cloudagent/config/argparse.py:650:91: E501 Line too long`.\r\nYou can just add `  # noqa: E501` to the end of that line.",
      "Looks good and I will approve. I just had one comment about how there is a upgrade on all packages. I think it's better to only upgrade the packages related to the PR and do a general upgrade in a separate PR. In the case we do find a problem with an upgrade it will be easier to isolate.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2860) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2860&resolved=false&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2860&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2860&resolved=false&sinceLeakPeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2860)\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb2ac254a19ac294754",
    "number": 2858,
    "body": "This PR adds states to the the Discover Features record in order to trigger emitting webhooks containing the disclosed features to the controller. Without this change, retrieving the supported features of the remote agent is _extremely_ inconsistent. You just have to hope that the disclosure comes back in 5 seconds or try doing an exponential back off polling of the discover feature record to see if it showed up.\r\n\r\nAnd a few other simplifications.",
    "head_branch": "fix/disclose-features-webhook",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2858) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2858&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2858&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2858&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2858)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2858 from dbluhm/fix/disclose-features-webhook\n\nfix: states for discovery record to emit webhook"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb3ac254a19ac294755",
    "number": 2856,
    "body": "With this PR I'd like to propose that we move the following features to deprecated status:\r\n\r\n- Aries RFC 160: Connection Protocol\r\n- Aries RFC 0036: Issue Credential 1.0\r\n- Aries RFC 0037: Present Proof 1.0\r\n- `did:sov:...` as Protocol Doc URI\r\n\r\nBy moving these to deprecated status, we inform the community that these are features that should no longer be used and steer them to DID Exchange and using didcomm.org as the doc uri in their projects.\r\n\r\nThese items should more or less already be considered deprecated but there are some final efforts that need to be made to tie up loose ends. With the introduction of qualified DIDs in the pending 0.12.0 release and automatically always emitting https://didcomm.org (by setting the flag for it to be permanently set to `true`), we move close enough to these loose ends being tied off to, in my opinion, move these features to official deprecated status.\r\n\r\nIn practice, this PR affects the code in the following ways:\r\n\r\n- Prints a deprecation notice on startup (to stderr) that these features are now deprecated.\r\n- When a message with type starting with `did:sov:` is received, log a deprecation warning\r\n- When a connection protocol operation is taken, log a warning message (this one might be a bit aggressive; I'd be happy to tone this back if it's too much)\r\n- Mark the Admin API endpoints as deprecated in the OpenAPI/Swagger spec and UI. The endpoints are still usable but are greyed out.\r\n  - To clarify, only the Admin API endpoints triggering connection protocol specific operations are marked as deprecated. Other connection management endpoints are NOT marked as deprecated (e.g. listing connections, deleting a connection, etc.).\r\n\r\nLet me know your thoughts.",
    "head_branch": "chore/deprecation-warnings",
    "is_a_fork": true,
    "comments": [
      "👍 from me — nice work. Long overdue.\r\n\r\nI wonder about putting in the `did:sov…` one since there is no way to use it.  The setting is now forced to be the new one.  I don’t think a controller can do it via the admin API, so I don’t think this is necessary. Not harmful, but…\r\n\r\nI do think we should soon go down the path of turning deprecated protocols into plugins — 0160 Connections and v1 of the Credential Exchange protocols.\r\n\r\nThanks!",
      "Approving, but won’t merge immediately in case you want to remove the `did:sov…` warning. But fine if you think it best to leave it.",
      "Yeah, the did:sov one only applies to _receiving_ messages with that type, since we're always sending that type. I think it's good to bring it to the attention of ACA-Py operators if one of their clients are unwittingly using outdated software. Gives them an opportunity to investigate before things eventually break when the support is removed.\r\n\r\nOn Issue Credential v1, does that meet the threshold for deprecation? I can throw it on the list :smile:",
      "I’d say clarify the message a bit to say that it was received. What about something like:\r\n\r\n```\r\n“Received a core DIDComm protocol with the deprecated `did:sov:BzCbsNYhMrjHiqZDTUASHg;spec` prefix.\"\r\n                “The sending party should be notified that support for receiving such messages will be removed\"\r\n                “in an upcoming ACA-Py release. Use https://didcomm.org/ instead.\"\r\n```\r\n\r\nMy $0.02CDN is that we might as well add v1 Credential Exchange protocols. Start the process...",
      "Sounds good to me; I'll make those adjustments",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2856) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2856&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2856&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2856&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2856)\n\n",
      "Addressed the feedback on the prefix warning and added notices for ICv1 and PPv1. Let me know if there's any other changes you'd recommend :slightly_smiling_face: "
    ],
    "commit_messages": [
      "Merge pull request #2856 from dbluhm/chore/deprecation-warnings\n\nchore: propose official deprecations of a couple of features"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb4ac254a19ac294756",
    "number": 2854,
    "body": "Doh! I think I must have accidentally deleted the wait in between retries somehow and not noticed.\r\n\r\nHopefully this should prevent the errors during promote did.",
    "head_branch": "increase-promote-did-retries",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2854) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2854&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2854&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2854&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2854)\n\n",
      "Test fail is super interesting — a CredDef that is attempting to be published fails because it already exists on the ledger.  I checked the ledger and `N1LoA9rMwyskHEW9csYpQJ:3:CL:360946:Faber.agent.Schema_DriversLicense_v2` was created on Feb. 16 — http://test.bcovrin.vonx.io:3707/tx/BCOVRIN_TEST/domain/360950.\r\n\r\nHow does that happen?  That means that the DID being used in the test was the same as being used on Feb. 16.\r\n\r\n🤯 ",
      "> Test fail is super interesting — a CredDef that is attempting to be published fails because it already exists on the ledger. I checked the ledger and `N1LoA9rMwyskHEW9csYpQJ:3:CL:360946:Faber.agent.Schema_DriversLicense_v2` was created on Feb. 16 — http://test.bcovrin.vonx.io:3707/tx/BCOVRIN_TEST/domain/360950.\r\n> \r\n> How does that happen? That means that the DID being used in the test was the same as being used on Feb. 16.\r\n> \r\n> 🤯\r\n\r\nThat's the other fail I've seen. Not as often. \r\n\r\nFeb 16. That doesn't make any sense??? ",
      "The only thing I can think of is that the same seed for the DID was generated on both test runs.  Is it possible we’re not being random enough when coming up with the seed?",
      "I just had another fail like this `69HTqHL7PjCS8K4Bp44g46:3:CL:293648:Faber.agent.Schema_DriversLicense_v2` from Jan 29. Seems like the tests must be recreating the same dids :/"
    ],
    "commit_messages": [
      "Increase promote did retries (#2854)\n\nSigned-off-by: jamshale <jamiehalebc@gmail.com>\r\nCo-authored-by: Stephen Curran <swcurran@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb4ac254a19ac294757",
    "number": 2853,
    "body": "See https://github.com/hyperledger/aries-cloudagent-python/issues/2846",
    "head_branch": "feat/2846",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2853) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2853&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2853&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2853&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2853)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2853 from jamshale/feat/2846\n\nChange did <--> verkey logging on connections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb5ac254a19ac294758",
    "number": 2852,
    "body": "Links to images are different when the markdown page is displayed by GitHub vs. when deployed as documentation. Fix the links on the fly as the mkdocs site is created.\r\n",
    "head_branch": "docs-image-links",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2852) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2852&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2852&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2852&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2852)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2852 from swcurran/docs-image-links\n\nUpdate GHA so that broken image links work on docs site - without breaking them on GitHub"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb6ac254a19ac294759",
    "number": 2850,
    "body": "Fixes: #2817 \r\n\r\nDID Exchange was responding incorrectly to requests, sending unqualified DIDs with a `did_rotate~attach` (which is nonsensical). This fixes it to only send a `did_rotate~attach` when the DID associated with the connection is a qualified DID. Additionally, this change also ensures that the webhook for the new connection request will only be emitted after the request has been attached to the connection record. Without this, a race condition can occur for controllers that try to accept the request before ACA-Py finishes storing the request.\r\n\r\nAs a side note, I left a todo wondering out loud about whether the webhook for the newly created connection record (the one that gets generated from a multi-use connection record) should happen at all.",
    "head_branch": "fix/did-exchange-multiuse-invites",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2850) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2850&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2850&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2850&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2850)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2850 from dbluhm/fix/did-exchange-multiuse-invites\n\nfix: did exchange multiuse invites respond in kind"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb7ac254a19ac29475a",
    "number": 2849,
    "body": "Addresses https://github.com/hyperledger/aries-cloudagent-python/issues/2838.\r\n\r\nSimply returns an error response when creating a revocable cred def without a tails file configured. ",
    "head_branch": "feat/2838",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2849) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2849&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2849&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2849&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2849)\n\n",
      "Going to merge. The one integration test fail was the endorsement promote public did one. Going to add more retries to it so it fails less often when ledger is slow."
    ],
    "commit_messages": [
      "Prevent revocable cred def being created without tails server (#2849)\n\nSigned-off-by: jamshale <jamiehalebc@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb8ac254a19ac29475b",
    "number": 2848,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "docs-tweaks",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2848) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2848&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2848&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2848&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2848)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2848 from swcurran/docs-tweaks\n\nMinor updates to the documentation - links, navigation and markdown"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb9ac254a19ac29475c",
    "number": 2847,
    "body": "Bumps [black](https://github.com/psf/black) from 24.1.1 to 24.3.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/releases\">black's releases</a>.</em></p>\n<blockquote>\n<h2>24.3.0</h2>\n<h3>Highlights</h3>\n<p>This release is a milestone: it fixes Black's first CVE security vulnerability. If you\nrun Black on untrusted input, or if you habitually put thousands of leading tab\ncharacters in your docstrings, you are strongly encouraged to upgrade immediately to fix\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.</p>\n<p>This release also fixes a bug in Black's AST safety check that allowed Black to make\nincorrect changes to certain f-strings that are valid in Python 3.12 and higher.</p>\n<h3>Stable style</h3>\n<ul>\n<li>Don't move comments along with delimiters, which could cause crashes (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li>Strengthen AST safety check to catch more unsafe changes to strings. Previous versions\nof Black would incorrectly format the contents of certain unusual f-strings containing\nnested strings with the same quote type. Now, Black will crash on such strings until\nsupport for the new f-string syntax is implemented. (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li>Fix a bug where line-ranges exceeding the last code line would not work as expected\n(<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n<li>Fix catastrophic performance on docstrings that contain large numbers of leading tab\ncharacters. This fixes\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.\n(<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Note what happens when <code>--check</code> is used with <code>--quiet</code> (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n</ul>\n<h2>24.2.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fixed a bug where comments where mistakenly removed along with redundant parentheses\n(<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li>Move the <code>hug_parens_with_braces_and_square_brackets</code> feature to the unstable style\ndue to an outstanding crash and proposed formatting tweaks (<a href=\"https://redirect.github.com/psf/black/issues/4198\">#4198</a>)</li>\n<li>Fixed a bug where base expressions caused inconsistent formatting of ** in tenary\nexpression (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li>Checking for newline before adding one on docstring that is almost at the line limit\n(<a href=\"https://redirect.github.com/psf/black/issues/4185\">#4185</a>)</li>\n<li>Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>).</li>\n</ul>\n<h3>Configuration</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/blob/main/CHANGES.md\">black's changelog</a>.</em></p>\n<blockquote>\n<h2>24.3.0</h2>\n<h3>Highlights</h3>\n<p>This release is a milestone: it fixes Black's first CVE security vulnerability. If you\nrun Black on untrusted input, or if you habitually put thousands of leading tab\ncharacters in your docstrings, you are strongly encouraged to upgrade immediately to fix\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.</p>\n<p>This release also fixes a bug in Black's AST safety check that allowed Black to make\nincorrect changes to certain f-strings that are valid in Python 3.12 and higher.</p>\n<h3>Stable style</h3>\n<ul>\n<li>Don't move comments along with delimiters, which could cause crashes (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li>Strengthen AST safety check to catch more unsafe changes to strings. Previous versions\nof Black would incorrectly format the contents of certain unusual f-strings containing\nnested strings with the same quote type. Now, Black will crash on such strings until\nsupport for the new f-string syntax is implemented. (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li>Fix a bug where line-ranges exceeding the last code line would not work as expected\n(<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n<li>Fix catastrophic performance on docstrings that contain large numbers of leading tab\ncharacters. This fixes\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.\n(<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Note what happens when <code>--check</code> is used with <code>--quiet</code> (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n</ul>\n<h2>24.2.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fixed a bug where comments where mistakenly removed along with redundant parentheses\n(<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li>Move the <code>hug_parens_with_braces_and_square_brackets</code> feature to the unstable style\ndue to an outstanding crash and proposed formatting tweaks (<a href=\"https://redirect.github.com/psf/black/issues/4198\">#4198</a>)</li>\n<li>Fixed a bug where base expressions caused inconsistent formatting of ** in tenary\nexpression (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li>Checking for newline before adding one on docstring that is almost at the line limit\n(<a href=\"https://redirect.github.com/psf/black/issues/4185\">#4185</a>)</li>\n<li>Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>).</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/black/commit/552baf822992936134cbd31a38f69c8cfe7c0f05\"><code>552baf8</code></a> Prepare release 24.3.0 (<a href=\"https://redirect.github.com/psf/black/issues/4279\">#4279</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/f00093672628d212b8965a8993cee8bedf5fe9b8\"><code>f000936</code></a> Fix catastrophic performance in lines_with_leading_tabs_expanded() (<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/7b5a657285f38126bf28483478bbd9ea928077ec\"><code>7b5a657</code></a> Fix --line-ranges behavior when ranges are at EOF (<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/1abcffc81816257985678f08c61584ed4287f22a\"><code>1abcffc</code></a> Use regex where we ignore case on windows (<a href=\"https://redirect.github.com/psf/black/issues/4252\">#4252</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/719e67462c80574c81a96faa144886de6da84489\"><code>719e674</code></a> Fix 4227: Improve documentation for --quiet --check (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/e5510afc06cd238cd0cba4095283943a870a7e7b\"><code>e5510af</code></a> update plugin url for Thonny (<a href=\"https://redirect.github.com/psf/black/issues/4259\">#4259</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/6af7d1109693c4ad3af08ecbc34649c232b47a6d\"><code>6af7d11</code></a> Fix AST safety check false negative (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/f03ee113c9f3dfeb477f2d4247bfb7de2e5f465c\"><code>f03ee11</code></a> Ensure <code>blib2to3.pygram</code> is initialized before use (<a href=\"https://redirect.github.com/psf/black/issues/4224\">#4224</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/e4bfedbec2e8b10cc6b7b31442478f05db0ce06d\"><code>e4bfedb</code></a> fix: Don't move comments while splitting delimiters (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/d0287e1f7558d97e6c0ebd6dc5bcb5b970e2bf8c\"><code>d0287e1</code></a> Make trailing comma logic more concise (<a href=\"https://redirect.github.com/psf/black/issues/4202\">#4202</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/black/compare/24.1.1...24.3.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=black&package-manager=pip&previous-version=24.1.1&new-version=24.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/black-24.3.0",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2847) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2847&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2847&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2847&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2847)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2847 from hyperledger/dependabot/pip/black-24.3.0\n\nchore(deps-dev): Bump black from 24.1.1 to 24.3.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cb9ac254a19ac29475d",
    "number": 2845,
    "body": "1. Added support for building the agent image using 'build'\r\n2. Implemented the ability to start the agent container with 'start' with host files mounted into docker container\r\n3. Updated the script to handle the 'resolution' command with its options(build & run)\r\n\r\nBuild\r\n`./demo/run_demo build alice --wallet-type askar-anoncreds --events\r\n`\r\nRun\r\n`./demo/run_demo run alice --wallet-type askar-anoncreds --events\r\n`\r\n",
    "head_branch": "feat/docker-volume-config-run-demo",
    "is_a_fork": true,
    "comments": [
      "I’m not clear on what you mean by the “resolution” functionality.  I can see the separation of build and run — is that what you mean?",
      "> I’m not clear on what you mean by the “resolution” functionality. I can see the separation of build and run — is that what you mean?\r\n\r\nYes, the separation of \"build\" and \"run\" refers to different functionalities in the script. Specifically, \"build\" is responsible for building the Docker image of the agent, while \"run\" executes the agent within a Docker container.\r\n\r\nIn the \"run\" functionality, we also mount volumes from the host into the Docker container. This allows for a more streamlined development and debugging process, as we don't need to rebuild the Docker images repeatedly.\r\n\r\nAdditionally, the script supports a default behavior: if neither \"build\" nor \"run\" is specified, it defaults to both building and running the agent. ",
      "Got it — sounds good.  Thanks!",
      "Looks good!  Can you add a comment to the docs (maybe here: https://github.com/hyperledger/aries-cloudagent-python/blob/main/docs/demo/README.md#other-environment-settings) describing this?  Maybe mention that this can support auto-reloading of code so you don't have to repeatedly restart the demo while developing ...\r\n",
      "> Looks good! Can you add a comment to the docs (maybe here: https://github.com/hyperledger/aries-cloudagent-python/blob/main/docs/demo/README.md#other-environment-settings) describing this? Maybe mention that this can support auto-reloading of code so you don't have to repeatedly restart the demo while developing ...\r\n\r\nperfect, I have updated the docs.\r\nThank you!",
      "Hi @sarthakvijayvergiya , ran a quick test and it looks good.\r\n\r\nJust to be clear - when I ran the demo and edited the code, the demo didn't auto-reload.  I stopped and restarted the agent (didn't have to rebuild the container) and it picked up the changes.  So it's a more efficient process for sure, but should it auto-reload without restarting?\r\n",
      "> Hi @sarthakvijayvergiya , ran a quick test and it looks good.\r\n> \r\n> Just to be clear - when I ran the demo and edited the code, the demo didn't auto-reload. I stopped and restarted the agent (didn't have to rebuild the container) and it picked up the changes. So it's a more efficient process for sure, but should it auto-reload without restarting?\r\n\r\nYou're absolutely right. I haven't implemented auto-reloading. The aim was simply to reduce the need for repetitive container builds.\r\n\r\nAdding auto-reloading would indeed be a valuable feature, but it's currently outside the scope of this request. However, I'm more than happy to tackle it in a separate request if that's something we'd like to explore further.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2845) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2845&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2845&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2845&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2845)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2845 from sarthakvijayvergiya/feat/docker-volume-config-run-demo\n\nAdd functionality for building and running agents seprately"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cbaac254a19ac29475e",
    "number": 2844,
    "body": "Bumps the all-actions group with 1 update: [psf/black](https://github.com/psf/black).\n\nUpdates `psf/black` from 24.2.0 to 24.3.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/releases\">psf/black's releases</a>.</em></p>\n<blockquote>\n<h2>24.3.0</h2>\n<h3>Highlights</h3>\n<p>This release is a milestone: it fixes Black's first CVE security vulnerability. If you\nrun Black on untrusted input, or if you habitually put thousands of leading tab\ncharacters in your docstrings, you are strongly encouraged to upgrade immediately to fix\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.</p>\n<p>This release also fixes a bug in Black's AST safety check that allowed Black to make\nincorrect changes to certain f-strings that are valid in Python 3.12 and higher.</p>\n<h3>Stable style</h3>\n<ul>\n<li>Don't move comments along with delimiters, which could cause crashes (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li>Strengthen AST safety check to catch more unsafe changes to strings. Previous versions\nof Black would incorrectly format the contents of certain unusual f-strings containing\nnested strings with the same quote type. Now, Black will crash on such strings until\nsupport for the new f-string syntax is implemented. (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li>Fix a bug where line-ranges exceeding the last code line would not work as expected\n(<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n<li>Fix catastrophic performance on docstrings that contain large numbers of leading tab\ncharacters. This fixes\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.\n(<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Note what happens when <code>--check</code> is used with <code>--quiet</code> (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/blob/main/CHANGES.md\">psf/black's changelog</a>.</em></p>\n<blockquote>\n<h2>24.3.0</h2>\n<h3>Highlights</h3>\n<p>This release is a milestone: it fixes Black's first CVE security vulnerability. If you\nrun Black on untrusted input, or if you habitually put thousands of leading tab\ncharacters in your docstrings, you are strongly encouraged to upgrade immediately to fix\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.</p>\n<p>This release also fixes a bug in Black's AST safety check that allowed Black to make\nincorrect changes to certain f-strings that are valid in Python 3.12 and higher.</p>\n<h3>Stable style</h3>\n<ul>\n<li>Don't move comments along with delimiters, which could cause crashes (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li>Strengthen AST safety check to catch more unsafe changes to strings. Previous versions\nof Black would incorrectly format the contents of certain unusual f-strings containing\nnested strings with the same quote type. Now, Black will crash on such strings until\nsupport for the new f-string syntax is implemented. (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li>Fix a bug where line-ranges exceeding the last code line would not work as expected\n(<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n<li>Fix catastrophic performance on docstrings that contain large numbers of leading tab\ncharacters. This fixes\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.\n(<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Note what happens when <code>--check</code> is used with <code>--quiet</code> (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/black/commit/552baf822992936134cbd31a38f69c8cfe7c0f05\"><code>552baf8</code></a> Prepare release 24.3.0 (<a href=\"https://redirect.github.com/psf/black/issues/4279\">#4279</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/f00093672628d212b8965a8993cee8bedf5fe9b8\"><code>f000936</code></a> Fix catastrophic performance in lines_with_leading_tabs_expanded() (<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/7b5a657285f38126bf28483478bbd9ea928077ec\"><code>7b5a657</code></a> Fix --line-ranges behavior when ranges are at EOF (<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/1abcffc81816257985678f08c61584ed4287f22a\"><code>1abcffc</code></a> Use regex where we ignore case on windows (<a href=\"https://redirect.github.com/psf/black/issues/4252\">#4252</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/719e67462c80574c81a96faa144886de6da84489\"><code>719e674</code></a> Fix 4227: Improve documentation for --quiet --check (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/e5510afc06cd238cd0cba4095283943a870a7e7b\"><code>e5510af</code></a> update plugin url for Thonny (<a href=\"https://redirect.github.com/psf/black/issues/4259\">#4259</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/6af7d1109693c4ad3af08ecbc34649c232b47a6d\"><code>6af7d11</code></a> Fix AST safety check false negative (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/f03ee113c9f3dfeb477f2d4247bfb7de2e5f465c\"><code>f03ee11</code></a> Ensure <code>blib2to3.pygram</code> is initialized before use (<a href=\"https://redirect.github.com/psf/black/issues/4224\">#4224</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/e4bfedbec2e8b10cc6b7b31442478f05db0ce06d\"><code>e4bfedb</code></a> fix: Don't move comments while splitting delimiters (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/d0287e1f7558d97e6c0ebd6dc5bcb5b970e2bf8c\"><code>d0287e1</code></a> Make trailing comma logic more concise (<a href=\"https://redirect.github.com/psf/black/issues/4202\">#4202</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/black/compare/24.2.0...24.3.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=psf/black&package-manager=github_actions&previous-version=24.2.0&new-version=24.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore <dependency name> major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself)\n- `@dependabot ignore <dependency name> minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself)\n- `@dependabot ignore <dependency name>` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself)\n- `@dependabot unignore <dependency name>` will remove all of the ignore conditions of the specified dependency\n- `@dependabot unignore <dependency name> <ignore condition>` will remove the ignore condition of the specified dependency and ignore conditions\n\n\n</details>",
    "head_branch": "dependabot/github_actions/all-actions-82317a8ac3",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2844) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2844&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2844&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2844&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2844)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2844 from hyperledger/dependabot/github_actions/all-actions-82317a8ac3\n\nchore(deps): Bump the all-actions group with 1 update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cbbac254a19ac29475f",
    "number": 2843,
    "body": "Fixes #2842 \r\n",
    "head_branch": "m1-build-issue",
    "is_a_fork": true,
    "comments": [
      "Integration test fail is this one where a cred def makes it to the ledger but fails to save it in the wallet :/ Seen it a few times. I'm going to create a ticket for it.",
      "The last integration test had the fails where I added a 3 second retry in endorsement. Where it's trying to promote the did. Annoying. These were passing consistently for several days. It also had a fail for the cred def being on the ledger and not in the wallet.\r\n\r\nI could add a few more retries, but seems like the ledger is getting hung up or something.\r\n\r\nI need to look at the cred_def not in wallet error separately. No idea what's going on with that yet.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2843) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2843&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2843&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2843&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2843)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2843 from swcurran/m1-build-issue\n\nUpdate to run_demo script to support Apple M1 CPUs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cbcac254a19ac294760",
    "number": 2841,
    "body": null,
    "head_branch": "tuna-cred-request",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2841) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2841&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2841&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2841&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2841)\n\n",
      "Why are there two open pull requests?  Should this be added to the existing PR https://github.com/hyperledger/aries-cloudagent-python/pull/2830?\r\n",
      "> Why are there two open pull requests? Should this be added to the existing PR #2830?\r\n\r\nyes, Ian.. i accidentally created a new PR here instead of our own fork. i'll close it soon"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cbdac254a19ac294761",
    "number": 2840,
    "body": "Have added an option to demo to upgrade in multi-tenant mode (non-multi-tenant mode currently requires restart --> see below). Also added an integration test for multi-tenant mode that does object creation and revocation stuff, upgrades, and then does it again with anoncreds.\r\n\r\nHave added a decent amount of unit tests. Some harder to test stuff hasn't been covered.\r\n\r\nImplementation:\r\n\r\nSee https://github.com/jamshale/aries-cloudagent-python/blob/feat/2808/docs/design/UpgradeViaApi.md for basic design diagram.\r\n\r\n- Created an endpoint `/anoncreds/wallet/upgrade` in the wallet routes to trigger the upgrade. For safety it requires adding the wallet name as a parameter.\r\n- Added a middleware that checks the is_upgrading record in the wallet(DB) and blocks traffic if ti exists..\r\n- Uses a DB record to persist an upgrade and restart upgrades in the case of an agent restart.\r\n- The upgrade is all or nothing with a single transaction. There is a retry mechanism.\r\n- For subwallets, you can currently upgrade to anoncreds even if the base wallet is askar. Might want to force them to upgrade the base wallet first. A multi-tenant base wallet only changes the storage type and profile which doesn't make much difference. The subwallet will change profile types on the fly. Doesn't require agent restart.\r\n- For standalone agent and mutitenant admin wallets the agent will shutdown after the upgrade, and then require the wallet-type config to be changed to askar-anoncreds. Maybe there's a more streamline way to do this but I think it could be another ticket if we want to do this.\r\n- For the upgrade of schema's and cred def's I wasn't able to find all the required anoncred data in the existing storage and resorted to getting it from the ledger. An example is the `attrNames` in schema. Not sure if this exists somewhere in storage I don't know about.\r\n\r\nI don't think the upgrade should take very long for any agents or subwallets as the DB changes are just removing and replacing records.\r\n\r\nI changed the `txn_submit` interface in anoncreds to take a BaseLedger instance. I was sometimes getting injection errors because the weak_ref was expired. Not really sure why?",
    "head_branch": "feat/2808",
    "is_a_fork": true,
    "comments": [
      "Overall looks good.  I had one minor comment (a duplicate line of code I think) and we could use some docs (at a minimum just add the description of this PR to an `.md` doc somewhere)\r\n\r\nI'm going to check out the code and do some testing before I give the PR an official approval.\r\n",
      "I'm back and going to address the documentation in an additional ticket https://github.com/hyperledger/aries-cloudagent-python/issues/2875",
      "> Code looks good overall, I flagged a couple items that need to be looked at. Also wondering if it would make sense (and there is a way) to test a failed upgrade and how to recover from that?\r\n\r\nI'm not sure of how I can force an upgrade to fail with the integration tests. I can look into making sure it's covered by unit tests. \r\n\r\nMy idea is to suggest using the wallet-type which you can get via the api to handle both endpoints when doing an upgrade. In that case if it fails then it will continue working as before. If it succeeds the controller can remove the old endpoints in a future release. This is basically how the integration test controller is implemented now. I think it will be clear once I finish the upgrade documentation.\r\n\r\nWill address the other comments and make sure upgrade fail is covered by some type of test.",
      "> > Code looks good overall, I flagged a couple items that need to be looked at. Also wondering if it would make sense (and there is a way) to test a failed upgrade and how to recover from that?\r\n> \r\n> I'm not sure of how I can force an upgrade to fail with the integration tests. I can look into making sure it's covered by unit tests.\r\n> \r\n> My idea is to suggest using the wallet-type which you can get via the api to handle both endpoints when doing an upgrade. In that case if it fails then it will continue working as before. If it succeeds the controller can remove the old endpoints in a future release. This is basically how the integration test controller is implemented now. I think it will be clear once I finish the upgrade documentation.\r\n> \r\n> Will address the other comments and make sure upgrade fail is covered by some type of test.\r\n\r\nDepending on effort, if it doesn't too much coordinating to handle a fail it would be useful. I was wondering situations such as corrupted records that would cause trouble (is it even possible?) or the service being terminated mid-way, specifically. likely easier to deal with in unit test than integration tests, I think 😅 ",
      "> * Added a middleware that checks the singleton and blocks traffic for the particular wallet if upgrade is in progress.\r\n\r\nWill this work in a scaled environment?  I.e. should a multi-instance environment scale down to a single instance before upgrading wallets?\r\n",
      "> I don't think the upgrade should take very long for any agents or subwallets as the DB changes are just removing and replacing records.\r\n\r\n... as long as we're not updating records for individual credentials (OrgBook has millions of credentials in it's wallet)\r\n",
      "As I understand it, the plan is that the controller is responsible for scaling down, then start back up and calling this endpoint during controller initialization before proceeding.  So the ACA-Py instance doesn’t have to scale down as that is impossible to manage. But the controller does. ",
      "> As I understand it, the plan is that the controller is responsible for scaling down, then start back up and calling this endpoint during controller initialization before proceeding. So the ACA-Py instance doesn’t have to scale down as that is impossible to manage. But the controller does.\r\n\r\nWe need a document :-P  (I didn't notice when I approved the PR but went back and checked after @swcurran 's comment)  Doesn't need to be part of this PR but we will def need one.\r\n",
      "> > I don't think the upgrade should take very long for any agents or subwallets as the DB changes are just removing and replacing records.\r\n> \r\n> ... as long as we're not updating records for individual credentials (OrgBook has millions of credentials in it's wallet)\r\n\r\nOnly the schema, cred_def and revocation objects are getting updated. The revocation objects could potentially take some time. I don't have much experience with this in heavy loads. The individual credentials aren't effected.",
      "> > As I understand it, the plan is that the controller is responsible for scaling down, then start back up and calling this endpoint during controller initialization before proceeding. So the ACA-Py instance doesn’t have to scale down as that is impossible to manage. But the controller does.\r\n> \r\n> We need a document :-P (I didn't notice when I approved the PR but went back and checked after @swcurran 's comment) Doesn't need to be part of this PR but we will def need one.\r\n\r\nYes. I'm still working on a detailed document with the upgrade process and the migration steps via https://github.com/hyperledger/aries-cloudagent-python/issues/2875. Should be ready soon.",
      "@ianco I'm going to create a separate document for the design of this with some diagrams so it's clear and can be referenced in the future. It will be separate from the migration guide. ",
      "@ianco @swcurran I'm removing the in memory singleton part of this, and instead using the wallet(DB) value in the middleware. I hadn't considered the scaled up, multi instance use case correctly.\r\n\r\nI've already made the changes and am testing. The down side is there will be a small performance hit I wanted to avoid. \r\n\r\nI wanted to add a DB hook to maintain the in memory singleton mechanism between instances. But after researching it I can't see this done anywhere in the project and it looks like it would be a substantial effort to implement.",
      "> @ianco @swcurran I'm removing the in memory singleton part of this, and instead using the wallet(DB) value in the middleware. I hadn't considered the scaled up, multi instance use case correctly.\r\n> \r\n> I've already made the changes and am testing. The down side is there will be a small performance hit I wanted to avoid.\r\n> \r\n> I wanted to add a DB hook to maintain the in memory singleton mechanism between instances. But after researching it I can't see this done anywhere in the project and it looks like it would be a substantial effort to implement.\r\n\r\nThis update looks good, but I'm wondering also about the performance hit.  There is a possibility of using a redis cache (https://github.com/Indicio-tech/aries-acapy-cache-redis - not sure if this one has made it to the plug=ins repo) to keep the state in memory across instances (of course in that case aca-py would have to be configured with that plug-in).\r\n\r\nAnother option is to add an aca-py flag as to whether to do the \"upgrade check\" or not, so we can turn it on when we know the upgrade is potential, and then turn it off afterwards.\r\n\r\nOf course the other option is to do no checks at all and rely totally on the controller to ramp down and make no requests during the upgrade.\r\n\r\n@swcurran  your thoughts?\r\n",
      "Also regarding the \"upgrade check\" do we need to check each time we process a received message as well?  I.e. if we receive a message and the respective wallet is in the middle of an upgrade should we just leave the message in the queue?",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2840) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2840&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2840&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2840&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2840)\n\n",
      "I'm going to close this PR and open a new PR to clean it up."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cbeac254a19ac294762",
    "number": 2836,
    "body": "Resolves #2829 \r\n\r\nThis change removes the requirement for the list of ledgers to specify at least a ledger with attribute `is_write` when running the agent in read-only mode.\r\n\r\nI initially tried to mock the parsed argument in the tests as one was failing, however having attributes from different groups made mocking very complicated so I opted for moving this setting onto `LedgerGroup` as well, as it seems appropriate.",
    "head_branch": "fix/read-only-ledger-tweaks",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2836) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2836&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2836&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2836&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2836)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2836 from esune/fix/read-only-ledger-tweaks\n\nRemove requirement for write ledger in read-only mode."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cbfac254a19ac294763",
    "number": 2835,
    "body": "This PR adds a pluggable component enabling usage of an externally provided signature suite. This is a refinement on previous attempts to make this aspect of ACA-Py more flexible; namely, #2706 which was later reverted due to issues with including profile in the context and multi-tenancy. This approach minimizes the \"surface area\" of the interface that the plugin must fulfill (at least when compared to what was proposed in #2706).\r\n\r\nThis is an advanced use case requiring some fairly deep knowledge of the management of DIDs and VCs. I have an example implementation of using an external KMS for signing JSON-LD creds that can be found here: https://github.com/dbluhm/acapy-ld-signer",
    "head_branch": "feature/external-ld-signer",
    "is_a_fork": true,
    "comments": [
      "Presently, this external provider is only used for signing. Since verification can of course be done by anyone, there's no need to verify through a KMS, for instance. But that might be overlooking other scenarios that could be of interest. I'll leave this off for now and if a clear use case arises, it can be revisited then.",
      "Haven’t looked too carefully at this, but I think at minimum some sort of document is needed (likely in docs/features) that covers this and at least a start at how to use it.",
      "The update looks pretty straightforward but agree with @swcurran we need a doc describing the feature\r\n",
      "Basic docs, with a link to an example project, added!",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2835) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2835&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2835&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2835&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2835)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2835 from sicpa-dlab/feature/external-ld-signer\n\nfeat: external suite provider interface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cbfac254a19ac294764",
    "number": 2833,
    "body": "Bumps [jwcrypto](https://github.com/latchset/jwcrypto) from 1.5.4 to 1.5.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/latchset/jwcrypto/releases\">jwcrypto's releases</a>.</em></p>\n<blockquote>\n<h2>Version 1.5.6 - Moderate Security release</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Address potential DoS with high compression ratio by <a href=\"https://github.com/simo5\"><code>@​simo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/349\">latchset/jwcrypto#349</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/latchset/jwcrypto/compare/v1.5.5...v1.5.6\">https://github.com/latchset/jwcrypto/compare/v1.5.5...v1.5.6</a></p>\n<h2>Version 1.5.5</h2>\n<p>This version fixes a pypi distribution problem introduced in 1.0 when pushing was automated.\nWith 1.5.5 a binary wheel is now also made available on pypi.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix doc generation by <a href=\"https://github.com/simo5\"><code>@​simo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/345\">latchset/jwcrypto#345</a></li>\n<li>Update publish action to upload also binary dist by <a href=\"https://github.com/simo5\"><code>@​simo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/347\">latchset/jwcrypto#347</a></li>\n<li>Fix pypi publishing by <a href=\"https://github.com/simo5\"><code>@​simo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/348\">latchset/jwcrypto#348</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/latchset/jwcrypto/compare/v1.5.4...v1.5.5\">https://github.com/latchset/jwcrypto/compare/v1.5.4...v1.5.5</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/ecde4efdc7c9364b53bd1b4232e97557d821abdf\"><code>ecde4ef</code></a> Version 1.5.6</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/90477a3b6e73da69740e00b8161f53fea19b831f\"><code>90477a3</code></a> Address potential DoS with high compression ratio</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/240cc60fe4fe7458d3a7828c3e793795eb59a438\"><code>240cc60</code></a> Modernize pypi action</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/491f4485562e94473e57bb9164eb290dcd3be3c5\"><code>491f448</code></a> Version 1.5.5</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/7f51d28eea46f039ac363eaf348123394f17310c\"><code>7f51d28</code></a> Update publish action to upload also binary dist</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/5dc2ea2a87ea9fb3ed833f9f0f7864edc7b01e7b\"><code>5dc2ea2</code></a> Fix doc generation</li>\n<li>See full diff in <a href=\"https://github.com/latchset/jwcrypto/compare/v1.5.4...v1.5.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jwcrypto&package-manager=pip&previous-version=1.5.4&new-version=1.5.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/jwcrypto-1.5.6",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2833) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2833&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2833&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2833&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2833)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2833 from hyperledger/dependabot/pip/jwcrypto-1.5.6\n\nchore(deps): Bump jwcrypto from 1.5.4 to 1.5.6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc0ac254a19ac294765",
    "number": 2832,
    "body": "Documentation for creating an AnonCreds Method.  Expands on document that @dbluhm presented the other day, and includes a link to the recording made of the discussion from Wednesday.",
    "head_branch": "swcurran-anoncreds-methods",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2832) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2832&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2832&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2832&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2832)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2832 from hyperledger/swcurran-anoncreds-methods\n\nCreate AnonCredsMethods.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc1ac254a19ac294766",
    "number": 2831,
    "body": "Adds the Traction Sandbox demo as well.\r\n",
    "head_branch": "docs-update",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2831) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2831&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2831&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2831&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2831)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2831 from swcurran/docs-update\n\nCleanup of docs, generator label fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc2ac254a19ac294767",
    "number": 2830,
    "body": "- add VC_DI in CredFormat.Format\r\n- lay out VCDICredFormatHandler\r\n- add new schema classes for cred offer and request\r\n- implement CredExRecordVCDI\r\n- fix schemas on cred_abstract and cred_request, improve on vc_di support on alice-faber demo\r\n\r\nnext step\r\n\r\nfix unittests issues\r\n\r\nNote: this is a rebased version of @tra371 's pr #2759",
    "head_branch": "feat/vc-di-clean-base",
    "is_a_fork": true,
    "comments": [
      "Overall this looks good to me, but do we also want to add some readme/markdown about what VC_DI is and how to get the verifiable credential out or how it can interoperate with other wallets?  we could also do that separtely from the repo or later, but i'd like to make sure new folks have an idea why, when and how to use them?",
      "@dhh1128 would greatly appreciate (and recognize) your guideance here to get this over the line nicely, if you have any suggestions.\r\n",
      "@ianco do we care that we don't have codecov?  should we worry if we actually covered all the new stuff?  \r\n\r\nha i will stop being noisy now - thanks all for feedbacks!!!",
      "> @ianco do we care that we don't have codecov? should we worry if we actually covered all the new stuff?\r\n\r\nPersonally I'm not too concerned about the level of code coverage as long as we have good integration tests.  However we do need a minimal set of unit tests to confirm that the code works.  I did a quick review of the code and it doesn't look like there are any new tests (?) in this PR yet.\r\n\r\nRegarding the broken tests, many are throwing a \"StopAsyncIteration\" error - for example:\r\n\r\n```\r\n./scripts/run_tests aries_cloudagent/protocols/issue_credential/v2_0/tests/test_routes.py::TestV20CredRoutes::test_credential_exchange_issue\r\n```\r\n\r\n... raises this error.  I'm not sure the cause (it's raised during a \"mock\" call) but I suggest we focus on getting the demo working (see my comments about the credential proposal format), and once we confirm the demo is working properly we can revisit the tests.\r\n",
      "> > @ianco do we care that we don't have codecov? should we worry if we actually covered all the new stuff?\r\n> \r\n> Personally I'm not too concerned about the level of code coverage as long as we have good integration tests. However we do need a minimal set of unit tests to confirm that the code works.\r\n\r\nmmm yeah usually I am lazy and start by looking at the codecov report, to make sure those unit tests are added.  @tra371  if you are back on do you want to try to just add some tests, or maybe run a quick local codecov and see where we are at - we need to make sure new code has tests; @supersonicwisd1 if you can focus on getting the demo working manually that might be good since you have it going\r\n\r\nWe did pass the integration tests which run alice-faber so we should be close now...just need the real presentation format maybe\r\n",
      "> We did pass the integration tests which run alice-faber so we should be close now...just need the real presentation format maybe\r\n\r\nThere aren't any integration tests for the new VC_DI format tho ...\r\n",
      "Declaring some of my assumptions as preamble to a question:\r\n- VCDI format supports many credential formats\r\n- First target format to support is AnonCreds in W3C format\r\n\r\nAs currently structured, this strictly supports only AnonCreds format, right? In the future, what will be required to add support for issuing, say, DIP-VC or JWT-VC? Is there anything we can or should do now to make that easier for us later?",
      "> As currently structured, this strictly supports only AnonCreds format, right? In the future, what will be required to add support for issuing, say, DIP-VC or JWT-VC? Is there anything we can or should do now to make that easier for us later?\r\n\r\nKeeping in mind that this initial work is being done under a Code With Us (https://marketplace.digital.gov.bc.ca/opportunities/code-with-us/7afcbd7c-2bbc-41ed-bf27-b6ba6e2903c5) we need to be mindful of scope creep.  @swcurran  what do you think?  My preference would be to keep the initial use case as simple as possible.\r\n",
      "> > As currently structured, this strictly supports only AnonCreds format, right? In the future, what will be required to add support for issuing, say, DIP-VC or JWT-VC? Is there anything we can or should do now to make that easier for us later?\r\n> \r\n> Keeping in mind that this initial work is being done under a Code With Us (https://marketplace.digital.gov.bc.ca/opportunities/code-with-us/7afcbd7c-2bbc-41ed-bf27-b6ba6e2903c5) we need to be mindful of scope creep. @swcurran what do you think? My preference would be to keep the initial use case as simple as possible.\r\n\r\nWe're more than happy to structure for future extensibility, not concerned with scope creep if we can possibly complete after the formal approvals (once we get to there!)\r\n\r\ndo you guys have specific suggestions about structuring this for extensibility?",
      "Agree that we will need future extensibility with this, so if there are some things that are obvious and easy, let’s do them. But highest priority is delivery the AnonCreds in W3C VCDM, so that’s the current focus.  I can’t answer Golda’s question about specifics to do, but if others have suggestions, please add them.  Thanks!!!",
      "I should add that the goal would be to transition from the existing 0592 and 0593 Credential Attachment RFCs for both legacy AnonCreds and JSON-LD VCs (and 0771 AnonCreds) to the VC-DI attachments.  It will take some time, but that is the goal.",
      "> , DIP-VC or JWT-VC\r\n\r\nhey @dbluhm we are definitely interested in this after we get the first stage working, if we can plan a sync to understand your thoughts on it.  @tra371 @clehner ",
      "@gvelez17 I was hoping you might have recommendations for where the right points in the implementation would be to extend later to support other credential formats and signature types.",
      "> @gvelez17 I was hoping you might have recommendations for where the right points in the implementation would be to extend later to support other credential formats and signature types.\r\n\r\nhey Daniel is this still relevent based on the conversation in Anoncreds working group today that V2 will always default to a W3C compliant format?  Are we moving more towards a consensus format rather than ability to plug in many?  Happy to still look at this however will give some suggestions ",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2830) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2830&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2830&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2830&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2830)\n\n",
      "> > @gvelez17 I was hoping you might have recommendations for where the right points in the implementation would be to extend later to support other credential formats and signature types.\r\n> \r\n> hey Daniel is this still relevent based on the conversation in Anoncreds working group today that V2 will always default to a W3C compliant format? Are we moving more towards a consensus format rather than ability to plug in many? Happy to still look at this however will give some suggestions\r\n\r\nYes; the VCDI credential attachment format is explicitly capable of issuing credentials with multiple cryptosuites, of which, AnonCreds is just one variety. We will want to be able to support signing credentials with other cryptosuites besides just AnonCreds.",
      "New PR:\r\nhttps://github.com/hyperledger/aries-cloudagent-python/pull/2861",
      "Closed in favor of https://github.com/hyperledger/aries-cloudagent-python/pull/2861"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc3ac254a19ac294768",
    "number": 2827,
    "body": "I'm pretty sure this solves a majority of the problems with the endorsement integration tests. I have run the tests 9 times and not seen the DID not registered error. \r\n\r\nI did get one, unrelated fail about the cred_def not being in the wallet. This seems to be much less often and I will create other tickets, for the other fails, when I see them.\r\n\r\nThis fix passes an option to fail or not through the POST backchannel, which defaults to true. It will try the promote did call three times if it fails before failing the test.",
    "head_branch": "feat/2826",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2827) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2827&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2827&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2827&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2827)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2827 from jamshale/feat/2826\n\nIntegration tests - Add retry to did registration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc4ac254a19ac294769",
    "number": 2825,
    "body": "Includes some cleanup of the docs for static site generation -- mostly in MD files, but also in the GHA for generating the docs -- links to docs that are different between the repo and the generated docs.\r\n\r\nStill no breaking changes to note.\r\n",
    "head_branch": "0.12.0rc2",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2825) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2825&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2825&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2825&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2825)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2825 from swcurran/0.12.0rc2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc5ac254a19ac29476a",
    "number": 2824,
    "body": "a patch for #2781 (see issue description). Longer term acapy may consider making a User Agent header globally for all requests, and perhaps configurable. however this one gets us by",
    "head_branch": "gm/user-agent-patch",
    "is_a_fork": true,
    "comments": [
      "hmmm, getting a pipeline failure; i dont know acapy CI enough to know if this normal...",
      "> hmmm, getting a pipeline failure; i dont know acapy CI enough to know if this normal...\r\n\r\nTrying to re-run. Integration tests have been getting sporadic fails when there's multiple concurrent runs.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2824) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2824&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2824&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2824&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2824)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2824 from anonyome/gm/user-agent-patch\n\npatch for #2781: User Agent header in doc loader"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc6ac254a19ac29476b",
    "number": 2823,
    "body": "See issue https://github.com/hyperledger/aries-cloudagent-python/issues/2703\r\n\r\nThis PR is READY FOR REVIEW!, reuse working for public DID and did:peer:2/4.\r\n\r\n- adds additional meta-data to the wallet DID, to flag a did:peer for re-using in invitations\r\n- add the DID meta-data to the admin API `GET /wallet/did` response\r\n- add a flag to the OOB create invitation to request a unique did (default is to re-use the invitation DID in the wallet)\r\n- reuse works for did:peer:2 and did:peer:4, and also public DID\r\n- added separate flags to the demo for:\r\n\t- `--public-did-connections` - use the inviter's public DID in invitations, and allow use of implicit invitations\r\n\t- `--reuse-connections` - support connection re-use (invitee will reuse an existing connection if it uses the same DID as in the new invitation)\r\n\t- `--multi-use-invitations` - inviter will issue multi-use invitations\r\n\t- note that the `--reuse-connections` flag needs to be enabled in both Faber and Alice for the demo to enable connection reuse\r\n\r\nAlso added a few new integration tests with the `--connection-reuse` flag.\r\n",
    "head_branch": "issue/2703",
    "is_a_fork": true,
    "comments": [
      "My thoughts on the questions:\r\n\r\n> reuse works for did:peer:2 and did:peer:4, and also public DID\r\nshould this be generic? and how to determine if the DID can be used for connection reuse? should it work for ALL DID methods?\r\n\r\nThe requirement for reuse in the spec. is that the `service` item in the invitation be a DID -- not a JSON structure such as happens with an unqualified DID (what we've mostly used to now) or a did:peer:1. As we are dropping support for either of those, likely any DID is valid -- since the DID is resolved.  `did:peer:2/4` are magic in that by \"resolving\" them, the DIDDoc (the data that would be in the JSON structure) is decoded.  Note that `did:key` is not permitted as it does not have an endpoint to which messages can be sent.\r\n\r\nDoes that help?\r\n\r\n> adds additional meta-data to the wallet DID, to flag a did:peer for re-using in invitations\r\n\r\nPerhaps this should also allow flagging ledger-based (published/public) DIDs?  E.g. any DID that supports \"resuse\"?\r\n\r\n> add the DID meta-data to the admin API GET /wallet/did response\r\n\r\nSounds necessary to me.",
      "Is there any way we can pull out the create methods for did:peer:2/4 into a separate but mergeable PR?. It would be useful to have for integration testing, but I can also patch in the change from this PR.",
      "> > adds additional meta-data to the wallet DID, to flag a did:peer for re-using in invitations\r\n> \r\n> Perhaps this should also allow flagging ledger-based (published/public) DIDs? E.g. any DID that supports \"resuse\"?\r\n\r\nIt's already used for flagging public DID's, so I'm just piggybacking on an existing feature.\r\n",
      "> The requirement for reuse in the spec. is that the `service` item in the invitation be a DID -- not a JSON structure such as happens with an unqualified DID\r\n\r\nOK this is clear, I'll update to check for a DID, and remove the specific `did_peer` checks that I added\r\n",
      "For `did:peer:4` should the connection use the long form or short form of the did?\r\n\r\n```\r\n      \"my_did\": \"did:peer:4zQmbCiTt4dS2XZz9BMGYpZTKH92mYzq9Q1cavQPtfrFEfiV\",\r\n      \"their_did\": \"did:peer:4zQmUpGK93RFrakSGmJbwL9QJXqs4uC2S8NQeSyzcomCqKzz\",\r\n```\r\n\r\nvs ...\r\n\r\n```\r\n    \"my_did\": \"did:peer:4zQmbCiTt4dS2XZz9BMGYpZTKH92mYzq9Q1cavQPtfrFEfiV:zCo9LoqasV3ZFnxnYNDU8yhBL9F6kGgrTrneiFJHM5Z8L7jw9Gj3H61gCqSKjiMxqWzztJykZfSAM5AXaeyD6wtFwjgyoPMZ6EYSoJ2HwFRd4oafTXtCvGmTC8E4FpjcFaQgnbe1uVbtRmZ1q96mPeMwsDszPiKuyH5D9rHULHkETFwd9hjPKSroX9XVoNxRaprNVr9JLWproTuDzCFwrRYou24dwVAUSsVtnM1ti2PJuZk3D5sdYqDeL8y4yw7WwVvzqd9jykuCt9nQyPBE2DE6saLSAyJRY3tYin2kcdeLCgWJfmaubDVqaEKQnFLZFJodbuts52PHhKGKcgoVXu4nKowE6zedeVtTmZEjn4USXg3oePgnQ47wDbFC5Z1nQgkZG3o7HtWWxmpYZQGqxxZxNDYckfLVxyAdNGZcXN2uHd6i788bc5B5tEEmBptAr9BeaggjobsZanaMDxNHkMLTHbVpn199pNwYXLwpZR8mdB4WMk99FQHyziWHbBLLUihEJqJzsdX88v8\",\r\n      \"their_did\": \"did:peer:4zQmUwLj6dLCg2Sv9YirbFkzwFaMyRvmoqSn5Pge9fdP9ATi:zCo9LoqasV3ZFnxnYNDU8yhBL9F6kGgrTrneiFJHM5Z8L7jw9Gj3H61gCqSKjiMxqWzztJykZfSAM5AXaeyD6wtFwjgyoPMZ6EYSoJ2HwFRd4oafTXtCvGmTC8E4FpjcFaQgnbe1uVbtRmZ1q96mPeMwsDszPiKuyH5D9rHULHkETFwd9hjPKSroX9XVoNxRaprNVr9JLWproTuDzCFwrRYou24dwVAUSsVtnM1qintrVJ618X7sPxk13tCXhXHsMUHxK7PeL8sZG8dUFpc75k5waWuCTWK7gQhpvBGoijh4JCZMbqhFWGqUEwRZ3UbgC5f2DWM1MDJFbVtWmgkWtjtiEcJ1366gsLPRpuLYjPfAbMGRD6fXhFLaAmAxJjkEKpR4SvHUucdzv1LYeUZT6dMxf15dY5of2ca8YYSeGdpWYxrfpeMDkkfCSqXbTvXd8opaDEWjdmYMUnQVDBiWiW7C1cuPs73ewcCaeJP11yUbgD24qNtZZFLziaz3XoGRc5N1UfJ6HmCUKTi\",\r\n```\r\n",
      "@dbluhm and @TelegramSam — can you please weigh in on this one to help Ian complete the implementation?  Thanks!",
      "> For `did:peer:4` should the connection use the long form or short form of the did?\r\n\r\nI'd say short form unless there's a strong reason not to (there isn't an obvious reason that comes to mind for me).",
      "10 minute scan didn't reveal any red flags for me. I'll have to set aside some time to look deeper.",
      "Integration tests have failed twice in a row, so I ran them locally and everything passed.\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2823) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2823&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2823&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2823&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2823)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2823 from ianco/issue/2703\n\nSupport connection re-use for did:peer:2/4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc6ac254a19ac29476c",
    "number": 2822,
    "body": "Implements https://github.com/hyperledger/aries-cloudagent-python/issues/2807.\r\n\r\n1. Enables schema, cred_def and revocation endpoints for both askar and askar-anoncreds in multitenant mode. All anoncreds endpoints are prefixed with `/anoncreds/`. For some api marshmallow schema objects they were the same name as the existing  objects which displayed a warning. I simply appended Anoncreds to the end of these objects that had conflicts.\r\n3. Returns 403 errors when using the wrong endpoints with message. I thought about trying to do something fancier like a middleware, but decided because it was only a small subset that it would be easier to just add a method to the top of the endpoints. In anoncreds some of the endpoints already had a profile type check and through a ValueError. I did handle this, but for consistency and to prevent unrelated errors I still added the profile check method to the top of the method.\r\n4. Prevent subwallets from being created that are a different type then the base wallet. For example, in the case of having the base wallet askar and trying to create a askar-anoncreds wallet it will throw a 403 and have a message. If the wallet type is empty is defaults to the base wallet.\r\n5. Prevents wallets from being started as an askar wallet and then trying to change the config to askar-anoncreds by using a similar flow as versioning. If the `wallet-type` record is empty and there is a version record (existing wallet) it will assume the wallet is askar. I'm still unsure if anything needs to happen with `indy` wallets. I'm having trouble installing the library to test.\r\n6. Updates integration tests and runs a few of the tests that touch most of the effected endpoints in multitenancy mode.\r\n7. Updates the faber agent in the demos.",
    "head_branch": "feat/2807",
    "is_a_fork": true,
    "comments": [
      "> 4\\. I'm still unsure if anything needs to happen with `indy` wallets. I'm having trouble installing the library to test.\r\n\r\nI don't think we need to do anything with Indy wallets, other than document that if someone is still running an Indy wallet they need to upgrade to Askar before upgrading ton AnonCreds.  For multitenancy there is no \"run Indy and Aksar in parallel\" so they will need to upgrade *all* Indy tenants to Askar.\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2822) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2822&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2822&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2822&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2822)\n\n"
    ],
    "commit_messages": [
      "Anoncreds - support for anoncreds and askar wallets concurrently (#2822)\n\n* Support for anoncreds and askar wallets concurrently\r\n\r\nSigned-off-by: jamshale <jamiehalebc@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: jamshale <jamiehalebc@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc7ac254a19ac29476d",
    "number": 2821,
    "body": "Fixes anoncreds specific problem on initial rev_list. Was sending the rev_list object to the event handler instead of the actual list.\r\n\r\nAdded a log message to v1 handler for after the message has been sent.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2821) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2821&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2821&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2821&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2821)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2821 from jamshale/main\n\nSend revocation list instead of rev_list object - Anoncreds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc8ac254a19ac29476e",
    "number": 2820,
    "body": "Next try (if needed) will get into the regex...",
    "head_branch": "docs-by-branch",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2820) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2820&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2820&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2820&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2820)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2820 from swcurran/docs-by-branch\n\nFIX: GHA update for doc publishing, fix doc file that was blanked"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cc9ac254a19ac29476f",
    "number": 2819,
    "body": "The revocation notification not sending ended up being a simple bug. The crids from the ledger response was a list of integers but the list comprehension statement was expecting strings as thats what it gets from the wallet. I solved this by converting the list to strings to allow the payload to send integers. Think this is slightly better then making sure everywhere that ever uses this event handler is sending strings. Also added a bit better logging.\r\n\r\nOne thing I noticed is that both v1 and v2 handlers are both handling the same event. The first handler (v1 is loaded first) deletes the record so the v2 won't send the message. Not sure if this is what we want or not. Also the v1 wasn't using the `revocation.notify` config. So that is a bug as well I think. I changed v1 to recognize that config now.\r\n\r\nRan into a lot of things with testing traction locally against new acapy changes.",
    "head_branch": "revocation-notification",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2819) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2819&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2819&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2819&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2819)\n\n"
    ],
    "commit_messages": [
      "Allow for crids in event payload to be integers (#2819)\n\nSigned-off-by: jamshale <jamiehalebc@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ccaac254a19ac294770",
    "number": 2816,
    "body": "Taken from #2494 (c/o @dbluhm)\r\n\r\nThis PR is an early implementation of the [RFC 0794 DID Rotate protocol](https://github.com/hyperledger/aries-rfcs/tree/main/features/0794-did-rotate). This was an exercise to feel out any potential issues with the protocol as defined.\r\n\r\nThis is not yet a complete implementation. Notably missing right now is a way to actually trigger a DID rotation through an Admin API call. I also need to finish wiring up the handlers to the manager. And who could forget about tests. 🙂\r\n\r\nOverall, the protocol is solid. I'll report my thoughts on the protocol on the PR to the Aries RFCs.\r\n\r\nAn ACA-Py specific concern I discovered in this process that probably deserves some discussion: invalidating the connection target cache when the DID Rotation is committed. As currently structured, we never really expect the connection targets for a connection to change after the protocol establishing it concludes. DID Rotation shakes that expectation up.\r\n\r\nRight now, in my changes, I've added a clear_connection_targets_cache helper method to partially address this. It's partial because it will only work for ACA-Py when run as a single instance with the default in memory cache or if you're using Indicio's redis cache plugin for whole cluster shared caching.\r\n\r\nI think it would be better for ACA-Py to use a value including both DIDs of the connection in the cache key as a more complete solution. The problem with this and why I've not done it on a first pass is that there would need to be some restructuring of how we use the Responder classes so that the send methods expect a whole ConnRecord and not just a connection_id (or individually a their_did and my_did, I suppose) so we can extract the DIDs from it. 9 times out of 10, I would say that connection record is already available to the caller of the send method and my hypothesis is that in the remaining 1 time out of 10, it will not dramatically impact performance of critical operations (it is not common for us to know the connection_id and not also have a connection record -- maybe only a few places in the Admin API might be like this).\r\n\r\nI'll do some more investigation on these points. Might be good to talk implications at the next ACA-PUG call.\r\n\r\ncc @swcurran @TelegramSam\r\nFYI @Jsyro this has ties back to updating the DIDs associated with connections that we've talked about recently.",
    "head_branch": "feature/did-rotate",
    "is_a_fork": true,
    "comments": [
      "Tagging @dbluhm for review, please.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2816) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2816&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2816&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2816&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2816)\n\n",
      "Not sure why this PR is getting so many random integration test fails. Not the same as the ones as I fixed recently. Might try an look at these other ones at some point. Re-running again.",
      "@jamshale Yeah the tests seem so finicky. ",
      "> @jamshale Yeah the tests seem so finicky.\r\n\r\nThey seem to get worse sometimes and are better sometimes. The last fail was the one I thought I had fixed. Hadn't seen it in a while. Not sure if adding more retries might help or not. "
    ],
    "commit_messages": [
      "Merge pull request #2816 from petridishdev/feature/did-rotate\n\nfeat: did-rotate"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ccbac254a19ac294771",
    "number": 2815,
    "body": "Bumps the all-actions group with 3 updates: [actions/checkout](https://github.com/actions/checkout), [actions/setup-python](https://github.com/actions/setup-python) and [actions/cache](https://github.com/actions/cache).\n\nUpdates `actions/checkout` from 3 to 4\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update default runtime to node20 by <a href=\"https://github.com/takost\"><code>@​takost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li>Support fetching without the --progress option by <a href=\"https://github.com/simonbaird\"><code>@​simonbaird</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n<li>Release 4.0.0 by <a href=\"https://github.com/takost\"><code>@​takost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1447\">actions/checkout#1447</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@​takost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li><a href=\"https://github.com/simonbaird\"><code>@​simonbaird</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v4.0.0\">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>\n<h2>v3.6.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Mark test scripts with Bash'isms to be run via Bash by <a href=\"https://github.com/dscho\"><code>@​dscho</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1377\">actions/checkout#1377</a></li>\n<li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=\"https://github.com/RobertWieczoreck\"><code>@​RobertWieczoreck</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li>Release 3.6.0 by <a href=\"https://github.com/luketomlinson\"><code>@​luketomlinson</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/RobertWieczoreck\"><code>@​RobertWieczoreck</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li><a href=\"https://github.com/luketomlinson\"><code>@​luketomlinson</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.3...v3.6.0\">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>\n<h2>v3.5.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a href=\"https://github.com/megamanics\"><code>@​megamanics</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li>Fix typos found by codespell by <a href=\"https://github.com/DimitriPapadopoulos\"><code>@​DimitriPapadopoulos</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li>Add support for sparse checkouts by <a href=\"https://github.com/dscho\"><code>@​dscho</code></a> and <a href=\"https://github.com/dfdez\"><code>@​dfdez</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n<li>Release v3.5.3 by <a href=\"https://github.com/TingluoHuang\"><code>@​TingluoHuang</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1376\">actions/checkout#1376</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/megamanics\"><code>@​megamanics</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li><a href=\"https://github.com/DimitriPapadopoulos\"><code>@​DimitriPapadopoulos</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li><a href=\"https://github.com/dfdez\"><code>@​dfdez</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v3.5.3\">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>\n<h2>v3.5.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Use correct API url / endpoint in GHES by <a href=\"https://github.com/fhammerl\"><code>@​fhammerl</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1289\">actions/checkout#1289</a> based on <a href=\"https://redirect.github.com/actions/checkout/issues/1286\">#1286</a> by <a href=\"https://github.com/1newsr\"><code>@​1newsr</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.1...v3.5.2\">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>\n<h2>v3.5.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Improve checkout performance on Windows runners by upgrading <code>@​actions/github</code> dependency by <a href=\"https://github.com/BrettDong\"><code>@​BrettDong</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/BrettDong\"><code>@​BrettDong</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/blob/main/CHANGELOG.md\">actions/checkout's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>v4.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1396\">Add support for partial checkout filters</a></li>\n</ul>\n<h2>v4.0.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1067\">Support fetching without the --progress option</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1436\">Update to node20</a></li>\n</ul>\n<h2>v3.6.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1377\">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/579\">Add option to fetch tags even if fetch-depth &gt; 0</a></li>\n</ul>\n<h2>v3.5.3</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1196\">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1287\">Fix typos found by codespell</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1369\">Add support for sparse checkouts</a></li>\n</ul>\n<h2>v3.5.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1289\">Fix api endpoint for GHES</a></li>\n</ul>\n<h2>v3.5.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1246\">Fix slow checkout on Windows</a></li>\n</ul>\n<h2>v3.5.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1237\">Add new public key for known_hosts</a></li>\n</ul>\n<h2>v3.4.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1209\">Upgrade codeql actions to v2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1210\">Upgrade dependencies</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1225\">Upgrade <code>@​actions/io</code></a></li>\n</ul>\n<h2>v3.3.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1045\">Implement branch list using callbacks from exec function</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1050\">Add in explicit reference to private checkout options</a></li>\n<li>[Fix comment typos (that got added in <a href=\"https://redirect.github.com/actions/checkout/issues/770\">#770</a>)](<a href=\"https://redirect.github.com/actions/checkout/pull/1057\">actions/checkout#1057</a>)</li>\n</ul>\n<h2>v3.2.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/942\">Add GitHub Action to perform release</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/967\">Fix status badge</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1002\">Replace datadog/squid with ubuntu/squid Docker image</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/964\">Wrap pipeline commands for submoduleForeach in quotes</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1029\">Update <code>@​actions/io</code> to 1.1.2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1039\">Upgrading version to 3.2.0</a></li>\n</ul>\n<h2>v3.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/939\">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/922\">Add <code>github-server-url</code> input</a></li>\n</ul>\n<h2>v3.0.2</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/checkout/commit/b4ffde65f46336ab88eb53be808477a3936bae11\"><code>b4ffde6</code></a> Link to release page from what's new section (<a href=\"https://redirect.github.com/actions/checkout/issues/1514\">#1514</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8530928916aaef40f59e6f221989ccb31f5759e7\"><code>8530928</code></a> Correct link to GitHub Docs (<a href=\"https://redirect.github.com/actions/checkout/issues/1511\">#1511</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/7cdaf2fbc075e6f3b9ca94cfd6cec5adc8a75622\"><code>7cdaf2f</code></a> Update CODEOWNERS to Launch team (<a href=\"https://redirect.github.com/actions/checkout/issues/1510\">#1510</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8ade135a41bc03ea155e62e844d188df1ea18608\"><code>8ade135</code></a> Prepare 4.1.0 release (<a href=\"https://redirect.github.com/actions/checkout/issues/1496\">#1496</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/c533a0a4cfc4962971818edcfac47a2899e69799\"><code>c533a0a</code></a> Add support for partial checkout filters (<a href=\"https://redirect.github.com/actions/checkout/issues/1396\">#1396</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/72f2cec99f417b1a1c5e2e88945068983b7965f9\"><code>72f2cec</code></a> Update README.md for V4 (<a href=\"https://redirect.github.com/actions/checkout/issues/1452\">#1452</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac\"><code>3df4ab1</code></a> Release 4.0.0 (<a href=\"https://redirect.github.com/actions/checkout/issues/1447\">#1447</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc\"><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=\"https://redirect.github.com/actions/checkout/issues/1067\">#1067</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac\"><code>97a652b</code></a> Update default runtime to node20 (<a href=\"https://redirect.github.com/actions/checkout/issues/1436\">#1436</a>)</li>\n<li>See full diff in <a href=\"https://github.com/actions/checkout/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `actions/setup-python` from 4 to 5\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/setup-python/releases\">actions/setup-python's releases</a>.</em></p>\n<blockquote>\n<h2>v5.0.0</h2>\n<h2>What's Changed</h2>\n<p>In scope of this release, we update node version runtime from node16 to node20 (<a href=\"https://redirect.github.com/actions/setup-python/pull/772\">actions/setup-python#772</a>). Besides, we update dependencies to the latest versions.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0\">https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0</a></p>\n<h2>v4.8.0</h2>\n<h2>What's Changed</h2>\n<p>In scope of this release we added support for GraalPy (<a href=\"https://redirect.github.com/actions/setup-python/pull/694\">actions/setup-python#694</a>). You can use this snippet to set up GraalPy:</p>\n<pre lang=\"yaml\"><code>steps:\n- uses: actions/checkout@v4\n- uses: actions/setup-python@v4 \n  with:\n    python-version: 'graalpy-22.3' \n- run: python my_script.py\n</code></pre>\n<p>Besides, the release contains such changes as:</p>\n<ul>\n<li>Trim python version when reading from file by <a href=\"https://github.com/FerranPares\"><code>@​FerranPares</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/628\">actions/setup-python#628</a></li>\n<li>Use non-deprecated versions in examples by <a href=\"https://github.com/jeffwidman\"><code>@​jeffwidman</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/724\">actions/setup-python#724</a></li>\n<li>Change deprecation comment to past tense by <a href=\"https://github.com/jeffwidman\"><code>@​jeffwidman</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/723\">actions/setup-python#723</a></li>\n<li>Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/743\">actions/setup-python#743</a></li>\n<li>advanced-usage.md: Encourage the use actions/checkout@v4 by <a href=\"https://github.com/cclauss\"><code>@​cclauss</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/729\">actions/setup-python#729</a></li>\n<li>Examples now use checkout@v4 by <a href=\"https://github.com/simonw\"><code>@​simonw</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/738\">actions/setup-python#738</a></li>\n<li>Update actions/checkout to v4 by <a href=\"https://github.com/dmitry-shibanov\"><code>@​dmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/761\">actions/setup-python#761</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/FerranPares\"><code>@​FerranPares</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/628\">actions/setup-python#628</a></li>\n<li><a href=\"https://github.com/timfel\"><code>@​timfel</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/694\">actions/setup-python#694</a></li>\n<li><a href=\"https://github.com/jeffwidman\"><code>@​jeffwidman</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/724\">actions/setup-python#724</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.8.0\">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>\n<h2>v4.7.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/702\">actions/setup-python#702</a></li>\n<li>Add range validation for toml files by <a href=\"https://github.com/dmitry-shibanov\"><code>@​dmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/726\">actions/setup-python#726</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.7.1\">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>\n<h2>v4.7.0</h2>\n<p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=\"https://redirect.github.com/actions/setup-python/pull/669\">actions/setup-python#669</a>).</p>\n<pre lang=\"yaml\"><code>      - name: Setup Python\n        uses: actions/setup-python@v4\n&lt;/tr&gt;&lt;/table&gt; \n</code></pre>\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c\"><code>0a5c615</code></a> Update action to node20 (<a href=\"https://redirect.github.com/actions/setup-python/issues/772\">#772</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/0ae58361cdfd39e2950bed97a1e26aa20c3d8955\"><code>0ae5836</code></a> Add example of GraalPy to docs (<a href=\"https://redirect.github.com/actions/setup-python/issues/773\">#773</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/b64ffcaf5b410884ad320a9cfac8866006a109aa\"><code>b64ffca</code></a> update actions/checkout to v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/761\">#761</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/8d2896179abf658742de432b3f203d2c2d86a587\"><code>8d28961</code></a> Examples now use checkout@v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/738\">#738</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/7bc6abb01e0555719edc2dbca70a2fde309e5e56\"><code>7bc6abb</code></a> advanced-usage.md: Encourage the use actions/checkout@v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/729\">#729</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/e8111cec9d3dc15220d8a3b638f08419f57b906a\"><code>e8111ce</code></a> Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 (<a href=\"https://redirect.github.com/actions/setup-python/issues/743\">#743</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/a00ea43da65e7c04d2bdae58b3afecd77057eb9e\"><code>a00ea43</code></a> add fix for graalpy ci (<a href=\"https://redirect.github.com/actions/setup-python/issues/741\">#741</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/8635b1ccc5934e73ed3510980fd2e7790b85839b\"><code>8635b1c</code></a> Change deprecation comment to past tense (<a href=\"https://redirect.github.com/actions/setup-python/issues/723\">#723</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758\"><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=\"https://redirect.github.com/actions/setup-python/issues/724\">#724</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060\"><code>5f2af21</code></a> Add GraalPy support (<a href=\"https://redirect.github.com/actions/setup-python/issues/694\">#694</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/setup-python/compare/v4...v5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `actions/cache` from 2 to 4\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/releases\">actions/cache's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update action to node20 by <a href=\"https://github.com/takost\"><code>@​takost</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1284\">actions/cache#1284</a></li>\n<li>feat: save-always flag by <a href=\"https://github.com/to-s\"><code>@​to-s</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1242\">actions/cache#1242</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@​takost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1284\">actions/cache#1284</a></li>\n<li><a href=\"https://github.com/to-s\"><code>@​to-s</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1242\">actions/cache#1242</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v4.0.0\">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>\n<h2>v3.3.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Cache v3.3.3 by <a href=\"https://github.com/robherley\"><code>@​robherley</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1302\">actions/cache#1302</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/robherley\"><code>@​robherley</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1302\">actions/cache#1302</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.3\">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>\n<h2>v3.3.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fixed readme with new segment timeout values by <a href=\"https://github.com/kotewar\"><code>@​kotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1133\">actions/cache#1133</a></li>\n<li>Readme fixes by <a href=\"https://github.com/kotewar\"><code>@​kotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1134\">actions/cache#1134</a></li>\n<li>Updated description of the lookup-only input for main action by <a href=\"https://github.com/kotewar\"><code>@​kotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1130\">actions/cache#1130</a></li>\n<li>Change two new actions mention as quoted text by <a href=\"https://github.com/bishal-pdMSFT\"><code>@​bishal-pdMSFT</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1131\">actions/cache#1131</a></li>\n<li>Update Cross-OS Caching tips by <a href=\"https://github.com/pdotl\"><code>@​pdotl</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1122\">actions/cache#1122</a></li>\n<li>Bazel example (Take <a href=\"https://redirect.github.com/actions/cache/issues/2\">#2</a>️⃣) by <a href=\"https://github.com/vorburger\"><code>@​vorburger</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1132\">actions/cache#1132</a></li>\n<li>Remove actions to add new PRs and issues to a project board by <a href=\"https://github.com/jorendorff\"><code>@​jorendorff</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1187\">actions/cache#1187</a></li>\n<li>Consume latest toolkit and fix dangling promise bug by <a href=\"https://github.com/chkimes\"><code>@​chkimes</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1217\">actions/cache#1217</a></li>\n<li>Bump action version to 3.3.2 by <a href=\"https://github.com/bethanyj28\"><code>@​bethanyj28</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1236\">actions/cache#1236</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/vorburger\"><code>@​vorburger</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1132\">actions/cache#1132</a></li>\n<li><a href=\"https://github.com/jorendorff\"><code>@​jorendorff</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1187\">actions/cache#1187</a></li>\n<li><a href=\"https://github.com/chkimes\"><code>@​chkimes</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1217\">actions/cache#1217</a></li>\n<li><a href=\"https://github.com/bethanyj28\"><code>@​bethanyj28</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1236\">actions/cache#1236</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.2\">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>\n<h2>v3.3.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=\"https://github.com/kotewar\"><code>@​kotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1129\">actions/cache#1129</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.1\">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>\n<h2>v3.3.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bug: Permission is missing in cache delete example by <a href=\"https://github.com/kotokaze\"><code>@​kotokaze</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1123\">actions/cache#1123</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/blob/main/RELEASES.md\">actions/cache's changelog</a>.</em></p>\n<blockquote>\n<h1>Releases</h1>\n<h3>3.0.0</h3>\n<ul>\n<li>Updated minimum runner version support from node 12 -&gt; node 16</li>\n</ul>\n<h3>3.0.1</h3>\n<ul>\n<li>Added support for caching from GHES 3.5.</li>\n<li>Fixed download issue for files &gt; 2GB during restore.</li>\n</ul>\n<h3>3.0.2</h3>\n<ul>\n<li>Added support for dynamic cache size cap on GHES.</li>\n</ul>\n<h3>3.0.3</h3>\n<ul>\n<li>Fixed avoiding empty cache save when no files are available for caching. (<a href=\"https://redirect.github.com/actions/cache/issues/624\">issue</a>)</li>\n</ul>\n<h3>3.0.4</h3>\n<ul>\n<li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=\"https://redirect.github.com/actions/cache/issues/689\">issue</a>)</li>\n</ul>\n<h3>3.0.5</h3>\n<ul>\n<li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=\"https://redirect.github.com/actions/cache/pull/834\">PR</a>)</li>\n</ul>\n<h3>3.0.6</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/809\">#809</a> - zstd -d: no such file or directory error</li>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/833\">#833</a> - cache doesn't work with github workspace directory</li>\n</ul>\n<h3>3.0.7</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/810\">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>\n</ul>\n<h3>3.0.8</h3>\n<ul>\n<li>Fix zstd not working for windows on gnu tar in issues <a href=\"https://redirect.github.com/actions/cache/issues/888\">#888</a> and <a href=\"https://redirect.github.com/actions/cache/issues/891\">#891</a>.</li>\n<li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MINS</code>. Default is 60 minutes.</li>\n</ul>\n<h3>3.0.9</h3>\n<ul>\n<li>Enhanced the warning message for cache unavailablity in case of GHES.</li>\n</ul>\n<h3>3.0.10</h3>\n<ul>\n<li>Fix a bug with sorting inputs.</li>\n<li>Update definition for restore-keys in README.md</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2\"><code>13aacd8</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1242\">#1242</a> from to-s/main</li>\n<li><a href=\"https://github.com/actions/cache/commit/53b35c543921fe2e8b288765ff817de9de8d906f\"><code>53b35c5</code></a> Merge branch 'main' into main</li>\n<li><a href=\"https://github.com/actions/cache/commit/65b8989fab3bb394817bdb845a453dff480c2b51\"><code>65b8989</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1284\">#1284</a> from takost/update-to-node-20</li>\n<li><a href=\"https://github.com/actions/cache/commit/d0be34d54485f31ca2ccbe66e6ea3d96544a807b\"><code>d0be34d</code></a> Fix dist</li>\n<li><a href=\"https://github.com/actions/cache/commit/66cf064d47313d2cccf392d01bd10925da2bd072\"><code>66cf064</code></a> Merge branch 'main' into update-to-node-20</li>\n<li><a href=\"https://github.com/actions/cache/commit/1326563738ddb735c5f2ce85cba8c79f33b728cd\"><code>1326563</code></a> Merge branch 'main' into main</li>\n<li><a href=\"https://github.com/actions/cache/commit/e12d46a63a90f2fae62d114769bbf2a179198b5c\"><code>e12d46a</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1302\">#1302</a> from actions/robherley/v3.3.3</li>\n<li><a href=\"https://github.com/actions/cache/commit/1baebfc3bafe03311c1239b7d001ecdf5da64951\"><code>1baebfc</code></a> licensed</li>\n<li><a href=\"https://github.com/actions/cache/commit/eb94f1a6bf968b0555b89297bc603690b68beccd\"><code>eb94f1a</code></a> cache v3.3.3</li>\n<li><a href=\"https://github.com/actions/cache/commit/e71876755e268d6cc25a5d3e3c46ae447e35290a\"><code>e718767</code></a> Fix format</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/cache/compare/v2...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore <dependency name> major version` will close this group update PR and stop Dependabot creating any more for the specific dependency's major version (unless you unignore this specific dependency's major version or upgrade to it yourself)\n- `@dependabot ignore <dependency name> minor version` will close this group update PR and stop Dependabot creating any more for the specific dependency's minor version (unless you unignore this specific dependency's minor version or upgrade to it yourself)\n- `@dependabot ignore <dependency name>` will close this group update PR and stop Dependabot creating any more for the specific dependency (unless you unignore this specific dependency or upgrade to it yourself)\n- `@dependabot unignore <dependency name>` will remove all of the ignore conditions of the specified dependency\n- `@dependabot unignore <dependency name> <ignore condition>` will remove the ignore condition of the specified dependency and ignore conditions\n\n\n</details>",
    "head_branch": "dependabot/github_actions/all-actions-3f8b52ffcc",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2815) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2815&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2815&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2815)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2815 from hyperledger/dependabot/github_actions/all-actions-3f8b52ffcc\n\nchore(deps): Bump the all-actions group with 3 updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ccbac254a19ac294772",
    "number": 2814,
    "body": "Sorry. I should have blocked the last PR from getting merged for a bit. I forgot to test the anoncreds non-endorsement scenario. Integration tests caught it and I fixed the problem with this PR. Tested the failing integration tests locally.\r\n\r\nAlso, enabled a test that was commented out for askar wallet revoke and then publish scenarios.",
    "head_branch": "fix-revocation-notification",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2814) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2814&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2814&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2814)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2814 from jamshale/fix-revocation-notification\n\nFix anoncreds non-endorsement revocation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cccac254a19ac294773",
    "number": 2813,
    "body": "Separate the \"connection reuse\" and \"use public did\" configuration for the demo:\r\n\r\n```\r\n./run_demo faber --reuse-connection --public-did-connections\r\n```\r\n\r\n(Previously only the `--reuse-connection` parameter was available and it automatically set the connection to use the public DID.)\r\n\r\nTo run with a `did:peer` use:\r\n\r\n```\r\nDEMO_EXTRA_AGENT_ARGS=\"[\\\"--emit-did-peer-2\\\"]\" ./run_demo faber --reuse-connection --events\r\n```\r\n\r\nThere are some issues with `did:peer`, see discussion in issue #2703.\r\n",
    "head_branch": "issue/2703",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2813) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2813&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2813&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2813)\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ccdac254a19ac294774",
    "number": 2812,
    "body": "This fixes the issue with the revocation notification not happening.\r\n\r\nThere was a couple things that didn't make sense. \r\n\r\n- For the `/revoke` endpoint if was never calling notify. It was only creating the notification record. This may have been deliberate (see comment), but needs to notify at some point, which it isn't doing.\r\n- For the `/publish-revocations` endpoint it was not calling notify when there was a connection_id, but this is only used for explicitly using a specific endorser connection. When in author and preconfigured mode, this parameter isn't even used. I think it was trying to prevent the notify from happening for endorsement scenarios. (see next comment)\r\n\r\n***comment***: right now the revocation notification is happening after requesting endorsement but before the new list entry has been written to the ledger. This is the same for anoncreds. I'm not sure if this is what we actually want. It kinda makes sense to have it immediately when the issuer revokes, but it also makes sense not to notify until after the endorsement has happened and the entry has been written.\r\n\r\nTested with traction and bc wallet. \r\n\r\nStill testing some scenarios.",
    "head_branch": "fix-revocation-notification",
    "is_a_fork": true,
    "comments": [
      ":point_up:  That was what I was thinking. It shouldn't be difficult to change, but I'll wait for a bit any additional feedback before changing it. ",
      "> ☝️ That was what I was thinking. It shouldn't be difficult to change, but I'll wait for a bit any additional feedback before changing it.\r\n\r\nSounds good. If @ianco @andrewwhitehead @swcurran want to chime in about this as well we can come up to a consensus and move forward.",
      "Agree with @esune  the notification shouldn't happen until after the ledger entry is written, which in the endorser scenario is after the endorsed transaction is received and written.  Not sure how this was implemented for this transaction type, but for other scenarios this kind of functionality is in the event handler for whatever event is emitted by the TransactionManager,\r\n\r\n(\r\nThe ledger is updated here:  https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/protocols/endorse_transaction/v1_0/manager.py#L437\r\n\r\n... and then the event is emitted here:  https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/protocols/endorse_transaction/v1_0/manager.py#L772\r\n)\r\n\r\n",
      "Thanks @ianco. I wonder if, when it was first implemented, it was relying on the (now deprecated) endorse-and-write request pattern - either way, this is a good opportunity to clean things up.",
      "My $0.02CDN — it’s been a question/dilemna for a bit, and we’ve had questions from folks like IDIM about that. I didn’t know exactly when the “notification” occurred.\r\n\r\nThere is the revoke event (action to mark a credential as pending revocation for a specific credential) and the revocation publish event (batch of one or more pending revocations published to a ledger) There are reasonable arguments both ways on whether the notification should be sent on revoke or publish. The sooner the notification goes the better, but if we notify on publish and then publish a lot to get the notification out sooner, we get a lot more transactions on the ledger.\r\n\r\nI think we should probably move the notification should be moved to the end of the publish event, which will likely mean more publishing events so that the notifications go out more frequently.\r\n\r\nWe also have to make sure that even when we have a combined “revoke and publish”, that the same actions are being performed as when we “revoke” and then sometime later “publish”.  The combined is just a convenience.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2812) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2812&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2812&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2812)\n\n",
      "Updated both revocation branches to send the revoke notification after the list is written to the ledger. I think this addresses all the comments. \r\n\r\nWill do another pass of manual testing.",
      "Can you please update the PR title to better reflect the change?  I'll highlight the change in the changelog. We should check the docs to make sure this is clear -- I didn't know before when notification occurred.",
      "> Can you please update the PR title to better reflect the change? I'll highlight the change in the changelog. We should check the docs to make sure this is clear -- I didn't know before when notification occurred.\r\n\r\nYes I will.\r\n\r\nI have to check out some failing integration tests too. Wasn't expecting it to get merged so fast. Not sure why they're failing yet.\r\n"
    ],
    "commit_messages": [
      "Merge pull request #2812 from jamshale/fix-revocation-notification"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cceac254a19ac294775",
    "number": 2811,
    "body": "Removes the \"on create\" trigger, since that seems to trigger the workflow twice.\r\nFixes the version of the variable.",
    "head_branch": "docs-by-branch",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2811) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2811&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2811&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2811)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2811 from swcurran/docs-by-branch\n\nEliminate the double workflow event"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ccfac254a19ac294776",
    "number": 2810,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "docs-by-branch",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2810) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2810&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2810&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2810)\n\n",
      "I think this will do it, but who knows... :-). I was able to go further on the testing, so that's good.",
      "Sorry about the merge. Weird... The button was green, at least on mobile. Shouldn't have been without the tests complete and passing."
    ],
    "commit_messages": [
      "Merge pull request #2810 from swcurran/docs-by-branch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd0ac254a19ac294777",
    "number": 2806,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "docs-by-branch",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2806) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2806&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2806&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2806)\n\n",
      "@WadeBarnes — couldn’t test this ahead — typo in script."
    ],
    "commit_messages": [
      "Merge pull request #2806 from swcurran/docs-by-branch\n\nPublish docs GHActions tweak"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd1ac254a19ac294778",
    "number": 2805,
    "body": "Bumps [cryptography](https://github.com/pyca/cryptography) from 42.0.3 to 42.0.4.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst\">cryptography's changelog</a>.</em></p>\n<blockquote>\n<p>42.0.4 - 2024-02-20</p>\n<pre><code>\n* Fixed a null-pointer-dereference and segfault that could occur when creating\n  a PKCS#12 bundle. Credit to **Alexander-Programming** for reporting the\n  issue. **CVE-2024-26130**\n* Fixed ASN.1 encoding for PKCS7/SMIME signed messages. The fields ``SMIMECapabilities``\n  and ``SignatureAlgorithmIdentifier`` should now be correctly encoded according to the\n  definitions in :rfc:`2633` :rfc:`3370`.\n<p>.. _v42-0-3:\n</code></pre></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pyca/cryptography/commit/fe18470f7d05f963e7267e34fdf985d81ea6ceea\"><code>fe18470</code></a> Bump for 42.0.4 release (<a href=\"https://redirect.github.com/pyca/cryptography/issues/10445\">#10445</a>)</li>\n<li><a href=\"https://github.com/pyca/cryptography/commit/aaa2dd06ed470695de818405a982d4c459869803\"><code>aaa2dd0</code></a> Fix ASN.1 issues in PKCS#7 and S/MIME signing (<a href=\"https://redirect.github.com/pyca/cryptography/issues/10373\">#10373</a>) (<a href=\"https://redirect.github.com/pyca/cryptography/issues/10442\">#10442</a>)</li>\n<li><a href=\"https://github.com/pyca/cryptography/commit/7a4d012991061974da5d9cb7614de65eac94f49b\"><code>7a4d012</code></a> Fixes <a href=\"https://redirect.github.com/pyca/cryptography/issues/10422\">#10422</a> -- don't crash when a PKCS#12 key and cert don't match (<a href=\"https://redirect.github.com/pyca/cryptography/issues/10423\">#10423</a>) ...</li>\n<li><a href=\"https://github.com/pyca/cryptography/commit/df314bb182bdfd661333969a94325e4680d785f6\"><code>df314bb</code></a> backport actions m1 switch to 42.0.x (<a href=\"https://redirect.github.com/pyca/cryptography/issues/10415\">#10415</a>)</li>\n<li>See full diff in <a href=\"https://github.com/pyca/cryptography/compare/42.0.3...42.0.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cryptography&package-manager=pip&previous-version=42.0.3&new-version=42.0.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/cryptography-42.0.4",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2805) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2805&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2805&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2805&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2805)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2805 from hyperledger/dependabot/pip/cryptography-42.0.4\n\nchore(deps): Bump cryptography from 42.0.3 to 42.0.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd1ac254a19ac294779",
    "number": 2804,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "docs-by-branch",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2804) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2804&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2804&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2804)\n\n",
      "@WadeBarnes -- check it out.  Should:\r\n\r\n- publish docs for any created branches or tags (\"on\", \"create\")\r\n- publish docs for pushes to branches that start with \"docs-v\" or main\r\n- if the pushed or created tag / branch is not \"main\" or has a \"v-docs\" prefix, exit happily.\r\n- otherwise, normal flow for mike (versioning support) and mkdocs",
      "Looks like it should work.  Could add the `- docs-v*` filter to the `on create`?",
      "I had just added the GHA extension to VS-Code when I did this. Turns out that `create` doesn’t support `branches`.  I think early versions might have (found a reference on the internet that it did), but the extension flagged it as an error and when I checked the GHA docs, it doesn’t take any parameters."
    ],
    "commit_messages": [
      "Merge pull request #2804 from swcurran/docs-by-branch\n\nUpdate publish-docs to operate on main and on branches prefixed with docs-v"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd2ac254a19ac29477a",
    "number": 2803,
    "body": "This should fix https://github.com/hyperledger/aries-cloudagent-python/issues/2792, unless there's something I'm not aware of. \r\n\r\nStart the multitenant admin with\r\n``` yml\r\nwallet-type: askar-anoncreds\r\nmultitenancy-config: wallet_type=askar-profile\r\nwallet-storage-type: default\r\n```\r\nand create tenant with \r\n\r\n``` json\r\n{\r\n  \"extra_settings\": {},\r\n  \"key_management_mode\": \"managed\",\r\n  \"label\": \"Tenant 0\",\r\n  \"wallet_dispatch_type\": \"default\",\r\n  \"wallet_key\": \"tenant_key_0\",\r\n  \"wallet_name\": \"tenant_0\",\r\n  \"wallet_type\": \"askar-anoncreds\"\r\n}\r\n```\r\n\r\nCan create the ledger objects through the api. Before the change was get wrong profile error.",
    "head_branch": "feat/2792",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2803) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2803&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2803&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2803)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2803 from jamshale/feat/2792\n\nGet and create anoncreds profile when using anoncreds subwallet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd3ac254a19ac29477b",
    "number": 2802,
    "body": null,
    "head_branch": "gh-pages",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2802) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2802&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2802&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2802)\n\n",
      "@WadeBarnes -- please review. This is why I got a 404 on the GH Pages of the ACA-Py documentation.\r\n\r\nThanks"
    ],
    "commit_messages": [
      "Merge pull request #2802 from swcurran/gh-pages\n\nAdd index.html redirector to gh-pages branch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd4ac254a19ac29477c",
    "number": 2801,
    "body": "So, I had a misunderstanding. Endorsement for anoncreds in multitenancy is currently working when the admin agent is askar-anoncreds wallet type and the tenants are created with askar-anoncreds wallet type.\r\n\r\nThis PR will just add integration tests for this scenario.\r\n\r\nI think it's important to have the feature https://github.com/hyperledger/aries-cloudagent-python/issues/2786 available for multitenancy going forward as this is where some of my confusion came from. When I first thought this didn't work, the author tenant wasn't setup completely. (It's pretty much finished other than some unit testing problems)\r\n\r\nThe other issue somewhat related to this issue is https://github.com/hyperledger/aries-cloudagent-python/issues/2792 but work can be done off of this issue as it is more relevant.\r\n\r\nI'm thinking about how this is going to work with the admin agent on `askar` and a tenant is on `askar-anoncreds` and vice versa, and how this is going to work with the upgrade script etc. Currently this doesn't work because the wallet type of the admin agent is what decides what endpoints are available.\r\n\r\nI don't think these questions are related to this ticket though so the tests should be enough to close this issue.",
    "head_branch": "feat/2767",
    "is_a_fork": true,
    "comments": [
      "> I'm thinking about how this is going to work with the admin agent on `askar` and a tenant is on `askar-anoncreds` and vice versa, and how this is going to work with the upgrade script etc. Currently this doesn't work because the wallet type of the admin agent is what decides what endpoints are available.\r\n\r\nPer @swcurran 's comments about the upgrade process (askar to askar-anoncreds) I think we'll need to have a consistent set of API's available for the two wallet types.  Not sure why it's not working but endorsement definitely \"should\" work between the askar and askar-anoncreds wallet types.\r\n\r\nThere are other issues with how the endorser/author connection is setup but we have a couple of issues open on this topic.\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2801) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2801&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2801&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2801)\n\n",
      "Not sure how I did this after testing locally but I spelled `multitenant` wrong as the option and this caused the tests to hang.\r\n\r\nI also slightly reduced the amount of endorsement tests for `GHA`. They are getting pretty long and the few I removed are covered by the other tests."
    ],
    "commit_messages": [
      "Merge pull request #2801 from jamshale/feat/2767\n\nAdd anoncreds multitenant endorsement integration tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd5ac254a19ac29477d",
    "number": 2800,
    "body": "Fix to the publish GitHub action before release.\r\n",
    "head_branch": "0.12.0rc1",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2800) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2800&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2800&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2800)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2800 from swcurran/0.12.0rc1\n\n0.12.0rc1-tweak"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd6ac254a19ac29477e",
    "number": 2799,
    "body": "Draft still, as I would like to get a few more of the PRs in that are ready and just need merging.\r\n",
    "head_branch": "0.12.0rc1",
    "is_a_fork": true,
    "comments": [
      "@WadeBarnes -- I added in the ability to publish the docs to a gh-pages site. A bit of overreach for a Release PR, but I wanted to get this into the release ASAP, so we can transition away from the [aries-acapy-docs](https://github.com/hyperledger/aries-acapy-docs] repo.  I've duplicated the GitHub Action (called \"ci.yml\" over there) to here (called \"publish-docs.yml\"), with a couple of additions to move things into the right place when publishing.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2799) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2799&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2799&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2799)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2799 from swcurran/0.12.0rc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd6ac254a19ac29477f",
    "number": 2796,
    "body": "This addresses issue #2666. The validation middlewares were registered before the authorization middlewares resulting in unauthorized requests executing the validation code in the application. This leads to a security flaw as validation libraries could be exploited and could be considered a form [remote code injection](https://owasp.org/www-community/attacks/Code_Injection).\r\n\r\nThe fix is simple and results on authorization checks happening before request validations. \r\n\r\n@esune @amanji please review these changes and let me know what you think!",
    "head_branch": "pstlouis/change-validation-middleware-order",
    "is_a_fork": true,
    "comments": [
      "Please update for base branch.  Good if you can change it so I can do that. Not sure why I can’t with your PRs.",
      "Adding reviewers @jamshale and @esune ",
      "@PatStLouis —need another base update and we can merge this.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2796) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2796&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2796&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2796)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2796 from OpSecId/pstlouis/change-validation-middleware-order"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd7ac254a19ac294780",
    "number": 2795,
    "body": "This is to address a bug we have found in the pyld library which was incorrectly asserting context elements as null.\r\n\r\nAddresses issue #2743 and will close PR #2744.\r\n\r\nFor background information you can read [this closed issue on the pyld repo](https://github.com/digitalbazaar/pyld/pull/189).\r\n\r\n@swcurran I tested these changes and was able to verify traceable credentials with the proper did document content. ",
    "head_branch": "pstlouis/bump-pyld",
    "is_a_fork": true,
    "comments": [
      "I’ll watch for the tests, and we’ll include this in the pending release candidate.",
      "> I’ll watch for the tests, and we’ll include this in the pending release candidate.\r\n\r\nA couple of the integration tests have been failing a lot today. I'm not sure why, as they had been passing consistently. Might be a resources and timing issue. I ran the failing test locally on main and it passed. Pretty sure we can ignore this fail if we want.",
      "From the available logs the step that failed seems due to a [cred_def being on the ledger but not in the agent's wallet](https://github.com/hyperledger/aries-cloudagent-python/actions/runs/7937287801/job/21674211438?pr=2795#step:3:7355). Sounds like a false positive as in not related to this PR, do you have the ability to rerun the tests @jamshale ? We had occurrences before where the tests sometimes fail for some arbitrary reason, probably resource or timing issue like you mentioned.",
      "I triggered a re-run be updating the branch, lets see",
      "Add I merged another PR, so you are out of date again.  Update and I will bypass the protections..,",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2795) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2795&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2795&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2795)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2795 from OpSecId/pstlouis/bump-pyld"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd8ac254a19ac294781",
    "number": 2794,
    "body": "Pretty straightforward, I changed the way these endpoint instantiate the `VcLdpManager`. This is to address [this issue](https://github.com/hyperledger/aries-cloudagent-python/issues/2793)",
    "head_branch": "pstlouis/replace-profile-injection-for-w3c-vc-issuance",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2794) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2794&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2794&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2794)\n\n",
      "@dbluhm could I get a quick approval?",
      "@jamshale — over to you for approval. Let’s leave @dbluhm and the baby be for a while 👶 🍼 ",
      "oh wow, here's some news I wasn't aware of! Congratulations @dbluhm ! ",
      "Thank you. Approved. Hopefully it wasn't leveraged anywhere else. There was only a few PR's after it was merged so I'm pretty sure this must be it."
    ],
    "commit_messages": [
      "Merge pull request #2794 from OpSecId/pstlouis/replace-profile-injection-for-w3c-vc-issuance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cd9ac254a19ac294782",
    "number": 2791,
    "body": "This allows tenant author setup with an endorser to be automated through the api with the same configs as starting an author agent from the command line. It creates a util with the existing startup code and calls it from the `create_wallet` endpoint. I think this really helps simplify creating author tenants.\r\n\r\nexample:\r\n``` json\r\n{\r\n  \"extra_settings\": {\r\n    \"endorser-alias\": \"endorser\",\r\n    \"endorser-protocol-role\": \"author\",\r\n    \"auto-request-endorsement\": true,\r\n    \"auto-write-transactions\": true,\r\n    \"endorser-public-did\": \"Aedt1jccq9Do7G9fKp7yHT\",\r\n    \"auto-promote-author-did\": true,\r\n    \"auto-create-revocation-transactions\": true,\r\n    \"endorser-invitation\": \"http://localhost:9030?oob=eyJAdHlwZSI6ICJodHRwczovL2RpZGNvbW0ub3JnL291dC1vZi1iYW5kLzEuMS9pbnZpdGF0aW9uIiwgIkBpZCI6ICIxZTEyZjY0ZC05MWYwLTRlM2YtYmZmMi1jYzk5NjkxMDNhOWMiLCAibGFiZWwiOiAiZW5kb3JzZXIiLCAiaGFuZHNoYWtlX3Byb3RvY29scyI6IFsiaHR0cHM6Ly9kaWRjb21tLm9yZy9kaWRleGNoYW5nZS8xLjAiXSwgInNlcnZpY2VzIjogW3siaWQiOiAiI2lubGluZSIsICJ0eXBlIjogImRpZC1jb21tdW5pY2F0aW9uIiwgInJlY2lwaWVudEtleXMiOiBbImRpZDprZXk6ejZNa3RFajlkdFJ3UXFzRllWUGpTeEZKYlJHZkN2emExUWoxcU5USjE3TWFza1RqI3o2TWt0RWo5ZHRSd1Fxc0ZZVlBqU3hGSmJSR2ZDdnphMVFqMXFOVEoxN01hc2tUaiJdLCAic2VydmljZUVuZHBvaW50IjogImh0dHA6Ly9sb2NhbGhvc3Q6OTAzMCJ9XX0=\"\r\n  },\r\n  \"key_management_mode\": \"managed\",\r\n  \"label\": \"tenant-0\",\r\n  \"wallet_dispatch_type\": \"default\",\r\n  \"wallet_key\": \"tenant-key-0\",\r\n  \"wallet_name\": \"tenant-0\",\r\n  \"wallet_type\": \"askar-anoncreds\"\r\n}\r\n```\r\n\r\nI had to fix what I believe was a bug with creating the connection for the tenant from the admin context in `aries_cloudagent/protocols/didexchange/v1_0/manager.py` where connection info would be saved for the wrong profile for the responder.\r\n\r\n\r\n ",
    "head_branch": "feat/2786",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2791) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2791&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2791&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2791)\n\n"
    ],
    "commit_messages": [
      "Author subwallet setup automation (#2791)\n\nSigned-off-by: jamshale <jamiehalebc@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cdaac254a19ac294783",
    "number": 2790,
    "body": "- Adds `--emit-did-peer-{2 | 4}` per tenant setting\r\n- Adds `--preserve-exchange-records` per tenant setting\r\n- Adds  `--requests-through-public-did` per tenant setting\r\n\r\nResolves: #2724 \r\nResolves: #2648\r\nResolves: #2572 \r\n",
    "head_branch": "feature/per-tenant-settings",
    "is_a_fork": true,
    "comments": [
      "Did any other work get done on this that would be worth documenting?  Other than simply adding the lines, was anything else done that might help future per tenant setting additions?\r\n\r\n@loneil — does simply adding these items result in them being exposed/updateable in Traction, or is there another PR needed there to add these three settings to expose them in the Traction UI?\r\n\r\nThanks!",
      "They will need a UI addition to add the fields on the settings page is all",
      "Should I do a quick PR to add them in Traction?",
      "> Did any other work get done on this that would be worth documenting?  Other than simply adding the lines, was anything else done that might help future per tenant setting additions?\n> \n> \n> \n> @loneil — does simply adding these items result in them being exposed/updateable in Traction, or is there another PR needed there to add these three settings to expose them in the Traction UI?\n> \n> \n> \n> Thanks!\n\nNot for this PR. It would be worthwhile exploring refactoring code to wholesale include parameters and create an exclusion list for those that shouldn't be tenant specific. I'd argue that a refactor of the argparse file should be explored to come up with consistent parameter names, etc.",
      "> Should I do a quick PR to add them in Traction?\r\n\r\nThis would be in an RC right? Maybe would have to just wait until the release that includes it is rolled out anyways?",
      "The failing integration test seems to be a fragile test. The same test failed for my recent draft PR.",
      "> > Should I do a quick PR to add them in Traction?\n> \n> \n> \n> This would be in an RC right? Maybe would have to just wait until the release that includes it is rolled out anyways?\n\nYeah we can file an issue for now and I'll add it as soon as a new version is released ",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2790) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2790&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2790&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2790)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2790 from petridishdev/feature/per-tenant-settings\n\nfeature/per tenant settings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cdbac254a19ac294784",
    "number": 2789,
    "body": "Reverts the changes made in https://github.com/hyperledger/aries-cloudagent-python/pull/2705 which caused problems with certain multitenant environments (still unknown). If this is something we want we can look at doing it again in a future release.\r\n\r\nTested the problem described in issue https://github.com/hyperledger/aries-cloudagent-python/issues/2777 by running the multitenant provider plugin integration tests. Could see the problem in 0.12.0dev0, but all the tests pass when pointing to my forked branch with the revert.\r\n\r\nI believe this was only used for the `VcLdpManager` to prevent creating a new instance for every handler method call. I reverted these occurrences back to creating a new manager instance. ",
    "head_branch": "revert-inject-profile",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2789) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2789&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2789&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2789)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2789 from jamshale/revert-inject-profile\n\nRevert profile inject"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cdcac254a19ac294785",
    "number": 2788,
    "body": "Added a note to the multiledger documentation that references a known issue when switching ledgers.\r\n\r\n@dbluhm @swcurran I referenced the open issue, but didn't add additional details as they will likely be documented in the issue itself.",
    "head_branch": "chore/update-multiledger-docs",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2788) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2788&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2788&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2788)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2788 from esune/chore/update-multiledger-docs\n\nAdd known issues section to Multiledger.md documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cddac254a19ac294786",
    "number": 2787,
    "body": "Addresses #2703 by adding documentation about the process.\r\n",
    "head_branch": "reuse-demo",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2787) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2787&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2787&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2787)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2787 from swcurran/reuse-demo\n\nDemo description of reuse in establishing a connection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cddac254a19ac294787",
    "number": 2784,
    "body": "Bumps the all-actions group with 10 updates:\n\n| Package | From | To |\n| --- | --- | --- |\n| [actions/checkout](https://github.com/actions/checkout) | `2` | `4` |\n| [actions/setup-python](https://github.com/actions/setup-python) | `4` | `5` |\n| [psf/black](https://github.com/psf/black) | `24.1.1` | `24.2.0` |\n| [github/codeql-action](https://github.com/github/codeql-action) | `2` | `3` |\n| [pypa/gh-action-pip-audit](https://github.com/pypa/gh-action-pip-audit) | `1.0.0` | `1.0.8` |\n| [actions/cache](https://github.com/actions/cache) | `3` | `4` |\n| [docker/setup-buildx-action](https://github.com/docker/setup-buildx-action) | `2` | `3` |\n| [docker/login-action](https://github.com/docker/login-action) | `2` | `3` |\n| [docker/metadata-action](https://github.com/docker/metadata-action) | `4` | `5` |\n| [docker/build-push-action](https://github.com/docker/build-push-action) | `3` | `5` |\n\nUpdates `actions/checkout` from 2 to 4\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update default runtime to node20 by <a href=\"https://github.com/takost\"><code>@​takost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li>Support fetching without the --progress option by <a href=\"https://github.com/simonbaird\"><code>@​simonbaird</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n<li>Release 4.0.0 by <a href=\"https://github.com/takost\"><code>@​takost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1447\">actions/checkout#1447</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@​takost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li><a href=\"https://github.com/simonbaird\"><code>@​simonbaird</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v4.0.0\">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>\n<h2>v3.6.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Mark test scripts with Bash'isms to be run via Bash by <a href=\"https://github.com/dscho\"><code>@​dscho</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1377\">actions/checkout#1377</a></li>\n<li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=\"https://github.com/RobertWieczoreck\"><code>@​RobertWieczoreck</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li>Release 3.6.0 by <a href=\"https://github.com/luketomlinson\"><code>@​luketomlinson</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/RobertWieczoreck\"><code>@​RobertWieczoreck</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li><a href=\"https://github.com/luketomlinson\"><code>@​luketomlinson</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.3...v3.6.0\">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>\n<h2>v3.5.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a href=\"https://github.com/megamanics\"><code>@​megamanics</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li>Fix typos found by codespell by <a href=\"https://github.com/DimitriPapadopoulos\"><code>@​DimitriPapadopoulos</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li>Add support for sparse checkouts by <a href=\"https://github.com/dscho\"><code>@​dscho</code></a> and <a href=\"https://github.com/dfdez\"><code>@​dfdez</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n<li>Release v3.5.3 by <a href=\"https://github.com/TingluoHuang\"><code>@​TingluoHuang</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1376\">actions/checkout#1376</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/megamanics\"><code>@​megamanics</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li><a href=\"https://github.com/DimitriPapadopoulos\"><code>@​DimitriPapadopoulos</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li><a href=\"https://github.com/dfdez\"><code>@​dfdez</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v3.5.3\">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>\n<h2>v3.5.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Use correct API url / endpoint in GHES by <a href=\"https://github.com/fhammerl\"><code>@​fhammerl</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1289\">actions/checkout#1289</a> based on <a href=\"https://redirect.github.com/actions/checkout/issues/1286\">#1286</a> by <a href=\"https://github.com/1newsr\"><code>@​1newsr</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.1...v3.5.2\">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>\n<h2>v3.5.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Improve checkout performance on Windows runners by upgrading <code>@​actions/github</code> dependency by <a href=\"https://github.com/BrettDong\"><code>@​BrettDong</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/BrettDong\"><code>@​BrettDong</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/blob/main/CHANGELOG.md\">actions/checkout's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>v4.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1396\">Add support for partial checkout filters</a></li>\n</ul>\n<h2>v4.0.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1067\">Support fetching without the --progress option</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1436\">Update to node20</a></li>\n</ul>\n<h2>v3.6.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1377\">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/579\">Add option to fetch tags even if fetch-depth &gt; 0</a></li>\n</ul>\n<h2>v3.5.3</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1196\">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1287\">Fix typos found by codespell</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1369\">Add support for sparse checkouts</a></li>\n</ul>\n<h2>v3.5.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1289\">Fix api endpoint for GHES</a></li>\n</ul>\n<h2>v3.5.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1246\">Fix slow checkout on Windows</a></li>\n</ul>\n<h2>v3.5.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1237\">Add new public key for known_hosts</a></li>\n</ul>\n<h2>v3.4.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1209\">Upgrade codeql actions to v2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1210\">Upgrade dependencies</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1225\">Upgrade <code>@​actions/io</code></a></li>\n</ul>\n<h2>v3.3.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1045\">Implement branch list using callbacks from exec function</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1050\">Add in explicit reference to private checkout options</a></li>\n<li>[Fix comment typos (that got added in <a href=\"https://redirect.github.com/actions/checkout/issues/770\">#770</a>)](<a href=\"https://redirect.github.com/actions/checkout/pull/1057\">actions/checkout#1057</a>)</li>\n</ul>\n<h2>v3.2.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/942\">Add GitHub Action to perform release</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/967\">Fix status badge</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1002\">Replace datadog/squid with ubuntu/squid Docker image</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/964\">Wrap pipeline commands for submoduleForeach in quotes</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1029\">Update <code>@​actions/io</code> to 1.1.2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1039\">Upgrading version to 3.2.0</a></li>\n</ul>\n<h2>v3.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/939\">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/922\">Add <code>github-server-url</code> input</a></li>\n</ul>\n<h2>v3.0.2</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/checkout/commit/b4ffde65f46336ab88eb53be808477a3936bae11\"><code>b4ffde6</code></a> Link to release page from what's new section (<a href=\"https://redirect.github.com/actions/checkout/issues/1514\">#1514</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8530928916aaef40f59e6f221989ccb31f5759e7\"><code>8530928</code></a> Correct link to GitHub Docs (<a href=\"https://redirect.github.com/actions/checkout/issues/1511\">#1511</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/7cdaf2fbc075e6f3b9ca94cfd6cec5adc8a75622\"><code>7cdaf2f</code></a> Update CODEOWNERS to Launch team (<a href=\"https://redirect.github.com/actions/checkout/issues/1510\">#1510</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8ade135a41bc03ea155e62e844d188df1ea18608\"><code>8ade135</code></a> Prepare 4.1.0 release (<a href=\"https://redirect.github.com/actions/checkout/issues/1496\">#1496</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/c533a0a4cfc4962971818edcfac47a2899e69799\"><code>c533a0a</code></a> Add support for partial checkout filters (<a href=\"https://redirect.github.com/actions/checkout/issues/1396\">#1396</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/72f2cec99f417b1a1c5e2e88945068983b7965f9\"><code>72f2cec</code></a> Update README.md for V4 (<a href=\"https://redirect.github.com/actions/checkout/issues/1452\">#1452</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac\"><code>3df4ab1</code></a> Release 4.0.0 (<a href=\"https://redirect.github.com/actions/checkout/issues/1447\">#1447</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc\"><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=\"https://redirect.github.com/actions/checkout/issues/1067\">#1067</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac\"><code>97a652b</code></a> Update default runtime to node20 (<a href=\"https://redirect.github.com/actions/checkout/issues/1436\">#1436</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/f43a0e5ff2bd294095638e18286ca9a3d1956744\"><code>f43a0e5</code></a> Release 3.6.0 (<a href=\"https://redirect.github.com/actions/checkout/issues/1437\">#1437</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/checkout/compare/v2...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `actions/setup-python` from 4 to 5\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/setup-python/releases\">actions/setup-python's releases</a>.</em></p>\n<blockquote>\n<h2>v5.0.0</h2>\n<h2>What's Changed</h2>\n<p>In scope of this release, we update node version runtime from node16 to node20 (<a href=\"https://redirect.github.com/actions/setup-python/pull/772\">actions/setup-python#772</a>). Besides, we update dependencies to the latest versions.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0\">https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0</a></p>\n<h2>v4.8.0</h2>\n<h2>What's Changed</h2>\n<p>In scope of this release we added support for GraalPy (<a href=\"https://redirect.github.com/actions/setup-python/pull/694\">actions/setup-python#694</a>). You can use this snippet to set up GraalPy:</p>\n<pre lang=\"yaml\"><code>steps:\n- uses: actions/checkout@v4\n- uses: actions/setup-python@v4 \n  with:\n    python-version: 'graalpy-22.3' \n- run: python my_script.py\n</code></pre>\n<p>Besides, the release contains such changes as:</p>\n<ul>\n<li>Trim python version when reading from file by <a href=\"https://github.com/FerranPares\"><code>@​FerranPares</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/628\">actions/setup-python#628</a></li>\n<li>Use non-deprecated versions in examples by <a href=\"https://github.com/jeffwidman\"><code>@​jeffwidman</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/724\">actions/setup-python#724</a></li>\n<li>Change deprecation comment to past tense by <a href=\"https://github.com/jeffwidman\"><code>@​jeffwidman</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/723\">actions/setup-python#723</a></li>\n<li>Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/743\">actions/setup-python#743</a></li>\n<li>advanced-usage.md: Encourage the use actions/checkout@v4 by <a href=\"https://github.com/cclauss\"><code>@​cclauss</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/729\">actions/setup-python#729</a></li>\n<li>Examples now use checkout@v4 by <a href=\"https://github.com/simonw\"><code>@​simonw</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/738\">actions/setup-python#738</a></li>\n<li>Update actions/checkout to v4 by <a href=\"https://github.com/dmitry-shibanov\"><code>@​dmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/761\">actions/setup-python#761</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/FerranPares\"><code>@​FerranPares</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/628\">actions/setup-python#628</a></li>\n<li><a href=\"https://github.com/timfel\"><code>@​timfel</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/694\">actions/setup-python#694</a></li>\n<li><a href=\"https://github.com/jeffwidman\"><code>@​jeffwidman</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/724\">actions/setup-python#724</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.8.0\">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>\n<h2>v4.7.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/702\">actions/setup-python#702</a></li>\n<li>Add range validation for toml files by <a href=\"https://github.com/dmitry-shibanov\"><code>@​dmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/726\">actions/setup-python#726</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.7.1\">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>\n<h2>v4.7.0</h2>\n<p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=\"https://redirect.github.com/actions/setup-python/pull/669\">actions/setup-python#669</a>).</p>\n<pre lang=\"yaml\"><code>      - name: Setup Python\n        uses: actions/setup-python@v4\n&lt;/tr&gt;&lt;/table&gt; \n</code></pre>\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c\"><code>0a5c615</code></a> Update action to node20 (<a href=\"https://redirect.github.com/actions/setup-python/issues/772\">#772</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/0ae58361cdfd39e2950bed97a1e26aa20c3d8955\"><code>0ae5836</code></a> Add example of GraalPy to docs (<a href=\"https://redirect.github.com/actions/setup-python/issues/773\">#773</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/b64ffcaf5b410884ad320a9cfac8866006a109aa\"><code>b64ffca</code></a> update actions/checkout to v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/761\">#761</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/8d2896179abf658742de432b3f203d2c2d86a587\"><code>8d28961</code></a> Examples now use checkout@v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/738\">#738</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/7bc6abb01e0555719edc2dbca70a2fde309e5e56\"><code>7bc6abb</code></a> advanced-usage.md: Encourage the use actions/checkout@v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/729\">#729</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/e8111cec9d3dc15220d8a3b638f08419f57b906a\"><code>e8111ce</code></a> Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 (<a href=\"https://redirect.github.com/actions/setup-python/issues/743\">#743</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/a00ea43da65e7c04d2bdae58b3afecd77057eb9e\"><code>a00ea43</code></a> add fix for graalpy ci (<a href=\"https://redirect.github.com/actions/setup-python/issues/741\">#741</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/8635b1ccc5934e73ed3510980fd2e7790b85839b\"><code>8635b1c</code></a> Change deprecation comment to past tense (<a href=\"https://redirect.github.com/actions/setup-python/issues/723\">#723</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758\"><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=\"https://redirect.github.com/actions/setup-python/issues/724\">#724</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060\"><code>5f2af21</code></a> Add GraalPy support (<a href=\"https://redirect.github.com/actions/setup-python/issues/694\">#694</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/setup-python/compare/v4...v5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `psf/black` from 24.1.1 to 24.2.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/releases\">psf/black's releases</a>.</em></p>\n<blockquote>\n<h2>24.2.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fixed a bug where comments where mistakenly removed along with redundant parentheses\n(<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li>Move the <code>hug_parens_with_braces_and_square_brackets</code> feature to the unstable style\ndue to an outstanding crash and proposed formatting tweaks (<a href=\"https://redirect.github.com/psf/black/issues/4198\">#4198</a>)</li>\n<li>Fixed a bug where base expressions caused inconsistent formatting of ** in tenary\nexpression (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li>Checking for newline before adding one on docstring that is almost at the line limit\n(<a href=\"https://redirect.github.com/psf/black/issues/4185\">#4185</a>)</li>\n<li>Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>).</li>\n</ul>\n<h3>Configuration</h3>\n<ul>\n<li>Fix issue where <em>Black</em> would ignore input files in the presence of symlinks (<a href=\"https://redirect.github.com/psf/black/issues/4222\">#4222</a>)</li>\n<li><em>Black</em> now ignores <code>pyproject.toml</code> that is missing a <code>tool.black</code> section when\ndiscovering project root and configuration. Since <em>Black</em> continues to use version\ncontrol as an indicator of project root, this is expected to primarily change behavior\nfor users in a monorepo setup (desirably). If you wish to preserve previous behavior,\nsimply add an empty <code>[tool.black]</code> to the previously discovered <code>pyproject.toml</code>\n(<a href=\"https://redirect.github.com/psf/black/issues/4204\">#4204</a>)</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Black will swallow any <code>SyntaxWarning</code>s or <code>DeprecationWarning</code>s produced by the <code>ast</code>\nmodule when performing equivalence checks (<a href=\"https://redirect.github.com/psf/black/issues/4189\">#4189</a>)</li>\n</ul>\n<h3>Integrations</h3>\n<ul>\n<li>Add a JSONSchema and provide a validate-pyproject entry-point (<a href=\"https://redirect.github.com/psf/black/issues/4181\">#4181</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/blob/main/CHANGES.md\">psf/black's changelog</a>.</em></p>\n<blockquote>\n<h2>24.2.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fixed a bug where comments where mistakenly removed along with redundant parentheses\n(<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li>Move the <code>hug_parens_with_braces_and_square_brackets</code> feature to the unstable style\ndue to an outstanding crash and proposed formatting tweaks (<a href=\"https://redirect.github.com/psf/black/issues/4198\">#4198</a>)</li>\n<li>Fixed a bug where base expressions caused inconsistent formatting of ** in tenary\nexpression (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li>Checking for newline before adding one on docstring that is almost at the line limit\n(<a href=\"https://redirect.github.com/psf/black/issues/4185\">#4185</a>)</li>\n<li>Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>).</li>\n</ul>\n<h3>Configuration</h3>\n<ul>\n<li>Fix issue where <em>Black</em> would ignore input files in the presence of symlinks (<a href=\"https://redirect.github.com/psf/black/issues/4222\">#4222</a>)</li>\n<li><em>Black</em> now ignores <code>pyproject.toml</code> that is missing a <code>tool.black</code> section when\ndiscovering project root and configuration. Since <em>Black</em> continues to use version\ncontrol as an indicator of project root, this is expected to primarily change behavior\nfor users in a monorepo setup (desirably). If you wish to preserve previous behavior,\nsimply add an empty <code>[tool.black]</code> to the previously discovered <code>pyproject.toml</code>\n(<a href=\"https://redirect.github.com/psf/black/issues/4204\">#4204</a>)</li>\n</ul>\n<h3>Output</h3>\n<ul>\n<li>Black will swallow any <code>SyntaxWarning</code>s or <code>DeprecationWarning</code>s produced by the <code>ast</code>\nmodule when performing equivalence checks (<a href=\"https://redirect.github.com/psf/black/issues/4189\">#4189</a>)</li>\n</ul>\n<h3>Integrations</h3>\n<ul>\n<li>Add a JSONSchema and provide a validate-pyproject entry-point (<a href=\"https://redirect.github.com/psf/black/issues/4181\">#4181</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/black/commit/6fdf8a4af28071ed1d079c01122b34c5d587207a\"><code>6fdf8a4</code></a> Prepare release 24.2.0 (<a href=\"https://redirect.github.com/psf/black/issues/4226\">#4226</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/8af439407c051d55f3221cc93795d20bd9af49c9\"><code>8af4394</code></a> fix: Don't remove comments along with parens (<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/35e97769190d8c8fe94d9ea2d70d7d88b22a2642\"><code>35e9776</code></a> Bump pre-commit/action from 3.0.0 to 3.0.1 (<a href=\"https://redirect.github.com/psf/black/issues/4225\">#4225</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/23dfc5b2c3b0694a8c27e58e28439591976aaf94\"><code>23dfc5b</code></a> Fix ignoring input files for symlink reasons (<a href=\"https://redirect.github.com/psf/black/issues/4222\">#4222</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/a20100395cf6179a81289452efad1d8e72b19682\"><code>a201003</code></a> Simplify check for symlinks that resolve outside root (<a href=\"https://redirect.github.com/psf/black/issues/4221\">#4221</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/dab37a6a1117d690d683121edc4d7c8fb8dd75a7\"><code>dab37a6</code></a> Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/32230e6f5c4bc6bb5c469451e15f3f54d9884b51\"><code>32230e6</code></a> fix: bug where the doublestar operation had inconsistent formatting. (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/7edb50f5a0afc56bb648dc14640ced144366b43a\"><code>7edb50f</code></a> fix: additional newline added to docstring when the previous line length is l...</li>\n<li><a href=\"https://github.com/psf/black/commit/3e80de3447dee272e9977ab58b1560a669b7b848\"><code>3e80de3</code></a> Bump furo from 2023.9.10 to 2024.1.29 in /docs (<a href=\"https://redirect.github.com/psf/black/issues/4211\">#4211</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/a08b480a2f39fb4fc7b210d8b450e33d3879f77d\"><code>a08b480</code></a> Bump pypa/cibuildwheel from 2.16.4 to 2.16.5 (<a href=\"https://redirect.github.com/psf/black/issues/4212\">#4212</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/black/compare/24.1.1...24.2.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `github/codeql-action` from 2 to 3\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/github/codeql-action/releases\">github/codeql-action's releases</a>.</em></p>\n<blockquote>\n<h2>CodeQL Bundle v2.16.2</h2>\n<p>Bundles CodeQL CLI v2.16.2</p>\n<ul>\n<li>(<a href=\"https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.2\">release</a>)</li>\n</ul>\n<p>Includes the following CodeQL language packs from <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2\"><code>github/codeql@codeql-cli/v2.16.2</code></a>:</p>\n<ul>\n<li><code>codeql/cpp-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/src\">source</a>)</li>\n<li><code>codeql/cpp-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/cpp/ql/lib\">source</a>)</li>\n<li><code>codeql/csharp-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/src\">source</a>)</li>\n<li><code>codeql/csharp-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/csharp/ql/lib\">source</a>)</li>\n<li><code>codeql/go-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/go/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/go/ql/src\">source</a>)</li>\n<li><code>codeql/go-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/go/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/go/ql/lib\">source</a>)</li>\n<li><code>codeql/java-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/java/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/java/ql/src\">source</a>)</li>\n<li><code>codeql/java-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/java/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/java/ql/lib\">source</a>)</li>\n<li><code>codeql/javascript-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/javascript/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/javascript/ql/src\">source</a>)</li>\n<li><code>codeql/javascript-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/javascript/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/javascript/ql/lib\">source</a>)</li>\n<li><code>codeql/python-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/python/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/python/ql/src\">source</a>)</li>\n<li><code>codeql/python-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/python/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/python/ql/lib\">source</a>)</li>\n<li><code>codeql/ruby-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/src\">source</a>)</li>\n<li><code>codeql/ruby-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/ruby/ql/lib\">source</a>)</li>\n<li><code>codeql/swift-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/src\">source</a>)</li>\n<li><code>codeql/swift-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.2/swift/ql/lib\">source</a>)</li>\n</ul>\n<h2>CodeQL Bundle v2.16.1</h2>\n<p>Bundles CodeQL CLI v2.16.1</p>\n<ul>\n<li>(<a href=\"https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.1\">release</a>)</li>\n</ul>\n<p>Includes the following CodeQL language packs from <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1\"><code>github/codeql@codeql-cli/v2.16.1</code></a>:</p>\n<ul>\n<li><code>codeql/cpp-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/src\">source</a>)</li>\n<li><code>codeql/cpp-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/cpp/ql/lib\">source</a>)</li>\n<li><code>codeql/csharp-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/csharp/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/csharp/ql/src\">source</a>)</li>\n<li><code>codeql/csharp-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/csharp/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/csharp/ql/lib\">source</a>)</li>\n<li><code>codeql/go-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/go/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/go/ql/src\">source</a>)</li>\n<li><code>codeql/go-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/go/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/go/ql/lib\">source</a>)</li>\n<li><code>codeql/java-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/java/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/java/ql/src\">source</a>)</li>\n<li><code>codeql/java-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/java/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/java/ql/lib\">source</a>)</li>\n<li><code>codeql/javascript-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/javascript/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/javascript/ql/src\">source</a>)</li>\n<li><code>codeql/javascript-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/javascript/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/javascript/ql/lib\">source</a>)</li>\n<li><code>codeql/python-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/python/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/python/ql/src\">source</a>)</li>\n<li><code>codeql/python-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/python/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/python/ql/lib\">source</a>)</li>\n<li><code>codeql/ruby-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/ruby/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/ruby/ql/src\">source</a>)</li>\n<li><code>codeql/ruby-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/ruby/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/ruby/ql/lib\">source</a>)</li>\n<li><code>codeql/swift-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/swift/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/swift/ql/src\">source</a>)</li>\n<li><code>codeql/swift-all</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/swift/ql/lib/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.1/swift/ql/lib\">source</a>)</li>\n</ul>\n<h2>CodeQL Bundle v2.16.0</h2>\n<p>Bundles CodeQL CLI v2.16.0</p>\n<ul>\n<li>(<a href=\"https://github.com/github/codeql-cli-binaries/blob/HEAD/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql-cli-binaries/releases/tag/v2.16.0\">release</a>)</li>\n</ul>\n<p>Includes the following CodeQL language packs from <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.0\"><code>github/codeql@codeql-cli/v2.16.0</code></a>:</p>\n<ul>\n<li><code>codeql/cpp-queries</code> (<a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.0/cpp/ql/src/CHANGELOG.md\">changelog</a>, <a href=\"https://github.com/github/codeql/tree/codeql-cli/v2.16.0/cpp/ql/src\">source</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/github/codeql-action/blob/main/CHANGELOG.md\">github/codeql-action's changelog</a>.</em></p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/github/codeql-action/commit/1d4866b058d22bfd3886703c302daa1d9db6dba1\"><code>1d4866b</code></a> Only run custom <code>checkout_path</code> tests against a single CodeQL version</li>\n<li><a href=\"https://github.com/github/codeql-action/commit/da89f3f4cfef781592a672ecabc7f79e2b0ff723\"><code>da89f3f</code></a> Update checked-in dependencies</li>\n<li><a href=\"https://github.com/github/codeql-action/commit/921adb69c6a2e54da4d90880be21877927783420\"><code>921adb6</code></a> Update changelog and version after v3.24.0</li>\n<li><a href=\"https://github.com/github/codeql-action/commit/e8893c57a1f3a2b659b6b55564fdfdbbd2982911\"><code>e8893c5</code></a> Merge pull request <a href=\"https://redirect.github.com/github/codeql-action/issues/2113\">#2113</a> from github/update-v3.24.0-2db032717</li>\n<li><a href=\"https://github.com/github/codeql-action/commit/78d6c8e84d016cf4acb354a3303db8635054030f\"><code>78d6c8e</code></a> Update changelog for v3.24.0</li>\n<li><a href=\"https://github.com/github/codeql-action/commit/2db03271718eb704357b7bbf29ef6876a898f966\"><code>2db0327</code></a> Merge pull request <a href=\"https://redirect.github.com/github/codeql-action/issues/2112\">#2112</a> from github/henrymercer/status-report-handle-disk-fa...</li>\n<li><a href=\"https://github.com/github/codeql-action/commit/f9dea84e297d93b380c8e1fbee3b726ae2f9a0d1\"><code>f9dea84</code></a> Status report: Handle failures determining disk usage</li>\n<li>See full diff in <a href=\"https://github.com/github/codeql-action/compare/v2...v3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `pypa/gh-action-pip-audit` from 1.0.0 to 1.0.8\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pypa/gh-action-pip-audit/releases\">pypa/gh-action-pip-audit's releases</a>.</em></p>\n<blockquote>\n<h2>v1.0.8</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Remove pin on requests (fixes <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/issues/41\">#41</a>) by <a href=\"https://github.com/Alexerson\"><code>@​Alexerson</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/42\">pypa/gh-action-pip-audit#42</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/Alexerson\"><code>@​Alexerson</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/42\">pypa/gh-action-pip-audit#42</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/pypa/gh-action-pip-audit/compare/v1.0.7...v1.0.8\">https://github.com/pypa/gh-action-pip-audit/compare/v1.0.7...v1.0.8</a></p>\n<h2>v1.0.7</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>action: replace <code>internal-be-careful-debug</code> by <a href=\"https://github.com/tnytown\"><code>@​tnytown</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/36\">pypa/gh-action-pip-audit#36</a></li>\n<li>New issue templates by <a href=\"https://github.com/tnytown\"><code>@​tnytown</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/37\">pypa/gh-action-pip-audit#37</a></li>\n<li>requirements: constrain requests below 2.30 by <a href=\"https://github.com/woodruffw\"><code>@​woodruffw</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/39\">pypa/gh-action-pip-audit#39</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/pypa/gh-action-pip-audit/compare/v1.0.6...v1.0.7\">https://github.com/pypa/gh-action-pip-audit/compare/v1.0.6...v1.0.7</a></p>\n<h2>Release 1.0.6</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Check that output file exists before opening by <a href=\"https://github.com/tnytown\"><code>@​tnytown</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/33\">pypa/gh-action-pip-audit#33</a></li>\n<li>README: prep 1.0.6 by <a href=\"https://github.com/woodruffw\"><code>@​woodruffw</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/34\">pypa/gh-action-pip-audit#34</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/tnytown\"><code>@​tnytown</code></a> made their first contribution in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/33\">pypa/gh-action-pip-audit#33</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/pypa/gh-action-pip-audit/compare/v1.0.5...v1.0.6\">https://github.com/pypa/gh-action-pip-audit/compare/v1.0.5...v1.0.6</a></p>\n<h2>Release 1.0.5</h2>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/pypa/gh-action-pip-audit/compare/v1.0.4...v1.0.5\">https://github.com/pypa/gh-action-pip-audit/compare/v1.0.4...v1.0.5</a></p>\n<h2>Release 1.0.4</h2>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/pypa/gh-action-pip-audit/compare/v1.0.3...v1.0.4\">https://github.com/pypa/gh-action-pip-audit/compare/v1.0.3...v1.0.4</a></p>\n<h2>Release 1.0.3</h2>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/pypa/gh-action-pip-audit/compare/v1.0.2...v1.0.3\">https://github.com/pypa/gh-action-pip-audit/compare/v1.0.2...v1.0.3</a></p>\n<h2>Release 1.0.2</h2>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/pypa/gh-action-pip-audit/compare/v1.0.1...v1.0.2\">https://github.com/pypa/gh-action-pip-audit/compare/v1.0.1...v1.0.2</a></p>\n<h2>Release 1.0.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>action, templates: switch to a template by <a href=\"https://github.com/woodruffw\"><code>@​woodruffw</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/24\">pypa/gh-action-pip-audit#24</a></li>\n<li>action.py: Remove unused line by <a href=\"https://github.com/di\"><code>@​di</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/25\">pypa/gh-action-pip-audit#25</a></li>\n<li>README: update slugs from trailofbits to pypa by <a href=\"https://github.com/woodruffw\"><code>@​woodruffw</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/26\">pypa/gh-action-pip-audit#26</a></li>\n<li>requirements: pip-audit 2.4.4 by <a href=\"https://github.com/woodruffw\"><code>@​woodruffw</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/27\">pypa/gh-action-pip-audit#27</a></li>\n<li>Add FAQ entry for pipenv support by <a href=\"https://github.com/ameily\"><code>@​ameily</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/28\">pypa/gh-action-pip-audit#28</a></li>\n<li>action: remove deprecated use of set-output by <a href=\"https://github.com/woodruffw\"><code>@​woodruffw</code></a> in <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/pull/29\">pypa/gh-action-pip-audit#29</a></li>\n</ul>\n<h2>New Contributors</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pypa/gh-action-pip-audit/commit/d499194be74aeb3bc7dbed3a224a87e1831132c7\"><code>d499194</code></a> README: prep 1.0.8</li>\n<li><a href=\"https://github.com/pypa/gh-action-pip-audit/commit/cf52d21d8328924292f7d35b638030c3ed537851\"><code>cf52d21</code></a> Remove pin on requests (fixes <a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/issues/41\">#41</a>) (<a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/issues/42\">#42</a>)</li>\n<li><a href=\"https://github.com/pypa/gh-action-pip-audit/commit/3ac8fed01c7b32ab70210f182e557d4cb8c45fec\"><code>3ac8fed</code></a> README: prep 1.0.7 (<a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/issues/40\">#40</a>)</li>\n<li><a href=\"https://github.com/pypa/gh-action-pip-audit/commit/f7e969538ff23ab335e58d66dbb213fd632e1136\"><code>f7e9695</code></a> requirements: constrain requests below 2.30 (<a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/issues/39\">#39</a>)</li>\n<li><a href=\"https://github.com/pypa/gh-action-pip-audit/commit/28aa5e1be685d616b82938ed1fc82c8c12573d25\"><code>28aa5e1</code></a> New issue templates (<a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/issues/37\">#37</a>)</li>\n<li><a href=\"https://github.com/pypa/gh-action-pip-audit/commit/1abec09c8d05907edafb747242288fb537fa0629\"><code>1abec09</code></a> action: replace <code>internal-be-careful-debug</code> (<a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/issues/36\">#36</a>)</li>\n<li><a href=\"https://github.com/pypa/gh-action-pip-audit/commit/75edeacda5c87f955b25c88b8582b10b9cd1ebc5\"><code>75edeac</code></a> README: prep 1.0.6 (<a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/issues/34\">#34</a>)</li>\n<li><a href=\"https://github.com/pypa/gh-action-pip-audit/commit/666b1b8831280710b2ed6b0105307a43302eadfb\"><code>666b1b8</code></a> Check that output file exists before opening (<a href=\"https://redirect.github.com/pypa/gh-action-pip-audit/issues/33\">#33</a>)</li>\n<li><a href=\"https://github.com/pypa/gh-action-pip-audit/commit/9075e938de7d8a1c24076730a0c7644cf934826c\"><code>9075e93</code></a> README: prep 1.0.5</li>\n<li><a href=\"https://github.com/pypa/gh-action-pip-audit/commit/0007f08635e5ff23e4aec049a3e9b6e597e9822e\"><code>0007f08</code></a> requirements: pip-audit &gt;= 2.4.13</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pypa/gh-action-pip-audit/compare/v1.0.0...v1.0.8\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `actions/cache` from 3 to 4\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/releases\">actions/cache's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update action to node20 by <a href=\"https://github.com/takost\"><code>@​takost</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1284\">actions/cache#1284</a></li>\n<li>feat: save-always flag by <a href=\"https://github.com/to-s\"><code>@​to-s</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1242\">actions/cache#1242</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@​takost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1284\">actions/cache#1284</a></li>\n<li><a href=\"https://github.com/to-s\"><code>@​to-s</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1242\">actions/cache#1242</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v4.0.0\">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>\n<h2>v3.3.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Cache v3.3.3 by <a href=\"https://github.com/robherley\"><code>@​robherley</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1302\">actions/cache#1302</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/robherley\"><code>@​robherley</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1302\">actions/cache#1302</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.3\">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>\n<h2>v3.3.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fixed readme with new segment timeout values by <a href=\"https://github.com/kotewar\"><code>@​kotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1133\">actions/cache#1133</a></li>\n<li>Readme fixes by <a href=\"https://github.com/kotewar\"><code>@​kotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1134\">actions/cache#1134</a></li>\n<li>Updated description of the lookup-only input for main action by <a href=\"https://github.com/kotewar\"><code>@​kotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1130\">actions/cache#1130</a></li>\n<li>Change two new actions mention as quoted text by <a href=\"https://github.com/bishal-pdMSFT\"><code>@​bishal-pdMSFT</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1131\">actions/cache#1131</a></li>\n<li>Update Cross-OS Caching tips by <a href=\"https://github.com/pdotl\"><code>@​pdotl</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1122\">actions/cache#1122</a></li>\n<li>Bazel example (Take <a href=\"https://redirect.github.com/actions/cache/issues/2\">#2</a>️⃣) by <a href=\"https://github.com/vorburger\"><code>@​vorburger</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1132\">actions/cache#1132</a></li>\n<li>Remove actions to add new PRs and issues to a project board by <a href=\"https://github.com/jorendorff\"><code>@​jorendorff</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1187\">actions/cache#1187</a></li>\n<li>Consume latest toolkit and fix dangling promise bug by <a href=\"https://github.com/chkimes\"><code>@​chkimes</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1217\">actions/cache#1217</a></li>\n<li>Bump action version to 3.3.2 by <a href=\"https://github.com/bethanyj28\"><code>@​bethanyj28</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1236\">actions/cache#1236</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/vorburger\"><code>@​vorburger</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1132\">actions/cache#1132</a></li>\n<li><a href=\"https://github.com/jorendorff\"><code>@​jorendorff</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1187\">actions/cache#1187</a></li>\n<li><a href=\"https://github.com/chkimes\"><code>@​chkimes</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1217\">actions/cache#1217</a></li>\n<li><a href=\"https://github.com/bethanyj28\"><code>@​bethanyj28</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1236\">actions/cache#1236</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.2\">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>\n<h2>v3.3.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=\"https://github.com/kotewar\"><code>@​kotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1129\">actions/cache#1129</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.1\">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>\n<h2>v3.3.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bug: Permission is missing in cache delete example by <a href=\"https://github.com/kotokaze\"><code>@​kotokaze</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1123\">actions/cache#1123</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/blob/main/RELEASES.md\">actions/cache's changelog</a>.</em></p>\n<blockquote>\n<h1>Releases</h1>\n<h3>3.0.0</h3>\n<ul>\n<li>Updated minimum runner version support from node 12 -&gt; node 16</li>\n</ul>\n<h3>3.0.1</h3>\n<ul>\n<li>Added support for caching from GHES 3.5.</li>\n<li>Fixed download issue for files &gt; 2GB during restore.</li>\n</ul>\n<h3>3.0.2</h3>\n<ul>\n<li>Added support for dynamic cache size cap on GHES.</li>\n</ul>\n<h3>3.0.3</h3>\n<ul>\n<li>Fixed avoiding empty cache save when no files are available for caching. (<a href=\"https://redirect.github.com/actions/cache/issues/624\">issue</a>)</li>\n</ul>\n<h3>3.0.4</h3>\n<ul>\n<li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=\"https://redirect.github.com/actions/cache/issues/689\">issue</a>)</li>\n</ul>\n<h3>3.0.5</h3>\n<ul>\n<li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=\"https://redirect.github.com/actions/cache/pull/834\">PR</a>)</li>\n</ul>\n<h3>3.0.6</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/809\">#809</a> - zstd -d: no such file or directory error</li>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/833\">#833</a> - cache doesn't work with github workspace directory</li>\n</ul>\n<h3>3.0.7</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/810\">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>\n</ul>\n<h3>3.0.8</h3>\n<ul>\n<li>Fix zstd not working for windows on gnu tar in issues <a href=\"https://redirect.github.com/actions/cache/issues/888\">#888</a> and <a href=\"https://redirect.github.com/actions/cache/issues/891\">#891</a>.</li>\n<li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MINS</code>. Default is 60 minutes.</li>\n</ul>\n<h3>3.0.9</h3>\n<ul>\n<li>Enhanced the warning message for cache unavailablity in case of GHES.</li>\n</ul>\n<h3>3.0.10</h3>\n<ul>\n<li>Fix a bug with sorting inputs.</li>\n<li>Update definition for restore-keys in README.md</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2\"><code>13aacd8</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1242\">#1242</a> from to-s/main</li>\n<li><a href=\"https://github.com/actions/cache/commit/53b35c543921fe2e8b288765ff817de9de8d906f\"><code>53b35c5</code></a> Merge branch 'main' into main</li>\n<li><a href=\"https://github.com/actions/cache/commit/65b8989fab3bb394817bdb845a453dff480c2b51\"><code>65b8989</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1284\">#1284</a> from takost/update-to-node-20</li>\n<li><a href=\"https://github.com/actions/cache/commit/d0be34d54485f31ca2ccbe66e6ea3d96544a807b\"><code>d0be34d</code></a> Fix dist</li>\n<li><a href=\"https://github.com/actions/cache/commit/66cf064d47313d2cccf392d01bd10925da2bd072\"><code>66cf064</code></a> Merge branch 'main' into update-to-node-20</li>\n<li><a href=\"https://github.com/actions/cache/commit/1326563738ddb735c5f2ce85cba8c79f33b728cd\"><code>1326563</code></a> Merge branch 'main' into main</li>\n<li><a href=\"https://github.com/actions/cache/commit/e71876755e268d6cc25a5d3e3c46ae447e35290a\"><code>e718767</code></a> Fix format</li>\n<li><a href=\"https://github.com/actions/cache/commit/01229828ffa049a8dee4db27bcb23ed33f2b451f\"><code>0122982</code></a> Apply workaround for earlyExit</li>\n<li><a href=\"https://github.com/actions/cache/commit/3185ecfd6135856ca6d904ae032cff4f39b8b365\"><code>3185ecf</code></a> Update &quot;only-&quot; actions to node20</li>\n<li><a href=\"https://github.com/actions/cache/commit/25618a0a675e8447e5ffc8ed9b7ddb2aaf927f65\"><code>25618a0</code></a> Bump version</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/cache/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `docker/setup-buildx-action` from 2 to 3\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/docker/setup-buildx-action/releases\">docker/setup-buildx-action's releases</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<ul>\n<li>Node 20 as default runtime (requires <a href=\"https://github.com/actions/runner/releases/tag/v2.308.0\">Actions Runner v2.308.0</a> or later) by <a href=\"https://github.com/crazy-max\"><code>@​crazy-max</code></a> in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/264\">docker/setup-buildx-action#264</a></li>\n<li>Bump <code>@​actions/core</code> from 1.10.0 to 1.10.1 in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/267\">docker/setup-buildx-action#267</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/docker/setup-buildx-action/compare/v2.10.0...v3.0.0\">https://github.com/docker/setup-buildx-action/compare/v2.10.0...v3.0.0</a></p>\n<h2>v2.10.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump <code>@​docker/actions-toolkit</code> from 0.7.1 to 0.10.0 by <a href=\"https://github.com/crazy-max\"><code>@​crazy-max</code></a> in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/258\">docker/setup-buildx-action#258</a></li>\n<li>Bump word-wrap from 1.2.3 to 1.2.5 in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/253\">docker/setup-buildx-action#253</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/docker/setup-buildx-action/compare/v2.9.1...v2.10.0\">https://github.com/docker/setup-buildx-action/compare/v2.9.1...v2.10.0</a></p>\n<h2>v2.9.1</h2>\n<ul>\n<li>Bump <code>@​docker/actions-toolkit</code> from 0.7.0 to 0.7.1 in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/248\">docker/setup-buildx-action#248</a>\n<ul>\n<li>Fixes an issue where building Buildx does not match the local platform (<a href=\"https://redirect.github.com/docker/actions-toolkit/pull/135\">docker/actions-toolkit#135</a>)</li>\n</ul>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/docker/setup-buildx-action/compare/v2.9.0...v2.9.1\">https://github.com/docker/setup-buildx-action/compare/v2.9.0...v2.9.1</a></p>\n<h2>v2.9.0</h2>\n<ul>\n<li>Bump <code>@​docker/actions-toolkit</code> from 0.6.0 to 0.7.0 in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/246\">docker/setup-buildx-action#246</a>\n<ul>\n<li>Adds support to cache Buildx binary to hosted tool cache and GHA cache backend</li>\n</ul>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/docker/setup-buildx-action/compare/v2.8.0...v2.9.0\">https://github.com/docker/setup-buildx-action/compare/v2.8.0...v2.9.0</a></p>\n<h2>v2.8.0</h2>\n<ul>\n<li>Only set specific flags for drivers supporting them by <a href=\"https://github.com/nicks\"><code>@​nicks</code></a> in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/241\">docker/setup-buildx-action#241</a></li>\n<li>Bump <code>@​docker/actions-toolkit</code> from 0.5.0 to 0.6.0 in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/242\">docker/setup-buildx-action#242</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/docker/setup-buildx-action/compare/v2.7.0...v2.8.0\">https://github.com/docker/setup-buildx-action/compare/v2.7.0...v2.8.0</a></p>\n<h2>v2.7.0</h2>\n<ul>\n<li>Bump <code>@​docker/actions-toolkit</code> from 0.3.0 to 0.5.0 in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/237\">docker/setup-buildx-action#237</a> <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/238\">docker/setup-buildx-action#238</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/docker/setup-buildx-action/compare/v2.6.0...v2.7.0\">https://github.com/docker/setup-buildx-action/compare/v2.6.0...v2.7.0</a></p>\n<h2>v2.6.0</h2>\n<ul>\n<li>Set node name for k8s driver when appending nodes by <a href=\"https://github.com/crazy-max\"><code>@​crazy-max</code></a> in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/219\">docker/setup-buildx-action#219</a></li>\n<li>Bump <code>@​docker/actions-toolkit</code> from 0.1.0-beta.18 to 0.3.0 in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/220\">docker/setup-buildx-action#220</a> <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/229\">docker/setup-buildx-action#229</a> <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/231\">docker/setup-buildx-action#231</a> <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/236\">docker/setup-buildx-action#236</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/docker/setup-buildx-action/compare/v2.5.0...v2.6.0\">https://github.com/docker/setup-buildx-action/compare/v2.5.0...v2.6.0</a></p>\n<h2>v2.5.0</h2>\n<ul>\n<li><code>cleanup</code> input to remove builder and temp files by <a href=\"https://github.com/crazy-max\"><code>@​crazy-max</code></a> in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/213\">docker/setup-buildx-action#213</a></li>\n<li>do not remove builder using the <code>docker</code> driver by <a href=\"https://github.com/crazy-max\"><code>@​crazy-max</code></a> in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/218\">docker/setup-buildx-action#218</a></li>\n<li>fix current context as builder name for <code>docker</code> driver by <a href=\"https://github.com/crazy-max\"><code>@​crazy-max</code></a> in <a href=\"https://redirect.github.com/docker/setup-buildx-action/pull/209\">docker/setup-buildx-action#209</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/docker/setup-buildx-action/compare/v2.4.1...v2.5.0\">https://github.com/docker/setup-buildx-action/compare/v2.4.1...v2.5.0</a></p>\n<h2>v2.4.1</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/docker/setup-buildx-action/commit/f95db51fddba0c2d1ec667646a06c2ce06100226\"><code>f95db51</code></a> Merge pull request <a href=\"https://redirect.github.com/docker/setup-buildx-action/issues/267\">#267</a> from docker/dependabot/npm_and_yarn/actions/core-1.10.1</li>\n<li><a href=\"https://github.com/docker/setup-buildx-action/commit/998a87c2c1933fe580ddf99d6f6f94a19c0f91b4\"><code>998a87c</code></a> chore: update generated content</li>\n<li><a href=\"https://github.com/docker/setup-buildx-action/commit/28bae5933655f85dce39ef1a90237c1942b8e2c6\"><code>28bae59</code></a> build(deps): bump <code>@​actions/core</code> from 1.10.0 to 1.10.1</li>\n<li><a href=\"https://github.com/docker/setup-buildx-action/commit/c2153417150d92671c82aea83a1583b776b52910\"><code>c215341</code></a> Merge pull request <a href=\"https://redirect.github.com/docker/setup-buildx-action/issues/264\">#264</a> from crazy-max/update-node20</li>\n<li><a href=\"https://github.com/docker/setup-buildx-action/commit/02e9319239595dc97a5705a2df905d0b2ea023bf\"><code>02e9319</code></a> chore: node 20 as default runtime</li>\n<li><a href=\"https://github.com/docker/setup-buildx-action/commit/5c9160effc4a5e931046bcd3a44677eb8eaa7b00\"><code>5c9160e</code></a> chore: update generated content</li>\n<li><a href=\"https://github.com/docker/setup-buildx-action/commit/1283140f57ede4d0e30355ef4cb25390eaee8204\"><code>1283140</code></a> chore: fix author in package.json</li>\n<li><a href=\"https://github.com/docker/setup-buildx-action/commit/c6afe06e4a92d0bf5b6f524c3564e64647d0b97d\"><code>c6afe06</code></a> vendor: bump <code>@​docker/actions-toolkit</code> from 0.10.0 to 0.12.0</li>\n<li><a href=\"https://github.com/docker/setup-buildx-action/commit/f35e0d5a040dd319f1a502de9e27a7f748c79fc5\"><code>f35e0d5</code></a> chore: update dev dependencies</li>\n<li><a href=\"https://github.com/docker/setup-buildx-action/commit/baeb468fb29686888d706e7200d0e311a4fee4b2\"><code>baeb468</code></a> dev: remove unneeded binaries</li>\n<li>Additional commits viewable in <a href=\"https://github.com/docker/setup-buildx-action/compare/v2...v3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `docker/login-action` from 2 to 3\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/docker/login-action/releases\">docker/login-action's releases</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<ul>\n<li>Node 20 as default runtime (requires <a href=\"https://github.com/actions/runner/releases/tag/v2.308.0\">Actions Runner v2.308.0</a> or later) by <a href=\"https://github.com/crazy-max\"><code>@​crazy-max</code></a> in <a href=\"https://redirect.github.com/docker/login-action/pull/593\">docker/login-action#593</a></li>\n<li>Bump <code>@​actions/core</code> from 1.10.0...\n\n_Description has been truncated_",
    "head_branch": "dependabot/github_actions/all-actions-1c7988bea9",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2784) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2784&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2784&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2784)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2784 from hyperledger/dependabot/github_actions/all-actions-1c7988bea9\n\nchore(deps): Bump the all-actions group with 10 updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cdeac254a19ac294788",
    "number": 2783,
    "body": "- Configure Dependabot to automatically maintain dependencies for GitHub Actions.\r\n  - Check for updates once a week.\r\n  - Group all updates into a single PR.",
    "head_branch": "add-dependabot-config",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2783) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2783&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2783&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2783)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2783 from WadeBarnes/add-dependabot-config\n\nAdd Dependabot configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cdfac254a19ac294789",
    "number": 2782,
    "body": "Opening for visibility. I'm still going to manually test more but the Integration tests are passing for endorsement and publishing revocations.\r\n\r\nOne area of confusion for me is what happens with the local wallet verse the ledger. Write now an endorsement transaction is created when the `update_revocation_list` is called with changes. Then the local wallet is updated. At the same time the endorsement manager receives the `114` event and notifies the anoncreds `RevocationListFinished` event handler. It checks if the wallet contains a record for the list via `rev_reg_def_id` and if it doesn't it creates the record. If it does then it assumes the record has been updated already and does nothing. \r\n\r\nI was trying some other stuff like deleting the record and creating a new one with a `wait` state but couldn't decide if this was necessary, or something we wanted to do.\r\n\r\nI deleted the `/anoncreds/revoke` and `/anoncreds/publish-revocation` endpoints and instead just have the `/revocation/revoke` and `/revocation/publish-revocation`. I thought this was appropriate because the revocation endpoint are all loaded for anoncreds specifically and the rest of the anoncreds endpoints are to do with creating objects. I changed the params for requesting a transaction manually to use the body options and updated the integration tests.",
    "head_branch": "anoncreds-endorsement-revoke",
    "is_a_fork": true,
    "comments": [
      "> I deleted the `/anoncreds/revoke` and `/anoncreds/publish-revocation` endpoints and instead just have the `/revocation/revoke` and `/revocation/publish-revocation`. I thought this was appropriate because the revocation endpoint are all loaded for anoncreds specifically and the rest of the anoncreds endpoints are to do with creating objects. I changed the params for requesting a transaction manually to use the body options and updated the integration tests.\r\n\r\nI think this happened when I did the original merge of the `anoncreds-rs` branch.  You're correct we should just have the endpoints in one place and it makes sense to be under the `/revocation` section.\r\n",
      "Overall looks good, is it ready to go or are you still working on it?\r\n",
      "My manual testing and integration testing has been good, so I think it's ready.\r\n\r\nThe last integration test run failed but I'm pretty sure it was a random unrelated fail.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2782) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2782&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2782&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2782)\n\n"
    ],
    "commit_messages": [
      "Anoncreds revoke and publish-revocations endorsement (#2782)\n\nSigned-off-by: jamshale <jamiehalebc@gmail.com>\r\nCo-authored-by: Ian Costanzo <ian@anon-solutions.ca>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce0ac254a19ac29478a",
    "number": 2775,
    "body": "Add rule `B006` to the linting config and implements it by creating empty objects in the functions when the parameter is None.\r\n\r\nDidn't add any of the other `B` linting options.",
    "head_branch": "feat/B006-rule",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2775) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2775&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2775&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2775)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2775 from jamshale/feat/B006-rule\n\nImplement B006 rule"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce1ac254a19ac29478b",
    "number": 2773,
    "body": "Upgrade pytest, now that the latest pytest-asyncio release supports pytest 8",
    "head_branch": "upgrade-pytest",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2773) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2773&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2773&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2773)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2773 from ff137/upgrade-pytest\n\n:arrow_up: Upgrade pytest to 8.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce2ac254a19ac29478c",
    "number": 2771,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n",
    "head_branch": "tweaks-for-docs-publishing",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2771) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2771&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2771&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2771)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2771 from swcurran/tweaks-for-docs-publishing\n\nTweaks to MD files to enable aca-py.org publishing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce3ac254a19ac29478d",
    "number": 2769,
    "body": "This is a test pull request greated for CI/CD vulnerability testing purposes.",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2769) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2769&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2769&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2769)\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce4ac254a19ac29478e",
    "number": 2765,
    "body": "This PR does a radical reorganization of the documents in the ACA-Py repository. The following is a summary of the changes:\r\n\r\n- Most Markdown files in the root have been moved to the docs folder, and organized into folders that match those used on the [https://aca-py.org](https://aca-py.org) -- demo, gettingStarted, testing, deploying, etc.\r\n- Expected files -- LICENSE, MAINTAINERS.md, README.md and the like were left in the root folder.\r\n- The MD files in the `demo` folder were moved to `docs/demo' and a new README.md file added pointing to those.\r\n- The previous Getting Started files were moved to the `docs/gettingStarted` folders.\r\n- A pass was done to change all the links found (in a manual pass...) to be relative links and to the new location of the files.\r\n- A pass was done to remove all of the MD lint warnings (other than spelling of ACA-Py/Aries/SSI terms).\r\n- Some cleanup was done to external references -- changing references from greenlight ledger to BCovrin test, eliminating some references to old demos, adding references to the Traction Tutorial.\r\n- New README.md files were needed -- such as in the root of the `docs` folder with pointers to guidance for maintaining both the ReadTheDocs documentation and the [https://aca-py.org](https://aca-py.org) documentation.\r\n- I've not done anything with the ELK Stack MD documents -- will think about what to do with those later (if anything).\r\n\r\nNot perfect, but I think it is close.\r\n\r\nIt is a lot of change. Would appreciate people browsing [my branch](https://github.com/swcurran/aries-cloudagent-python/tree/organize-docs) in the GitHub UI to scan for issues, and report them.  Important things to note are changes that need to be made before we merge this and more general updates that are overdue and needed.\r\n",
    "head_branch": "organize-docs",
    "is_a_fork": true,
    "comments": [
      "Not good that we have an integration test error when moving docs :-).\r\n\r\nThe error is from this test: ` features/0586-sign-transaction.feature:204  endorse a schema and cred def transaction, write to the ledger, issue and revoke a credential, with auto endorsing workflow -- @1.2 `\r\n\r\nNot sure if it is a timing issue or something else. Seems to be finding duplicate records. Perhaps someone could run this locally.  It is related to the Endorser, so perhaps updates in that area?",
      "> Not sure if it is a timing issue or something else. Seems to be finding duplicate records. Perhaps someone could run this locally. It is related to the Endorser, so perhaps updates in that area?\r\n\r\nI'm pretty sure this is an intermittently failing test, as other tests off of main are passing and I think I've seen it before. Re-running. If it fails again I'll look at it locally. \r\n\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2765) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2765&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2765&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2765)\n\n",
      "Turned on the VSCode link checker (who knew that wouldn't be on automatically!) and did a pass through all of the MDs again -- cleaned up links and all MD lint issues. Only thing left are the a few bare URLs (email addressess...) and the unlnown words that would be expected.  I think that clean up is now done.",
      "> > Not sure if it is a timing issue or something else. Seems to be finding duplicate records. Perhaps someone could run this locally. It is related to the Endorser, so perhaps updates in that area?\r\n> \r\n> I'm pretty sure this is an intermittently failing test, as other tests off of main are passing and I think I've seen it before. Re-running. If it fails again I'll look at it locally.\r\n\r\nI've noticed the occasional timing issue with the ledger.  I.e. the test registers a DID and then when it tries to record a schema it get an error that the DID isn't approved to update the ledger.  I think it's a node synchronization timing issue.",
      "I can’t believe y’all didn’t read every change in every file!!!  IMHO, we want to encourage people to use https://aca-py.org, so having a redirector page in the /demo folder is the right thing to do.  Understand your concerns, but at least they are all in one place — /docs/demo.\r\n\r\nThanks for the reviews!"
    ],
    "commit_messages": [
      "Merge pull request #2765 from swcurran/organize-docs\n\nReorganize the ACA-Py Documentation Files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce4ac254a19ac29478f",
    "number": 2764,
    "body": "Summary: \r\n⬆️ Upgrades pytest-asyncio to latest\r\n✅ fix some test's event loop scopes (also mark some tests requiring askar or bbs)\r\n🎉  resolves 2154 deprecation warnings\r\n___\r\nOriginal:\r\nReviewing test logs show that there are 2154 deprecation warnings coming from across 202 test files, each reporting:\r\n```sh\r\n  /home/runner/.cache/pypoetry/virtualenvs/aries-cloudagent-LQSjsNdA-py3.9/lib/python3.9/site-packages/pytest_asyncio/plugin.py:451: DeprecationWarning: pytest-asyncio detected an unclosed event loop when tearing down the event_loop\r\n  fixture: <_UnixSelectorEventLoop running=False closed=False debug=False>\r\n  pytest-asyncio will close the event loop for you, but future versions of the\r\n  library will no longer do so. In order to ensure compatibility with future\r\n  versions, please make sure that:\r\n      1. Any custom \"event_loop\" fixture properly closes the loop after yielding it\r\n      2. The scopes of your custom \"event_loop\" fixtures do not overlap\r\n      3. Your code does not modify the event loop in async fixtures or tests\r\n```\r\n\r\nThis indicates that the pytests are not configured correctly, or at least not in an up-to-date way.\r\n\r\nThese are the current test results after upgrading to the latest pytest-asyncio version\r\n```sh\r\nFAILED aries_cloudagent/revocation/models/tests/test_issuer_rev_reg_record.py::TestIssuerRevRegRecord::test_fix_ledger_entry - TypeError: the JSON object must be str, bytes or bytearray, not MagicMock\r\nFAILED aries_cloudagent/vc/vc_ld/tests/test_manager.py::test_issue - pyld.jsonld.JsonLdError: ('Could not expand input before compaction.',)\r\nFAILED aries_cloudagent/vc/vc_ld/tests/test_manager.py::test_issue_ed25519_2020 - pyld.jsonld.JsonLdError: ('Could not expand input before compaction.',)\r\nFAILED aries_cloudagent/vc/vc_ld/tests/test_manager.py::test_issue_bbs - TypeError: sequence item 1: expected a bytes-like object, MagicMock found\r\nFAILED aries_cloudagent/vc/vc_ld/tests/test_manager.py::test_store - pyld.jsonld.JsonLdError: ('Could not expand input before compaction.',)\r\nERROR aries_cloudagent/storage/vc_holder/tests/test_askar_vc_holder.py::TestAskarVCHolder::test_repr - TypeError: catching classes that do not inherit from BaseException is not allowed\r\nERROR aries_cloudagent/storage/vc_holder/tests/test_askar_vc_holder.py::TestAskarVCHolder::test_handle_parser_error - TypeError: catching classes that do not inherit from BaseException is not allowed\r\nERROR aries_cloudagent/storage/vc_holder/tests/test_askar_vc_holder.py::TestAskarVCHolder::test_sorting_vcrecord - TypeError: catching classes that do not inherit from BaseException is not allowed\r\nERROR aries_cloudagent/storage/vc_holder/tests/test_askar_vc_holder.py::TestAskarVCHolder::test_tag_query_valid_and_operator - TypeError: catching classes that do not inherit from BaseException is not allowed\r\nERROR aries_cloudagent/storage/vc_holder/tests/test_askar_vc_holder.py::TestAskarVCHolder::test_store_retrieve - TypeError: catching classes that do not inherit from BaseException is not allowed\r\nERROR aries_cloudagent/storage/vc_holder/tests/test_askar_vc_holder.py::TestAskarVCHolder::test_delete - TypeError: catching classes that do not inherit from BaseException is not allowed\r\nERROR aries_cloudagent/storage/vc_holder/tests/test_askar_vc_holder.py::TestAskarVCHolder::test_search - TypeError: catching classes that do not inherit from BaseException is not allowed\r\nERROR aries_cloudagent/storage/vc_holder/tests/test_askar_vc_holder.py::TestAskarVCHolder::test_tag_query - TypeError: catching classes that do not inherit from BaseException is not allowed\r\n5 failed, 4490 passed, 598 skipped, 6 xfailed, 238 warnings, 8 errors in 128.86s (0:02:08)\r\n```\r\n\r\nEdit: these new test failures/errors all come down to either pytest scope needing to be a higher level, or tests that should be marked \"to skip\" (askar or bbs)",
    "head_branch": "upgrade-pytest-asyncio",
    "is_a_fork": true,
    "comments": [
      "@dbluhm I know there are likely other priorities to focus on, but just want to raise this one as a potentially important fix, to get the test framework up to date before the 1.0.0 release. Technically just a \"nice to have\" to make test logs and other warnings easier to review\r\n\r\nI'm not so sure how to tackle this one yet, so I wanted to ask if you have any insight as to what might be necessary here. If it's not apparent then it's no worries, I'll take a deeper look once some bandwidth has freed up",
      "I agree that taking care of the deprecation warnings is valuable, if only to make developers lives easier. Thanks for your efforts on that front (with this and past PRs)! Yeah, unfortunately, off the rip, nothing immediately stands out to me as to what might be causing these test failures.",
      "@dbluhm all good! I think I got to the bottom of it... Some tests needed to be marked for skip, requiring bbs or askar. One test (test_fix_ledger) requires indy_credx to work, but I could re-mock it to work without skipping it. And some tests required higher event loop scope. Not sure why, but that solves it! So I think this successfully upgrades to latest pytest-asyncio release, and resolves ~2100 warnings <:-). Just 245 to go :joy: \r\n\r\nPlease review and see if it's all in order!",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2764) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2764&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2764&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2764)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2764 from ff137/upgrade-pytest-asyncio\n\n⬆️ Update pytest-asyncio to 0.23.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce5ac254a19ac294790",
    "number": 2763,
    "body": null,
    "head_branch": "upgrade-anoncred-rs",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2763) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2763&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2763&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2763)\n\n",
      "Thanks @jamshale — that should be it for a bit around AnonCreds RS.\r\n\r\n@ianco — FYI for the What’s Cookin’ team — this adds a small fix as mentioned by Timo."
    ],
    "commit_messages": [
      "Merge pull request #2763 from jamshale/upgrade-anoncred-rs\n\nUpgrade anoncreds to version 0.2.0-dev11"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce6ac254a19ac294791",
    "number": 2762,
    "body": "Wait for integration tests",
    "head_branch": "upgrade-anoncred-rs",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2762) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2762&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2762&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2762)\n\n",
      "Accidently created branch off of my forked main with had an extra commit and didn't realize."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce7ac254a19ac294792",
    "number": 2760,
    "body": "See issue #2000 \r\n\r\nThis update doesn't break anything ...  I haven't been able to duplicate the issue (by strategically inserting `sleep()` statements) so I can't 100% confirm that this fixes the issue, but I think it \"should\" ...\r\n",
    "head_branch": "fix/issue/2000",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2760) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2760&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2760&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2760)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2760 from ianco/fix/issue/2000\n\nMove emit events to profile and delay sending until after commit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce8ac254a19ac294793",
    "number": 2759,
    "body": "- add `VC_DI` in `CredFormat.Format`\r\n- lay out `VCDICredFormatHandler`\r\n- add new schema classes for cred offer and request\r\n- implement CredExRecordVCDI\r\n- fix schemas on cred_abstract and cred_request, improve on vc_di support on alice-faber demo\r\n\r\nnext step\r\n- fix unittests issues",
    "head_branch": "feat/w3c-implementation",
    "is_a_fork": true,
    "comments": [
      "@tra371 overall looks good.  If you need a hand with the test let me know, I can show you how to run everything locally to help track down some of the errors that are getting reported.  (I know the code is in progress but it's a good idea to keep on top of these.)\r\n\r\nAlso you can flag the PR as \"in draft\" if it's not yet ready to merge,",
      "> @tra371 overall looks good. If you need a hand with the test let me know, I can show you how to run everything locally to help track down some of the errors that are getting reported. (I know the code is in progress but it's a good idea to keep on top of these.)\r\n> \r\n> Also you can flag the PR as \"in draft\" if it's not yet ready to merge,\r\n\r\nthank you @ianco yes that would be great if you could give me a pointer on that.. let us discuss more on discord",
      "Looks like the faber demo was updated, can you update the faber doc (or even just add a comment to this PR) listing the parameters you use to run faber?\r\n\r\n(I tried this `./run_demo faber --wallet-type askar-anoncreds --cred-type vc_di` but it gives me an error `Exception: Invalid credential type:vc_di`)\r\n",
      "> Looks like the faber demo was updated, can you update the faber doc (or even just add a comment to this PR) listing the parameters you use to run faber?\r\n> \r\n> (I tried this `./run_demo faber --wallet-type askar-anoncreds --cred-type vc_di` but it gives me an error `Exception: Invalid credential type:vc_di`)\r\n\r\nok i'm on it",
      "When I run the demo (after making the changes locally that I mentioned in comments) I get the following error when trying to issue a credential from faber to alice:\r\n\r\n```\r\n$ AGENT_PORT_OVERRIDE=8010 ./run_demo faber --wallet-type askar-anoncreds --cred-type vc_di\r\n... (paste the invite from faber to alice, then select option \"1\" to issue the credential) ...\r\n[1/2/3/4/T/X] 1                                                                                                                                                                                                  \r\n\r\n#13 Issue credential offer to X\r\nFaber      | 2024-02-20 18:44:17,298 aries_cloudagent.admin.server ERROR Handler error with exception: Unprocessable Entity\r\nFaber      |Shutting down agent ...\r\n Faber      | Traceback (most recent call last):\r\n\r\nFaber      |   File \"/home/aries/.local/lib/python3.9/site-packages/webargs/asyncparser.py\", line 90, in parse\r\nFaber      |Faber      |     result = schema.load(parsed)\r\n Faber      |   File \"/home/aries/.local/lib/python3.9/site-packages/marshmallow/schema.py\", line 723, in load\r\n=================\r\nFaber      |     return self._do_load(\r\nFaber      |   File \"/home/aries/.local/lib/python3.9/site-packages/marshmallow/schema.py\", line 910, in _do_load\r\nFaber      |     raise exc\r\nFaber      | marshmallow.exceptions.ValidationError: {'filter': {'_schema': ['V20CredFilterSchema requires indy, ld_proof, or both']}}\r\nFaber      | \r\nFaber      | During handling of the above exception, another exception occurred:\r\nFaber      | \r\nFaber      | Traceback (most recent call last):\r\nFaber      |   File \"/home/aries/aries_cloudagent/admin/server.py\", line 181, in ready_middleware\r\nFaber      |     return await handler(request)\r\nFaber      |   File \"/home/aries/aries_cloudagent/admin/server.py\", line 218, in debug_middleware\r\nFaber      |     return await handler(request)\r\nFaber      |   File \"/home/aries/aries_cloudagent/admin/server.py\", line 451, in setup_context\r\nFaber      |     return await task\r\nFaber      |   File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\nFaber      |     yield self  # This tells Task to wait for completion.\r\nFaber      |   File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\nFaber      |     future.result()\r\nFaber      |   File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\nFaber      |     raise self._exception\r\nFaber      |   File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 256, in __step\r\nFaber      |     result = coro.send(None)\r\nFaber      |   File \"/home/aries/.local/lib/python3.9/site-packages/aiohttp_apispec/middlewares.py\", line 33, in validation_middleware\r\nFaber      |     data = await request.app[\"_apispec_parser\"].parse(\r\nFaber      |   File \"/home/aries/.local/lib/python3.9/site-packages/webargs/asyncparser.py\", line 94, in parse\r\nFaber      |     await self._on_validation_error(\r\nFaber      |   File \"/home/aries/.local/lib/python3.9/site-packages/webargs/asyncparser.py\", line 108, in _on_validation_error\r\nFaber      |     await error_handler(error, req, schema, error_status_code, error_headers)\r\nFaber      |   File \"/home/aries/.local/lib/python3.9/site-packages/webargs/aiohttpparser.py\", line 163, in handle_error\r\nFaber      |     raise error_class(\r\nFaber      | aiohttp.web_exceptions.HTTPUnprocessableEntity: Unprocessable Entity\r\nFaber      | \r\nFaber      | Shutting down\r\nFaber      | Exited with return code 0\r\n```\r\n\r\nI'll open a PR to your repo with the changes I made locally\r\n",
      "> I'll open a PR to your repo with the changes I made locally\r\n\r\nOK I can't open a PR to your repository for some reason, however you can see the changes I made locally (to get the DID and schema registration to work) here:\r\n\r\nhttps://github.com/ianco/aries-cloudagent-python/commit/dfebc768a0af1066661453692d0c7afe2dddf8dc\r\n",
      "> > I'll open a PR to your repo with the changes I made locally\r\n> \r\n> OK I can't open a PR to your repository for some reason, however you can see the changes I made locally (to get the DID and schema registration to work) here:\r\n> \r\n> [ianco@dfebc76](https://github.com/ianco/aries-cloudagent-python/commit/dfebc768a0af1066661453692d0c7afe2dddf8dc)\r\n\r\nthank you so much, @ianco.. i've applied these updates",
      "> > I'll open a PR to your repo with the changes I made locally\r\n> \r\n> OK I can't open a PR to your repository for some reason, however you can see the changes I made locally (to get the DID and schema registration to work) here:\r\n> \r\n> [ianco@dfebc76](https://github.com/ianco/aries-cloudagent-python/commit/dfebc768a0af1066661453692d0c7afe2dddf8dc)\r\n\r\n@sarthakvijayvergiya ^^ make sure we cleanly included this",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2759) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2759&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2759&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2759&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2759)\n\n",
      "hey guys, partly my fault for an old unsigned commit, but also the commit history here has gotten muddy.  I cherry-picked all our commits in our branch and replayed on main and squashed, made a new PR over here: https://github.com/hyperledger/aries-cloudagent-python/pull/2830\r\n\r\nI think it will be better to merge that one, otherwise rebases are going to be evil",
      "New version of PR is here:  https://github.com/hyperledger/aries-cloudagent-python/pull/2830\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ce9ac254a19ac294794",
    "number": 2758,
    "body": null,
    "head_branch": "upgrade-anoncreds-dev10",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2758) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2758&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2758&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2758)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2758 from jamshale/upgrade-anoncreds-dev10\n\nUpdate anoncreds to 0.2.0-dev10"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ceaac254a19ac294795",
    "number": 2756,
    "body": "Such as:\r\n- `DeprecationWarning: pkg_resources is deprecated as an API` \r\n  - ♻️  Refactored to use `importlib`\r\n- `RemovedInMarshmallow4Warning: Passing field metadata as keyword arguments is deprecated. Use the explicit `metadata=...` argument instead.` \r\n  - 🎨 description and example fields must be wrapped as metadata\r\n- various `DeprecationWarning`s\r\n  - fixed by :arrow_up: Upgrading `jsonpath-ng`, `Markdown`, and `rlp`\r\n\r\nLarge batch of pytest related warnings fixed in #2755 and #2764\r\n\r\nThe following warning is now ignored globally, as set in pyproject toml:\r\n```toml\r\n[tool.pytest.ini_options]\r\nfilterwarnings = [\r\n    'ignore:distutils Version classes are deprecated. Use packaging.version instead.:DeprecationWarning', # Ignore specific DeprecationWarning for old packages using distutils version class\r\n]\r\n```\r\n\r\nThis is because quite a few external dependencies still use the old way of reading versions.\r\n\r\nAlso, test_admin_server was the primary source of other warnings, thanks to packages: apispec, aiohttp_apispec, and aiohttp_cors. We're on older versions for those packages (only the _cors one seems to not be maintained anymore), and they either raise warnings related to distutils or Marshmallow, or they complain about \"NotAppKeyWarning: It is recommended to use web.AppKey instances for keys.\". I tried to solve this latter warning, but couldn't quite figure it out. I think it's so minor it's fine to just ignore.\r\n\r\nSo, you'll notice I added warning ignore conditions to test_admin_server as well. And ... that seems to solve every single warning!\r\n\r\nPR test output:\r\n```sh\r\n 4836 passed, 290 skipped, 6 xfailed in 205.33s (0:03:25)\r\n```\r\nNo more warnings! :tada:",
    "head_branch": "fix-deprecation-warnings",
    "is_a_fork": true,
    "comments": [
      "Some people just want to watch the world burn, and they merge 2500 deprecation warnings into main.  🔥 \r\nSome people have too much time on their hands, and they clean up after them. ☯️",
      "@dbluhm I've added the following to the pyproject.toml:\r\n```toml\r\n[tool.pytest.ini_options]\r\nfilterwarnings = [\r\n    'ignore:distutils Version classes are deprecated. Use packaging.version instead.:DeprecationWarning', # Ignore specific DeprecationWarning for old packages using distutils version class\r\n]\r\n```\r\n\r\nThis specifically ignores warning related to the old way of reading versions, used in some old external packages.\r\n\r\nAlso, `test_admin_server` was the primary source of other warnings, thanks to packages: `apispec`, `aiohttp_apispec`, and `aiohttp_cors`. We're on older versions for those packages (only the _cors one seems to not be maintained anymore), and they either raise warnings related to `distutils` or Marshmallow, or they complain about `\"NotAppKeyWarning: It is recommended to use web.AppKey instances for keys.\"`. I tried to solve this latter warning, but couldn't quite figure it out. I think it's so minor it's fine to just ignore. \r\n\r\nSo, you'll notice I added warning ignore conditions to `test_admin_server` as well. And ... that seems to solve every single warning!\r\n\r\nPR test output:\r\n```sh\r\n 4836 passed, 290 skipped, 6 xfailed in 205.33s (0:03:25)\r\n```\r\nNo warnings!\r\n\r\nIt's now optional to raise errors for any extra warnings that come up -- in which case they will have to be solved, or explicitly ignored as well. If we opt for this, to raise error on warnings, then I can remove that workflow edit which explicitly errors on coroutine not awaited. I think that's preferable, but all contributors will have to be on the same page, that warnings must now be solved or ignored. Let me know what you think!",
      "> No warnings!\r\n> \r\n> It's now optional to raise errors for any extra warnings that come up -- in which case they will have to be solved, or explicitly ignored as well. If we opt for this, to raise error on warnings, then I can remove that workflow edit which explicitly errors on coroutine not awaited. I think that's preferable, but all contributors will have to be on the same page, that warnings must now be solved or ignored. Let me know what you think!\r\n\r\nNice! I agree, failing on new warnings seems preferable to checks for specific warnings. We will have the maintainers meeting tomorrow. I suspect there will be little controversy given that these sorts of warnings can hide test failures but I will bring this up on that call to get everyone on the same page.\r\n\r\ncc @swcurran ",
      "@dbluhm awesome - I'll add the \"error on warning\" option in the meantime. Can review after the aca-pug meeting :+1: ",
      "Note: when I test locally, there's some warnings that raise errors, even though the warning was not logged previously:\r\n\r\nRunning with pytest 7.4, it's a `pluggy.PluggyTeardownRaisedWarning: A plugin raised an exception during an old-style hookwrapper teardown.`\r\nWith pytest 8, it's a `pytest.PytestUnraisableExceptionWarning`.\r\n\r\nThere's about 30 such errors... Very strange.\r\n\r\nWhen I run without the \"error on warning\" config, then it doesn't print any warnings. So it seems there are some test teardown issues which are being absorbed, and they manifest when the error config is active.\r\n\r\nI'll see what I can figure out, but may be some extra steps required to properly add the \"error on warning\" config.\r\n\r\nEdit: \r\n>  Pluggy 1.4.0 (just released) now warns about old-style hook wrappers ... This breaks any CI that treats warnings as errors.\r\n\r\nhttps://github.com/matplotlib/pytest-mpl/issues/216#issuecomment-1908648037_",
      "Not a pretty solution, but I can just ignore the PluggyTeardownRaisedWarning and PytestUnraisableExceptionWarning.\r\n\r\nInstead, I'll see if I can figure out what's wrong with the teardown logic, e.g.:\r\n```sh\r\nTraceback (most recent call last):\r\n  File \"/opt/hostedtoolcache/Python/3.9.18/x64/lib/python3.9/unittest/mock.py\", line 2058, in _mock_set_magics\r\n    setattr(_type, entry, MagicProxy(entry, self))\r\nResourceWarning: unclosed <socket.socket fd=12, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0>\r\nFAILED aries_cloudagent/messaging/jsonld/tests/test_routes.py::TestJSONLDRoutes::test_register - pytest.PytestUnraisableExceptionWarning: Exception ignored in: <socket.socket fd=-1, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_STREAM, proto=0>\r\n```",
      "@ff137 Are any of the warnings we see here solved by the upgrades in #2773?",
      "@dbluhm nope, I tried both pytest 7 and 8, same behaviour of no warnings until the error config is added.\n\nSome of the errors are non-deterministic, due to resources not being closed properly across tests. E.g. running all tests will yield ~30 errors; running those tests individually raise no errors; and then running specific modules may vary which exact test is raising the error. \n\nSo it's not so straightforward... the logs don't help isolate which resource is causing the problem.\n\nBest I could figure out is that AioHTTPTestCase may be preferable to use in some modules, because it defines some built in teardown logic for testing aiohttp web.Applications. But I couldn't make headway, plugging away at it myself.\n\nI think it's reasonable to put the error-on-warning config on the back burner for now, because it will require some more investigation and broader test refactoring. Also because to add the ignore condition, to solve these teardown issues, is a very generic ignore condition, which may obfuscate other legitimate warnings. So I think this is good enough for now just to fix all warnings, and then future PR test logs can more easily be reviewed to catch any new warnings that may be introduced ",
      "@jamshale — in @dbluhm ’s absence, can you take a look and approve if appropriate?  I think it is ready. I’ll not update the branch until the others in line are merged, so we don’t get too many unneeded integrations test runs happening.",
      "> @jamshale — in @dbluhm ’s absence, can you take a look and approve if appropriate? I think it is ready. I’ll not update the branch until the others in line are merged, so we don’t get too many unneeded integrations test runs happening.\r\n\r\nYes. I'll go over it. I'd like to get this completed. It will keep having merge conflicts.",
      "LGTM :+1: ",
      "Argh... conflicts to be resolved. Sorry about that.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2756) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2756&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2756&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2756)\n\n",
      "Main changes are replacing pkg_resources with importlib, in config/logging.py and utils/classloader.py.\r\nThen, fixing Marshmallow warnings (wrap descriptions in metadata). \r\nUse logger.warning instead of .warn.\r\nChange some test scopes to fix warnings. Wrap some tests to expect deprecation warnings. \r\nFilter some warnings from unmaintained libraries. \r\nAnd upgrade some dependencies that fix warnings.\r\n\r\nLooks like a lot! But that's it - resolves PR tests from printing ~2500 warnings, now it's 0 :-)",
      "HUGE!  Thanks!"
    ],
    "commit_messages": [
      "Merge pull request #2756 from ff137/fix-deprecation-warnings\n\nFix deprecation warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cebac254a19ac294796",
    "number": 2755,
    "body": "As initially done by @dbluhm in #2566, this drops the asynctest dependency, as it's massively out of date and generates hundreds of warnings in the tests - making it harder to improve on other warning logs.\r\n\r\nIt seems the dependency was subtly reintroduced in #2596. This PR attempts to refactor tests to only use unittest, as they fully support async tests since python 3.8 and external deps for async tests shouldn't be needed.\r\n\r\nEdit: Summary of changes:\r\n\r\n:heavy_minus_sign: Drops dependencies: `asynctest` (deprecated), and `async-case` (unused)\r\n\r\n:recycle: Refactors tests to use unittest mocking\r\n\r\n:white_check_mark:  Includes fixes for 3 tests that were silently not implemented properly (`coroutine not awaited`)\r\n\r\n:construction_worker: Added a condition to tests workflow that it will fail if \"coroutine not awaited\" appears in the warning logs. (Here's a [sample result](https://github.com/hyperledger/aries-cloudagent-python/actions/runs/7756059087/job/21152653635?pr=2755) of a workflow failing, where all tests passed, but the warning appears in logs)",
    "head_branch": "remove-asynctest",
    "is_a_fork": true,
    "comments": [
      "Funny enough, the tests actually report _more_ warnings now ... \r\nDoing a diffcheck I see that the `deprecated @coroutine method` warnings are indeed gone, but without asynctest there are now warnings displayed for modules in `aries_cloudagent/anoncreds` which wasn't displaying previously. Maybe asynctest wasn't logging things properly. \r\nThey're just Marshmallow warnings. I'll see if I can patch some of those in this PR too",
      "Quite a few different cases of deprecations warnings to fix, so I'll try tackle that in #2756",
      "@dbluhm just a heads up that some of the \"`coroutine 'AsyncMockMixin._execute_mock_call' was never awaited` warnings appear to have been introduced in this PR: https://github.com/hyperledger/aries-cloudagent-python/pull/2687\r\n\r\nI could fix the one case, in `test_accept_response_find_by_thread_id_no_did_doc_attached`. \r\n`mock_response = mock.MagicMock()` was changed to an AsyncMock, which let the test pass but didn't do things properly. \r\n\r\nCurrently, test_create_request_emit_did_peer_2 and _4 aren't being mocked properly. Seems to be the only other \"coroutine never awaited\" problem. I'll see if I can figure those out too\r\n\r\nEdit: think I figured it out. Please review the latest commits to check out what was missing!",
      "I figured it's a good idea to modify the tests workflow to always fail if a coroutine is not awaited ... because it indicates tests weren't set up properly, and it will avoid \"silently failing\" tests from merging in the future. So, I added that to the tests workflow:\r\n```yml\r\n      - name: Tests\r\n        run: |\r\n          poetry run pytest 2>&1 | tee pytest.log\r\n          if grep -Eq \"RuntimeWarning: coroutine .* was never awaited\" pytest.log; then\r\n            echo \"Failure: Detected unawaited coroutine warning in pytest output.\"\r\n            exit 1\r\n          fi\r\n```\r\n\r\nSuggestions are welcome",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2755) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2755&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2755&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2755)\n\n",
      "Testing new workflow changes:\r\n- :white_check_mark: should fail if any test fails: \r\n  - https://github.com/hyperledger/aries-cloudagent-python/actions/runs/7757812743/job/21158132015\r\n- :white_check_mark: should fail when all tests pass but a coroutine was not awaited: \r\n  - https://github.com/hyperledger/aries-cloudagent-python/actions/runs/7757905821/job/21158429703\r\n- :white_check_mark: should succeed when all tests pass and no coroutine warnings: \r\n  - https://github.com/hyperledger/aries-cloudagent-python/actions/runs/7757963935/job/21158616988\r\n\r\nChecks out :+1: "
    ],
    "commit_messages": [
      "Merge pull request #2755 from ff137/remove-asynctest\n\nRemove asynctest dependency and fix \"coroutine not awaited\" warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cebac254a19ac294797",
    "number": 2752,
    "body": "- Implements anoncreds endorsement of cred def's and revocation objects\r\n- enables the integration tests both manual and auto endorsement transactions\r\n\r\nFor the anoncreds transaction objects the previous implementation changed the structure of the objects. I really didn't like this so I changed it in the indy ledger module with if statements.\r\n\r\nI changed the optional[dict] params in anoncreds to be an empty dict by default to avoid null checking in a lot of places.\r\n\r\nNote: The only thing not completed for single tenant is publishing revocations. I want to do this in another task/PR. I created an integration test for anoncreds that stops just prior to publishing revocations.\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "FYI I've noticed some integration tests are now failing, for example:\r\n\r\n```\r\nAGENT_PORT_OVERRIDE=8030 ./run_bdd -t @RFC0586 -t @WalletType_Askar_AnonCreds\r\n```\r\n\r\n(Note that these aren't tagged as `@GHA` so they aren't included in the set of tests that runs on a PR.  Possibly we should add this tag to these tests ... they haven't been included so far as the anoncreds/endorsement is still in progress)\r\n\r\n",
      "@ianco Ya I had the integration tests working but then I did some refactoring and broke them somehow. Was going to try and look at why this happened today.",
      "> FYI I've noticed some integration tests are now failing, for example:\r\n> \r\n> ```\r\n> AGENT_PORT_OVERRIDE=8030 ./run_bdd -t @RFC0586 -t @WalletType_Askar_AnonCreds\r\n> ```\r\n> \r\n> (Note that these aren't tagged as `@GHA` so they aren't included in the set of tests that runs on a PR. Possibly we should add this tag to these tests ... they haven't been included so far as the anoncreds/endorsement is still in progress)\r\n\r\nI know these had been working. I'll work on fixing them and then I will add them to run on a PR.",
      "Updated description. Ready for review. Integration tests should pass.",
      "Hmm. Some integration tests are failing. I'll have to look into it.",
      "> Hmm. Some integration tests are failing. I'll have to look into it.\r\n\r\nLooks like you're trying to issue the credential before the revocation registry is active.  Try just running alice/faber with the `--revocation` flag (and anoncreds-askar wallet) and try to issue the credential manually.\r\n",
      "> > Hmm. Some integration tests are failing. I'll have to look into it.\r\n> \r\n> Looks like you're trying to issue the credential before the revocation registry is active. Try just running alice/faber with the `--revocation` flag (and anoncreds-askar wallet) and try to issue the credential manually.\r\n\r\nI think I was focusing to much on the endorsement tests and might have broke creating the registry for non-endorsement. Good thing we have so many integration tests. Hopefully it's minor. Will ping you when it's fixed.",
      "@ianco I did have a logic issue with the various configs/params. Tests are passing now.",
      "One integration test is failing, even though it passed one time. I think it's taking too long to create the revocation registry. Going to try and fix it.",
      "> One integration test is failing, even though it passed one time. I think it's taking too long to create the revocation registry. Going to try and fix it.\r\n\r\nIt's possibly creating the revocation registry but not activating it:\r\n\r\n```\r\n      Traceback (most recent call last):\r\n        File \"/home/aries/.local/lib/python3.9/site-packages/behave/model.py\", line 1329, in run\r\n          match.run(runner.context)\r\n        File \"/home/aries/.local/lib/python3.9/site-packages/behave/matchers.py\", line 98, in run\r\n          self.func(context, *args, **kwargs)\r\n        File \"features/steps/0586-sign-transaction.py\", line 421, in step_impl\r\n          assert len(rev_regs[\"rev_reg_ids\"]) >= 1\r\n      AssertionError\r\n```\r\n\r\n(There should always be exactly one Active revocation registry per cred def, even though there may be more than one created)\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2752) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2752&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2752&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2752)\n\n",
      "W00t! Nicely done!"
    ],
    "commit_messages": [
      "Anoncreds - Cred Def and Revocation Endorsement (#2752)\n\n* Anoncreds - Cred Def and Revocation Endorsement\r\n\r\nSigned-off-by: jamshale <jamiehalebc@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: jamshale <jamiehalebc@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cecac254a19ac294798",
    "number": 2750,
    "body": null,
    "head_branch": "fix/anoncreds-tests",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2750) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2750&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2750&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2750)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2750 from andrewwhitehead/fix/anoncreds-tests\n\nFix pytest collection errors when anoncreds package is not installed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cedac254a19ac294799",
    "number": 2749,
    "body": "Reverts #2739\r\nFixes #2738\r\n",
    "head_branch": "fix/bbs-context",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2749) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2749&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2749&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2749)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2749 from andrewwhitehead/fix/bbs-context\n\nAdd cached copy of BBS v1 context"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ceeac254a19ac29479a",
    "number": 2748,
    "body": "Fixes #2742 and various other issues discovered while testing ACA-Py against AFJ.\r\n\r\n- Send and accept `didexchange/1.1` as handshake protocol in OOB\r\n- Credo did not like the fact that we were including both `jwk` and `kid` in the protected headers of signed attachments. The `kid` was redundant so I removed it.\r\n- ~Credo does not accept `Multikey` verification method type yet (I opened a PR though: https://github.com/openwallet-foundation/credo-ts/pull/1720 -- tests failing :smile:). So I adjusted our did:peer:4 doc creation to use `Ed25519VerificationKey2020` for now.~ Multikey is now supported by Credo so I'll revert this change.\r\n\r\n## Updated Summary of Changes\r\n\r\n### Fixes\r\n- Askar is_transaction check throwing `NoneType` exception when no session is open\r\n- DID Peer 4 Document creation assigns its key to `authentication` and `keyAgreement` verification relationships.\r\n- OOB `clean_finished_oob_record` was suppressing exceptions from some bad code. OOB Records were not getting correctly deleted because the `delete_record` call was outside of the context holding the `session`. Exceptions are now logged as a warning from that block of code.\r\n- Removed `kid` from the headers of signed attachments; this was an overspecification -- either `jwk` or `kid` are expected but not both.\r\n\r\n### Removals\r\n- DIDCommPrefix environment variable manipulation. Given that we no longer support sending the old prefix, it was no longer needed. It's presence made some unit tests intermittently fail depending on test execution order.\r\n- `ConnRecord.Protocol` Enum was removed in favor of a simpler `SUPPORTED_PROTOCOLS` list. The logic surrounding the Enum was convoluted and barely used. I opted to simplify.\r\n- (Commented out) code for sending problem report warnings on version mismatch. As noted in the comments below, these warnings are no longer recommended.\r\n- All `aries_cloudagent/core/util.py` methods associated with version definition loading and parsing. This was an error prone piece of code (that recently broke loading protocols from plugins altogether) that was responsible for determining what the \"correct\" version of a protocol to respond with given the version definition for the protocol. It did this by dynamically loading the `definition.py` module for the message package through a very brittle process of guessing at the location of the module relative to the module containing the agent message class in question. However, all this information was already known to the `ProtocolRegistry`; there is no need to dynamically load it. Additionally, the support for emitting warnings that it enabled is no longer recommended by the RFCs. These methods were removed and replaced with calls to the `ProtocolRegistry`.\r\n\r\n### Refactors\r\n\r\n#### Protocol Registry and Dispatcher `make_message`\r\n\r\nThe Protocol Registry had seen only minor updates since it was first written years ago. I found the code to be a little brittle, depending a little too heavily on loosely defined lists of dictionaries. I formalized the data structures used to resolve a message class from a message type and introduced some helper types for parsing information from message type strings (`MessageType`, `ProtocolIdentifier`, `MessageVersion`, etc.).\r\n\r\nThe refactors correct the issue discussed in the comments of this PR regarding past versions of ACA-Py being unable to handle minor versions greater than the current minor version within a major version of a protocol.\r\n\r\nThese refactors had some minor effects on the Dispatcher `make_message`\r\n\r\nSpecifics:\r\n- `registry.resolve_message_class` now returns either a `Type[AgentMessage]` or `DeferLoad` of an `AgentMessage`. I think the `DeferLoad` just wasn't around when the `ProtocolRegistry` was first written because it was the perfect tool for the job. This results in Message Classes being cached after first load so they don't have to be dynamically imported every time. I didn't measure but I suspect this has a positive impact on performance.\r\n- Dispatcher's `make_message` no longer returns a \"warning\" string (see removal note above).\r\n- `register_controllers` no longer takes a `version_definition` as a parameter (it was unused)\r\n- `ProtocolDefinitions`, a combination of the protocol identifier URI and the information from the version definition (`definition.py` in the protocol package) are now stored in the registry. All information about currently supported versions is stored in the registry (see note about removal of `core/util.py` version definition methods above).\r\n- Streamlined message type registration:\r\n  - No longer takes a list of typesets, just one flat typeset. The list of typeset functionality was unused and just made for unreadable code.\r\n  - Other improvements that aren't worth noting the exact details of.\r\n- `resolve_message_class` will return the message class for the current supported minor version for minor versions greater than what is supported.\r\n\r\n#### AgentMessage\r\n\r\nSome minor updates were made to `AgentMessage` to make it easier to access and update message version information:\r\n- `AgentMessage._type` is now a `MessageTypeStr` instance. It behaves like a `str` but has additional properties for `protocol`, `version`, `name`, etc.\r\n- New `AgentMessage._version` property for accessing `AgentMessage._type.version` as a string\r\n- `assign_version_from(msg: AgentMessage)` to set the version of the current message based on the version of another message.\r\n- `assign_version(version: str)` for manually setting the version to a value.\r\n- Removed the `@property.setter` for the `_type` attribute which was unused and had dubious utility.\r\n\r\n#### DID Exchange Manager\r\n\r\nBehavior of the manager is now governed by the `connection_protocol` property of the `ConnRecord` associated with the exchange. If the protocol is `didexchange/1.0` the original DID Exchange manager behavior is executed for backwards compatibility with previous versions of ACA-Py. If the protocol is `didexchange/1.1`, the manager will execute the new behavior, including qualified DIDs and `did_rotate~attach`. If ACA-Py's settings do not permit qualified DIDs (through omission of `emit-did-peer-X` flags on startup), the manager will default to the original unqualified DID behavior.\r\n\r\nThe manager will send messages with the same versions as those it receives. E.g. `didexchange/1.0/request` received, `didexchange/1.0/response` sent. `didexchange/1.1/request` received, `didexchange/1.1/response` sent.\r\n\r\nUsing a public DID for a DID Exchange now requires `didexchange/1.1` support since the `did_rotate~attach` mechanism is used.\r\n\r\nVarious refactors were made to streamline logic and make it easier to reuse chunks.\r\n\r\nAdded a `protocol` parameter to implicit DID Exchange request Admin API endpoint. This endpoint triggers a request to a public DID without previously receiving an invitation from that DID. The `protocol` parameter selects which version of DID Exchange to use, 1.1 or 1.0. The default is 1.0 for now.\r\n\r\n**Deprecated:** An Admin API endpoint that was apparently broken and unused was marked as deprecated: `POST /didexchange/receive-request`. The docs for the endpoint describe that it is intended to be used to receive a request against a public DID. However, requests to a public DID should be sent directly to the messaging endpoint of the public DID. Given this and the fact that errors in the endpoint rendered it useless (until fixed in this PR), I marked the endpoint as deprecated.\r\n\r\n#### Out of Band Manager and Invitation message\r\n\r\nMinor updates were made:\r\n\r\nThe manager passes the version of the handshake protocol used to the DID Exchange manager so that it can keep track of this in the `connection_protocol` attribute of the `ConnRecord` created.\r\n\r\nThe invitation message (and relevant Admin API endpoints) now accept `didexchange/1.1` as a handshake protocol value.\r\n\r\nThe `HSProto` and `HSProtoSpec` were also streamlined to remove unused features. Additionally, `rfc` as a method for referencing an HSProto was removed given that DID Exchange 1.0 and 1.1 are both from the same RFC.",
    "head_branch": "fix/didexchange-1.1",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2748) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2748&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2748&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2748)\n\n",
      "@genaris just FYI, with these changes, ACA-Py and AFJ can now successfully complete OOB + DIDExchange with did:peer:4 (or AFJ emitting did:peer:1 and ACA-Py emitting did:peer:4, I believe). I commented on an issue in Credo on issues with did:peer:2 and tagged you. ~No promises but I may take a stab at updating the did:peer:2 resolution to match the updates to the spec.~ Timo made the very valid point on that issue that this would cause issues with backwards compatibility. So I think focusing on did:peer:4 is fair for now! Sorry for the noise!",
      "Wow nice work @dbluhm ! Not only fixes in ACA-Py but also in Credo. That's what I'm talking about! 😄 \r\n\r\nNow that your Multikey support PR is merged in Credo main branch, I guess you can re-attempt using it.",
      "I haven't gotten this quite right yet. Checking DID Exchange backwards compatibility with earlier versions of ACA-Py, I get this error:\r\n\r\n```\r\nalice_1             | Traceback (most recent call last):\r\nalice_1             |   File \"/root/.cache/pypoetry/virtualenvs/aries-cloudagent-VA82Wl8V-py3.9/lib/python3.9/site-packages/aiohttp/web_protocol.py\", line 452, in _handle_request\r\nalice_1             |     resp = await request_handler(request)\r\nalice_1             |   File \"/root/.cache/pypoetry/virtualenvs/aries-cloudagent-VA82Wl8V-py3.9/lib/python3.9/site-packages/aiohttp/web_app.py\", line 543, in _handle\r\nalice_1             |     resp = await handler(request)\r\nalice_1             |   File \"/root/.cache/pypoetry/virtualenvs/aries-cloudagent-VA82Wl8V-py3.9/lib/python3.9/site-packages/aiohttp/web_middlewares.py\", line 114, in impl\r\nalice_1             |     return await handler(request)\r\nalice_1             |   File \"/usr/src/app/aries_cloudagent/admin/server.py\", line 181, in ready_middleware\r\nalice_1             |     return await handler(request)\r\nalice_1             |   File \"/usr/src/app/aries_cloudagent/admin/server.py\", line 218, in debug_middleware\r\nalice_1             |     return await handler(request)\r\nalice_1             |   File \"/root/.cache/pypoetry/virtualenvs/aries-cloudagent-VA82Wl8V-py3.9/lib/python3.9/site-packages/aiohttp_apispec/middlewares.py\", line 45, in validation_middleware\r\nalice_1             |     return await handler(request)\r\nalice_1             |   File \"/usr/src/app/aries_cloudagent/admin/server.py\", line 451, in setup_context\r\nalice_1             |     return await task\r\nalice_1             |   File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\nalice_1             |     yield self  # This tells Task to wait for completion.\r\nalice_1             |   File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\nalice_1             |     future.result()\r\nalice_1             |   File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\nalice_1             |     raise self._exception\r\nalice_1             |   File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 256, in __step\r\nalice_1             |     result = coro.send(None)\r\nalice_1             |   File \"/usr/src/app/aries_cloudagent/protocols/out_of_band/v1_0/routes.py\", line 296, in invitation_receive\r\nalice_1             |     result = await oob_mgr.receive_invitation(\r\nalice_1             |   File \"/usr/src/app/aries_cloudagent/protocols/out_of_band/v1_0/manager.py\", line 509, in receive_invitation\r\nalice_1             |     oob_record = await self._perform_handshake(\r\nalice_1             |   File \"/usr/src/app/aries_cloudagent/protocols/out_of_band/v1_0/manager.py\", line 883, in _perform_handshake\r\nalice_1             |     raise OutOfBandManagerError(\r\nalice_1             | aries_cloudagent.protocols.out_of_band.v1_0.manager.OutOfBandManagerError: Unable to create connection. Could not perform handshake using any of the handshake_protocols (supported [None])\r\n```\r\n\r\nThe updates for the DID Exchange version were inadvertently breaking. I'll have to look deeper. My first pass was not much more than a copy-paste from OOB.",
      "I've spent a fair amount of time sifting through the behavior of ACA-Py as it relates to handling messages from protocol versions different than the explicitly supported versions.\r\n\r\nWhat should happen, according to [RFC 0003](https://github.com/hyperledger/aries-rfcs/tree/fe79f41e18786b628a91d65c1e13cfb824d2e16f/concepts/0003-protocols#semver-rules-for-protocols), is that if a message with a minor version greater than what is supported is received, we handle the message still and respond anyways with our lower protocol version. Through this, the response recipient knows that there is a version mismatch and that some fields may have been ignored.\r\n\r\nFor example, if we get `didexchange/1.1/request` but we only support `didechange/1.0/request` explicitly, we will do our best to handle the message and respond with `didexchange/1.0/response`.\r\n\r\nAs it turns out, recent past releases of ACA-Py emit this error on receipt of a `didexchange/1.1/request`:\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 256, in __step\r\n    result = coro.send(None)\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/core/dispatcher.py\", line 142, in handle_message\r\n    (message, warning) = await self.make_message(\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/core/dispatcher.py\", line 293, in make_message\r\n    message_cls = registry.resolve_message_class(message_type)\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/core/protocol_registry.py\", line 243, in resolve_message_class\r\n    return ClassLoader.load_class(msg_cls)\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/utils/classloader.py\", line 98, in load_class\r\n    if \".\" in class_name:\r\nTypeError: argument of type 'NoneType' is not iterable\r\n```\r\n\r\nThis essentially means that a new ACA-Py release would be incompatible with past versions of ACA-Py when using DID Exchange.\r\n\r\nI could adjust our behavior as a newer version of ACA-Py to attempt to respond with `1.0` still but this, I think, would technically be out of spec, on top of being somewhat of a pain. Realistically, breaking backwards compatibility would probably cause more pain though.\r\n\r\nThoughts? @swcurran @ianco ",
      "I’m confused. Would we not want to add support for 1.1 and handle both 1.0 and 1.1? Presumably we want to support `did_rotate~attach`?  The 003 RFC says that is the ideal — respond with the same version as received.",
      ">Within a given major version of a protocol, an agent should:\r\n>- Respond to a minimum supported minor version, defaulting to \"0\".\r\n>    - An agent SHOULD keep minimum supported minor version at \"0\" unless it is unsecure or extremely complicated to do so.\r\n>- Respond with or initiate a protocol instance the current fully supported minor version.\r\n\r\nThe way I interpret that second point from the semver rules, it seems to suggest that we should always respond with our \"most current\" minor version. By doing so, we make it clear to the other party that they may experience feature degradation or minor version mismatch since the language describing sending a problem report with a warning has been removed from the protocol:\r\n\r\n> Prior wording of this protocol included the following suggestion that is now considered deprecated. See note below about deprecating the \"warning\" problem reports.\r\n> \r\n> In addition to responding with the protocol message (if necessary), the agent MAY also want to send a warning problem-report message with code version-with-degraded-features.\r\n\r\nAnd:\r\n\r\n> Prior wording of this protocol included the following that is now considered deprecated. See note below about deprecating the \"warning\" problem reports.\r\n> \r\n> In addition to responding with the protocol message, an agent MAY send a warning problem-report message with code fields-ignored-due-to-version-mismatch\r\n\r\n> Note: The deprecation of the \"warning\" problem-reports in cases of minor version mismatches is because the recipient of the response can detect the mismatch by looking at the [PIURI](https://github.com/hyperledger/aries-rfcs/tree/fe79f41e18786b628a91d65c1e13cfb824d2e16f/concepts/0003-protocols#piuri), making the \"warning\" unnecessary, and because the problem-report message may be received after (and definitely at a different time than) the response message, and so the warning is of very little value to the recipient. Recipients should still be aware that minor version mismatch warning problem-report messages may be received and handle them appropriately, likely by quietly ignoring them.",
      "I might be splitting hairs :sweat_smile: I think the ideal would be to only \"implement\" a single minor version of any major version of a protocol. Honestly wondering if DID Exchange 1.1 should have been DID Exchange 2.0 because, though did_rotate is technically optional, it will break handling of the messages still for did_doc~attach to be absent.",
      "Sorry — I’m not understanding the issue.  Probably we need to discuss. It would be good to get a clear outline of what is happening, what could be done easily and what you recommend we do.\r\n\r\n- ACA-Py current minor version is…\r\n  - Should we change that?\r\n- Receive DID Exchange 1.0 request\r\n  - ACA-Py currently …\r\n  - ACA-Py should be change to ...\r\n- Receive DID Exchange 1.1 request\r\n  - ACA-Py currently…\r\n  - ACA-Py should be changed to …\r\n\r\nI think the ideal is that ACA-Py be changed to have a current minor version of 1.1 and handle both 1.0 and 1.1 requests. However, I gather that is problematic…\r\n\r\nThanks!\r\n\r\n",
      "Yeah, okay, allow me to slow down and take a deep breath for a moment lol.\r\n\r\nThe ideal: ACA-Py always just sends didexchange/1.1 since that reduces complexity. However, this would break backwards compatibility. Theoretically, the way DIDComm protocol versions should be handled, past versions of ACA-Py should have been able to work with 1.1; but, due to a bug in past versions, it cannot handle versions of the protocol greater than its \"current minor version\" (1.0).\r\n\r\n(As much as it chagrins me to have explicit different paths for the same major version of a protocol rather than being able to just ignore some attributes) the right answer here is to support both 1.0 and 1.1, responding in kind to requests. I believe it should be possible to include both `didexchange/1.0` and `didexchange/1.1` in the OOB handshake_protocol list.\r\n\r\nMy biggest concern is just managing complexity in the DID Exchange protocol implementation. It's already quite dense. I'll continue to work to find a balance between just getting the dang feature implemented and not doing things that will make me sad later lol.",
      "After looking at @swcurran's clarification PR in [Aries RFC](https://github.com/hyperledger/aries-rfcs/pull/814), I realized that the DID Exchange version was not explicitly changed on its RFC. Some time ago it was agreed to do so (see https://github.com/hyperledger/aries-rfcs/pull/795#issuecomment-1747033885) and we reflected that into Credo implementation, but now I'm not sure if it's clear for everyone.\r\n\r\nI think it's the right thing to do although this makes things harder to implement in ACA-Py due to the aforementioned bug in previous versions. BTW, do you think if as a workaround (until unqualified dids support is completely removed) it could be possible to use discover-features to query for DID Exchange support and, based on that, send 1.1 or 1.0 requests? I guess it would be tricky, since a connection is not established yet, but maybe possible somehow?",
      "> After looking at @swcurran's clarification PR in [Aries RFC](https://github.com/hyperledger/aries-rfcs/pull/814), I realized that the DID Exchange version was not explicitly changed on its RFC.\r\n\r\nhttps://github.com/hyperledger/aries-rfcs/blob/main/features/0023-did-exchange/README.md#11----signed-rotations-without-did-documents\r\n\r\nIt looks like the version bump was made but that just the title and metadata didn't get updated. Or at least that's how I read the intent and my memory of the discussions.\r\n\r\n> BTW, do you think if as a workaround (until unqualified dids support is completely removed) it could be possible to use discover-features to query for DID Exchange support and, based on that, send 1.1 or 1.0 requests? I guess it would be tricky, since a connection is not established yet, but maybe possible somehow?\r\n\r\nWe've got a few entry points to a DID Exchange protocol:\r\n\r\n- We create an OOB invitation with the handshake protocol\r\n- Received OOB invitation with Handshake protocol declared\r\n- We receive a DID Exchange request through a public DID\r\n- We send a DID Exchange request through a public DID\r\n\r\nWhen we create an OOB invitation, we can include both didexchage/1.0 and didexchange/1.1 in the protocol list. We'll receive a request from them with one version or the other and then proceed from that point with the same version they sent.\r\n\r\nWhen we receive an OOB invitation, if didexchange/1.1 is in the protocol list, we'll use it. Otherwise, we'll go to 1.0.\r\n\r\nWhen we receive a DID Exchange request through a public DID, we will just match the version received in the request.\r\n\r\nWhen we send a DID Exchange request, we could potentially do a discover features protocol with the public DID (I don't think ACA-Py technically supports this right now since there's no connection yet)... But to this point, we've left it up to the controller to orchestrate the flow of multiple protocols. So continuing that pattern, I think we'd add a switch to the request through public DID Admin API endpoint to give the controller the ability to pick which version of the DID Exchange protocol to send. We can default to 1.0.",
      "A lot of progress on this PR. I think we're where we wanted to be implementation wise now. I just need to update the tests that are failing and do some regression checks against Credo to make sure that's still working, too.",
      "@jamshale @amanji @ianco — nice to get some eyes on this one.  If we can get this merged, we can get an rc3 out, and an official 0.12.0. That would be good!",
      "Unit tests fixed now. Might be room for some additions to the tests. I've tested this branch against Credo 0.5.0 and tests passed so looking good on that front. I'll run some tests against previous ACA-Py versions.",
      "Diagnosing an issue:\r\n\r\n```python\r\nacapy_1  | Traceback (most recent call last):\r\nacapy_1  |   File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 256, in __step\r\nacapy_1  |     result = coro.send(None)\r\nacapy_1  |   File \"/usr/src/app/aries_cloudagent/core/dispatcher.py\", line 210, in handle_message\r\nacapy_1  |     await handler(context, responder)\r\nacapy_1  |   File \"/usr/src/app/aries_cloudagent/protocols/didexchange/v1_0/handlers/complete_handler.py\", line 29, in handle\r\nacapy_1  |     await mgr.accept_complete(context.message, context.message_receipt)\r\nacapy_1  |   File \"/usr/src/app/aries_cloudagent/protocols/didexchange/v1_0/manager.py\", line 1064, in accept_complete\r\nacapy_1  |     conn_rec.my_did = await self.long_did_peer_4_to_short(conn_rec.my_did)\r\nacapy_1  |   File \"/usr/src/app/aries_cloudagent/connections/base_manager.py\", line 115, in long_did_peer_4_to_short\r\nacapy_1  |     await wallet.store_did(did_info)\r\nacapy_1  |   File \"/usr/src/app/aries_cloudagent/wallet/askar.py\", line 279, in store_did\r\nacapy_1  |     raise WalletDuplicateError(\"DID already present in wallet\")\r\nacapy_1  | aries_cloudagent.wallet.error.WalletDuplicateError: DID already present in wallet\r\n```",
      "@ianco I seem to be running amok of the reusing did:peer:4 changes. My tests work if I make sure to set the `create_unique_did` query param on OOB invite creation. Otherwise, it would reuse the same DID for subsequent connections. Is this the intended behavior? It seems like inverting the `create_unique_did` so it's always true would more closely mimic the original behavior of the OOB create invite endpoint.",
      "> @ianco I seem to be running amok of the reusing did:peer:4 changes. My tests work if I make sure to set the `create_unique_did` query param on OOB invite creation. Otherwise, it would reuse the same DID for subsequent connections. Is this the intended behavior? It seems like inverting the `create_unique_did` so it's always true would more closely mimic the original behavior of the OOB create invite endpoint.\r\n\r\nThat was based on this comment from @swcurran :  https://github.com/hyperledger/aries-cloudagent-python/issues/2703#issuecomment-1964411524\r\n\r\nI don't have an opinion on what should be the default on the `create_unique_did` attribute ...\r\n\r\n(Connection reuse won't work unless we use the same DID on each invitation ...)",
      "> Diagnosing an issue:\r\n> \r\n> ```python\r\n> acapy_1  | Traceback (most recent call last):\r\n> acapy_1  |   File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 256, in __step\r\n> acapy_1  |     result = coro.send(None)\r\n> acapy_1  |   File \"/usr/src/app/aries_cloudagent/core/dispatcher.py\", line 210, in handle_message\r\n> acapy_1  |     await handler(context, responder)\r\n> acapy_1  |   File \"/usr/src/app/aries_cloudagent/protocols/didexchange/v1_0/handlers/complete_handler.py\", line 29, in handle\r\n> acapy_1  |     await mgr.accept_complete(context.message, context.message_receipt)\r\n> acapy_1  |   File \"/usr/src/app/aries_cloudagent/protocols/didexchange/v1_0/manager.py\", line 1064, in accept_complete\r\n> acapy_1  |     conn_rec.my_did = await self.long_did_peer_4_to_short(conn_rec.my_did)\r\n> acapy_1  |   File \"/usr/src/app/aries_cloudagent/connections/base_manager.py\", line 115, in long_did_peer_4_to_short\r\n> acapy_1  |     await wallet.store_did(did_info)\r\n> acapy_1  |   File \"/usr/src/app/aries_cloudagent/wallet/askar.py\", line 279, in store_did\r\n> acapy_1  |     raise WalletDuplicateError(\"DID already present in wallet\")\r\n> acapy_1  | aries_cloudagent.wallet.error.WalletDuplicateError: DID already present in wallet\r\n> ```\r\n\r\nIs this happening in an integration test?\r\n\r\nPossibly aca-py should just check before adding a DID, if the DID is already present ...\r\n",
      "To encourage connection reuse where possible, we want an Agent to use the same DID for invitations. The recommendation is that ACA-Py should default to enabling reuse, and a controller must go out of its way to force a new connection for every invitation.  Does that make sense and answer the question?",
      "Okay, I think I'm detecting where my assumptions have broken down. To restate, we want to encourage connection reuse by using the same DID for invitations; then, in the process of connecting, the invite creator should rotate out for a new did:peer:4 DID.\r\n\r\nSound right? I think some of my changes are erroneously assuming that a DID associated with the connection means we don't need to create a new one. I believe this was the case before the reuse PR. But with this new condition, I'll have to adjust my logic to make sure the new DID is rotated in for the connection.",
      "Yes — that’s what I think we want.  Use the same did:2/4 for every invitation, enabling reuse, and rotate to a new DID when connecting.\r\n\r\nAnd in the super edge case where an Agent wants to actively prevent connection reuse, they have that option to use a new DID on every invitation and (presumably) still rotate to a new DID when connecting.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2748) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2748&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/accepted-16px.png '') [0 Accepted issues](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2748&metric=new_accepted_issues&view=list)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2748&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2748)\n\n",
      "(Please note my updated summary of changes in the opening comment of this PR)\r\n\r\nAs a result of these changes, in combination with previously merged PRs, backwards compatibility is influenced by the following factors:\r\n\r\nPast == ACA-Py 0.11.0\r\nNew == ACA-Py 0.12.0 or ACA-Py with the changes from main + this PR\r\n\r\n- New can NOT set `--emit-did-peer-4` or `--emit-did-peer-2` and initiate a connection via invitation since this would result in OOB invitations with a `did:peer:4` did as a service which is unresolvable to Past.\r\n  - Therefore, New cannot initiate via invitation DID Exchange 1.1 and did:peer:4 with agents supporting it AND interoperate with Past at the same time.\r\n- New can accept invitations from Past and respond in kind\r\n- New can accept requests from Past and respond in kind\r\n- New can accept invitations from New (or equivalent featured agent) and respond in kind (e.g OOB invite with HS didexchange 1.1) but cannot create a did:peer:2/4 without the flags.\r\n  - Therefore, New cannot respond to an invitation from New with did:peer:2/4 AND interoperate with Past at the same time.\r\n- New can accept requests from New (or equivalent featured agent) and respond in kind (with did:peer:2/4 regardless of flag state)\r\n\r\nAre these interop constraints we're happy with or should we revisit what triggers the OOB behavior?",
      "w00t!!!  Thanks, @dbluhm — awesome work!"
    ],
    "commit_messages": [
      "Merge pull request #2748 from dbluhm/fix/didexchange-1.1\n\nfix(credo-interop): various didexchange and did:peer related fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cefac254a19ac29479b",
    "number": 2747,
    "body": "Though relatively infrequent, the result of formatting with black can change from version to version. This PR pins the version of black used in the github action to a specific version. This version should be kept in sync with the version selected in the pyproject.toml to avoid situations where new versions of black cause PR checks to fail because formatting changed between versions.\r\n\r\nThis PR also bumps the currently selected version of black to 24.1.1, which is the most recent black version that was run in recent PRs. This should provide the best continuity until the next time we choose to update black.\r\n\r\nShould correct the issues seen in #2737 and #2746 (black was passing locally).",
    "head_branch": "chore/pin-black-version",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2747) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2747&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2747&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2747)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2747 from dbluhm/chore/pin-black-version\n\nchore: pin black version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf0ac254a19ac29479c",
    "number": 2746,
    "body": "This PR partially reverts some of the changes made in #2661 relating to the `ConnRecordSchema`. The changes in that PR caused the generated openapi to rename the definition to `StoredConnRecord`. We can get the same fix while not causing a change to the name in the openapi; this is preferable because otherwise it impacts downstream consumers of the openapi definition.",
    "head_branch": "fix/connrecord-schema-name",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2746) **Quality Gate passed**  \nIssues  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2746&resolved=false&inNewCodePeriod=true)\n\nMeasures  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/passed-16px.png '') [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2746&resolved=false&inNewCodePeriod=true)  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Coverage  \n![](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/no-data-16px.png '') No data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2746)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2746 from dbluhm/fix/connrecord-schema-name\n\nfix: partial revert of ConnRecord schema change"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf1ac254a19ac29479d",
    "number": 2745,
    "body": "Bumps [aiohttp](https://github.com/aio-libs/aiohttp) from 3.9.1 to 3.9.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/aio-libs/aiohttp/releases\">aiohttp's releases</a>.</em></p>\n<blockquote>\n<h2>3.9.2</h2>\n<h2>Bug fixes</h2>\n<ul>\n<li>\n<p>Fixed server-side websocket connection leak.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7978\">#7978</a>.</p>\n</li>\n<li>\n<p>Fixed <code>web.FileResponse</code> doing blocking I/O in the event loop.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8012\">#8012</a>.</p>\n</li>\n<li>\n<p>Fixed double compress when compression enabled and compressed file exists in server file responses.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8014\">#8014</a>.</p>\n</li>\n<li>\n<p>Added runtime type check for <code>ClientSession</code> <code>timeout</code> parameter.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8021\">#8021</a>.</p>\n</li>\n<li>\n<p>Fixed an unhandled exception in the Python HTTP parser on header lines starting with a colon -- by :user:<code>pajod</code>.</p>\n<p>Invalid request lines with anything but a dot between the HTTP major and minor version are now rejected.\nInvalid header field names containing question mark or slash are now rejected.\nSuch requests are incompatible with :rfc:<code>9110#section-5.6.2</code> and are not known to be of any legitimate use.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8074\">#8074</a>.</p>\n</li>\n<li>\n<p>Improved validation of paths for static resources requests to the server -- by :user:<code>bdraco</code>.</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/aio-libs/aiohttp/blob/master/CHANGES.rst\">aiohttp's changelog</a>.</em></p>\n<blockquote>\n<h1>3.9.2 (2024-01-28)</h1>\n<h2>Bug fixes</h2>\n<ul>\n<li>\n<p>Fixed server-side websocket connection leak.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n:issue:<code>7978</code>.</p>\n</li>\n<li>\n<p>Fixed <code>web.FileResponse</code> doing blocking I/O in the event loop.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n:issue:<code>8012</code>.</p>\n</li>\n<li>\n<p>Fixed double compress when compression enabled and compressed file exists in server file responses.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n:issue:<code>8014</code>.</p>\n</li>\n<li>\n<p>Added runtime type check for <code>ClientSession</code> <code>timeout</code> parameter.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n:issue:<code>8021</code>.</p>\n</li>\n<li>\n<p>Fixed an unhandled exception in the Python HTTP parser on header lines starting with a colon -- by :user:<code>pajod</code>.</p>\n<p>Invalid request lines with anything but a dot between the HTTP major and minor version are now rejected.\nInvalid header field names containing question mark or slash are now rejected.\nSuch requests are incompatible with :rfc:<code>9110#section-5.6.2</code> and are not known to be of any legitimate use.</p>\n<p><em>Related issues and pull requests on GitHub:</em>\n:issue:<code>8074</code>.</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/24a6d64966d99182e95f5d3a29541ef2fec397ad\"><code>24a6d64</code></a> Release v3.9.2 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8082\">#8082</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/9118a5831e8a65b8c839eb7e4ac983e040ff41df\"><code>9118a58</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8079\">#8079</a>/1c335944 backport][3.9] Validate static paths (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8080\">#8080</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/435ad46e6c26cbf6ed9a38764e9ba8e7441a0e3b\"><code>435ad46</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/3955\">#3955</a>/8960063e backport][3.9] Replace all tmpdir fixtures with tmp_path (...</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/d33bc21414e283c9e6fe7f6caf69e2ed60d66c82\"><code>d33bc21</code></a> Improve validation in HTTP parser (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8074\">#8074</a>) (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8078\">#8078</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/0d945d1be08f2ba8475513216a66411f053c3217\"><code>0d945d1</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7916\">#7916</a>/822fbc74 backport][3.9] Add more information to contributing page (...</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/3ec4fa1f0e0a0dad218c75dbe5ed09e22d5cc284\"><code>3ec4fa1</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8069\">#8069</a>/69bbe874 backport][3.9] 📝 Only show changelog draft for non-release...</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/419d715c42c46daf1a59e0aff61c1f6d10236982\"><code>419d715</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8066\">#8066</a>/cba34699 backport][3.9] 💅📝 Restructure the changelog for clarity (#...</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/a54dab3b36bcf0d815b9244f52ae7bc5da08f387\"><code>a54dab3</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8049\">#8049</a>/a379e634 backport][3.9] Set cause for ClientPayloadError (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8050\">#8050</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/437ac47fe332106a07a2d5335bb89619f1bc23f7\"><code>437ac47</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7995\">#7995</a>/43a5bc50 backport][3.9] Fix examples of <code>fallback_charset_resolver</code>...</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/034e5e34ee11c6138c773d85123490e691e1b708\"><code>034e5e3</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/8042\">#8042</a>/4b91b530 backport][3.9] Tightening the runtime type check for ssl (...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/aio-libs/aiohttp/compare/v3.9.1...v3.9.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=aiohttp&package-manager=pip&previous-version=3.9.1&new-version=3.9.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/aiohttp-3.9.2",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2745) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2745&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2745&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2745)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2745 from hyperledger/dependabot/pip/aiohttp-3.9.2\n\nchore(deps): Bump aiohttp from 3.9.1 to 3.9.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf1ac254a19ac29479e",
    "number": 2744,
    "body": "This PR is to address #2743\r\n\r\nThere is an odd bug that's been ongoing for some time where when trying to expand a did document with the `pyld` library it fails.\r\n\r\nSince this happen in a very specific condition, this PR looks to implement a workaround.\r\n\r\nWhen we need to verify a json-ld VC where the issuer/verificationMethod is a `did:web:` scheme, we first manually resolve the did document with the `requests` module, then extract the traceability context form the document if present, then frame the document directly....\r\n\r\nIts not pretty, but its the best solution I could come up with that has minimal impact on the existing code. If anyone has a better solution, I'm happy to change it!\r\n\r\n@swcurran @dbluhm this is the last critical PR I would like to see in the 0.12 release",
    "head_branch": "pstlouis/address-traceability-context-bug",
    "is_a_fork": true,
    "comments": [
      "Not pretty indeed :sweat_smile: I'm quite hesitant on this one. Could you provide some more details on how pyld fails when resolving the traceability context? Has the issue been raised with the authors of that library?",
      "So I've raised an issue on the [pyld repo](https://github.com/digitalbazaar/pyld/issues/188) and the traceability [interop repo](https://github.com/w3c-ccg/traceability-interop/issues/613). The `pyld` maintainers never acknowledged the issue and the traceability folks claimed the issue was most likely in the traceability context. There was a [fix suggested](https://github.com/w3c-ccg/traceability-vocab/pull/923) which didn't address the issue. The traceability folks are willing to help however its been difficult to get hold of them. \r\n\r\nFor a minimal example, here's a code snippet. Its the specific combination of the traceability context, the traceability service endpoint and type. Remove any one of those 3 and the error isn't raised. \r\n```\r\nfrom pyld import jsonld\r\n\r\ndocument = {\r\n  \"@context\": [\r\n    \"https://www.w3.org/ns/did/v1\",\r\n    \"https://w3id.org/traceability/v1\"\r\n  ],\r\n  \"service\": [\r\n    {\r\n      \"id\": \"did:web:example.com#traceability-api\",\r\n      \"type\": [\"TraceabilityAPI\"],\r\n      \"serviceEndpoint\": \"https://example.com\"\r\n    }\r\n  ]\r\n}\r\n\r\njsonld.expand(document)\r\n```\r\n\r\nThe issue is with the expanding part, which is a substep of the framing. The error returned is:\r\n```\r\npyld.jsonld.JsonLdError: ('Tried to nullify a context with protected terms outside of a term definition.',)\r\nType: jsonld.SyntaxError\r\nCode: invalid context nullification\r\n```\r\n\r\nI'm really trying to find a solution here since aca-py currently won't be able to verify `TraceableCredentials` because of this bug. \r\n\r\nThere's a traceability meeting tomorrow I will try to get more info but it's been over a month I noticed this issue. It bothers me that nobody else encountered it because as far as I can tell acapy is doing things the right way and not being able to expand a linked data document sounds like a significant issue.",
      "If I stumbled on the pyld repo and saw that it hadn't seen a commit in 4 years and had 20 open PRs and 50+ issues, I would assume the project was dead. That doesn't seem far from the truth, frankly. A quick scan for an alternative does not yield much in python. So that's too bad lol... Even if we did poke at the library and figure out what needs to be fixed, it seems like it would not help since PRs aren't getting merged.",
      "I did a bit of `pdb`ing on the example you provided and from a very uninformed perspective, I think it has to do with the empty `@context` in the `TraceabilityAPI` section of the context",
      "@dbluhm thanks for having a look into this. I also suspect the empty context has something to do with it and I have brought this up to the group. They didn't seem to share that opinion. Would you be able to tell what should the content of the `TraceabilityAPI` `@context` field should be? I could run some tests with a mock server.\r\n\r\nThe other option is to prettify this solution. We could leverage the resolver module directly, I ran into issues with injecting the profile and async calls, hence why I went with the requests module. The traceability context endpoint can be added to the constants.",
      "Can we call step 5.1.1 to the attention of the traceability folks in this section of the json-ld-api spec? https://w3c.github.io/json-ld-api/#algorithm",
      "Ah, you know what, I think I see the issue:\r\n\r\nhttps://github.com/digitalbazaar/pyld/blob/316fbc2c9e25b3cf718b4ee189012a64b91f17e7/lib/pyld/jsonld.py#L3073\r\n\r\n`if not ctx:` should be `if ctx is None:`. `ctx` will be falsey when given an empty dictionary. The algorithm states that the error condition should only be met when the ctx is explicitly a null or, in python, a None.",
      "I still don't understand the function of the empty context, though. If that's truly necessary according to the traceability context authors then we could try patching the library or putting a PR out for it on the off chance it gets merged (and released....). But if it's not strictly necessary, maybe it could be dropped in a revision of the context.",
      "@dbluhm I will try the proposed edit for the pyld library. The maintainers are in the vc-api call I will point this out to them this afternoon and we can get a PR in if it solves the issue. Do you want to author it since you found the solution?\r\n\r\nI will also touch on this at the traceability call this afternoon and bring up the point you mentioned.",
      "@dbluhm so I think there was both an error in the `pyld` and the traceability context, your suggestion did get pass the nullification step, however it now raises an error at empty context:\r\n\r\n```\r\npyld.jsonld.JsonLdError: ('Invalid JSON-LD syntax; invalid scoped context.',)\r\nType: jsonld.SyntaxError\r\nCode: invalid scoped context\r\nDetails: {'context': {}, 'term': 'Event'}\r\n```\r\nNow it seems step 21.1 is where the empty context fails.\r\n\r\nThere are actually many terms with empty contexts. What a messy situation. \r\n\r\nI think bringing the PR in the pyld library is important since this is actually a python related bug. For the empty context I will get more information from the group. Fantastic find, we are definitely on the right track!",
      "> @dbluhm I will try the proposed edit for the pyld library. The maintainers are in the vc-api call I will point this out to them this afternoon and we can get a PR in if it solves the issue. Do you want to author it since you found the solution?\r\n> \r\n> I will also touch on this at the traceability call this afternoon and bring up the point you mentioned.\r\n\r\nFeel free to open the PR! I have no preference to being the author of the solution :slightly_smiling_face: ",
      "@dbluhm see this [PR](https://github.com/digitalbazaar/pyld/pull/189) for the solution",
      "@dbluhm while we have the open pr in the `pyld` repo I still provided a prettier solution here. Let's keep this open in case the publication of a new `pyld` package becomes an issue.\r\n\r\nI added a non async version of the resolve function for the did:web: resolver module. It's a copy paste of the existing function but I used the requests package instead of `aiohttp` for the get request on the did document url.\r\n\r\nSince the `_get_verification_method` function was non async, I wasn't able to call the existing did web resolve function without introducing too many changes. Let me know what you think!",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2744) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2744&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2744&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2744)\n\n",
      "@PatStLouis — can we close this with the new #2795 change?",
      "Sorry for the extra question — I had been looking at the open PRs in prep for the release candidate and didn’t see your comment on #2795.  Doh!",
      "@swcurran Yes when #2795 is merged we won't need this PR as this was a less desirable workaround. The other PR will address the core issue directly."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf2ac254a19ac29479f",
    "number": 2741,
    "body": "Waiting on integration tests...",
    "head_branch": "upgrade-anoncreds-rs",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2741) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2741&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2741&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2741)\n\n",
      "@ianco  Hmm. Not sure if this is the same error? Or if this scenario should be failing.\r\n\r\n![Screenshot from 2024-01-29 14-06-21](https://github.com/hyperledger/aries-cloudagent-python/assets/31809382/bf779895-f91e-44ec-9ede-896ce7ecbad1)\r\n\r\n`@T003-RFC0454.1f` also failing\r\n\r\nPossibly I didn't install it correctly locally. Waiting for the PR tests.",
      "Looks good, the `did:peer` error will be fixed with my other PR\r\n",
      "Looks like the integration tests passed. I must have done something wrong installing and testing locally."
    ],
    "commit_messages": [
      "Merge pull request #2741 from jamshale/upgrade-anoncreds-rs\n\nUpgrade anoncreds to 0.2.0-dev9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf3ac254a19ac2947a0",
    "number": 2739,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "bbs_context",
    "is_a_fork": true,
    "comments": [
      "Addresses #2738.  A reasonable change to make, @andrewwhitehead ?\r\n\r\nDang...lint issues.",
      "I don't see anywhere that we reject a BBS credential if it doesn't have the expected context, so it looks like no change is needed there. Interestingly it looks like we only use the JSON-LD document loader with cached results in tests, not in production – I find that a bit surprising. One minor issue I see is that the BBS context is auto-added to issued credentials with the BBS signature type. If the provided JSON includes the legacy context, then the new context will be added as well, unnecessarily.",
      "@andrewwhitehead — those issues seem independent of this change, right?  All this does is bypass the current redirection that is happening from the old BBS+ context URL to the new one.  So I think this one is safe enough. Correct?\r\n\r\nThe rest of the things you mention existing issues that should be at least recorded and fixed.\r\n\r\nOf particular concern to me is the document loader not being used in production.  That seems like a problem.  The auto-adding is a also a bit of an issue. What do JSON-LD processors do when a context is referenced twice in the same document?\r\n\r\nCould you be more precise on exactly what is needed?",
      "I think the only immediate change is that if a provided credential contains the 'legacy' BBS context, then we should not be adding the new one as well, just to avoid breaking things for anybody using that functionality. I'm not certain if it would break the JSON-LD processing, we could test that in the playground, but it wouldn't be ideal.",
      "Looks like it doesn't break the processing: https://json-ld.org/playground/#startTab=tab-expanded&json-ld=%7B%22%40context%22%3A%5B%22https%3A%2F%2Fwww.w3.org%2F2018%2Fcredentials%2Fv1%22%2C%22https%3A%2F%2Fwww.w3.org%2F2018%2Fcredentials%2Fexamples%2Fv1%22%2C%22https%3A%2F%2Fw3id.org%2Fsecurity%2Fbbs%2Fv1%22%2C%22https%3A%2F%2Fw3c.github.io%2Fvc-di-bbs%2Fcontexts%2Fv1%22%5D%2C%22id%22%3A%22https%3A%2F%2Fexample.gov%2Fcredentials%2F3732%22%2C%22type%22%3A%5B%22VerifiableCredential%22%2C%22UniversityDegreeCredential%22%5D%2C%22issuer%22%3A%22did%3Akey%3AzUC72Q7XD4PE4CrMiDVXuvZng3sBvMmaGgNeTUJuzavH2BS7ThbHL9FhsZM9QYY5fqAQ4MB8M9oudz3tfuaX36Ajr97QRW7LBt6WWmrtESe6Bs5NYzFtLWEmeVtvRYVAgjFcJSa%22%2C%22issuanceDate%22%3A%222020-03-10T04%3A24%3A12.164Z%22%2C%22credentialSubject%22%3A%7B%22degree%22%3A%7B%22type%22%3A%22BachelorDegree%22%2C%22name%22%3A%22Bachelor%20of%20Science%20and%20Arts%22%2C%22degreeType%22%3A%22Underwater%20Basket%20Weaving%22%7D%2C%22college%22%3A%22Contoso%20University%22%7D%2C%22proof%22%3A%7B%22type%22%3A%22BbsBlsSignature2020%22%2C%22verificationMethod%22%3A%22did%3Akey%3AzUC72Q7XD4PE4CrMiDVXuvZng3sBvMmaGgNeTUJuzavH2BS7ThbHL9FhsZM9QYY5fqAQ4MB8M9oudz3tfuaX36Ajr97QRW7LBt6WWmrtESe6Bs5NYzFtLWEmeVtvRYVAgjFcJSa%23zUC72Q7XD4PE4CrMiDVXuvZng3sBvMmaGgNeTUJuzavH2BS7ThbHL9FhsZM9QYY5fqAQ4MB8M9oudz3tfuaX36Ajr97QRW7LBt6WWmrtESe6Bs5NYzFtLWEmeVtvRYVAgjFcJSa%22%2C%22created%22%3A%222019-12-11T03%3A50%3A55%22%2C%22proofPurpose%22%3A%22assertionMethod%22%2C%22proofValue%22%3A%22iRArJRSvmIwx5YH2HXg5OJD%2B0v5sD1HoqhBsiJiw59t3Eb6nSntyOnENEnqnpzQwCjtbvOsU18eBlVi2%2Fign1u1ysz0iOLxSRHvIKtDDpr1dTDwQCbuZo2gUnY%2B8Dy%2BxEst8MDtcXwzNQW8Y3l1XzA%3D%3D%22%7D%7D",
      "So we are good to go with this one?  Assuming the tests pass?",
      "Hi @swcurran @andrewwhitehead  thank you so much for jumping into this issue quickly, I tried replacing `https://w3id.org/security/bbs/v1` with `https://w3c.github.io/vc-di-bbs/contexts/v1` on my local but it did work as well. Seems like the `pyld` could not load document from `https://w3c.github.io/vc-di-bbs/contexts/v1`.",
      "Would it be an issue with the response header from W3C that caused the document loader to not work? When I tried to host the BBS context locally (e.g. `http://localhost:2004/vc/context/bbs/v1`) with the same content as W3C, and it worked normally, not sure why this issue happened.\r\n\r\nIf this is the case, I wonder if we have any option to not load BBS context from a remote source? Or the ability to change it to another URL?",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2739) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2739&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2739&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2739)\n\n",
      "It looks like that URL also returns a 301 redirect, and it would need an extra trailing slash to avoid that. But the resolver needs to be able to handle redirects anyway.",
      "So to fully deal with the issue, I should do another PR in to add a “/“ on the end?",
      "I feel like it might be better to keep the original URL and make sure that redirects are supported (with a unit test), given that the w3 URL can be more easily redirected in case the hosting URL changes. We also need to make sure that the base credential context is always precached.",
      "Actually it does appear that the base context is precached, but the BBS context wasn't added here which might be a faster fix: https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/vc/ld_proofs/document_downloader.py#L39-L45",
      "I’ll add a task for you to fix this.  I thought this would be a trivial change.  I don’t understand redirects enough to understand why continuing to use an outdated URL is the right way to go. That said, I agree, it will be moved again in the future, so whatever we can do to prevent future issues is the right thing."
    ],
    "commit_messages": [
      "Merge pull request #2739 from swcurran/bbs_context\n\nUpdate BBS+ context to bypass redirections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf4ac254a19ac2947a1",
    "number": 2737,
    "body": "Addresses #2677\r\n\r\n@dbluhm I ran a `poetry update pydid` after changing the version in the `pyproject.toml` file. Seems like it did the trick.",
    "head_branch": "pstlouis/bump-pydid-version",
    "is_a_fork": true,
    "comments": [
      "strange, when running the black code formatter locally it detects no changes...I'm using version 23.7.0",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2737) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2737&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2737&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2737)\n\n",
      "@swcurran I updated to the new black formatter [version 24.1](https://pypi.org/project/black/24.1.0/) used by the tests, it was released yesterday and seems to behave differently. This 2 line PR turned into a 302 lines PR...\r\n\r\n",
      "That's unfortunate -- @PatStLouis no worries on the formatting changes. I think your separation into two different commits is a good compromise. Thanks!\r\n\r\nIt's probably a good idea for us to pin the version of black used in the actions so we can keep it in sync with what we have down in the dev dependencies. But we don't need to worry about that in this PR",
      "I'll wait for the int tests to run to completion but this looks good to me!",
      "Test failed but looks like a fluke. Rerunning.",
      "the error seems to have to do with the [anoncreds revocation registry not being available](https://github.com/hyperledger/aries-cloudagent-python/actions/runs/7673810864/job/20918164545?pr=2737#step:3:14719)\r\n`aries_cloudagent.anoncreds.revocation.AnonCredsRevocationError: No active registry`\r\n\r\nThe linting did change the indy/web/legacy registries files however I never heard of code linting breaking code. This would be wild.",
      "@ianco or @jamshale any hints what might be going wrong? I agree with Patrick that it seems unlikely that these changes would impact the anoncreds tests.",
      "> @ianco or @jamshale any hints what might be going wrong? I agree with Patrick that it seems unlikely that these changes would impact the anoncreds tests.\r\n\r\nThe anoncreds integration tests are broken for anoncreds-dev8. They should get fixed with dev9.\r\n\r\nI don't think we need to block this for them.",
      "I think this is related to the last anoncreds-rs update, we can check again when we get the anoncreds-rs `dev9` release\r\n",
      "Merging this as is then; thanks @ianco and @jamshale! And thanks for your patience @PatStLouis!"
    ],
    "commit_messages": [
      "Merge pull request #2737 from OpSecId/pstlouis/bump-pydid-version\n\nbump pydid to v 0.4.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf5ac254a19ac2947a2",
    "number": 2734,
    "body": "Still waiting for integration tests locally.",
    "head_branch": "upgrade-anoncred-rs",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2734) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2734&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2734&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2734)\n\n",
      "There is a couple integration tests that fail. Updating.",
      "@ianco I think the failing integration tests will be fixed by your upcoming PR? We can still merge this?\r\n\r\n`./run_bdd -t ~@taa_required -t @WalletType_Askar_AnonCreds -t @T001-RFC0454-DID-PEER`\r\n\r\n![Screenshot from 2024-01-25 09-02-04](https://github.com/hyperledger/aries-cloudagent-python/assets/31809382/87d31f81-0618-4bbc-af1a-8056c2584440)\r\n\r\n",
      "> @ianco I think the failing integration tests will be fixed by your upcoming PR? We can still merge this?\r\n\r\nYes my PR should fix these, let's merge this PR and then I can take a look"
    ],
    "commit_messages": [
      "Merge pull request #2734 from jamshale/upgrade-anoncred-rs\n\nUpgrade anoncred-rs to version 0.2.0-dev8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf6ac254a19ac2947a3",
    "number": 2732,
    "body": "@dbluhm -- note the update in the documentation for the DID Resolver documentation. I assume that is OK, but didn't actually try it.  I'll try to get to that. I wanted to keep the version updated so that it will be found in a repo search as we publish new releases.\r\n",
    "head_branch": "0.12.0-rc0",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2732) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2732&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2732&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2732)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2732 from swcurran/0.12.0-rc0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf7ac254a19ac2947a4",
    "number": 2731,
    "body": "See issue https://github.com/hyperledger/aries-cloudagent-python/issues/2714\r\n\r\nRelax validation to allow did:peer (or any value) for the holder/prover did on a credential request.\r\n\r\nThis works with an askar wallet, but anoncreds-askar will fail due to its own did validation (see issue https://github.com/hyperledger/anoncreds-rs/issues/307)\r\n\r\nThis PR will work once the anoncreds-rs issue is also fixed.\r\n",
    "head_branch": "fix/issue/2714",
    "is_a_fork": true,
    "comments": [
      "The AnonCreds issue has been resolved and the PR is part of the 0.2.0-dev8 that was published tonight. I'll add a ticket to update ACA-Py to use that release. Since @jamshale did the 0.2.0-dev7 update, I'll ask if he can do the 0.2.0-dev8 one as well.",
      "Hmmm integration tests are failing I'll take a look ...\r\n",
      "> Hmmm integration tests are failing I'll take a look ...\r\n\r\nThose were different than the ones failing for me locally. Might be the sporadic fail that happens sometimes :man_shrugging: ",
      "> > Hmmm integration tests are failing I'll take a look ...\r\n> \r\n> Those were different than the ones failing for me locally. Might be the sporadic fail that happens sometimes 🤷‍♂️\r\n\r\nCould be I'm trying to run locally\r\n",
      "> > Hmmm integration tests are failing I'll take a look ...\r\n> \r\n> Those were different than the ones failing for me locally. Might be the sporadic fail that happens sometimes 🤷‍♂️\r\n\r\nThis error:\r\n\r\n```\r\nanoncreds.error.AnoncredsError: type: RevocationRegistryDefinitionId, identifier: 5VieLs9kRQ2gMXWoxbKewg:4:5VieLs9kRQ2gMXWoxbKewg:3:CL:53:Acme.agent.Schema_DriversLicense_v2:CL_ACCUM:1 is invalid. It MUST be a URI or legacy identifier.\r\n```\r\n\r\nInvestigating ...",
      "The alice/faber demo is working but the integration tests are failing ...  grrrr ...\r\n",
      "@jamshale  just double checked and the same integration tests were failing on your PR (which we merged).  There was *also* one of our famous random failures ...\r\n\r\nI think the anoncreds-rs update affected the validation for the revocation registry id, I'll log another issue on the anoncreds-rs repo.\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2731) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2731&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2731&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2731)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2731 from ianco/fix/issue/2714\n\nRelax validation of holder DID when submitting a credential request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf7ac254a19ac2947a5",
    "number": 2729,
    "body": "Most of the documentation was pretty good but I tried to make it more obvious that this is a good option.\r\n\r\n- I added more configurations to make it more obvious you can deploy multiple agent debug sessions. \r\n- You don't actually need to expose ports to access the admin api so I removed that stuff.\r\n- If you run your von-network and tails server from inside the dev container you can use local host and all the webhooks work as well.",
    "head_branch": "feat/2708",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2729) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2729&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2729&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2729)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2729 from jamshale/feat/2708\n\nUpdate devcontainer documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf8ac254a19ac2947a6",
    "number": 2723,
    "body": "This is to support being able to get callbacks to [vc-authn-oidc](https://github.com/bcgov/vc-authn-oidc) when a user declines the presentation request sent to their agent.\r\n\r\nPresently ACA-PY is throwing an exception if the problem report does not contain a connection record.\r\nRemove that exception and allow the recieve_problem_report to continue (and supply None for the connection ID in that case).\r\n",
    "head_branch": "feature/allowConnectionlessProofProblemReport",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2723) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2723&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2723&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2723)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2723 from loneil/feature/allowConnectionlessProofProblemReport\n\nRemove exception on connectionless presentation problem report handler"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cf9ac254a19ac2947a7",
    "number": 2722,
    "body": "I'd welcome feedback on this on other things we want to highlight in this document.\r\n\r\n@dbluhm @andrewwhitehead @ianco, do you think these AIP 2.0 comments are still accurate:\r\n\r\n| RFC | Supported | Notes |\r\n --- | :--: | -- |\r\n| [0211-route-coordination](https://github.com/hyperledger/aries-rfcs/tree/b3a3942ef052039e73cd23d847f42947f8287da2/features/0211-route-coordination)   | :warning:  | Only pre-AIP 2.0 version. Must be updated to use `did:key` for full AIP 2.0 support  |\r\n| [0360-use-did-key](https://github.com/hyperledger/aries-rfcs/tree/b3a3942ef052039e73cd23d847f42947f8287da2/features/0360-use-did-key)     | :warning:  |  Creating and resolving `did:key` DIDs is supported, but not all protocols are updated yet to use `did:key`. This is a breaking change for AIP 1.0 -> AIP 2.0.                |\r\n| [0587-encryption-envelope-v2](https://github.com/hyperledger/aries-rfcs/tree/b3a3942ef052039e73cd23d847f42947f8287da2/features/0587-encryption-envelope-v2) | :construction: | Support for the DIDComm V2 envelope format is a work in progress, including the PRs ([AIP-2 base64url consistency](https://github.com/hyperledger/aries-cloudagent-python/pull/1188) and [Small AIP-2 updates](https://github.com/hyperledger/aries-cloudagent-python/pull/1056)) |\r\n",
    "head_branch": "supported",
    "is_a_fork": true,
    "comments": [
      "I think the mediator coordination and did:key issues are now resolved. DIDComm v2 support is still work in progress.",
      "Thanks — I’ll update.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2722) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2722&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2722&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2722)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2722 from swcurran/supported\n\nUpdate the SupportedRFCs Document to be up to date"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cfaac254a19ac2947a8",
    "number": 2721,
    "body": "If subwallet initialization fails (for example due to an invalid wallet key: #2682) then the wallet record is meant to be removed. This could fail because a session was not being opened first.\r\n",
    "head_branch": "fix/subwallet-error",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2721) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2721&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2721&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2721)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2721 from andrewwhitehead/fix/subwallet-error\n\nFix subwallet record removal"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cfbac254a19ac2947a9",
    "number": 2720,
    "body": "WIP as I am still testing the changes.\r\n\r\nI didn't remove the \"request endorser to write transaction\" flag.  In the author I hardcode to false.  In the endorser I raise an error if the author requests this function.  (Handles the case where the endorser is updated and the author isn't.)\r\n\r\nSee issue #2711 \r\n\r\nThere is some work to do on problem reports, I added a separate Issue for this task.\r\n\r\n",
    "head_branch": "fix/endorser/2711",
    "is_a_fork": true,
    "comments": [
      "Converting to draft, I'll hold onto this until @jamshale 's PR is merged (update endorse schema for anoncreds)",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2720) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2720&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2720&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2720)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2720 from ianco/fix/endorser/2711\n\nBreaking - remove endorser capability to write ledger transactions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cfcac254a19ac2947aa",
    "number": 2719,
    "body": "Used an exact version of the dev pre-release. Figured is would be changed anyway when this becomes non pre-release. \r\n\r\nFixed some calls to the anoncreds library. Required fetching some additional objects from the wallet. Fixed the unit tests.\r\n\r\nThese would have been quicker and easier to fix if the unit tests caught them. For some of the unit tests I was able to interact with anoncreds and create objects with it, but for some objects like creating credentials and revocation registries I was mocking the objects. These ended up being the broken calls so only the integration tests caught them.\r\n\r\nWould be nice if the unit tests could create all the anoncreds objects instead of mocking them. Will try and do this more when I see the opportunity. \r\n\r\nChanged the devcontainer poetry version to match the version used to upgrade.",
    "head_branch": "feat/2717",
    "is_a_fork": true,
    "comments": [
      "Integration tests failing. Looking into them.",
      "More things to fix here then I thought there would be. Quite a few changes to anoncreds object create methods. Some of the complex objects I wasn't able to unit test well, like creating credentials and some revocation objects. These are the failing ones.",
      "Sorry this is a bigger than expected task, but I think it is the priority, so this is good for you to work through.\r\n\r\nIt wasn’t until I saw your PR that I realized we weren’t on the `0.2.0` path.  Getting on that is necessary.",
      "This should be good now. All the integration tests pass. Updated the description comment.",
      "> Would be nice if the unit tests could create all the anoncreds objects instead of mocking them. Will try and do this more when I see the opportunity.\r\n\r\nYes this would be nice.  Prob best to deal with this strategically since the integration tests test the full stack top-to-bottom.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2719) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2719&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2719&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2719)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2719 from jamshale/feat/2717\n\nUpgrade anoncreds to 0.2.0.dev7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cfcac254a19ac2947ab",
    "number": 2716,
    "body": "I did test it locally, but I think my process is not picking things like this up.\r\n",
    "head_branch": "rtd-update2",
    "is_a_fork": true,
    "comments": [
      "Figured out how I should have tested it...and verified it failed previously, fixed now.\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2716) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2716&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2716&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2716)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2716 from swcurran/rtd-update2\n\nFix incorrect Sphinx search library version reference"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cfdac254a19ac2947ac",
    "number": 2715,
    "body": "Adds the flow for schema endorsement.\r\n\r\nThe endorsement flow is triggered by the agent having an author role or by manually setting the `create_transaction_for_endorser` option request param.\r\n\r\nThe anoncreds registry submits the transaction based on wallet type, and the post processing (storing the schema in the wallet) is triggered by the transaction manager using a new anoncreds schema event.\r\n\r\nThe endorsement integration tests are run with anoncreds wallets on the endorser and author roles. Added unit tests mostly on the registry register schema flow. ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Overall looks good.\r\n\r\nI think we need to move where the ledger write actually happens, tho.  Right now the transaction manager writes to the ledger (https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/protocols/endorse_transaction/v1_0/manager.py#L428) and then emits the event that we listen for (https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/protocols/endorse_transaction/v1_0/manager.py#L526).\r\n\r\nFor anoncreds, I think the ledger write needs to move into our new (anoncreds) event handler method.\r\n",
      "@ianco Ok, thanks. I will look into doing that, and add some unit tests and ping you when I'm finished.",
      "The latest commit removes the extending of the registry interface, and instead implements the txn_submit method from within the legacy_indy registry. Author triggered txn_submits in the indy ledger and endorser manager complete_transaction create an instance of the LegacyIndyRegistry to submit the transactions. \r\n\r\nThis will still end up submitting the transaction from the indy ledger but will make sure that ledger is injected from the anoncreds registry.\r\n\r\nOne drawback is that because the transaction manager and ledger are imported from the ledger routes module on initialization, importing the LegacyIndyRegistry from the top level caused a circular import exception. To get around this the Registry is only imported when needed during anoncred transaction submit operations.",
      "I fear I'm coming across as harsh but I think there were some mistakes made in the first iteration of endorser support in ACA-Py that really need to be corrected. As it stands, I think we're inheriting a bit too much of those mistakes in this iteration.",
      "> I fear I'm coming across as harsh but I think there were some mistakes made in the first iteration of endorser support in ACA-Py that really need to be corrected. As it stands, I think we're inheriting a bit too much of those mistakes in this iteration.\r\n\r\nI think that's fair. A lot of this is new to me so I appreciate the feedback. Some of the things you mentioned I had been confused about. I don't think it should take to long.",
      "I think I'm getting a grip on the old implementation and how we want it to change with anoncreds. This should be way better now.\r\n\r\nOne thing I noticed is that the `GET /schema/{id}` endpoint doesn't return the state, so you can't see it's finished though the api even though the record is updated. Not sure if that should be change as another ticket. \r\n\r\nI added a state for transaction_requested and I used a random uuid for the job-id. Wasn't sure if this was exactly what we wanted to do.",
      "> One thing I noticed is that the `GET /schema/{id}` endpoint doesn't return the state, so you can't see it's finished though the api even though the record is updated. Not sure if that should be change as another ticket.\r\n\r\nIsn't there a ledger transaction id that isn't available until the schema is written to the ledger?",
      "> > One thing I noticed is that the `GET /schema/{id}` endpoint doesn't return the state, so you can't see it's finished though the api even though the record is updated. Not sure if that should be change as another ticket.\r\n> \r\n> Isn't there a ledger transaction id that isn't available until the schema is written to the ledger?\r\n\r\nThat should still be there, yes. This is just for the anoncreds Result object. It has a state field I am setting to `transaction_requested` and then `finished` when it is written to the ledger. You can't ever see the `finished` state from the current GET api. Only the inner anoncreds object.",
      "POST /schema\r\n\r\n```json\r\n{\r\n  \"job_id\": \"db16fd5f8c094d62ba3d1722dacb2467\",\r\n  \"schema_state\": {\r\n    \"state\": \"transaction_requested\",\r\n    \"schema_id\": \"WgWxqztrNooG92RXvxSTWv:2:author-schema:1.1\",\r\n    \"schema\": {\r\n      \"issuerId\": \"WgWxqztrNooG92RXvxSTWv\",\r\n      \"attrNames\": [\r\n        \"score\"\r\n      ],\r\n      \"name\": \"author-schema\",\r\n      \"version\": \"1.1\"\r\n    }\r\n  },\r\n  \"registration_metadata\": {\r\n    \"txn\": {\r\n      \"state\": \"request_sent\",\r\n      \"created_at\": \"2024-01-30T00:08:21.960157Z\",\r\n      \"updated_at\": \"2024-01-30T00:08:21.968250Z\",\r\n      \"trace\": false,\r\n      \"transaction_id\": \"7e664eb2-2ed0-460e-8411-b6858aeb2fa2\",\r\n      \"_type\": \"https://didcomm.org/sign-attachment/1.0/signature-request\",\r\n      \"signature_request\": [\r\n        {\r\n          \"context\": \"did:sov\",\r\n          \"method\": \"add-signature\",\r\n          \"signature_type\": \"default\",\r\n          \"signer_goal_code\": \"aries.transaction.endorse\",\r\n          \"author_goal_code\": \"aries.transaction.ledger.write\"\r\n        }\r\n      ],\r\n      \"signature_response\": [],\r\n      \"timing\": {\r\n        \"expires_time\": null\r\n      },\r\n      \"formats\": [\r\n        {\r\n          \"attach_id\": \"4cef3a8f-b910-4794-9326-6f0a638d683c\",\r\n          \"format\": \"dif/endorse-transaction/request@v1.0\"\r\n        }\r\n      ],\r\n      \"messages_attach\": [\r\n        {\r\n          \"@id\": \"4cef3a8f-b910-4794-9326-6f0a638d683c\",\r\n          \"mime-type\": \"application/json\",\r\n          \"data\": {\r\n            \"json\": \"{\\\"endorser\\\": \\\"6bX4vukUZxxGKm7f5bBkmN\\\", \\\"identifier\\\": \\\"FB5yHWKaZk59hiKqjJKEHs\\\", \\\"operation\\\": {\\\"data\\\": {\\\"attr_names\\\": [\\\"score\\\"], \\\"name\\\": \\\"author-schema\\\", \\\"version\\\": \\\"1.1\\\"}, \\\"type\\\": \\\"101\\\"}, \\\"protocolVersion\\\": 2, \\\"reqId\\\": 1706573301954441235, \\\"signature\\\": \\\"5ihP9oXmgg6WRRMmNjHiiiP6W3r3S5xVfJFCru3BUzHSqiV6gkmRhvo3UgDzsTmQHU2Z4zp91hwU3cKHtLsG9xWA\\\"}\"\r\n          }\r\n        }\r\n      ],\r\n      \"meta_data\": {\r\n        \"context\": {\r\n          \"job_id\": \"db16fd5f8c094d62ba3d1722dacb2467\",\r\n          \"schema_id\": \"WgWxqztrNooG92RXvxSTWv:2:author-schema:1.1\"\r\n        }\r\n      },\r\n      \"connection_id\": \"2e64c27e-5c35-4090-87ef-a48e4db3f2ba\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nGET /schems/{id}\r\n\r\n```json\r\n{  \r\n \"schema\": {\r\n    \"issuerId\": \"FB5yHWKaZk59hiKqjJKEHs\",\r\n    \"attrNames\": [\r\n      \"score\"\r\n    ],\r\n    \"name\": \"author-schema\",\r\n    \"version\": \"1.1\"\r\n  },\r\n  \"schema_id\": \"FB5yHWKaZk59hiKqjJKEHs:2:author-schema:1.1\",\r\n  \"resolution_metadata\": {\r\n    \"ledger_id\": null\r\n  },\r\n  \"schema_metadata\": {\r\n    \"seqNo\": 1234\r\n  }\r\n}\r\n```\r\n",
      "> A few comments but I think this is still a great first set of changes. I'm okay with my comments being ignored in the interest of unblocking this from moving forward!\r\n\r\nI'll update it. I'd rather address them here before the next PR which will be a lot bigger. ",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2715) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2715&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2715&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2715)\n\n",
      "@dbluhm Addressed the comments now."
    ],
    "commit_messages": [
      "Anoncreds schema endorsement (#2715)\n\n* Anoncreds - schema endorsement\r\n\r\nSigned-off-by: jamshale <jamiehalebc@gmail.com>\r\n\r\n* Use wait state / finish schem directly with anoncreds issuer\r\n\r\nSigned-off-by: jamshale <jamiehalebc@gmail.com>\r\n\r\n* Fix test\r\n\r\nSigned-off-by: jamshale <jamiehalebc@gmail.com>\r\n\r\n---------\r\n\r\nSigned-off-by: jamshale <jamiehalebc@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cfeac254a19ac2947ad",
    "number": 2713,
    "body": "See issue #2703\r\n\r\nAdds a (failing) test for --emit-did-peer-x (not included in regular GHA run)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Piggy-backing a couple of demo updates - the ability to provide extra agent args (same way as is implemented in the BDD tests) and also to override the ports used by the demo (and BDD) agents.\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2713) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2713&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2713&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2713)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2713 from ianco/master\n\nIntegration test for did:peer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214cffac254a19ac2947ae",
    "number": 2712,
    "body": "Also updates the generated Read The Docs documentation to the latest.\r\n",
    "head_branch": "rtd-update",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2712) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2712&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2712&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2712)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2712 from swcurran/rtd-update\n\nUpdate RTD requirements after security vulnerability recorded"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d00ac254a19ac2947af",
    "number": 2710,
    "body": "This PR enables presentation issuance and verification using the vc_ld manager and addresses #2693.\r\n\r\nThere is also 4 new routes included matching the vc-api specification. (minor changes from the `/vc/ldp` endpoints, mostly key names and defaulting to `Ed25519Signature2018` `proofType` for issuance).\r\n@dbluhm could you help me by reviewing the changes I've made to the vc_ld manager and models? You will see I added an if condition in the `verify_presentation` section to enable `assertionMethod` purpose if no challenge is provided, while minimizing the impact on the existing code/workflows. I also improved the presentation models, based on the existing credential ones.\r\n\r\nI have a test instance of these changes running [here](https://agent.vc.opsec.id/api/doc#/vc-api).",
    "head_branch": "pstlouis/add-vc-api-routes",
    "is_a_fork": true,
    "comments": [
      "The last commit added a method to store an issued VC",
      "I'm trying to re-run the failed test, as it doesn't look like it is related to this PR.\r\n\r\nYou had flagged this is a [WIP], @PatStLouis , so I marked it as a \"Draft\" PR. Have you completed it at this point?\r\n\r\nThanks!",
      "Ah...also there are conflicts with this PR to be resolved. Could you also look at that @PatStLouis ?  Thanks!",
      "@swcurran yeah I noticed the tests were failing because it wasn't able to write a schema on the ledger which seemed odd, looks like it passed now. Let me fix the conflicts then I would consider this ready.",
      "@PatStLouis — I assume this is now ready for review?  I’ve removed the “Draft” flag on it.  You still have “WIP” in the title.",
      "Thoughts on having the VC API routes be provided by plugin rather than be a built in, @PatStLouis @swcurran? That's what we did for the OpenID4VCI and these routes seem like an analogous chunk of functionality.\r\n\r\nI think the plugin approach could be more ergonomic; it can be revised independent of ACA-Py's release cycle which could help it stay up to date with any spec changes or additions made in the VC API world. I think it could also help keep ACA-Py itself more maintainable in the long run so someone who isn't as well versed in the VC API details doesn't have to worry about making updates to that chunk of code.\r\n\r\nStill reading into the details but I don't think I would suggest moving everything in this PR to a plugin, mostly just the strictly VC API portions.\r\n\r\nBut then again, maybe I inadvertently moved us in the direction of having them be included directly in ACA-Py when I added the `/vc` endpoints :sweat_smile: :man_shrugging: ",
      "Is there any plans for the `/vc` routes making it a bad idea to replace them with this set of vc-api endpoints? Sounds like they are looking to achieve the same goal and are already 95% similar, which is why I was happy to see that PR.\r\n\r\nIf namespacing is a concern, we could do:\r\n`/vc-api/credentials/issue`\r\n`/vc-api/credentials/verify`\r\n`/vc-api/presentations/prove`\r\n`/vc-api/presentations/verify`\r\n\r\nThe original ld-proof-vc-detail attachment format which inspired the request format of `credential/options` request body already references the vc-api (formaly known as the VC HTTP API) as seen in [RFC0593: JSON-LD Credential Attachment format for requesting and issuing credentials](https://github.com/hyperledger/aries-rfcs/tree/main/features/0593-json-ld-cred-attach#reference), below the options section.\r\n\r\nThese routes are not meant to create exchanges which is a significant difference with the oidc4vci.\r\n\r\nAfter some reflections I believe these should be part of aca-py if we can have a consensus on replacing the `/vc` routes, otherwise it would be somewhat redundant. I don't see a big enough difference with the purpose/format of the vc-api routes and the current vc routes to warrant a plugin instead of a replacement/improvement.\r\n\r\nI would also argue that they would actually be easier to maintain since there is a specification available.\r\n\r\nThe benefit of being compatible with the w3c test-suites is also interesting to get green checkmarks and claim interoperability out-of-the-box.",
      "I'm fine replacing the `/vc` routes since they've not made it into an official release yet. The only minor concern I have is with causing potential confusion with the existing `/credentials` endpoints which list credentials received by ACA-Py as a holder. So I think I'm in favor of namespacing the endpoints as you suggest.",
      "> Overall, I think this looks good! We will need some unit tests to cover the additions to the VcLdpManager especially. I'm less concerned about tests for the routes themselves but some form of automated test for those would still be nice.\r\n\r\nTo echo @dbluhm 's comment, we need to make sure we have at least some basic unit tests for the new code.  Also we should have some integration tests (IMHO more important than the unit tests) and a document describing the functionality supported by the `/vc` endpoints.",
      "@ianco I can add a readme file in the project for documentation. For the integration tests I will have to get more familiar with those.\r\n\r\n@dbluhm could explain to me why a [challenge is required to verify a presentation](https://github.com/hyperledger/aries-cloudagent-python/blob/aa704a7775d7c374174ba99632829ac73d12791e/aries_cloudagent/vc/vc_ld/manager.py#L366C19-L366C19)? I ended up calling the verify function directly instead of the manager and provide an assertion purpose to bypass this.",
      "> @ianco I can add a readme file in the project for documentation. For the integration tests I will have to get more familiar with those.\r\n\r\nIt's very similar to the AATH tests, if you want an overview let me know and I can give you a quick walkthrough.\r\n",
      "> @dbluhm could explain to me why a [challenge is required to verify a presentation](https://github.com/hyperledger/aries-cloudagent-python/blob/aa704a7775d7c374174ba99632829ac73d12791e/aries_cloudagent/vc/vc_ld/manager.py#L366C19-L366C19)? I ended up calling the verify function directly instead of the manager and provide an assertion purpose to bypass this.\r\n\r\nThis isn't super fresh in my memory but I believe the challenge is what ensures that the presentation is unique to a verifier, preventing replay attacks.",
      "@dbluhm I changed a few things and addressed most of the comments.\r\n- removed the traceability context file\r\n- moved the store credential to the vc manager class\r\n- used the models in the vc directory\r\n- added some examples and validations for the new model sections (presentation type and credentiaStatus)\r\n\r\nFor the routes I opted to remove the vc-api directory and use the routes file in the vc directory. I kept the `/vc` route path and replaced the `ldp` portion with `credentials` or `presentations` as appropriate. Let me know if you think this is a good idea.\r\n\r\nI also added a GET `/vc/credentials` route. This differs from the POST `/credential/w3c` route in which it returns the actual VC and not an expanded version.",
      "I was having issues with the provided models from the `vc_ld` folder, so I created new schemas for the endpoint requests/responses which will be use to return specific validations and error codes. This is to leave the `vc` module classes and schemas intact. I added a `service` file in the vc-api folder which is responsible for interacting with the `VcLdpManager` and provide the expected `vc_ld` models. This service file contains a function for each route to which I pass the `web.request` object and process accordingly. The routes file will be used to process schema validations and error handling.\r\n\r\n@amanji let's have a chat about how to handle requests and validations, you will find my models in the `/vc-api/models` directory",
      "@PatStLouis — looks like this is near ready. Can you pleae update with the base branch so we can merge it?",
      "@swcurran @dbluhm @ianco I'm happy with the state of this PR. I will make a subsequent PR with a postman collection in the demo folder, which will include documentation about these endpoints as well as simple test cases.",
      "Sounds good.  The documentation is missing and that is a concern, so that needs to be added.",
      "> Sounds good. The documentation is missing and that is a concern, so that needs to be added.\r\n\r\nAgree we need the documentation and we can deal with the rest in a subsequent PR.",
      "Sounds good, I will add this tonight, I will put a small abstract on the main readme with a link to a page in the demo folder with more information!",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2710) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2710&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2710&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2710)\n\n",
      "@dbluhm I added a manger test for the storage function",
      "@ianco — are your change requests ok now?",
      "@PatStLouis if you want to do one final merge of main, I've enabled auto merge so we can get this merged in next.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2710) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2710&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2710&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2710)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2710 from OpSecId/pstlouis/add-vc-api-routes\n\nEnable presentation issuance/verification through vc-api endpoints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d01ac254a19ac2947b0",
    "number": 2707,
    "body": "Bumps [jinja2](https://github.com/pallets/jinja) from 3.1.2 to 3.1.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/releases\">jinja2's releases</a>.</em></p>\n<blockquote>\n<h2>3.1.3</h2>\n<p>This is a fix release for the 3.1.x feature branch.</p>\n<ul>\n<li>Fix for <a href=\"https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95\">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>\n<li>Changes: <a href=\"https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3\">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>\n<li>Milestone: <a href=\"https://github.com/pallets/jinja/milestone/15?closed=1\">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pallets/jinja/blob/main/CHANGES.rst\">jinja2's changelog</a>.</em></p>\n<blockquote>\n<h2>Version 3.1.3</h2>\n<p>Released 2024-01-10</p>\n<ul>\n<li>Fix compiler error when checking if required blocks in parent templates are\nempty. :pr:<code>1858</code></li>\n<li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>\n<li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks\nmore helpful. :pr:<code>1918</code></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1\"><code>d9de4bb</code></a> release version 3.1.3</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc\"><code>50124e1</code></a> skip test pypi</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b\"><code>9ea7222</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde\"><code>da703f7</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/bce174692547464512383ec40e0f8338b8811983\"><code>bce1746</code></a> use trusted publishing</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7277d8068be593deab3555c7c14f974ada373af1\"><code>7277d80</code></a> update pre-commit hooks</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/5c8a10522421270f66376a24ec8e0d6812bc4b14\"><code>5c8a105</code></a> Make nested-trans-block exceptions nicer (<a href=\"https://redirect.github.com/pallets/jinja/issues/1918\">#1918</a>)</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/19a55db3b411343309f2faaffaedbb089e841895\"><code>19a55db</code></a> Make nested-trans-block exceptions nicer</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/716795349a41d4983a9a4771f7d883c96ea17be7\"><code>7167953</code></a> Merge pull request from GHSA-h5c8-rqwp-cp95</li>\n<li><a href=\"https://github.com/pallets/jinja/commit/7dd3680e6eea0d77fde024763657aa4d884ddb23\"><code>7dd3680</code></a> xmlattr filter disallows keys with spaces</li>\n<li>Additional commits viewable in <a href=\"https://github.com/pallets/jinja/compare/3.1.2...3.1.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=3.1.2&new-version=3.1.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/jinja2-3.1.3",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2707) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2707&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2707&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2707)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2707 from hyperledger/dependabot/pip/jinja2-3.1.3\n\nchore(deps): Bump jinja2 from 3.1.2 to 3.1.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d02ac254a19ac2947b1",
    "number": 2706,
    "body": "As a follow up to #2705, this PR implements the example I gave of making `VcLdpManager` pluggable. This may be desirable to, for instance, change the issuance or verification behavior (e.g. using an external service to perform the signature or similar).\r\n\r\nThis is a bit \"heavier\" a change than what is proposed in #2348 in the sense that it would require slightly more effort to define the alternate DID lookup mechanism but I think this would still address the same problem it was seeking to solve. Given the straightforwardness of the change required in ACA-Py to support this, I am more in favor of it being handled this way.",
    "head_branch": "feature/pluggable-vc-ldp-manager",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2706) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2706&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2706&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2706)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2706 from dbluhm/feature/pluggable-vc-ldp-manager\n\nfeat: make VcLdpManager pluggable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d02ac254a19ac2947b2",
    "number": 2705,
    "body": "This PR adds the Profile to the injection context. This enables creating a `ClassProvider` for a class that takes a profile in its init method:\r\n\r\n```python\r\nclass ExamplePluggable:\r\n    def __init__(self, profile: Profile):\r\n        self.profile = profile\r\n    def do_something(self):\r\n        self.profile.notify(\"some:event\", {\"with\": \"data\"})\r\n\r\nasync def setup(context: InjectionContext):\r\n    context.injector.bind_provider(\r\n        ExamplePluggable,\r\n        ClassProvider(ExamplePluggable, ClassProvider.Inject(Profile))\r\n    )\r\n\r\n# ... Somewhere else ...\r\nplugged_in = profile.inject(ExamplePluggable)\r\nplugged_in.do_something()\r\n```\r\n\r\nIt's a common pattern to create a class with a profile instance. This will make it easier to turn some of these components into pluggable components. For example, the `VcLdpManager`. At the moment, it's created directly where it's needed:\r\n\r\n```python\r\nmanager = VcLdpManager(self.profile)\r\n# do something with manager\r\n```\r\n\r\nWith this change, I can create an (override-able) class provider for VcLdpManager, which changes the above into:\r\n\r\n```python\r\nmanager = self.profile.inject(VcLdpManager)\r\n# do something with manager\r\n```\r\n\r\nThe only way this could be done previously was by binding providers in the Profile init method itself. This made it more difficult to make more components pluggable.\r\n\r\nSide note: it's critical that the profile instance be injected as a weak reference or it will never be \"finalized\" (garbage collected) in multitenant contexts.",
    "head_branch": "feature/injected-profile",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2705) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2705&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2705&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2705)\n\n",
      "Feedback on any unforeseen consequences of this are welcome; given that this pattern was kind of present in those profile init bind provider calls, I think it should be fine.",
      "Sorry, mixed up the assignee and reviewer fields... :sweat_smile: "
    ],
    "commit_messages": [
      "Merge pull request #2705 from dbluhm/feature/injected-profile\n\nfeat: inject profile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d03ac254a19ac2947b3",
    "number": 2704,
    "body": "These are some really minor fixes just to make type checking happy and to clarify the use of some values in the VcLdpManager.",
    "head_branch": "fix/vc-ldp-manager-types",
    "is_a_fork": true,
    "comments": [
      "Looks good, I see a lot of attributes are marked as Optional, if they were required beforehand, what is the purpose of making them optional?\r\n\r\nOtherwise I just want to point out that technically the term LinkedDataProof was renamed to DataIntegrityProof. Given the structure of the project this would be a pretty big change to implement however it's important to note that when we are referring to linked data proofs here we are in fact talking about data integrity proofs...maybe a note somewhere in the readme could be worthwhile...\r\n[https://w3c.github.io/vc-data-integrity/](https://w3c.github.io/vc-data-integrity/)\r\n[https://www.w3.org/TR/vc-data-model/#data-integrity-proofs](https://www.w3.org/TR/vc-data-model/#data-integrity-proofs)",
      "> Looks good, I see a lot of attributes are marked as Optional, if they were required beforehand, what is the purpose of making them optional?\r\n\r\nGood question; the type hints for the changed parameters all had a default value of `None`. This was intended to indicate that the value was a `str | None` or whatever other type. This was an old convention that ACA-Py followed but is no longer accepted by tools like pyright/pylance. The added `Optional` annotation aligns the type hint with the use of the field, updating it to match what modern type checking tools expect.",
      "> Otherwise I just want to point out that technically the term LinkedDataProof was renamed to DataIntegrityProof. Given the structure of the project this would be a pretty big change to implement however it's important to note that when we are referring to linked data proofs here we are in fact talking about data integrity proofs.\r\n\r\nI think this is a good one for us to file an issue on but probably not something to be addressed by this PR directly, IMO.",
      "I definitely don't think this PR should address this as this would entail a massive restructuring and might become a significant endeavor. Deciding if it's a worthwhile thing to address could be discussed in a separate issue. There's a distinction here between functional coding and proper term definition. AFAIK linked data proofs and data integrity proofs refer to the same thing/concept.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2704) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2704&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2704&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2704)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2704 from dbluhm/fix/vc-ldp-manager-types\n\nfix: minor type hint corrections for VcLdpManager"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d04ac254a19ac2947b4",
    "number": 2700,
    "body": "Resolves: #2118 ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2700) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2700&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2700&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2700)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2700 from WadeBarnes/main\n\nUpdate legacy bcgovimages references."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d05ac254a19ac2947b5",
    "number": 2699,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "remove-vim",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2699) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2699&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2699&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2699)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2699 from swcurran/remove-vim\n\nRemove tiny-vim from being added to the container image to reduce reported vulnerabilities from scanning"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d06ac254a19ac2947b6",
    "number": 2698,
    "body": "Resolves: #1650",
    "head_branch": "amanji/issue1650",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2698) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2698&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2698&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2698)\n\n",
      "@swcurran I am not able to add reviewers to this or assign the PR to myself. Wonder if I need to be added as a contributor?",
      "Added @ianco as the reviewer.  Looks right to me, but lets see what the tests and Ian think."
    ],
    "commit_messages": [
      "Merge pull request #2698 from petridishdev/amanji/issue1650\n\nfix: update constants in TransactionRecord"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d07ac254a19ac2947b7",
    "number": 2696,
    "body": "Open for comments on how to update the long form with the short form. The resolver handles its own mapping, however i'm storing a duplicate DIDInfo, one where the did is long form and another where it's short form (for the same verkey). ",
    "head_branch": "feature/emit-did-peer-4",
    "is_a_fork": true,
    "comments": [
      "Regards the issue of updating the long form to the short.\r\n\r\nI would think that from the start on received DIDs, we want to store the short form on the connection ID, and when we need to resolve a long form, we convert it before looking it up.  Since it is impossible to look up a short form via its long form, I think we should always do that.\r\n\r\nI guess on creation its trickier, since we need to send it to the other party as the long form. Do we ever need to use the long form again after we send it to the other party?  Especially if we assume the other party stores it as a short form (per comment above).\r\n\r\nAlso, do we store the DIDDoc?  If so, is there a DIDDoc to Long Form transformation that would provide a way to get the long form back if ever needed?",
      "Ready for final review. \r\n\r\n@swcurran we currently need the protocol manager class to manage the ins and outs of each protocols behaviour, but that's still going to have maintenance issues if there are interleaved blocks of code handling unqualified, did:peer:2/3 and did:peer:4. \r\n\r\nThere is no code access at the point in time you are referring to, outbound queuing system uses the same values that we are manipulating. so doing any changes after we have gotten a response after sending the long form seems like the best and safest. Sending out the long form and then trying to change the agent's connection record may result in more convoluted behaviour than it's worth. \r\n\r\nThis is definitely something to keep an eye on. \r\n\r\nWe are not storing the did documents at all in storage. The short form did looks up the long form did, resolves that long form did into the document and then makes the appropriate substitutions to make it behave like the specification. ",
      "Got it — thanks.  Sounds good.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2696) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2696&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2696&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2696)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2696 from Jsyro/feature/emit-did-peer-4\n\nFeature/emit did peer 4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d08ac254a19ac2947b8",
    "number": 2694,
    "body": "It was reported by a collegue that when using Out-of-band invitations with the connections handshake protocol, along with a public DID and connection re-use enabled, ACA-Py was only able to handle a single invitations. As if Connection Re-use wasn't working or the multi_use flag was ignored.\r\n\r\nTurns out, we flat out weren't saving the multi_use flag to the database which is a big problem if you want to re-use the invitation. When DID-Exchanged is used, since DID-Exchange allows for a connection-less exchange of information. We only say the behaviour of the OOB Invitation getting deleted if we ran through the receive_reuse_message() method in the manager, which deletes the record if it's not set for multi_use.",
    "head_branch": "fix/connection-reuse",
    "is_a_fork": true,
    "comments": [
      "The changes look good but it would be nice to see some tests for the record demonstrating that the value is definitely stored and recalled. Would also be valuable to include an integration test.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2694) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2694&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2694&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2694)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2694 from frostyfrog/fix/connection-reuse\n\nfix: save multi_use to the DB for OOB invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d08ac254a19ac2947b9",
    "number": 2692,
    "body": "Using https://github.com/decentralized-identity/did-peer-4.\r\n\r\nbased on the behaviour expected by the specification. \r\n\r\nhttps://identity.foundation/peer-did-method-spec/#method-4-short-form-and-long-form",
    "head_branch": "feature/did-peer-4-resolution",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2692) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2692&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2692&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2692)\n\n",
      "Looks good to me, but I defer to @dbluhm on this one.  We’ll want an “emit” capability — that will be a follow up PR?",
      "> Looks good to me, but I defer to @dbluhm on this one. We’ll want an “emit” capability — that will be a follow up PR?\r\n\r\nYes, I planned to add 'emit' functionality in future work when prioritized, but this a change that adds functionality and can be tested !"
    ],
    "commit_messages": [
      "Merge pull request #2692 from Jsyro/feature/did-peer-4-resolution\n\ndid peer 4 resolution"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d09ac254a19ac2947ba",
    "number": 2690,
    "body": "Add examples and descriptions to the swagger docs. Mostly used the indy examples.\r\n\r\nThere was some confusion with request params object attributes with camel vs snake casing. The anoncreds library does camel case like the spec decribes. Everywhere else has snake case. I changed everything so that only the inner anoncreds schema, cred_def and rev_reg_def objects are in camel case. I think this makes things a bit more clear but it is still a bit confusing when you are used to the indy api. \r\n\r\nI changed the POST rev_reg_def endpoint to have a wrapper like schema and cred_def with an options object where you can put the endorser connection id.\r\n\r\nChanged the GET all creds defs return object to be in a wrapper like schemas.\r\n\r\nFixed a couple mistakes and improved the error handling. I think a majority of errors give information about the cause now. Can still get 500 errors with unexpected param values.",
    "head_branch": "anoncred-routes",
    "is_a_fork": true,
    "comments": [
      "> The snake_case vs camelCase changes have me a little nervous since I vaguely recall discussions about the names but I've been away from this long enough that I trust your judgement over my own on the details here. One small comment. Otherwise, LGTM!\r\n\r\nI think the casing caused some confusion when this was getting implemented. The camel casing still applies for the anoncred objects so I'm pretty sure it's good. I basically just removed any discrepancies with search params and outer objects being mixed cases anymore.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2690) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2690&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2690&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2690)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2690 from jamshale/anoncred-routes\n\nImprove api documentation and error handling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d0aac254a19ac2947bb",
    "number": 2689,
    "body": "Bumps [jwcrypto](https://github.com/latchset/jwcrypto) from 1.5.0 to 1.5.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/latchset/jwcrypto/releases\">jwcrypto's releases</a>.</em></p>\n<blockquote>\n<h2>Version 1.5.1 - Security Release</h2>\n<p>This is a minor security release to fix a potential DoS for applications that allow the use of symmetric keys with pbkdf2.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix X22519 import/export from PEM by <a href=\"https://github.com/achamayou\"><code>@​achamayou</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/334\">latchset/jwcrypto#334</a></li>\n<li>Read the Docs now requires a config file by <a href=\"https://github.com/simo5\"><code>@​simo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/335\">latchset/jwcrypto#335</a></li>\n<li>chore: refactor for removing pdb symbols by <a href=\"https://github.com/peppelinux\"><code>@​peppelinux</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/330\">latchset/jwcrypto#330</a></li>\n<li>Fix potential DoS issue with p2c header by <a href=\"https://github.com/simo5\"><code>@​simo5</code></a> in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/336\">latchset/jwcrypto#336</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/achamayou\"><code>@​achamayou</code></a> made their first contribution in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/334\">latchset/jwcrypto#334</a></li>\n<li><a href=\"https://github.com/peppelinux\"><code>@​peppelinux</code></a> made their first contribution in <a href=\"https://redirect.github.com/latchset/jwcrypto/pull/330\">latchset/jwcrypto#330</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/latchset/jwcrypto/compare/v1.5.0...v1.5.1\">https://github.com/latchset/jwcrypto/compare/v1.5.0...v1.5.1</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/8ae0df6538b8d8aa52e82105ec5132d289ad9ddd\"><code>8ae0df6</code></a> Version 1.5.1</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/066d13f2dbac3c0be7aa2a3023189980d56b86ab\"><code>066d13f</code></a> Update Security Policy</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/d2655d370586cb830e49acfb450f87598da60be8\"><code>d2655d3</code></a> Fix potential DoS issue with p2c header</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/6ee0e8915a22f2aed5346ec8a0116ce1cc64349a\"><code>6ee0e89</code></a> chore: arg renamed</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/d64536b102049c6b08bd8ce155a6bf578c653bfa\"><code>d64536b</code></a> chore: refactor for removing pdb symbols</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/ac40895d57422ec4e93cd7c53d430b532448687d\"><code>ac40895</code></a> Read the Docs now requires a config file</li>\n<li><a href=\"https://github.com/latchset/jwcrypto/commit/4c900198a25bbe0c71a9d3a09c8c378920f40887\"><code>4c90019</code></a> Fix X25519 import/export from PEM</li>\n<li>See full diff in <a href=\"https://github.com/latchset/jwcrypto/compare/v1.5.0...v1.5.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jwcrypto&package-manager=pip&previous-version=1.5.0&new-version=1.5.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/jwcrypto-1.5.1",
    "is_a_fork": false,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2689) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2689&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2689&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2689)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2689 from hyperledger/dependabot/pip/jwcrypto-1.5.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d0bac254a19ac2947bc",
    "number": 2688,
    "body": "Adds unit testing for the anoncreds revocation module.\r\n\r\nTried to use the anoncred module as much as possible but when I was having too much trouble I mocked calls that loaded/created objects or converted forms. \r\n\r\nMocked the database/wallet Entry responses a lot with basic classes. Couldn't find a better way to do this or an examples in the repo.\r\n\r\nCoverage is 92%. I tried not to make the tests too brittle but wanted to have good coverage for my own understanding. I'm hoping this will help others trying to understand the code along with having a good testing layout for future refactoring or features.",
    "head_branch": "feat/2685",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2688) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2688&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2688&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2688)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2688 from jamshale/feat/2685\n\nAdd unit tests for anoncreds revocation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d0cac254a19ac2947bd",
    "number": 2687,
    "body": "Rather than manage repo permissions. I'm reopening @dbluhm 's [PR](https://github.com/hyperledger/aries-cloudagent-python/pull/2578) here so I can verify and add/restore tests. \r\n\r\n- [x] Restore Unittests\r\n- [x] Restore integration tests\r\n- [x] Add new unit tests (check initiation with flag, check responding in kind without flag)\r\n- [x] Add new integration tests (check connection with both flags set and one flag set)\r\n",
    "head_branch": "feature/did-peer-2-did-exchange-tested",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2687) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2687&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2687&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2687)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2687 from Jsyro/feature/did-peer-2-did-exchange-tested\n\nEmit did:peer:2 for didexchange"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d0dac254a19ac2947be",
    "number": 2686,
    "body": "This brings in indy-vdr 0.4.1, with better performance on pool refreshes.",
    "head_branch": "upd/vdr-041",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2686) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2686&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2686&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2686)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2686 from andrewwhitehead/upd/vdr-041\n\nUpdate dependencies"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d0eac254a19ac2947bf",
    "number": 2684,
    "body": "Addresses issue #2667.\r\n\r\nInspired by the [did methods documentation](https://github.com/hyperledger/aries-cloudagent-python/blob/main/DIDMethods.md). ",
    "head_branch": "pstlouis/add_did_web_support",
    "is_a_fork": true,
    "comments": [
      "@PatStLouis — please check the Lint test failure.\r\n\r\n@dbluhm — what do you think of this?  OK as a start?",
      "I tested issuance/verification in both single tenant/multitenant modes.\r\n\r\nI had a strange error with verification at first but I'm unable to reproduce it....verification works now using a `did:web` issuer...I'll keep an eye out, here's the error the verification endpoint was returning\r\n`\r\n('Could not expand input before framing.',)\\nType: jsonld.FrameError\\nCause: ('Tried to nullify a context with protected terms outside of a term definition.',)\\nType: jsonld.SyntaxError\\nCode: invalid context nullification  File \\\"/home/aries/.local/lib/python3.9/site-packages/pyld/jsonld.py\\\", line 1032, in frame\\n    expanded = self.expand(input_, options)\\n  File \\\"/home/aries/.local/lib/python3.9/site-packages/pyld/jsonld.py\\\", line 870, in expand\\n    expanded = self._expand(active_ctx, None, document, options,\\n  File \\\"/home/aries/.local/lib/python3.9/site-packages/pyld/jsonld.py\\\", line 2329, in _expand\\n    self._expand_object(\\n  File \\\"/home/aries/.local/lib/python3.9/site-packages/pyld/jsonld.py\\\", line 2728, in _expand_object\\n    expanded_value = self._expand(\\n  File \\\"/home/aries/.local/lib/python3.9/site-packages/pyld/jsonld.py\\\", line 2233, in _expand\\n    e = self._expand(\\n  File \\\"/home/aries/.local/lib/python3.9/site-packages/pyld/jsonld.py\\\", line 2324, in _expand\\n    active_ctx = self._process_context(\\n  File \\\"/home/aries/.local/lib/python3.9/site-packages/pyld/jsonld.py\\\", line 3076, in _process_context\\n    raise JsonLdError(\\n\"\r\n`",
      "I think I found the issue, it seems to be related with the [traceability context url](https://w3id.org/traceability/v1). Trying to verify a vc issued by a `did:web` issuer who has this context included in it's did document seems to raise this strange error. Here's a vc to test (can be verified with other verification services such as the [univerifier](https://univerifier.io/)). Verifying the same vc without the traceability context returns true in aca-py.\r\n```\r\n{\r\n        \"@context\": [\r\n            \"https://www.w3.org/2018/credentials/v1\"\r\n        ],\r\n        \"id\": \"urn:uuid:31288134-1c6a-42a2-aa37-c5c38dea09c0\",\r\n        \"type\": [\r\n            \"VerifiableCredential\"\r\n        ],\r\n        \"issuer\": \"did:web:PatStLouis.github.io\",\r\n        \"issuanceDate\": \"2023-12-19T01:13:13.401Z\",\r\n        \"credentialSubject\": {\r\n            \"id\": \"did:example:123\"\r\n        },\r\n        \"proof\": {\r\n            \"type\": \"Ed25519Signature2018\",\r\n            \"proofPurpose\": \"assertionMethod\",\r\n            \"verificationMethod\": \"did:web:PatStLouis.github.io#verkey\",\r\n            \"created\": \"2023-12-19T01:13:13.401Z\",\r\n            \"jws\": \"eyJhbGciOiAiRWREU0EiLCAiYjY0IjogZmFsc2UsICJjcml0IjogWyJiNjQiXX0..ahIwxPaTgLmUS4aS9nFApVQmx-uklAAR0I-W_-IKzhvMQFmCl0g7etQw3DG8oKqVs-0hlewuCtUxKZGO1GyyBw\"\r\n        }\r\n    }\r\n```",
      "That is quite an `@context` file!!\r\n\r\nACA-Py is now pre-loading contexts — I wonder if that is the issue.  This was recently added in PR #2587 that is part of 0.11.0.  It might be worth trying 0.10.5 to see if the same issue occurs.  Given the pre-loading of context, I’m not sure how contexts that are not pre-loaded are handled.  I assume they are loaded dynamically, but that is not considered “best practice” in JSON-LD land, so perhaps not.  Which of course leads to the question, how does one add ones own contexts to an instance of ACA-Py?",
      "I tried [adding and caching the context in the document loader](https://github.com/OpSecId/aries-cloudagent-python/blob/19e02bfaf4f6c5d2b2790edb783d0f009de546c7/aries_cloudagent/vc/ld_proofs/document_downloader.py#L45) as well and get the same result. Also putting the agent in debug mode doesn't log any errors so this seem unhandled from the `pyld` package. I'm going to try and find out where in the code this verification fails. Now the did core spec **recommends** having a context file for your services, its not required so this won't prevent any test cases AFAIK. The [issue raised](#2677) about the `service.type` being an array does get tested. I'll have a look at the `PyDID` library like @dbluhm suggested to understand the impact.\r\n\r\n```\r\n// Service array is used to look up traceability API service endpoint\r\npm.test(\"Response must include 'service' array\", function() {\r\n    const { service } = pm.response.json().didDocument;\r\n    pm.expect(service).to.be.an('array').that.is.not.empty;\r\n});\r\n```\r\n",
      "@PatStLouis -- can you please check on the conflicts?",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2684) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2684&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2684&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2684)\n\n",
      "fixed the conflict between the did:peer and did:web wallet methods"
    ],
    "commit_messages": [
      "Merge pull request #2684 from OpSecId/pstlouis/add_did_web_support\n\nAdd did web method type as a default option"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d0eac254a19ac2947c0",
    "number": 2683,
    "body": "Return a 404 from schema get by id endpoints when the schema is not found.\r\n\r\nThis could probably be applied to other endpoints as well but I'll be going over the anoncreds endpoints in more detail and can look at them when i'm doing that.",
    "head_branch": "feat/1487",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2683) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2683&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2683&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2683)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2683 from jamshale/feat/1487\n\nReturn 404 when schema not found"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d0fac254a19ac2947c1",
    "number": 2679,
    "body": "Fix issue #2678\r\n\r\nBased on 0.11.0rc2 code because when I attempt to use the main branch as the base I am getting an error:\r\n\r\n```\r\n  File \"/app/aries_cloudagent/anoncreds/__init__.py\", line 3, in <module>\r\n    from ..config.injection_context import InjectionContext\r\nImportError: attempted relative import beyond top-level package\r\n```",
    "head_branch": "fix/timezone-aware-utc",
    "is_a_fork": true,
    "comments": [
      "@Ennovate-com — I’ve kicked off the failed integration tests again in case it might have been an intermittent failure. If not, can you please take a look at the failing test?",
      "If tests pass, I'll merge in main and enable auto-merging so we don't have to wait for the int tests again",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2679) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2679&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2679&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2679)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2679 from Ennovate-com/fix/timezone-aware-utc\n\nFix: Change To Use Timezone Aware UTC datetime"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d10ac254a19ac2947c2",
    "number": 2676,
    "body": "The TAA acceptance was being cached at pool level. This caused problems in traction if the tenant changed pods and also TAA acceptance between different tenants in multi-tenant mode.\r\n\r\nMy understanding is limited in this area. \r\nI thought maybe I could cache at a wallet level, but I couldn't find a way to do this currently or any other examples in the code base. So, I inject the cache at profile level and then have a different cache key per wallet/tenant.\r\n\r\nThis will use more cache memory per tenant. Could possibly store the cache for less time.",
    "head_branch": "feat/2668",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2676) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2676&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2676&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2676)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2676 from jamshale/feat/2668\n\nCache TAA by wallet name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d11ac254a19ac2947c3",
    "number": 2674,
    "body": "This PR contains one main document:\r\n\r\n- `AnoncredsW3CCompatibility.md` - the design document for implementing w3c vc/vp format support",
    "head_branch": "design/w3c-compatibility",
    "is_a_fork": true,
    "comments": [
      "@swcurran @TimoGlastra @dbluhm this is the new repo with DCO checks passed.",
      "Thanks for the document and dealing with the DCO issue -- a pain, but now you know it is always needed :-).\r\n\r\nI've added comments -- I hope they help.  As noted, the biggest issue I see for the design is tracing from the Admin API and deciding how to enable emitting an AnonCreds W3C VC/VP format. As well, how a received AnonCreds VC/VP is automatically handled -- triggering the right processing steps.\r\n\r\nThe TBDs are important -- especially the Attachment format to use for the Issue Credential V2 and Present Proof V2 protocols in alignment with AFJ. We all need to work on that.",
      "RFC for Data Integrity issuance attachment: https://github.com/hyperledger/aries-rfcs/pull/809\r\n\r\nWould love to hear your feedback!",
      "Hi All.  I found it challenging to review this via comments and so am proposing we iterate in a different way for a bit.  While there is lots of good content here, I think there are some key overview adjustments needed.  I’m hoping at the call on 2024.01.15 we’ll nail those down.\r\n\r\nTo make it easier to iterate, I’ve copied this into a [HackMD document](https://hackmd.io/@BYJVN-mpSCe5H3eaIw7-7g/ryZDzTbta) that we can collaborate on, and then made what I think are the appropriate revisions.  The main focus of my changes are:\r\n\r\n- What triggers the use of AnonCreds W3C VC/VP Formats?\r\n- What attachment formats are we using for the Issue Credential and Present Proofs v2.0 protocols when handling AnonCreds W3C VC credentials?\r\n- What dependencies are there in getting started? I think they are all now complete.\r\n- What is in scope and out of scope for this effort.\r\n\r\nI’m not the one to say what or how to change the code, but I am trying to use my experience with ACA-Py, AnonCreds, Aries Protocols and VCs to guide the work.\r\n\r\nI hope this helps us finalize the changes needed so that the coding can start.\r\n\r\nFeel free to make changes directly to this document, use the Comment feature, or to add questions/comments directly in the document.  Unfortunately, I didn’t have the “Premium Plan” when I started, but I’ve added that, so we can now track the changes by versions.",
      "I just created a dev release for the AnonCreds RS library, https://github.com/hyperledger/anoncreds-rs/releases/tag/v0.2.0-dev.7, with wrappers for Python and JS. You can from now on use this dev version. If you encounter any issue with the dev release please open an issue in the AnonCreds RS library, so it can be addressed before we make the stable 0.2.0 release soon",
      "@ianco — can you please make the update in ACA-Py to reference the newly published artifact? I’ll add an issue (doh!).",
      "hey @ianco , per the discussion with my team, we don't have a hard set decision on the storage format yet but it might likely be just json-ld as it's a standard for VCs and we'll see in the implementation stage if json-ld needs to be serialized as plain json for necessary encryptions in the wallet and yes I agree that if there is any need to distinguish between the two formats, we can introduce a new parameter to the query.",
      "> hey @ianco , per the discussion with my team, we don't have a hard set decision on the storage format yet but it might likely be just json-ld as it's a standard for VCs and we'll see in the implementation stage if json-ld needs to be serialized as plain json for necessary encryptions in the wallet and yes I agree that if there is any need to distinguish between the two formats, we can introduce a new parameter to the query.\r\n\r\nI guess the actual storage format isn't as important as what is returned from the API's.\r\n\r\nThe existing API's that return anoncreds credentials should include the new anoncreds credentials (received in a W3C \"package\") in the same format as the existing anoncreds credentials.  I.e. it should be a full list of all anoncreds credentials regardless of how they were received.  If the new anoncreds-w3c credentials are stored in a different format, then this API needs to do the conversion.\r\n\r\nRegarding the existing \"w3c\" endpoints, I'm not sure if it makes sense to also include the anoncreds-w3c credentials in this API as well ...",
      "> > hey @ianco , per the discussion with my team, we don't have a hard set decision on the storage format yet but it might likely be just json-ld as it's a standard for VCs and we'll see in the implementation stage if json-ld needs to be serialized as plain json for necessary encryptions in the wallet and yes I agree that if there is any need to distinguish between the two formats, we can introduce a new parameter to the query.\r\n> \r\n> I guess the actual storage format isn't as important as what is returned from the API's.\r\n> \r\n> The existing API's that return anoncreds credentials should include the new anoncreds credentials (received in a W3C \"package\") in the same format as the existing anoncreds credentials. I.e. it should be a full list of all anoncreds credentials regardless of how they were received. If the new anoncreds-w3c credentials are stored in a different format, then this API needs to do the conversion.\r\n> \r\n> Regarding the existing \"w3c\" endpoints, I'm not sure if it makes sense to also include the anoncreds-w3c credentials in this API as well ...\r\n\r\nah yes, I see what you mean now. I agree that the storage format doesn't matter very much as long as it can be properly deserialized. The tags for w3c anoncreds will be a bit different than those for the legacy, which looks like this:\r\n```\r\ntags = {\r\n            \"schema_id\": schema_id,\r\n            \"schema_issuer_did\": schema_id_parts[1],\r\n            \"schema_name\": schema_id_parts[2],\r\n            \"schema_version\": schema_id_parts[3],\r\n            \"issuer_did\": cdef_id_parts[1],\r\n            \"cred_def_id\": cred_def_id,\r\n            \"rev_reg_id\": cred_recvd.rev_reg_id or \"None\",\r\n        }\r\n```\r\nIf I understand this correctly, the mime types of the credential are mapped to this `tags` dictionary before storing it. So, if we can easily distinguish between the two formats by tracking the difference, and it won't change how the API is called to get these credentials I guess. If not, we don't need these w3c endpoints.\r\n",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2674) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2674&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2674&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2674)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2674 from Whats-Cookin/design/w3c-compatibility\n\ndocs: create design doc for adding W3C VC format support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d12ac254a19ac2947c4",
    "number": 2672,
    "body": "Adds unit tests for routes, holder, verifier, issuer.\r\n\r\n![Screenshot from 2023-12-13 10-50-52](https://github.com/hyperledger/aries-cloudagent-python/assets/31809382/96589ed6-0add-4cef-bc64-66974229eacd)\r\n\r\nThere is still more unit testing to do. Mainly the `revocation.py` file. Also, there was a tricky part with scanning the wallet in holder and using `async for` I haven't figured out yet. Also there is some error handling I haven't covered. \r\n\r\nI tried to create objects with the `anoncreds` library as much as possible to catch problems in the future when using the library. When I couldn't manage to make that work I would mock the object a minimally as possible. I also had some trouble creating some DB/wallet `Entry` responses. To get around this i created some minimal class objects. These are used in holder and issuer files.\r\n\r\nI made 2 small changes to src code. In verifier.py changed an error handling message and in holder.py added the mime-types attribute constant that seemed to be missing.\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2672) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2672&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2672&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2672)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2672 from jamshale/main\n\nAnoncreds - Add unit testing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d13ac254a19ac2947c5",
    "number": 2671,
    "body": "This PR contains one main document:\r\n\r\n- `AnoncredsW3CCompatibility.md` - the design document for implementing w3c vc/vp format support",
    "head_branch": "design/w3c-compatibility",
    "is_a_fork": true,
    "comments": [
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2671) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2671&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2671&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2671)\n\n",
      "Hi @tra371 -- the fix for DCO - Developer Certificate of Origin - https://github.com/apps/dco didn't seem to work.  I'd suggest simply closing this PR and opening a new one.\r\n\r\nProbably better to do that before collecting comments.",
      "okay. i'm gonna close this PR and PR #2665 also"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d14ac254a19ac2947c6",
    "number": 2670,
    "body": "This PR addresses  #2669\r\n\r\nThere is currently a validation that prevents credential with only the base type from being signed. The data model spec states that additional credential types are optional. This also prevents conforming to some test-suites where [single credential type](https://github.com/w3c/vc-data-model-2.0-test-suite/blob/main/tests/input/credential-ok.json) credentials are used as test data.\r\n\r\nThis is a minor change with no impact.",
    "head_branch": "pstlouis/allow_single_type_vc",
    "is_a_fork": true,
    "comments": [
      "@dbluhm I fixed the failing test, anything else I would need to do here?",
      "@PatStLouis -- the PR needs to be updated to the base branch before we can merge. Can you please make that change?",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2670) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2670&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2670&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2670)\n\n",
      "@swcurran done, just need to wait for the tests to complete"
    ],
    "commit_messages": [
      "Merge pull request #2670 from OpSecId/pstlouis/allow_single_type_vc\n\nRemove if condition which checks if the `credential.type` array is equal to 1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d14ac254a19ac2947c7",
    "number": 2665,
    "body": "This PR contains one main document:\r\n- `AnoncredsW3CCompatibility.md` - the design document for implementing w3c vc/vp format support",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Cross referencing our design document for AFJ: https://github.com/openwallet-foundation/agent-framework-javascript/discussions/1671",
      "@tra371 reminder on sign-off messages on all commits! The DCO check details has pretty detailed instructions on how to correct. We don't have remediation commits enabled on this repo so the empty commit for DCO will not satisfy the check, unfortunately.",
      "> @tra371 reminder on sign-off messages on all commits! The DCO check details has pretty detailed instructions on how to correct. We don't have remediation commits enabled on this repo so the empty commit for DCO will not satisfy the check, unfortunately.\r\n\r\nyes, i'll fix them in the next few hours. thank you for reminding..",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2665) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2665&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2665&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2665)\n\n",
      "i'm gonna close this PR and create a new one and request your reviews there. @TimoGlastra @dbluhm\r\nsorry about jumping around."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d15ac254a19ac2947c8",
    "number": 2664,
    "body": "Not all cases on issue credential (v1 and v2) were respecting the system default. \r\n\r\nThere was a bug on issue credential v1 where `auto_remove` flag was set then ignored before the record was saved.\r\n\r\n\r\nSo behaviour has been tested for issue credential (v1 & v2) and proof presentation (v1 & v2); exchange records are preserved if the `--preserve-exchange-records` is `true` and `auto_remove` has not been set to `True` on API calls that accept it (ie `send-offer`, `send-request`).\r\n\r\nFixes #2656\r\n",
    "head_branch": "issue_2656_preserve_records_flag",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2664)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2664&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2664) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2664) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2664 from usingtechnology/issue_2656_preserve_records_flag\n\nEnsure \"preserve_exchange_records\" flags are set."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d16ac254a19ac2947c9",
    "number": 2663,
    "body": "Link to image is broken after [RFCs PR#703](https://github.com/hyperledger/aries-rfcs/pull/703) which renamed the \"master\" branch to \"main\". It appears that other references (tree, blob) redirect from the URL containing \"master\" to the equivalent with \"main\", but URLs with \"raw\" do not(‽).",
    "head_branch": "fix/rfcs-master-renamed-main",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2663)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2663&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2663) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2663) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2663 from Ennovate-com/fix/rfcs-master-renamed-main\n\nfix: link to raw content change from master to main"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d17ac254a19ac2947ca",
    "number": 2662,
    "body": "Move the @GHA tag to the scenarios of each test to allow for some fine tuning of what is included in the github actions.  Exclude most of the AnonCreds tests (but keep a representative sample included).  Add tags for Askar vs Askar-anoncreds wallet types.\r\n\r\n\r\n",
    "head_branch": "anoncreds-int-tests-2",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2662)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2662&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2662) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2662) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2662 from ianco/anoncreds-int-tests-2\n\nTweak scope of GHA integration tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d18ac254a19ac2947cb",
    "number": 2661,
    "body": "This PR fixes the openapi generator script after recent changes. I also did some minor cleanup to make the generated openapi more usable.",
    "head_branch": "fix/openapi-cleanup",
    "is_a_fork": true,
    "comments": [
      "@swcurran It looks like we haven't regenerated the openapi in some time, based on how much it changed and the fact that the script was broken lol. I think it would be good to make regeneration a part of the release publishing process, if possible.",
      "Definitely!  Unfortunately, I didn’t know that.  Could you update the PUBLISHING.md file with the instructions and I’ll carry it out?  Just rough notes are sufficient on the first cut and I’ll embellish them as I run through the process.",
      "Pushed the roughest of notes on the process to the `PUBLISHING.md` file",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2661)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2661&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2661) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2661) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2661 from dbluhm/fix/openapi-cleanup\n\nfix: open-api generator script"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d19ac254a19ac2947cc",
    "number": 2660,
    "body": "Review of aca-py integration tests, and include some additional anoncreds scenarios",
    "head_branch": "anoncreds-int-tests",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2660)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2660&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2660) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2660) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2660 from ianco/anoncreds-int-tests\n\nAdditional anoncreds integration tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d1aac254a19ac2947cd",
    "number": 2659,
    "body": null,
    "head_branch": "fix_per_tenant_log",
    "is_a_fork": true,
    "comments": [
      "@WadeBarnes @esune The bdd tests are failing in Github actions but are passing locally with the same config [below]. It appears as if the changes to scripts like `run_bdd` and `run_demo` are not being applied.\r\n`LEDGER_URL=http://test.bcovrin.vonx.io PUBLIC_TAILS_URL=https://tails.vonx.io ./run_bdd -t @GHA`",
      "@shaangill025, According to the logs from the test run, the config is being picked up, but there is a permission issue writing to the logs.  Search the logs for `/home/aries/log` and you'll see it.\r\n\r\nIt looks like the `logs` folder is being created by the `Dockerfile.demo` layer with slightly deferent permissions than the `log` folder at the Dockerfile layer.\r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/8cfe8283ddb2a85e090ea1b8a916df2d78298ec0/docker/Dockerfile.demo#L25\r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/8cfe8283ddb2a85e090ea1b8a916df2d78298ec0/docker/Dockerfile#L86-L87\r\n\r\nI'm building the image and having a closer look at the permissions.",
      "I think I see the issue.  The `run_bdd` script for example, only creates the `../logs` folder and correctly sets the permissions if the `--timing` flag is used, yet the `../logs` folder is always mounted into the container, and the tenant logging expects the permissions to already be set properly.  It's likely working locally for you because the `../logs` folder already exists on your machine and is world writable.\r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/8cfe8283ddb2a85e090ea1b8a916df2d78298ec0/demo/run_bdd#L75-L84",
      "Might I also recommend cleaning up the whole `logs` vs `log` directory creation in the scripts and demo/bdd docker files to keep things consistent with the `log` directory created in the official docker file.  That would help to avoid confusion.",
      "Going to add some comments for discussion.\r\n\r\nMy feeling is that we should *NOT* be automatically creating a log file. I think the deployment should specify a log file with a known location that the deployment can write. Pretty much what was in there before this. The only thing I would keep is the `TimedRotatingFileMultiProcessHandler` with `multitenant` support instead of the basic `FileHandler`. Forcing all deployments and running instances to write to a file is going to cause issues (already has). Trying to determine all the ways the code is deployed or run and set up the correct file location and permissions is not going to be possible. If we are to keep this default file logging then perhaps it should only throw warnings and acapy can start up and run if exceptions are raised while trying to create the log file. \r\n\r\nPretty sure the previous logging code would throw an exception if the specified `--log-file` couldn't be created. And the deployments would be corrected and provide a usable file location. I don't think we need to change that behaviour. And I don't think we should auto-create a log file - the deployment should specify that it wants/needs one and provides the correct location.",
      "Has the per-tenant logging implementation introduced \"always-on logging\"?  If so I agree with @usingtechnology.  Though we still need to be consistent with what's already been defined for the `log` folder so there is a sane default location where the logs can be written without permission errors.",
      "Yes - by default acapy is trying to create a log file. I think we can 2 phase this.\r\n\r\n1. In this PR remove the log file setting `/home/aries/log/acapy-agent.log` in all of the default configurations. Caller/Deployer must specify their log file (`--log-file` or their own `--log-config`).\r\n2. In a separate PR standardize a good default location across all acapy images, including the test images. caller/deployer would still need to specify to create a log file via `--log-file`.\r\n",
      "> Yes - by default acapy is trying to create a log file.\r\n\r\nDefault logging should be to `std-out` like it's always been.  Logging to a file should be an opt-in configuration process, such as when you're explicitly wanting to turn on pre-tenant logging.  ",
      "@WadeBarnes I have done a cleanup on the `log vs logs` issue, but when I try to change the following:\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/4fa281a83491c9e5e6049baa9e49728127895df9/docker/Dockerfile.demo#L25\r\n```\r\noriginal: RUN mkdir demo logs && chown -R aries:aries demo logs && chmod -R ug+rw demo logs\r\nupdated: RUN mkdir -p demo log && chown -R aries:aries demo log && chmod -R ug+rw demo log\r\n```\r\nIt errors out at `chown -R aries:aries demo log`, maybe because it has already been created with permissions [during ACA-Py startup]. Maybe this whole line can be commented out?\r\n",
      "> @WadeBarnes I have done a cleanup on the `log vs logs` issue, but when I try to change the following:\r\n> \r\n> https://github.com/hyperledger/aries-cloudagent-python/blob/4fa281a83491c9e5e6049baa9e49728127895df9/docker/Dockerfile.demo#L25\r\n> \r\n> ```\r\n> original: RUN mkdir demo logs && chown -R aries:aries demo logs && chmod -R ug+rw demo logs\r\n> updated: RUN mkdir -p demo log && chown -R aries:aries demo log && chmod -R ug+rw demo log\r\n> ```\r\n> \r\n> It errors out at `chown -R aries:aries demo log`, maybe because it has already been created with permissions [during ACA-Py startup]. Maybe this whole line can be commented out?\r\n\r\nYes, that would likely be caused by the fact the `log` folder already exists in the base image.\r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/4fa281a83491c9e5e6049baa9e49728127895df9/docker/Dockerfile#L78-L83",
      "I won't do the approval, I will wait on @WadeBarnes to weigh in...\r\n\r\nI did run this through the ways I was having issues previously: locally through the `devcontainer` and locally from the plugins repo. Both run correctly with or without `--log-file`. 👍 \r\n\r\n\r\nI don't understand what is happening in `run_demo` and `run_bdd`. I did see the `log` directory when I did `run_demo`, but didn't see a log file created... `run_bdd` prompt seemed to look for a local log dir? Unclear.  Someone (@WadeBarnes) will need to validate this works as expected.",
      "> I don't understand what is happening in `run_demo` and `run_bdd`. I did see the `log` directory when I did `run_demo`, but didn't see a log file created\r\n\r\nI tried with `./run_demo performance --log-level debug --multitenant --log-file` and `./run_demo faber --log-level debug --multitenant --log-file` and it does create the log file.\r\n\r\nWith `run_bdd`,  features file will have to be updated and `--log-file` added in there (done with commit [050eaf6](https://github.com/hyperledger/aries-cloudagent-python/pull/2659/commits/050eaf68876d5094508446d86b8b3c5071875e8e)).",
      "thanks @shaangill025  - ran the `run_demo` and works like a charm (with and without specifying log file).  ok, good to know about the bdd - I could not see how logging was going to work there, glad it is a future enhancement.\r\n\r\ngood work!",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2659) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2659&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2659&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2659)\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2659 from shaangill025/fix_per_tenant_log\n\nImprove Per Tenant Logging: Fix issues around default log file path"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d1aac254a19ac2947ce",
    "number": 2658,
    "body": "- run on pull_request not push\r\n- only when PRs change /aries_cloudagent files or /docker files.\r\n\r\nNot sure how to test this... \r\n\r\nfixes #2526 ",
    "head_branch": "issue_2526_snyk",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2658)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2658&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2658) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2658) No Duplication information\n\n",
      "thanks @WadeBarnes - guess we will have to keep an eye on execution and file coverage..."
    ],
    "commit_messages": [
      "Merge pull request #2658 from usingtechnology/issue_2526_snyk\n\nUpdate snyk workflow to execute on Pull Request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d1bac254a19ac2947cf",
    "number": 2655,
    "body": "Slight improvement to an error message.  (This confused me as it logged a stack trace during integration testing but didn't report a failed test.  Reason = it's not an error, just a proof validation failure.)\r\n",
    "head_branch": "credx_err_msg_fix",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2655)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2655&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2655) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2655) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2655 from ianco/credx_err_msg_fix\n\nSlight improvement to credx proof validation error message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d1cac254a19ac2947d0",
    "number": 2653,
    "body": "- add current message thread to problem report messages to identify which message/thread encountered the problem.\r\n- problem report handlers will find connections based on thread/request id\r\n- register didx problem report so handler will be active and deal with didx problem reports\r\n- update tests to match new handler logic\r\n\r\nfixes #2650 \r\nfixes #2598\r\n\r\nA lot of underlying issues uncovered (and now addressed) arising from #2530 investigation. \r\n\r\nSynopsis is the implemented logic for sending/handling connection (and didx) problem reports that require a fully working connection. This prevented us from notifying if the problem arose during the request or early response stages. That is addressed by allowing the problem report message types to skip the active check in the responder. Then the next issue was the agent receiving the problem report could not match up their connection, so the sender adds the failing message's thread to the problem report message before delivery, the receiver can then look up connections by a known thread id. Then the DIDX problem report code was always failing when trying to determine the messages targets, so that code was updated to handle diddoc attach conversion to diddoc and then resolve the targets. Then uncovered the fact that the DIDX problem reports (and handler) were not registered in the protocol message registry so those wouldn't get handled when we finally parsed the targets.\r\n\r\nSigh, lots of stuff that just never worked... 🤷 ...hoping that these fixes will be of use when there are issues in the early stages of connecting agents.\r\n",
    "head_branch": "issue_2650_problem_report",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2653)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2653&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2653) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2653) No Duplication information\n\n",
      "Those DIDExchange Manager issues might have been me :sweat_smile: ",
      "> Those DIDExchange Manager issues might have been me 😅\r\n\r\nHaha, no big deal, just makes me wonder about other little corners that haven't had issues arise yet. 😬 "
    ],
    "commit_messages": [
      "Merge pull request #2653 from usingtechnology/issue_2650_problem_report\n\nConnection and DIDX Problem Reports"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d1dac254a19ac2947d1",
    "number": 2651,
    "body": "Final update from the `anoncreds-rs` branch, brings across some integration tests, and also includes a bit of cleanup.\r\n",
    "head_branch": "anoncreds-rs-migrate-4",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2651)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2651&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2651) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2651) No Duplication information\n\n",
      "@ianco — failed test.  Sunspots?  Should we just run it again?",
      "> @ianco — failed test. Sunspots? Should we just run it again?\r\n\r\nI'll take a look",
      "Yah solar flares ...  I've restarted the tests.\r\n\r\nThe error was:\r\n\r\n```\r\n#3/4 Create a new schema/cred def on the ledger\r\nINFO:aiohttp.access:172.17.0.1 [05/Dec/2023:19:18:41 +0000] \"POST /webhooks/topic/connections/ HTTP/1.1\" 200 149 \"-\" \"Python/3.9 aiohttp/3.9.1\"\r\n7hFaber.agent | 2023-12-05 19:18:41,997 aries_cloudagent.ledger.base WARNING Schema already exists on ledger. Returning details.\r\n7hFaber.agent | 2023-12-05 19:18:44,109 aries_cloudagent.core.dispatcher ERROR Handler error: schemas_post\r\n7hFaber.agent | Traceback (most recent call last):\r\n7hFaber.agent |   File \"/home/aries/aries_cloudagent/ledger/indy_vdr.py\", line 372, in _submit\r\n7hFaber.agent |     request_result = await self.pool.handle.submit_request(request)\r\n7hFaber.agent |   File \"/home/aries/.local/lib/python3.9/site-packages/indy_vdr/pool.py\", line 116, in submit_request\r\n7hFaber.agent |     result = await fut\r\n7hFaber.agent |   File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\n7hFaber.agent |     yield self  # This tells Task to wait for completion.\r\n7hFaber.agent |   File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\n7hFaber.agent |     future.result()\r\n7hFaber.agent |   File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\n7hFaber.agent |     raise self._exception\r\n7hFaber.agent | indy_vdr.error.VdrError: Request failed: client request invalid: UnauthorizedClientRequest('Kh9jVJcF38XNdJRxsDtWSS', 1701803921997302404, 'The action is forbidden')\r\n```\r\n\r\n... which doesn't make sense, as the DID was properly registered:\r\n\r\nhttp://test.bcovrin.vonx.io:3707/tx/BCOVRIN_TEST/domain/40230\r\n\r\nMaybe a ledger timing issue?\r\n\r\n",
      "Awesome!!"
    ],
    "commit_messages": [
      "Merge pull request #2651 from ianco/anoncreds-rs-migrate-4\n\nUpdate integration tests for anoncreds-rs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d1eac254a19ac2947d2",
    "number": 2645,
    "body": "This implements a did:jwk resolver. See https://github.com/hyperledger/aries-acapy-plugins/pull/47 for context.",
    "head_branch": "feature/jwk-resolver",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2645)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2645&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2645) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2645) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2645 from dbluhm/feature/jwk-resolver\n\nfeat: add did:jwk resolver"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d1fac254a19ac2947d3",
    "number": 2643,
    "body": "Adds revocation support from the anoncreds-rs branch.  Still a few TODO's but this PR is ready to go and I'll continue the work in the next PR.\r\n",
    "head_branch": "anoncreds-rs-migrate-3",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2643)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2643&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2643) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2643) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2643 from ianco/anoncreds-rs-migrate-3\n\nInitial migration of anoncreds revocation code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d1fac254a19ac2947d4",
    "number": 2642,
    "body": "resolve #2644",
    "head_branch": "didx_oob_improvement",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2642)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2642&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2642) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2642) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2642 from shaangill025/didx_oob_improvement\n\nFeat: DIDX Implicit Request auto-accept and Delete OOB Invitation related records"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d20ac254a19ac2947d5",
    "number": 2638,
    "body": "Couldn't proceed with further local testing on my host. Probably due to differences in python versions. \r\n\r\n```\r\n    self.proc = await asyncio.wait_for(future, 20, loop=loop)\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: wait_for() got an unexpected keyword argument 'loop'\r\n```\r\n\r\nBut pip install works fine now.",
    "head_branch": "fix-demo-deps",
    "is_a_fork": true,
    "comments": [
      "related to #2637 ",
      "What version of Python are you running? Our current target is Python 3.9 but we also test nightly on 3.10. I believe that only hits the PR tests and not the integration tests and I'm not sure the demo reqs would get pulled into those integration tests anyways...",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2638)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2638&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2638) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2638) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2638 from mrkaurelius/fix-demo-deps\n\nfix: update broken demo dependency"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d21ac254a19ac2947d6",
    "number": 2636,
    "body": "Bumps [cryptography](https://github.com/pyca/cryptography) from 41.0.5 to 41.0.6.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst\">cryptography's changelog</a>.</em></p>\n<blockquote>\n<p>41.0.6 - 2023-11-27</p>\n<pre><code>\n* Fixed a null-pointer-dereference and segfault that could occur when loading\n  certificates from a PKCS#7 bundle.  Credit to **pkuzco** for reporting the\n  issue. **CVE-2023-49083**\n<p>.. _v41-0-5:\n</code></pre></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pyca/cryptography/commit/f09c261ca10a31fe41b1262306db7f8f1da0e48a\"><code>f09c261</code></a> 41.0.6 release (<a href=\"https://redirect.github.com/pyca/cryptography/issues/9927\">#9927</a>)</li>\n<li>See full diff in <a href=\"https://github.com/pyca/cryptography/compare/41.0.5...41.0.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cryptography&package-manager=pip&previous-version=41.0.5&new-version=41.0.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/cryptography-41.0.6",
    "is_a_fork": false,
    "comments": [
      "@dependabot rebase",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2636)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2636&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2636) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2636) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2636 from hyperledger/dependabot/pip/cryptography-41.0.6\n\nBump cryptography from 41.0.5 to 41.0.6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d22ac254a19ac2947d7",
    "number": 2635,
    "body": "Bumps [aiohttp](https://github.com/aio-libs/aiohttp) from 3.8.6 to 3.9.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/aio-libs/aiohttp/releases\">aiohttp's releases</a>.</em></p>\n<blockquote>\n<h2>3.9.0</h2>\n<h2>Features</h2>\n<ul>\n<li>\n<p>Introduced <code>AppKey</code> for static typing support of <code>Application</code> storage.\nSee <a href=\"https://docs.aiohttp.org/en/stable/web_advanced.html#application-s-config\">https://docs.aiohttp.org/en/stable/web_advanced.html#application-s-config</a></p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/5864\">#5864</a>)</p>\n</li>\n<li>\n<p>Added a graceful shutdown period which allows pending tasks to complete before the application's cleanup is called.\nThe period can be adjusted with the <code>shutdown_timeout</code> parameter. -- by :user:<code>Dreamsorcerer</code>.\nSee <a href=\"https://docs.aiohttp.org/en/latest/web_advanced.html#graceful-shutdown\">https://docs.aiohttp.org/en/latest/web_advanced.html#graceful-shutdown</a></p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7188\">#7188</a>)</p>\n</li>\n<li>\n<p>Added <code>handler_cancellation &lt;https://docs.aiohttp.org/en/stable/web_advanced.html#web-handler-cancellation&gt;</code>_ parameter to cancel web handler on client disconnection. -- by :user:<code>mosquito</code>\nThis (optionally) reintroduces a feature removed in a previous release.\nRecommended for those looking for an extra level of protection against denial-of-service attacks.</p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7056\">#7056</a>)</p>\n</li>\n<li>\n<p>Added support for setting response header parameters <code>max_line_size</code> and <code>max_field_size</code>.</p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/2304\">#2304</a>)</p>\n</li>\n<li>\n<p>Added <code>auto_decompress</code> parameter to <code>ClientSession.request</code> to override <code>ClientSession._auto_decompress</code>. -- by :user:<code>Daste745</code></p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/3751\">#3751</a>)</p>\n</li>\n<li>\n<p>Changed <code>raise_for_status</code> to allow a coroutine.</p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/3892\">#3892</a>)</p>\n</li>\n<li>\n<p>Added client brotli compression support (optional with runtime check).</p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/5219\">#5219</a>)</p>\n</li>\n<li>\n<p>Added <code>client_max_size</code> to <code>BaseRequest.clone()</code> to allow overriding the request body size. -- :user:<code>anesabml</code>.</p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/5704\">#5704</a>)</p>\n</li>\n<li>\n<p>Added a middleware type alias <code>aiohttp.typedefs.Middleware</code>.</p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/5898\">#5898</a>)</p>\n</li>\n<li>\n<p>Exported <code>HTTPMove</code> which can be used to catch any redirection request\nthat has a location -- :user:<code>dreamsorcerer</code>.</p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/6594\">#6594</a>)</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/aio-libs/aiohttp/blob/master/CHANGES.rst\">aiohttp's changelog</a>.</em></p>\n<blockquote>\n<h1>3.9.0 (2023-11-18)</h1>\n<h2>Features</h2>\n<ul>\n<li>\n<p>Introduced <code>AppKey</code> for static typing support of <code>Application</code> storage.\nSee <a href=\"https://docs.aiohttp.org/en/stable/web_advanced.html#application-s-config\">https://docs.aiohttp.org/en/stable/web_advanced.html#application-s-config</a></p>\n<p><code>[#5864](https://github.com/aio-libs/aiohttp/issues/5864) &lt;https://github.com/aio-libs/aiohttp/issues/5864&gt;</code>_</p>\n</li>\n<li>\n<p>Added a graceful shutdown period which allows pending tasks to complete before the application's cleanup is called.\nThe period can be adjusted with the <code>shutdown_timeout</code> parameter. -- by :user:<code>Dreamsorcerer</code>.\nSee <a href=\"https://docs.aiohttp.org/en/latest/web_advanced.html#graceful-shutdown\">https://docs.aiohttp.org/en/latest/web_advanced.html#graceful-shutdown</a></p>\n<p><code>[#7188](https://github.com/aio-libs/aiohttp/issues/7188) &lt;https://github.com/aio-libs/aiohttp/issues/7188&gt;</code>_</p>\n</li>\n<li>\n<p>Added <code>handler_cancellation &lt;https://docs.aiohttp.org/en/stable/web_advanced.html#web-handler-cancellation&gt;</code>_ parameter to cancel web handler on client disconnection. -- by :user:<code>mosquito</code>\nThis (optionally) reintroduces a feature removed in a previous release.\nRecommended for those looking for an extra level of protection against denial-of-service attacks.</p>\n<p><code>[#7056](https://github.com/aio-libs/aiohttp/issues/7056) &lt;https://github.com/aio-libs/aiohttp/issues/7056&gt;</code>_</p>\n</li>\n<li>\n<p>Added support for setting response header parameters <code>max_line_size</code> and <code>max_field_size</code>.</p>\n<p><code>[#2304](https://github.com/aio-libs/aiohttp/issues/2304) &lt;https://github.com/aio-libs/aiohttp/issues/2304&gt;</code>_</p>\n</li>\n<li>\n<p>Added <code>auto_decompress</code> parameter to <code>ClientSession.request</code> to override <code>ClientSession._auto_decompress</code>. -- by :user:<code>Daste745</code></p>\n<p><code>[#3751](https://github.com/aio-libs/aiohttp/issues/3751) &lt;https://github.com/aio-libs/aiohttp/issues/3751&gt;</code>_</p>\n</li>\n<li>\n<p>Changed <code>raise_for_status</code> to allow a coroutine.</p>\n<p><code>[#3892](https://github.com/aio-libs/aiohttp/issues/3892) &lt;https://github.com/aio-libs/aiohttp/issues/3892&gt;</code>_</p>\n</li>\n<li>\n<p>Added client brotli compression support (optional with runtime check).</p>\n<p><code>[#5219](https://github.com/aio-libs/aiohttp/issues/5219) &lt;https://github.com/aio-libs/aiohttp/issues/5219&gt;</code>_</p>\n</li>\n<li>\n<p>Added <code>client_max_size</code> to <code>BaseRequest.clone()</code> to allow overriding the request body size. -- :user:<code>anesabml</code>.</p>\n<p><code>[#5704](https://github.com/aio-libs/aiohttp/issues/5704) &lt;https://github.com/aio-libs/aiohttp/issues/5704&gt;</code>_</p>\n</li>\n<li>\n<p>Added a middleware type alias <code>aiohttp.typedefs.Middleware</code>.</p>\n<p><code>[#5898](https://github.com/aio-libs/aiohttp/issues/5898) &lt;https://github.com/aio-libs/aiohttp/issues/5898&gt;</code>_</p>\n</li>\n<li>\n<p>Exported <code>HTTPMove</code> which can be used to catch any redirection request\nthat has a location -- :user:<code>dreamsorcerer</code>.</p>\n</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/45b2c2c5773f0ee0d35fce8ff5716c78e91d9135\"><code>45b2c2c</code></a> Release v3.9.0 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7843\">#7843</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/5d59d3d6ac073a7db5e5d2234e03a67da5dec48a\"><code>5d59d3d</code></a> Release v3.9.0rc0 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7840\">#7840</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/c806814a8aaad1661d75e6e2b8d619d6c44d331d\"><code>c806814</code></a> Release v3.9.0rc0 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7838\">#7838</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/e07a1bdaacfb83fda3ea8f668edacb36c6c125df\"><code>e07a1bd</code></a> Use timestamp instead of datetime to achieve faster cookie expiration… (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7837\">#7837</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/53476dfd4ef4fb1bb74a267714bbc39eda71b403\"><code>53476df</code></a> Disallow arbitrary sequence types in version (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7835\">#7835</a>) (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7836\">#7836</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/9d712f2f9c06f71d48e98374938813643503bc34\"><code>9d712f2</code></a> Bump mypy from 1.6.1 to 1.7.0 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7833\">#7833</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/63a805e1d8360fd388b6e6443cd9bdfb139e90ea\"><code>63a805e</code></a> Bump python-on-whales from 0.66.0 to 0.67.0 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7832\">#7832</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/cb94533dd50426809b7fcbb8bbad0ef17509de5c\"><code>cb94533</code></a> Ensure writer is always reset on completion (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7815\">#7815</a>) (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7826\">#7826</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/c0f9017a9a34a7823e1ea9b9abb393bd6c10777b\"><code>c0f9017</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7821\">#7821</a>/366ba40f backport][3.9] Only check origin if insecure scheme and th...</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/9d498ca1e632fe1976ea1dae0ea083b29b0cc4c0\"><code>9d498ca</code></a> Bump sphinx from 7.1.1 to 7.2.6 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7606\">#7606</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/aio-libs/aiohttp/compare/v3.8.6...v3.9.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=aiohttp&package-manager=pip&previous-version=3.8.6&new-version=3.9.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/aiohttp-3.9.0",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2635)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2635&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2635) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2635) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2635 from hyperledger/dependabot/pip/aiohttp-3.9.0\n\nBump aiohttp from 3.8.6 to 3.9.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d23ac254a19ac2947d8",
    "number": 2633,
    "body": null,
    "head_branch": "anoncreds-rs",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2633)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2633&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2633) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2633) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2633 from ianco/anoncreds-rs\n\nAnoncreds rs sync up with main branch"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d24ac254a19ac2947d9",
    "number": 2632,
    "body": "Incorporate the new `askar-anoncreds` wallet type into the Credential and Presentation (`V2.0` only!) endpoints.  Update demo and integration tests and add a document.\r\n\r\nRevocation support (for anoncreds) is still outstanding, this is the next task.",
    "head_branch": "anoncreds-rs-migrate-2",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2632)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2632&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2632) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2632) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2632 from ianco/anoncreds-rs-migrate-2\n\nIntegrate Anoncreds rs into credential and presentation endpoints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d25ac254a19ac2947da",
    "number": 2630,
    "body": "When the verifier agent is unable to apply a constraint filter, it would be helpful for the Problem Report to include a reason why it failed. For example, instead of:\r\n\r\n```\r\nConstraint specified for input_descriptor_123 does not apply to the enclosed credential in $.verifiableCredential[0]\r\n```\r\n\r\n... the message could include the reason that the constraint could not be applied, with the specific path or item that did not match. For example:\r\n\r\n```\r\nConstraint specified for input_descriptor_123 does not apply to the enclosed credential in $.verifiableCredential[0]\r\nReason: Credential is not applicable for field 11111111-2222-3333-4444-56789abcdef0 with paths ['$.credentialSubject.part1.part2']\r\n```\r\n\r\nThis indicates that the field indicated in the message was not found in the Reveal Document or the full Credential.\r\n\r\nor\r\n\r\n```\r\nConstraint specified for input_descriptor_123 does not apply to the enclosed credential in $.verifiableCredential[0]\r\nReason: No field in constraints for part2 under parent path \"$.credentialSubject.part1\"\r\n```\r\n\r\nThis indicates that the \"part2\" property found in the Reveal Document under \"$.credentialSubject.part1\" was not found in the list of fields in the constraints.\r\n",
    "head_branch": "feature/apply-constraint-fail-reason",
    "is_a_fork": true,
    "comments": [
      "I like this suggestion; however, the implementation is a little less \"Pythonic\" than it ought to be. First, the nitpicky comment: variables should be snake_case (`failReason` is what I'm referring to specifically). And second, I think the fail reasons should not be reported as a string from the constraint application method. The semantics are a bit too loose, IMO. I would recommend reporting the fail reason in an exception that is caught by the caller.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2630)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2630&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2630) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2630) No Duplication information\n\n",
      "@dbluhm And, likewise, thanks for the quick feedback and merge. Much appreciated."
    ],
    "commit_messages": [
      "Merge pull request #2630 from Ennovate-com/feature/apply-constraint-fail-reason\n\nFeature Suggestion: Include a Reason When Constraints Cannot Be Applied"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d26ac254a19ac2947db",
    "number": 2629,
    "body": "This file has not been updated for the last two releases, and as such, the ReadTheDocs deployments have not worked. Not the end of the world, but adding this file now in case we do another release, and I forget again. If we don't do another deploy -- no harm done.\r\n",
    "head_branch": "0.10.x",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2629)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2629&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2629) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2629) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2629 from swcurran/0.10.x\n\nUpdate the ReadTheDocs config in case we do another 0.10.x release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d27ac254a19ac2947dc",
    "number": 2628,
    "body": "- fix: unique ids for services in legacy peer\n- fix: unique ids for services in legacy peer\n- fix issue_2477\n- 0.10.2\n- Update version.py\n- Update openapi.json for 0.10.2-rc0\n- Update swagger.json for 0.10.2-rc0\n- fix: update pydid\n- fix: pin typing extensions to workaround known issue\n- 0.10.2\n- parent 49e71c8aae319c7d805160696fecb1bcb85f139d author Shaanjot Gill <gill.shaanjots@gmail.com> 1694204418 +0530 committer Shaanjot Gill <gill.shaanjots@gmail.com> 1695747717 +0530\n- 0.10.3\n- Fixed: https://github.com/hyperledger/aries-cloudagent-python/issues/2531\n- style: minor style correction\n- test: did:key to did:key ref\n- fix: remove redundant transform step\n- 0.10.4\n- fix: report presentation result\n- fix: challenge from request always\n- 0.10.5\n- Update the ReadTheDocs config in case we do another 0.10.x release\n",
    "head_branch": "0.10.x",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2628)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2628&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2628) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2628) No Duplication information\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d28ac254a19ac2947dd",
    "number": 2627,
    "body": "The 0.11.0 release -- including adding the CHANGELOG entries for releases 0.10.2 - 0.10.5 to the main branch CHANGELOG.\r\n",
    "head_branch": "0.11.0",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2627)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2627&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2627) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2627) No Duplication information\n\n",
      "Sorry @dbluhm — found some issues in the Changelog that I needed to clean up. Missed it the first time around."
    ],
    "commit_messages": [
      "Merge pull request #2627 from swcurran/0.11.0\n\n0.11.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d29ac254a19ac2947de",
    "number": 2626,
    "body": "After the recent removal of peer-did-python in #2561, pydid no longer needs to be pinned below 0.4.x. This PR bumps the version to ^0.4.0.",
    "head_branch": "chore/update-pydid",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2626)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2626&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2626) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2626) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2626 from dbluhm/chore/update-pydid\n\nchore: bump pydid version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d2aac254a19ac2947df",
    "number": 2623,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.10.x",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2623)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2623&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2623) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2623) No Duplication information\n\n",
      "Please review/approve (or not) this PR, and I'll hold off merging until after a currently running AATH test run completes."
    ],
    "commit_messages": [
      "Merge pull request #2623 from swcurran/0.10.x\n\n0.10.5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d2aac254a19ac2947e0",
    "number": 2622,
    "body": "This is a backport of #2615 for the 0.10.x branch of releases.",
    "head_branch": "backport/fix/presentations-result-verification",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2622)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2622&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2622) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2622) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2622 from dbluhm/backport/fix/presentations-result-verification\n\nfix(backport): report presentation result"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d2bac254a19ac2947e1",
    "number": 2618,
    "body": "Fixes #2617 ",
    "head_branch": "fix/wallet-help-text",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2618)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2618&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2618) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2618) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2618 from dbluhm/fix/wallet-help-text\n\nfix: wallet type help text out of date"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d2cac254a19ac2947e2",
    "number": 2615,
    "body": "This PR ensures that the result of verifying the presentation for JSON-LD Credentials is factored into the final `verified` status.\r\n\r\ncc @andrewwhitehead  @swcurran ",
    "head_branch": "fix/presentation-result-verification",
    "is_a_fork": true,
    "comments": [
      "I'm expecting the integration tests to fail; I believe the challenge was not being correctly used by the holder side of the exchange previously. I will monitor and address this.",
      "Once this PR is ready (pending a couple more anticipated fixes to get the integration tests failing/succeeding as expected), I will prepare a backport for 0.10.x.",
      "Well shoot, tests passed... I'll look into this",
      "The reason the tests passed when I expected them to fail was the testing I was performing outside of the integration tests happened to hit a slightly different path.\r\n\r\nWhere the integration tests call the `send-presentation` endpoint with a request body like the following:\r\n\r\n```python\r\n{'dif': {'record_ids': {'citizenship_input_1': ['c02fc3be1ec74cb58d9c54f451caa2d2']}}}\r\n```\r\n\r\nMy testing scenario was using:\r\n\r\n```json\r\n{\r\n  \"dif\": {\r\n    \"presentation_definition\": {\r\n      \"format\": {\r\n        \"ldp_vp\": {\r\n          \"proof_type\": [\r\n            \"BbsBlsSignature2020\"\r\n          ]\r\n        }\r\n      },\r\n      \"id\": \"461937c8-d69d-4f5b-9c39-dfa8d9622ea4\",\r\n      \"input_descriptors\": [\r\n        {\r\n          \"constraints\": {\r\n            \"fields\": [\r\n              {\r\n                \"id\": \"1f44d55f-f161-4938-a659-f8026467f126\",\r\n                \"path\": [\r\n                  \"$.credentialSubject.clearance\"\r\n                ],\r\n                \"purpose\": \"Get clearance\"\r\n              }\r\n            ],\r\n            \"is_holder\": [\r\n              {\r\n                \"directive\": \"required\",\r\n                \"field_id\": [\r\n                  \"1f44d55f-f161-4938-a659-f8026467f126\"\r\n                ]\r\n              }\r\n            ],\r\n            \"limit_disclosure\": \"required\"\r\n          },\r\n          \"id\": \"building_access_1\",\r\n          \"name\": \"BuildingAccess\",\r\n          \"schema\": [\r\n            {\r\n              \"uri\": \"https://www.w3.org/2018/credentials#VerifiableCredential\"\r\n            },\r\n            {\r\n              \"uri\": \"https://example.com/examples#Employment\"\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThis resulted in hitting a buggy branch in the `create_pres` method of the dif format handler which caused the generated presentation to be based off of a newly generated random challenge instead of the one sent in the request. This behavior is what I witnessed that alerted me to this issue; even while the challenge was different, the `presentation.verified` was set to `true`. In my testing, the fixes in this PR caused the verified status to correctly come back as `false` and then the small correction I made to the `create_pres` handler fixed the other issue of using a bad challenge nonce.\r\n\r\nI think the changes of this PR should stop here; however, the integration tests for JSON-LD creds are insufficient to get good coverage of the handler code. We should flesh out the JSON-LD tests further.",
      "I need to revert my \"fix\" for the integration test \"then\" step. Turns out the verification was being performed elsewhere.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2615)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2615&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2615) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2615) No Duplication information\n\n",
      "@swcurran this PR is ready for review",
      "@andrewwhitehead — could you please look at this?  I think it looks good, but you should verify.\r\n\r\n@esune — you could look as well, as it doesn’t need a lot of context to review.\r\n\r\n@ianco — I originally tagged you to review, but removed — you have too much to do. :-)",
      "I'll prepare a backport to 0.10.x and will make some noise when it's ready"
    ],
    "commit_messages": [
      "Merge pull request #2615 from dbluhm/fix/presentation-result-verification\n\nfix: report presentation result"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d2dac254a19ac2947e3",
    "number": 2614,
    "body": "fix: typos",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2614)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2614&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2614) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2614) No Duplication information\n\n"
    ],
    "commit_messages": [
      "fix: typos (#2614)\n\n* fix typo\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n* fix typo\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n* fix typo\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n* fix typo\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n* fix typos\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n* fix typo\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n* fix typos\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n* fix typo\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n* fix typos\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n* fix typo\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n* fix typo\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>\r\n\r\n---------\r\n\r\nSigned-off-by: omahs <73983677+omahs@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d2eac254a19ac2947e4",
    "number": 2613,
    "body": "Note the new \"dashless\" rc version number.\r\n",
    "head_branch": "0.11.0rc2",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2613)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2613&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2613) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2613) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2613 from swcurran/0.11.0rc2\n\n0.11.0rc2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d2fac254a19ac2947e5",
    "number": 2612,
    "body": "Minor bug fix: `wallet_update` has a condition:\r\n\r\n```py\r\n    if all(\r\n        v is None for v in (wallet_webhook_urls, wallet_dispatch_type, label, image_url)\r\n    ):\r\n        raise web.HTTPBadRequest(reason=\"At least one parameter is required.\")\r\n```\r\n\r\nThis ignores the newly added `extra_settings`, and so trying to update a wallet with only `extra_settings` in the request raises a faulty Bad Request: \"At least one parameter is required.\"\r\n\r\nThis PR simply adds `extra_settings` to the list of possible parameters.\r\n\r\nEdit: I moved the default value of `extra_settings` to be set in the `get_extra_settings_dict_per_tenant` call. If `extra_settings` defaults to `{}` immediately, then the `v is None` check for `extra_settings` is never True.",
    "head_branch": "fix/update_wallet_w_extra_settings",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2612)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2612&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2612) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2612) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2612 from ff137/fix/update_wallet_w_extra_settings\n\n:bug: fix wallet_update when only `extra_settings` requested"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d30ac254a19ac2947e6",
    "number": 2611,
    "body": "This is an experimental implementation of supporting did:peer:1 resolution. This enables ACA-Py to correctly handle DID Exchange requests from AFJ (AFJ now fails to process our responses since we're not passing back a did:peer, still the unqualified values).\r\n\r\nNotably, this does not support creating or sending did:peer:1, just storing and resolving.\r\n\r\nDetailed changes:\r\n- Storing a DID Document (using base connection manager) no longer first requires parsing as the (soon to be deprecated) DIDDoc class (not PyDID DIDDocument).\r\n  - This alone removes a whole slue of issues that the [`LegacyCorrections`](https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/resolver/default/legacy_peer.py#L27) class was written to deal with.\r\n- Storing the key -> did -> connection mapping is now always delegated to `BaseConnectionManager.record_did`; this helps with consistently handling DIDs\r\n- Fetching a DID Document with `BaseConnectionManager.fetch_did_document` no longer parses the response from the wallet using `DIDDoc`. This helps this call to be a primitive used by DID resolvers that rely on stored documents to resolve DIDs without the DIDDoc parsing logic getting in the way.\r\n- Update the connection record to not require \"Indy\" shaped DIDs\r\n\r\nNote to self, this resolver should have a clean up routine run when the associated connection record is deleted, similar to did:peer:2/3",
    "head_branch": "feature/did-peer-1-resolve",
    "is_a_fork": true,
    "comments": [
      "This is now ready for review! I would like to continue building did:peer:2 support on top of these changes. @swcurran @usingtechnology ",
      "Adding @Jsyro to reviewer.  Can’t give a Maintainer approval, but I can translate… :-)",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2611)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2611&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2611) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2611) No Duplication information\n\n",
      "> Note to self, this resolver should have a clean up routine run when the associated connection record is deleted, similar to did:peer:2/3\r\n\r\nTook a closer look at this. This is a problem that actually just was never solved in the legacy peer case as well. I think fixing this belongs in a future PR. I'll log an issue.",
      "Issue created: https://github.com/hyperledger/aries-cloudagent-python/issues/2654",
      "Looks great, one question though. \r\n\r\nThis maintains existing storage and fetching behaviour of the legacy unqualified DIDDocs, those documents are not going to be converted to did:peer:1? \r\n",
      "\r\n> This maintains existing storage and fetching behaviour of the legacy unqualified DIDDocs, those documents are not going to be converted to did:peer:1?\r\n\r\nNo — existing documents need not be converted, since they are only ever used internally, never with external parties. At some point we might update them, although almost certainly not to did:peer:1.\r\n\r\n"
    ],
    "commit_messages": [
      "Merge pull request #2611 from dbluhm/feature/did-peer-1-resolve\n\nfeat: support resolving did:peer:1 received in did exchange"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d30ac254a19ac2947e7",
    "number": 2609,
    "body": "Fixes #2608.\r\n\r\nThis PR makes the signed attachment verification a bit more resilient. According to [RFC 7515](https://datatracker.ietf.org/doc/html/rfc7515), there's no reason for us to strictly expect a `kid` to be present in the `jwk` and we can verify that the jwk corresponds to the kid in the header trivially. In short, the previous rigidity was unnecessary. This corrects that.",
    "head_branch": "fix/signed-attach-resilience",
    "is_a_fork": true,
    "comments": [
      "@swcurran acknowledging that we're somewhere on the verge of 0.11.0, I have no preference for whether this ends up in this release or a follow up patch release (I'll have other bigger changes queued up for a patch for things like did:peer:2 anyways).",
      "@dbluhm - in Thailand so will not be able to review. Back late November. ",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2609)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2609&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2609) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2609) No Duplication information\n\n",
      "@andrewwhitehead — since @usingtechnology is not around, can you please take a look at this one?  Looks pretty straight forward to me :-)",
      "Looks like the only change is to add a check for the `kid` before using it, instead of just using it. Right?",
      "@swcurran pretty much, yep"
    ],
    "commit_messages": [
      "Merge pull request #2609 from dbluhm/fix/signed-attach-resilience\n\nfix: more resilient checks in verify signed attachments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d31ac254a19ac2947e8",
    "number": 2607,
    "body": null,
    "head_branch": "anoncreds-rs",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2607)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2607&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2607) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2607) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2607 from ianco/anoncreds-rs\n\nAnoncreds rs sync updates from Main"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d32ac254a19ac2947e9",
    "number": 2606,
    "body": "Add logging ",
    "head_branch": "add-logging-for-interop-debug",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2606)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2606&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2606) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2606) No Duplication information\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d33ac254a19ac2947ea",
    "number": 2605,
    "body": "This is a small change in response to [this issue and conversation](https://github.com/hyperledger/aries-cloudagent-python/issues/2597).",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2605)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2605&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2605) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2605) No Duplication information\n\n",
      "@swcurran is there someone on the BC Gov team that has looked at connection-less proofs recently that could spare a minute to check these changes?\r\n\r\nIf not, I'm inclined to go ahead and merge.",
      "> @swcurran is there someone on the BC Gov team that has looked at connection-less proofs recently that could spare a minute to check these changes?\r\n> \r\n> If not, I'm inclined to go ahead and merge.\r\n\r\nMaybe @esune or @andrewwhitehead would like to have a peak. :eyes: ",
      "> @swcurran is there someone on the BC Gov team that has looked at connection-less proofs recently that could spare a minute to check these changes?\r\n> \r\n> If not, I'm inclined to go ahead and merge.\r\n\r\n@popkinj is on the BC Gov team, we triggered this change as we need to receive a problem report for a connection-less proof to handle proof rejection (for VC-AuthN specifically in our case). We are happy to merge! "
    ],
    "commit_messages": [
      "Merge pull request #2605 from popkinj/main\n\nDefault connection_id to None to account for Connectionless Proofs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d34ac254a19ac2947eb",
    "number": 2604,
    "body": "This is a small tweak to correct the type hints on base record and related base classes. These are base classes used widely both within ACA-Py and in plugins. Having these types corrected will solve a cascade of static type checking errors.\r\n\r\nThese aren't strictly necessary errors to fix but they sure make my life as a developer easier.",
    "head_branch": "fix/base-record-types",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2604)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2604&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2604) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2604) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2604 from dbluhm/fix/base-record-types\n\nchore: correct type hints on base record"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d35ac254a19ac2947ec",
    "number": 2603,
    "body": "See PR #2602\r\n\r\nThe black formatter extension was updated last night and the current configuration doesn't work. This simple change corrects the loading error.\r\n\r\n",
    "head_branch": "devcontainer-blackformatter",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2603)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2603&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2603) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2603) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2603 from usingtechnology/devcontainer-blackformatter\n\nblack formatter extension configuration update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d36ac254a19ac2947ed",
    "number": 2602,
    "body": "Bring in changes from commit 48e24043f0a5ad89b5e6e808c26b9552a8856abd.\r\n\r\nUpdates devcontainer to run pytests in Testing view and integrate `ruff` and `black` into the IDE better.\r\n\r\nOne change is in devcontainer.json, setting the black formatter to \"useBundled\"...  They updated their extension last night. The change is also needed in the main branch.\r\n\r\n```\r\nPublished 2022-04-14, 14:24:13\r\nLast released 2023-11-08, 02:11:58\r\nLast updated 2023-11-08, 10:56:39\r\nIdentifier ms-python.black-formatter\r\n```",
    "head_branch": "devcontainer-pytest-ruff-black",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2602)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2602&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2602) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2602) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2602 from usingtechnology/devcontainer-pytest-ruff-black\n\nUpdate Devcontainer pytest ruff black"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d37ac254a19ac2947ee",
    "number": 2601,
    "body": "Bring in changes from commit 48e24043f0a5ad89b5e6e808c26b9552a8856abd.\r\n\r\nUpdates devcontainer to run pytests in Testing view and integrate `ruff` and `black` into the IDE better.\r\n\r\nOne change is in devcontainer.json, setting the black formatted to \"useBundled\"... no idea why that extension just decided there was an issue with the `typing_extensions` lib in the environment but it did. The change also needed in the main branch now 🤷 \r\n\r\nWell, looks like it got updated overnight... sigh.\r\n\r\n```\r\nPublished 2022-04-14, 14:24:13\r\nLast released 2023-11-08, 02:11:58\r\nLast updated 2023-11-08, 10:56:39\r\nIdentifier ms-python.black-formatter\r\n```",
    "head_branch": "devcontainer-ruff-pytest",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2601)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2601&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2601) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2601) No Duplication information\n\n",
      "too many files pulled in, too risky. can make the necessary changes manually"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d38ac254a19ac2947ef",
    "number": 2600,
    "body": "fixes #2530 \r\nfixes #2599\r\n\r\nAdd new problem report handler for connection protocol.\r\n\r\nUpdate the ConnectionManagerError and ConnectionProblemReport to match the same base classes and structure as found in the DIDX protocol. There were issues where the ConnectionManagerErrors were actually failing during marshalling causing problem reports to not get sent. This is addressed by updating the classes and error_codes.\r\n\r\n\r\nThere is still a significant logic gap that I will raise in another issue - ProblemReport delivery requires an existing connection which is means we can't deliver a problem report to indicate the issue is the connection protocol...  but leaving that discussion out of this PR.\r\n\r\n",
    "head_branch": "issue-2530-abandoned-connection",
    "is_a_fork": true,
    "comments": [
      "makes sense to tackle #2599 in this PR. will be adding commits to address that issue.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2600)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2600&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2600) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2600) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2600 from usingtechnology/issue-2530-abandoned-connection\n\nAdd ConnectionProblemReport handler"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d38ac254a19ac2947f0",
    "number": 2596,
    "body": null,
    "head_branch": "anoncreds-rs-migrate-1",
    "is_a_fork": true,
    "comments": [
      "@ianco FYI: all of the AATH ACA-Py to ACA-Py tests pass on for this PR.  ",
      "> @ianco FYI: all of the AATH ACA-Py to ACA-Py tests pass on for this PR.\r\n\r\nThanks for the info!  This is basically a non-destructive PR so that's good news.  There are still a couple of unit tests failing and I need to \"hook in\" the anoncreds stuff so it gets initialized on startup (and also review the unit test coverage of the new code) before this PR is finalized ...",
      "I think this PR is ready to merge.  It adds the new \"anoncreds\" code and is non-destructive (demo, unit and integration tests still run).\r\n\r\nI still need to hook up the anoncreds code to aca-py startup and inventory the unit tests in the new anoncreds package but I think I can do that in the next PR.\r\n",
      "We need to hold off on this until we get the 0.11.0 release completed, so I moved this back to Draft. Reviews are welcome though!!",
      "> We need to hold off on this until we get the 0.11.0 release completed, so I moved this back to Draft. Reviews are welcome though!!\r\n\r\nOK sounds good.  I'll keep working on this PR in the meantime ...",
      "Added a few comments regarding unit test scope, I think we need to add some but not go overboard.  I suggest:\r\n\r\n- updating the routes unit tests (adding tests for the main routes)\r\n- adding unit tests for the main issuer, holder and verifier classes\r\n\r\nThere are already a few tests for the registries, and there are existing tests elsewhere in aca-py similar to the ones we need to add for aca-py, that whoever is going to be working on the unit tests can use as a model.\r\n",
      "Question for @dbluhm @andrewwhitehead @swcurran ...\r\n\r\nFor the V20 credential Format enum (which is defined here:  https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/protocols/issue_credential/v2_0/messages/cred_format.py#L31) ...\r\n\r\n... I had initially thought of adding a new Enum for ANONCREDS (in addition to INDY) but after some noodling in the code I now think the INDY enum should depend on which wallet type is selected (`askar` vs `askar-anoncreds`).\r\n\r\nIf `askar` (the existing code) (or if running wallet type `indy` although this is deprecated):\r\n\r\n```\r\n        INDY = FormatSpec(\r\n            \"hlindy/\",\r\n            V20CredExRecordIndy,\r\n            DeferLoad(\r\n                \"aries_cloudagent.protocols.issue_credential.v2_0\"\r\n                \".formats.indy.handler.IndyCredFormatHandler\"\r\n            ),\r\n        )\r\n```\r\n\r\nIf `askar-anoncreds`:\r\n\r\n```\r\n        INDY = FormatSpec(\r\n            \"hlindy/\",\r\n            V20CredExRecordIndy,\r\n            DeferLoad(\r\n                \"aries_cloudagent.protocols.issue_credential.v2_0\"\r\n                \".formats.anoncreds.handler.AnonCredsCredFormatHandler\"\r\n            ),\r\n        )\r\n```\r\n\r\n@dbluhm  are there differences in the attachment when using the new anoncreds library?\r\n\r\n(PS the `AnonCredsCredFormatHandler` is the updated `IndyCredFormatHandler` from the `anoncreds-rs` branch)",
      "We opted to continue using the existing indy format, at least initially. I think it makes sense to eventually phase out any use of \"indy\" as a stand in for \"anoncreds\" but I think that's a later problem. There are no differences in the attachment when using the anoncreds library.",
      "The fun in this is that if the AnonCreds in W3C format comes in soon enough, perhaps we can just use W3C format for everything…",
      "> The fun in this is that if the AnonCreds in W3C format comes in soon enough, perhaps we can just use W3C format for everything…\r\n\r\nIs this going to affect the wire protocol (agent-to-agent messages) or just the payload to the issue credential api?\r\n",
      "> We opted to continue using the existing indy format, at least initially. I think it makes sense to eventually phase out any use of \"indy\" as a stand in for \"anoncreds\" but I think that's a later problem. There are no differences in the attachment when using the anoncreds library.\r\n\r\nThis is good.  The api format won't be affected by the switch from askar to askar-anoncreds then.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2596)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2596&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2596) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2596) No Duplication information\n\n",
      "@swcurran all tests passed"
    ],
    "commit_messages": [
      "Merge pull request #2596 from ianco/anoncreds-rs-migrate-1\n\nInitial code migration from anoncreds-rs branch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d39ac254a19ac2947f1",
    "number": 2595,
    "body": "Fixes #2570 \r\n\r\nAdding `--ruff` to the `pytest` configuration in `pyproject.toml` adversely affects the `devcontainer`: the Testing view does not load properly (tests are discovered but not listed). It is convenient to have those tests loaded in the Testing view for debugging and troubleshooting, allowing the developer to isolate and repeatedly run individual files/tests quickly.\r\n\r\nOne important caveat is the devcontainer creates its own `.pytest.ini` file (it is gitgnored) which overrides the configuration in [pyproject.toml](./pyproject.toml). `ruff` will ignore this file and continue to use the pyproject configuration. The `ruff` extension is also explicitly configured to use the pyproject configuration. Creating a `.pytest.ini` file when the container is built means that file will continue to exist on the file system outside of the container. So if a developer flips between using the devcontainer and running commands directly on their system they will pick up the `.pytest.ini` file which would not run `ruff` check when calling `python -m pytest .` on the local machine. These changes do *NOT* impact `./scripts/run_tests` or `./scripts/run_tests_indy` - those will continue to use the pyproject configuration.\r\n\r\nThis PR adds extensions for `ruff` and `black`, setting up `black` as the default formatted and integrating `ruff` into the editor/command palette.\r\n\r\nUpdates have been made to the [devcontainer](./devcontainer.md) README to inform users/developers of the changes and caveats.\r\n\r\n*NOTE* - the `ruff` version has been updated to match the extension.\r\n",
    "head_branch": "issue-2570-devcontainer-ruff",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2595)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2595&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2595) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2595) No Duplication information\n\n",
      "@usingtechnology  any way you could merge these changes into the anoncreds-rs branch?  I did a quick check and there are a few conflicts.\r\n",
      "> @usingtechnology any way you could merge these changes into the anoncreds-rs branch? I did a quick check and there are a few conflicts.\r\n\r\nIf that branch is stable today, I can take a crack at it. Probably not too far off..."
    ],
    "commit_messages": [
      "Merge pull request #2595 from usingtechnology/issue-2570-devcontainer-ruff\n\nIssue 2570 devcontainer ruff, black and pytest"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d3aac254a19ac2947f2",
    "number": 2593,
    "body": "Related: #2567 ",
    "head_branch": "indy-anoncreds",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2593)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2593&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2593) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2593) No Duplication information\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d3bac254a19ac2947f3",
    "number": 2591,
    "body": "Add a unit test to ensure goal/goal code are in the encoded invitation URL.\r\n\r\nFixes #2583 ",
    "head_branch": "issue-2583-oob-goal-code",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2591)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2591&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2591) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2591) No Duplication information\n\n",
      "Awesome — thanks.  I was going to make the change myself, but the test — not that.  Nice!"
    ],
    "commit_messages": [
      "Merge pull request #2591 from usingtechnology/issue-2583-oob-goal-code\n\nGoal and Goal Code in invitation URL."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d3cac254a19ac2947f4",
    "number": 2590,
    "body": "Added `if` statement, same as in calling function `create_vp`, to the called function `apply_requirements`. Since the former calls `apply_requirements` in both cases (`if req.nested_req` or not), the called function should handle both cases as well.",
    "head_branch": "fix/TypeError_when_no_nested_requirements",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2590)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2590&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2590) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2590) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2590 from Ennovate-com/fix/TypeError_when_no_nested_requirements\n\nFix Issue #2589 TypeError When There Are No Nested Requirements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d3dac254a19ac2947f5",
    "number": 2588,
    "body": null,
    "head_branch": "anoncreds-rs",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2588)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2588&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2588) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2588) No Duplication information\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d3eac254a19ac2947f6",
    "number": 2587,
    "body": "[Related to this issue](https://github.com/hyperledger/aries-cloudagent-python/issues/2581)\r\n\r\n* Package a list of commonly used contexts \r\n* Replace the context loader from pyld with `StaticCacheJsonLdDownloader`\r\n* `StaticCacheJsonLdDownloader` resolves contexts from local package in priority, then delegates to a downloader\r\n* As of now, `JsonLdDocumentDownloader` and `JsonLdDocumentParser` are simply lifted from pyld in a way that decouples downloading and parsing JSON-LD documents.\r\n* Tests are mostly drafts, waiting for feedback before investing time there.",
    "head_branch": "feature/static-context-cache",
    "is_a_fork": true,
    "comments": [
      "Could you explain the mechanics here?  I’m trying to see the connection between the locally stored file and the URL.\r\n\r\nHow do we detect changes in the static files — at least at build time?  I’m assuming that is a concern.\r\n\r\nPresumably, any tests would fail the build time tests, which is a pain, but better than failing in a production environment :-).\r\n\r\nThis is good stuff — thanks.",
      "> Could you explain the mechanics here? I’m trying to see the connection between the locally stored file and the URL.\r\n\r\nOf course, sorry for the sparse PR description.\r\n\r\nIn essence, the new loader that replaces the `pyld` load checks contexts URLs against a mapping from URL to already loaded documents:\r\n\r\n* `StaticCacheJsonLdDownloader` holds the mapping for known contexts.\r\n* Loading documents from filesystem happens at startup when the conductor binds the `DocumentLoader` instance.\r\n* This loading is implemented within the `StaticCacheJsonLdDownloader` constructor using the `_load_jsonld_file` function.\r\n* Static contexts are bundled within aca-py python package and are stored in the project filestructure (you can see them in `aries_cloudagent/vc/ld_proofs/resources`.\r\n* When aca-py tries to resolve a context, an URL present in the cache results in an immediate response, others go through the code that existed previously\r\n\r\n> How do we detect changes in the static files — at least at build time? I’m assuming that is a concern.\r\n\r\nWe don't and this is the pain of having files statically in the build. We'd need to keep contexts up-to-date. I'm not sure this is a big concern given that contexts are supposed to be versioned rather than changed as far as I understand. The medium term solution for aca-py would be to have the document loader be able to pick contexts from some configuration so that the burden of maintaining this list of known contexts is not solely on aca-py maintainers and contributors.\r\n\r\n> Presumably, any tests would fail the build time tests, which is a pain, but better than failing in a production environment :-).\r\n\r\nAs the files are present within the projects code, build time is unchanged, the only effect is that the package is marginally larger. I might be missing your point here.",
      "Thanks for the overview.  Let us know when you are happy with this one for a review/merge.\r\n\r\nPerhaps the “maintenance” question is a GHA that runs either only when triggered or perhaps on a cron job (once a month?) that checks the pre-loaded contexts against the static files and reports an error on a mismatch.  It would need a good error message since it will happen so rarely :-).",
      "@swcurran for the sake of transparency, I'll let you do the honors of merging this PR since I made some small contributions to it.",
      "I did the merge in the wrong order, so this needs an update to main before it can be merged.  Sorry about that.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2587)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2587&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2587) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2587) No Duplication information\n\n",
      "> I did the merge in the wrong order, so this needs an update to main before it can be merged. Sorry about that.\r\n\r\nI'll consider this an indication of intent to merge and will go ahead and push the button now that this branch is up to date and tests are passing!"
    ],
    "commit_messages": [
      "Merge pull request #2587 from sicpa-dlab/feature/static-context-cache\n\nfeat: use a local static cache for commonly used contexts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d3fac254a19ac2947f7",
    "number": 2585,
    "body": null,
    "head_branch": "anoncreds-rs",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2585)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2585&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2585) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2585) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2585 from ianco/anoncreds-rs\n\nAnother catchup from main"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d40ac254a19ac2947f8",
    "number": 2584,
    "body": "Fixes #2582 \r\n\r\nNeed to have the `poetry` install load `aries-cloudagent` module. So add the source to the image and change the install command to load it.",
    "head_branch": "issue-2582-indytestbuild",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2584)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2584&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2584) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2584) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2584 from usingtechnology/issue-2582-indytestbuild\n\nDockerfile.indy - Include aries_cloudagent code into build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d40ac254a19ac2947f9",
    "number": 2580,
    "body": "This resolves #2579\r\n\r\nThe issue originates at commit 492091ec250e1ec5e66c792f67aebfa2ef177756 on September 6th\r\n\r\n```diff\r\n--- a/aries_cloudagent/version.py\r\n+++ b/aries_cloudagent/version.py\r\n@@ -1,4 +1,6 @@\r\n \"\"\"Library version information.\"\"\"\r\n \r\n-__version__ = \"0.10.1\"\r\n+from importlib import metadata\r\n+\r\n+__version__ = metadata.version(\"aries-cloudagent\")\r\n RECORD_TYPE_ACAPY_VERSION = \"acapy_version\"\r\n --- a/pyproject.toml\r\n+++ b/pyproject.toml\r\n@@ -1,12 +1,12 @@\r\n [tool.poetry]\r\n name = \"aries_cloudagent\"\r\n-version = \"0.10.0-rc0\"\r\n-description = \"\"\r\n+version = \"0.10.1\"\r\n+description = \"Hyperledger Aries Cloud Agent Python (ACA-Py) is a foundation for building decentralized identity applications and services running in non-mobile environments. \"\r\n authors = [\"Hyperledger Aries <aries@lists.hyperledger.org>\"]\r\n license = \"Apache-2.0\"\r\n readme = \"README.md\"\r\n packages = [{include = \"aries_cloudagent\"}]\r\n classifiers = [\r\n             \"Programming Language :: Python :: 3\",\r\n             \"License :: OSI Approved :: Apache Software License\",\r\n \t    \"Operating System :: OS Independent\",\r\n```\r\n\r\nWhich syncs the version with the metadata version\r\n\r\nThis worked as expected until the latest rc where a `-` was introduced in commit 82385d8c18d9a2f9bac6aa00bfcd8f36d73e548c and 08d5a4be938527f8eb9d310e56cf0fead2d0bc63 which both occurred on october 30th \r\n\r\n```diff\r\n--- a/pyproject.toml\r\n+++ b/pyproject.toml\r\n@@ -1,12 +1,12 @@\r\n [tool.poetry]\r\n name = \"aries_cloudagent\"\r\n-version = \"0.11.0-rc0\"\r\n+version = \"0.11.0-rc1\"\r\n description = \"Hyperledger Aries Cloud Agent Python (ACA-Py) is a foundation for building decentralized identity applications and services running in non-mobile environments. \"\r\n authors = [\"Hyperledger Aries <aries@lists.hyperledger.org>\"]\r\n license = \"Apache-2.0\"\r\n readme = \"README.md\"\r\n packages = [{include = \"aries_cloudagent\"}]\r\n classifiers = [\r\n             \"Programming Language :: Python :: 3\",\r\n             \"License :: OSI Approved :: Apache Software License\",\r\n \t    \"Operating System :: OS Independent\",\r\n```\r\n\r\nWhile this will not automatically track with the version in `pyproject.toml` it is the best known option for restoring the `-` in release candidate versions.",
    "head_branch": "restore-hyphen-for-rc-version",
    "is_a_fork": true,
    "comments": [
      "Why does the `metadata.version` method strip off the “-“.  I’d rather not have yet another place to update the version for each release, so I like the use of the function to get it from the TOML file, but why does it strip off the “-“.  All of our RC releases have used “-“s, so I’d rather not drop that if we can avoid it.\r\n\r\nShouldn’t metadata.version retrieve and pass the version without change?",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2580)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2580&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2580) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2580) No Duplication information\n\n",
      "@swcurran I think this comes down to how prerelease separators are normalized https://peps.python.org/pep-0440/#pre-release-separators",
      "> @swcurran I think this comes down to how prerelease separators are normalized https://peps.python.org/pep-0440/#pre-release-separators\r\n\r\nWhile I like the \"look\" of a `-` separated pre-release, I wonder if we should just follow the official normalization rules and fix this downstream instead rather than having custom handling. Would we be able to pull the non-normalized release version number?",
      "> Would we be able to pull the non-normalized release version number? \r\n\r\nLooking into this now. However, from my findings no",
      "While it may be uncomfortable, I'm in favor of following PEP 440 rules for release candidate versioning. I think that's most likely to cause the least long-term grief.",
      "Sounds good to me.  So we drop the “-“  and make it “0.11.0rc1” in the release?  I just like the idea of being deliberate vs. adding yet another place where we’re tracking the version.\r\n\r\n@WadeBarnes — do you see a problem with us doing that?",
      "@WadeBarnes — or to ask more specifically — are we going to have a problem with the artifact publishing if we do that?  Anything we need to change?",
      "> Sounds good to me. So we drop the “-“ and make it “0.11.0rc1” in the release? I just like the idea of being deliberate vs. adding yet another place where we’re tracking the version.\r\n\r\nCouldn't agree more. I personally was not in love with this solution. It was just the quickest non breaking solution.",
      "It looks like dropping the `-` should not affect anything."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d41ac254a19ac2947fa",
    "number": 2578,
    "body": "This PR implements did:peer:2 support for DID Exchange. If the `--emit-did-peer-2` flag is set, ACA-Py will create and send a did:peer:2 DID instead of an unqualified DID and an attached Document in DID Exchange messages.\r\n\r\nThis PR also implements the `did_rotate~attach` from the [proposed DID Exchange v1.1](https://github.com/hyperledger/aries-rfcs/pull/795). It will include the `did_rotate~attach` attribute on responses when relevant and will expect to receive them on responses as well.\r\n\r\nTo achieve this, the following changes were made:\r\n- Add `wallet.create_key`. `create_key` is just a more generic `create_signing_key`. Literally no difference in implementation; it just seemed an inappropriate name for how it was being used. I can be convinced that we should not do this.\r\n- Add `wallet.store_did`. This enables us to more easily create DIDs outside of the wallet. The `wallet.create_local_did` method is starting to get a bit complicated. Rather than shoehorning all DID creation into the wallet interface, I think it makes sense to transition to a system where the wallet creates the primitives (such as keys) but then the creation of the DID itself is performed outside of the wallet. This was especially necessary because, in order to create a did:peer:2, we also need service info which can differ per connection (mediation used or not, for instance) and the wallet is simply not aware of the concept of services nor the context of the connection and associated mediation records. As part of an early pass, I even went as far as to introduce a DID Registration interface (which makes this attempt perhaps my third one in recent memory). I continue to struggle to create an interface that is generic enough to enable registering DIDs using plugged in registrars but still actually be useful. The requirements between methods varies so widely that the interface becomes nearly useless (at least in the context of ACA-Py). I'm finding it more reasonable to simply call a specific \"registrar\" directly. In these changes for did:peer:2, this is simply calling into the did-peer-2 library's `generate` method.\r\n- Add `--emit-did-peer-2` flag and associated setting.\r\n- Add support for easily creating an attachment with `text/string` mime type, as is used in the `did_rotate~attach`.\r\n- Add the `PEER2` DID Method definition\r\n\r\nOpening as a draft since, at the time of opening, this hasn't been thoroughly exercised by tests yet.",
    "head_branch": "feature/did-peer-2-did-exchange",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2578)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2578) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2578) No Duplication information\n\n",
      "@ianco I made a change to the integration tests to allow me to pass an arbitrary flag down through the layers to the start up of the agent. Thoughts on this approach? It seemed like it would be simpler to do this than to add flags all the way down the stack.",
      "> @ianco I made a change to the integration tests to allow me to pass an arbitrary flag down through the layers to the start up of the agent. Thoughts on this approach? It seemed like it would be simpler to do this than to add flags all the way down the stack.\r\n\r\nYes I think this is a good idea.  Will this work when running the alice/faber demo as well?",
      "I haven't gotten myself familiar enough with the demo yet to say for sure :sweat_smile: So that probably means it's not usable from the demo at this point.",
      "## [![Quality Gate Passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/qg-passed-20px.png 'Quality Gate Passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2578) **Quality Gate passed**  \nKudos, no new issues were introduced!\n\n[0 New issues](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&inNewCodePeriod=true)  \n[0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2578&resolved=false&inNewCodePeriod=true)  \nNo data about Coverage  \nNo data about Duplication  \n  \n[See analysis details on SonarCloud](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2578)\n\n",
      "> I haven't gotten myself familiar enough with the demo yet to say for sure 😅 So that probably means it's not usable from the demo at this point.\r\n\r\nNo problem ping me when the PR is ready for review and I'll take a look ...",
      "Merged in https://github.com/hyperledger/aries-cloudagent-python/pull/2687. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d42ac254a19ac2947fb",
    "number": 2577,
    "body": "See #2549 \r\n\r\nAddress the situation when an issuer sends an offer and then deletes that offer (credential exchange) before the holder accepts it. When this is an `indy` credential exchange, a Problem Report is sent; when this is a `json-ld` exchange, the holder's accept actually becomes an unbound request for the credential and the flow carries on.\r\n\r\nA discussion is warranted to see if we want to implement something more global? Seems like at any point in any protocol one side may not find their record and the other side should be notified of the abandonment. Maybe it is already done and this was just a gap...\r\n\r\nAdded BDD tests to address the deletion and followup acceptance for `indy` and `json-ld` and also the holder sending a request for credential to issuer. Again, `indy` is not allowed, `json-ld` can flow into a credential issuance.",
    "head_branch": "issue-2549-cred-request-deleted",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2577)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2577&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2577) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2577) No Duplication information\n\n",
      "@dbluhm - just bumping this for another review. added your suggestions and then put a similar exception handling in the v1 code."
    ],
    "commit_messages": [
      "Merge pull request #2577 from usingtechnology/issue-2549-cred-request-deleted\n\nSend Problem report when CredEx not found"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d43ac254a19ac2947fc",
    "number": 2576,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.11.0-rc1",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2576)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2576&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2576) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2576) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2576 from swcurran/0.11.0-rc1\n\n0.11.0-rc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d44ac254a19ac2947fd",
    "number": 2575,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.11.0-rc0",
    "is_a_fork": true,
    "comments": [
      "No PR, less files.",
      "In `pyproject.toml`, the `tool.poetry.version` needs adjustment to `0.11.0-rc0`",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2575)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2575&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2575) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2575) No Duplication information\n\n",
      "Thanks — got it this time. Plus a tweak to the changelog."
    ],
    "commit_messages": [
      "Merge pull request #2575 from swcurran/0.11.0-rc0\n\n0.11.0-rc0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d45ac254a19ac2947fe",
    "number": 2574,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n",
    "head_branch": "0.11.0-rc0",
    "is_a_fork": true,
    "comments": [
      "I assume you've already caught this but it looks like a copy of the aries_cloudagent package was included in the docs folder by mistake",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2574)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2574&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2574) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2574) No Duplication information\n\n",
      "I have now -- Doh!! Have to do that to generate the docs, but have a script that SHOULD delete it after. Will verify.",
      "Gotcha! I recommend doing a history rewrite, as a side note. Commits to delete previously committed files means that that copied folder still exists in the history, unfortunately, contributing to bloat of git artifacts (slower clones).",
      "Unfortunately, such git-voodoo is beyond me.  If you know of a way to do it, please let me know. Happy to close this PR and start again, if that would help.\r\n\r\nI have no tie to my fork (no pending PRs), so happy to delete it, create a new one and apply the changes from this PR.  Is that the easiest approach?\r\n",
      "A bit wordy but here's a walkthrough from ChatGPT:\r\n\r\nAlright, to achieve your objective, we'll make use of an interactive rebase. Please make sure you backup your repository or double-check your operations, as history rewriting can potentially cause data loss if done incorrectly. Also, avoid rewriting history on branches shared with others, as this can cause confusion and conflicts.\r\n\r\nHere are the steps:\r\n\r\n1. **Begin an interactive rebase:**  \r\nYou'll want to start the rebase from the commit *before* commit 1. If `commit1` has the hash `abc123` (replace this with the actual hash), you would type:\r\n    ```bash\r\n    git rebase -i abc123^\r\n    ```\r\n\r\n2. **Modify the commit list:**\r\n   You should now see a text editor pop up with a list of commits looking something like this:\r\n    ```\r\n    pick abc123 commit 1 message\r\n    pick def456 commit 2 message\r\n    pick ghi789 commit 3 message\r\n    ```\r\n   To remove the folder from the first commit, edit the word `pick` to `edit` for the line with `commit 1`:\r\n    ```\r\n    edit abc123 commit 1 message\r\n    pick def456 commit 2 message\r\n    ```\r\n\r\n   Save and exit the text editor.\r\n\r\n3. **Remove the folder from commit 1:**  \r\nNow you'll be at the state of `commit 1`. Remove the folder and amend the commit:\r\n    ```bash\r\n    git rm -r foldername   # replace foldername with the name of the folder\r\n    git commit --amend\r\n    ```\r\n\r\n    If you want, you can also edit the commit message to better reflect the changes. Once you're done, save and exit.\r\n\r\n4. **Continue the rebase:**  \r\nTo move on:\r\n    ```bash\r\n    git rebase --continue\r\n    ```\r\n\r\n5. **Remove commit 3:**  \r\nSince commit 3 was just to undo the changes from commit 1, and we've already fixed commit 1, you don't need commit 3 anymore. Start another interactive rebase:\r\n    ```bash\r\n    git rebase -i abc123^\r\n    ```\r\n    And you'll again see a list of commits. Simply delete the line corresponding to `commit 3` to remove it from history:\r\n    ```\r\n    pick abc123 commit 1 amended message (or whatever it is now)\r\n    pick def456 commit 2 message\r\n    ```\r\n\r\n   Save and exit the text editor.\r\n\r\n   After this process, the rebase should be complete, and the folder will never have appeared in the repository's history.\r\n\r\n6. **Push to remote (with caution):**  \r\nIf you've already pushed the old commits to a remote, you'll need to forcefully push these changes since you've rewritten history. \r\n    ```bash\r\n    git push origin branchname --force\r\n    ```\r\n\r\n    ⚠️ **Warning:** Force pushing can overwrite changes in the remote that you don't have locally. Make sure you coordinate with any collaborators and ensure they reset their local branches to match the updated remote branch.\r\n\r\nAnd that's it! The folder will no longer be present in the repository's history.\r\n\r\nSmall amendment from me (Daniel, not ChatGPT); on the first interactive rebase command, you can just put `drop` for the third commit and it will do the same thing as step 5",
      "Thanks!  However, it was much easier just to save the 4 edited files, delete the fork, create a new fork, and a create a new PR.  I think I got it right the second time.\r\n\r\nI will save this in my notebook — hopefully I’ll never need it…\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d46ac254a19ac2947ff",
    "number": 2573,
    "body": "This PR adjusts the version of sd-jwt pulled to be the official release now published to PyPI: https://pypi.org/project/sd-jwt/",
    "head_branch": "chore/sd-jwt-lib-official",
    "is_a_fork": true,
    "comments": [
      "@swcurran I think it would be good to get this in for 0.11.0; assuming tests pass, I think it's a pretty innocuous change and removes the only \"unofficial\"/git dependency we have, which should make integrating with ACA-Py from plugins or elsewhere simpler.",
      "Before or after 0.11.0-rc0?  Does it matter?\r\n",
      "Either way works for me!",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2573)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2573&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2573) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2573) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2573 from dbluhm/chore/sd-jwt-lib-official\n\nchore: point to official sd-jwt lib release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d47ac254a19ac294800",
    "number": 2571,
    "body": "Merge from main up to the point that poetry and ruff are added (commit 9fc598ffe2c406397b30484cb1aa37d6df8ff1cc - see branch https://github.com/ianco/aries-cloudagent-python/tree/ruff_updates_pre)\r\n\r\nSee comment in issue #2567\r\n\r\nAlso merged up to the latest code from main and did a bit of cleanup, there are still some test errors ...\r\n",
    "head_branch": "anoncreds-rs",
    "is_a_fork": true,
    "comments": [
      "This PR has a few failing tests, but overall cleans up most of the differences between the main and anoncreds-rs branch (pulls all updates into the anoncreds-rs branch and updates the ruff formatting)\r\n\r\nAfter this PR is merged there will be about ~100 files that differ between the 2 branches.\r\n\r\nWe can merge this PR \"as is\" and deal with the existing issues (some tests are not running) or I can put a bit more work into the PR to try to get the loose ends all cleared up, interested in some feedback on that ...\r\n",
      "Status - the `./scripts/run_tests` runs cleanly, however `./scripts/run_tests_indy` doesn't run at all.\r\n\r\nThe docker images builds and when the tests run it gets the following error:\r\n\r\n`E   importlib.metadata.PackageNotFoundError: aries-cloudagent`\r\n\r\nNot sure what's going on, I suspect the `poetry install` is installing code somewhere and then `poetry run` is looking for the code somewhere else ...\r\n\r\n@dbluhm can you take a look?  I've compared the docker scripts in the various branches and can't tell what's going wrong ...\r\n",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2571)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2571&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2571) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2571) No Duplication information\n\n",
      "@ianco looking at the GHA run of the tests, I didn't see the ImportError you mentioned; has this been resolved with your most recent push?",
      "@dbluhm  I get the error running locally.  If I run `./scripts/run_tests` everything runs fine but if I run `./scripts/run_tests_indy` then I get the error.  (Both run fine in both the `main` and the current `anoncreds-rs` branch).\r\n\r\nThe GHA just runs `poetry run pytest` it doesn't use either of these scripts.\r\n",
      "i'm also getting it locally, seeing if I can figure it out. complicated dockerfile!",
      "OK it may be happening on `main` as well, I ran a quick test and just got the same error on `main`, I'm just doing a docker purge and re-testing again\r\n",
      "OK confirmed I get the same error in `main`.  Since the whole purpose was to build a dockerfile including indy-sdk and run the relevant tests - and we're ending support for indy-sdk - I suggest we ignore the error.\r\n\r\nWe'll need to review the tests to make sure we're running the full set of tests in GHA (and not just the non-indy-flagged tests).\r\n",
      "@ianco \r\nin `Dockerfile.indy`, change line the `acapy-test` image (line 179). The change is to copy over the aries_cloudagent source and tell poetry to install it all. We need the source directory on the image for a \"full\" poetry install.\r\n\r\n```\r\n# ACA-Py Test\r\n# Used to run ACA-Py unit tests with Indy\r\nFROM indy-base as acapy-test\r\n\r\nUSER indy\r\n\r\nRUN mkdir src test-reports\r\n\r\nWORKDIR /home/indy/src\r\n\r\nRUN mkdir -p test-reports && chown -R indy:indy test-reports && chmod -R ug+rw test-reports\r\n\r\nADD ./README.md pyproject.toml ./poetry.lock ./\r\nCOPY ./aries_cloudagent/ ./aries_cloudagent/\r\n\r\nUSER root\r\nRUN pip install --no-cache-dir poetry\r\nRUN poetry install --no-directory -E \"askar bbs indy\"\r\n\r\nADD --chown=indy:root . .\r\nUSER indy\r\n\r\nENTRYPOINT [\"/bin/bash\", \"-c\", \"poetry run pytest \\\"$@\\\"\", \"--\"]\r\n```",
      "@usingtechnology  Sounds like that fix might need to be added to the main branch?"
    ],
    "commit_messages": [
      "Merge pull request #2571 from ianco/anoncreds-rs\n\nAnoncreds rs merge from main up to the latest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d48ac254a19ac294801",
    "number": 2566,
    "body": "I felt like doing something tedious and mind-numbing (only mostly joking; macros and `:bufdo`/`:cfdo` combined with ruff made this go pretty quick) so I took a stab at removing asynctest and replacing it with the `IsolatedAsyncioTestCase` and `AsyncMock` objects now included in the builtin `unittest` package.\r\n\r\nFixes #1717 \r\n\r\nGiven that there are other PRs currently open (and others in the works, I'm sure), I'll describe the general process I followed (updated):\r\n\r\n- For all files using `CoroutineMock`, import it from `aries_cloudagent.tests.mock` instead of `unittest.mock` or `asynctest.mock`.\r\n- For all files containing `AsyncTest`:\r\n  - Replace `AsyncTest` in the class bases with `IsolatedAsyncioTestCase`\r\n  - Replace `async def setUp` to `async def asyncSetUp`\r\n- Watch the warnings printed by pytest carefully to see if the updated tests emit a `\"such_and_such\" was never awaited` warning. This should be fixed:\r\n  - Enable tracemalloc (I added `-e PYTHONTRACEMALLOC=5` to the command in `scripts/run_tests`)\r\n  - Using the traceback, locate the coroutine that wasn't awaited. Usually this is the result of a wonky mock. More completely mocking and setting the return values of async mocks should help.\r\n\r\n~~There's a relatively small number of failing tests right now so opening as draft but I wanted to put this on the radar.~~ No failing tests but still working through warnings.",
    "head_branch": "chore/drop-asynctest",
    "is_a_fork": true,
    "comments": [
      "Hiccup: AsyncMock returns AsyncMocks when called. CoroutineMock behaved more like an AsyncMock that returns MagicMocks. I'll see if I can provide a simple adapter since this has pretty drastic effects on some tests.",
      "I'm discovering a frightening number of tests that were silently broken. I think the AsyncMock update is making this particular category of issue more obvious thanks to warnings it will emit when the coroutine isn't awaited. I'll continue to work through those warnings.",
      "This PR is now ready for review. It is obviously a big change but the changes should be straightforward enough to follow. In reviewing these changes, I recommend checking out individual commits rather than viewing all files changed at once.\r\n\r\nGiven the size and the fact that this touches basically every single test module in ACA-Py, I'm more than happy to provide support to the authors of pending PRs to guide them through necessary changes or resolving conflicts.",
      "Yeoman work, @dbluhm — thank you. That was clearly a lot!",
      "BTW — it appears in a quick glance that there is a single non-test update — made to this file: aries_cloudagent/protocols/discovery/v1_0/manager.py\r\n\r\nThat was intended, I assume?",
      "> BTW — it appears in a quick glance that there is a single non-test update — made to this file: aries_cloudagent/protocols/discovery/v1_0/manager.py\r\n> \r\n> That was intended, I assume?\r\n\r\nIt was an intentional change but in retrospect, it probably would have been better to leave it off this PR. The change shouldn't affect anything but better type hints within the changed method. I'll see about striking that change from my commits, just for the sake of keeping everything in this PR strictly about the tests.",
      "I did a spot of history rewriting and reverted the change to the discovery v1 manager. This PR should now be exclusively test changes and fixes.",
      "Doing one last step: removing asynctest as a dependency. Testing locally. I'll push once I've validated that everything looks good.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2566)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2566&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2566) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2566) No Duplication information\n\n",
      "incredible work! i know you don't use the devcontainer, so I will file a follow up ticket to make the tests work within the devcontainer.  it's a `ruff` thing and I just need to figure out the path configuration. \r\n\r\nRun: `poetry run pytest`\r\n\r\nsee messages like: `FAILED aries_cloudagent/wallet/tests/test_util.py::ruff - FileNotFoundError: /home/vscode/.local/bin/ruff` \r\n\r\nIn the devcontainer `ruff` is located:\r\n```\r\n/usr/local/lib/python3.9/site-packages/ruff\r\n/usr/local/bin/ruff\r\n```\r\n\r\nRun: `./scripts/run_tests` works perfectly.  Awesome work. Great knowing that all the tests are properly executing.\r\n"
    ],
    "commit_messages": [
      "Merge pull request #2566 from dbluhm/chore/drop-asynctest\n\nfix: drop asynctest"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d49ac254a19ac294802",
    "number": 2565,
    "body": "This PR is a routine dependency update with the exception of pytest-asyncio and pytest-cov, which were both updated to significantly newer versions.\r\n\r\nI believe this update was postponed previously because of the flake8/ruff stuff.",
    "head_branch": "chore/update-pytest-asyncio",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2565)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2565&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2565) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2565) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2565 from dbluhm/chore/update-pytest-asyncio\n\nchore: dependency updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d4aac254a19ac294803",
    "number": 2564,
    "body": "Sigh... when documenting aries-mediator-service / redid-pq-demo and running through the instructions, I needed to make the playground network external. \r\n\r\nUnclear why it worked fine with the base mediator service and it's network but regardless, this is needed to allow the mediator service with redis demo to work.\r\n\r\nNote that the `ELK_NETWORK_NAME` will always be an external network so adding that notation to always be `true`.",
    "head_branch": "issue-2555-playground-scripts-network",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2564)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2564&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2564) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2564) No Duplication information\n\n",
      "@dbluhm - Sorry about all these small fixes. Thanks for reviewing and merging them!"
    ],
    "commit_messages": [
      "Merge pull request #2564 from usingtechnology/issue-2555-playground-scripts-network\n\nPlayground needs optionally external network"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d4aac254a19ac294804",
    "number": 2563,
    "body": "I just realized that I didn't add my updates to the readme for #2562!\r\n",
    "head_branch": "issue-2555-playground-scripts-readme",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2563)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2563&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2563) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2563) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2563 from usingtechnology/issue-2555-playground-scripts-readme\n\nIssue 2555 playground scripts readme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d4bac254a19ac294805",
    "number": 2562,
    "body": "To simplify (from the end user perspective) usage of the scripts leveraging the playground demo, I've docker-ized them; no more installing requirements (or python for that matter).\r\n\r\nThe scripts themselves are still simple, test that the playground agents are running, illustrate how to connect. When working on the mediator service, we added another script/test that would connect through the mediator service. \r\n\r\nI picked up this \"technique\" from @dbluhm when adding in anoncreds-rs. It was a great way to prove it all worked and illustrated the intended flow/usage.\r\n\r\nThis allows us to get rid of a `requirements.txt` and any PRs for dependabot on that file. Still have a poetry.lock, but those dependabot PRs seem to go smoother.\r\n\r\nCloses #2555 ",
    "head_branch": "issue-2555-playground-scripts",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2562)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2562&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2562) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2562) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2562 from usingtechnology/issue-2555-playground-scripts\n\nUpdate demo/playground scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d4cac254a19ac294806",
    "number": 2561,
    "body": "Speaking frankly, I felt that the peerdid library was a bit overly complicated. On top of that, peerdid is not up to date with the corrections proposed in this PR to the did:peer method specification:\r\n\r\nhttps://github.com/decentralized-identity/peer-did-method-spec/pull/62\r\n\r\ndid-peer-2 is a minimal implementation of did:peer:2 and did:peer:3. It is up to date with the above PR. The corrections to the spec and the library lend themselves to a simpler implementation of the did:peer:2 and did:peer:3 resolvers. This refactor supports work to add did:peer:2 support to OOB + DID Exchange.\r\n\r\nNew in this PR is a cleanup mechanism for the did:peer:3 to did:peer:2 mapping records. When a connection is deleted, we check whether there are any potential mappings to remove.",
    "head_branch": "refactor/did-peer-2",
    "is_a_fork": true,
    "comments": [
      "Integration tests failed. Looking at the logs, it seems like it was a JSON-LD context load failure: https://www.w3.org/2018/credentials/v1 failed to load. I think this is unrelated to my changes so I'm rerunning the action.",
      "Looks good — running the AATH `acapy` runset...",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2561)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2561&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2561) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2561) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2561 from dbluhm/refactor/did-peer-2\n\nrefactor: use did-peer-2 instead of peerdid"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d4dac254a19ac294807",
    "number": 2560,
    "body": "On connection deletion, all records strongly associated with the connection should be deleted. These records include connection metadata, connection requests, and connection invitations.\r\n\r\nRecords referencing the connection ID such as mediation or routing records are not \"strongly\" associated with the connection; there are other mechanisms in place to enable deletion of these records through the Admin API. The records for metadata, requests, and invitations, on the other hand, cannot be cleaned up any other way.\r\n\r\nThis PR makes sure these records are deleted when the connection is deleted.\r\n\r\nIt might be a good idea for us to look at other records that ought to be cleaned up automatically. Those can be addressed in future work.",
    "head_branch": "fix/cleanup-requests-and-invites",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2560)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2560&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2560) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2560) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2560 from dbluhm/fix/cleanup-requests-and-invites\n\nfix: clean up requests and invites"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d4eac254a19ac294808",
    "number": 2559,
    "body": "This replaces the multiformats library with a very basic implementation included directly within ACA-Py. Given that the multiformats library has gone stale and my PR has languished, I think this is a good alternative to using that library. The implementation is very simple and currently only supports the minimum currently required by ACA-Py. Expanding the implementation in the future should be trivial.\r\n\r\nFixes #2501 ",
    "head_branch": "refactor/replace-multiformats",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2559)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2559&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2559) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2559) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2559 from dbluhm/refactor/replace-multiformats\n\nrefactor: replace multiformats library"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d4fac254a19ac294809",
    "number": 2558,
    "body": "- resolve #2441 ",
    "head_branch": "issue_2441",
    "is_a_fork": true,
    "comments": [
      "> Do these changes also account for the scenario where the revocation entry is not published contextually to the call to the `/revocation/revoke` endpoint, but rather using the `/revocation/publish-revocations` endpoint to publish in bulk?\r\n\r\nThanks for pointing this out, now it does.",
      "Not for this issue, but doesn’t the “revoke and publish” and the “publish” endpoints use a common “publish” method?  I would think they would...",
      "> but doesn’t the “revoke and publish” and the “publish” endpoints use a common “publish” method?\r\n- /revocation/revoke\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/2c901a9f1b45e3cca54b3a9f737477ef91a31513/aries_cloudagent/revocation/manager.py#L150\r\n- /revocation/publish-revocations\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/2c901a9f1b45e3cca54b3a9f737477ef91a31513/aries_cloudagent/revocation/manager.py#L242",
      "Any word on when we can look at getting the failing tests resolved?",
      "> Any word on when we can look at getting the failing tests resolved?\r\n\r\n@shaangill025 is looking into them, I'm following-up today to see where we are at",
      "It looks like the new unit tests were written before rebasing on some changes to the test framework. The fix seems to be just renaming 'async_mock' to 'mock' in test_manager.py.",
      "In the integration test it looks like Acme receives a notification that their credential was revoked, but when checking the status it hasn't been updated yet. Could be a timing issue or an unpublished update?",
      "Which is definitely related to the code being changed.",
      "> In the integration test it looks like Acme receives a notification that their credential was revoked, but when checking the status it hasn't been updated yet. Could be a timing issue or an unpublished update?\r\n\r\nThat's what I was wondering. It looks like the workflow was re-run and now only 1 scenario is failing, which seems to be a good candidate for timing issues (but I admit I have not had a chance to look into the test code yet to be 100% sure).",
      "Do we want to try to get this out in a patch release separate from the AnonCreds-RS changes being made on main (in addition to merging this to main)?",
      "> Do we want to try to get this out in a patch release separate from the AnonCreds-RS changes being made on main (in addition to merging this to main)?\r\n\r\nYes, I think this was the strategy we decided to go with. Re-poinintg this to the `0.11.x` branch and merging the result back to main might be the easiest way to go rather than cherry-picking commits, but either way will work.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2558)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2558&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2558) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2558) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2558 from shaangill025/issue_2441\n\nFix: RevRegEntry Transaction Endorsement"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d50ac254a19ac29480a",
    "number": 2557,
    "body": "<p>This PR was automatically created by Snyk using the credentials of a real user.</p><br /><h3>Snyk has created this PR to fix one or more vulnerable packages in the `pip` dependencies of this project.</h3>\n\n\n\n#### Changes included in this PR\n\n- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:\n    - demo/playground/scripts/requirements.txt\n\n\n\n#### Vulnerabilities that will be fixed\n\n\n\n\n\n##### By pinning:\nSeverity                   | Priority Score (*)                   | Issue                   | Upgrade                   | Breaking Change                   | Exploit Maturity\n:-------------------------:|-------------------------|:-------------------------|:-------------------------|:-------------------------|:-------------------------\n![medium severity](https://res.cloudinary.com/snyk/image/upload/w_20,h_20/v1561977819/icon/m.png \"medium severity\")  |  **496/1000**  <br/> **Why?** Recently disclosed, Has a fix available, CVSS 4.2  | Information Exposure Through Sent Data <br/>[SNYK-PYTHON-URLLIB3-6002459](https://snyk.io/vuln/SNYK-PYTHON-URLLIB3-6002459) |  `urllib3:` <br> `2.0.6 -> 2.0.7` <br>  |  No  | No Known Exploit \n\n(*) Note that the real score may have changed since the PR was raised.\n\n\n\n\nSome vulnerabilities couldn't be fully fixed and so Snyk will still find them when the project is tested again. This may be because the vulnerability existed within more than one direct dependency, but not all of the affected dependencies could be upgraded.\n\n\nCheck the changes in this PR to ensure they won't cause issues with your project.\n\n\n\n------------\n\n\n\n**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*\n\nFor more information:  <img src=\"https://api.segment.io/v1/pixel/track?data=eyJ3cml0ZUtleSI6InJyWmxZcEdHY2RyTHZsb0lYd0dUcVg4WkFRTnNCOUEwIiwiYW5vbnltb3VzSWQiOiIwZjk0ZmVhNi0xZjI4LTQwODQtODU3NC01NWIwMTNlNzI4MDYiLCJldmVudCI6IlBSIHZpZXdlZCIsInByb3BlcnRpZXMiOnsicHJJZCI6IjBmOTRmZWE2LTFmMjgtNDA4NC04NTc0LTU1YjAxM2U3MjgwNiJ9fQ==\" width=\"0\" height=\"0\"/>\n🧐 [View latest project report](https://app.snyk.io/org/hyperledger-bot/project/91e9cfad-3cfa-4801-bdbf-fa8afcd5c91d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr)\n\n🛠 [Adjust project settings](https://app.snyk.io/org/hyperledger-bot/project/91e9cfad-3cfa-4801-bdbf-fa8afcd5c91d?utm_source&#x3D;github&amp;utm_medium&#x3D;referral&amp;page&#x3D;fix-pr/settings)\n\n📚 [Read more about Snyk's upgrade and patch logic](https://support.snyk.io/hc/en-us/articles/360003891078-Snyk-patches-to-fix-vulnerabilities)\n\n[//]: # (snyk:metadata:{\"prId\":\"0f94fea6-1f28-4084-8574-55b013e72806\",\"prPublicId\":\"0f94fea6-1f28-4084-8574-55b013e72806\",\"dependencies\":[{\"name\":\"urllib3\",\"from\":\"2.0.6\",\"to\":\"2.0.7\"}],\"packageManager\":\"pip\",\"projectPublicId\":\"91e9cfad-3cfa-4801-bdbf-fa8afcd5c91d\",\"projectUrl\":\"https://app.snyk.io/org/hyperledger-bot/project/91e9cfad-3cfa-4801-bdbf-fa8afcd5c91d?utm_source=github&utm_medium=referral&page=fix-pr\",\"type\":\"auto\",\"patch\":[],\"vulns\":[\"SNYK-PYTHON-URLLIB3-6002459\"],\"upgrade\":[],\"isBreakingChange\":false,\"env\":\"prod\",\"prType\":\"fix\",\"templateVariants\":[\"updated-fix-title\",\"priorityScore\"],\"priorityScoreList\":[496],\"remediationStrategy\":\"vuln\"})\n\n---\n\n**Learn how to fix vulnerabilities with free interactive lessons:**\n\n 🦉 [Learn about vulnerability in an interactive lesson of Snyk Learn.](https://learn.snyk.io/?loc&#x3D;fix-pr)\n",
    "head_branch": "snyk-fix-c39a8bd1fd9630272064ddae09326fe4",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2557)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2557&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2557) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2557) No Duplication information\n\n",
      "Duplicate of #2551 I think.  Will leave for now, but once that is merged, hoping this one goes away.",
      "Compared the change and this PR is the same as #2551 . Closing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d50ac254a19ac29480b",
    "number": 2554,
    "body": "Fixes #2553",
    "head_branch": "fix/taa-rough-timestamp",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2554)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2554&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2554) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2554) No Duplication information\n\n",
      "Integration test failure but I don't think it's caused by these changes. Rerunning. I'll monitor to see if it happens again."
    ],
    "commit_messages": [
      "Merge pull request #2554 from dbluhm/fix/taa-rough-timestamp\n\nfix: taa rough timestamp timezone from datetime"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d51ac254a19ac29480c",
    "number": 2552,
    "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 2.0.6 to 2.0.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>2.0.7</h2>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses. (GHSA-g4mx-q9vg-27p4)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>2.0.7 (2023-10-17)</h1>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/56f01e088dc006c03d4ee6ea9da4ab810f1ed700\"><code>56f01e0</code></a> Release 2.0.7</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3\"><code>4e50fbc</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/80808b04bfa68fbd099828848c96ee25df185f1d\"><code>80808b0</code></a> Fix docs build on Python 3.12 (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3144\">#3144</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/f28deff1cf162c673b50d88d3552e91bda6d68a8\"><code>f28deff</code></a> Add 1.26.17 to the current changelog</li>\n<li>See full diff in <a href=\"https://github.com/urllib3/urllib3/compare/2.0.6...2.0.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=2.0.6&new-version=2.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/urllib3-2.0.7",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2552)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2552&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2552) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2552) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2552 from hyperledger/dependabot/pip/urllib3-2.0.7\n\nchore(deps): Bump urllib3 from 2.0.6 to 2.0.7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d52ac254a19ac29480d",
    "number": 2551,
    "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 2.0.6 to 2.0.7.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>2.0.7</h2>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses. (GHSA-g4mx-q9vg-27p4)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>2.0.7 (2023-10-17)</h1>\n<ul>\n<li>Made body stripped from HTTP requests changing the request method to GET after HTTP 303 &quot;See Other&quot; redirect responses.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/56f01e088dc006c03d4ee6ea9da4ab810f1ed700\"><code>56f01e0</code></a> Release 2.0.7</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/4e50fbc5db74e32cabd5ccc1ab81fc103adfe0b3\"><code>4e50fbc</code></a> Merge pull request from GHSA-g4mx-q9vg-27p4</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/80808b04bfa68fbd099828848c96ee25df185f1d\"><code>80808b0</code></a> Fix docs build on Python 3.12 (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3144\">#3144</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/f28deff1cf162c673b50d88d3552e91bda6d68a8\"><code>f28deff</code></a> Add 1.26.17 to the current changelog</li>\n<li>See full diff in <a href=\"https://github.com/urllib3/urllib3/compare/2.0.6...2.0.7\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=2.0.6&new-version=2.0.7)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/demo/playground/scripts/urllib3-2.0.7",
    "is_a_fork": false,
    "comments": [
      "Bypassed Synk review because it is not working for Dependabot PRs.  Issue #2526 should be completed to address this.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2551)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2551&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2551) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2551) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2551 from hyperledger/dependabot/pip/demo/playground/scripts/urllib3-2.0.7\n\nchore(deps): Bump urllib3 from 2.0.6 to 2.0.7 in /demo/playground/scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d53ac254a19ac29480e",
    "number": 2550,
    "body": "- resolve #2359 \r\n- Derived from work done in #2425 \r\n- Needed to close that PR as the pre-release images in there somehow included legacy code which was removed subsequently.",
    "head_branch": "feat_per_tenant_logging",
    "is_a_fork": true,
    "comments": [
      "@WadeBarnes Can you please create a pre-release image for this PR.",
      "@shaangill025, A prerelease image has been built; https://github.com/hyperledger/aries-cloudagent-python/pkgs/container/aries-cloudagent-python/138271403?tag=py3.9-0.11.0-pr2550-pre0",
      "@shaangill025, based on the testing, it looks like you'll need to update the logging to default to `${HOME}/log` (or `./log`), for example `/home/aries/log/` on the askar only images.  On OCP the non-privilege user can't write to `${HOME}`.",
      "New pre-release image; https://github.com/hyperledger/aries-cloudagent-python/pkgs/container/aries-cloudagent-python/141058880?tag=py3.9-0.11.0-pr2550-pre1",
      "Any word on when we can look at getting the failing tests resolved?",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2550)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2550&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2550) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2550) No Duplication information\n\n",
      "> I am a bit confused about having same settings (e.g.: the log file path) in both `default_per_tenant_logging.ini` and `default_per_tenant_logging.yaml`, but I might be missing something.\r\n\r\nThis is about supporting both `ini` (`logging FileConfig`) and `yml` (`logging DictConfig`) config files. Could use either one of that format.",
      "Awesome — thanks, @shaangill025 .  Thanks for reviewing and merging @esune @dbluhm .\r\n\r\nOne more to go..."
    ],
    "commit_messages": [
      "Merge pull request #2550 from shaangill025/feat_per_tenant_logging\n\nFeat: Per Tenant Logging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d54ac254a19ac29480f",
    "number": 2548,
    "body": "Another fix to this YAML file. Unfortunately, I can't test it without getting it into main (AFAIK...).  Frustrating...\r\n\r\nErrors were dumb in the last try...",
    "head_branch": "swcurran-rtd-2",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2548)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2548&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2548) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2548) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2548 from hyperledger/swcurran-rtd-2\n\nUpdate .readthedocs.yaml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d55ac254a19ac294810",
    "number": 2547,
    "body": "RTD is broken because (I think) missing section of RTD.",
    "head_branch": "swcurran-rtd-fix-1",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2547)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2547&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2547) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2547) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2547 from hyperledger/swcurran-rtd-fix-1\n\nUpdate .readthedocs.yaml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d55ac254a19ac294811",
    "number": 2546,
    "body": "This PR is PoC code for the PR#2540 (https://github.com/hyperledger/aries-cloudagent-python/pull/2540). It shows possible implementation of the `please_ack` decorator support ('option 2' in the document in the PR#2540)",
    "head_branch": "feature/please_ack_poc",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2546)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2546&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2546) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2546) No Duplication information\n\n",
      "Thanks!  Awesome.  Sorry for the silence on this — we’ve been at a conference this week.  We’ll be looking at this next week.  Would you be willing to present your design and implementation at the ACA-Pug meeting this coming Tuesday (2023-10-17, 8:00 Pacific / 17:00 Central Europe)?",
      "> Thanks! Awesome. Sorry for the silence on this — we’ve been at a conference this week. We’ll be looking at this next week. Would you be willing to present your design and implementation at the ACA-Pug meeting this coming Tuesday (2023-10-17, 8:00 Pacific / 17:00 Central Europe)?\r\n\r\nHello @swcurran . Thank you for the answer. I think it's a good idea. I will participate the meeting and share my thoughts/ideas.",
      "Note the lint and failed PR test(s).",
      "The please_ack decorator has been removed from AIP 2. We are unlikely to implement this within ACA-Py in the near future, if at all, without revisiting the decorator and it's behavior in the RFCs."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d56ac254a19ac294812",
    "number": 2545,
    "body": "Previously:\r\n```py\r\n            if await self.is_ledger_read_only():\r\n                raise LedgerError(\r\n                    \"Error cannot write cred def when ledger is in read only mode\"\r\n                )\r\n```\r\n\r\n`is_ledger_read_only` also checks to see if TAA is required, and if not accepted it will also report the ledger is read-only:\r\n```py\r\n    async def is_ledger_read_only(self) -> bool:\r\n        \"\"\"Check if ledger is read-only including TAA.\"\"\"\r\n        if self.read_only:\r\n            return self.read_only\r\n        # if TAA is required and not accepted we should be in read-only mode\r\n        taa = await self.get_txn_author_agreement()\r\n        if taa[\"taa_required\"]:\r\n            taa_acceptance = await self.get_latest_txn_author_acceptance()\r\n            if \"mechanism\" not in taa_acceptance:\r\n                return True\r\n        return self.read_only\r\n```\r\n\r\nTo make this clearer to the user, I updated the relevant error messages to say TAA  may also be the cause of the LedgerError.\r\n\r\ne.g.:\r\n```py\r\n                raise LedgerError(\r\n                    \"Error cannot write cred def when ledger is in read only mode, \"\r\n                    \"or TAA is required and not accepted\"\r\n                )\r\n```",
    "head_branch": "art/improve-ledger-error-message",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2545)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2545&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2545) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2545) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2545 from ff137/art/improve-ledger-error-message\n\n:art: clarify LedgerError message when TAA is required and not accepted"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d57ac254a19ac294813",
    "number": 2544,
    "body": "Fixes some minor spelling typos:\r\n\r\n   Congradulations -> Congratulations\r\n   explicitely -> explicitly\r\n   supprting -> supporting\r\n",
    "head_branch": "fix/minor-typos",
    "is_a_fork": true,
    "comments": [
      "Thanks!",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2544)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2544&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2544) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2544) No Duplication information\n\n",
      "@swcurran Thanks for the merge.\r\n\r\nQuestion: In two places where it's raising exceptions saying:\r\n`\"Unable to get retrieve verification method for did {issuer_id}\"`\r\nshould those instead say:\r\n`\"Unable to retrieve verification method for did {issuer_id}\"`\r\n(ie. \"get\" is redundant when saying \"retrieve\")\r\n",
      "Yup… :-("
    ],
    "commit_messages": [
      "Merge pull request #2544 from Ennovate-com/fix/minor-typos\n\nfix: correct minor typos"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d58ac254a19ac294814",
    "number": 2541,
    "body": "Updates to pytests that were affected by anoncreds-rs updates.\r\n\r\n\r\nSince we have not updated/implemented endorser in the anoncreds-rs branch, I have left endorser related tests as skipped. These are now marked:\r\n\r\n`@pytest.mark.skip(reason=\"anoncreds-rs/endorser breaking change\")`\r\n\r\ncloses #2433\r\n\r\n",
    "head_branch": "anoncreds-rs-pytest-update",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2541)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2541&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2541) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2541) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2541 from usingtechnology/anoncreds-rs-pytest-update\n\nAnoncreds-rs pytest update"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d59ac254a19ac294815",
    "number": 2540,
    "body": "This PR is an attempt to make a start point of discussion how to implement the `please_ack` decorator support in ACA-Py. The PR contains initial version of the document that aims to find the final solution. It contains some thoughts/ideas about possible implementations.",
    "head_branch": "doc/please_ack",
    "is_a_fork": true,
    "comments": [
      "created a PoC (https://github.com/hyperledger/aries-cloudagent-python/pull/2546) for the `option 2` described in the document provided by this PR.",
      "Outstanding document and assessment.  Great work! Sorry it has taken so long for feedback.\r\n\r\nI agree with your assessment on the options, and that 2 and 3 are preferred, with the choice hinging on the question: **do we need to support the please_ack in all messages?**\r\n\r\nLet’s discuss this at the ACA-Pug to seek other opinions, but my view would be that we go with Option 2 (since it appears to be the easiest) and that we limit the implementation to the relevant protocols in AIP 2.0.  In my reading that would include, at most:\r\n\r\n* 0023 DID Exchange\r\n* 0048 Trust Ping — although since it is just a request response, there should be no need for it. Do we care about that?\r\n* 0183 Revocation Notification\r\n* 0434 Out of Band — would not apply to the actual out of band messages, but perhaps to the “reuse” message?\r\n* 0453 Issue Credential v2\r\n* 0454 Present Proof v2\r\n* 0557 Discover Features v2\r\n* 0095 Basic Message\r\n\r\nAssuming the ACK requested is different from any other Ack in the protocol, we may want to ignore the duplication of sending ACKs.\r\n\r\nA relevant question for me is whether a controller is able to decide on a message by message basis whether or not to respond to Please Ack requests.  There could be configuration settings “Always”, “Never”, but should we allow a setting “Maybe” where the controller is given the option on each call?  I lean towards no, but...\r\n\r\n",
      "> Outstanding document and assessment. Great work! Sorry it has taken so long for feedback.\r\n> \r\n> I agree with your assessment on the options, and that 2 and 3 are preferred, with the choice hinging on the question: **do we need to support the please_ack in all messages?**\r\n> \r\n> Let’s discuss this at the ACA-Pug to seek other opinions, but my view would be that we go with Option 2 (since it appears to be the easiest) and that we limit the implementation to the relevant protocols in AIP 2.0. In my reading that would include, at most:\r\n> \r\n> * 0023 DID Exchange\r\n> * 0048 Trust Ping — although since it is just a request response, there should be no need for it. Do we care about that?\r\n> * 0183 Revocation Notification\r\n> * 0434 Out of Band — would not apply to the actual out of band messages, but perhaps to the “reuse” message?\r\n> * 0453 Issue Credential v2\r\n> * 0454 Present Proof v2\r\n> * 0557 Discover Features v2\r\n> * 0095 Basic Message\r\n> \r\n> Assuming the ACK requested is different from any other Ack in the protocol, we may want to ignore the duplication of sending ACKs.\r\n> \r\n> A relevant question for me is whether a controller is able to decide on a message by message basis whether or not to respond to Please Ack requests. There could be configuration settings “Always”, “Never”, but should we allow a setting “Maybe” where the controller is given the option on each call? I lean towards no, but...\r\n\r\nHello @swcurran. Thank you for the review.\r\n\r\nAnswering your questions I think options \"Never\"/\"Maybe\" may be a problem if we speak about `please_ack('OUTCOME')`. Why do I think so? Some protocols (at least, `issue-credential-v2`) relies on the `ack` message to transit to the `done` state.\r\n\r\n[The documentation](https://github.com/hyperledger/aries-rfcs/tree/main/features/0453-issue-credential-v2) says\r\n> the Issuer will move to the credential-issued or done state, depending on whether or not the ~please-ack decorator is included in the message\r\n\r\nIt means that an Issuer will not reach the `done` state if it sends `please_ack(OUTCOME)` but a holder doesn't answer it with an `ack` message. \r\nIn my opinion we should not let a controller to 'break' the protocol.",
      "Good find @alexsdsr — thanks.  Agreed! And it is much easier!",
      "After reviewing the [0317 Please Ack RFC](https://github.com/hyperledger/aries-rfcs/tree/main/features/0317-please-ack) and your excellent investigation into the protocol and the state of ACA-Py, here are my comments and suggestions:\r\n\r\n1. I think we should not in any way alter the states, messages sent, or processing of a protocol just because there is a `~please_ack` decorator on it. The processing of a ~please_ack is independent of the rest of the processing -- an extra message sent when requested.\r\n2. Regards the `on RECEIPT` usage. Based on this line in the RFC `It implicitly means the agent was able to unpack the message`, it would be ideal (if possible...) to detect and process the decorator at that moment, sending an `ack` message, independent of the protocol being used. It would have to go back to the respondent, using the same thread, as an [Explicit ACK using RFC 0015 ACKs](https://github.com/hyperledger/aries-rfcs/blob/main/features/0015-acks/README.md#explicit-acks).  Is that possible in ACA-Py?\r\n   1. Failing that, it would go into the per protocol handling (Option 2) with no impact on the handling of the message other than to send an extra message immediately using the Explicit ACK mentioned above.\r\n\t 2. The message would be from an RFC 0015 ACK Message (using the Ack protocol family), and not a message in the protocol family of the decorated message. That distinguishes the requested ACK message from the \r\n3. For the `on OUTCOME`, I suggest the handling be:\r\n   1. When a message is received with that flag, set a field (e.g., `ack_on_outcome`) to true and continue processing.\r\n\t 2. When the state transition to a positive terminal state is made (the protocol is `DONE`) and the `ack_on_outcome` (or whatever) is `true`, send an extra Explicit `Ack`, regardless of whether the protocol already sends an ACK or not.  In other words, if asked for, send an extra message, regardless of the messaging done in the protocol.\r\n\t    1. Presumably, each protocol has 1 or a small set of positive terminal states to check on, and the state transition is explicit.\r\n\t    2. If the transition is done to a negative terminal state, an ACK should **not** be sent. It's up to the protocol to decide what to do.\r\n4. As we update protocols in ACA-Py to support PleaseAck functionality, add a \"standardized\" ADMIN API option to enable the sending of the `~please_ack` decorator. We'll have to look at the protocol to decide if that needs to be an individual query parameter set to (perhaps) `RECEIPT|OUTCOME|BOTH`, or is just added to the POST JSON.\r\n5. We add integration tests for the use of the parameters -- setting them and processing them as we add them to protocols.\r\n\r\nWhat do you think?  Does that make sense to you, given the investigation you have done?",
      "> After reviewing the [0317 Please Ack RFC](https://github.com/hyperledger/aries-rfcs/tree/main/features/0317-please-ack) and your excellent investigation into the protocol and the state of ACA-Py, here are my comments and suggestions:\r\n> \r\n> 1. I think we should not in any way alter the states, messages sent, or processing of a protocol just because there is a `~please_ack` decorator on it. The processing of a ~please_ack is independent of the rest of the processing -- an extra message sent when requested.\r\n> 2. Regards the `on RECEIPT` usage. Based on this line in the RFC `It implicitly means the agent was able to unpack the message`, it would be ideal (if possible...) to detect and process the decorator at that moment, sending an `ack` message, independent of the protocol being used. It would have to go back to the respondent, using the same thread, as an [Explicit ACK using RFC 0015 ACKs](https://github.com/hyperledger/aries-rfcs/blob/main/features/0015-acks/README.md#explicit-acks).  Is that possible in ACA-Py?\r\n>    \r\n>    1. Failing that, it would go into the per protocol handling (Option 2) with no impact on the handling of the message other than to send an extra message immediately using the Explicit ACK mentioned above.\r\n>    2. The message would be from an RFC 0015 ACK Message (using the Ack protocol family), and not a message in the protocol family of the decorated message. That distinguishes the requested ACK message from the\r\n> 3. For the `on OUTCOME`, I suggest the handling be:\r\n>    \r\n>    1. When a message is received with that flag, set a field (e.g., `ack_on_outcome`) to true and continue processing.\r\n>    2. When the state transition to a positive terminal state is made (the protocol is `DONE`) and the `ack_on_outcome` (or whatever) is `true`, send an extra Explicit `Ack`, regardless of whether the protocol already sends an ACK or not.  In other words, if asked for, send an extra message, regardless of the messaging done in the protocol.\r\n>       \r\n>       1. Presumably, each protocol has 1 or a small set of positive terminal states to check on, and the state transition is explicit.\r\n>       2. If the transition is done to a negative terminal state, an ACK should **not** be sent. It's up to the protocol to decide what to do.\r\n> 4. As we update protocols in ACA-Py to support PleaseAck functionality, add a \"standardized\" ADMIN API option to enable the sending of the `~please_ack` decorator. We'll have to look at the protocol to decide if that needs to be an individual query parameter set to (perhaps) `RECEIPT|OUTCOME|BOTH`, or is just added to the POST JSON.\r\n> 5. We add integration tests for the use of the parameters -- setting them and processing them as we add them to protocols.\r\n> \r\n> What do you think? Does that make sense to you, given the investigation you have done?\r\n\r\nHello @swcurran. Thanks for your comments. \r\n\r\n1. I agree with you. It is better (and, in fact, seems to be easier to implement) to avoid any impact on protocol state while the `please_ack` decorator processing. It should be possible for the `RECEIPT` option, but, probably, not for `OUTCOME` (see my comment about it below).\r\n\r\n2. Yes, I have the same idea. I have checked the code again and found that it should be possible to create some code, called before the message-specific handler, that will be responsible for detection and processing the `RECEIPT` option (independent on any other protocol-specific code).\r\n\r\nI think we should answer to the question \"should we handle the ack message that is received in response to the `please_ack` decorated message?\" So far we have only discussed about `please_ack`-decorated messages, but not about ACKs (explicit responses). According to the ACA-py code such ACKs will be just mentioned in the logs but nothing else. In your opinion, should they be processed in some specific way?\r\n\r\n3. I found your idea quite interesting. But, at the same time, I see that some things can be interpreted in a different way. For example:\r\n\r\n  i. Your idea is to consider the `OUTCOME` option (no matter which exactly message is docarated with it) as an option applied for a protocol itself, not for the message. I have checked the [please_ack RFC](https://github.com/hyperledger/aries-rfcs/tree/main/features/0317-please-ack) and it seems like the `please_ack` is only \"bound\" to the message (not to the protocol) and should affect only the way how we process this message only. Theoretically, some agent can decorate several messages while communication by the protocol. And, probably, they should be considered as different requests for sending ACKs (after processing each of such decorated messages).\r\n  Of course, since the way how we process an `OUTCOME` option is a part of each protocol we can implement it differently in each protocol. But in my opinion, it seems it would be correct just to ignore an `OUTCOME` option if it decorates a message where there is no any real outcome expected. Actually, is is even easier because there is no need to update each message handler code in protocols.\r\n  Moreover, I see that protocol RFCs define explicitly where the `please_ack (OUTCOME)` is expected. That means if we receive an `OUTCOME` option on the `cred-offer` message, for example, and send explicit ACK after the `cred-issue` message is received (but not decorated with `OUTCOME`) it may be considered not correct according to the protocol.\r\n  In fact, it is a question how to interpret `please_ack (OUTCOME)`. Reading the `please_ack` RFC I would say we should consider each `please_ack` decorator to be \"bound\" to the decorated message, not the protocol. What do you think?\r\n\r\n  ii. As I have mentioned previously, I see that protocols declare where the `OUTCOME` decorator is expected. And RFCs tell how to befave depending on wheter `OUTCOME` is received or not. Example from [issue-credential-v2](https://github.com/hyperledger/aries-rfcs/tree/main/features/0453-issue-credential-v2):\r\n\r\n  > the Issuer will move to the credential-issued or done state, depending on whether or not the ~please-ack decorator is included in the message\r\n\r\n  Unfortunately, nothing directly said about the Holder's behavior, but it seems like it is implied that Holder sends either one ACK (if the `please_ack` is set) or nothing (if the `please_ack` is not set). In my opinion we should follow protocol RFCs while processing the `OUTCOME` and not to try send extra messages or something like that. If there is nothing said about `please_ack (OUTCOME)` then just ignore it. Does it make sense in your opinion?",
      "Good points.  Here are my thoughts after reviewing:\r\n\r\n1. Good to hear we should be able to handle “RECEIPT” independent of the protocols.  That is cleaner.\r\n\r\n2. I reviewed the `~please_ack` RFC and it is definitely not clear on the question of whether the ACK is bound to the message or the protocol. RECEIPT is clearly message, but it is not the challenge.  Unhelpfully, the examples in the RFC are both ones where the `~please_ack` is on the last message of the protocol 😞 . \r\n\r\nIf we go with the `OUTCOME` being the protocol, the implementation is MUCH easier, I think.  We note in the message receipt processing that we need an outcome ACK, decorate the “terminal” state change with a check to see if an extra ACK is needed, and if so send it. If we have to track each message, I think it is much more complicated.\r\n\r\nI think there is also a good argument that a protocol based OUTCOME ACK is most important, as once the “outcome” of a message is known, a message is sent to convey that to the other side(s). However, some protocols (such as \"Present Proof v2.0” does not send a finishing ACK from the verifier to the holder and so is a great candidate for this decorator.\r\n\r\nWe can talk it to the Aries community, but I would say that we should go with protocol OUTCOME only.\r\n\r\n3. In thinking about the “no state impacts”, I realize that is not possible when one participant adds a “~please_ack” to the last message of the protocol. Back to Present Proof v2.0 — if the holder adds a `~please_ack` to the presentation, the “DONE” state is not reached until the `ACK` is received.  As such, in those cases, we need to introduce an artificial new state such as `awaiting_please_ack` before the terminal state.  This is not a concern on the ACK sending side — just the receiver.\r\n\r\n4. One more fun issue — I don’t know the code well enough to know if this is an issue or the best way to handle it.  What happens if the ACK message on OUTCOME is in the ACK message family, and not an adopted message into the in-flight protocol?  Should we require that all sent ACKs triggered by `~please_ack` be in the `ack` message family, or in the message family of the decorated protocol?\r\n\r\nLet’s see if we can get to a brief summary of the answers and then talk to the broader Aries community.",
      "Hello @swcurran. There are some answers and questions below. \r\n\r\n> If we have to track each message, I think it is much more complicated\r\n\r\nSince the `please_ack` RFC is not 100% clear about `OUTCOME` I see 3 options:\r\n\r\n1. To check each message (all message types in the `cred-issue-v2`) whether it contains `OUTCOME` option or not. If yes, set some flag (`ack_required`, for example) and then in the final step of the protocol send an ACK if the flag is set. It's an approach proposed by you.\r\n\r\n   Comments:\r\n    - we, probably, should have the same logic of `OUTCOME` processing in all Aries agents to have compatibility between them. It may make sense to discuss it with community before implementation of this approach\r\n    - anyway we have to add some additional code (to set the flag) in each message handler (in the protocol)\r\n\r\n2. To have additional code for `OUTCOME` processing only in message handlers where it is explicitly mentioned in protocol RFCs (`V20CredIssue` message in `issue-credential-v2` protocol, `V20Pres` message in `present-proof-v2` protocol). If any other message is `OUTCOME`-decorated (where it is not mentioned in a protocol RFC), `please_ack` will be just ignored. It is my initial idea that is implemented in my PoC.\r\n\r\n   Comments:\r\n    - we can consider this approach correct only in case `OUTCOME` is message-bound option (not protocol-bound as discussed above)\r\n    \r\n3. Check each message (all message types in the `cred-issue-v2`) whether it contains `OUTCOME` option or not. But, unlike option 1, just log that fact that `OUTCOME` is attached to the message. And if it is the message type, where `OUTCOME` is explicitly mentioned in the RFC, process it as defined in the RFC.\r\n\r\n   Comments:\r\n    - unlike option 1 we don't implement any logic that is not well-defined (in `please_ack` RFC) and can be implemented in different way in other Aries agents, but have some code (kind of a stub) that can be extended with required behavior (setting the `ack_required` flag or any other code) after Aries community has decided what is the best approach.\r\n    - Implementing this approach we just postpone decision how to process `OUTCOME` where it is not defined by protocol RFCs. Once it is discussed and decided that `OUTCOME` option is protocol-bound we can update the code and replace logging with setting the `ack_required` flag, for example. If it is decided that `OUTCOME` option is message-bound we can implement some message-specific code for that.\r\n    - In fact, this option is almost the same as option 2 and only includes additional code in each message type handler to check if `OUTCOME` is attached (and to put message in logs if yes).\r\n\r\nThat means may be we should choose between option 1 (if we are sure that protocol-bound `OUTCOME` is exactly what the `please_ack` RFC implies or Aries community decides so) and option 2/option 3 (they are almost the same) in case if we want to implement initial version of `OUTCOME` support in such a way that, at least, behave correctly according to the protocol RFC, and can be extended for all other message types when it is clear how to process them correctly (when it is clear wheter `OUTCOME` is message-bound or protocol-bound, etc).\r\nWhat do you think?\r\n\r\n\r\n> In thinking about the “no state impacts”, I realize that is not possible when one participant adds a “~please_ack” to the last message of the protocol.\r\n\r\nYes, \"no state impact\" is only possible for the `RECEIPT`. `OUTCOME` option affects sequence of protocol states. A side who sends `OUTCOME` must wait for an ACK message before transition to the DONE state. It is defined in protocol RFCs (at least, for `credential-issue-v2` and `present-proof-v2`)\r\n\r\n\r\n> Back to Present Proof v2.0 — if the holder adds a ~please_ack to the presentation, the “DONE” state is not reached until the ACK is received. As such, in those cases, we need to introduce an artificial new state such as awaiting_please_ack before the terminal state.\r\n\r\nI see that, at least, `credential-issue-v2` and `present-proof-v2` protocols have such states (`STATE_ISSUED` and `STATE_PRESENTATION_SENT` accordingly). In this states the protocols wait for an ACK message. I think we don't need to introduce any new states.\r\n\r\n\r\n> Should we require that all sent ACKs triggered by ~please_ack be in the ack message family, or in the message family of the decorated protocol?\r\n\r\nACA-py finds a handler for message using special `Handler` property of each incoming message.\r\nThat means we should require all ACK messages to be adopted by a particular protocol. Especially, if we are speaking about ACK that are sent in response to `OUTCOME` option since some protocols (for example, [present-proof-v2](https://github.com/alexsdsr/aries-cloudagent-python/blob/doc/please_ack/PleaseAck.md#ack-message-type)) define some additional fields in an adopted ACK message type.\r\nIf we are speaking only about ACKs sent in response to `RECEIPT` we need to decide either to adopt ACK in each protocol or to make the logic of the `Dispatcher` class more complicated to let it handle the original ACK message (not adopted) using `~thread`, for example. There are advantages of each approach.\r\n\r\nDisadvantages of ACK message adoptation:\r\n\r\n- it has to be done for each protocol. It is not difficult, but lot of new similar classes would be added\r\n- some protocols (for example, `credential-issue-v2` and `present-proof-v2`) have already adopted ACK for their purposes. It requires some additional logic to be implemented to distinguish in which protocol state an adopted message is sent and how it should be processed (it is easy now since an ACK is received in only some particular state before DONE)\r\n\r\nDisadvantages of using original ACK messages:\r\n\r\n- we have to implement additional logic to find a handler using only `~thread` decorator\r\n\r\nActually, we need to use adopted messages in case of `OUTCOME` option is being processed. But maybe we can use original ACK for case when `RECEIPT` is received.\r\nBut it is kind of inconsistent solution to send different ACK types in response to different options of `please_ack`. I'm not sure if it is ok or not.\r\n\r\n\r\n\r\nOne more thing I would like to discuss is compatibility issue. I have mentioned it [here](https://github.com/alexsdsr/aries-cloudagent-python/blob/doc/please_ack/PleaseAck.md#compatibility-between-different-versions-of-aca-py-agents).\r\n\r\nWhat is the problem? Let's assume an issuer agent is based on current version of code but a holder agent is based on new version of code (where `please_ack` is supported).\r\n\r\nThen the issuer sends credentials and waits for an ACK (it is always sent in current version of ACA-py). But the holder doesn't send the ACK message because the `OUTCOME` is not attached by the issuer. The issuer can't reach the `DONE` state.\r\n\r\nI see three possible options:\r\n1. Quick and temporary solution. The idea is to send an ACK message always no matter if the issuer supports `please_ack` or not (since the holder agent doesn't know it) just to have backward compatibility with all ACA-py agents.\r\n\r\nDisadvantages:\r\n- the issuer may log error in case it supports the `please_ack` and doesn't attach it to the `V20CredIssue` message (therefore doesn't wait for the ACK message)\r\n\r\n\r\n2. Quick and not good solution. The idea is to have some config value that will specify if ACA-py agent behaves in backward-compatible way (as mentioned in option 1) or not (ignore that fact that some agents may not support `please_ack` yet).\r\n\r\n\r\n3. Good and not quick solution. The idea is to use `discover-features` protocol to check if the other side supports the `please_ack` or not and behave taking it into account.\r\n\r\nDisadvantages:\r\n\r\n- it requires additional effort to implement a good solution based on it. \r\n     First, currently discovery protocol is not performed automatically (after connection is established between agents) in order to ask the other side what features it supports.\r\n     Second, there is no any specific code to associate set of supported features with the particular agent/connection (to use it to check if the agent has to communicate in backward-compatible way or not).\r\n     In the end, the `discover-features-v2` protocol doesn't allow to ask about decorator support in context a particular protocol (it would be fine to ask if the `please_ack` is supported by the `credential-issue-v2` protocol, for example).\r\n\r\n\r\nI think option 1 (to send an ACK always to keep compatibility) may be a good choice for the first version of `OUTCOME` support. But ideally we need to implement solution based on `discover-features-v2` protocol. What do you think?",
      "Hello @swcurran \r\n\r\n> We can talk it to the Aries community, but I would say that we should go with protocol OUTCOME only.\r\n\r\nHave you had a chance to discuss it with the Aries community? Any thoughts?",
      "Very sorry for the long delay in responding — lots of things are going on.  🧑‍🏭 \r\n\r\nI re-read the **whole** RFC (paying more attention this time…) and I’ve reversed my stance. It is pretty clear that the RFC says that the outcome is **message**-based, not **protocol**-based.  To quote — `The OUTCOME acknowledgement is the more advanced ack mechanism and requests that an ack is sent on outcome of the message`. Doh — I don’t know how I missed that on first re-read.  Sorry about that.\r\n\r\nSo, to fully support `~please_ack`, we would need to add as generic a way as possible to flag that a “please_ack” is needed at whatever is defined to be the next “outcome” — presumably the next state change.  At the point of the state change, we check if a please_ack message is needed and send it.  Seems like it would be tricky, but you would know better.\r\n\r\nI like your option 2 idea for now, but I would also be happy if we just implement the “On Receipt” part of the protocol.\r\n\r\nThis is a bit of a rabbit hole, but as I’ve been thinking about this, I do see a possible issue with the intent of adding a ~please_ack on the `presentation` message for the Present Proof use case.  Does the protocol end when the presentation is verified cryptographically, or after the controller decides if it will accept the presentation for the business process?  What is wanted is that the acceptance of the presentation for the business purpose is ACKed, but I’m not sure that is possible in our current Aries implementations.\r\n\r\nThis is a pretty complicated protocol...\r\n\r\n",
      "Hello @swcurran. Thank you for the answer.\r\n\r\n> flag that a “please_ack” is needed at whatever is defined to be the next “outcome” — presumably the next state change. At the point of the state change, we check if a please_ack message is needed and send it.\r\n\r\nYes, it is how I have implemented my PoC code (option 2 in my message above).\r\n\r\n\r\n> I like your option 2 idea for now, but I would also be happy if we just implement the “On Receipt” part of the protocol.\r\n\r\nUnfortunately, we have some unclear things related to the \"common handler\" (generic code to process the `RECEIPT`-decorated messages) that block us. I have mentioned them [here](https://github.com/alexsdsr/aries-cloudagent-python/blob/doc/please_ack/PleaseAck.md#open-question-in-context-of-the-common-handler).\r\nThe most important question is \"should we adopt ACK message in each protocol?\" It is, unfortunately, not defined by the [please-ack RFC](https://github.com/hyperledger/aries-rfcs/tree/main/features/0317-please-ack).\r\nThe answer to this questions affects the implementation and, more important, compatibility between different Aries agents. It seems like it should be discussed by the Aries community and added to the please-ack RFC.\r\n\r\n\r\n> Does the protocol end when the presentation is verified cryptographically, or after the controller decides if it will accept the presentation for the business process?\r\n\r\nCurrently ACA-Py sends the ACK message after the presentation is verified. It happens automatically if the `auto_verify` is set to true or by controller via AdminAPI otherwise.\r\nBut anyway, I think it is a question out of the scope of `please_ack (OUTCOME)` implementation because the protocol already has this ACK message and all that assumed to change is to let the holder request the ACK from the verifier explicitly. I think it's a good idea not to change the place where the ACK is sent from. It should be, probably, considered as a different task. Does it make sense?\r\n\r\n\r\nHow can we continue this task?\r\n\r\nMy idea is to start from something minimal that doesn't break backward compatibility between current and new versions of ACA-Py. And then to continue little-by-little.\r\nAs a first step we can transform my PoC into final version of the code.\r\nIt should include:\r\n  - support only for `OUTCOME` option (not for `RECEIPT`, I've mentioned why it is not so easy for now) and only for the `0453-issue-credential-v2` protocol\r\n  - additional flag `ack_required` in the AdminAPI that let the controller decide if the `OUTCOME` is sent or not\r\n  - unconditional the ACK message sending from the holder to the issuer (in order not to break backward compatibility, I have mentioned it [here](https://github.com/alexsdsr/aries-cloudagent-python/blob/doc/please_ack/PleaseAck.md#compatibility-between-different-versions-of-aca-py-agents))\r\n  - unit tests\r\n\r\nOnce it is done we can continue with the `0454-present-proof-v2` protocol (I don't expect it may take much time) and so on one-by-one.\r\n\r\nThe biggest downside, in my opinion, is unconditional ACK. It means that `please_ack (OUTCOME)` becomes useless. It should be considered only as a temporary solution until ACA-Py is able to check if the other side supports the `please_ack` or not.\r\nIf you find the unconditional ACK not good even as a temporary solution we have to start work from the solving this compatibility issue.\r\nOne of the possible solution may be based on the `0557-discover-features-v2` protocol. Unfortunately, it seems not to be quick solution. May be there are other possible ways how to resolve the issue.\r\n\r\nI don't like the 'unconditional ACK' idea but we must not break backward compatibility. Alternative way is to postpone the `please_ack` support and try to focus on the issues like that and resolve them (as a precondition).\r\n\r\nWhat do you think?",
      "Thanks for the notes and suggestions.  The unconditional Ack is messy.  Even the “simple” `on receipt` is tricky. And the whole, per protocol impacts are too hard to understand/account for.  Trying use an approach that is both useful and has a minimum impact is very, very difficult.  This is what happens when introducing protocols without implementing as they are defined.  😭 \r\n\r\nUnfortunately, I don’t think we can progress right now — I just feel like the community is not ready for this. The impact of the protocol is too large, there are too many questions that have to be addressed about how it should be implemented, and it is not clear that there is a need for the feature.  What I would like to do is have a discussion with production implementers to see where they would use the protocol if it were available. However, I think even that would be difficult — implementers probably wouldn’t think they needed it.\r\n\r\nThe most important thing is how not to lose this information you have learned. Closing these PRs without put the learning some where would be a bad idea.\r\n\r\nHow about I take on to do a presentation for the Aries Working Group in the next few weeks about what was found, to learn what others think, and to at minimum, put references into the Please Ack RFC to a summary of what was discovered in investigating this?\r\n\r\nSorry for introducing this topic.  What a mess!\r\n",
      "I've added a discussion section that I plan to go over at the next ACA-Pug meeting -- https://wiki.hyperledger.org/display/ARIES/2023-11-14+Aries+Cloud+Agent+-+Python+Users+Group+Community+Meeting.  It is a bit of a dry-run for a similar discussion at an Aries Working Group meeting.",
      "Hello @swcurran \r\n\r\n> The most important thing is how not to lose this information you have learned. Closing these PRs without put the learning some where would be a bad idea.\r\n\r\nI have updated the document in this PR. I've tried to summarize important things and remove unnecessary according to our discussion here in comments. It would be excellent if you have a chance to review it. It is quite short, btw. I would ask you to think if this document (research, in fact) could be stored in the repo or not. If not, may be there is another place to store it.\r\nThank you.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2540)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2540&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2540) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2540) No Duplication information\n\n",
      "Hello @swcurran \r\n\r\nCould you please take a look at the final version of the document?\r\nIs it worth having it in the repo? What do you think?\r\nThank you.",
      "We will not be moving forward with support for the please_ack decorator right now. Thanks for your efforts!",
      "To be more precise about the resolution for this PR, why it is being closed and to show how effort is linked to further explanations.  The Aries Community is removing `please_ack` from AIP 2.0 and retiring the `please_ack` protocol in [this Aries RFC PR](https://github.com/hyperledger/aries-rfcs/pull/814) that should be merged Real Soon Now.  In that PR, links are provided to the PRs done here (but not merged) to provide extra details as to why the protocol is being retired — because a “general purpose” please_ack feature is not viable and if wanted, MUST be part of each protocol.\r\n\r\nThanks again for the work, @alexsdsr.  Even though it didn’t get merged we learned a lot from this and moved DIDComm forward. The biggest learning is to make sure that we don’t “throw in” cross-cutting or optional features that alter the protocols state machines.  For example — as recently come up — throwing in an optional, extra “problem-report” in response to a flawed final message of a protocol breaks the state machine. Either the extra message MUST be made every time, or not ever made — not sometimes..."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d5aac254a19ac294816",
    "number": 2539,
    "body": null,
    "head_branch": "0.10.4",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2539)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2539&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2539) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2539) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2539 from swcurran/0.10.4\n\n0.10.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d5bac254a19ac294817",
    "number": 2537,
    "body": null,
    "head_branch": "fix/routing-keys-backport",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2537)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2537&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2537) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2537) No Duplication information\n\n",
      "@codespree -- a \"0.10.4-rc0\" image has been created -- https://github.com/hyperledger/aries-cloudagent-python/pkgs/container/aries-cloudagent-python/135290717?tag=py3.9-0.10.4-rc0 -- are you able to give it a try?\r\n\r\n@WadeBarnes -- if you can deploy this release in any BC Gov deployments, that would be great."
    ],
    "commit_messages": [
      "Merge pull request #2537 from dbluhm/fix/routing-keys-backport\n\nfix (backport): routing behind mediator"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d5cac254a19ac294818",
    "number": 2536,
    "body": "This is a reopen of PR #2535 (after I botched my git command...). Thanks again @codespree for the fix.",
    "head_branch": "fix/routing-keys",
    "is_a_fork": true,
    "comments": [
      "I'll tack a quick test case onto this PR as a regression test.",
      "@dbluhm — can you cherry pick this into a v0.10.4 branch (or v0.10.3 and I’ll just tag it from there) and I’ll publish an image for testing.  Once we have that we can do a 0.10.4.\r\n\r\nThanks @codespree for the fix. Hoping that once I publish an image, you can give it a try.",
      "@swcurran how about a 0.10.x branch and then we can delete the old 0.10.2 and 3 branches?",
      "Sure. As long as it is not 0.10.4.  That you mean the x literally. If you do mean 4, then add a ”v” in front.",
      "https://github.com/hyperledger/aries-cloudagent-python/pull/2537 PR to 0.10.x. I'll let the tests run (I don't expect anything to be different enough between main and 0.10.x to cause issues but just in case) and merge once they complete.",
      "https://github.com/hyperledger/aries-cloudagent-python/tree/0.10.x is now ready for an image publish",
      "> https://github.com/hyperledger/aries-cloudagent-python/tree/0.10.x is now ready for an image publish\r\n\r\nLooks good! I also verified with a base58 key `F7cEyTgzUbFwHsTwC2cK2Zy8bdraeoMY8921gyDmefwK` by adding it as a `routingKey` and the code works well.\r\n\r\nIn the test case we already have `did:key:z6Mko2LnynhGbkPQdZ3PQBUgCmrzdH9aJe7HTs4LKontx8Ge`, `did:key:z6Mko2LnynhGbkPQdZ3PQBUgCmrzdH9aJe7HTs4LKontx8Ge#z6Mko2LnynhGbkPQdZ3PQBUgCmrzdH9aJe7HTs4LKontx8Ge`, perhaps we should add another service with the `routingKey` as `F7cEyTgzUbFwHsTwC2cK2Zy8bdraeoMY8921gyDmefwK`. That would cover all cases.",
      "@dbluhm @swcurran I updated my local environments (mediator and web agent) to use the branch created:\r\n\r\n```\r\npip install git+https://github.com/hyperledger/aries-cloudagent-python.git@0.10.x\r\n```\r\n\r\nI am happy to report that everything works as expected.",
      "Should I go ahead with the release?  What about the other question about the mediator - #2531?\r\n\r\n",
      "> Should I go ahead with the release? What about the other question about the mediator - #2531?\r\n\r\n@swcurran I have tested the mediator from a mobile agent and have also tested message queuing so, from my perspective, a release would be good.\r\n\r\nThanks @dbluhm for providing inputs on debugging and for merging the PR.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2536)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2536&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2536) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2536) No Duplication information\n\n",
      "@swcurran I think this is good for a merge, based on @codespree's testing."
    ],
    "commit_messages": [
      "Merge pull request #2536 from dbluhm/fix/routing-keys\n\nfix: routing behind mediator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d5cac254a19ac294819",
    "number": 2535,
    "body": "With this fix, now routing works for agents behind a mediator:\r\nhttps://github.com/hyperledger/aries-cloudagent-python/issues/2531\r\n\r\nBasically, since pydid expects routingKeys to be refs, this causes issues.\r\n\r\nTo fix this, the routingKeys are converted to refs if they aren't already.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "@dbluhm @swcurran Perhaps you can review, or suggest who can review.",
      "We'll probably want this change on 0.10.X, @swcurran ",
      "Github Codespaces failed me and didn't include a DCO message on the commit I pushed... I'll fix that.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2535)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2535&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2535) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2535) No Duplication information\n\n",
      "Well shoot. Sorry @codespree I got my git command syntax messed up and somehow managed to close this PR and now I can't correct it because closing the PR took away my ability to push to your branch. I will open another PR. Sorry for the mixup!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d5dac254a19ac29481a",
    "number": 2534,
    "body": "With this fix, pydid can parse the DIDDoc correctly and routing starts working for an agent behind an aca-py mediator.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2534)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2534&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2534) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2534) No Duplication information\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d5eac254a19ac29481b",
    "number": 2533,
    "body": "This PR is a refactor of LDP VC handling within ICv2 and PPv2 to make it usable outside of those protocol's handlers. I believe this results in a cleaner implementation, separating the concerns of preparing a credential from the ICv2 protocol and its messages and handlers for those messages.\r\n\r\nThis refactor enables the other major addition in this PR, adding a couple of new endpoints for LDP VC issue and verify, `POST /vc/ldp/issue` and `POST /vc/ldp/verify`. These endpoints are similar to the `/jsonld/sign` and `/jsonld/verify` endpoints. However, the big difference is that the `/jsonld` endpoints did not use the same LDP signing methods used in ICv2 or PPv2. This has caused the two implementations to diverge more and more over time. With this PR, these endpoints are still available but are marked as deprecated. One other significant difference, the inputs for endpoints have changed to be more specific to signing and verifying LDP VCs and not just arbitrary JSON-LD documents.\r\n\r\nFixes #2468.",
    "head_branch": "refactor/json-ld-sign-consistency",
    "is_a_fork": true,
    "comments": [
      "Some additional testing and fixes pending for this PR. I wanted to open this to see if there were any thoughts on this question:\r\n\r\nShould I also move the holder related functions of storing LDP VCs to this interface?",
      "Assuming that we will soon be supporting signing and verifying AnonCreds in W3C format proofs, is there anything else that needs to be done in preparation for that?  Will we be able to use the same interface to sign such credentials?  And ideally, sign a VC twice — once with AnonCreds, once with another key type?  AFAIK, the AnonCreds signature will be aligned with Linked Data Proofs.\r\n\r\nAnother thought. I believe the “LDP” term has been replaced with Data Integrity Proof…\r\n\r\nI’ll edit this message — have to run right now...",
      "Good questions. I really enjoy how nice and simple everything is when it comes to VC formats :smile: \r\n\r\nBased on my understanding, AnonCreds in W3C format would be formatted as JSON-LD but would not be using Linked Data Proof signatures since they will of course use CL Signatures. So it would technically not fall in the category of ldp_vc. And to your point on Data Integrity Proofs replacing Linked Data Proofs, I believe you're correct. Based on casual observation, it seems the term `ldp_vc` will be sticking around for a while at least, given that the format is included in the OpenID4VCI spec as \"VC secured using Data Integrity, using JSON-LD, with proof suite requiring Linked Data canonicalization\" (which is hilariously verbose). That section clarifies:\r\n\r\n> Note that Data Integrity used to be called Linked Data Proofs, hence \"ldp\" in the Credential format identifier\r\n\r\nI haven't looked deeply at Data Integrity Proofs but I believe there would be changes required at layers lower than the ones I've touched in this PR. Superficially, it seems the biggest change would be how the signature is represented.\r\n\r\nI think the interface I've added here would be beneficial to later adding DIP support, switching behavior by processing the `proof_type` option. Perhaps that means the manager itself should be renamed :thinking:\r\n\r\nI don't think this extends to supporting AnonCreds in W3C format, though. AnonCreds would need a different set of options, at a minimum, which I think makes it not fit particularly well into this interface. I could be persuaded otherwise.",
      "Oh, I just read more of https://w3c.github.io/vc-data-integrity/; it seems that AnonCreds would actually be able to be considered a generic Data Integrity Proof so I think I'm wrong about what I just said.",
      "Looks like a nice clean-up to me!",
      "Brief update: I'm working through the test failures and moving tests that used to apply to the ICv2 and PPv2 format handlers for ld_proof and  dif respectively to tests for the added manager!",
      "This is now ready for review! @swcurran I think this is a good change for JSON-LD creds but there's probably a conversation worth having about how this should interact with the `DataIntegrityProofs` in the future. This is a good stepping stone in that direction; it will be easier to make that switch when it's time.",
      "@PatStLouis — this might be relevant to the work you are doing — being able to use the JSON-LD credentials independent of DIDComm protocols.  I think you mentioned that yesterday?  Please let me know. Your review of this PR would also be welcome!  :-)",
      "@swcurran thank you for pointing this out to me. @dbluhm I will have a thorough look tomorrow but this seems like a great functionality to have. I'd like to have a discussion with you around the differences you highlighted between these new endpoints and the json-ld endpoints. I understand this will replace the existing json-ld endpoints?\r\n\r\n2 comments/question I have\r\n\r\n1. Have you considered using the endpoints `/credentials/issue` and `/credentials/verify` to align with the vc-api credential management spec? This would enable aca-py to be interoperable with w3c test-suites out of the box. They also have different endpoints for presentations, `/presentations/sign` and `/presentations/verify` which could be interesting to consider. I'm currently writing a PR on the vc-api spec around how error messages should be returned, I'd like to know your approach on this as well! I will base this on the VC data model spec problem details section.\r\n[https://w3c-ccg.github.io/vc-api/#issue-credential](https://w3c-ccg.github.io/vc-api/#issue-credential)\r\n[https://pr-preview.s3.amazonaws.com/w3c/vc-data-model/pull/1338.html#problem-details](https://pr-preview.s3.amazonaws.com/w3c/vc-data-model/pull/1338.html#problem-details)\r\n\r\n2. What are your thought's on credential storage? Currently the only way to store a json-ld credential is through the issue-credential v2 protocol. There is however some logic to query those credentials through the `/credentials/w3c` endpoint. Do you see adding another mechanism to store an already issued credential?\r\n\r\nAnd you are correct, CL signatures are considered data integrity proofs. However, AnonCreds VC type will be difficult to be issued with an endpoint like this because the process for the credential request requires a back and forth between the issuer and the holder. There would need to be some reflections about how to provide the request to this endpoint and how it will look. Super interested in helping with this however.\r\n\r\n",
      "Pulling in @wip-abramson since we recently had discussions around this for a project we are working on",
      "Hey @PatStLouis, thanks for your interest! I'm not necessarily opposed to implementing the VC-API; the interface is inspired by the VC-API, as was the LD-Proof-VC-Detail attachment format that this work kind of inherits from. There are subtle differences right now and it's been a minute since I did the bulk of this work. I'll take some time to compare and see if there's a clear reason for the differences.",
      "One of the key differences I noticed with the json-ld endpoints was that you needed to provide the verkey associated with the wallet you wanted to sign the credential with at a level higher in the request body. The options field in the vc-api could be used for optionally providing a verkey, and the agent would have one set as the default. The vc-api is designed to be implementation agnostic and I feel this would be a reasonable use of the field.\r\n\r\nThe vc-api spec could also be included in the aca-py backchannel to enable running w3c test suites this way instead, however having these routes in the aca-py spec itself could also be interesting while making use of the already existing `/credentials` section. For example, the vc data model 2.0 test suites interfaces with the `/credentials/issue` endpoint as defined in the vc-api. When aca-py will want to enable the data model 2.0 as a vc issuance format, this could be demonstrated by directly exposing a demo instance's admin api to the test-suite instead of having a backchannel layer in between.\r\n[https://github.com/w3c/vc-data-model-2.0-test-suite#setup](https://github.com/w3c/vc-data-model-2.0-test-suite#setup)\r\n\r\nOther noteworthy test suites includes:\r\n[https://github.com/w3c-ccg/did-key-test-suite](https://github.com/w3c-ccg/did-key-test-suite)\r\n[https://github.com/w3c-ccg/status-list-2021-test-suite](https://github.com/w3c-ccg/status-list-2021-test-suite)\r\n\r\nIt could also open the door for integration with the [vcplaygroud](https://vcplayground.org/)\r\n\r\nOverall great for interoperability.\r\n\r\nThese are just considerations I wanted to bring to the decision making, I think the work done here is fantastic regardless and much needed.",
      "Disclaimer that I haven't yet taken that closer look yet lol but it sounds like simply moving the added endpoints from `/vc/ldp` to `/credentials` might be enough?\r\nI have mixed feelings about the implications of endpoints named that way, though, especially since, as you noted, they wouldn't be able to issue AnonCreds VCs. Can we put the endpoints under `/vc/ldp/credentials` and then provide a base url including `/vc/ldp` to test suites?",
      "Yes that would also work, if the endpoints are conformant with the expected request body / response body. You can have a look [here](https://github.com/w3c-ccg/vc-api-test-suite-implementations/blob/main/implementations/Mattr.json) at what the configuration files for these test suites look like.\r\n\r\nI have a vc-api implementation of the anoncreds-rs python wrapper where I do issue an anoncreds vc with this endpoint. It would take into account that you already received the credential request from the holder and provide it in the options field....not ideal but it works. For demonstration you can also simply use the endpoint as is and have the issuer create the request himself (thus binding the credential to a link secret he manages). However this is highly unpractical...it would however demonstrate interoperability...\r\n\r\nOnce the anoncreds in w3c work is completed for aca-py, we should have a lot more clarity about what is possible here. Are you looking to merge this PR soon or are you planning to leave it open for some time?\r\n",
      "Have a look here if you want an easy to run test-suite that would interact the same way. Just plug in the endpoints and see what happens: [https://github.com/credential-handler/verifiable-credential-playground-test-suite](https://github.com/credential-handler/verifiable-credential-playground-test-suite)",
      "I agree with @PatStLouis.\r\n\r\nI think we need an endpoint to store an issued JSON-LD VC. Or is it imagined that applications would handle storage of credentials themselves? \r\n\r\nI also think supporting AnonCreds issuance in this way will be hard. AnonCreds issuance requires interaction between issuer and holder passing cryptographic information that needs to be used in protocols other that json-ld sign. To implement this outside of DIDComm, I think we would need API calls to represent each of these interactions (leaving the communication out of band - potentially CHAPI or something else).\r\n\r\nReally, AnonCreds jsonld issuance isn't JSON-LD sign at all (I don't think). Isn't it just JSONLD pack? Or W3C VC pack? Some transformation that takes a signed AnonCred and represents it in W3C VC format.\r\n\r\n",
      "@wip-abramson You had some interesting points relating to didauth and credential storage, would you mind sharing these as well? This should be documented and discussed (its out of scope for this PR however discussing it doesn't hurt)",
      "I'm not sure what I said more about credential storage.\r\n\r\nBut DIDAuth, is generally recommended when issuing a credential to a DID. First the issuer must request a DIDAuth from the holder for the DID they wish to include in the credential. See https://chapi.io/developers/wallets/#did-authentication-with-chapi\r\n\r\nI actually think this would be possible with the endpoints proposed here. You would just JSONLD sign something like this:\r\n\r\n```\r\nconst didAuthPresentation = {\r\n    '@context': [\r\n        'https://www.w3.org/2018/credentials/v1',\r\n        'https://w3id.org/security/suites/ed25519-2020/v1'\r\n    ],\r\n    type: ['VerifiablePresentation'],\r\n    holder: 'did:key:z6MkeprvBw4RFHJPQEmtioq4xRrN6Tk8EBSJ37eBCBQNHRjZ',\r\n};\r\n```",
      "Bold of you to post javascript snippets in an aca-py thread. Thanks for the input!",
      "> Are you looking to merge this PR soon or are you planning to leave it open for some time?\r\n\r\nI think it will be better to get it merged sooner than later; even as is, I think it's a significant improvement over what was previously supported with the `/jsonld/sign` and `/jsonld/verify` endpoints (critically, resolving the split in the implementations).\r\n\r\nStill reading deeper on your other points!",
      "@PatStLouis — any feedback on this?  I’d like to get this merged.  Thanks!",
      "@swcurran testing now",
      "This looks great and works really well. I would have 2 comments:\r\n\r\nWould it make sense to make the `proofType` optional? AFAIK in acapy the key type is selected upon wallet creation, so by providing a did:key wouldn't it be already bound to a specific proof type? If I'm wrong please enlighten me!\r\n\r\nThe created timestamp could be formatted to use the 'Z' alternative to specify UTC. Also according to the [XMLSCHEMA11-2 date-time specification](https://www.w3.org/TR/xmlschema11-2/#dateTime) the milliseconds should be omitted.\r\n\r\n`2023-12-07T17:58:51.962131+00:00` -> `2023-12-07T17:58:51Z`\r\n\r\nQuestion, when you verify a vp, do you also verify the vc signature it holds?\r\n\r\nI like the included details upon verification, great context and useful.\r\n\r\nOverall I like this alot in comparison to the json-ld endpoints",
      "@dbluhm — let me know how you want to handle @PatStLouis ’s comments — include or merge as is.\r\n\r\nThanks @PatStLouis — good stuff!\r\n",
      "@dbluhm you should come present this at the vc-api meeting next week, I know a few people who will be thrilled to see this alignment :)",
      "> Would it make sense to make the `proofType` optional? AFAIK in acapy the key type is selected upon wallet creation, so by providing a did:key wouldn't it be already bound to a specific proof type? If I'm wrong please enlighten me!\r\n\r\nThere might be a better way to address this but the proof type is currently required because the same keys associated with a DID can create more than one signature type, e.g. Ed25519Signature2018 or Ed25519Signature2020. Kind of dumb that that split exists in the first place; I think this will be cleaner with Data Integrity Proofs.\r\n\r\n> The created timestamp could be formatted to use the 'Z' alternative to specify UTC. Also according to the [XMLSCHEMA11-2 date-time specification](https://www.w3.org/TR/xmlschema11-2/#dateTime) the milliseconds should be omitted.\r\n> \r\n> `2023-12-07T17:58:51.962131+00:00` -> `2023-12-07T17:58:51Z`\r\n\r\nGood catch, I'll get that fixed!\r\n\r\n> Question, when you verify a vp, do you also verify the vc signature it holds?\r\n\r\nYep, this is handled a layer down from these changes and can be found here: https://github.com/dbluhm/aries-cloudagent-python/blob/37c4bc27d3c38b9843d696213d096b3fd4762dc2/aries_cloudagent/vc/vc_ld/verify.py#L142\r\n\r\n> I like the included details upon verification, great context and useful.\r\n> \r\n> Overall I like this alot in comparison to the json-ld endpoints\r\n\r\n:+1: Glad to hear it!",
      "@PatStLouis Was it the proof created at timestamp specifically that you were referring to?",
      "@PatStLouis I believe I located the bad timestamp formatting; if you are willing, I wouldn't mind another look from you to validate it is as expected!\r\n\r\nUpdate: The change has actually caused some test cases (that have been around since before my changes on this PR) to fail. I'm either missing the mark or there might be test cases that need to be updated. See: https://github.com/hyperledger/aries-cloudagent-python/actions/runs/7132863110/job/19424316476?pr=2533\r\n\r\nI'll revert my change for now.",
      "Sounds good, I was able to sign most of the credentials from [this list](https://github.com/credential-handler/vc-examples/tree/main/credentials)\r\n\r\nThumbs up from me!",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2533)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2533&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2533) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2533) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2533 from dbluhm/refactor/json-ld-sign-consistency\n\nrefactor: make ldp_vc logic reusable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d5fac254a19ac29481c",
    "number": 2529,
    "body": "- resolve #2507 ",
    "head_branch": "subwallet_upgrade",
    "is_a_fork": true,
    "comments": [
      "It's not something that was introduced by this PR but I think it's worth calling out nonetheless:\r\n\r\nFirst, I think the whole `upgrade` method is due for a refactor. It's a beast of a method. When we recently worked through the upgrade process, working out how to potentially do an upgrade for a change we were working on, it took quite some time to parse through the code.\r\n\r\nSecond, consider this line:\r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/9b16660508c3b1e9c70af46e38afbe51f8fcc6d1/aries_cloudagent/commands/upgrade.py#L395\r\n\r\nThis line is retrieving ALL records of the given type at once. This can result in out-of-memory issues if there are enough records in the wallet of that record type. We should probably be using a `BaseStorageSearch` to perform this record retrieval so that it can be done in batches: https://github.com/hyperledger/aries-cloudagent-python/blob/9b16660508c3b1e9c70af46e38afbe51f8fcc6d1/aries_cloudagent/storage/askar.py#L203-L235",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2529)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2529&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2529) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2529) No Duplication information\n\n",
      "@dbluhm Re the need to refactor, I mentioned it to @swcurran and I think this can be taken up in the future (separate from this PR). Re using `BaseStorageSearch -> search_records`, I have replaced `query` in `upgrade.py` with it."
    ],
    "commit_messages": [
      "Merge pull request #2529 from shaangill025/subwallet_upgrade\n\nFeat: Support subwallet upgradation using the Upgrade command"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d60ac254a19ac29481d",
    "number": 2527,
    "body": "This update includes changes recently committed to the 0.10.X releases, correcting an issue that prevented mediators from handling `didcomm:transport/queue` as a service endpoint.\r\n\r\nA small but notable difference between this and the 0.10.X releases: in changes queued for the \"next\" release, we added `peerdid`. `peerdid` also depends on pydid. I had to backport fixes to the pydid 0.3.x line to workaround conflicts caused by using 0.4.0 of pydid with peerdid. I'm working with the SICPA team to resolve this. In the meantime, 0.3.9 will work exactly as we need anyways.",
    "head_branch": "chore/update-pydid",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2527)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2527&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2527) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2527) No Duplication information\n\n",
      "Gentle nudge on this one; this is ready for review @swcurran / @usingtechnology "
    ],
    "commit_messages": [
      "Merge pull request #2527 from dbluhm/chore/update-pydid\n\nchore: update pydid"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d61ac254a19ac29481e",
    "number": 2525,
    "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 2.0.5 to 2.0.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>2.0.6</h2>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (GHSA-v845-jxx5-vc9f)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>2.0.6 (2023-10-02)</h1>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/262e3e332209ee93ff70e2b13502c8f20c105ac8\"><code>262e3e3</code></a> Release 2.0.6</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/644124ecd0b6e417c527191f866daa05a5a2056d\"><code>644124e</code></a> Merge pull request from GHSA-v845-jxx5-vc9f</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/740380c59ca2a7c2dceca19e5dba99f6b7060e62\"><code>740380c</code></a> Bump cryptography from 41.0.3 to 41.0.4 (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3131\">#3131</a>)</li>\n<li>See full diff in <a href=\"https://github.com/urllib3/urllib3/compare/v2.0.5...2.0.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=2.0.5&new-version=2.0.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/urllib3-2.0.6",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2525)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2525&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2525) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2525) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2525 from hyperledger/dependabot/pip/urllib3-2.0.6\n\nchore(deps): Bump urllib3 from 2.0.5 to 2.0.6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d61ac254a19ac29481f",
    "number": 2524,
    "body": "Bumps [urllib3](https://github.com/urllib3/urllib3) from 2.0.2 to 2.0.6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/releases\">urllib3's releases</a>.</em></p>\n<blockquote>\n<h2>2.0.6</h2>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>. (GHSA-v845-jxx5-vc9f)</li>\n</ul>\n<h2>2.0.5</h2>\n<ul>\n<li>Allowed pyOpenSSL third-party module without any deprecation warning. <a href=\"https://redirect.github.com/urllib3/urllib3/issues/3126\">#3126</a></li>\n<li>Fixed default <code>blocksize</code> of <code>HTTPConnection</code> classes to match high-level classes. Previously was 8KiB, now 16KiB. <a href=\"https://redirect.github.com/urllib3/urllib3/issues/3066%3E\">#3066</a></li>\n</ul>\n<h2>2.0.4</h2>\n<ul>\n<li>Added support for union operators to <code>HTTPHeaderDict</code> (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2254\">#2254</a>)</li>\n<li>Added <code>BaseHTTPResponse</code> to <code>urllib3.__all__</code> (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3078\">#3078</a>)</li>\n<li>Fixed <code>urllib3.connection.HTTPConnection</code> to raise the <code>http.client.connect</code> audit event to have the same behavior as the standard library HTTP client (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/2757\">#2757</a>)</li>\n<li>Relied on the standard library for checking hostnames in supported PyPy releases (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3087\">#3087</a>)</li>\n</ul>\n<h2>2.0.3</h2>\n<ul>\n<li>Allowed alternative SSL libraries such as LibreSSL, while still issuing a warning as we cannot help users facing issues with implementations other than OpenSSL. <a href=\"https://redirect.github.com/urllib3/urllib3/issues/3020\">#3020</a></li>\n<li>Deprecated URLs which don't have an explicit scheme <a href=\"https://redirect.github.com/urllib3/urllib3/pull/2950\">#2950</a></li>\n<li>Fixed response decoding with Zstandard when compressed data is made of several frames. <a href=\"https://redirect.github.com/urllib3/urllib3/issues/3008\">#3008</a></li>\n<li>Fixed <code>assert_hostname=False</code> to correctly skip hostname check. <a href=\"https://redirect.github.com/urllib3/urllib3/issues/3051\">#3051</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/urllib3/urllib3/blob/main/CHANGES.rst\">urllib3's changelog</a>.</em></p>\n<blockquote>\n<h1>2.0.6 (2023-10-02)</h1>\n<ul>\n<li>Added the <code>Cookie</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>\n</ul>\n<h1>2.0.5 (2023-09-20)</h1>\n<ul>\n<li>Allowed pyOpenSSL third-party module without any deprecation warning. (<code>[#3126](https://github.com/urllib3/urllib3/issues/3126) &lt;https://github.com/urllib3/urllib3/issues/3126&gt;</code>__)</li>\n<li>Fixed default <code>blocksize</code> of <code>HTTPConnection</code> classes to match high-level classes. Previously was 8KiB, now 16KiB. (<code>[#3066](https://github.com/urllib3/urllib3/issues/3066) &lt;https://github.com/urllib3/urllib3/issues/3066&gt;</code>__)</li>\n</ul>\n<h1>2.0.4 (2023-07-19)</h1>\n<ul>\n<li>Added support for union operators to <code>HTTPHeaderDict</code> (<code>[#2254](https://github.com/urllib3/urllib3/issues/2254) &lt;https://github.com/urllib3/urllib3/issues/2254&gt;</code>__)</li>\n<li>Added <code>BaseHTTPResponse</code> to <code>urllib3.__all__</code> (<code>[#3078](https://github.com/urllib3/urllib3/issues/3078) &lt;https://github.com/urllib3/urllib3/issues/3078&gt;</code>__)</li>\n<li>Fixed <code>urllib3.connection.HTTPConnection</code> to raise the <code>http.client.connect</code> audit event to have the same behavior as the standard library HTTP client (<code>[#2757](https://github.com/urllib3/urllib3/issues/2757) &lt;https://github.com/urllib3/urllib3/issues/2757&gt;</code>__)</li>\n<li>Relied on the standard library for checking hostnames in supported PyPy releases (<code>[#3087](https://github.com/urllib3/urllib3/issues/3087) &lt;https://github.com/urllib3/urllib3/issues/3087&gt;</code>__)</li>\n</ul>\n<h1>2.0.3 (2023-06-07)</h1>\n<ul>\n<li>Allowed alternative SSL libraries such as LibreSSL, while still issuing a warning as we cannot help users facing issues with implementations other than OpenSSL. (<code>[#3020](https://github.com/urllib3/urllib3/issues/3020) &lt;https://github.com/urllib3/urllib3/issues/3020&gt;</code>__)</li>\n<li>Deprecated URLs which don't have an explicit scheme (<code>[#2950](https://github.com/urllib3/urllib3/issues/2950) &lt;https://github.com/urllib3/urllib3/pull/2950&gt;</code>_)</li>\n<li>Fixed response decoding with Zstandard when compressed data is made of several frames. (<code>[#3008](https://github.com/urllib3/urllib3/issues/3008) &lt;https://github.com/urllib3/urllib3/issues/3008&gt;</code>__)</li>\n<li>Fixed <code>assert_hostname=False</code> to correctly skip hostname check. (<code>[#3051](https://github.com/urllib3/urllib3/issues/3051) &lt;https://github.com/urllib3/urllib3/issues/3051&gt;</code>__)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/262e3e332209ee93ff70e2b13502c8f20c105ac8\"><code>262e3e3</code></a> Release 2.0.6</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/644124ecd0b6e417c527191f866daa05a5a2056d\"><code>644124e</code></a> Merge pull request from GHSA-v845-jxx5-vc9f</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/740380c59ca2a7c2dceca19e5dba99f6b7060e62\"><code>740380c</code></a> Bump cryptography from 41.0.3 to 41.0.4 (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3131\">#3131</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/d9f85a749488188c286cd50606d159874db94d5f\"><code>d9f85a7</code></a> Release 2.0.5</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/d41f4122966f7f4f5f92001ad518e5d9dafcc886\"><code>d41f412</code></a> Undeprecate pyOpenSSL module (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3127\">#3127</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/b6c04cb3e62ef5a0e4947d037c12fb3ca79e024a\"><code>b6c04cb</code></a> Fix a link to &quot;absolute URI&quot; definition (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3128\">#3128</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/af7c78fa30f5a4e265911371d0c59b6baeddca0f\"><code>af7c78f</code></a> refactor: change double conditional to one (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3118\">#3118</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/34c13c8e68df6f89890ba08b9fc4fbf87ed21669\"><code>34c13c8</code></a> Refer to current internet standards in docs on proxies (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3124\">#3124</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/a3e94f218cd8297db73302eadae235f0c832a809\"><code>a3e94f2</code></a> Fix a name of an attribute in docs (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3125\">#3125</a>)</li>\n<li><a href=\"https://github.com/urllib3/urllib3/commit/da69d4f4f95bc7ef9307fc8e0499c2121f1e4791\"><code>da69d4f</code></a> Fix docs build (<a href=\"https://redirect.github.com/urllib3/urllib3/issues/3123\">#3123</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/urllib3/urllib3/compare/2.0.2...2.0.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=2.0.2&new-version=2.0.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/demo/playground/scripts/urllib3-2.0.6",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2524)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2524&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2524) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2524) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2524 from hyperledger/dependabot/pip/demo/playground/scripts/urllib3-2.0.6\n\nchore(deps): Bump urllib3 from 2.0.2 to 2.0.6 in /demo/playground/scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d62ac254a19ac294820",
    "number": 2523,
    "body": "Added in `handle_full_registry` but seems to be some issues with how the counts work.\r\nCannot set the `next_index` to start at 0 because the credential data is invalid.\r\nAnd because we don't track the index and current revocation id externally, we can't trigger the `handle_full_registry` until after a credential is created. So for every list/index we lose 1 slot. The only way I could successfully have registries rollover AND create the credentials successfully was triggering 1 slot before the max. cred. num.\r\n\r\n\r\n",
    "head_branch": "2504-revocation-rotate",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2523)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2523&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2523) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2523) No Duplication information\n\n",
      "I am adding more context for the issues I hit dealing with rev list indexes/cred revocation id\r\n\r\nFirst, this is when I set the starting `\"next_index\"` to [zero](https://github.com/usingtechnology/aries-cloudagent-python/blob/eb962c0c43df3898fbb760e4ed3c761646d02ea6/aries_cloudagent/anoncreds/revocation.py#L421)...\r\n\r\nThis is the holder side exception:\r\n\r\n```\r\nCredential: state = credential-received, cred_ex_id = b98bbfcd-385c-4729-9950-8f52442e475f\r\n2023-10-03 16:27:41,207 aries_cloudagent.protocols.issue_credential.v2_0.formats.indy.handler ERROR Error storing credential: None - Error processing received credential\r\n2023-10-03 16:27:41,208 aries_cloudagent.messaging.base_handler ERROR Error storing issued credential\r\nTraceback (most recent call last):\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/holder.py\", line 198, in store_credential\r\n    cred_recvd = await asyncio.get_event_loop().run_in_executor(\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\nCredential: state = abandoned, cred_ex_id = b98bbfcd-385c-4729-9950-8f52442e475f\r\nProblem report message: Error processing received credential. Error: Invalid structure. Caused by: Issuer is sending incorrect data.\r\n    future.result()\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.9/concurrent/futures/thread.py\", line 58, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\nCredential: state = done, cred_ex_id = b98bbfcd-385c-4729-9950-8f52442e475f\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/types.py\", line 292, in process\r\n    bindings.process_credential(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/bindings.py\", line 715, in process_credential\r\n    do_call(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/bindings.py\", line 504, in do_call\r\n    raise get_current_error(True)\r\nanoncreds.error.AnoncredsError: Error: Invalid structure\r\nCaused by: Issuer is sending incorrect data\r\n\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/handlers/cred_issue_handler.py\", line 71, in handle\r\n    cred_ex_record = await cred_manager.store_credential(cred_ex_record)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/manager.py\", line 623, in store_credential\r\n    await cred_format.handler(self.profile).store_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/formats/indy/handler.py\", line 435, in store_credential\r\n    raise e\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/formats/indy/handler.py\", line 415, in store_credential\r\n    cred_id_stored = await holder.store_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/holder.py\", line 207, in store_credential\r\n    raise AnonCredsHolderError(\"Error processing received credential\") from err\r\naries_cloudagent.anoncreds.holder.AnonCredsHolderError: Error processing received credential\r\n```",
      "Quick ack from me; I'll take a closer look when I can!",
      "And if I do not add [1 to the `cred_rev_id`](https://github.com/usingtechnology/aries-cloudagent-python/blob/eb962c0c43df3898fbb760e4ed3c761646d02ea6/aries_cloudagent/anoncreds/revocation.py#L1029)...\r\n\r\nMost pertinent part of the error: \r\n\r\n```\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/bindings.py\", line 504, in do_call\r\n    raise get_current_error(True)\r\nanoncreds.error.AnoncredsError: Revocation status list does not have the index 4\r\n```\r\n\r\nFull trace: \r\n\r\n```\r\n\r\nTraceback (most recent call last):\r\n=================\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 934, in _create_credential\r\n    credential = await asyncio.get_event_loop().run_in_executor(\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\n    future.result()\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.9/concurrent/futures/thread.py\", line 58, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 936, in <lambda>\r\n    lambda: Credential.create(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/types.py\", line 265, in create\r\n    cred = bindings.create_credential(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/bindings.py\", line 680, in create_credential\r\n    do_call(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/bindings.py\", line 504, in do_call\r\n    raise get_current_error(True)\r\nanoncreds.error.AnoncredsError: Revocation status list does not have the index 4\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 258, in __step\r\n    result = coro.throw(exc)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/routes.py\", line 1383, in credential_exchange_issue\r\n    (cred_ex_record, cred_issue_message) = await cred_manager.issue_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/manager.py\", line 508, in issue_credential\r\n    await cred_format.handler(self.profile).issue_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/formats/indy/handler.py\", line 333, in issue_credential\r\n    cred_json, cred_rev_id, rev_reg_def_id = await revocation.create_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 949, in _create_credential\r\naries_cloudagent.anoncreds.revocation.AnonCredsRevocationError: Error creating credential\r\n2023-10-03 16:48:38,158 aries_cloudagent.admin.server ERROR Handler error with exception: Error creating credential\r\nTraceback (most recent call last):\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 934, in _create_credential\r\n    credential = await asyncio.get_event_loop().run_in_executor(\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\n    future.result()\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.9/concurrent/futures/thread.py\", line 58, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 936, in <lambda>\r\n    lambda: Credential.create(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/types.py\", line 265, in create\r\n    cred = bindings.create_credential(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/bindings.py\", line 680, in create_credential\r\n    do_call(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/bindings.py\", line 504, in do_call\r\n    raise get_current_error(True)\r\nanoncreds.error.AnoncredsError: Revocation status list does not have the index 4\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 173, in ready_middleware\r\n    return await handler(request)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 210, in debug_middleware\r\n    return await handler(request)\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/aiohttp_apispec/middlewares.py\", line 45, in validation_middleware\r\n    return await handler(request)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 423, in setup_context\r\n    return await task\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\n    future.result()\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 258, in __step\r\n    result = coro.throw(exc)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/routes.py\", line 1383, in credential_exchange_issue\r\n    (cred_ex_record, cred_issue_message) = await cred_manager.issue_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/manager.py\", line 508, in issue_credential\r\n    await cred_format.handler(self.profile).issue_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/formats/indy/handler.py\", line 333, in issue_credential\r\n    cred_json, cred_rev_id, rev_reg_def_id = await revocation.create_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 1010, in create_credential\r\n    cred_json, cred_rev_id = await self._create_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 949, in _create_credential\r\n    raise AnonCredsRevocationError(\"Error creating credential\") from err\r\naries_cloudagent.anoncreds.revocation.AnonCredsRevocationError: Error creating credential\r\n2023-10-03 16:48:38,177 aiohttp.server ERROR Error handling request\r\nTraceback (most recent call last):\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 934, in _create_credential\r\n    credential = await asyncio.get_event_loop().run_in_executor(\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\n    future.result()\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.9/concurrent/futures/thread.py\", line 58, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 936, in <lambda>\r\n    lambda: Credential.create(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/types.py\", line 265, in create\r\n    cred = bindings.create_credential(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/bindings.py\", line 680, in create_credential\r\n    do_call(\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/anoncreds/bindings.py\", line 504, in do_call\r\n    raise get_current_error(True)\r\nanoncreds.error.AnoncredsError: Revocation status list does not have the index 4\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/aiohttp/web_protocol.py\", line 433, in _handle_request\r\n    resp = await request_handler(request)\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/aiohttp/web_app.py\", line 504, in _handle\r\n    resp = await handler(request)\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/aiohttp/web_middlewares.py\", line 117, in impl\r\n    return await handler(request)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 173, in ready_middleware\r\n    return await handler(request)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 210, in debug_middleware\r\n    return await handler(request)\r\n  File \"/home/vscode/.local/lib/python3.9/site-packages/aiohttp_apispec/middlewares.py\", line 45, in validation_middleware\r\n    return await handler(request)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 423, in setup_context\r\n    return await task\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 284, in __await__\r\n    yield self  # This tells Task to wait for completion.\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 328, in __wakeup\r\n    future.result()\r\n  File \"/usr/local/lib/python3.9/asyncio/futures.py\", line 201, in result\r\n    raise self._exception\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 258, in __step\r\n    result = coro.throw(exc)\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/routes.py\", line 1383, in credential_exchange_issue\r\n    (cred_ex_record, cred_issue_message) = await cred_manager.issue_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/manager.py\", line 508, in issue_credential\r\n    await cred_format.handler(self.profile).issue_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/protocols/issue_credential/v2_0/formats/indy/handler.py\", line 333, in issue_credential\r\n    cred_json, cred_rev_id, rev_reg_def_id = await revocation.create_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 1010, in create_credential\r\n    cred_json, cred_rev_id = await self._create_credential(\r\n  File \"/workspaces/aries-cloudagent-python/aries_cloudagent/anoncreds/revocation.py\", line 949, in _create_credential\r\n    raise AnonCredsRevocationError(\"Error creating credential\") from err\r\naries_cloudagent.anoncreds.revocation.AnonCredsRevocationError: Error creating credential\r\n```",
      "So it is an off-by-1 error?  The RevId we’re getting back is 0 based and the update is 1 based?  That seems very weird...",
      "Every rev list will be missing 1 slot; not a huge deal on larger sets.  \r\n\r\nI am not quite sure where the logic needs to be updated; it's possible it needs to be changed in the `anoncreds` `Credential.create` method. It would be nice if the library knows that it is on the last index to publish an event or something. Or if it has a pre-check method that would indicate how much space is left in the list? \r\n\r\nIt may be possible that it is a timing issue for the additional steps (upload tails file and register the revocation list), although I tried adding plenty of time (5 seconds) to see if that allowed those tasks to complete.",
      "Speaking from memory, I think I once asked @andrewwhitehead why the first index is unused. I remember there being a good reason but I don't recall the details unfortunately. For a time I thought that the generic interface would have to be 0-based and then we'd have to map it to Indy where it was strictly expected to be 1-based. I had logic that performed this mapping and then, while testing, I found it was actually causing issues. I believe the anoncreds library is expecting indexes to be 1-based for most operations but the full revocation status list is of course just a list making it subject to 0-based indexing for us in python.",
      "There's no technical reason why the counting has to start at 1, but that's the convention right now. The entries in the tails file are multiplied by powers of the secret `gamma` value, and the first usable tails entry is the first power, which is I think why the numbering was started there.",
      "I’m not clear what “it\" is that is starting skipping 1.  Could someone clarify?",
      "Near as I can tell, if I set everything to be zero-based, so pass 0 to the anoncreds library to Credential.create, the credential is created successfully but the HOLDER cannot store the credential.\r\n\r\n```\r\nanoncreds.error.AnoncredsError: Error: Invalid structure\r\nCaused by: Issuer is sending incorrect data\r\n```\r\n\r\nSo something... the wallet? the spec? does not like zero-based, so the first credential is created using `1`. But everything else is zero-based. ",
      "I added a couple changes here to verify the revocation index when a credential is created, as zero shouldn't be accepted: https://github.com/hyperledger/anoncreds-clsignatures-rs/pull/24\r\n\r\nIn indy-credx (using deltas), the indexes are always 1-based. In anoncreds-rs, using status lists, I'm not sure at the moment if the first index is skipped or if it's interpreted as starting at 1."
    ],
    "commit_messages": [
      "Merge pull request #2523 from usingtechnology/2504-revocation-rotate\n\nAdd /rotate to revocation api."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d63ac254a19ac294821",
    "number": 2522,
    "body": null,
    "head_branch": "0.10.3",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2522)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2522&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2522) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2522) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2522 from swcurran/0.10.3\n\n0.10.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d64ac254a19ac294822",
    "number": 2521,
    "body": "Fixes issues with timeouts during integration tests when the maximum number of connections is low.",
    "head_branch": "fix/session-usage",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2521)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2521&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2521) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2521) No Duplication information\n\n",
      "Looking good. Ran all the AATH acapy tests and all good."
    ],
    "commit_messages": [
      "Merge pull request #2521 from andrewwhitehead/fix/session-usage\n\nAvoid multiple open wallet connections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d65ac254a19ac294823",
    "number": 2520,
    "body": "Updates to:\r\n- Indy-VDR 0.4 release (with did:indy support)\r\n- Indy-Credx 1.1.1 minimum version\r\n- Askar 0.3.0\r\n",
    "head_branch": "upd/vdr-askar",
    "is_a_fork": true,
    "comments": [
      "@andrewwhitehead — any thoughts on the failing Integration tests? I’ve not looked at the logs.\r\n\r\nI did run the acapy AATH test suite and everything ran perfectly.",
      "@swcurran  It looks like those test failures are highlighting the remaining places where store sessions are left open. I'll submit a separate PR with fixes for those, but I suspect that the default maximum number of connections has been reduced for Sqlite, based on the 'available parallelism' it can detect for the current environment. The integration tests could override that but we might want to increase the default maximum number of connections as well.",
      "So this relates to that “define max connections based on available parallelism” — the thing that we saw a month or two back with tests on GHA failing, when working elsewhere?\r\n\r\nNot sure what you mean here:\r\n\r\n>  The integration tests could override that but we might want to increase the default maximum number of connections as well.\r\n\r\nWhere else do you mean?  Overriding it in the integration tests would get them to pass, but where else would we increase it?\r\n",
      "We would increase the default that Askar's sqlite backend settles on, at the moment it can be as low as 2 if it thinks it's on a single-processor system (as I think it can appear on CI).",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2520)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2520) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2520) No Duplication information\n\n",
      "Are we still planning to get this in for 0.11.0?",
      "Looks like there was a breakthrough this morning on what was holding up getting the official releases for Askar and AnonCreds-RS, which in turn was holding up this. Let’s give it a bit more time.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2520)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2520&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2520) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2520) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2520 from andrewwhitehead/upd/vdr-askar\n\nUpdate shared components"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d66ac254a19ac294824",
    "number": 2519,
    "body": "Fixes Credential Exchange Protocol v1 Issue #1730 and similar Issue #2512 for v2.",
    "head_branch": "fix/ProblemReportBeforeConnection",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2519)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2519&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2519) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2519) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2519 from Ennovate-com/fix/ProblemReportBeforeConnection\n\nFix: Problem Report Before Exchange Established"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d67ac254a19ac294825",
    "number": 2517,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n\r\nApproach used was to accept the parameters, but whether set or not, set corresponding config value to True.\r\n\r\nLeft the config settings, but updated the help to say not setting the value is not possible.\r\n\r\nDidn't change the tests, but added a comment about why the of the old setting is not particularly useful...\r\n",
    "head_branch": "default-emits",
    "is_a_fork": true,
    "comments": [
      "Fixes (finally!!) Issues #1042 and #1044.\r\n\r\nOpen to suggestions if we should be more aggressive at removing the setting where it is referenced.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2517)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2517&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2517) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2517) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2517 from swcurran/default-emits\n\nChange arg_parse to always set --emit-new-didcomm-prefix and --emit-new-didcomm-mime-type to true"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d68ac254a19ac294826",
    "number": 2516,
    "body": "This PR is a minor rethink to #2502; as discussed in my comment on that PR, I think I/we went a bit too far with base58 to did:key normalization. This is the minimum set of changes required to fix the two issues.\r\n\r\nFixes #2492.\r\nFixes #2357.\r\n\r\nThese changes also cause did:keys to be sent out in mediation grant messages and, subsequently, connections/did exchange as the `routingKeys` in the DID Document. This has interop implications. A big motivator for these changes however is to enable AFJ/Bifold based agents to connect through a public DID with mediation where AFJ/Bifold is expecting did:keys in the routing keys in the endpoint attrib. So this should help push us towards \"good\" interop and should only break \"bad\" interop.\r\n\r\n**Updates:** This PR has evolved. Here is the current state of the changes.\r\n\r\n- Coordinate Mediation protocol will accept either base58 or did:key (this was already implemented)\r\n- Coordinate Mediation protocol will emit did:key (this was already implemented)\r\n- Coordinate Mediation protocol manager will store the routing keys as did:key values. This is the critical new stuff that solves the issues linked above.\r\n- Connections protocol will accept any of base58, did:key, or did:key refs encoded routingKeys (this was already implemented and recently augmented by #2537).\r\n- Connections protocol will emit base58 encoded routingKeys (for legacy support).\r\n- DID Exchange will accept any of base58, did:key, or did:key ref encoded routingKeys (this was already implemented and recently augmented by #2537).\r\n- DID Exchange will emit did:key ref encoded routingKeys (this is new).\r\n- OOB will accept either did:key or did:key ref encoded routingKeys (this is new).\r\n- OOB will emit did:key ref encoded routingKeys for inline services (this is new).",
    "head_branch": "fix/mediation-routing-keys-as-did-key",
    "is_a_fork": true,
    "comments": [
      "I've got some integration test issues to sort out.",
      "> I've got some integration test issues to sort out.\r\n\r\nOk,  that's good to hear actually. My run of BDD wasn't working (hanging?) but I figured you had run them and that it was just my machine acting up (as it did earlier today) and figured it was time for a reboot. I'll cancel the review/approval and try running BDD after your updates.\r\n",
      "A new development: given our recent tightening up of DID Doc semantics and using PyDID to interact with DID Documents, it came to my attention that we were out of spec with the `routingKeys` values we were sending and accepting previously. Old validation required `did:key`s without a fragment. The only place we really call out what we're expecting in routingKeys is in [the OOB RFC under the description for the services](https://github.com/hyperledger/aries-rfcs/blob/main/features/0434-outofband/README.md#the-services-item). The text says that they should be DID key references but the examples show just `did:key`s. It is also mentioned in the [DID Doc conventions RFC](https://github.com/hyperledger/aries-rfcs/blob/main/features/0067-didcomm-diddoc-conventions/README.md#service-conventions).\r\n\r\nI have corrected our implementation to send and expect `did:key` references.\r\n\r\nThis might present an interop challenge. I'll see if I can check in with AFJ's DID Exchange/OOB implementation and see what it is expecting.",
      "My investigation suggests that AFJ will accept either a DID Key or a DID Key reference. However, it will emit just a DID Key, not a DID Key reference, in OOB invitations but sends references in the DID Docs it forms for DID Exchange...\r\n\r\nPerhaps I can adjust things to accept either in OOB but emit the full references for any we send out.",
      "Ran changes locally...BDD tests look good by pytests are failing.",
      "> My investigation suggests that AFJ will accept either a DID Key or a DID Key reference. However, it will emit just a DID Key, not a DID Key reference, in OOB invitations but sends references in the DID Docs it forms for DID Exchange...\n\nWe ran into this issue in the AFJ implementation of OOB, but as the RFC just used keys (no reference) and ACA-Py's implementation also did that we went for the non-key reference. I think there is an issue somewhere (but it could also be that this was discussed in discord)",
      "FYI -- when I ran the AATH acapy run set, the following two tests fail:\r\n\r\n```\r\nFailing scenarios:\r\n  features/0211-coordinate-mediation.feature:50  Request mediation with the mediator accepting the mediation request and creating a connection using the mediator -- @2.1 0160 connection\r\n  features/0211-coordinate-mediation.feature:149  Two agents creating a connection using a mediator with overlapping transports -- @2.1 Acme and Faber creating a 0160 connection using Bob a mediator with overlapping transports\r\n```\r\n\r\nTo run the specific tests use, update `requirements-main.txt` to use the branch to be merged and then:\r\n\r\n`./manage run -d acapy-main -t @T002-RFC0211,@T004-RFC0211,@T005-RFC0211 -t @RFC0160`\r\n\r\nExample error from run:\r\n\r\n```\r\n     Assertion Failed: FAILED SUB-STEP: And \"Faber\" receives the connection invitation\r\n      Substep info: Assertion Failed: resp_status 422 is not 200; {\"routingKeys\": {\"0\": [\"Value did:key:z6MkfDd4T7QAeuLrjeigXe8HfdvqNHWA5KGmMjkrLceE27Bz#z6MkfDd4T7QAeuLrjeigXe8HfdvqNHWA5KGmMjkrLceE27Bz is not a raw Ed25519VerificationKey2018 key\"]}}\r\n      Traceback (of failed substep):\r\n        File \"/usr/local/lib/python3.7/site-packages/behave/model.py\", line 1329, in run\r\n          match.run(runner.context)\r\n        File \"/usr/local/lib/python3.7/site-packages/behave/matchers.py\", line 98, in run\r\n          self.func(context, *args, **kwargs)\r\n        File \"features/steps/0160-connection.py\", line 152, in step_impl\r\n          assert resp_status == 200, f\"resp_status {resp_status} is not 200; {resp_text}\"\r\n      \r\n      Captured stdout:\r\n      Data table in step contains an unrecognized role 'recipient', must be inviter, invitee, inviteinterceptor, issuer, holder, verifier, prover, requester, responder, mediator, and recipient\r\n      Data table in step contains an unrecognized role 'sender', must be inviter, invitee, inviteinterceptor, issuer, holder, verifier, prover, requester, responder, mediator, and recipient\r\n```",
      "This PR is now ready for review. I ended up trimming out some additional unused code relating to the previously removed old routing protocol and \"inbound connection\" handling on the `create_did_doc` method. Also, I cleaned up some items relating to the route managers to further abstract out multi-tenancy from connection protocols.\r\n\r\nI've adjusted the implementation to make sure that either did:key or the full did:key references are accepted in out-of-band invitations. With the changes from #2536, did:key or did:key refs can be accepted  in connections/did exchange protocols. We will always emit did:key refs for both OOB and DIDExchange. AFJ should be able to process this but other agents may have trouble if they were slightly out of spec like ACA-Py was.",
      "Lots of poking around today and running tests and AATH.\r\nSomething on my local dev doesn't like running pytests, but can run `./scripts/run_tests` successfully and that's what counts.\r\n\r\nMoving on to AATH... there are issues that we need to address in that repo. \r\n\r\nWe need to update `0160-connection.py` to handle `recipient` and `sender` - those are not in the `case/switch` statement so it raises that error when it shouldn't. What I did to bypass this probably isn't proper but it got me further down the call stack to uncover other issues.\r\n\r\nNext there is an actual issue with the tests. When there are no inbound transports, the backchannel code doesn't create an endpoint parameter, so we hit an ACA-py config error.\r\n\r\n`aries_cloudagent.config.error.ArgsParseError: -e/--endpoint is required`. \r\n\r\nSimple enough to add a default `http` endpoint.\r\n\r\nHowever, then you hit another config error: `aries_cloudagent.config.error.ArgsParseError: -it/--inbound-transport is required`.\r\n\r\nI am not sure how this scenario ever ran successfully since the test is to not have inbound transport and for 3 years that configuration has been required. At least from what I can see.\r\n\r\nWIth ALL of that being said, this branch/PR does have an issue to address that is uncovered in AATH... routing keys not Ed25519VerificationKey2018.\r\n\r\n```\r\n  features/0211-coordinate-mediation.feature:50  Request mediation with the mediator accepting the mediation request and creating a connection using the mediator -- @2.1 0160 connection\r\n```\r\n\r\nfails with:\r\n\r\n```\r\n      Assertion Failed: FAILED SUB-STEP: And \"Faber\" receives the connection invitation\r\n      Substep info: Assertion Failed: resp_status 422 is not 200; {\"routingKeys\": {\"0\": [\"Value did:key:z6MkrSmucdbqKmWhVxJM4q2nyAFD1pCLNrfQWttos4ntoqMj#z6MkrSmucdbqKmWhVxJM4q2nyAFD1pCLNrfQWttos4ntoqMj is not a raw Ed25519VerificationKey2018 key\"]}}\r\n      Traceback (of failed substep):\r\n        File \"/usr/local/lib/python3.7/site-packages/behave/model.py\", line 1329, in run\r\n          match.run(runner.context)\r\n        File \"/usr/local/lib/python3.7/site-packages/behave/matchers.py\", line 98, in run\r\n          self.func(context, *args, **kwargs)\r\n        File \"features/steps/0160-connection.py\", line 152, in step_impl\r\n          assert resp_status == 200, f\"resp_status {resp_status} is not 200; {resp_text}\"\r\n```\r\n\r\n\r\n```\r\n  features/0211-coordinate-mediation.feature:149  Two agents creating a connection using a mediator with overlapping transports -- @2.1 Acme and Faber creating a 0160 connection using Bob a mediator with overlapping transports\r\n```\r\n\r\nfails with:\r\n\r\n```\r\n      Assertion Failed: FAILED SUB-STEP: And \"Acme\" receives the connection invitation\r\n      Substep info: Assertion Failed: resp_status 422 is not 200; {\"routingKeys\": {\"0\": [\"Value did:key:z6MkrSmucdbqKmWhVxJM4q2nyAFD1pCLNrfQWttos4ntoqMj#z6MkrSmucdbqKmWhVxJM4q2nyAFD1pCLNrfQWttos4ntoqMj is not a raw Ed25519VerificationKey2018 key\"]}}\r\n      Traceback (of failed substep):\r\n        File \"/usr/local/lib/python3.7/site-packages/behave/model.py\", line 1329, in run\r\n          match.run(runner.context)\r\n        File \"/usr/local/lib/python3.7/site-packages/behave/matchers.py\", line 98, in run\r\n          self.func(context, *args, **kwargs)\r\n        File \"features/steps/0160-connection.py\", line 152, in step_impl\r\n          assert resp_status == 200, f\"resp_status {resp_status} is not 200; {resp_text}\"\r\n```\r\n\r\n",
      "That seems like a long comment, but think it boils down to a routing keys fix, and we add issues to AATH for some other things.",
      "Thanks for the testing @usingtechnology! I'll dig into this when I get a chance.",
      "I'm able to reproduce the issue in my own test environment. Interestingly, it's specific to the connection protocol Admin API. DID Exchange is working fine. Looks like it's a matter of the connection invitation schema being picky about what the routing keys look like.",
      "After double checking the RFC for the connection protocol, it does actually say that the routing keys must be raw keys and not references. I'll make sure these changes keep that consistent.",
      "@usingtechnology @swcurran this PR is ready for review!",
      "Ran it against the AATH test suite and all passed.  Mind you — that was before the 23 commits that @dbluhm just added.  Do I need to re-run the AATH test, Daniel?",
      "Yeah, I think another round of testing is appropriate.",
      "AATH update requirements-main.txt\r\n\r\n```\r\naries-cloudagent[indy, bbs, askar]@git+https://github.com/hyperledger/aries-cloudagent-python@de09845e4ac32081b2825b448dbb1485c5dbdf5d\r\nacapy-resolver-universal@git+https://github.com/sicpa-dlab/acapy-resolver-universal.git@v0.1.0\r\n```\r\n\r\n```\r\nBUILD_AGENTS=acapy-main ./manage build\r\n./manage run -d acapy-main -t @T002-RFC0211,@T004-RFC0211,@T005-RFC0211 -t @RFC0160\r\n```\r\n\r\nStill get the errors like:\r\n\r\n```\r\n      Assertion Failed: FAILED SUB-STEP: And \"Acme\" receives the connection invitation\r\n      Substep info: Assertion Failed: resp_status 422 is not 200; {\"routingKeys\": {\"0\": [\"Value did:key:z6MkfsqtL1nN8Rj94LXBxYXRrbYZfz9kvac4Br3LZkJXRDAr is not a raw Ed25519VerificationKey2018 key\"]}}\r\n      Traceback (of failed substep):\r\n        File \"/usr/local/lib/python3.7/site-packages/behave/model.py\", line 1329, in run\r\n          match.run(runner.context)\r\n        File \"/usr/local/lib/python3.7/site-packages/behave/matchers.py\", line 98, in run\r\n          self.func(context, *args, **kwargs)\r\n        File \"features/steps/0160-connection.py\", line 152, in step_impl\r\n          assert resp_status == 200, f\"resp_status {resp_status} is not 200; {resp_text}\"\r\n```",
      "@usingtechnology I think the commit to checkout should be a8cf6ad684892ff49453662b4843509afc63de89",
      "FYI — when I run PR tests in AATH, I update the requirements-main.txt file to:\r\n\r\n```\r\naries-cloudagent[indy, bbs, askar]@git+https://github.com/<user>/aries-cloudagent-python@<branch in user’s fork>\r\nacapy-resolver-universal@git+https://github.com/sicpa-dlab/acapy-resolver-universal.git@v0.1.0\r\n```\r\n\r\nSo for this one:\r\n\r\n```\r\naries-cloudagent[indy, bbs, askar]@git+https://github.com/dbluhm/aries-cloudagent-python@fix/mediation-routing-keys-as-did-key\r\nacapy-resolver-universal@git+https://github.com/sicpa-dlab/acapy-resolver-universal.git@v0.1.0\r\n\r\n```",
      "When I use the correct commit hash, all looks good. pytests and AATH all check out. Great work!",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2516)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2516&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2516) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2516) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2516 from dbluhm/fix/mediation-routing-keys-as-did-key\n\nfix: mediation routing keys as did key"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d69ac254a19ac294827",
    "number": 2515,
    "body": "Term negotiation was dropped from the coordinate mediation protocol early in the proposal process. Our implementation helped to determine that it should be dropped but predates the decision. The terms support has hung around unused for years. Time to remove it.\r\n\r\nTerms will no longer be stored in mediation records but old mediation records should continue to work (the values will just be ignored).",
    "head_branch": "refactor/mediation-terms-remove",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2515)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2515&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2515) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2515) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2515 from dbluhm/refactor/mediation-terms-remove\n\nrefactor: drop mediator_terms and recipient_terms"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d69ac254a19ac294828",
    "number": 2511,
    "body": "This should resolve some edge cases where the poetry script `aca-py` did not fully replace the need for the dedicated script file in `bin/aca-py` mentioned in #2436. ",
    "head_branch": "restore-aca-py-script",
    "is_a_fork": true,
    "comments": [
      "I'm interested to hear about the scenario where the poetry script is insufficient but this seems fine to me!",
      "The situation we discovered with AATH failures is that when you install `aries_cloudagent` as a dependency the `bin/aca-py` shell script no longer gets installed. AATH backchannels specifically launch instances by calling `bin/aca-py start ...`.\r\n\r\nThe ideal solution here would be to keep installing that script, I don't think this addition to the PR will do that. Or not include it and see if it becomes an issue.  Using the provided/built docker images will not benefit from adding `bin\\aca-py` back in as they work using the poetry command.\r\n\r\nAATH fixed the missing script itself.",
      "My thought is that it doesn’t harm anything to be there, so let’s just leave it. It’s helpful to any installation (like AATH) that assumes it will be there. Does that make sense.\r\n\r\n@Gavinok  you didn’t sign your commit for DCO. Must do for all commits.",
      "certainly doesn't harm to have `bin/aca-py` added to the distribution as before. will have to research how to include that in the distribution and have the file added to the filesystem like before. i don't know the details of the pip install or the poetry install and how to configure the `pyproject.toml` to act like the `setup.cfg/setup.py` from previous distributions.",
      "Is it not just a static file sitting there?  How did we do it before? If this is difficult, no need to do this…\r\n\r\nPerhaps it never was included in the distribution?",
      "sorry, i don't know enough (yet, i guess) about putting together pypi distributions. but AATH was excepting that shell script to be installed to `/usr/local/bin`. That wasn't there once we hit a `poetry` distribution. Ideally when you do `pip install` or `poetry install` we would find the file there and no on would have to adapt their existing code.",
      "Ah. I get it. In AATH we’re pulling it straight out of GitHub. No distribution - just a pull.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2511)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2511&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2511) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2511) No Duplication information\n\n",
      "When ACA-Py is pip installed with the current poetry setup, it will generate a script in the python environment that looks like this:\r\n\r\n```python\r\n#!/tmp/test/env/bin/python\r\n# -*- coding: utf-8 -*-\r\nimport re\r\nimport sys\r\nfrom aries_cloudagent.__main__ import script_main\r\nif __name__ == '__main__':\r\n    sys.argv[0] = re.sub(r'(-script\\.pyw|\\.exe)?$', '', sys.argv[0])\r\n    sys.exit(script_main())\r\n```\r\n\r\nYou can see this for yourself by going to an empty folder and running:\r\n\r\n```sh\r\n$ python -m venv env\r\n$ source env/bin/activate\r\n$ pip install git+https://github.com/hyperledger/aries-cloudagent-python@main\r\n$ cat env/bin/aca-py\r\n```\r\n\r\nYou can do the same with a cloned project:\r\n\r\n```sh\r\n$ git clone git@github.com:hyperledger/aries-cloudagent-python.git\r\n$ cd aries-cloudagent-python\r\n$ python -m venv env\r\n$ source env/bin/activate\r\n$ pip install -e .\r\n$ cat env/bin/aca-py\r\n```\r\n\r\nSo I'm a bit confused. AATH can (probably should?) install the ACA-Py into its environment such that the script will be present.",
      "In case it's relevant, this was using pip version `22.3.1`",
      "Thanks, @dbluhm — that was not clear to me. \r\n\r\nAATH is, I think doing the first example — pip install of the github repo `@main`.  It’s not using venv.  For whatever reason, it is not finding the aca-py script where it used to be, hence the error and the adjustment made in AATH.\r\n\r\nLet’s just cancel this PR and I’ll do a little digging in AATH.  We have a working fix for now, so not the end of the world.\r\n\r\nI had just thought that the bin/aca-py was just removed because poetry provided a different mechanism, and figured just adding the file back in would help others like AATH were expecting it — a trivial redundent change, not needed but harmless.",
      "oh boy, i couldn't help myself... something truly hinky going on.\r\n\r\nlast week, the docker image (AATH) couldn't build because it could not find the `/usr/local/bin/aca-py` file to symlink and execute`RUN ./bin/aca-py --version > ./acapy-version.txt`... Which is how I ended up just putting the file in myself and everything worked.\r\n\r\nthis morning, i just fired up a docker python image (python:3.9-slim-bullseye and added git/pip) then did pip install for various commits that failed last week (including main) and now they all have the `/usr/local/bin/aca-py` file. \r\n\r\ni am perplexed. we have failures in GHA and failures locally now (at least locally) those can't be reproduced. Was this a hiccup in `pip`/`pypi`? Was it not completing the installation?\r\n\r\nTLDR - close this PR as @swcurran suggested. Apparently this was never broken. 🤷 ",
      "Looking at this a bit because I had a chance to…\r\n\r\n@usingtechnology — the `aca-py` script you are using is this:\r\n\r\n```\r\n#!/bin/sh\r\n\r\nif [ -z \"$PYTHON\" ]; then\r\n    PYTHON=`command -v python3`\r\n    if [ -z \"$PYTHON\" ]; then\r\n        PYTHON=python\r\n    fi\r\nfi\r\n\r\n$PYTHON -m aries_cloudagent \"$@\"\r\n```\r\n\r\nThe `/usr/local/bin/aca-py` is this:\r\n\r\n```\r\n#!/usr/local/bin/python\r\n# -*- coding: utf-8 -*-\r\nimport re\r\nimport sys\r\nfrom aries_cloudagent.__main__ import script_main\r\nif __name__ == '__main__':\r\n    sys.argv[0] = re.sub(r'(-script\\.pyw|\\.exe)?$', '', sys.argv[0])\r\n    sys.exit(script_main())\r\n```\r\n\r\nIs the problem that AATH made assumptions about the shell script?  I’m not quite sure what that regex in the new script does...",
      "the top script is an exact copy of the bin/aca-py script that used to get included in the distribution (and was in our repo).\r\n\r\nthe second is what the poetry distribution installs/creates.\r\n\r\nthe problem was: for N days, the poetry distribution was not creating that script on install. no idea why it wasn't. after I added the fix to AATH (just adding the script in \"manually\" to AATH image) the installs started working... i even went back and built/ran AATH using a bunch of the \"bad\" commit hashes that I documented and they all worked.  Kind of frustrating really. We could remove the \"fix\" from AATH."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d6aac254a19ac294829",
    "number": 2510,
    "body": null,
    "head_branch": "fix/remove-deps",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2510)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2510&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2510) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2510) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2510 from andrewwhitehead/fix/remove-deps\n\nRemove unused dependencies"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d6bac254a19ac29482a",
    "number": 2509,
    "body": "Verified the latest PR (PyDID update) in AATH -- all tests passed. Looking good!",
    "head_branch": "0.10.2",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2509)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2509&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2509) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2509) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2509 from swcurran/0.10.2\n\n0.10.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d6cac254a19ac29482b",
    "number": 2503,
    "body": "Bumps [cryptography](https://github.com/pyca/cryptography) from 41.0.3 to 41.0.4.\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/pyca/cryptography/blob/main/CHANGELOG.rst\">cryptography's changelog</a>.</em></p>\n<blockquote>\n<p>41.0.4 - 2023-09-19</p>\n<pre><code>\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.1.3.\n<p>.. _v41-0-3:\n</code></pre></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/pyca/cryptography/commit/fc11bce6930e591ce26a2317b31b9ce2b3e25512\"><code>fc11bce</code></a> bump for 41.0.4 (<a href=\"https://redirect.github.com/pyca/cryptography/issues/9629\">#9629</a>)</li>\n<li>See full diff in <a href=\"https://github.com/pyca/cryptography/compare/41.0.3...41.0.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=cryptography&package-manager=pip&previous-version=41.0.3&new-version=41.0.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/cryptography-41.0.4",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2503)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2503&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2503) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2503) No Duplication information\n\n",
      "Looks like cryptography is up-to-date now, so this is no longer needed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d6dac254a19ac29482c",
    "number": 2502,
    "body": "Re: #[2357](https://github.com/hyperledger/aries-cloudagent-python/issues/2357) and #[2492](https://github.com/hyperledger/aries-cloudagent-python/issues/2492)\r\n\r\nIndicio PR: https://github.com/Indicio-tech/aries-cloudagent-python/pull/153\r\n\r\nTagging and credit due to @dbluhm ",
    "head_branch": "fix/mediation-webhook-routing-keys",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2502)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2502&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2502) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2502) No Duplication information\n\n",
      "Marking as draft temporarily: I need to review a couple of instances of these values being used.",
      "I believe I was overzealous with my recommended changes. To address the linked issues, we need only modify the mediation record. It is probably a good idea to limit this PR to just addressing the mediation record routing key representation. Changing route record would support changing over to sending and receiving `did:key`s in `routing/1.0/forward` messages but I think that's a discussion for another time.",
      "Closing this PR; the upgrade process was an interesting exercise but ultimately the two issues are better addressed by a smaller change set found in #2516. We'll hold onto these changes in this branch in case they become relevant (if we needed to update the `to` field behavior in `routing/1.0/forward`)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d6eac254a19ac29482d",
    "number": 2500,
    "body": "This will correct the errror reported in #2497.",
    "head_branch": "0.10.2",
    "is_a_fork": true,
    "comments": [
      "As a side note, I'm working on getting a similar change set up for main. There's some fun conflicts to resolve with the peerdid library.",
      "Multiformats has an issue with typing-extensions that is causing some minor pains: https://github.com/hashberg-io/multiformats/issues/10\r\n\r\nI'll do some tweaks to work around this.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2500)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2500&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2500) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2500) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2500 from dbluhm/0.10.2\n\nfix: update pydid"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d6eac254a19ac29482e",
    "number": 2499,
    "body": "From issue https://github.com/hyperledger/aries-cloudagent-python/issues/2498\r\n\r\nIt looks like `warning` is not a valid Rust log level string https://docs.rs/log/latest/log/enum.Level.html\r\nFrom what I've seen in traction (which deploys using the dockerfile here), this means logs default to INFO level here even though dockerfile is trying to have it at the warn level. (see details in ticket for what I tried out)",
    "head_branch": "bugfix/dockerfileRustLog",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2499)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2499&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2499) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2499) No Duplication information\n\n",
      "I suppose if anyone is using this dockerfile and counting on having the INFO level logs come out (even though they're not supposed to) they would be missing those after updating to a version including this fix. But in that case one should be setting their own deployment to INFO anyways..."
    ],
    "commit_messages": [
      "Merge pull request #2499 from loneil/bugfix/dockerfileRustLog\n\nUse correct rust log level in dockerfiles"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d6fac254a19ac29482f",
    "number": 2496,
    "body": "- resolve #2473 ",
    "head_branch": "issue_2473",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2496)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2496) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2496) No Duplication information\n\n",
      "Built an Askar only `ACA-Py 0.11.0-pr2496-pre0` prerelease image for this PR; [ACA-Py 0.11.0-pr2496-pre0](https://github.com/hyperledger/aries-cloudagent-python/pkgs/container/aries-cloudagent-python/129810882?tag=py3.9-ACA-Py-0.11.0-pr2496-pre0)\r\n\r\ncc @shaangill025 ",
      "same for me @esune. code makes sense and looks ok to me. can we get someone from the traction team to attempt reproducing this error using this code?\r\n\r\nsomething like this in poetry...\r\n\r\n```\r\naries-cloudagent = { git = \"https://github.com/hyperledger/aries-cloudagent-python\", rev = \"ee67a59a3a84fcc1f87c59d65aef28202ffad99c\" }\r\n```",
      "> same for me @esune. code makes sense and looks ok to me. can we get someone from the traction team to attempt reproducing this error using this code?\r\n> \r\n> something like this in poetry...\r\n> \r\n> ```\r\n> aries-cloudagent = { git = \"https://github.com/hyperledger/aries-cloudagent-python\", rev = \"ee67a59a3a84fcc1f87c59d65aef28202ffad99c\" }\r\n> ```\r\n\r\n@shaangill025 mentioned he is still getting an error during stand-up this morning so we might want to wait for an update from him regarding further testing",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2496)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2496) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2496) No Duplication information\n\n",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2496)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2496&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2496) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2496) No Duplication information\n\n",
      "OBE -- this continues to be an issue that we want to address but will probably need to start fresh.\r\n@esune voluntold to write us a note in the docs for 1.0.0"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d70ac254a19ac294830",
    "number": 2495,
    "body": "This PR fixes the scripts/run_tests script and its dockerfiles to make sure it doesn't copy local .venv directories into the container image. This was causing the script to fail.",
    "head_branch": "fix/scripts-run-test",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2495)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2495&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2495) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2495) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2495 from dbluhm/fix/scripts-run-test\n\nfix: run tests script copying local env"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d71ac254a19ac294831",
    "number": 2494,
    "body": "This PR is an early implementation of the [RFC 0794 DID Rotate protocol](https://github.com/hyperledger/aries-rfcs/tree/main/features/0794-did-rotate). This was an exercise to feel out any potential issues with the protocol as defined.\r\n\r\nThis is not yet a complete implementation. Notably missing right now is a way to actually trigger a DID rotation through an Admin API call. I also need to finish wiring up the handlers to the manager. And who could forget about tests. :slightly_smiling_face: \r\n\r\nOverall, the protocol is solid. I'll report my thoughts on the protocol on the PR to the Aries RFCs.\r\n\r\nAn ACA-Py specific concern I discovered in this process that probably deserves some discussion: invalidating the connection target cache when the DID Rotation is committed. As currently structured, we never really expect the connection targets for a connection to change after the protocol establishing it concludes. DID Rotation shakes that expectation up.\r\n\r\nRight now, in my changes, I've added a `clear_connection_targets_cache` helper method to partially address this. It's partial because it will only work for ACA-Py when run as a single instance with the default in memory cache or if you're using Indicio's redis cache plugin for whole cluster shared caching.\r\n\r\nI think it would be better for ACA-Py to use a value including both DIDs of the connection in the cache key as a more complete solution. The problem with this and why I've not done it on a first pass is that there would need to be some restructuring of how we use the `Responder` classes so that the `send` methods expect a whole `ConnRecord` and not just a `connection_id` (or individually a `their_did` and `my_did`, I suppose) so we can extract the DIDs from it. 9 times out of 10, I would say that connection record is already available to the caller of the `send` method and my hypothesis is that in the remaining 1 time out of 10, it will not dramatically impact performance of critical operations (it is not common for us to know the connection_id and not also have a connection record -- maybe only a few places in the Admin API might be like this).\r\n\r\nI'll do some more investigation on these points. Might be good to talk implications at the next ACA-PUG call.\r\n\r\ncc @swcurran @TelegramSam\r\nFYI @Jsyro this has ties back to updating the DIDs associated with connections that we've talked about recently.",
    "head_branch": "feature/did-rotate",
    "is_a_fork": true,
    "comments": [
      "Oh, also this commit warrants calling out: https://github.com/hyperledger/aries-cloudagent-python/pull/2494/commits/85470cdb13b9e4387448192e4c7f93ccdd26224a\r\n\r\nSome of the expected attributes in the problem report message schema were out of alignment with the spec. Specifically:\r\n- `problem-items` which should be `problem_items`\r\n- `who-retries` which should be `who_retries`\r\n- and `time-noticed` which should be `noticed_time`\r\n\r\nI don't believe these were being used anywhere so I went ahead and corrected the schema.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2494)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2494&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2494) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2494) No Duplication information\n\n",
      "Have opened up #2816. I will add the description from here to that and close this"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d72ac254a19ac294832",
    "number": 2491,
    "body": "- Add critical missing step.\r\n\r\n------------\r\n\r\nThis PR addresses an issue with the documentation discovered here; https://github.com/bcgov/DITP-DevOps/issues/109#issuecomment-1713894110",
    "head_branch": "doc/update-revreg-create",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2491)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2491&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2491) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2491) No Duplication information\n\n",
      "Sorry, the diff looks a little weird.  I think it's tripping over some of the whitespace changes I made - removing trailing whitespace and a few empty lines at the end of the file."
    ],
    "commit_messages": [
      "Merge pull request #2491 from WadeBarnes/doc/update-revreg-create\n\nUpdate steps for Manually Creating Revocation Registries"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d73ac254a19ac294833",
    "number": 2490,
    "body": "Changed from `value`, which may or may not be a list, to `subject`, derived from `subjects` which is always a list.",
    "head_branch": "fix/KeyError",
    "is_a_fork": true,
    "comments": [
      "Thanks for the fix! At a glance, based on the details you provided in the issue, this seems like a pretty straightforward change. I'll take a closer look once checks complete :slightly_smiling_face: ",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2490)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2490&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2490) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2490) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2490 from Ennovate-com/fix/KeyError\n\nIssue #2488 KeyError raised when Subject ID is not a URI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d74ac254a19ac294834",
    "number": 2489,
    "body": "Changed from `value`, which may or may not be a list, to `subject`, derived from `subjects` which is always a list.",
    "head_branch": "fix/KeyError",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2489)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2489&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2489) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2489) No Duplication information\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d75ac254a19ac294835",
    "number": 2487,
    "body": "Adds SD-JWT support for sign and verify endpoints, including optional key binding.\r\n\r\nBy default, all claims at all levels of the payload can be selectively disclosable (with the exception of essential verification data such as iss, iat, cnf, etc.), unless indicated otherwise by the issuer.\r\n\r\nInfo from @dbluhm: This PR, like the JWT sign and verify endpoints added previously, adds basic support for creation and verification of SD-JWTs. The methods/endpoints do not place any expectations on the payload beyond those required by the SD-JWT specification; in other words, the payload is not required to be a VC. As it stands, this enables other services to take advantage of ACA-Py's secure storage and DID Resolution capabilities to create and verify SD-JWT VCs but does not enable ACA-Py to do the same on its own. This is the foundational work required to later add support for SD-JWT VCs to the rest of ACA-Py's Issuance and Verification stacks.",
    "head_branch": "feat/sd-jwt-implementation",
    "is_a_fork": true,
    "comments": [
      "What a treat on a Friday afternoon!!  Way cool!\r\n\r\nWould be great to see a doc file included that outlined the functionality.",
      "Some quick notes: this PR, like the JWT sign and verify endpoints added previously, adds basic support for creation and verification of SD-JWTs. The methods/endpoints do not place any expectations on the payload beyond those required by the SD-JWT specification; in other words, the payload is not required to be a VC. As it stands, this enables other services to take advantage of ACA-Py's secure storage and DID Resolution capabilities to create and verify SD-JWT VCs but does not enable ACA-Py to do the same on it's own. This is the foundational work required to later add support for SD-JWT VCs to the rest of ACA-Py's Issuance and Verification stacks.",
      "Looks comprehensive, thanks! Hopefully that library does get released on PyPI shortly.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2487)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2487&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2487) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2487) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2487 from Indicio-tech/feat/sd-jwt-implementation\n\nFeat/sd jwt implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d75ac254a19ac294836",
    "number": 2486,
    "body": "- resolve #2485 ",
    "head_branch": "tagged_upgrades",
    "is_a_fork": true,
    "comments": [
      "I'd like to have this change in a separate release from `0.10.2` (https://github.com/hyperledger/aries-cloudagent-python/issues/2479) as I think it's important to get those changes out first.  I can build a pre-release image off this PR and use that for testing with the affected LSBC agent instance. ",
      "Definitely separate from 0.10.2. 0.10.2 is a patch release with two cherry picked PRs from main. This will go into what is likely 0.11.x when merged.",
      "To run the upgrade:\r\n`./scripts/run_docker upgrade --force-upgrade --named-tag fix_issue_rev_reg`",
      "@esune and @WadeBarnes to perform some testing before this gets merged.",
      "@esune, [ghcr.io/hyperledger/aries-cloudagent-python:py3.9-indy-1.16.0-0.11.0-pre0-pr2486](https://github.com/hyperledger/aries-cloudagent-python/pkgs/container/aries-cloudagent-python/128038245?tag=py3.9-indy-1.16.0-0.11.0-pre0-pr2486) has been built and contains the changes from this PR.",
      "@shaangill025, Error log from a test run on the LSBC `dev` agent:\r\nhttps://github.com/hyperledger/aries-cloudagent-python/issues/2485#issuecomment-1719954983",
      "@WadeBarnes Should be fixed now, can you give another try?",
      "Test results from the latest changes can be found here (no errors); https://github.com/hyperledger/aries-cloudagent-python/issues/2485#issuecomment-1721360533",
      "@shaangill025, I'm not sure the log messages should be issued at `ERROR` level when they aren't actually errors.",
      "There are still some issues with the calls to `/revocation/registry/{rev_reg_id}/fix-revocation-entry-state` however.  Adding the details to the related ticket; https://github.com/hyperledger/aries-cloudagent-python/issues/2485#issuecomment-1721420764",
      "@WadeBarnes If re-run the upgrade, are there any log messages related to `IssueRevRegRecord`?",
      "> @WadeBarnes If re-run the upgrade, are there any log messages related to `IssueRevRegRecord`?\r\n\r\nNo.  No output.  I assumes that means it found nothing to do.",
      "> No. No output. I assumes that means it found nothing to do.\r\n\r\nYes, no problematic records with `issuance_type` remain.",
      "Details of another error where added here; https://github.com/hyperledger/aries-cloudagent-python/issues/2485#issuecomment-1721477640.  Not sure if this error is related to this issue or the fix at all.",
      "@WadeBarnes Can you please test this by calling `fix-revocation-entry-state` against the problematic `rev_reg_ids`?",
      "> @WadeBarnes Can you please test this by calling `fix-revocation-entry-state` against the problematic `rev_reg_ids`?\r\n\r\nI'm assuming I need to upgrade the instance with your latest changes on this PR first.  Is that correct?",
      "> I'm assuming I need to upgrade the instance with your latest changes on this PR first. Is that correct?\r\n\r\nThat's correct",
      "New pre-release image created with the latest changes to this PR; https://github.com/hyperledger/aries-cloudagent-python/pkgs/container/aries-cloudagent-python/129376415?tag=py3.9-indy-1.16.0-0.11.0-pr2486-pre2",
      "Encountered a different error.  Details and logs here; https://github.com/hyperledger/aries-cloudagent-python/issues/2485#issuecomment-1725901972",
      "After migrating from Indy to Askar storage the calls to `fix-revocation-entry-state` (with `apply_ledger_update=false`) completed successfully; https://github.com/hyperledger/aries-cloudagent-python/issues/2485#issuecomment-1727931336.\r\n\r\nHowever the the call to `fix-revocation-entry-state` (with `apply_ledger_update=true`) failed;  https://github.com/hyperledger/aries-cloudagent-python/issues/2485#issuecomment-1727944746",
      "New pre-release image created with the latest changes to this PR; https://github.com/hyperledger/aries-cloudagent-python/pkgs/container/aries-cloudagent-python/129813006?tag=py3.9-indy-1.16.0-0.11.0-pr2486-pre3",
      "Latest changes fix the reported issues; https://github.com/hyperledger/aries-cloudagent-python/issues/2485#issuecomment-1728191251",
      "We're going to have LSBC verify their revoke and re-issue workflow still works.",
      "LSBC has competed testing and confirmed things are working; https://github.com/hyperledger/aries-cloudagent-python/issues/2485#issuecomment-1728425461",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2486)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2486&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2486) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2486) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2486 from shaangill025/tagged_upgrades\n\nFeat: Upgrade from tags and fix issue with legacy IssuerRevRegRecords [<=`v0.5.2`]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d76ac254a19ac294837",
    "number": 2484,
    "body": null,
    "head_branch": "swcurran-0.10.2",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2484)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2484&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2484) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2484) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2484 from hyperledger/swcurran-0.10.2\n\n0.10.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d77ac254a19ac294838",
    "number": 2483,
    "body": "- Update sample files and documentation for ruff usage.\r\n\r\nThe main purpose of the PR is to address changes in version from #2471.\r\n\r\nSee an ill-advised workaround at #2481 for more reference. Main issue is running the pytests in the devcontainer. Thanks @dbluhm for questioning if that PR was the right thing to do (it wasn't).\r\n\r\nThis also updates `flake8` references in devcontainer to `ruff` and updates example run configs.\r\n\r\nCloses #2455 ",
    "head_branch": "devcontainer-acapy-version",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2483)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2483&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2483) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2483) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2483 from hyperledger/devcontainer-acapy-version\n\nUpdate devcontainer to read version from aries-cloudagent package"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d78ac254a19ac294839",
    "number": 2482,
    "body": "Re 0.10.2-rc0 patch release",
    "head_branch": "0.10.2_release",
    "is_a_fork": true,
    "comments": [
      "There's something funky going on here; the commit currently in this PR is already on the 0.10.2 branch: https://github.com/hyperledger/aries-cloudagent-python/commit/9ccf56a484550cd806dd9c9471ddeaa2f2803126",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2482)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2482&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2482) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2482) No Duplication information\n\n",
      "@dbluhm Should be fixed now, will take it out of draft as soon as #2480 is merged.",
      "We've lost #2475 from the main branch -- it's been closed but not merged.  Doesn't look right...\r\n\r\n@dbluhm -- can you check?  0.10.2 looks right to me -- has both PRs, but does main?"
    ],
    "commit_messages": [
      "Merge pull request #2482 from shaangill025/0.10.2_release\n\n0.10.2 Patch Release - fix issue #2475, #2477"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d79ac254a19ac29483a",
    "number": 2481,
    "body": "Slight tweak to the package version read. See #2471 \r\n\r\nWhen running locally, without `poetry` (ie `devcontainer`), the pytests need to read the version but the `aries-cloudagent` package is not installed. This will read the value from the `pyproject.toml` directly if package not found.\r\n\r\nBuilt images will read from the installed package metadata, but pytests (run locally) read from pyproject.toml.",
    "head_branch": "acapy-version-local",
    "is_a_fork": false,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2481)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2481&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2481) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2481) No Duplication information\n\n",
      "I'm okay with this workaround but can't help but wonder if it would be better to install the package with poetry in the devcontainer?",
      "> \r\n\r\nThat would be ideal, but can't tell the container to use the poetry virtual env to be the containers python (at least I couldn't figure it out). You can make any command/task you want use poetry but the built-in facilities - running the pytests - don't/can't use the virtual env :(",
      "Apologies if this is naive (I don't use the devcontainer setup in my environment (yet lol)): is this perhaps a workaround? https://www.richtman.au/blog/poetry-package-development-with-vscode-devcontainers/\r\n\r\n",
      "Thanks for that. Let's pin this for now and I will explore what you've found. Looks promising! Going to set this to draft (in case anyone needs this for immediate help).",
      "I'm going to close this, I did find a more acceptable workaround that is limited to devcontainer code.\r\n\r\nBasically, do a separate call to `pip3 install aries-cloudagent` ( we do the same to install behave and black ) to the devcontainer and the pytests pick up the version since the package can be resolved. It still runs the local source for the tests..."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d7aac254a19ac29483b",
    "number": 2480,
    "body": "- resolve #2477 ",
    "head_branch": "issue_2477",
    "is_a_fork": true,
    "comments": [
      "@shaangill025 — perhaps best to have a quick checkin with @esune to go over why this addresses the issue in #2477 .\r\n\r\nThanks!",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2480)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2480&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2480) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2480) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2480 from shaangill025/issue_2477\n\nBugfix: Issue with write ledger pool when performing Accumulator sync"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d7aac254a19ac29483c",
    "number": 2476,
    "body": "Resolves #2475.",
    "head_branch": "fix/service-endpoint-unique-ids",
    "is_a_fork": true,
    "comments": [
      "Thanks, @dbluhm — you are awesome!!  Let’s determine how best to get these three little lines into the wild!",
      "@usingtechnology @Jsyro — this is the PR for review.  Handling old DID Docs, addressing the “can’t connect to the endorser” issue.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2476)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2476&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2476) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2476) No Duplication information\n\n",
      "Looks good!"
    ],
    "commit_messages": [
      "Merge pull request #2476 from dbluhm/fix/service-endpoint-unique-ids\n\nfix: unique ids for services in legacy peer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d7bac254a19ac29483d",
    "number": 2472,
    "body": "First component to final solution for #2249. \r\n\r\nAdd resolution capabilities for did:peer:2 and did:peer:3, as well as did:peer:3 creation methods. ",
    "head_branch": "feature/peer-did-resolution",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2472)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2472&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2472) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2472) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2472 from Jsyro/feature/peer-did-resolution\n\npeer did 2/3 resolution"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d7cac254a19ac29483e",
    "number": 2471,
    "body": "`aries_cloudagent.version.__version__` was out of sync with the version listed in the pyproject.toml file. The pyproject.toml file should be the source of truth as it will be used when publishing using poetry. However, `__version__` is used in code for some operations. To ensure that the pyproject file and the `__version__` can't get out of sync, `aries_cloudagent.version` will now be read from the package metadata.\r\n\r\nUpdate: I was previously trying to read from pyproject.toml. This was a naive approach that wouldn't have worked after installing ACA-Py as a pip package. The better solution is the one I've switched to, just reading the package metadata.\r\n\r\n",
    "head_branch": "fix/version-read-from-pyproject",
    "is_a_fork": true,
    "comments": [
      "Dang — I didn’t get the memo about that addition. I’ll update the “Publishing.md” doc to add that.  However, in that document, I did say **double check that there is not the version somewhere else** so I should have caught it…\r\n\r\n🦤 \r\n\r\n\r\nBigger question — does this mean we need to do a 0.10.2 to get this properly published?",
      "@swcurran No, 0.10.1 is valid since it was published before we merged the poetry PR. So no changes required for the release.",
      "Of course. Phewww…. I didn’t mess up :-)",
      "@swcurran @usingtechnology Sorry, fixing the conflicts on poetry.lock dismissed your reviews -- this should be ready to merge now though!",
      "I need to resolve issues in integration tests. My path to the pyproject.toml is bad. This isn't urgent (until we start preparing for another release) so I'll mark this as a draft and we can get some of the other pending PRs merged first.",
      "@usingtechnology @swcurran this is ready for another review.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2471)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2471&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2471) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2471) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2471 from dbluhm/fix/version-read-from-pyproject\n\nfix: version should be set by pyproject.toml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d7dac254a19ac29483f",
    "number": 2470,
    "body": "Resolves #2437\r\n\r\nThis PR essentially updates the model schema definitions (used in the Swagger/OpenAPI spec) to support verkeys generated with did:key + BBS signature type. At present, the OpenAPI schema models only support ED25519 verkeys, and will raise validation errors when request/responses contain a verkey that is longer than expected.\r\n\r\nIn summary:\r\n- created a class `DidKeyBbsRawPublicKey` to define the regex pattern for did:key + BBS verkeys:\r\n```py\r\n    PATTERN = rf\"^[{B58}]{{131,132}}$\"\r\n```\r\n- created a class `IndyOrKeyBbsPublicKey` to define a validation pattern that accepts either an ED25519 or a BBS verkey\r\n- replaced all cases where validation uses `INDY_RAW_PUBLIC_KEY_VALIDATE` to rather use the \"indy or key bbs\" pattern.\r\n\r\nThe affected models are as follows:\r\n- ConnRecord - `invitation_key` field can now be a BBS verkey. Likewise for:\r\n- ConnectionTarget - `recipient_keys`, `routing_keys`, and `sender_key`\r\n- `verkey` fields in RegisterLedgerNymQueryString and GetDIDVerkeyResponse\r\n- `signer` in SignatureDecorator\r\n- `recipient_keys` and `routing_keys` in ServiceDecorator, in ConnectionInvitation, and in CreateInvitationRequest\r\n- `my_verkey` and `their_verkey` in ConnectionStaticResult\r\n- `invitation_key` in ConnectionsListQueryString\r\n- lastly: `verkey` in DIDSchema and DIDListQueryStringSchema\r\n\r\nTo reiterate: all of the above fields were previously specified to use the indy verkey validation. This is now updated so that did-key/BBS verkeys can also pass validation. \r\n\r\nThere are no changes to the internal processing of did:key / BBS verkey support for methods that use these schemas; this PR simply updates the schema's validation patterns so that BBS verkeys can be passed in request/response bodies.\r\n\r\nIf there are any schema fields above that specifically require validating for only ED25519 verkeys, do let me know! Otherwise, this change will help client libraries that are generated from the OpenAPI spec (like [aries-cloudcontroller](https://github.com/didx-xyz/aries-cloudapi-python)) to use did:key with BBS signature type.",
    "head_branch": "fix/didkey-validation",
    "is_a_fork": true,
    "comments": [
      "Great stuff — thanks!  @andrewwhitehead , can you please review?\r\n\r\nWhat is the BBS+ dependency being used?  AFAIK — we are/were using Ursa, which in turn was using Mattr’s BBS+ implementation.  The Ursa BBS+ support was moved to [aries-bbssignatures-rs](https://github.com/hyperledger/aries-bbssignatures-rs).  However, the transition to that repo is still in progress such that the ACA-Py dependency is still from the (archived) Ursa project.\r\n\r\nA further practical pain was that the BBS+ support in Mattr does not publish an Arm/M1 compatible artifact, so we can’t produce a “pure” M1 friendly ACA-Py artifact.  Does this change help with that?\r\n",
      "@ff137 For many of the updated schemas, Ed25519 keys are strictly expected because the DIDComm pack and unpack operations only support Ed25519/X25519 keys.\r\n\r\n- ConnRecord - `invitation_key` is a key used to pack/unpack initial connection messages\r\n- ConnectionTarget - `recipient_keys`, `routing_keys`, and `sender_key` - each of these is also a key to be used as part pack/unpack\r\n- `verkey` fields in RegisterLedgerNymQueryString and GetDIDVerkeyResponse - These are referencing Indy ledger specific data structures; the verkey associated with nyms are always Ed25519 keys\r\n- `signer` in SignatureDecorator - This one could probably be more flexible. The signature decorator is essentially deprecated though and the only defined signature type supported in the RFC is `ed25519Sha512_single`.\r\n- `recipient_keys` and `routing_keys` in ServiceDecorator, in ConnectionInvitation, and in CreateInvitationRequest - these are pack/unpack keys again\r\n- `my_verkey` and `their_verkey` in ConnectionStaticResult - Same; pack/unpack keys\r\n- `invitation_key` in ConnectionsListQueryString - Same as `invitation_key` above\r\n- `verkey` in DIDSchema and DIDListQueryStringSchema - This one is probably okay but there are deeper problems in how ACA-Py uses the DID objects since it always expects it to be an Ed25519 key, base58 encoded.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2470)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2470&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2470) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2470) No Duplication information\n\n",
      "@dbluhm Thank you! That overview is very helpful.\r\n\r\nSo, in summary, it'll be best for all of the models to stick with validating for an Ed25519 key?\r\nExcept for maybe DIDSchema and DIDListQueryStringSchema.\r\n\r\nInitially it was only DIDSchema that I wanted to update, because that's the response schema for the create-did route. Using did:key + BBS, the response doesn't pass validation / yields 422 unprocessable entity (when using OpenAPI clients)\r\n\r\nNaturally, if we can create it, then we'd want to be able to use the BBS+ verkey everywhere, so I figured update all the models, and get feedback on what needs to stay with Ed25519. But, it looks like everything does!\r\n\r\nSo, I'm wondering, how big of an undertaking is it for me to try contribute BBS+ support for some of the methods associated with these schemas? I take it that it mainly comes down to updating the DIDComm pack/unpack operation. How complex is that? And is it already on the roadmap / a goal in the short term? If it's only a long term goal / somebody not assigned to it, then I'd be willing to take a look and help to expedite it.\r\n\r\nA simple compromise for now would be to only fix the schema for the create-did response, and then add BBS verkey validation for the other models once their methods have support for it.",
      "As a quick but somewhat incomplete response:\r\n\r\nThe pack/unpack crypto is pretty rigidly defined at this point. I think it's unlikely that it would be worth the effort to change it for DIDComm v1. DIDComm v2 I think is a bit more flexible but I haven't looked too deeply at the crypto in use there.",
      "I think this concept would need to be revisited at some point in the future but from the perspective of DIDComm v2 support for different crypto suites. I think this PR is probably DOA until there is further discussions. Thanks for your contributions!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d7eac254a19ac294840",
    "number": 2466,
    "body": "Resolves #2430.\r\n\r\nThis PR removes the old deprecated routing protocol messages pertaining to coordinating a \"route\" with another connection. This functionality was superseded by the coordinate mediation protocol. It's been well over two years since it was superseded so this PR is just taking care of the clean up that probably ought to have been done a while ago.\r\n\r\nIn this PR you will see:\r\n\r\n- Messages and handlers for route queries and updates have been removed\r\n- Methods on the route manager to facilitate route updates have been removed\r\n- The Coordinate Mediation Manager now directly implements logic for performing route updates. It was previously borrowing this logic from the route manager.\r\n- Route related code has been removed from the connection manager and connection record. This was done in such a way that the `routing_state` in the wallet records will still be accepted but will (continue to) be unused.\r\n- The `RouteManager` continues to exist and is used to manage creation of route records. Its responsibilities are now appropriately narrowed to this. It is used by the MediationManager and MultitenancyManager to track routes.",
    "head_branch": "chore/remove-route-protocol",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2466)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2466&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2466) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2466) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2466 from dbluhm/chore/remove-route-protocol\n\nRemove old routing protocol code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d7fac254a19ac294841",
    "number": 2465,
    "body": "I'm not sure what happened -- or perhaps I'm just imagining that it was in our dev deps before -- but black wasn't in our pyproject.toml so I added it back in. And associated lock update.",
    "head_branch": "chore/black-dev-dep",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2465)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2465&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2465) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2465) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2465 from dbluhm/chore/black-dev-dep\n\nchore: add black back in as a dev dep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d80ac254a19ac294842",
    "number": 2464,
    "body": "This PR adds a `timeout` parameter to the DID Resolver interface, defaulting to 30 seconds. Without it, a poorly behaved resolver plugin can \"resolve\" documents that aren't actually DID Docs and cause ACA-Py to run out of memory.\r\n\r\nThere's space for additional tuning on the timeout default. Some DID Methods are, in my experience, quite slow (did:btcr and did:ion resolvers can be pretty slow sometimes). 30 seconds might be overly charitable.",
    "head_branch": "fix/did-resolver-timeouts",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2464)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2464&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2464) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2464) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2464 from dbluhm/fix/did-resolver-timeouts\n\nfeat: add timeout to did resolver resolve method"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d81ac254a19ac294843",
    "number": 2461,
    "body": "Includes fixes to https://github.com/hyperledger/aries-cloudagent-python/issues/2434. Changes all `ConnRecord.States` to match that of rfc160.\r\n\r\nFor additional information, here's the identical PR with some feedback from @dbluhm ~ \r\nhttps://github.com/Indicio-tech/aries-cloudagent-python/pull/151",
    "head_branch": "fix/didexchange-responder-terminal-state-to-active",
    "is_a_fork": true,
    "comments": [
      "@swcurran @usingtechnology @Jsyro Alex is on my team so, in the interest of transparency, a review from one of you guys would be appreciated. To be explicit, this technically constitutes a breaking change if your controller was dependent on the incorrect state showing up on the final webhook for DID exchange. If your implementation was using the `rfc23_state`, there should be no change.",
      "Relevant comment from the original issue: https://github.com/hyperledger/aries-cloudagent-python/issues/2434#issuecomment-1701292309\r\n\r\n> @anwalker293 spotted the issue; in the DID Exchange protocol manager, the conn_record.state is getting set to ConnRecord.State.COMPLETED.rfc23 which is equal to the string completed. This follows the pattern used elsewhere in the manager but since the states happen to align (i.e. request for rfc160 is also request for rfc23), it wasn't obvious that this was incorrect.\r\n> \r\n> conn_record.state should ALWAYS be set to the string for rfc160, whether it's getting set in the connections or did exchange protocols. I think we probably should have handled the state management for these protocols differently but we're here so this is the right fix for now.",
      "@usingtechnology good question and good catch -- I believe the `abandoned` method ought to use the `rfc160` value as well (@anwalker293, one more spot to change here). I believe the `routes.connections_sort_key` is fine though; it's turning the string into the Enum and then checks against that, which is a good methodology.",
      "I think this is the only place to update! But please let me know if you spot any others! :) ",
      "> I think this is the only place to update! But please let me know if you spot any others! :)\r\n\r\nThose were the only 2 places that I found, and the sorting one makes sense to leave alone.",
      "Before we merge, I'm going to check in with some other members of our team at Indicio about the impact of this change on controller work. I'll report back with their input.",
      "Heard back from them: as it happens, because of this inconsistency between the connections and DID Exchange webhooks, our controller work has treated `active` and `completed` the same way. So this change will not be breaking for us and it seems likely that those who have walked a similar path as us may have a similar equivalency in their controllers. Do we have any other controller authors on hand that we can ping for input? @swcurran ",
      "As I understand this, the impact on Controllers will be that the `state` of a connection as reported in webhooks will be different than previously.   We have one controller in the BC Gov world (@marcos-carretero) that I suspect might break.  Most controllers use `—auto-accept` and so will not see it, but that one is not using `—auto…` so is explicitly watching for state changes.\r\n\r\nQuestions:\r\n\r\n- From what I read, the only difference is `completed` will become `active`.  Will any other state changes be seen?\r\n- What release/PR did this regression occur?\r\n\r\nThanks!",
      "> Questions:\r\n> \r\n> * From what I read, the only difference is `completed` will become `active`.  Will any other state changes be seen?\r\n> * What release/PR did this regression occur?\r\n\r\nCorrect, no other state changes, just `completed` -> `active` and only when doing DID Exchange. The connections protocol webhooks are correct.\r\n\r\nThis was introduced at the same time DID Exchange was introduced. At least according to your previous message investigating the blame :smile: Given that the webhooks existed previous to that and had the correct states associated with it for the connections protocol, I'm still inclined to call this a regression.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2461)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2461&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2461) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2461) No Duplication information\n\n"
    ],
    "commit_messages": [
      "Merge pull request #2461 from anwalker293/fix/didexchange-responder-terminal-state-to-active\n\nfix: issue #2434: Change DIDExchange States to Match rfc160"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d82ac254a19ac294844",
    "number": 2458,
    "body": "See issue #2432.\r\n\r\nTrim down `/revocation` API to match up with `/anoncreds/revocation` API. \r\n\r\nRemoved APIs related to [`Manually Creating Revocation Entries`](https://github.com/WadeBarnes/aries-cloudagent-python/blob/fed9590fe98920ea83cf0530c4f65aaac2223aae/docs/GettingStartedAriesDev/CredentialRevocation.md#manually-creating-revocation-registries). \r\n\r\nUpdated the pytests to use `@pytest.mark.skip(reason=\"anoncreds-rs breaking change\")` instead of renaming the tests. Still need to come back to these and fix them (see issue #2433).\r\n\r\nThere are remaining related issues - need to update TAA related APIs - see #2493 - but want to close this out and tackle that separately. (Update, these endpoints are now implemented/updated). Closes #2493\r\n\r\nWe will also have to discuss if we need to add back the `Manually Creating Revocation Entries` API as they were very handy during the IDIM reset/issues.\r\n\r\nSince we do not have endorser enabled, I simply couldn't update/use the BDD tests in `0586-sign-transaction.feature` so I did hack together something similar that did not require an endorser. I ran against `main` and all the scenarios passed, but the included file has 1 scenario skipped because the Manual steps/API do not exist here.\r\n\r\n\r\n\r\n\r\n",
    "head_branch": "2432-revocation-endpoints",
    "is_a_fork": true,
    "comments": [
      "@dbluhm - bumping this if you have time to look over the updates since your last review.",
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2458)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2458&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2458) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2458) No Duplication information\n\n",
      "thanks for the extra pair of eyes @dbluhm. tests and everything work but having the wrong methods in the base class sure would have been confusing for other implementations."
    ],
    "commit_messages": [
      "Merge pull request #2458 from usingtechnology/2432-revocation-endpoints\n\nRevocation API using anoncreds-rs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d82ac254a19ac294845",
    "number": 2456,
    "body": "- Reduces the number of vulnerabilities in the image.",
    "head_branch": "update/python-image-version",
    "is_a_fork": true,
    "comments": [
      "Kudos, SonarCloud Quality Gate passed!&nbsp; &nbsp; [![Quality Gate passed](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/QualityGateBadge/passed-16px.png 'Quality Gate passed')](https://sonarcloud.io/dashboard?id=hyperledger_aries-cloudagent-python&pullRequest=2456)\n\n[![Bug](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/bug-16px.png 'Bug')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=BUG) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=BUG) [0 Bugs](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=BUG)  \n[![Vulnerability](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/vulnerability-16px.png 'Vulnerability')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=VULNERABILITY) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=VULNERABILITY) [0 Vulnerabilities](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=VULNERABILITY)  \n[![Security Hotspot](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/security_hotspot-16px.png 'Security Hotspot')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=SECURITY_HOTSPOT) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=SECURITY_HOTSPOT) [0 Security Hotspots](https://sonarcloud.io/project/security_hotspots?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=SECURITY_HOTSPOT)  \n[![Code Smell](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/common/code_smell-16px.png 'Code Smell')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=CODE_SMELL) [![A](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/RatingBadge/A-16px.png 'A')](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=CODE_SMELL) [0 Code Smells](https://sonarcloud.io/project/issues?id=hyperledger_aries-cloudagent-python&pullRequest=2456&resolved=false&types=CODE_SMELL)\n\n[![No Coverage information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/CoverageChart/NoCoverageInfo-16px.png 'No Coverage information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2456) No Coverage information  \n[![No Duplication information](https://sonarsource.github.io/sonarcloud-github-static-resources/v2/checks/Duplications/NoDuplicationInfo-16px.png 'No Duplication information')](https://sonarcloud.io/component_measures?id=hyperledger_aries-cloudagent-python&pullRequest=2456) No Duplication information\n\n",
      "I noticed that Synk is saying this is making “no change detected” — as we are still using Bullseye Slim 3.9.16.  Is there a Bullseye Slim 3.9.18 that we should also update to as part of this?\r\n\r\n",
      "Slim-bookworm, perhaps?",
      "> I noticed that Synk is saying this is making “no change detected” — as we are still using Bullseye Slim 3.9.16. Is there a Bullseye Slim 3.9.18 that we should also update to as part of this?\r\n\r\nThe Synk scan for the PR is not scanning the docker file.  I'm basing this change off the Synk scan that includes the dockerfiles.",
      "> Slim-bookworm, perhaps?\r\n\r\nI recall that breaking things when we tried it, but I could try again.",
      "> > Slim-bookworm, perhaps?\r\n> \r\n> I recall that breaking things when we tried it, but I could try again.\r\n\r\nI was mostly speculating on why the Snyk scan didn't report any changes. Your other comment explained that :slightly_smiling_face: Would be interesting to see if that change further resolved reported vulnerabilities and what breaks as a result but that doesn't seem like an urgent need right now.",
      "> > Slim-bookworm, perhaps?\r\n> \r\n> I recall that breaking things when we tried it, but I could try again.\r\n\r\nOn the surface building with `slim-bookworm` succeeds.  However I think we should introduce this through the nightly tests as part of the matrix first to make sure there are no surprises.  I'll enter a ticket for that. ",
      "> > > Slim-bookworm, perhaps?\r\n> > \r\n> > \r\n> > I recall that breaking things when we tried it, but I could try again.\r\n> \r\n> I was mostly speculating on why the Snyk scan didn't report any changes. Your other comment explained that 🙂 Would be interesting to see if that change further resolved reported vulnerabilities and what breaks as a result but that doesn't seem like an urgent need right now.\r\n\r\nBased on the report here, there's not too much of a difference; https://hub.docker.com/_/python/tags?page=1&name=3.9"
    ],
    "commit_messages": [
      "Merge pull request #2456 from WadeBarnes/update/python-image-version\n\nUpdate Python image version to 3.9.18"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d83ac254a19ac294846",
    "number": 2454,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n",
    "head_branch": "0.10.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2454 from swcurran/0.10.1\n\n0.10.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d84ac254a19ac294847",
    "number": 2452,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n",
    "head_branch": "0.10.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2452 from swcurran/0.10.0\n\n0.10.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d85ac254a19ac294848",
    "number": 2451,
    "body": "Relax the connection filter on `my_did`, `their_did` and `their_public_did` fields of the `/connections` endpoints.\r\n\r\nThese values were restricted to `did:sov` and are now open to the generic DID format.",
    "head_branch": "chore/relax-connection-filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2451 from sicpa-dlab/chore/relax-connection-filter\n\nchore: relax connections filter DID format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d86ac254a19ac294849",
    "number": 2450,
    "body": "This PR should fix ACA-Py <-> AFGo interop by correcting a case where the LegacyPeerDIDResolver was not properly dereferencing the recipient keys for the DIDComm service.\r\n\r\nSpecifically, it should fix this error:\r\n\r\n```python\r\n2023-08-26 14:17:42,082 aries_cloudagent.connections.base_manager ERROR Failed to resolve service details while determining connection targets; skipping service\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/site-packages/aries_cloudagent/resolver/did_resolver.py\", line 142, in dereference\r\n    return document.dereference(parsed)\r\n  File \"/usr/local/lib/python3.9/site-packages/pydid/doc/doc.py\", line 145, in dereference\r\n    raise IDNotFoundError(\"ID {} not found in document\".format(reference))\r\npydid.doc.doc.IDNotFoundError: ID did:sov:1H6d1WS29Bcfr7Bb9tZxA#1 not found in document\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/site-packages/aries_cloudagent/connections/base_manager.py\", line 368, in resolve_connection_targets\r\n    recips, routing = await self.verification_methods_for_service(\r\n  File \"/usr/local/lib/python3.9/site-packages/aries_cloudagent/connections/base_manager.py\", line 296, in verification_methods_for_service\r\n    recipient_keys: List[VerificationMethod] = [\r\n  File \"/usr/local/lib/python3.9/site-packages/aries_cloudagent/connections/base_manager.py\", line 297, in <listcomp>\r\n    await resolver.dereference_verification_method(\r\n  File \"/usr/local/lib/python3.9/site-packages/aries_cloudagent/resolver/did_resolver.py\", line 156, in dereference_verification_method\r\n    dereferenced = await self.dereference(profile, did_url, document=document)\r\n  File \"/usr/local/lib/python3.9/site-packages/aries_cloudagent/resolver/did_resolver.py\", line 144, in dereference\r\n    raise ResolverError(\r\naries_cloudagent.resolver.base.ResolverError: Failed to dereference DID URL: ID did:sov:1H6d1WS29Bcfr7Bb9tZxA#1 not found in document\r\n```\r\n\r\nThis PR also fixes an error where docs that didn't have a proper did url for the ID of the service (like those received from findy) are corrected before used. For example:\r\n\r\n```json\r\n{\r\n  \"@context\": \"https://w3id.org/did/v1\",\r\n  \"id\": \"did:sov:5qXMeLdyWEQhieFUBNw5ux\",\r\n  \"publicKey\": [\r\n    {\r\n      \"id\": \"did:sov:5qXMeLdyWEQhieFUBNw5ux#1\",\r\n      \"type\": \"Ed25519VerificationKey2018\",\r\n      \"controller\": \"did:sov:5qXMeLdyWEQhieFUBNw5ux\",\r\n      \"publicKeyBase58\": \"3dtu2WWtd5ELwRTJEPzmEJUYEp8Qq36N2QA24g9tFXK9\"\r\n    }\r\n  ],\r\n  \"authentication\": [\r\n    {\r\n      \"type\": \"Ed25519SignatureAuthentication2018\",\r\n      \"publicKey\": \"did:sov:5qXMeLdyWEQhieFUBNw5ux#1\"\r\n    }\r\n  ],\r\n  \"service\": [\r\n    {\r\n      \"id\": \"did:sov:5qXMeLdyWEQhieFUBNw5ux\",  // <--- Missing #some-fragment\r\n      \"type\": \"IndyAgent\",\r\n      \"priority\": null,\r\n      \"recipientKeys\": [\r\n        \"3dtu2WWtd5ELwRTJEPzmEJUYEp8Qq36N2QA24g9tFXK9\"\r\n      ],\r\n      \"serviceEndpoint\": \"http://172.17.0.1:9031/a2a/5b6dyY6PndLaCnWxZbeEYW/5b6dyY6PndLaCnWxZbeEYW/2f6aae0c-6b04-40ff-a25e-faecaea39f83\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nFixes #2449 ",
    "head_branch": "fix/acapy-afgo-interop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2450 from dbluhm/fix/acapy-afgo-interop\n\nfix: handle stored afgo and findy docs in corrections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d87ac254a19ac29484a",
    "number": 2448,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n",
    "head_branch": "0.10.0-rc2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2448 from swcurran/0.10.0-rc2\n\n0.10.0-rc2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d87ac254a19ac29484b",
    "number": 2447,
    "body": "This is a bandaid solution to prevent routing keys from being stored for multiple DIDs. It would be nice to correct behavior of the DIDDoc class to not turn routing keys into values in the publicKey list and then claiming that the DID is the controller (with no evidence). However, given the impending replacement of this behavior with did:peer, it doesn't seem worth it to go through that effort right now.\r\n\r\ncc @swcurran @WadeBarnes and others",
    "head_branch": "fix/duplicate-records-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2447 from dbluhm/fix/duplicate-records-error\n\nfix: ignore duplicate record errors on add key"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d88ac254a19ac29484c",
    "number": 2446,
    "body": "Fixes #2445. ACA-Py's `DIDDoc` class performs transformations prior to storing. This PR accounts for these transformations better.\r\n\r\ncc @WadeBarnes @nodlesh",
    "head_branch": "fix/doc-corrections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2446 from dbluhm/fix/doc-corrections\n\nfix: more doc corrections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d89ac254a19ac29484d",
    "number": 2443,
    "body": "This should resolve an issue happening when migrating an indy-based agent to an askar-only image: the home directories will change, however the database will contain references to previously created artifacts (specifically tails files in the case that triggered this fix) that will not be resolvable anymore.\r\n\r\nCreating a symlink for `/home/indy/.indy-client/` pointing to `/home/aries/.indy_client` should resolve issues with path resolution without needing to update path references stored in the database.\r\n\r\nWe could potentially create a symlink between `/home/indy` and `/home/aries`, but I don't like the idea of symlinking home directories.",
    "head_branch": "fix/resolve-old-tails-files",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2443 from esune/fix/resolve-old-tails-files\n\nAdd symlink to /home/indy/.indy_client for backwards compatibility"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d8aac254a19ac29484e",
    "number": 2442,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.10.0-rc1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2442 from swcurran/0.10.0-rc1\n\n0.10.0-rc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d8bac254a19ac29484f",
    "number": 2440,
    "body": "Set existing `/credential-definitions` endpoints to use `anoncreds`.\r\n\r\nAs per the discussion, the `write_record` methods and endpoints were removed for both schema and cred defs.\r\n\r\nCloses #2431 ",
    "head_branch": "2431-creddef-endpoints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2440 from usingtechnology/2431-creddef-endpoints\n\nmigrate credential definition routes to anoncreds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d8cac254a19ac294850",
    "number": 2439,
    "body": "A draft PR that builds on the pending new Hyperledger Foundation Security Vulnerability Reporting policy. It too is still a PR -- here: https://github.com/hyperledger/toc/pull/143\r\n\r\nThis is a proposed instance of the Security.md file for a project.  Once the new Hyperledger policy is merged, and this PR is aligned with that policy, this PR will be ready to be reviewed by the ACA-Py and broader Aries community.\r\n\r\nSigned-off-by: Stephen Curran <swcurran@gmail.com>\r\n",
    "head_branch": "draft-security-policy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d8dac254a19ac294851",
    "number": 2438,
    "body": "Resolves #2400.\r\n\r\nThis PR replaces flake8 with Ruff as suggested by @ff137. I've selected a \"reasonable\" set of selected and ignored error codes for now. I think we should add/no longer ignore more in the future.\r\n\r\nOne in particular that I think should have it's own issue raised over is C901 or cyclomatic complexity checks. By default, Ruff sets the threshold at 10. This is a pretty common threshold. There are 81 instances of ACA-Py exceeding that threshold. These are ignored for the time being as it's likely each instance will require individual attention.\r\n\r\nI've also moved miscellaneous configuration for dev tools out of `setup.cfg` and translated them into `pyproject.toml`. We'll need to make sure this meshes well with changes in #2436.",
    "head_branch": "feature/ruff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2438 from dbluhm/feature/ruff\n\nSwap out flake8 in favor of Ruff"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d8eac254a19ac294852",
    "number": 2436,
    "body": "This PR resolves #2289\r\n\r\nI migrated the use of requirements.txt and setup.py over to poetry. The use of multiple requirements.*.txt is replaced with dependency groups in the `pyproject.toml`. I have also added a dedicated `[tool.poetry.group.test.dependencies]` as opposed to the original requirements.dev.txt which contained both developer dependencies and testing dependencies.",
    "head_branch": "migrate-to-poetry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2436 from Gavinok/migrate-to-poetry\n\n#2289 Migrate to Poetry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d8eac254a19ac294853",
    "number": 2435,
    "body": "Before the recent support for nightly release tests for Python 3.10 (see the logs [here](https://github.com/hyperledger/aries-cloudagent-python/actions/runs/5861979241/job/15893033620)) were broken this fix corrected the tests by simply replacing  [async_case](https://pypi.org/project/async-case/) with the original [unittest](https://docs.python.org/3/library/unittest.html) library.\r\n\r\nA similar issue was resolved for the same incompatibility in #2187\r\n\r\nAs [async_case](https://pypi.org/project/async-case/) was simply a backport of functionality included since Python 3.8 and acapy supports Python 3.9+ there is no longer a need for [async_case](https://pypi.org/project/async-case/).\r\n\r\nFinally, this means we also restore the functionality of 2 additional tests that were previously skipped in #2187\r\n\r\n## Including Tests as a Dependency for Nightly Releases\r\nIn addition, the current release does not check that the tests for Python 3.10 were successful before building a nightly release. This PR also adds this as a dependency. \r\n\r\n\r\n## Additional context\r\nThe current source of the error with Python 3.10 is due to [async_case](https://pypi.org/project/async-case/) using \r\n```python\r\n            loop.run_until_complete(\r\n                asyncio.gather(*to_cancel, loop=loop, return_exceptions=True))\r\n```\r\nas of Python 3.10 the `loop` keyword has been depreciated in [asyncio.gather](https://docs.python.org/3/library/asyncio-task.html#asyncio.gather). \r\n\r\nThis leads to the following exception\r\n![image](https://github.com/hyperledger/aries-cloudagent-python/assets/34443260/f25991be-6e62-4a00-a8ab-25e7661f3c40)",
    "head_branch": "tmp-fix-nightly",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2435 from Gavinok/tmp-fix-nightly\n\nFix for nightly tests failing on Python 3.10"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d8fac254a19ac294854",
    "number": 2429,
    "body": "Fixes #2428",
    "head_branch": "NSF",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2429 from hyperledger/NSF\n\nDon't run Snyk on forks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d90ac254a19ac294855",
    "number": 2427,
    "body": "WIP needs feedback to determine if this is the right direction.\r\n\r\nHave updated:\r\n- [All /schemas routes](https://github.com/hyperledger/aries-cloudagent-python/blob/2565fe84e2716fcda44a3b1bb32095e9c6fd62bd/aries_cloudagent/messaging/schemas/routes.py)\r\n- [POST /credential-definitions](https://github.com/hyperledger/aries-cloudagent-python/blob/2565fe84e2716fcda44a3b1bb32095e9c6fd62bd/aries_cloudagent/messaging/credential_definitions/routes.py#L167)\r\n- [GET /credential-definitions/<id>](https://github.com/hyperledger/aries-cloudagent-python/blob/2565fe84e2716fcda44a3b1bb32095e9c6fd62bd/aries_cloudagent/messaging/credential_definitions/routes.py#L483)\r\n- [POST /revocations/revoke](https://github.com/hyperledger/aries-cloudagent-python/blob/1f6cbf6635fc53e5c945b95353bff48706ed9638/aries_cloudagent/revocation/routes.py#L440)\r\n\r\nEnabled all \"broken\" BDD tests (except in sign-transaction due to endorser).\r\n\r\nMore credential definition routes to fix as well as revocation. The BDD tests pass now, so that means BDD does not do complete coverage.\r\n\r\nWill have to address the pytests at some point too.\r\n\r\n",
    "head_branch": "2422-schemas-endpoints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2427 from usingtechnology/2422-schemas-endpoints\n\nUpdate /schemas to use anoncreds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d91ac254a19ac294856",
    "number": 2425,
    "body": "resolve #2359 ",
    "head_branch": "per_tenant_logging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d92ac254a19ac294857",
    "number": 2423,
    "body": "missed this file... 🤦 ",
    "head_branch": "anoncreds-rs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2423 from usingtechnology/anoncreds-rs\n\nthe anoncreds proof presentation with schema restriction"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d93ac254a19ac294858",
    "number": 2421,
    "body": "This issue resolves #2250\r\n\r\nHere I have created a GitHub workflow that will execute the tests just as they are handled in `nightly-tests.yml` excluding the indy tests as mentioned in this comment.\r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/issues/2250#issuecomment-1674918887\r\n\r\nThe workflow acts as follows\r\n```python\r\nrun nightly tests\r\nIf (tests are successful):\r\n   build a nightly release\r\n   publish this release with the `nightly` tag\r\n```",
    "head_branch": "nightly-publish-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2421 from Gavinok/nightly-publish-workflow\n\nIssue #2250 Nightly publish workflow"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d94ac254a19ac294859",
    "number": 2420,
    "body": "Adds timezone.utc to datetime.combine to ensure time will be midnight in UTC regardless of the default timezone",
    "head_branch": "bugfix/time-too-precise",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2420 from Ennovate-com/bugfix/time-too-precise\n\nIssue #2419 InvalidClientTaaAcceptanceError time too precise error if container timezone is not UTC"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d95ac254a19ac29485a",
    "number": 2418,
    "body": "addresses #2087 ",
    "head_branch": "snyk",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Enable Snyk scanning\n\nSigned-off-by: Ry Jones <ry@linux.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d95ac254a19ac29485b",
    "number": 2417,
    "body": "Addresses #2087",
    "head_branch": "ryjones-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d96ac254a19ac29485c",
    "number": 2416,
    "body": "This is a rebased version of #2033. Thank you for your contributions, @Przytua!\r\n\r\nI think these changes are likely to be better suited to a new endpoint (i.e. `POST /present-proof/{pres_ex_id}/counter-request` or something) rather than changing the behavior of `POST /present-proof/{pres_ex_id}/request`. I'll open this as a draft for now and look at making these changes when I can.",
    "head_branch": "feature/proof-negotiation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d97ac254a19ac29485d",
    "number": 2415,
    "body": "As discussed recently and captured in #2402, this PR removes Indy specific tests from PR test runs. This also adjusts other images and examples in the demo folder to use the non-indy variant of images.",
    "head_branch": "ci/no-indy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2415 from dbluhm/ci/no-indy\n\nRemove Indy tests from workflows. Bypassing the required merge because it is what is being removed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d98ac254a19ac29485e",
    "number": 2414,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.10.0-rc0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2414 from swcurran/0.10.0-rc0\n\n0.10.0-rc0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d99ac254a19ac29485f",
    "number": 2413,
    "body": "As a consequence of the fix in #2223, events/webhooks for new connections created responding to multi-use invitations were not being emitted. This happened because events are emitted, unless specified with the appropriate flag, only when the connection record being saved is new OR the state has changed.\r\n\r\nNeither of those conditions is true for a multi-use invitation since the record is \"cloned\" and contextually set to state `request`  (see #2099). \r\n\r\nThe fix ensures an event (and webhook) is always emitted when a new connection transitions to the `request` state.\r\nResolves #2406 ",
    "head_branch": "fix/multi-use-invitation-webhooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2413 from esune/fix/multi-use-invitation-webhooks\n\nFix: Ensure event/webhook is emitted for multi-use invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d9aac254a19ac294860",
    "number": 2412,
    "body": "Add BDD tests for issue v2 and proof presentation v2.\r\nThe tests include create schema, create cred def and revocation through the new `/anoncreds` API.\r\n\r\nNote that I encountered some weirdness running the tests in the devcontainer... some messages didn't appear to be fully fleshed out (see comments about \"by_format\"). Running using the `run_bdd` script was fine.\r\n\r\nAlso, on proof presentation, I could not get it working using restriction with \"schema_name\" and \"schema_version\" like other presentations. I used restrictions by `cred_def_id` to pass the tests.  Not sure if that is something that needs to be looked at further as it would impact migrations to `anoncreds` if current presentation requests don't work.\r\n\r\n",
    "head_branch": "2410-add-bdd-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2412 from usingtechnology/2410-add-bdd-tests\n\nAnoncreds API BDD Tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d9bac254a19ac294861",
    "number": 2409,
    "body": "This PR builds on #2404 to adjust DID -> ConnectionTarget look up to use the DID Resolver interface and also to permit connecting via DID Exchange with public DIDs. This enables DIDComm over exclusively did:web and other methods (permits not rotating to a peer DID during the exchange) or just initializing a DID Exchange with a resolvable DID that supports DIDComm.\r\n\r\nI believe this change is a significant improvement for consistently handling DIDs and DID Documents during connections as there is no longer a distinction between local/peer DIDs and public DIDs, at least in terms of determining how to look up the associated document.\r\n\r\nThis PR is currently in development. Once #2404 is in, I'll rebase this branch to clean up the history. There's a few more pieces I'm still working on as well:\r\n- Unit tests. I've tested these changes manually and it's currently working as expected but I'll be a good citizen and make sure my additions are covered.\r\n- Caching resolved DID Documents. This change relies on resolving DID Documents to determine connection targets. For exchanged (legacy) peer DIDs, this means it will look up the document in the wallet, which is more or less the same as it was before. However, if you're resolving public DIDs, we probably don't want to query a ledger every time we send a message, especially since DIDComm message exchanges tend to be burst-y. #2404 includes caching for legacy peer DIDs; however, I'm not certain whether caching should be handled at the method resolver layer or at the global resolver layer. I'll put some more thought into this.\r\n\r\ncc @swcurran @Jsyro I'll elaborate how I think this should affect the Peer DID work further in #2249\r\n\r\n# Summary as of 2023-08-21\r\n\r\n## Refactors: Connection Management\r\n- Moved all core connection management functions out of `aries_cloudagent.protocols.connections.v1_0.manager` into `aries_cloudagent.connections.base_manager`. This should have been done at the first introduction of the base manager. I did this now since I'd already invested the time into getting familiar with the connection code again and it resulted in a cleaner setup for testing.\r\n- Moved all testing for the same functions to appropriate location (`aries_cloudagent.connections.tests.test_base_manager`).\r\n- Refactored `fetch_connection_targets`, decreasing the cyclomatic complexity (as reported by [mccabe](https://pypi.org/project/mccabe/)) from 9 to 4. Also added comments in an attempt to make the various checks less cryptic.\r\n- Corrected type hints as appropriate for various methods.\r\n- Increased unit test code coverage for connection management. Mostly just covering some straggling edge cases to make sure branches were hit.\r\n- Dispatcher populates connection context using `BaseConnectionManager` instead of `ConnectionManager`.\r\n\r\n## Features: using Public DID during DID Exchange\r\nIt is now possible to use DIDComm over public DIDs without rotating out for \"peer\" DIDs during DID Exchange. There's a good case to be made for not doing this and always rotating out for a peer DID but some use cases can't be addressed in this way. Additionally, nothing in the DIDComm spec explicitly requires that DIDComm only takes place using \"peer\" DIDs.\r\n\r\nSome implementation details:\r\n- On `POST /didexchange/create-request` (sending a DID Exchange request to a public DID), you can specify `use_public_did`. This has been possible for some time. What's new in this change is that a DID Doc attachment is not generated for the public DID and is therefore not included in the DID Exchange request. On receipt of such a request, ACA-Py will resolve the Document of the DID and extract information to store about the connection.\r\n- On `POST /didexchange/{conn-id}/accept-request` you can now specify `use_public_did`, just like the parameter of the same name for `create-request`. This will have a similar effect but influences the DID Exchange `response` instead of the `request`.\r\n- Public DIDs were previously sent unqualified; if the current public DID for the ACA-Py instance is unqualified, it will now be fully qualified in DID Exchange requests and responses.\r\n- Connecting to yourself through your own public DID using your own public DID is explicitly forbidden to avoid nasty edge cases. This scenario has questionable use anyways.\r\n- Attempting to connect to a public DID using your public DID when a connection already exists for the same DIDs is explicitly forbidden. The existing connection should be used instead.\r\n- Added `BaseConnectionManager.resolve_connection_targets`. This replaces the original mechanism of looking up stored DID Documents enabling the Documents to be resolved as appropriate for a given DID. This uses the DID Resolver interface to perform Document resolution. Stored DID Documents are retrieved from the wallet through the DID Resolver interface and the `LegacyPeerDIDResolver` added in #2404.\r\n- Added `BaseConnectionManager.record_keys_for_public_did`. In order to determine the connection for an inbound message, you must look up the DID associated with the sender keys. When receiving a DID Document as an attachment, this occurs on storage of the document. Since we don't store DID Documents for public DIDs but rather just resolve them on demand (with caching, see below), `record_keys_for_public_did` is used on receipt of a public DID in a DID Exchange request or response to resolve and record the keys associated with the DID for use in this lookup process later. **Changes to the keys found in a DID Document that take place after the DID Exchange are NOT being recorded right now, even though these changes would be visible when we later resolve the Document again.** This will have to be covered in future work.\r\n- Made `BaseConnectionManager.add_key_for_did` idempotent. It's possible to form connections with the same public DID using peer DIDs on our end (suppose you wanted to maintain separate personas with the same entity). This change keeps the key-to-DID look up from containing duplicate records.\r\n\r\n## Features: Resolved DID Document Caching\r\n\r\nWith the DID Resolver becoming a more critical component in messaging, it is necessary to make sure we're retrieving DID Documents efficiently. Especially given that DIDComm message exchanges tend to occur in bursts, Documents don't need to be refreshed with each new outbound message to a given DID. This PR adds caching to the DID Resolver.\r\n\r\nImplementation Details:\r\n- The caching was added into the `BaseResolver` ABC. This is the class implemented by resolvers for a given DID Method. Instances of this class are registered with the \"global\" DID Resolver which will delegate resolution of a DID to method resolvers based on the method of the DID.\r\n- With caching implemented at this layer, method resolvers have the ability to tune cache TTL for the documents as appropriate for the DID Method. An example of this can be seen in the `LegacyPeerDIDResolver` which overrides the caching behavior so that it can store some additional metadata in the cache.\r\n- The default TTL is 3600 seconds or one hour.",
    "head_branch": "feature/doc-resolution-consistency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2409 from dbluhm/feature/doc-resolution-consistency\n\nfeat: resolve connection targets and permit connecting via public DID"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d9bac254a19ac294862",
    "number": 2404,
    "body": "This PR adds support for resolving legacy peer DIDs to DID Documents previously stored in our wallet.\r\n\r\nThis is one part of some additional changes I have in mind; using these changes, I'd like to make \"resolving\" connection targets for a DID consistent regardless of whether the DID we're resolving is did:web, did:indy, did:sov, unqualified local did, did:peer, etc. I'm hopeful those changes will also help ease the transition to proper peer DIDs. I'm still fleshing out those changes but I think this resolver is useful regardless of the outcome.\r\n\r\nAs noted in the docstrings of the methods in the resolver, due to the nature of ACA-Py's use of did:sov and unqualified DIDs for both public (posted to a ledger) and pairwise/peer DIDs, this resolver requires a bit of trial and error. If the DID has a doc associated with it in the wallet, it will report that it supports resolving the DID. The cache is employed to help make this check slightly more efficient but there's still some open questions. For instance, how long should the cache be considered valid?\r\n\r\nAs implemented, this resolver will only return the DID Documents we've received through the Connections or DID Exchange protocols. In other words, we can only resolve the DID of the remote party, or \"their DID.\" We could also store the docs for our own DIDs, making them resolvable as well. I'm not sure if this is valuable or not yet.\r\n\r\nFor Indy \"style\" DIDs that are created outside of the context of a connection, such as Public DIDs, there is no DID Document associated with it stored in our wallet. This means that this resolver will not be selected and the document for the DID will be resolved by the `IndyDIDResolver`, as usual.\r\n\r\nIn the interest of that consistent connection target goal I mentioned above, I currently have this resolver configured to transform documents retrieved from our wallet to be better aligned with updates to DIDComm/DID Document conventions.\r\n\r\nResolves #2161. I think. lol",
    "head_branch": "feature/resolve-exchanged-dids",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2404 from dbluhm/feature/resolve-exchanged-dids\n\nfeat: add legacy peer did resolver"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d9cac254a19ac294863",
    "number": 2401,
    "body": "Relates to #2297.\r\n\r\nThis is step one to onboard `anoncreds-rs`. \r\n\r\nChanges to ledger base classes has \"broken\" schemas and cred defs. This is expected as we are transition. This PR merely allows us to run `BDD` tests, `pytest`, `Flake8` and `black` so we can commit and merge future PRs.\r\n\r\nBDD tests that are failing due to anoncreds restructuring of Base ledger are now labelled/tagged: `@GHA-Anoncreds-break`. Fix and reintroduce these tests as needed.\r\n\r\nFlake8 class documentation is a placeholder, these have: `TODO: update this docstring - Anoncreds-break.` and should be updated with useful documentation.\r\n\r\nPytests that are broken have been skipped with: `@pytest.mark.skip(reason=\"Anoncreds-break\")`.\r\n\r\nPlease note that I have added in the `devcontainer` from `main`.\r\n\r\nBDD Tests Run:\r\n\r\n```\r\nLEDGER_URL=http://test.bcovrin.vonx.io PUBLIC_TAILS_URL=https://tails-test.vonx.io LOG_LEVEL=warning NO_TTY=1 ./run_bdd -t @GHA```\r\n\r\nBDD Tests Results:\r\n\r\n```\r\n2 features passed, 0 failed, 3 skipped\r\n7 scenarios passed, 0 failed, 57 skipped\r\n37 steps passed, 0 failed, 703 skipped, 0 undefined\r\n```\r\n",
    "head_branch": "2297-integration-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2401 from usingtechnology/2297-integration-tests\n\nAnoncreds BDD test preparation."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214d9dac254a19ac294864",
    "number": 2399,
    "body": "Edit: flake8 must remain pinned to v4.0 as pytest-flake8 is unmaintained and doesn't support flake8 > 5.0 (latest = 6.1)\r\nI propose migrating to [ruff](https://beta.ruff.rs/docs/) and [pytest-ruff](https://github.com/businho/pytest-ruff). Created issue: https://github.com/hyperledger/aries-cloudagent-python/issues/2400\r\n\r\n___\r\n\r\nUpgrades `.pre-commit-config.yaml` to use latest versions for pre-commit-hook, black, and flake8.\r\nThis fixes pre-commit not being in sync with black/flake8 enforcement in the github actions.\r\n\r\nAdditionally we upgrade flake8, flake8-docstrings, and pydocstyle to latest. \r\n\r\nIncludes fixes for all flake8 warnings in ./aries_cloudagent, because if PR tests enforces flake8, then the existing code should abide by it too :-)\r\n\r\nThe remaining flake8 warnings are primarily for missing docstrings in ./demo",
    "head_branch": "upgrade/pre-commit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2399 from ff137/upgrade/pre-commit\n\nUpgrade pre-commit and flake8 dependencies; fix flake8 warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d9eac254a19ac294865",
    "number": 2398,
    "body": "Resolves #2342\r\n\r\nI used the [acapy-marshmallow-upgrade](https://github.com/dbluhm/acapy-marshmallow-upgrade) tool created by @dbluhm (as described here: https://github.com/hyperledger/aries-cloudagent-python/pull/1854#issuecomment-1189381980), which iterates over usages of marshmallow fields, to wrap deprecated arguments in a metadata dictionary.\r\n\r\nThe only hairy part to this task was the schemas defined in `aries_cloudagent/messaging/valid.py`:\r\n```py\r\nINT_EPOCH = {\"validate\": IntEpoch(), \"example\": IntEpoch.EXAMPLE}\r\nWHOLE_NUM = {\"validate\": WholeNumber(), \"example\": WholeNumber.EXAMPLE}\r\n# etc ...\r\n```\r\nThese definitions were used in marshmallow fields by calling e.g. `fields.Int(..., **INT_EPOCH)`, which would be missed by the upgrade tool. Also, validate is a supported argument, while example should be moved to metadata.\r\n\r\nTo account for this, I refactored the schema specifications (using regex):\r\n```py\r\nINT_EPOCH_VALIDATE = IntEpoch()\r\nINT_EPOCH_EXAMPLE = IntEpoch.EXAMPLE\r\n\r\nWHOLE_NUM_VALIDATE = WholeNumber()\r\nWHOLE_NUM_EXAMPLE = WholeNumber.EXAMPLE\r\n# etc ...\r\n```\r\n\r\nI then updated the imports, and replaced usages of `**INT_EPOCH`, for example, to `validate=INT_EPOCH_VALIDATE, example=INT_EPOCH_EXAMPLE`. Then could I run the marshmallow-upgrade tool created by dbluhm to correctly wrap examples in the metadata.\r\n\r\nAdditionally: upgrade marshmallow to latest (3.20)",
    "head_branch": "chore/fix-marshmallow-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2398 from ff137/chore/fix-marshmallow-warnings\n\nChore: fix marshmallow warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214d9fac254a19ac294866",
    "number": 2395,
    "body": "While testing PR #2339 I was using an instance without an endorser and encountered an error while saving the new write ledger: `UnboundLocalError: local variable 'endorser_alias' referenced before assignment`.\r\n\r\nThis checks to see if we have endorser information before we try to persist it.",
    "head_branch": "fix-2339",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2395 from usingtechnology/fix-2339\n\nMultitenant check endorser_info before saving"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da0ac254a19ac294867",
    "number": 2394,
    "body": "This PR makes problem reports sent during the DID Exchange protocol have the DID Exchange protocol adopted problem report rather than the generic problem report. This is defined in RFC 23 but has not been implemented by ACA-Py to this point. In other words, this is a correction to bring ACA-Py more in line with the RFC. These problem reports were automatically sent if there was an issue in processing the DID Exchange messages.\r\n\r\nIn addition to the above changes, this PR also introduces a `POST /didexchange/{conn-id}/reject` endpoint, enabling the controller to explicitly reject an OOB invitation that specifies DID Exchange as the handshake protocol or a DID Exchange request. Rejecting a response is not supported; don't send a request if you're going to reject the response. This will send a problem report to the originator of the invitation/request and will mark the (local) connection record as abandoned. It won't delete the record though (maybe it should)?\r\n\r\nThis at least partially supersedes #2350, covering the rejection of invitations to exchange DIDs. However, it does not introduce automatic handling of timeouts for invitations, as was discussed in the comments.",
    "head_branch": "feature/didx-reject",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2394 from dbluhm/feature/didx-reject\n\nfeat: add DID Exchange specific problem reports and reject endpoint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da1ac254a19ac294868",
    "number": 2393,
    "body": "This corrects a flow through the `queue_outbound` method that could result in no `OutboundSendStatus` being returned. The method is strictly expected to return a status so this could cause less than graceful errors in some circumstances.",
    "head_branch": "fix/outbound-send-status-missing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2393 from dbluhm/fix/outbound-send-status-missing\n\nfix: outbound send status missing on path"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da2ac254a19ac294869",
    "number": 2392,
    "body": "This PR adjusts the request schema for the set public DID endpoint to permit `GENERIC_DID`s. It seems that the work to support a generic DID in this endpoint was already done and just the request schema was missed by mistake (or perhaps it's a merge artifact :man_shrugging:).\r\n\r\nAdditionally, this PR adjusts the behavior of DID Exchange requests so that if we're using a public DID, no DID Doc attachment is included in the request. This enables us to form connections using a did:web or other DID that is resolvable without worrying about ACA-Py's DID Doc creation process not being quite up to snuff on multi-method support.\r\n\r\nAnd some minor type hint corrections.",
    "head_branch": "feature/did-web-as-public",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2392 from dbluhm/feature/did-web-as-public\n\nfix: additional tweaks for did:web and other methods as public DIDs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da2ac254a19ac29486a",
    "number": 2391,
    "body": "When receiving an OOB invitation and automatically accepting by sending a DID Exchange request, it is possible to send a keylist update to the mediator and receive a response back before the connection is saved. This resulted in errors like:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/protocols/coordinate_mediation/v1_0/route_manager.py\", line 273, in connection_from_recipient_key\r\n    conn = await ConnRecord.retrieve_by_tag_filter(\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/messaging/models/base_record.py\", line 284, in retrieve_by_tag_filter\r\n    raise StorageNotFoundError(\r\naries_cloudagent.storage.error.StorageNotFoundError: ConnRecord record not found for {'invitation_key': 'qHFoiMYB58Y25wRkFfYajhFLSUvJFZZbJStiaKL1LvW'}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/protocols/coordinate_mediation/v1_0/handlers/keylist_update_response_handler.py\", line 45, in notify_keylist_updated\r\n    key_to_connection = {\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/protocols/coordinate_mediation/v1_0/handlers/keylist_update_response_handler.py\", line 46, in <dictcomp>\r\n    updated.recipient_key: await route_manager.connection_from_recipient_key(\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/protocols/coordinate_mediation/v1_0/route_manager.py\", line 280, in connection_from_recipient_key\r\n    conn = await ConnRecord.retrieve_by_did(session, my_did=did_info.did)\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/connections/models/conn_record.py\", line 313, in retrieve_by_did\r\n    return await cls.retrieve_by_tag_filter(session, tag_filter, post_filter)\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/messaging/models/base_record.py\", line 284, in retrieve_by_tag_filter\r\n    raise StorageNotFoundError(\r\naries_cloudagent.storage.error.StorageNotFoundError: ConnRecord record not found for {'my_did': '2XamEWAbXkzx4eKW24PmSY'}\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/asyncio/tasks.py\", line 256, in __step\r\n    result = coro.send(None)\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/core/dispatcher.py\", line 269, in handle_message\r\n    await handler(context, responder)\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/protocols/coordinate_mediation/v1_0/handlers/keylist_update_response_handler.py\", line 31, in handle\r\n    await self.notify_keylist_updated(\r\n  File \"/home/aries/.local/lib/python3.9/site-packages/aries_cloudagent/protocols/coordinate_mediation/v1_0/handlers/keylist_update_response_handler.py\", line 52, in notify_keylist_updated\r\n    raise HandlerException(\r\naries_cloudagent.messaging.base_handler.HandlerException: Unknown recipient key received in keylist update response\r\n```\r\n\r\nUnder this condition, this makes it impossible for the keylist update response event emitter to know what connection the updated key was associated with. This PR addresses this by ensuring the DID is associated with the connection record before emitting a keylist update to the mediator.\r\n\r\n~~There is a side effect to this change: one additional connection webhook will be emitted where the only change from the previous webhook will be a value for `my_did`; the state will not change from `invitation-received`. It's possible a controller might not like this -- though I think that would be a sign of other issues.~~ Nevermind, I solved this issue.",
    "head_branch": "fix/keylist-update-response-race",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2391 from Indicio-tech/fix/keylist-update-response-race\n\nfix: keylist update response race condition"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da3ac254a19ac29486b",
    "number": 2365,
    "body": null,
    "head_branch": "multi-tenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2365 from Entidad/multi-tenancy\n\nCorrected typo on mediator invitation configuration argument"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da4ac254a19ac29486c",
    "number": 2364,
    "body": null,
    "head_branch": "multi-tenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da5ac254a19ac29486d",
    "number": 2362,
    "body": "Resolves  #2242",
    "head_branch": "fix/empty-service-decorator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2362 from ff137/fix/empty-service-decorator\n\nFix empty ServiceDecorator in OobRecord causing 422 Unprocessable Entity Error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da6ac254a19ac29486e",
    "number": 2356,
    "body": "The [orjson](https://github.com/ijl/orjson) library provides superior performance over the built-in json module. Please see their readme for an overview of features and performance/runtime comparisons.\r\n\r\nOne note is: `orjson.dumps` serializes to `bytes`, instead of `str`, so it's not a drop in replacement.\r\nEdit: it also omits whitespace between keys and values. i.e. json.dumps: `{\"k\": [1, 2, 3]}`. orjson.dumps:  `{\"k\":[1,2,3]}`\r\n\r\nThere are 449 usages of `json.dumps` throughout the codebase. To refactor, I would just want to regex replace all of those with `orjson.dumps`, but then it would require appending `.decode()` as well (for bytes -> string).\r\n\r\nThat inspired me to create a JsonUtil class in `utils.json.py`. So, I could replace all instances of `json.loads` and `json.dumps` with `JsonUtil.*`.\r\n\r\nThis also has the benefit of providing an abstraction layer to simplify future transitions between different JSON libraries.\r\n\r\nNote: I had to replace `import json` with `from aries_cloudagent.utils.json import JsonUtils`. Re-added `import json` where needed. However, that means the import organisation is no longer consistent, because json is a top-level import, and the utils import shouldn't be. Nitpick, bit I would want to do a import sort across all files to fix this ...",
    "head_branch": "feat/orjson",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da7ac254a19ac29486f",
    "number": 2355,
    "body": "Simple fix: the `send_rev_reg_def` method can return a `rev_reg: IssuerRevRegRecord`, which doesn't line up with the expected schema (`TxnOrRevRegResultSchema`).\r\n\r\nTLDR: \r\n- the OpenAPI spec says the response is a `TxnOrRevRegResultSchema`, \r\n- but it's actually a `Union[RevRegResult, TxnOrRevRegResult]`.\r\n\r\nAs the name suggests, the `RevRegResult` should be wrapped in a `TxnOrRevRegResult`, which this PR fixes.\r\n\r\nInitially typed out an issue, so just to show my working:\r\n___\r\nIn the definition for the `send_rev_reg_def` method (in [`/aries_cloudagent/revocation/routes.py`](https://github.com/hyperledger/aries-cloudagent-python/blob/8b6c87fba2a6dc6cce4ced92d4db554fb4cad37a/aries_cloudagent/revocation/routes.py#L1019)), the response schema is indicated to be a `TxnOrRevRegResultSchema`:\r\n```py\r\n@response_schema(TxnOrRevRegResultSchema(), 200, description=\"\")\r\nasync def send_rev_reg_def(request: web.BaseRequest):\r\n```\r\nwhich has the definition:\r\n```py\r\nclass TxnOrRevRegResultSchema(OpenAPISchema):\r\n    \"\"\"Result schema for credential definition send request.\"\"\"\r\n\r\n    sent = fields.Nested(\r\n        RevRegResultSchema(),\r\n        required=False,\r\n        definition=\"Content sent\",\r\n    )\r\n    txn = fields.Nested(\r\n        TransactionRecordSchema(),\r\n        required=False,\r\n        description=\"Revocation registry definition transaction to endorse\",\r\n    )\r\n```\r\n\r\nIn the [`aries-cloudcontroller-python`](https://github.com/didx-xyz/aries-cloudcontroller-python) project, we have to manually alter the model, generated from the OpenAPI spec, to correct that the response can actually be a `Union[RevRegResult, TxnOrRevRegResult]`, because that's what the server gives.\r\n\r\nSo, something is wrong with the implementation. Let's inspect [the code](https://github.com/hyperledger/aries-cloudagent-python/blob/8b6c87fba2a6dc6cce4ced92d4db554fb4cad37a/aries_cloudagent/revocation/routes.py#L1019):\r\n```py\r\n@response_schema(TxnOrRevRegResultSchema(), 200, description=\"\")\r\nasync def send_rev_reg_def(request: web.BaseRequest):\r\n    ...\r\n    if not create_transaction_for_endorser:\r\n        return web.json_response({\"result\": rev_reg.serialize()})\r\n\r\n    else:\r\n        ...\r\n        return web.json_response({\"txn\": transaction.serialize()})\r\n```\r\n\r\nThere are two return statements, providing either `rev_reg: IssuerRevRegRecord`, or `transaction: TransactionRecord`.\r\n\r\nThe problem seems to be the key \"result\" that's being used in the rev_reg response, which should presumably be \"sent\", in order to correctly map to the key in the `TxnOrRevRegResultSchema`.",
    "head_branch": "fix/response_schema_for_send_rev_reg_def",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2355 from ff137/fix/response_schema_for_send_rev_reg_def\n\nCorrect the response type in `send_rev_reg_def`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da8ac254a19ac294870",
    "number": 2354,
    "body": "Bumps [certifi](https://github.com/certifi/python-certifi) from 2023.5.7 to 2023.7.22.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/8fb96ed81f71e7097ed11bc4d9b19afd7ea5c909\"><code>8fb96ed</code></a> 2023.07.22</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/afe77220e0eaa722593fc5d294213ff5275d1b40\"><code>afe7722</code></a> Bump actions/setup-python from 4.6.1 to 4.7.0 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/230\">#230</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/2038739ad56abec7aaddfa90ad2ce6b3ed7f5c7b\"><code>2038739</code></a> Bump dessant/lock-threads from 3.0.0 to 4.0.1 (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/229\">#229</a>)</li>\n<li><a href=\"https://github.com/certifi/python-certifi/commit/44df761f4c09d19f32b3cc09208a739043a5e25b\"><code>44df761</code></a> Hash pin Actions and enable dependabot (<a href=\"https://redirect.github.com/certifi/python-certifi/issues/228\">#228</a>)</li>\n<li>See full diff in <a href=\"https://github.com/certifi/python-certifi/compare/2023.05.07...2023.07.22\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=certifi&package-manager=pip&previous-version=2023.5.7&new-version=2023.7.22)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/demo/playground/scripts/certifi-2023.7.22",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2354 from hyperledger/dependabot/pip/demo/playground/scripts/certifi-2023.7.22\n\nchore(deps): Bump certifi from 2023.5.7 to 2023.7.22 in /demo/playground/scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da8ac254a19ac294871",
    "number": 2353,
    "body": "Backwards compatible with older agents and existing unqualified dids.\r\n\r\nAdded flows that accept and send `did:peer:2` within DIDExchange protocol, however sends by default. \r\n\r\nCustom DIDDoc class from acapy exists, however upon deserialization will converted into a pydid DIDDocument instance. the existing Custom DIDDoc class is not compliant with the CONTEXT attribute it provides. \r\n\r\nRemaining work: \r\n\r\n- [ ] Clean up debugging and WIP shrapnel. \r\n- [ ] promote pydid and peer-did-python alpha changes to actual releases.\r\n- [x] Ensure it will work with upgrading acapy when the agent already has an existing connection\r\n- [x] Ability to promote/convert existing connections' did documents to did:peer:3 (see https://github.com/hyperledger/aries-cloudagent-python/issues/2345)\r\n- [ ] Tests\r\n\r\n",
    "head_branch": "feature/peer-did-lib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214da9ac254a19ac294872",
    "number": 2352,
    "body": "Add `auto_remove` flags to appropriate APIs for override of default behaviour.\r\n\r\nVerifiers/Provers can override default behaviour in `send-request` (both free presentation and bound presentation), `send-presentation`, `send-proposal`.\r\n\r\nNote: added `auto_remove` to issue credentials (1 and 2) `send-request`, allowing holders to override the default behaviour.\r\n\r\n\r\nCloses #2126 \r\nCloses #2206 ",
    "head_branch": "issue-2126-preserve-pres-ex",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2352 from usingtechnology/issue-2126-preserve-pres-ex\n\nExtend `--preserve-exchange-records` to include Presentation Exchange."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214daaac254a19ac294873",
    "number": 2350,
    "body": "Supersedes #2150. Closes #2101. I am volunteering to help get this change in; looks like things are nearly there, just need to fix some issues with tests.",
    "head_branch": "oob-problem-report",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dabac254a19ac294874",
    "number": 2348,
    "body": "Following the logic in PR [2235](https://github.com/hyperledger/aries-cloudagent-python/pull/2235) it is also beneficial to have the strategy for getting verification key itself overridable by plugins.\r\n\r\nSuch a use case would be to use the universal resolver to get a DID Document and fetch a verkey identified by the key ID. Then search the wallet by the verkey to obtain DIDInfo.",
    "head_branch": "Get_verification_key_for_proof_overridable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dacac254a19ac294875",
    "number": 2344,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.9.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2344 from swcurran/0.9.0\n\n0.9.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dadac254a19ac294876",
    "number": 2343,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "rev-overview",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2343 from swcurran/rev-overview\n\nAdd more context to the ACA-Py Revocation handling documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214daeac254a19ac294877",
    "number": 2341,
    "body": "This change implements checking that ld proof credential requests match their corresponding offer, if an offer was sent.\r\n\r\nIf using the `--auto-*` flags for issuance, it was possible for the receiver of the credential offer to change values in the request and ACA-Py would accept this and issue based off of the request values. The `--auto-*` flags are debug flags and should not be used in production which would mean that a controller should have been able to catch this discrepancy. However, it is still expedient for ACA-Py to check that the offer and request match to avoid this slipping past the controller as well.\r\n\r\nThere is a side affect of this check. We were permitting late binding of the credential subject ID to the holder in the request. Meaning, on request, the holder will automatically (when using auto flags) insert a DID key as the credential subject ID to ensure the holder can actually present proof of possession later. These changes modify this behavior such that it only applies iff the credential subject id is not set already (e.g. in the credential offer). This enables the issuer to bind the credential to a DID other than the holder's pairwise DID if an alternate is known to the issuer. If the issuer wants to permit late binding by the holder still, the credential subject ID should be omitted in the offer.\r\n\r\nSo, to summarize, the two modifications implemented here:\r\n- Ensure the request doesn't change the credential unless the offer explicitly omits a credential subject ID\r\n- Only override with holder did if the credential subject ID is omitted",
    "head_branch": "fix/offer-request-checks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2341 from dbluhm/fix/offer-request-checks\n\nfix: ensure request matches offer, if sent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dafac254a19ac294878",
    "number": 2340,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "indy-sdk-to-askar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2340 from swcurran/indy-sdk-to-askar\n\nDocument the Indy SDK to Askar Migration process"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db0ac254a19ac294879",
    "number": 2339,
    "body": "- resolve #2168 ",
    "head_branch": "multi_ledger_write",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2339 from shaangill025/multi_ledger_write\n\nFeat: Support Selectable Write Ledger"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db0ac254a19ac29487a",
    "number": 2338,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.9.0-rc0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2338 from swcurran/0.9.0-rc0\n\n0.9.0-rc0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db1ac254a19ac29487b",
    "number": 2336,
    "body": "The `requests` dependency for ACA-py is currently using version `2.25.1` (Dec 2020), and has seen numerous improvements since then ito vulnerability fixes, speed optimizations, and support for python 3.10+\r\n\r\nSee changelogs here: https://github.com/psf/requests/releases",
    "head_branch": "chore/upgrade-requests-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2336 from ff137/chore/upgrade-requests-dependency\n\n⬆️ upgrade `requests` to latest"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db2ac254a19ac29487c",
    "number": 2335,
    "body": "Latest release (2.8) introduces support for python 3.10+\r\n\r\nRelease notes: https://github.com/jpadilla/pyjwt/releases\r\n\r\nNote: `jwt.decode` can fail spuriously due to breaking changes introduced in https://github.com/jpadilla/pyjwt/pull/797, where an exception is raised if the 'issued at' time of the JWT is in the future when decoding, with default 0 leeway. This means that a miniscule mismatch in clock synchronization, between generation and decoding of JWT, can now cause a failure when decoding. This arose in the integration tests, and is resolved with a leeway of 1 second.",
    "head_branch": "chore/upgrade-pyjwt-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2335 from ff137/chore/upgrade-pyjwt-dependency\n\n⬆️ upgrade `pyjwt` to latest; introduce leeway to `jwt.decode`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db3ac254a19ac29487d",
    "number": 2334,
    "body": "The `packaging` dependency is pinned to version 20. This is incompatible with the latest release of the `black` formatter:\r\n```\r\nblack 23.7.0 requires packaging>=22.0, but you have packaging 20.9 which is incompatible.\r\n```\r\n\r\nThere doesn't seem to be any breaking changes in the new packaging release, so this PR bumps the dependency to latest",
    "head_branch": "chore/upgrade-packaging-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2334 from ff137/chore/upgrade-packaging-dependency\n\n⬆️ upgrade `packaging` to latest"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db4ac254a19ac29487e",
    "number": 2333,
    "body": "Add new revocation registry endpoint to `faber` demo.\r\n\r\nUpdate the readme with new actions:\r\n\r\n```\r\n    (7) Rotate Revocation Registry\r\n    (8) List Revocation Registries\r\n```\r\n\r\n**Important** includes a fix for the decommission and init new registry logic. Running the demo revealed that 2 active registries were not always created, so simplified the logic and enforced create/init when `active` is `decommissioned`.",
    "head_branch": "issue-2326-add-rotate-to-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2333 from usingtechnology/issue-2326-add-rotate-to-demo\n\nAdd revocation registry rotate to faber demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db5ac254a19ac29487f",
    "number": 2332,
    "body": "This PR adds deprecation warnings when using the Indy wallet type. The newly added warnings will look like this on startup, assuming wallet type indy is used and log level is set to at least `WARNING`:\r\n\r\n```\r\n2023-07-20 19:34:16,917 aries_cloudagent.resolver WARNING Ledger is not configured, not loading IndyDIDResolver\r\n2023-07-20 19:34:17,043 aries_cloudagent.indy.sdk.profile WARNING Indy wallet type is deprecated, use Askar instead; see: https://github.com/hyperledger/aries-cloudagent-python/issues/2330\r\n2023-07-20 19:34:17,052 indy.libindy WARNING _indy_loop_callback: Function returned error\r\n2023-07-20 19:34:18,298 indy.libindy WARNING _indy_loop_callback: Function returned error\r\n2023-07-20 19:34:18,300 aries_cloudagent.core.conductor WARNING No ledger configured\r\n\r\n::::::::::::::::::::::::::::::::::::::::::::::\r\n:: Aries Cloud Agent                        ::\r\n::                                          ::\r\n::                                          ::\r\n:: Inbound Transports:                      ::\r\n::                                          ::\r\n::   - http://0.0.0.0:3000                  ::\r\n::                                          ::\r\n:: Outbound Transports:                     ::\r\n::                                          ::\r\n::   - http                                 ::\r\n::   - https                                ::\r\n::                                          ::\r\n:: Administration API:                      ::\r\n::                                          ::\r\n::   - http://0.0.0.0:3001                  ::\r\n::                                          ::\r\n::                               ver: 0.8.2 ::\r\n::::::::::::::::::::::::::::::::::::::::::::::\r\n\r\nListening...\r\n\r\nDEPRECATTION NOTICE:\r\n        The Indy wallet type is deprecated, use Askar instead; see: https://github.com/hyperledger/aries-cloudagent-python/issues/2330\r\n\r\n2023-07-20 19:34:18,473 aries_cloudagent.core.conductor WARNING Wallet version storage record not found.\r\n2023-07-20 19:34:18,473 aries_cloudagent.core.conductor WARNING No upgrade from version was found from wallet or via --from-version startup argument. Defaulting to v0.7.5.\r\n2023-07-20 19:34:18,480 indy.libindy WARNING _indy_loop_callback: Function returned error\r\n```\r\n\r\nThe `DEPRECATION NOTICE: The indy wallet type...` lines will always be printed regardless of log level to `stderr` (but still only when using the indy wallet type).\r\n\r\nThe lines added to the profile will ensure warnings are logged whenever a new sub-wallet is created in addition to the main wallet when operating without multi-tenancy. The `warnings.warn` lines show up in different circumstances from the `logging.warning` depending on how you're using ACA-Py. I really wanted something attention grabbing though so I added the `print_notices` to be printed immediately following the banner.\r\n\r\nOpen to suggestions on what should be included in the warning or if we should point people to somewhere other than #2330.",
    "head_branch": "chore/indy-deprecation-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2332 from dbluhm/chore/indy-deprecation-warning\n\nchore: add indy deprecation warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db6ac254a19ac294880",
    "number": 2331,
    "body": "- Bug fixes #2233 ",
    "head_branch": "pr_2233_followup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2331 from shaangill025/pr_2233_followup\n\nFix: Track endorser and author roles in per-tenant settings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db6ac254a19ac294881",
    "number": 2329,
    "body": "The older version seems to be causing errors in builds downstream for plugins and deployments after the recent 6.0.1 release.",
    "head_branch": "chore/update-pyyaml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2329 from dbluhm/chore/update-pyyaml\n\nchore: update PyYAML"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db7ac254a19ac294882",
    "number": 2328,
    "body": "Resolves #2317 ",
    "head_branch": "fix/multitenancy-doc-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2328 from esune/fix/multitenancy-doc-update\n\nAdded base wallet provisioning details to Multitenancy.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db8ac254a19ac294883",
    "number": 2327,
    "body": "Supersedes #2211. Thanks @sk13. There was a small typo that was putting a wrench in things. I don't have a good way to test these changes on Windows (my dev environment is on Linux). I'm also not sure about the workaround for signal handling.\r\n\r\nOn top of that, I get the impression there might be deeper challenges when it comes to Windows support. I'm not sure that's a can of worms we want to open right now. Open to thoughts and discussion but wanted to at least get these changes fixed for consideration.\r\n\r\ncc @WadeBarnes",
    "head_branch": "fix/non-unix-os-compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214db9ac254a19ac294884",
    "number": 2325,
    "body": "Bumps [aiohttp](https://github.com/aio-libs/aiohttp) from 3.8.4 to 3.8.5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/aio-libs/aiohttp/releases\">aiohttp's releases</a>.</em></p>\n<blockquote>\n<h2>3.8.5</h2>\n<h2>Security bugfixes</h2>\n<ul>\n<li>\n<p>Upgraded the vendored copy of llhttp_ to v8.1.1 -- by :user:<code>webknjaz</code>\nand :user:<code>Dreamsorcerer</code>.</p>\n<p>Thanks to :user:<code>sethmlarson</code> for reporting this and providing us with\ncomprehensive reproducer, workarounds and fixing details! For more\ninformation, see\n<a href=\"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-45c4-8wx5-qw6w\">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-45c4-8wx5-qw6w</a>.</p>\n<p>.. _llhttp: <a href=\"https://llhttp.org\">https://llhttp.org</a></p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7346\">#7346</a>)</p>\n</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>\n<p>Added information to C parser exceptions to show which character caused the error. -- by :user:<code>Dreamsorcerer</code></p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7366\">#7366</a>)</p>\n</li>\n</ul>\n<h2>Bugfixes</h2>\n<ul>\n<li>\n<p>Fixed a transport is :data:<code>None</code> error -- by :user:<code>Dreamsorcerer</code>.</p>\n<p>(<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/3355\">#3355</a>)</p>\n</li>\n</ul>\n<hr />\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/aio-libs/aiohttp/blob/v3.8.5/CHANGES.rst\">aiohttp's changelog</a>.</em></p>\n<blockquote>\n<h1>3.8.5 (2023-07-19)</h1>\n<h2>Security bugfixes</h2>\n<ul>\n<li>\n<p>Upgraded the vendored copy of llhttp_ to v8.1.1 -- by :user:<code>webknjaz</code>\nand :user:<code>Dreamsorcerer</code>.</p>\n<p>Thanks to :user:<code>sethmlarson</code> for reporting this and providing us with\ncomprehensive reproducer, workarounds and fixing details! For more\ninformation, see\n<a href=\"https://github.com/aio-libs/aiohttp/security/advisories/GHSA-45c4-8wx5-qw6w\">https://github.com/aio-libs/aiohttp/security/advisories/GHSA-45c4-8wx5-qw6w</a>.</p>\n<p>.. _llhttp: <a href=\"https://llhttp.org\">https://llhttp.org</a></p>\n<p><code>[#7346](https://github.com/aio-libs/aiohttp/issues/7346) &lt;https://github.com/aio-libs/aiohttp/issues/7346&gt;</code>_</p>\n</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>\n<p>Added information to C parser exceptions to show which character caused the error. -- by :user:<code>Dreamsorcerer</code></p>\n<p><code>[#7366](https://github.com/aio-libs/aiohttp/issues/7366) &lt;https://github.com/aio-libs/aiohttp/issues/7366&gt;</code>_</p>\n</li>\n</ul>\n<h2>Bugfixes</h2>\n<ul>\n<li>\n<p>Fixed a transport is :data:<code>None</code> error -- by :user:<code>Dreamsorcerer</code>.</p>\n<p><code>[#3355](https://github.com/aio-libs/aiohttp/issues/3355) &lt;https://github.com/aio-libs/aiohttp/issues/3355&gt;</code>_</p>\n</li>\n</ul>\n<hr />\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/9c13a52c21c23dfdb49ed89418d28a5b116d0681\"><code>9c13a52</code></a> Bump aiohttp to v3.8.5 a security release</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/7c02129567bc4ec59be467b70fc937c82920948c\"><code>7c02129</code></a>  Bump pypa/cibuildwheel to v2.14.1</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/135a45e9d655d56e4ebad78abe84f1cb7b5c62dc\"><code>135a45e</code></a> Improve error messages from C parser (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7366\">#7366</a>) (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7380\">#7380</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/9337fb3f2ab2b5f38d7e98a194bde6f7e3d16c40\"><code>9337fb3</code></a> Fix bump llhttp to v8.1.1 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7367\">#7367</a>) (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7377\">#7377</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/f07e9b44b5cb909054a697c8dd447b30dbf8073e\"><code>f07e9b4</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7373\">#7373</a>/66e261a5 backport][3.8] Drop azure mention (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7374\">#7374</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/01d9b70e5477cd746561b52225992d8a2ebde953\"><code>01d9b70</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7370\">#7370</a>/22c264ce backport][3.8] fix: Spelling error fixed (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7371\">#7371</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/3577b1e3719d4648fa973dbdec927f78f9df34dd\"><code>3577b1e</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7359\">#7359</a>/7911f1e9 backport][3.8]  Set up secretless publishing to PyPI (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7360\">#7360</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/8d45f9c99511cd80140d6658bd9c11002c697f1c\"><code>8d45f9c</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7333\">#7333</a>/3a54d378 backport][3.8] Fix TLS transport is <code>None</code> error (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7357\">#7357</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/dd8e24e77351df9c0f029be49d3c6d7862706e79\"><code>dd8e24e</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7343\">#7343</a>/18057581 backport][3.8] Mention encoding in <code>yarl.URL</code> (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7355\">#7355</a>)</li>\n<li><a href=\"https://github.com/aio-libs/aiohttp/commit/40874103ebfaa1007d47c25ecc4288af873a07cf\"><code>4087410</code></a> [PR <a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7346\">#7346</a>/346fd202 backport][3.8]  Bump vendored llhttp to v8.1.1 (<a href=\"https://redirect.github.com/aio-libs/aiohttp/issues/7352\">#7352</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/aio-libs/aiohttp/compare/v3.8.4...v3.8.5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=aiohttp&package-manager=pip&previous-version=3.8.4&new-version=3.8.5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/demo/playground/scripts/aiohttp-3.8.5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2325 from hyperledger/dependabot/pip/demo/playground/scripts/aiohttp-3.8.5\n\nchore(deps): Bump aiohttp from 3.8.4 to 3.8.5 in /demo/playground/scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dbaac254a19ac294885",
    "number": 2322,
    "body": "`marshmallow` dependency is currently pinned to `3.5.1`. There are no breaking changes in marshmallow's minor releases, so this PR unpins the dependency and upgrades to latest `3.19.0`",
    "head_branch": "chore/upgrade-marshmallow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2322 from ff137/chore/upgrade-marshmallow\n\n⬆️ upgrade `marshmallow` to latest"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dbbac254a19ac294886",
    "number": 2313,
    "body": "- ARM based macs caused dependency issues with indy-vdr and ursa-bbs-signatures\r\n- Solution checks for architecture and updates DOCKER_DEFAULT_PLATFORM\r\n- Closes #2311 ",
    "head_branch": "feature/arm-mac-workaround",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2313 from finnformica/feature/arm-mac-workaround\n\nAdd workaround for ARM based macs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dbbac254a19ac294887",
    "number": 2309,
    "body": "Closes issue #2304 \r\n\r\nThere are two active registries at a given time, this API endpoint - given a `cred_def_id` - will find and decommission the active revocation registries and will kick off the procedure to create new active registries (same as when a registry is full).\r\n\r\nNote that the `pytest` doesn't have a handler to transition the `init` state registries to `active`, so we simulate that before testing the decommission code. ",
    "head_branch": "issue-2304-revreg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2309 from usingtechnology/issue-2304-revreg\n\nAPI endpoint to decommission revocation registry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dbcac254a19ac294888",
    "number": 2308,
    "body": "Fixes https://github.com/hyperledger/aries-cloudagent-python/issues/2307",
    "head_branch": "fix/askar-only-image",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2308 from WadeBarnes/fix/askar-only-image\n\nAdd .indy_client folder to Askar only image."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dbdac254a19ac294889",
    "number": 2305,
    "body": "This PR adds the `--debug-webhooks` flag for all demo agents, as it is required to distinguish between credential offers and presentation requests for different credential types.\r\n\r\nIt also works around an issue with #2234 which causes the agents to exit with a RuntimeError due to the call to `loop.run_until_complete` within the logging configuration. I think a more complete fix might be to use a ContextVar to store the current DID identifier and set that when a tenant context is initialized, to avoid any async operations in the logger config.",
    "head_branch": "fix/alice-faber-webhook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2305 from andrewwhitehead/fix/alice-faber-webhook\n\nFix alice/faber demo execution"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dbeac254a19ac29488a",
    "number": 2303,
    "body": "This is meant to cancel in-progress unit tests and integration tests which are no longer valid, and only consuming resources.",
    "head_branch": "workflow-concurrency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2303 from andrewwhitehead/workflow-concurrency\n\nCancel in-progress workflows when PR is updated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dbfac254a19ac29488b",
    "number": 2302,
    "body": null,
    "head_branch": "upd/credx-0.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2302 from andrewwhitehead/upd/credx-0.4\n\nUpdate to indy-credx 1.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dc0ac254a19ac29488c",
    "number": 2300,
    "body": "This pull request introduces two new endpoints to the admin wallet API:\r\n\r\n`POST /wallet/jwt/sign`: This endpoint allows for the creation of a JWS (JSON Web Signature) by providing a DID (Decentralized Identifier) or verification method along with a header and payload. The JWS is generated using the associated keys linked to the provided DID.\r\n\r\n`POST /wallet/jwt/verify`: With this endpoint, you can verify a JWS by providing the JWS itself. The implementation includes a DID resolver, which leverages the JWS header to resolve a DID document. This document is then used to verify the signature of the provided JWS.\r\n\r\nThese new endpoints expand the functionality of our admin wallet API, empowering users to perform signing and verification operations conveniently. I have tested the code and ensured its compatibility with our existing system.\r\n\r\nSigned-off-by: Adam Burdett <burdettadam@gmail.com>\r\nCo-authored-by: Daniel Bluhm <daniel@indicio.tech>",
    "head_branch": "feature/wallet-jwt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2300 from Indicio-tech/feature/wallet-jwt\n\nFeature: JWT Sign and Verify Admin Endpoints with DID Support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dc1ac254a19ac29488d",
    "number": 2299,
    "body": "fixes #2298 ",
    "head_branch": "fix-2298-indy-base",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2299 from usingtechnology/fix-2298-indy-base\n\nAdd build step for indy-base image in run_demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dc1ac254a19ac29488e",
    "number": 2295,
    "body": "Having a universal resolver set in the configuration, I want to be able to create and receive invitations containing a public DID other than did:sov (Indy DID). In order to do that I must promote the DID to public after it has been created in the wallet.\r\n\r\nThis PR adds checks of the DID format to associate ledger operations to the did:sov only in the said operation, thus allowing any DID format to be set as public.",
    "head_branch": "Allow_any_DID_to_be_public",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2295 from mkempa/Allow_any_DID_to_be_public\n\nAllow any did to be public"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dc2ac254a19ac29488f",
    "number": 2294,
    "body": "Add support for `goal` and `goal_code` in API and messages for `out-of-band` and `didexchange`\r\n\r\nCloses #1652",
    "head_branch": "issue-1652-goal-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2294 from usingtechnology/issue-1652-goal-code\n\nAdd Goal and Goal Code to OOB and DIDex Request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dc3ac254a19ac294890",
    "number": 2292,
    "body": "This PR implements automated setup of revocation by introducing an `AnonCredsRevocationSetupManager` base class and `DefaultRevocationSetup` concrete class and adding the appropriate hooks to the artifact registration steps.\r\n\r\nOverall, I'm very pleased with the simplicity of this setup manager as compared to our original mechanism. It works in more or less the same way, listening for events and triggering the next step in the flow; however, all the event listeners are defined in one place (rather than across 2 or 3 modules) and the event objects themselves have been formalized to make accessing the information in the event simpler. Additionally, encapsulation of the anoncreds interface is better than what we had previously so the event listeners themselves are fewer lines with significantly more straightforward logic.\r\n\r\nI've left the door open for enabling plugins to implement their own `AnonCredsRevocationSetupManager` if there is ever a need to customize the setup behavior. I'm considering moving the `handle_full_registry` logic to this same component for the same reason -- giving plugin authors the ability to customize if needed -- but I'm not sure how likely it is anyone will actually need or want to do customizations.\r\n\r\nThis PR invalidates the following temporary endpoints we added for testing:\r\n\r\n- `POST /anoncreds/revocation-registry-definition`\r\n- `PUT /anoncreds/registry/{rev_reg_def_id}/tails-file`\r\n- `PUT /anoncreds/registry/{rev_reg_def_id}/active`\r\n- `POST /anoncreds/revocation-list`\r\n\r\nI haven't removed these endpoints just yet in this PR though.\r\n\r\nThis PR adds `max_cred_num` to the expected options of the `POST /anoncreds/credential-definition` endpoint.",
    "head_branch": "feature/ac/automatic-setup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2292 from dbluhm/feature/ac/automatic-setup\n\nfeat(anoncreds): Implement automated setup of revocation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214dc4ac254a19ac294891",
    "number": 2291,
    "body": "We overlooked one other instance of von-image getting used; this PR is a quick correction to the `Dockerfile.run` that gets used by the `run_docker` script.",
    "head_branch": "fix/von-image-use",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2291 from dbluhm/fix/von-image-use\n\nfix: use python 3.9 in run_docker"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dc5ac254a19ac294892",
    "number": 2290,
    "body": "PR to enable creating a 1.0.0-rc3 release that matches ACA-Py Release 0.8.2.",
    "head_branch": "1.0.0-rc3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2290 from swcurran/1.0.0-rc3\n\n1.0.0-rc3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214dc6ac254a19ac294893",
    "number": 2288,
    "body": "Having a multitenancy mode and a base wallet mediator, when a DID was being promoted to public the base wallet mediator was not taken into consideration - the returned mediation record was always None. As a result, the agent's endpoint is written to ledger instead of the mediator's.\r\n\r\nThis PR fixes this issue.",
    "head_branch": "Fix_routing_in_set_public_did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2288 from mkempa/Fix_routing_in_set_public_did\n\nFix routing in set public did"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dc7ac254a19ac294894",
    "number": 2287,
    "body": "Supersedes #2220. Thank you for your contributions @miroslav-inc!",
    "head_branch": "docs/webhook-over-websocket-clarification",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2287 from dbluhm/docs/webhook-over-websocket-clarification\n\nWebhook over websocket clarification"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dc8ac254a19ac294895",
    "number": 2286,
    "body": null,
    "head_branch": "ryjones-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Correct Daniel Hardman's github id\n\nSigned-off-by: Ry Jones <ry@linux.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dc8ac254a19ac294896",
    "number": 2285,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.8.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2285 from swcurran/0.8.2\n\n0.8.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dc9ac254a19ac294897",
    "number": 2284,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.8.2-rc2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2284 from swcurran/0.8.2-rc2\n\n0.8.2-rc2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dcaac254a19ac294898",
    "number": 2283,
    "body": "updating references to the anoncreds lib to use the v0.1.0 release.\r\n\r\n",
    "head_branch": "anoncreds-rs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2283 from usingtechnology/anoncreds-rs\n\nUpdate anoncreds-rs to v0.1.0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dcbac254a19ac294899",
    "number": 2282,
    "body": "PR for Release 0.8.2-rc1.  This may be the final PR before 0.8.2.  We'd still like to get 2233 into the release, but at this point it's looking like too high a risk.\r\n\r\n- 0.8.2-rc1\r\n- Add note about PR 2255, and change its title\r\n",
    "head_branch": "0.8.2-rc1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2282 from swcurran/0.8.2-rc1\n\n0.8.2-rc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dccac254a19ac29489a",
    "number": 2276,
    "body": "And use it in Issue Credential v2 and Present Proof v2.\r\n\r\nThis PR supersedes #2191. As compared to #2191, this PR includes the required changes to use revocation with the generic anoncreds interface. Additionally, I've cleaned up this branch quite a bit. We had some unsuccessful detours (led by me lol) that resulted in both a messy history and changes in places that didn't need changes in the end.\r\n\r\nDue to the need to clean up history, the contributions of my collaborators have unfortunately been obscured. Thank you @burdettadam and @cjhowland for all of your work on this!\r\n\r\nAs discussed with @swcurran, the intent of this PR is to have it merged to a feature branch (as in not merged to main) and for work to continue on the feature branch. I will create a number of issues reflecting things we hadn't gotten to yet or explicitly set aside for later as well as calling out discoveries that warrant further discussion.\r\n\r\nHere is a brief summary of the changes that are included in this PR:\r\n\r\n## Changes\r\n### Added AnonCreds Registry and plugin interface\r\n- This is a generic AnonCreds registry interface. It defines a registrar and resolver abstract base class which are to be implemented by plugins. The plugged in resolvers and registrars are then registered with the main registry interface which selects the appropriate resolver/registrar for a given identifier and operation.\r\n- Interface found in `aries_cloudagent.anoncreds.registry`\r\n- ABCs found in `aries_cloudagent.anoncreds.base`\r\n- Associated models for generic representations of schemas, cred defs, and revocation artifacts found in `aries_cloudagent.anoncreds.models`\r\n\r\n### Added default registry for \"legacy indy\"\r\n- Found in `aries_cloudagent.anoncreds.default.legacy_indy`\r\n- Uses the `aries_cloudagent.ledger` to send transactions to indy networks.\r\n- Does NOT support endorsement protocol flow.\r\n\r\n### Added stubs for did:web and did:indy\r\n- These reside alongside the `legacy_indy` registry but are just stubbed out for now.\r\n\r\n### Added AnonCreds Issuer, Verifier, and Holder interfaces\r\n- Found in `aries_cloudagent.anoncreds.{issuer,verifier,holder}`\r\n- These are very similar to but different from the original `IndyIssuer`, `IndyVerifier` and `IndyHolder` interfaces that existed previously.\r\n- The role of these interfaces has expanded slightly, especially for Issuer, to better abstract the details of credential artifact registration and creation when using the generic anoncreds interface.\r\n\r\n### Added AnonCreds Revocation interface\r\n- Found in `aries_cloudagent.anoncreds.revocation`\r\n- This is intended to replace several components: `IssuerRevRegRecord`, `RevocationRegistry`, and `IndyRevocation`.\r\n- The components it replaces remain in place until all responsibilities have been moved.\r\n- There was an unfortunate amount of conceptual overlap between these components. On top of this, their responsibilities were confused over time, resulting in models/records doing more than the probably should have.\r\n- Implements a `create_credential` method similar to `AnonCredsIssuer.create_credential`. The issuer version supports credentials for cred defs that do not support revocation. The revocation version supports credentials for cred defs that do support revocation. The separation results in a cleaner implementation on both sides and cleaner split in responsibilities.\r\n\r\n### Update Issue Credential v2 indy format handler to use AnonCreds interface\r\n- Generally only minor tweaks with the exception of a cleaned up `issue_credential`; previously, this method made calls directly to the ledger with Indy specific revocation details being handled at this layer. These details have been moved down the stack to `AnonCredsRevocation.create_credential`.\r\n\r\n### Update Present Proof v2 indy format handler to use AnonCreds interface\r\n- Generally minor tweaks.\r\n\r\n### Update Revocation Manager\r\n- This component bridges the gap between protocol records and `IssuerCredRevRecord`s and AnonCreds details.\r\n- Updated revoke and publish methods to use the generic interface.\r\n- There remains some Indy-isms in `update_rev_reg_revoked_state`. I believe this can be translated to a more generic operation but I haven't had a chance to take a closer look at the revocation recovery pieces yet.\r\n\r\n### Added AnonCredsTailsServer and updated BaseTailsServer\r\n- In order to publish a tails file to the tails server, we have to take a different tactic due to when rev reg def ids are available and opportunities for invalid URL values to be in the rev reg def id. Now, we upload by hash instead of rev reg id.\r\n- We have a branch on our fork of indy tails server that implements the new endpoint: https://github.com/Indicio-tech/indy-tails-server/tree/fix/put-get-file-backwards-compat\r\n\r\n### Added Admin endpoints for AnonCreds operations\r\n```\r\npost /anoncreds/schema\r\nget /anoncreds/schema/{schemaId}\r\nget /anoncreds/schemas\r\npost /anoncreds/credential-definition\r\nget /anoncreds/credential-definition/{cred_def_id}\r\nget /anoncreds/credential-definitions\r\npost /anoncreds/revocation-registry-definition\r\npost /anoncreds/revocation-list\r\nput /anoncreds/registry/{rev_reg_id}/tails-file\r\nput /anoncreds/registry/{rev_reg_id}/active\r\npost /anoncreds/revoke\r\npost /anoncreds/publish-revocations\r\n```\r\n- These behave more or less as expected when compared to `/schemas`, `/credential-definitions`, `/revocation/*`, etc.\r\n- This is currently the only flow supported. Automated setup flow is in the works.\r\n\r\n### Updated `BaseLedger` to behave as needed for the legacy indy registry\r\n- The ledger implementation previously did some funky stuff with passed in `IndyIssuer` to both create and publish anoncreds artifacts. The responsibility of the ledger has been reduced to only publishing.\r\n- These changes were implemented destructively but don't have to be if we want to better support backwards compatibility of Indy specific components.\r\n- Some improvements were made to error handling to clean up the flow of some methods (see `aries_cloudagent.ledger.error`)\r\n\r\n### Updates to Dockerfiles, requirements, setup to add anoncreds dep\r\n- Currently pulling directly from git repo since no package is published to PyPI yet\r\n- Binary also pulled from github releases page\r\n\r\n## Notably missing changes\r\n- Issue Credential v1 and Present Proof v1 implementation has not been updated\r\n- Old endpoints are still present but are in various states of functional; these will either need to be deprecated or adapted\r\n- Removal of deprecated components like `IssuerRevRegRecord`; we need a migration plan here, too\r\n- There are some shortcomings in link secret handling as caused by the anoncreds library not accepting a memory view (see https://github.com/hyperledger/anoncreds-rs/issues/202#issuecomment-1581415680)\r\n- Additional rearranging of components like `aries_cloudagent.ledger`; several should be moved to somewhere in `anoncreds.default.indy` or similar\r\n- Models for portions of AnonCreds credentials are still defined in `aries_cloudagent.indy` -- moving these components was omitted for a cleaner set of changes in this PR (not moving these reduced the number of lines changed by half)\r\n- In general, backwards compatibility with previously created anoncreds objects. Holder and verifier roles are likely fine but Issuer will need a migration plan.\r\n- Updates to tests. Sorry :grimacing: -- we have been testing using an integration style test that calls the added admin API endpoints. I have not included these tests in this PR for the sake of cleanliness. I uploaded the test as a gist here: https://gist.github.com/dbluhm/4d33d8946d23dbaced9be825c49a9d5c\r\n- Automated setup of revocation artifacts -- I have some WIP but opted to hurry up and open this PR rather than wait for me to finish.\r\n- did:indy and did:web implementations\r\n- Endorser support -- this can be implemented through a separate Indy registry plugin or through `options` to the existing registry\r\n- Revocation recovery is still Indy specific at the moment",
    "head_branch": "feature/anoncreds-squash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2276 from Indicio-tech/feature/anoncreds-squash\n\nfeat: add anoncreds interface"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214dcdac254a19ac29489b",
    "number": 2273,
    "body": "create/create-offer, send/send-offer now have replacement_id in the POST body to set the id\r\n\r\nAddresses #2218\r\n\r\n`replacement_id` for [RFC-0453](https://github.com/hyperledger/aries-rfcs/tree/main/features/0453-issue-credential-v2) was half implemented, just needed to expose it to the API for the issuer to set the value.",
    "head_branch": "issue-2218-replacement_id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2273 from usingtechnology/issue-2218-replacement_id\n\nAdd replacement_id to API."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dcdac254a19ac29489c",
    "number": 2272,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "update-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2272 from swcurran/update-readme\n\nMinor revisions to the README.md and DevReadMe.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dceac254a19ac29489d",
    "number": 2270,
    "body": "See https://github.com/hyperledger/aries-cloudagent-python/security/dependabot/3",
    "head_branch": "dependabot-3-update-requests-lib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dcfac254a19ac29489e",
    "number": 2269,
    "body": "This PR fixes a case when public verkey of the mediated agent is removed from the keylists of its mediator during establishing a connection.\r\n\r\nAssuming there is mediation established for an agent.\r\nIf the DID was promoted to public via POST /wallet/did/public?did={}&mediation_id={non_empty_id} then an ATTRIB 'endpoint' transaction was created on the ledger with the url pointing to the mediator and the respective routing_keys.\r\n\r\nNext, the Inviter creates an invitation using the public=true (or use_public_did: true) flag, the communication of the Inviter goes through the mediator as it should. Then in the Inviter's accept-request phase, the public verkey is removed from the keylist of the mediator. \r\nThat prevents any next attempts to answer to the Inviter's invitations with its public DID since the mediator does no longer have the routing key (verkey) associated to the public DID.\r\n\r\nIn conclusion, the public verkey must remain in the mediator as the routing key.",
    "head_branch": "fix-do_not_remove_public_verkey_on_mediator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2269 from mkempa/fix-do_not_remove_public_verkey_on_mediator\n\nFix: Do not replace public verkey on mediator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dd0ac254a19ac29489f",
    "number": 2268,
    "body": "Add readthedocs YAML file as required by RTD.  Per this [blog post](https://blog.readthedocs.com/migrate-configuration-v2/), this file is now required for publishing the type of documentation we generate to the RTD sites. For those not aware, here is the link to the RTD site for ACA-Py -- https://aries-cloud-agent-python.readthedocs.io\r\n\r\nHere is the link to the version of the docs generated from this branch with this new file: https://aries-cloud-agent-python.readthedocs.io/en/swcurran-add-rtd/. LGTM!",
    "head_branch": "swcurran-add-rtd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2268 from hyperledger/swcurran-add-rtd\n\nCreate .readthedocs.yaml file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dd1ac254a19ac2948a0",
    "number": 2267,
    "body": "Addressing an issue where it is difficult to get set up to debug and begin coding by adding a devcontainer.\r\n\r\nSee Issue #2251 - this is only one small part of developer documentation. I wanted this out for feedback while we identify other areas of concern.",
    "head_branch": "issue-2251-devcontainer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2267 from usingtechnology/issue-2251-devcontainer\n\nAdd devcontainer for ACA-Py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dd2ac254a19ac2948a1",
    "number": 2265,
    "body": "PR #2235 has just been merged, but I realized that not having access to `Profile` could be too restrictive. For example, accessing storage with the current function's signature is hard. In fact, I thought that custom strategies could be initialized with an `InjectionContext` and query what they need, but it doesn't seem to be working. Let me know if there is a more idiomatic way of doing this.\r\n\r\nThis PR fixes this by providing an optional `Profile` and switching to an `async` method.",
    "head_branch": "feat/async_verkey_id_strategy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2265 from sicpa-dlab/feat/async_verkey_id_strategy\n\nProvide an optional `Profile` to the verification key strategy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dd3ac254a19ac2948a2",
    "number": 2263,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "add-sherman",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2263 from swcurran/add-sherman\n\nPropose adding Jason Sherman usingtechnology as a Maintainer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dd3ac254a19ac2948a3",
    "number": 2262,
    "body": "Change a small oversight in did creation admin route:\r\n\r\n* Missing `method` parameter will default to `sov`\r\n* Unknown (ie: not registed in `DIDMethods`) methods will be rejected",
    "head_branch": "feature/reject-unknown-did-methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2262 from sicpa-dlab/feature/reject-unknown-did-methods\n\nfeat(did creation route): reject unregistered did methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dd4ac254a19ac2948a4",
    "number": 2261,
    "body": "The previous assignment used a value from a field that had not been assigned yet. So, use the correct `thread_id` value for the `thid`.\r\n\r\nFixes #2259 \r\n\r\nThe fix originally discussed in #2259 is too aggressive and after reviewing the code it is clear that there can be empty `~thread` and they are expected to be dealt with by the receiver.  In this case, we were attempting to set the `thid` but just using an unassigned value.\r\n\r\n",
    "head_branch": "issue-2259",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2261 from usingtechnology/issue-2259\n\nAssign ~thread.thid with thread_id value"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dd5ac254a19ac2948a5",
    "number": 2260,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.8.2-rc0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2260 from swcurran/0.8.2-rc0\n\nRelease 0.8.2-rc0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dd6ac254a19ac2948a6",
    "number": 2258,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "fix-maintainers-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2258 from swcurran/fix-maintainers-file\n\nUpdating Maintainers list to be accurate and using the TOC format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dd7ac254a19ac2948a7",
    "number": 2255,
    "body": "Include searching by the module base package when resolving plugin definitions location.\r\n\r\nFixes #2224 \r\n\r\nThis still depends on the module package names and file system paths matching up, which is not guaranteed. But without adding additional configuration in the plugin registry, I think this is all we can do.",
    "head_branch": "issue-2224",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2255 from usingtechnology/issue-2224\n\nResolve definitions.py fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dd8ac254a19ac2948a8",
    "number": 2253,
    "body": "@WadeBarnes -- advice needed.\r\n\r\nWith this PR, we update the \"version.py\" and \"openapi\" versions to \"1.0.0-rc2\", which I don't we want to leave in place.\r\n\r\nHere are some things we can do:\r\n\r\n- After this PR is merged, add another that changes the \"main\" branch version to what it usually is -- \"0.8.1\" (the last released version).  That's the state we are usually in between releases.\r\n   - Side Issue: Should we change this practice and after a release, change the version references in the code to what we expect the next release to be -- e.g. \"0.8.2-latest\" or something like that.\r\n- Merge this PR into a new branch \"1.0.0\" and we use that for future \"1.0.0-rcX\" tags.  As part of making subsequent 1.0.0-rcX tags, we merge main into the 1.0.0 branch.  That means that 1.0.0 is a clone of main for tags, updated with the types of changes that are in this PR.\r\n\r\nI kind of lean towards the \"1.0.0\" branch, but you know this stuff way better than I.\r\n\r\n",
    "head_branch": "1.0.0-rc2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2253 from swcurran/1.0.0-rc2\n\n1.0.0-rc2 Updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214dd9ac254a19ac2948a9",
    "number": 2247,
    "body": "Update setup.py minimum python version requirement.\r\nUpdate workflows to use Python 3.9 by default.\r\nUpdate container image docs.\r\n\r\n@swcurran @WadeBarnes I believe these are the relevant changes in workflows and setup files in order to officially drop Python 3.6. I think once we've made the transition, there are a number of dependencies that ought to be updated. I think those updates are best suited to a follow up PR.\r\n\r\ncloses: #2244 ",
    "head_branch": "chore/drop-py3.6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2247 from Indicio-tech/chore/drop-py3.6\n\nchore!: drop python 3.6 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ddaac254a19ac2948aa",
    "number": 2246,
    "body": "Now is as good a time as any to upgrade the codegen tools in `scripts/generate-open-api-spec` to use the latest `swaggerapi/swagger-codegen-cli` release (it was ~3 years out of date). \r\n\r\nAdditionally, I added the latest `openapitools/openapi-generator-cli`, so that the spec generation now provides both a Swagger 2.0 spec, and an OpenApi 3.0 spec. This way users don't need to manually upgrade the spec themselves.\r\n\r\nPreviously the Swagger 2.0 spec was simply called `openapi.json`. This is now renamed `swagger.json`, with the 3.0 compatible spec in its place. \r\n\r\nWorth noting that the spec validation still only throws warnings that can be ignored:\r\n- the `swagger` spec validation only complains about some missing operationId's (and 'host' not defined);\r\n- and the `open-api` spec validation only complains about `example` fields being unexpected, and a single case of `attribute tags.tagsexternalDocs.url is missing`.\r\n\r\nAlso, I updated the `UsingOpenAPI.md` file to reflect these changes, with some minor neatening up included.\r\n\r\nReview can be validated by running `scripts/generate-open-api-spec`.\r\n\r\nDiscussion re further edits is welcome.",
    "head_branch": "upgrade/swagger-codegen-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2246 from ff137/upgrade/swagger-codegen-cli\n\nUpgrade codegen tools in `scripts/generate-open-api-spec` and publish Swagger 2.0 and OpenAPI 3.0 specs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ddbac254a19ac2948ab",
    "number": 2245,
    "body": "Bug with prompt_toolkit and trace logging. Could only bump up the prompt_toolkit library so much since demos run on Python 3.6. However, I did attempt on 3.9 with the latest version of prompt_toolkit and setting an env var (see https://github.com/prompt-toolkit/python-prompt-toolkit/pull/898). This still did not correct the issue, so reverted to existing code and just handled the exception(s). The output of the trace log is being written to the console, my limited understanding of this would be that the trace log works, but also triggers the prompt_toolkit to do the same work and gets into conflict.\r\n\r\nFixes #2205 ",
    "head_branch": "bugfix/issue-2205",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2245 from usingtechnology/bugfix/issue-2205\n\n./run_demo performance -c 1 --mediation --timing --trace-log"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ddcac254a19ac2948ac",
    "number": 2243,
    "body": "This addresses an issue where the keys used in connectionless oob invitations were not correctly set-up for routing through the base wallet when multi-tenancy is enabled, which resulted in those invitation not being usable.\r\n\r\ncc @lohanspies @ff137\r\n\r\n",
    "head_branch": "fix/oob-connectionless-multitenant",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2243 from TimoGlastra/fix/oob-connectionless-multitenant\n\nfix: route multitenant connectionless oob invitation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dddac254a19ac2948ad",
    "number": 2241,
    "body": null,
    "head_branch": "feat/Ed25519Signature2020",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2241 from sicpa-dlab/feat/Ed25519Signature2020\n\nFeat: Added support for Ed25519Signature2020 signature type and Ed25519VerificationKey2020"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dddac254a19ac2948ae",
    "number": 2240,
    "body": "This PR adjusts the caching behavior for connection targets to solve some issues seen in multi-replica setups under certain circumstances.\r\n\r\n### The Problem\r\n\r\nGiven the following conditions,\r\n- ACA-Py is connecting to a remote agent through the remote agent's Public DID\r\n- ACA-Py is using more than one replica with loadbalancing such that one replica may start a DID Exchange/Connection and another may finish the exchange.\r\n- Following connection, ACA-Py attempts to issue a credential to the remote agent (or theoretically any other message where the protocol requires a connection)\r\n\r\nIf the agent that initiates the credential issuance is not the same agent that completed the DID exchange, the agent will have a connection target cached that still contains the public DID and public routing info of the remote agent, causing the remote agent (if it's also running ACA-Py) to get errors like the following:\r\n\r\n```\r\n2023-05-23 18:18:55,358 aries_cloudagent.core.conductor ERROR Exception in message handler:\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.9/asyncio/tasks.py\", line 256, in __step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.9/site-packages/aries_cloudagent/core/dispatcher.py\", line 264, in handle_message\r\n    await handler(context, responder)\r\n  File \"/usr/lib/python3.9/site-packages/aries_cloudagent/protocols/issue_credential/v2_0/handlers/cred_offer_handler.py\", line 51, in handle\r\n    raise HandlerException(\r\naries_cloudagent.messaging.base_handler.HandlerException: No connection or associated connectionless exchange found for credential offer\r\n```\r\n\r\nThis is because it received a message encrypted for it's public DID and key, which does not have a connection associated with it.\r\n\r\nConsider the following diagram. In this diagram, `alice0` and `alice1` represent two replicas of ACA-Py working collectively to represent an Alice agent. `bob` represents the remote agent.\r\n\r\n![offer-cred-cache-conn-failure](https://github.com/hyperledger/aries-cloudagent-python/assets/22032832/a9c36980-04ed-4704-9b35-2c49cd20b15c)\r\n\r\nIf the loadbalancing of the replicas happens to cause the above handling of messages by the different replicas, we see the error pasted above on `bob`.\r\n\r\nThis can also happen with a slightly different sequence of messages, as shown in this diagram:\r\n\r\n![issue-cred-cache-conn-failure](https://github.com/hyperledger/aries-cloudagent-python/assets/22032832/5ed1b63e-2273-4484-b706-2da01954e9ea)\r\n\r\nIn this case, this results in the following error on `bob`:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.9/asyncio/tasks.py\", line 256, in __step\r\n    result = coro.send(None)\r\n  File \"/usr/lib/python3.9/site-packages/aries_cloudagent/core/dispatcher.py\", line 264, in handle_message\r\n    await handler(context, responder)\r\n  File \"/usr/lib/python3.9/site-packages/aries_cloudagent/protocols/issue_credential/v2_0/handlers/cred_issue_handler.py\", line 49, in handle\r\n    raise HandlerException(\r\naries_cloudagent.messaging.base_handler.HandlerException: No connection or associated connectionless exchange found for credential\r\n```\r\n\r\n### The Solution\r\n\r\nThe solution implemented by this PR is to only cache connection targets on completion of a DID Exchange or connection; or, in other words, only cache connection targets for connections that have reached a `completed` state. Given that the connection target is intentionally changed in the process of these protocols (you could even say that's kind of the whole point of the protocol), I believe there is little benefit to caching the initial connection target anyways. This notion is supported by these lines:\r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/connections/models/conn_record.py#L503-L513\r\n\r\n```\r\n    async def post_save(self, session: ProfileSession, *args, **kwargs):\r\n        \"\"\"Perform post-save actions.\r\n\r\n        Args:\r\n            session: The active profile session\r\n        \"\"\"\r\n        await super().post_save(session, *args, **kwargs)\r\n\r\n        # clear cache key set by connection manager\r\n        cache_key = f\"connection_target::{self.connection_id}\"\r\n        await self.clear_cached_key(session, cache_key)\r\n```\r\n\r\nAfter every save on the connection record (which will occur at basically every step of the did exchange or connection protocols), we're clearing the cache of the target.\r\n\r\nGiven that the cache is being cleared, causing the connection target info to be recalled from the wallet record, I believe the changes made in this PR should not impact performance, though I have not tested this.\r\n\r\nI get the feeling this change could improve other scenarios we've seen previously that motivated the creation of the redis cache plugin but I have not tested these other scenarios.",
    "head_branch": "fix/did-exchange-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2240 from sicpa-dlab/fix/did-exchange-cache\n\nfix: only cache completed connection targets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ddeac254a19ac2948af",
    "number": 2239,
    "body": "- Update NGROK_ENDPOINT to select the tunnel with the specified AGENT_PORT\r\n- Add output of invitation_url using log_msg function",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ddfac254a19ac2948b0",
    "number": 2238,
    "body": "Bumps [requests](https://github.com/psf/requests) from 2.30.0 to 2.31.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/releases\">requests's releases</a>.</em></p>\n<blockquote>\n<h2>v2.31.0</h2>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/blob/main/HISTORY.md\">requests's changelog</a>.</em></p>\n<blockquote>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4\"><code>147c851</code></a> v2.31.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5\"><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>\n<li><a href=\"https://github.com/psf/requests/commit/302225334678490ec66b3614a9dddb8a02c5f4fe\"><code>3022253</code></a> test on pypy 3.8 and pypy 3.9 on windows and macos (<a href=\"https://redirect.github.com/psf/requests/issues/6424\">#6424</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/b639e66c816514e40604d46f0088fbceec1a5149\"><code>b639e66</code></a> test on py3.12 (<a href=\"https://redirect.github.com/psf/requests/issues/6448\">#6448</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/d3d504436ef0c2ac7ec8af13738b04dcc8c694be\"><code>d3d5044</code></a> Fixed a small typo (<a href=\"https://redirect.github.com/psf/requests/issues/6452\">#6452</a>)</li>\n<li>See full diff in <a href=\"https://github.com/psf/requests/compare/v2.30.0...v2.31.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.30.0&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hyperledger/aries-cloudagent-python/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/demo/playground/scripts/requests-2.31.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2238 from hyperledger/dependabot/pip/demo/playground/scripts/requests-2.31.0\n\nBump requests from 2.30.0 to 2.31.0 in /demo/playground/scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de0ac254a19ac2948b1",
    "number": 2236,
    "body": "Remove outdated EFK stack and update documentation.\r\n\r\nThis is a restore for https://github.com/hyperledger/aries-cloudagent-python/pull/2216. Resetting / merging my repo branch rolled back the commits, so #2216 PR is empty.",
    "head_branch": "elk-stack-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2236 from usingtechnology/elk-stack-demo\n\nAdd updated ELK stack for demos."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de1ac254a19ac2948b2",
    "number": 2235,
    "body": "Currently, the strategy to generate the verification key IDs only supports an arbitrary set of DID methods, and the IDs are derived from hardcoded strings, which can be too restrictive for some use cases.\r\n\r\nFor example, if one adds DID methods (such as did:web) using third-party plugins, the current method will always raise an error. Also, one might want to have more advanced ways of deriving the verification key ID, for example when multiple verification methods are used for a given DID and are rotated regularly.\r\n\r\nThis PR allows for more flexibility by extracting the verification key ID generation to a separate class so that plugins can switch implementations depending on the needs using injection. For example, for the key rotation use-case cited above, the implementation could be switched to one that dynamically returns the correct verkey ID, even if different did methods are used. I believe this solution avoids breaking changes, and keeping the current strategy as the default one allows keeping backward compatibility.\r\n\r\nLet me know if you have any comments/suggestions.",
    "head_branch": "custom_default_verkey_strategy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2235 from sicpa-dlab/custom_default_verkey_strategy\n\nrefactor: Extract verification method ID generation to a separate class"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de2ac254a19ac2948b3",
    "number": 2234,
    "body": "- resolve https://github.com/bcgov/DITP/issues/23\r\n- Built on top of #2233\r\n- Allows writing of logs with `logger_alias` [tenant identifier] to a specified file, in addition to console output [same as before]\r\n- It is responsibility of the controller to ingest/consume this logs in ELK stack and then be able to query by tenant identifier.",
    "head_branch": "feat_ext_log_access",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2234 from shaangill025/feat_ext_log_access\n\nAllow Log Access at Tenant Level"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de3ac254a19ac2948b4",
    "number": 2233,
    "body": "- resolve #2209\r\n- Some changes related to getting `BaseLedger` instance from `ledger_id` won't be used right now but will be used soon with some proposed Traction features.",
    "head_branch": "per_tenant_settings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2233 from shaangill025/per_tenant_settings\n\nAllow Configuration Settings on a per-tenant basis"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de3ac254a19ac2948b5",
    "number": 2232,
    "body": "fixes #2231 \r\n\r\nThere are two ways to setup mediation for multitenancy. One is to have the base wallet mediate for all tenants, and the second is for each tenant to manage their own. In the second case, there was a bug when locating the verkey and packing the outbound message.\r\n\r\nThis PR checks if the base wallet is mediating and decides which responder to use. If the tenant is managing their own mediation then we need the sub-wallet profile to create the responder NOT the base wallet profile.",
    "head_branch": "bugfix/issue-2231",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2232 from usingtechnology/bugfix/issue-2231\n\nMulti-tenant self-managed mediation verkey lookup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de4ac254a19ac2948b6",
    "number": 2230,
    "body": "While working on load testing for [Aries Mediator Service](https://github.com/hyperledger/aries-mediator-service) I needed to spin up multiple agents and needed help to see a simple way to do so; at least not vanilla instances that I could run ad-hoc test scripts against.\r\n\r\nI required multiple single-tenant mode and a multi-tenant mode to test our mediation between multiple agents. This was a simple way to achieve it. I decided I would stand up the standard `faber`, `alice`, `acme` single-tenant agents and one multi-tenant agent.\r\n\r\nI did opt to include a Postgresql server shared across all the agents and included ngrok (easily turned off per agent) for URLs accessible outside the local network.\r\n\r\nThis was extremely helpful to diagnose and fix #2231 \r\n",
    "head_branch": "feature/playground-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2230 from usingtechnology/feature/playground-demo\n\nstand up multiple agents (single and multi) for local development and testing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de5ac254a19ac2948b7",
    "number": 2229,
    "body": null,
    "head_branch": "feature/connection_target_should_not_be_limited_to_indy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2229 from sicpa-dlab/feature/connection_target_should_not_be_limited_to_indy\n\nConnection target should not be limited only to indy dids"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de6ac254a19ac2948b8",
    "number": 2223,
    "body": "Disable the webhook emitter when cloning a multi-use connection record, as it is \"overhead\": the webhook is fired once when the multi-use invitation is created, and subsequent interactions should only fire for subsequent updates of the new (cloned, contact-specific) connection record.\r\n\r\nFixes #2217 ",
    "head_branch": "fix/multi-use-connection-webhook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2223 from esune/fix/multi-use-connection-webhook\n\nDisable webhook trigger on initial response to multi-use connection invitation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de7ac254a19ac2948b9",
    "number": 2222,
    "body": "I noticed some of the docs contain formatting errors and could do with some improved spelling/grammar. Content stays the same.\r\n\r\nList of files changed:\r\n\r\nVery minor linting improvements, such as indenting or languages added for better code block formatting:\r\n- DIDMethods.md\r\n- DIDResolutions.md\r\n- Multitenancy.md\r\n- UnitTests.md\r\n\r\nSpellchecked as well (shoutout to GPT-4):\r\n- AdminAPI.md\r\n- AnoncredsProofValidation.md\r\n- UsingOpenAPI.md\r\n\r\nThere are too many readme's to make a bunch more minor edits. Most others seem fine, but these above could do with improvement",
    "head_branch": "fix/formatting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2222 from ff137/fix/formatting\n\nFix formatting and grammatical errors in different readme's"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de8ac254a19ac2948ba",
    "number": 2221,
    "body": "Link to the Trust Over IP framework PDF was broken, now fixed. All other links confirmed working",
    "head_branch": "fix/broken-link-in-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2221 from ff137/fix/broken-link-in-readme\n\nFix broken link in README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de8ac254a19ac2948bb",
    "number": 2220,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214de9ac254a19ac2948bc",
    "number": 2219,
    "body": "Addresses issue #2215",
    "head_branch": "swcurran-jsonld-instructions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2219 from hyperledger/swcurran-jsonld-instructions\n\nUpdate Alice Wants a JSON-LD Credential to fix invocation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214deaac254a19ac2948bd",
    "number": 2216,
    "body": "The EFK stack was out of date and updating it was not as simple as changing version numbers. Decided to bring in a more robust, current and reliable stack to use for tracing demos. The main impetus for the ELK stack is for monitoring performance for the mediator service. \r\n\r\nDocumentation has been updated to reflect the removal of the EFK.\r\n\r\nHave also included examples for running the demos and the `multi-demo` with tracing events into ELK. Bumping the multi-demo postgres to 14.",
    "head_branch": "elk-stack-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214debac254a19ac2948be",
    "number": 2211,
    "body": "This would support execution on operating systems which uses a path seperator character different from '/' (e.g Windows).",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214decac254a19ac2948bf",
    "number": 2207,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "add-upgrade-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2207 from swcurran/add-upgrade-doc\n\n0.8.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dedac254a19ac2948c0",
    "number": 2206,
    "body": "The current `--preserve-exchange-records` configuration argument supports credential exchanges only. This PR introduces a new configuration for presentation exchanges and roles within those exchanges. \r\n\r\nWe want to preserve existing default behaviour: credential exchanges are removed, and presentation exchanges are stored. The credential exchanges could be saved by setting the'- preserve-exchange-records' configuration. Further override (to the issuer) specifies `auto_remove` in specific API payloads.\r\n\r\nThe default behaviour remains (credential exchanges removed, presentation exchanges stored) with addition of specifying default removal behaviour for each exchange and role. Since the API payloads use `auto_remove=True/False`, the new configurations are named `--auto-remove-*` and require a \"boolean\" value: true means remove, and false means store.\r\n\r\nTruthy values are: `yes`, `true`, `t`, `y`, and `1`.\r\nFalsey values are: `no`, `false`, `f`, `n`, and `0`.\r\n\r\nValues are not case-sensitive.\r\n\r\n**Command line Arguments**\r\n\r\n```\r\n--auto-remove-cred-exch-records-issuer <boolean value>\r\n--auto-remove-cred-exch-records-holder <boolean value>\r\n--auto-remove-pres-exch-records-verifier <boolean value>\r\n--auto-remove-pres-exch-records-prover <boolean value>\r\n```\r\n\r\n**Environment Variables**\r\n\r\n```\r\nACAPY_AUTO_REMOVE_CRED_EXCH_RECORDS_ISSUER=<true/false>\r\nACAPY_AUTO_REMOVE_CRED_EXCH_RECORDS_HOLDER=<true/false>\r\nACAPY_AUTO_REMOVE_PRES_EXCH_RECORDS_VERIFIER=<true/false>\r\nACAPY_AUTO_REMOVE_PRES_EXCH_RECORDS_PROVER=<true/false>\r\n```\r\n\r\nThe `--preserve-exhange-records` argument is deprecated but still accepted. It is equivalent to:\r\n\r\n```\r\n--auto-remove-cred-exch-records-issuer false\r\n--auto-remove-cred-exch-records-holder false\r\n```\r\n\r\nIf none of the arguments are specified (system default) is equivalent to:\r\n\r\n```\r\n--auto-remove-cred-exch-records-issuer true\r\n--auto-remove-cred-exch-records-holder true\r\n--auto-remove-pres-exch-records-verifier false\r\n--auto-remove-pres-exch-records-prover false\r\n```\r\n\r\nOnce arguments are parsed, the settings are:\r\n\r\n```\r\nsettings.get(\"auto_remove_cred_exch_records_issuer\")\r\nsettings.get(\"auto_remove_cred_exch_records_holder\")\r\nsettings.get(\"auto_remove_pres_exch_records_verifier\")\r\nsettings.get(\"auto_remove_pres_exch_records_prover\")\r\n```\r\n\r\nThese settings should **always** be `True` or `False`, not `None`.\r\n\r\n\r\n**Important**\r\n\r\nWhile testing the previous behaviour, some stray credential exchanges remained when the system was set with `auto_remove = True` and API payload with no field named `auto_remove` to override the default behaviour.  Hopefully, no systems were built to take advantage of this unintended behaviour.\r\n\r\n\r\nFixes #2126 \r\n",
    "head_branch": "issue-2126",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dedac254a19ac2948c1",
    "number": 2204,
    "body": "- resolve #2201 \r\n- Pending extensive testing with docker-test scripts\r\n\r\nIn the config, `explicit_upgrade` is the flag or key and it's value can be `critical` [meaning error and stop] or `warning` [log and proceed]. ~~With `warning`, if there are versions which are not marked as explicit and are in scope for applying the upgrade then upgrade for these versions will proceed [after that it will continue the ACA-Py start up process].~~ With warning, if there are version which are not marked as explicit and are in scope for applying the upgrade then no upgrade will be performed and version in storage not updated.\r\n\r\n```\r\n\"v0.7.2\": {\r\n    ...,\r\n    \"explicit_upgrade\": \"warning\",\r\n},\r\n\"v0.7.3\": {\r\n    ...,\r\n    \"explicit_upgrade\": \"critical\",\r\n},\r\n\"v0.7.1\": {\r\n    ...,\r\n},\r\n```",
    "head_branch": "fix_upgrade_process",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2204 from shaangill025/fix_upgrade_process\n\nAdd Explicit/Offline marking mechanism for Upgrade"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214deeac254a19ac2948c2",
    "number": 2203,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n\r\nFixes #2202 \r\n",
    "head_branch": "upgrade-081",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2203 from swcurran/upgrade-081\n\nChange upgrade definition file entry from 0.8.0 to 0.8.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214defac254a19ac2948c3",
    "number": 2200,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "add-upgrade-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2200 from swcurran/add-upgrade-doc\n\nAdd Upgrading ACA-Py document"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df0ac254a19ac2948c4",
    "number": 2198,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.8.1-rc2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2198 from swcurran/0.8.1-rc2\n\n0.8.1-rc2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df1ac254a19ac2948c5",
    "number": 2196,
    "body": "- resolve #2195 \r\n- resolve #2197 ",
    "head_branch": "fix_upgrade_process",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2196 from shaangill025/fix_upgrade_process\n\nFix: Indy WalletAlreadyOpenedError during upgrade process"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df2ac254a19ac2948c6",
    "number": 2194,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.8.1-rc1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2194 from swcurran/0.8.1-rc1\n\n0.8.1-rc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df2ac254a19ac2948c7",
    "number": 2193,
    "body": "- resolve #2192 ",
    "head_branch": "fix_upgrade_process",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2193 from shaangill025/fix_upgrade_process\n\nFix: Resolve Upgrade Config file in Container"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df3ac254a19ac2948c8",
    "number": 2191,
    "body": "This PR is a significant refactor of ACA-Py's handling of Anonymous Credentials, switching to the ledger-agnostic anoncreds-rs library instead of Indy specific libraries we've been using up until this point.\r\n\r\nThis PR is a work in progress. Given that ACA-Py has been built with Indy-isms and Indy specific libraries since the beginning, there's a lot that needed to be touched in order to move towards a more ledger-agnostic mentality. As of the time of opening this PR, it includes:\r\n\r\n- A pluggable interface for defining AnonCreds Method Plugins, enabling resolution or registration of AnonCreds objects on any ledger/network/resolvable location as long as there is a plugin that implements it.\r\n- A new set of Admin API endpoints for creating AnonCreds objects in a ledger-agnostic, plugin-friendly way\r\n- Replaced indy-shared-rs with anoncreds-rs (indy-shared-rs still getting installed but not used)\r\n- Added builtin plugins for:\r\n  - Legacy Indy (Identifiers not using did:indy urls)\r\n    - Supports registering and resolving Schemas and Credential Definitions; revocation objects are WIP\r\n  - did:indy - Currently just stubbed out\r\n  - did:web - Currently just stubbed out\r\n- A simple demo script (to be removed and replaced with proper Integration tests) demoing issuance and verification (without revocation currently) on Legacy Indy.\r\n  - This can be run with `docker-compose run tests && docker-compose down -v`\r\n\r\nWe are actively working on:\r\n- Implementing revocation support through the new AnonCreds interface\r\n\r\nThings that are very broken right now:\r\n- The old `/schemas` and `/credential-definitions` endpoints\r\n- Revocation\r\n- Endorsement",
    "head_branch": "feature/anoncreds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df4ac254a19ac2948c9",
    "number": 2190,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.8.1-rc0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2190 from swcurran/0.8.1-rc0\n\n0.8.1-rc0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df5ac254a19ac2948ca",
    "number": 2189,
    "body": "Update to the plug-in docs\r\n\r\nA couple of docker scripts for running aca-py and a postgres database\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2189 from ianco/master\n\nDoc update and some test scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df6ac254a19ac2948cb",
    "number": 2187,
    "body": "Disabled two tests related to this issue. Not sure on the resolution in the future. \r\nhttps://github.com/hyperledger/aries-cloudagent-python/issues/2072#issuecomment-1489279654\r\n\r\nUpdating two other dependencies resolved the other issues. See successful test run in my fork.\r\nhttps://github.com/Jsyro/aries-cloudagent-python/actions/runs/4568725894/jobs/8064139393",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2187 from Jsyro/main\n\n3.7 and 3.10 unittests fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df7ac254a19ac2948cc",
    "number": 2186,
    "body": "Disabled two tests related to this issue. \r\nhttps://github.com/hyperledger/aries-cloudagent-python/issues/2072#issuecomment-1489279654\r\n\r\nUpdating two other dependencies resolved the other issues. See successful test run in my fork. \r\nhttps://github.com/Jsyro/aries-cloudagent-python/actions/runs/4557801364/jobs/8039909221\r\n\r\nThere are still issues with Python 3.7.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df8ac254a19ac2948cd",
    "number": 2185,
    "body": "- resolve #2181 ",
    "head_branch": "fix_upgrade_process",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2185 from shaangill025/fix_upgrade_process\n\nUpdate and automate ACA-Py upgrade process"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df8ac254a19ac2948ce",
    "number": 2184,
    "body": null,
    "head_branch": "swcurran-integration-tests-video",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2184 from hyperledger/swcurran-integration-tests-video\n\nAdd link to recorded session about the ACA-Py Integration tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214df9ac254a19ac2948cf",
    "number": 2183,
    "body": "Adds a document about unit testing to the set of technical documents in ACA-Py.",
    "head_branch": "swcurran-unit-testing-doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2183 from hyperledger/swcurran-unit-testing-doc\n\nCreate UnitTests.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dfaac254a19ac2948d0",
    "number": 2180,
    "body": null,
    "head_branch": "fixes/upgrade",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dfbac254a19ac2948d1",
    "number": 2179,
    "body": "@andrewwhitehead -- can you please test the packaging of this to verify that the next release that goes to PyPi will include the added [YML File](https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/commands/default_version_upgrade_config.yml).\r\n\r\n@ianco -- I don't think you need to do anything on this.\r\n\r\nAddresses issue #2178 ",
    "head_branch": "swcurran-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2179 from hyperledger/swcurran-patch-1\n\nAdds the upgrade command YML file to the PyPi Release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dfcac254a19ac2948d2",
    "number": 2175,
    "body": "This fixes test cases where the JSON-LD context was being downloaded erroneously, and probably speeds up the tests. The following tests failed previously while the BBS security context was unavailable.\r\n\r\n```FAILED aries_cloudagent/protocols/present_proof/dif/tests/test_pres_exch_handler.py::TestPresExchHandler::test_limit_disclosure_required_check\r\nFAILED aries_cloudagent/protocols/present_proof/dif/tests/test_pres_exch_handler.py::TestPresExchHandler::test_create_vc_record_with_graph_struct\r\nFAILED aries_cloudagent/protocols/present_proof/dif/tests/test_pres_exch_handler.py::TestPresExchHandler::test_derive_cred_missing_credsubjectid\r\nFAILED aries_cloudagent/protocols/present_proof/dif/tests/test_pres_exch_handler.py::TestPresExchHandler::test_derive_cred_credsubjectid\r\nFAILED aries_cloudagent/protocols/present_proof/dif/tests/test_pres_exch_handler.py::TestPresExchHandler::test_derive_nested_cred_missing_credsubjectid_a\r\nFAILED aries_cloudagent/protocols/present_proof/dif/tests/test_pres_exch_handler.py::TestPresExchHandler::test_derive_nested_cred_missing_credsubjectid_b\r\nFAILED aries_cloudagent/protocols/present_proof/dif/tests/test_pres_exch_handler.py::TestPresExchHandler::test_derive_nested_cred_credsubjectid\r\nFAILED aries_cloudagent/protocols/present_proof/v2_0/formats/dif/tests/test_handler.py::TestDIFFormatHandler::test_verify_received_pres_a\r\nFAILED aries_cloudagent/protocols/present_proof/v2_0/formats/dif/tests/test_handler.py::TestDIFFormatHandler::test_verify_received_pres_b\r\nFAILED aries_cloudagent/protocols/present_proof/v2_0/formats/dif/tests/test_handler.py::TestDIFFormatHandler::test_verify_received_pres_c\r\nFAILED aries_cloudagent/protocols/present_proof/v2_0/formats/dif/tests/test_handler.py::TestDIFFormatHandler::test_verify_received_pres_limit_disclosure_fail_a\r\nFAILED aries_cloudagent/protocols/present_proof/v2_0/formats/dif/tests/test_handler.py::TestDIFFormatHandler::test_verify_received_pres_limit_disclosure_fail_b\r\nFAILED aries_cloudagent/protocols/present_proof/v2_0/formats/dif/tests/test_handler.py::TestDIFFormatHandler::test_verify_received_pres_no_match_a\r\nFAILED aries_cloudagent/protocols/present_proof/v2_0/formats/dif/tests/test_handler.py::TestDIFFormatHandler::test_verify_received_pres_no_match_b\r\nFAILED aries_cloudagent/protocols/present_proof/v2_0/formats/dif/tests/test_handler.py::TestDIFFormatHandler::test_verify_received_pres_sequence\r\n```",
    "head_branch": "fix/json-expand-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2175 from andrewwhitehead/fix/json-expand-context\n\nPass document loader to jsonld.expand"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dfdac254a19ac2948d3",
    "number": 2174,
    "body": null,
    "head_branch": "peer_did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dfdac254a19ac2948d4",
    "number": 2173,
    "body": "Added support for the JsonWebKey2020 OKP keys for connection invitations.\r\nTo avoid extensive refactoring this is done by converting it to the supported base58 format.\r\n\r\nPlease, give feedback.",
    "head_branch": "connection_invitation_support_jwk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2173 from sicpa-dlab/connection_invitation_support_jwk\n\nAdd support for JsonWebKey2020 for the connection invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dfeac254a19ac2948d5",
    "number": 2170,
    "body": "This will enable queues to annotate outbound messages with relevant context for things like dead letter queues that know which wallet sent the message that failed, what message was being sent, etc.\r\n\r\nThis is a breaking change for plugins adding queue implementations (cc @shaangill025) but we think this is worthwhile for the ability to improve internal error handling.",
    "head_branch": "feature/outbound-context-in-queues",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2170 from sicpa-dlab/feature/outbound-context-in-queues\n\nBREAKING: feat: get queued outbound message in transport handle message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214dffac254a19ac2948d6",
    "number": 2169,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.8.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2169 from swcurran/0.8.0\n\n0.8.0 release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e00ac254a19ac2948d7",
    "number": 2166,
    "body": "Addresses issue #2152 (https://indicio.atlassian.net/browse/ACAP-1004)\r\n\r\nI did not include an environment variable, as GitHub seems to throw up its hands when you put it in the workflow file. There seems to be a workaround if you put the variable in .env, but I'm not sure if we want that though...",
    "head_branch": "fix/nightly-runs-on-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2166 from anwalker293/fix/nightly-runs-on-main\n\nfix: run only on main, forks ok"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e01ac254a19ac2948d8",
    "number": 2165,
    "body": "Changes the nightly runs to only run on main, including on forked versions of this repo.\r\n\r\nEvery time I tried to put an environment variable within the workflow and referenced it, GitHub didn't seem to like this. (I think there's a work around, *but* you would need this to be in the .env file, which we might not want.) Although, by default, actions are disabled when you fork a repo, so I think this should be okay. (It doesn't seem that bad to just make this if statement false manually?) \r\n\r\nLet me know if there's any fixes you would like me to make to this!\r\n\r\nRe: Issue #2152 (https://github.com/hyperledger/aries-cloudagent-python/issues/2152)",
    "head_branch": "fix/nightly-fix-forks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e02ac254a19ac2948d9",
    "number": 2163,
    "body": null,
    "head_branch": "swcurran-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2163 from hyperledger/swcurran-patch-1\n\nRemove CircleCI Status since we aren't using CircleCI anymore"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e03ac254a19ac2948da",
    "number": 2155,
    "body": "Fixing a minor inconvenience where `AskarWallet` error message always displays `Unknown DID: null` when DID is not found in wallet.",
    "head_branch": "fix/askar-exception-message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2155 from sicpa-dlab/fix/askar-exception-message\n\nfix: askar exception message always displaying null DID"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e03ac254a19ac2948db",
    "number": 2151,
    "body": "- Fixes issue with performance demo [no revocation], where number of issued credentials stops incrementing when received credentials reaches 100% and the demo would eventually timeout.",
    "head_branch": "perf_demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2151 from shaangill025/perf_demo\n\nFix: Performance Demo [no --revocation]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e04ac254a19ac2948dc",
    "number": 2150,
    "body": "Creating this PR to add an endpoint to generate problem-report for out of band protocol on the basis of ConnectionId. Looking for the feedback from the community.\r\n-Signed off by: ramreddychalla94 [ram.challa@ontario.ca](mailto:ram.challa@ontario.ca)\r\n-Funded by the Ontario Government\r\n\r\nThis PR resolves https://github.com/hyperledger/aries-cloudagent-python/issues/2101 @swcurran please review and let us know of your comments, thanks.",
    "head_branch": "oob-problem-report",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e05ac254a19ac2948dd",
    "number": 2149,
    "body": "Addresses issue #2146\r\n\r\nSigned-off-by: Stephen Curran <swcurran@gmail.com>\r\n\r\nSigned-off-by: Stephen Curran <swcurran@cloudcompass.ca>",
    "head_branch": "swcurran-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2149 from hyperledger/swcurran-patch-1\n\n[fix] Removes extra comma that prevents swagger from accepting the presentation request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e06ac254a19ac2948de",
    "number": 2148,
    "body": "- resolve #1756 \r\n- closed original PR#2114 due to issue with rebasing, copied over change here.",
    "head_branch": "feat_present_proof_2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2148 from shaangill025/feat_present_proof_2.1\n\nFeat: Multiple Presentations [v2.1]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214e07ac254a19ac2948df",
    "number": 2147,
    "body": "- resolve #2111\r\n\r\nPerformance Demo Analysis [No dropoff]\r\n| branch | test config    | time taken |\r\n|---------|--------------------------------------|-----------|\r\n| This PR | 10000 credentials with revocation    | 1107.09 s, 1078.85 s |\r\n| Main    | 10000 credentials with revocation    | 1089.77 s, 1075.61 s |\r\n| This PR | 10000 credentials without revocation | 1035.22 s |\r\n| Main    | 10000 credentials without revocation | 1042.04 s |",
    "head_branch": "issue_2111",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2147 from shaangill025/issue_2111\n\nFix: messages stuck in mediator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e08ac254a19ac2948e0",
    "number": 2145,
    "body": "Related PR #1941  \r\nAddresses Issue #2136 \r\n\r\nPresentation Exchange now has dedicated webhook object.\r\n\r\nadded --debug-webhooks flag to toggle full Protocol State Object for development purpose.\r\n\r\nremoved --light-weight-webhook as it is now obsolete and refactored.\r\n\r\nSigned-off-by: Victor Lee [victorlee0505@gmail.com](mailto:victorlee0505@gmail.com)",
    "head_branch": "vlee/terse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2145 from victorlee0505/vlee/terse\n\nUpdate webhook message to terse form by default, added startup flag --debug-webhooks for full form"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e09ac254a19ac2948e1",
    "number": 2144,
    "body": "In the continuity of the work with non-indy DIDs: remove the restriction for did:sov when marking a DID as public **at the wallet level**.\r\n\r\nThese wallet implementations don't include any indy-related logic. All the logic and restrictions are done in the `wallet/set-public-did` route.\r\n\r\nThis change allows using the wallet to mark DIDs from other methods as being public as opposed to having to re-implement all the logic in an ad-hoc plugin.",
    "head_branch": "feature/allow-non-sov-publication",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2144 from sicpa-dlab/feature/allow-non-sov-publication\n\nfeat: allow marking non-SOV DIDs as public"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e0aac254a19ac2948e2",
    "number": 2142,
    "body": null,
    "head_branch": "main",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2142 from hyperledger/main\n\nSync issue_cred_pres_proof_2.1 feature branch with main"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214e0aac254a19ac2948e3",
    "number": 2138,
    "body": "https://github.com/hyperledger/aries-cloudagent-python/issues/2108\r\n",
    "head_branch": "plugin-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2138 from ianco/plugin-docs\n\nInitial plugin docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e0bac254a19ac2948e4",
    "number": 2137,
    "body": "Code \"solution\" for the acme workshop",
    "head_branch": "acme_workshop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2137 from ianco/acme_workshop\n\nAcme workshop"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e0cac254a19ac2948e5",
    "number": 2135,
    "body": "Accommodate credential sending for did methods that are not `did:sov` or `did:key` by adding an optional `verification_method` parameter to the send endpoint options.\r\n\r\nCurrently, verification method is derived \"automatically\" for did:sov and did:key, raising error for any other DID method.\r\n\r\nThe parameter is optional and stored along the credential exchange for recall when issuing the credential.",
    "head_branch": "feature/provide-verification-method-send-endpoint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2135 from sicpa-dlab/feature/provide-verification-method-send-endpoint\n\nfeat: add verification method issue-credentials-2.0/send endpoint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e0dac254a19ac2948e6",
    "number": 2134,
    "body": "Accomodate credential sending for did methods that are not did:sov or did:key by adding an optional `verification_method` parameter to the send endpoint options.",
    "head_branch": "feature/provide-verification-method-send-endpoint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e0eac254a19ac2948e7",
    "number": 2133,
    "body": "Add a return schema to `delete_tails` in order to get a valid openapi specification.",
    "head_branch": "fix/delete-tails-return-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2133 from sicpa-dlab/fix/delete-tails-return-schema\n\nfix: response type on delete-tails-files endpoint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e0fac254a19ac2948e8",
    "number": 2130,
    "body": "- and separate aca-py and indy version labels.\r\n\r\nThe Python 3.9 versions of both the Standard and Indy variants of the images have been smoke tested on OpenShift to ensure basic functionality.  The Indy variant was smoke tested with both Indy and Askar wallets, and the Standard variant was smoke tested with an Askar wallet.\r\n\r\nThe images, version `0.8.0-rc0`, can be previewed here; https://github.com/WadeBarnes/aries-cloudagent-python/pkgs/container/aries-cloudagent-python",
    "head_branch": "fix/image-builds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2130 from WadeBarnes/fix/image-builds\n\nUpdate ACA-Py docker files to produce OpenShift compatible images"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e0fac254a19ac2948e9",
    "number": 2127,
    "body": "Noticed when generating some Typescript types that the top level OpenAPI spec (Swagger 2.0 is the version) has some quick validation errors to fix. Checked against [editor.swagger.io](https://editor.swagger.io/) or other tools to call https://validator.swagger.io/\r\n\r\n(I'm not actually using this openAPI json for generation, using the actual generated Swagger spec from a acapy + plugins deployment, but came across this while looking)\r\n\r\n![image](https://user-images.githubusercontent.com/17445138/219472523-97c156d6-e91d-4222-a043-6d88bcf3eb02.png)\r\n\r\n\r\n* **should have required property 'url'**\r\nThere is a externalDocs reference in /resolver that lacks a URL.\r\nI'm not really sure about the resolver functionality so correct me if I'm wrong about using the following URL...\r\nhttps://github.com/hyperledger/aries-rfcs/tree/fa4b1947c6077168d2c69f45ed6bee2bb1eae4c8/features/0124-did-resolution-protocol\r\n\r\n* **should NOT have additional properties** (description)\r\nA couple of the parameters have descriptions in the param, then an additional description in the `items` array, which is not supported by the spec.\r\nRemoved those, as they are unsupported, and seem redundant with the parameter description as well?\r\n",
    "head_branch": "bugfix/openApiValidation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2127 from loneil/bugfix/openApiValidation\n\nOpenAPI validation fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e10ac254a19ac2948ea",
    "number": 2125,
    "body": "- Temporarily disable multi-architecture image builds until the required dependencies publish compatible packages.\r\n- Details here; https://github.com/hyperledger/aries-cloudagent-python/issues/2124\r\n\r\n- Add support for defining the image platforms when running the image publishing workflows manually.\r\n- Add support for building off a git ref when running the image publishing workflows manually.",
    "head_branch": "fix/image-builds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2125 from WadeBarnes/fix/image-builds\n\nTemporarily disable multi-architecture image builds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e11ac254a19ac2948eb",
    "number": 2123,
    "body": "- Ensure the final images install ACA-py from the wheel rather than from PyPI.\r\n- Resolves #2121 ",
    "head_branch": "fix/image-builds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2123 from WadeBarnes/fix/image-builds\n\nFix ACA-py image builds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e12ac254a19ac2948ec",
    "number": 2122,
    "body": null,
    "head_branch": "demo-instruction-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2122 from swcurran/demo-instruction-updates\n\nUpdate some of the demo Readme and Endorser instructions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e13ac254a19ac2948ed",
    "number": 2120,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\n@swcurran / @shaangill025  this adds an option to the demo (\"1m\") to issue multiple creds, in either indy or json-ld format.\r\n\r\nIt includes all creds in one offer, rather than the verbose request/response protocol.\r\n\r\nLet me know if there are other additions to the demo you would like.\r\n\r\n(There is also a new integration test - it doesn't work yet but @swcurran said last week to not worry about integration tests yet ...)\r\n",
    "head_branch": "issue_cred_pres_proof_2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2120 from ianco/issue_cred_pres_proof_2.1\n\nUpdate demo to issue multiple credentials"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e14ac254a19ac2948ee",
    "number": 2117,
    "body": "- Trigger when releases and prereleases are published.\r\n\r\nSigned-off-by: Wade Barnes <wade@neoterictech.ca>",
    "head_branch": "fix/publish",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2117 from WadeBarnes/fix/publish\n\nFix publish workflows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e14ac254a19ac2948ef",
    "number": 2116,
    "body": "Multiuse invitation performance degrades over time. By adding state into the tag names, performance doesn't degrade over time while using multi-use invitations.\r\n\r\nThis breaks backwards compatibility, but while load testing it can be seen that performance no longer degrades when using a multi-use invitation. Previously, only 1600 connections could be established while load testing, and on a second run is reduced to 300. After the modification, the load testing exceeded 2400 connections and the testing client machine ran out of ram for clients.\r\n\r\nThis shows a clear improvement in performance.",
    "head_branch": "feature/fix_record_loading_size",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2116 from Indicio-tech/feature/fix_record_loading_size\n\nFix multi-use invitation performance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e15ac254a19ac2948f0",
    "number": 2115,
    "body": "Updates necessary to create a 0.8.0-rc0 release. For this release, the CHANGELOG.md has been update to move the categorized list of Pull Requests from the \"0.1.0-rc1\" to under this release, and then the PRs since 1.0.0-rc1 were added.\r\n\r\nMy proposal is that after we release 0.8.0 (final), we follow up with a 0.1.0-rc2 release that is the same as 0.8.0 so that those tracking to the 1.0.0 release can use that. As needed, we can do the same for 0.8.1 / 0.9.0 if needed, but ideally we will get 1.0.0 out the door before those are needed.\r\n\r\n@WadeBarnes @ianco @dbluhm -- does that make sense?\r\n\r\nAlso, please review the note I put into the changelog about the container images (do we have link to put into that paragraph), and if what I state is accurate.\r\n",
    "head_branch": "0.8.0-rc0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2115 from swcurran/0.8.0-rc0\n\n0.8.0-rc0 release updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e16ac254a19ac2948f1",
    "number": 2114,
    "body": null,
    "head_branch": "present_proof_2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e17ac254a19ac2948f2",
    "number": 2112,
    "body": "Fix a small inconsistency between the openapi schema and the actual return value for the `/resolver/resolve/{did}`.\r\n\r\nThis PR aligns the schema to the actual return value to avoid breaking any current implementation making use of the endpoint.\r\n\r\nSigned-off-by: Clément Humbert <clement.humbert@sicpa.com>",
    "head_branch": "fix/resolver-return-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2112 from sicpa-dlab/fix/resolver-return-schema\n\nfix: resolver api schema inconsistency"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e18ac254a19ac2948f3",
    "number": 2110,
    "body": "Creating this PR to add an endpoint to add security layer to the webhook calls. This is done by using a hmac signature created on the basis of secret key provided by the controller and the webhook payload. Looking for the feedback from the community.\r\n-Signed off by: ramreddychalla94 [ram.challa@ontario.ca](mailto:ram.challa@ontario.ca)\r\n-Funded by the Ontario Government\r\n\r\nThis PR resolves Additional security controls for webhooks for multi-tenancy #2029 @swcurran please review and let us know of your comments, thanks.\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e19ac254a19ac2948f4",
    "number": 2109,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nPer comments in https://github.com/hyperledger/aries-cloudagent-python/pull/2105",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2109 from ianco/master\n\nUpdate dockerfiles to use python 3.9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e1aac254a19ac2948f5",
    "number": 2105,
    "body": "Creating this PR to update the base docker images from `slim-buster` to `slim-bullseye` version as the slim-buster image is reported to have known vulnerabilities identified by scanning tools like Snyk and Qualys. This relates to #2087 where this is discussed.\r\n\r\nSigned-off-by: pradeepp88 <pradeep.prakasam@ontario.ca>",
    "head_branch": "feature/updating-base-images",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2105 from pradeepp88/feature/updating-base-images\n\nUpdating base images from slim-buster to slim-bullseye"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e1bac254a19ac2948f6",
    "number": 2103,
    "body": "Creating this PR to add an endpoint to delete the tails file based on cred_def_id or rev_reg_id under revocation protocol. This is done to clean up the local tails file after uploading it to tails server. Looking for the feedback from the community.\r\n-Signed off by: ramreddychalla94 <ram.challa@ontario.ca>\r\n-Funded by the Ontario Government\r\n",
    "head_branch": "delete-tail-files",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2103 from ramreddychalla94/delete-tail-files\n\nDelete tail files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e1cac254a19ac2948f7",
    "number": 2099,
    "body": "This is an interesting bug that occurs under load in aca-py. It appears that on receive connection for a multi-use invitation, that we copy the object. The problem is for a short time the original search that takes places to find the multi-use invitation matches both the original and the copy. If this occurs, Aca-Py throws an un-caught error indicating that two connections records for the invitation were found. By setting Request on the clone object, this condition is avoided.\r\n\r\nSigned-off-by: Kim Ebert <kim@indicio.tech>",
    "head_branch": "fix/connection_timing_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2099 from Indicio-tech/fix/connection_timing_fix\n\nfix: fix connection timing bug"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e1cac254a19ac2948f8",
    "number": 2097,
    "body": "When using the debug flags for auto responding to presentation messages, it's possible for the auto-verify-presentation flag not to properly take effect if starting from a presentation proposal and not taking any action in the Admin API (each step is advanced to automatically by the debug flags). This PR corrects this so that a presentation exchange can be executed from start to finish without Admin API input.\r\n\r\nAlso, this PR fixes reply behavior on the presentation ack message. The BaseResponder (a DispatcherResponder instance) is passed into the request handler but not passed to the presentation manager methods that resulted in a presentation ack message. Instead, the manager was retrieving the responder from the context, which would be an AdminResponder instance that lacks the context of the inbound message. This causes return routes to not be respected. This PR corrects this by passing the DispatcherResponder to the manager methods when available. Otherwise, the AdminResponder will be used as before.",
    "head_branch": "fix/respect-auto-verify-pres-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2097 from dbluhm/fix/respect-auto-verify-pres-v2\n\nRespect `auto-verify-presentation` flag in present proof v1 and v2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e1dac254a19ac2948f9",
    "number": 2095,
    "body": "Context: we want to allow aca-py instances to connect to privately run universal resolvers such as the one from godiddy. This requires authentication.\r\n\r\n* Add `--universal-resolver-bearer-token` to allow authentication against privately run universal resolvers.\r\n\r\nBREAKING CHANGE:\r\nConfigured url should now include the `/1.0` suffix. The default url reflects that changes.\r\n* This is to have a more flexible configuration of the universal resolver's api route (required in the case of godiddy).\r\n* The alternative would be to make the suffix configurable too. I just found it a bit fiddly both in code and configuration. Let me know if the breaking change in configuration is not acceptable.\r\n\r\nSigned-off-by: Clément Humbert <clement.humbert@sicpa.com>",
    "head_branch": "feature/universal-resolver-bearer-token",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2095 from sicpa-dlab/feature/universal-resolver-bearer-token\n\nfeat: universal resolver - configurable authentication"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e1eac254a19ac2948fa",
    "number": 2094,
    "body": "Signed-off-by: ram.challa <ram.challa@ontario.ca>",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e1fac254a19ac2948fb",
    "number": 2091,
    "body": "This will allow using scripts like this:\r\n\r\n```bash\r\n#!/usr/bin/env bash\r\n\r\n# Uncomment for debugging\r\n# set -o xtrace\r\n\r\nset -eo pipefail  # Exit the script if any statement returns error.\r\n\r\nSCRIPT_DIR=\"$( dirname \"$(readlink -f \"$0\")\" )\"\r\n\r\nexport CONTAINER_NAME=\"aries_issuer\"\r\nexport NETWORK_NAME=\"aries-mediator-service_mediator-network\"\r\nexport PORTS=\"8002 11002\"\r\nexport ARG_FILE=\"${SCRIPT_DIR}/cfg_issuer.yml\"\r\n\r\n../aries-cloudagent-python/scripts/run_docker start\r\n```\r\n\r\nI find working with yaml files easier/faster than very, very long command line when testing and debugging (because I can simply comment out some configs and uncomment others at the same time).",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2091 from matrixik/patch-3\n\nAllow using YAML configuration file with run_docker"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e20ac254a19ac2948fc",
    "number": 2090,
    "body": "Signed-off-by: ram.challa <ram.challa@ontario.ca>",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e21ac254a19ac2948fd",
    "number": 2089,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2089 from ianco/master\n\nMultitenancy demo (docker-compose with postgres and ngrok)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e22ac254a19ac2948fe",
    "number": 2088,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>\r\n\r\n- ~~Ran `black` code formatter with version `23.1.0` to pass the check, all file changes outside `./aries_cloudagent/protocols/issue_credential/v2_0` directory and `aries_cloudagent/config/argparse.py` [22 files] were triggered by this. A special case [collision between flake8 and black 23.1.0] needed to be handled in `aries_cloudagent/ledger/indy.py`.~~\r\n- resolves #1979\r\n- pending final Admin API testing and addition of integration tests [I can maybe leave this for a separate PR (combine tests for both issue-cred and present-proof 2.1)]",
    "head_branch": "issue_cred_2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2088 from shaangill025/issue_cred_2.1\n\nFeat: Multiple Credential Issuance [v2.1]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214e23ac254a19ac2948ff",
    "number": 2086,
    "body": "As a follow-up to the changes in the creation endpoint (#2067), relax return schema to include any did method.\r\n\r\nWithout this change, clients based on the openapi spec cannot accept the response payload for did methods other than \"sov\" and \"key\".\r\n\r\nSigned-off-by: Clément Humbert <clement.humbert@sicpa.com>",
    "head_branch": "fix/did-creation-return-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2086 from sicpa-dlab/fix/did-creation-return-schema\n\nfix: create local DID return schema"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e24ac254a19ac294900",
    "number": 2079,
    "body": "This PR adds a doc site (built with Docusaurus) to ACA-Py. RTD files have been moved into a subfolder of `docs` and Sphinx-generated `.rst` files are converted to markdown to be included in docs.",
    "head_branch": "documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e25ac254a19ac294901",
    "number": 2078,
    "body": null,
    "head_branch": "documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e26ac254a19ac294902",
    "number": 2077,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2077 from johnekent/main\n\nIssue #2068 boolean flag change"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e26ac254a19ac294903",
    "number": 2076,
    "body": "This PR is a reopening of #1888 and still contains some of the issues discussed on that PR. If someone wants to tackle some of those issues (whether actually using this branch or just taking inspiration -- either way is fine with me!), I'd be happy to see this fixed up and working.\r\n\r\ncc @WadeBarnes @swcurran ",
    "head_branch": "feature/standalone-docker",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2076 from dbluhm/feature/standalone-docker\n\nDocker images and GHA for publishing images"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e27ac254a19ac294904",
    "number": 2075,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nTweaked the mediation code in the alice/faber demo (wasn't working properly).\r\n\r\nWorking with the fix from @usingtechnology  in PR # 2232\r\n",
    "head_branch": "multitenant-mediator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2075 from ianco/multitenant-mediator\n\nFix multitenant/mediation in demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e28ac254a19ac294905",
    "number": 2071,
    "body": "We ran into the issue that our generated client would throw an exception whenever a CredExRecord was deleted. The reason was the record's state parameter being set to \"deleted\" - a value which is not in the set of allowed values as per the swagger definition.\r\n\r\nChanges:\r\n- `STATE_DELETED` attribute added to BaseRecord\r\n- added a function which lists the values of all attributes that start with a common prefix (e.g. `\"STATE_\"`), optionally including inherited attributes. The resulting list can be used for validation.\r\n\r\nI took the occasion to clean up validation a bit (conn-, cred_ex- and pres_ex_records) and add it where it was missing (OobRecord).",
    "head_branch": "record-attribute-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2071 from rmnre/record-attribute-validation\n\nImproved validation of record attributes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e29ac254a19ac294906",
    "number": 2067,
    "body": "Here're a couple of changes leveraging the recent addition of the `DIDMethods` registry.\r\nThe aim is to allow agents using DID methods defined in plugin to create DIDs without implementing method-specific endpoints if not necessary.\r\n\r\nChanges:\r\n   * Relax condition on did format for the `POST /wallet/did` endpoint\r\n   * Validate new DIDs parameters using `DIDMethods` in Askar and InMemory profiles\r\n      validate new DIDs parameters\r\n   * Factorize some validation code\r\n\r\nNotes:\r\n   * A lot of tests are impacted by the change, if anybody has a suggestion for a quick solution to avoid that...\r\n   * It would be nice to implement the DID derivation in each `DIDMethod` but this would require quite some work to be able to remove the did:sov and did:key initialization hardcoded in `DIDMethods`.\r\n\r\nSigned-off-by: Clément Humbert <clement.humbert@sicpa.com>",
    "head_branch": "feature/create-all-registered-dids",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2067 from sicpa-dlab/feature/create-all-registered-dids\n\nfeat: enable creation of DIDs for all registered methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e2aac254a19ac294907",
    "number": 2066,
    "body": null,
    "head_branch": "action-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2066 from andrewwhitehead/action-updates\n\nUpdate github actions dependencies (for node16 support)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e2bac254a19ac294908",
    "number": 2061,
    "body": "added an endpoint to delete tails file on the basis of either cred_def_id or rev_reg_id",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e2cac254a19ac294909",
    "number": 2060,
    "body": "Also cleans up some field validation code, and fixes a unit test that wasn't testing the right thing (service entry validation).",
    "head_branch": "fix/accept-unknown-hsproto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2060 from andrewwhitehead/fix/accept-unknown-hsproto\n\nDo not reject OOB invitation with unknown handshake protocol(s)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e2cac254a19ac29490a",
    "number": 2059,
    "body": "This will help unblock efforts to move off of python 3.6.",
    "head_branch": "ci/test-more-python",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2059 from dbluhm/ci/test-more-python\n\nci: test additional versions of python nightly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e2dac254a19ac29490b",
    "number": 2058,
    "body": "This PR adds GitHub Actions for testing PRs. This is pulled from work on #1888. These tests are ready for easy use with other python versions, when we get to that point.",
    "head_branch": "feature/pr-tests-gha",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2058 from dbluhm/feature/pr-tests-gha\n\nci: add gha for pr-tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e2eac254a19ac29490c",
    "number": 2055,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAdditional tests for multi-credential proofs with a mix of revocable and non-revocable credentials\r\n\r\nThese tests pass:\r\n- @T003-RFC0454.1 - two credentials, one revocable one not, neither revoked, \"non_revoked\" is requested at the attribute level\r\n- @T003-RFC0454.2 - two credentials, one revocable one not, one revoked, proof checks for revocation (attribute level) and fails\r\n- @T003-RFC0454.3 - two credentials, one revocable one not, one revoked, proof *doesn't* check for revocation (attribute level) and passes\r\n\r\nThis test \"fails\" - the proof doesn't verify even though it should:\r\n- @T003-RFC0454.1f - two credentials, one revocable one not, neither revoked, \"non_revoked\" is requested at the*request* level\r\n\r\nFor the failing scenario, it fails with indy-sdk and credx.  I believe  the underlying library is not creating the proof properly, and/or the underlying anoncreds itself has a bug.\r\n",
    "head_branch": "revocation_int_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2055 from ianco/revocation_int_tests\n\nAdditional integration tests for revocation scenarios"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e2fac254a19ac29490d",
    "number": 2054,
    "body": "Fix python-indy version restrictions format.\r\n\r\nPrevious format was breaking for poetry-based builds: `Invalid constraint (python3-indy (>=1.11.1<2) ; extra == 'indy') found in aries-cloudagent-1.0.0rc1 dependencies, skipping`\r\n\r\nVersion restrictions are supposed to be conformant to: https://peps.python.org/pep-0440/#version-specifiers\r\n\r\nSigned-off-by: Clément Humbert <clement.humbert@sicpa.com>",
    "head_branch": "fix/dependencies-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2054 from sicpa-dlab/fix/dependencies-format\n\nfix: indy dependency version format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e30ac254a19ac29490e",
    "number": 2053,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nIssue https://github.com/hyperledger/aries-cloudagent-python/issues/2052\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2053 from ianco/master\n\nCode formatting"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e31ac254a19ac29490f",
    "number": 2051,
    "body": "Signed-off-by: Dobrosław Żybort <dobroslaw.zybort@fujitsu.com>",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2051 from matrixik/patch-2\n\nAdd missing --mediator-connections-invite cmd arg info to docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e31ac254a19ac294910",
    "number": 2046,
    "body": "cc @swcurran @ianco \r\n\r\nThe demo AliceWantsAJsonCredential.md has invalid Admin API endpoints documented.\r\n\r\nSigned-off-by: Jean-Francois Blier <101359928+jfblier-amplitude@users.noreply.github.com>",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2046 from jfblier-amplitude/main\n\n#2041 - Issue JSON-LD has invalid Admin API documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e32ac254a19ac294911",
    "number": 2045,
    "body": "\"How to Issue JSON-LD Credentials using Aca-py\" has invalid Admin API endpoint documentation.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e33ac254a19ac294912",
    "number": 2037,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e34ac254a19ac294913",
    "number": 2034,
    "body": "This PR adjusts the functionality of invitations created with Public DIDs.\r\nSpecifically, it does the following:\r\n- allows for multi-use invitations to be created with a Public DID\r\n- allows for an agent to create an invitation with metadata when using a Public DID\r\n- adds a new flag governing behavior of an agent with a Public DID: `--requests-through-public-did`\r\n    - This flag handles a slightly odd edge case. Prior to this PR, if Alice has `--public-invites` and `--auto-accept`, Bob could make an unsolicited connection request against Alice’s Public DId, which is to say, Bob is not responding to an explicit invitation that Alice has created. In that scenario, Alice would automatically accept that request. \r\n    - This flag separates that behavior from the `—public-invites` flag. `--public-invites` still allows for invitations to be created with a Public DID, but unless `--requests-through-public-did` is set, those unsolicited connection requests will be ignored.\r\n\r\nThanks to @dbluhm for additional conceptual design and help debugging :) ",
    "head_branch": "feat/public-did-multi-use",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2034 from Indicio-tech/feat/public-did-multi-use\n\nBREAKING: Allow multi-use public invites and public invites with metadata"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e35ac254a19ac294914",
    "number": 2033,
    "body": "Signed-off-by: Łukasz Przytuła <lprzytula@gmail.com>\r\n\r\nAllow proof negotiation by providing an updated proof request to `/present-proof/records/{pres_ex_id}/send-request` endpoint (if no proof request will be passed in body, it will be created according to the presentation proposal)",
    "head_branch": "feature/proof-negotiation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e36ac254a19ac294915",
    "number": 2031,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n\r\nSigned-off-by: Stephen Curran <swcurran@cloudcompass.ca>\r\n\r\nSigned-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "swcurran-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2031 from hyperledger/swcurran-patch-1\n\nfix: Correct typo in model -- required spelled incorrectly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e37ac254a19ac294916",
    "number": 2030,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nIssue https://github.com/hyperledger/aries-cloudagent-python/issues/2002\r\n",
    "head_branch": "multi-issues-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2030 from ianco/multi-issues-2\n\nSpecial handling for the write ledger"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e37ac254a19ac294917",
    "number": 2026,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAddresses issue https://github.com/hyperledger/aries-cloudagent-python/issues/2014\r\n",
    "head_branch": "json-demo-doc-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2026 from ianco/json-demo-doc-updates\n\nDock updates for json demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e38ac254a19ac294918",
    "number": 2024,
    "body": "I'm using setting names when running more containers locally so they can easily connect to each other with network names (like `http://aries_holder:8000/`).",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Avoid mixing many env variable names for one functionality\n\nSigned-off-by: Dobrosław Żybort <dobroslaw.zybort@fujitsu.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e39ac254a19ac294919",
    "number": 2022,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAddresses issues:  https://github.com/hyperledger/aries-cloudagent-python/issues/2002 and https://github.com/hyperledger/aries-cloudagent-python/issues/1989\r\n\r\nAlso fixes a couple of bugs in the alice/faber demo when running multi/multi\r\n\r\n",
    "head_branch": "multi-issues-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2022 from ianco/multi-issues-2\n\nMulti-ledger/Multi-tenant issues"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e3aac254a19ac29491a",
    "number": 2019,
    "body": "As a group of university students we implemented the protocols issue_credential and present_proof for DIDComm v2. The encryption is currently still the same as for DIDComm v1.  In addition to the tests of v3, the new endpoints can be tested using a DIDComm v1 connection for now. As soon as there is a decision on how to implement/extend the existing connection for DIDComm v2, the intention is to implement it and use its information regarding the DIDComm version for choosing the encryption type (and in case of DIDComm v2 to use the encryption which is already implemented in the askar wallet).",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e3bac254a19ac29491b",
    "number": 2018,
    "body": "As a group of university students we implemented the protocols issue_credential and present_proof for DIDComm v2. The encryption is currently still the same as for DIDComm v1. \r\nIn addition to the tests of v3, the new endpoints can be tested using a DIDComm v1 connection. As soon as there is a decision on how to implement/extend the existing connection for DIDComm v2, the intention is to implement it and use its information regarding the DIDComm version for choosing the encryption type (and then use the DIDComm v2 encryption which is already implemented in the askar wallet)",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e3cac254a19ac29491c",
    "number": 2013,
    "body": "fixes #1819 \r\n\r\nSigned-off-by: Roman Reinert <roman.reinert@gematik.de>",
    "head_branch": "fix/dif-claim-format-designation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2013 from rmnre/fix/dif-claim-format-designation\n\nfix claim format designation in presentation submission"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e3dac254a19ac29491d",
    "number": 2012,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nSee issue https://github.com/hyperledger/aries-cloudagent-python/issues/2008\r\n",
    "head_branch": "revoc-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2012 from ianco/revoc-doc\n\nAdded a bit about manually creating a revoc reg tails file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e3eac254a19ac29491e",
    "number": 2010,
    "body": "There are typos in alice-local.sh & faber-local.sh to run pip install.\r\n\r\nSigned-off-by: Nao Nishijima <nao.nishijima.xt@hitachi.com>",
    "head_branch": "fix-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2010 from naonishijima/fix-typo\n\nFix typos in alice-local.sh & faber-local.sh"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e3fac254a19ac29491f",
    "number": 2009,
    "body": "Pause and retry if a routing record is not found\r\n",
    "head_branch": "mediator-testing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2009 from ianco/mediator-testing\n\nFix for mediator load testing race condition when scaling horizontally"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e3fac254a19ac294920",
    "number": 2005,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "1.0.0-rc1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2005 from swcurran/1.0.0-rc1\n\nChangelog and other updates for ACA-Py 1.0.0-rc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e40ac254a19ac294921",
    "number": 1997,
    "body": "Signed-off-by: PeterStrob <peter@indicio.tech>",
    "head_branch": "fix/endpoint_summary_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1997 from PeterStrob/fix/endpoint_summary_fixes\n\nfix: update issue-credential endpoint summaries"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e41ac254a19ac294922",
    "number": 1996,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "add-0.7.5-to-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1996 from swcurran/add-0.7.5-to-changelog\n\nAdd 0.7.5 patch Changelog entry to main branch Changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e42ac254a19ac294923",
    "number": 1994,
    "body": "Fixes a timing issue where the endorser and author are connecting and trying to set connection met-data before the connection is \"active\".\r\n",
    "head_branch": "fix/txn-job-setting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1994 from ianco/fix/txn-job-setting\n\nFix/txn job setting"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e43ac254a19ac294924",
    "number": 1991,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n\r\nFinal changes for Release 0.7.5.",
    "head_branch": "hotfix/0.7.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1991 from swcurran/hotfix/0.7.5\n\nFinal 0.7.5 changes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214e44ac254a19ac294925",
    "number": 1990,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nSee issue https://github.com/hyperledger/aries-cloudagent-python/issues/1987\r\n",
    "head_branch": "alice-job-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1990 from ianco/alice-job-fix\n\nFixes to acme exercise code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e45ac254a19ac294926",
    "number": 1986,
    "body": "This PR contains did method and key type registry, allowing plugins to register and use new methods and key types.\r\n",
    "head_branch": "feature/did-method-key-type-registry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1986 from sicpa-dlab/feature/did-method-key-type-registry\n\ndid method & key type registry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e46ac254a19ac294927",
    "number": 1985,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "0.7.5-rc1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1985 from swcurran/0.7.5-rc1\n\nUpdate for 0.7.5-rc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214e47ac254a19ac294928",
    "number": 1984,
    "body": "Contains the following PRs:\r\n- [x] https://github.com/hyperledger/aries-cloudagent-python/pull/1938\r\n- [x] https://github.com/hyperledger/aries-cloudagent-python/pull/1926\r\n- [x] https://github.com/hyperledger/aries-cloudagent-python/pull/1973\r\n\r\nReference issue #1983 ",
    "head_branch": "hotfix/0.7.5-working",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1984 from Indicio-tech/hotfix/0.7.5-working\n\nAdditional 0.7.5 Cherry-Pick"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214e47ac254a19ac294929",
    "number": 1982,
    "body": "Fixed a bug which prompts out when we try to use the debugging capabilities inside the demo.\r\nThe command:\r\n```\r\nLEDGER_URL=http://dev.greenlight.bcovrin.vonx.io ./run_demo alice --events --no-auto --debug-pycharm-controller-port 5003 --debug-pycharm-agent-port 5004 --debug-pycharm --wallet-type indy\r\n```\r\nwas failing in attaching the debug servers without such fix. Now it works.\r\n\r\nIt applies also for `faber` and `acme` instances.",
    "head_branch": "feature/fix_debug_options_demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1982 from pasquale95/feature/fix_debug_options_demo\n\nFixed bug in run_demo script"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e48ac254a19ac29492a",
    "number": 1981,
    "body": "this fixes install for m1 mac arm64 arch\r\n\r\ncloses #1980 \r\n\r\nSigned-off-by: Moriarty <moritz@animo.id>",
    "head_branch": "feat/1980/bump-nacl-dep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1981 from morrieinmaas/feat/1980/bump-nacl-dep\n\nfeat: update pynacl version from 1.4.0 to 1.50"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e49ac254a19ac29492b",
    "number": 1978,
    "body": "using underscore instead of hyphen\r\n\r\ncloses #1965 \r\n\r\nSigned-off-by: Moriarty <moritz@animo.id>",
    "head_branch": "fix/1965/arg-parse-auto-promote-author-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1978 from morrieinmaas/fix/1965/arg-parse-auto-promote-author-did\n\nchore: fix ACAPY_PROMOTE-AUTHOR-DID flag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e4aac254a19ac29492c",
    "number": 1977,
    "body": "This PR fixes an issue @reflectivedevelopment found while using the recent changes made to support routing keys associated with public DID endpoints.\r\n\r\nWithout this fix, when creating a public DID OOB invitation, creation will fail due to no DIDComm service being found. This stemmed from PyDID expecting that routing keys be expressed strictly as DID URLs. Previously, we were resolving the routing keys as raw base58 encoded public keys. This PR makes it so that routing keys are resolved as did:key url values (if already did:key, simply pass through the values but if not, transform into did:key urls).\r\n\r\nCredit to @cjhowland for doing most of the digging on this issue :slightly_smiling_face: ",
    "head_branch": "fix/public-did-mediator-routing-keys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1977 from dbluhm/fix/public-did-mediator-routing-keys\n\nfix: public did mediator routing keys as did keys"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e4bac254a19ac29492d",
    "number": 1975,
    "body": "Self-contained demo showing how to start up an author agent to to connect to an endorser service\r\n",
    "head_branch": "author-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1975 from ianco/author-demo\n\nAuthor demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e4cac254a19ac29492e",
    "number": 1974,
    "body": null,
    "head_branch": "ani",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e4dac254a19ac29492f",
    "number": 1973,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>",
    "head_branch": "webpy_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1973 from shaangill025/webpy_fix\n\nFix: web.py dependency - integration tests & demos"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e4eac254a19ac294930",
    "number": 1970,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>\r\n\r\nThe following issues were found as part of loadgenerator test setup.\r\n- `--mediator-invitation` was failing with OOB invitation, this should be fixed now.\r\n- `invitation_url` when creating an implicit invitation using `/connections/create-invitation` didn't include endpoint, this should be fixed now.",
    "head_branch": "mediation_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1970 from shaangill025/mediation_fix\n\nFix: `--mediator-invitation` with OOB invitation + cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e4eac254a19ac294931",
    "number": 1969,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "tag-0.7.5-rc0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1969 from swcurran/tag-0.7.5-rc0\n\nChangelog and version updates for version 0.7.5-rc0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214e4fac254a19ac294932",
    "number": 1967,
    "body": "These are the cherry picks for Milestone 0.7.5 https://github.com/hyperledger/aries-cloudagent-python/milestone/6\r\n- [X] https://github.com/hyperledger/aries-cloudagent-python/pull/1881 (Already Merged into https://github.com/hyperledger/aries-cloudagent-python/tree/hotfix/0.7.5)\r\n- [x] https://github.com/hyperledger/aries-cloudagent-python/pull/1940\r\n- [X] https://github.com/hyperledger/aries-cloudagent-python/pull/1960\r\n- [x] https://github.com/hyperledger/aries-cloudagent-python/pull/1962\r\n",
    "head_branch": "hotfix/0.7.5-working",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1967 from Indicio-tech/hotfix/0.7.5-working\n\n0.7.5 Cherry Picks"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66214e50ac254a19ac294933",
    "number": 1966,
    "body": "include `image_url` in out-of-band invitations.\r\n\r\nSigned-off-by: Pritam Singh <pkspritam16@gmail.com>",
    "head_branch": "image_url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1966 from crubn/image_url\n\ninclude image_url in oob invitation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e51ac254a19ac294934",
    "number": 1962,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>",
    "head_branch": "feat_oob_v1.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1962 from shaangill025/feat_oob_v1.1\n\nfeat: 00B v1.1 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e52ac254a19ac294935",
    "number": 1960,
    "body": "If an exception was thrown during the initialization of the root_profile, we would throw an exception during shutdown and fail to end the process. This would leave ACA-Py running, without accepting/handling any further requests. Adding guards for shutdown code that uses the root_profile should avoid this situation",
    "head_branch": "frosty/shutdown-hang-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1960 from frostyfrog/frosty/shutdown-hang-fix\n\nfix: Safely shutdown when root_profile uninitialized"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e53ac254a19ac294936",
    "number": 1958,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>\r\n\r\n- Putting this as draft, once PR #1940 is approved and merged, I need to make a minor update to use `get_proto_default_version()` and remove `BASE_PROTO_VERSION` from the OOB messages. ",
    "head_branch": "feat_oob-1.1-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e54ac254a19ac294937",
    "number": 1957,
    "body": "This PR makes key types pluggable to enable plugins to define and register new ones.\r\n\r\nSigned-off-by: Adam Burdett <burdettadam@gmail.com>",
    "head_branch": "feature/keytypes-pluggable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e55ac254a19ac294938",
    "number": 1956,
    "body": "* Enabled handing presentation requests with indy **and** dif\r\n* Enabled handling presentation requests with requests for claims from different JSON-LD VCs (verifier has to create separate submission requirement groups for each claim from different VC) In case, multiple claims should come from the same VC, the descriptors can be included in the same group\r\n\r\n* Updated demo/agent_controller to correctly construct presentations.\r\n\r\nSigned-off-by: Anastasiia Sivirina [sivirina99@mail.ru](mailto:sivirina99@mail.ru)\r\n",
    "head_branch": "feature/enable-aggr-vcs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1956 from teanas/feature/enable-aggr-vcs\n\nFeature: enabled handling VPs (request, creation, verification) with different VCs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e56ac254a19ac294939",
    "number": 1955,
    "body": "To support different did methods in plugins we need to support did method pluggability. This PR changes the default methods to be static and registered into a registry of methods at start-up. This allows plugins to define new did methods that can be registered. The bulk of changes in this PR is updating the current code to use a did method registry.\r\n\r\nSigned-off-by: Adam Burdett <burdettadam@gmail.com>",
    "head_branch": "feature/did-method-registry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e56ac254a19ac29493a",
    "number": 1945,
    "body": "Signed-off-by: Ry Jones <ry@linux.com>",
    "head_branch": "ryjones-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update pip-audit.yml\n\nSigned-off-by: Ry Jones <ry@linux.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e57ac254a19ac29493b",
    "number": 1944,
    "body": "Signed-off-by: Ry Jones <ry@linux.com>",
    "head_branch": "ryjones-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1944 from hyperledger/ryjones-patch-1\n\nUpdate pip-audit.yml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e58ac254a19ac29493c",
    "number": 1941,
    "body": "When we create a credential offer with image, the image is repeated in following objects (dict) \r\n\"credential_request\", \"cred_request\", \"credential_proposal\", \"cred_proposal\", \"credential_offer\", \"cred_offer\", \"credential_preview\", \"cred_preview\", \"values\", \"credentials~attach\", \"offers~attach\"\r\n\r\na Credential offer with 30KB image resulted in a webhook sized at 227KB in my use case and resulted HTTP 413 as well as unnecessary stress on WAF rule regex processes on those encrypted string and base64 image string.\r\n\r\nThis startup flag will remove those objects only on outbound webhook and size went down to 7KB at most.\r\nI did preserve 1 object \"cred_issue\" which has the \"rev_reg_id\" and \"cred_rev_id\".\r\n\r\nTo me this is a more like a nice to have flag if someone ever encounter problem with image and webhook.\r\n\r\nPrevious related discussion\r\n[PR #725](https://github.com/hyperledger/aries-cloudagent-python/pull/725)\r\n[Issue #1222](https://github.com/hyperledger/aries-cloudagent-python/issues/1222)\r\n\r\nSigned-off-by: Victor Lee <victorlee0505@gmail.com>",
    "head_branch": "vlee/lightwebhook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1941 from victorlee0505/vlee/lightwebhook\n\nAdd startup flag --light-weight-webhook to trim down outbound webhook payload"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e59ac254a19ac29493d",
    "number": 1940,
    "body": "Signed-off-by: Shaanjot Gill [gill.shaanjots@gmail.com](mailto:gill.shaanjots@gmail.com)\r\n\r\n- resolve #1917\r\n- Fixes the following error:\r\n```\r\nFile \"/home/indy/.venv/lib/python3.6/site-packages/aries_cloudagent/utils/classloader.py\", line 97, in load_class\r\n   |     if \".\" in class_name:\r\n   | TypeError: argument of type 'NoneType' is not iterable\r\n```\r\n- Working on adding minor changes for adding OOB 1.1 and a mechanism for ACA-Py to respond with the same supported version, basically, `handshake-reuse-accepted 1.1` for `handshake-reuse 1.1` and `handshake-reuse-accepted 1.0` for `handshake-reuse 1.0`. ",
    "head_branch": "fix_oob_accept_minor_version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1940 from shaangill025/fix_oob_accept_minor_version\n\nFix: OOB - Handling of minor versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e5aac254a19ac29493e",
    "number": 1938,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAddresses https://github.com/hyperledger/aries-cloudagent-python/issues/1929\r\n",
    "head_branch": "endorser-write-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1938 from ianco/endorser-write-did\n\nEndorser write DID transaction"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e5bac254a19ac29493f",
    "number": 1937,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>\r\n\r\n- ~~The `RedisPlugins.md` documentation depends on the approval of [aries-acapy-cache-redis PR](https://github.com/Indicio-tech/aries-acapy-cache-redis/pull/9). Will take it out of draft once that PR is approved.~~\r\n- `run_docker` file has been updated to accept `NETWORK_NAME` env variable. This is needed when loading up an ACA-Py agent with either `redis_queue` or `redis_cache` plugin when connected to a redis cluster, as the cluster requires a docker network with a predefined subnet.",
    "head_branch": "redis_plugin_doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1937 from shaangill025/redis_plugin_doc\n\nRedis Plugins [redis_cache & redis_queue] related updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e5cac254a19ac294940",
    "number": 1935,
    "body": "Disable automatic sonarcloud\r\n\r\nSigned-off-by: Ry Jones <ry@linux.com>",
    "head_branch": "ryjones-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Delete sonarcloud.yml\n\nDisable automatic sonarcloud\n\nSigned-off-by: Ry Jones <ry@linux.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e5dac254a19ac294941",
    "number": 1934,
    "body": "This PR implements the solution discussed in #1928 to resolve an issue with the endpoint attrib structure. We have brought the structure into alignment with the did:sov specification by removing the nested endpoint structure and ensuring that service types `profile` and `linked_domains` can be used. This solution is interoperable with AFJ, which also supports endpoint attrib data in the following manner:\r\n\r\n```json\r\n{\r\n  \"endpoint\": \"https://example.com\",\r\n  \"types\": [\"did-communication\", ...],\r\n  \"routingKeys\": [...],\r\n  \"profile\": \"https://example.com/profile\",\r\n  \"linked_domains\": \"https://example.com/linked-domains\",\r\n}\r\n```\r\n",
    "head_branch": "fix/endpoint-attrib-structure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: endpoint attrib json object with one top level key \"endpoint\"\n\nSigned-off-by: Char Howland <char@indicio.tech>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e5dac254a19ac294942",
    "number": 1933,
    "body": "In demo menu (2a) connectionless proof request, If a mobile agent (for instance Trinsic) does not include Accept header when calling proof request url, the demo would fail.\r\n\r\nSigned-off-by: kukgini <kukgini@users.noreply.github.com>",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: failed connectionless present proof on some case\n\nIn demo menu (2a) connectionless proof request, If a mobile agent (for instance Trinsic) does not include Accept header when present proof request, the demo would fail.\n\nSigned-off-by: kukgini <kukgini@users.noreply.github.com>\nSigned-off-by: Ry Jones <ry@linux.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e5eac254a19ac294943",
    "number": 1931,
    "body": "This pull request contains all the rework that we, as IBM Research, have done on `aries-cloudagent-python` (also known as ACA-Py) with a view to achieve *ledger agnosticism*.\r\nThe biggest problem we found out in ACA-Py is that, once the agent is started, the ledger sdk to use is strictly bounded with the `--wallet-type` parameter. More specifically, by choosing a specific wallet (e.g. `--wallet-type indy`) we are bounded to use `IndySdkLedger` as class implementation of the abstract class `BaseLedger`. With this approach we need to create a new wallet whenever we want to support a new ledger:\r\n\r\n![ledgerAgnosticBefore](https://user-images.githubusercontent.com/26608445/188931906-ade1950d-c4aa-4d55-b96f-5fb53cdce85e.svg)\r\n\r\nWe believe that such behaviour goes against the goal of being *ledger agnostic* and here we propose our solution.\r\n\r\nIn our implementation the user can select what ledger to use by adding a new command-line parameter named `--wallet-ledger`. In this way we can add new ledger implementations without being forced to add a new wallet:\r\n\r\n![ledgerAgnosticAfter](https://user-images.githubusercontent.com/26608445/188931931-50f2de5c-21b8-40e6-a106-d6f89d6ee091.svg)\r\n\r\nMore in details:\r\n- each ledger class implementation (called also as *ledger adapter* class) of the abstract class `BaseLedger` has a `BACKEND_NAME` parameter which is used as the ledger class identifier. Such identifier can be indicated with the `--wallet-ledger` command-line parameter to choose what ledger adapter to use when running the agent;\r\n- we implemented a class named `LedgerProvider` in charge of choosing what ledger class to use to interact with the ledger based on both the parameters `--wallet-type` and `--wallet-ledger`. The choice of the ledger is still bounded to the wallet the user chooses since each wallet can be free to specify what ledgers to interact with. The list of ledgers supported by a specific wallet is defined directly inside the `LedgerProvider` class as `WALLET_SUPPORTED_LEDGERS`;\r\n- we made a rework on the interactions between the agent and the `tails server` to allow revocation in a ledger-agnostic way. Specifically we added the field `ledger_type` into the request payload which goes from the agent to the tails server and which allows the latter to correctly setup his connection with the ledger. To have a ledger-agnostic implementation of the tails-server capable of parsing correctly this new request layout we recommend to use the implementation available [here](https://github.com/pasquale95/indy-tails-server/tree/feature/ledger_agnosticism).\r\n\r\nMore details can be found at the [LedgerAgnosticism](https://github.com/pasquale95/aries-cloudagent-python/blob/feature/ledger_agnosticism/docs/GettingStartedAriesDev/LedgerAgnosticism.md) document.",
    "head_branch": "feature/ledger_agnosticism",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e5fac254a19ac294944",
    "number": 1926,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nFixes a couple of issues with DID ATTRIB transactions, and adds some technical docs.\r\n",
    "head_branch": "endorser-testing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1926 from ianco/endorser-testing\n\nEndorser doc updates and some bug fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e60ac254a19ac294945",
    "number": 1925,
    "body": "Hi.\r\n\r\nThis PR corrects the type of tails file path.\r\n\r\n`self.tails_local_path` must be a string. However, it was assigned a PosixPath value.\r\n\r\nSo I got the below error.\r\n`TypeError: bytes or integer address expected instead of PosixPath instance`\r\n\r\nAt here.\r\nhttps://github.com/hyperledger/indy-shared-rs/blob/main/wrappers/python/indy_credx/bindings.py#L797\r\n\r\nThanks!\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "feature/fix-tails-file-path",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1925 from baegjae/feature/fix-tails-file-path\n\nFix: \bthe type of tails file path to string."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e61ac254a19ac294946",
    "number": 1924,
    "body": "This avoids having a confusingly blank `revoc_reg_id` on the record in the `init` state.\r\n\r\nRegistries in the `init` state are also filtered from the `/revocation/registries/created` endpoint.",
    "head_branch": "filter-reg-created",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1924 from andrewwhitehead/filter-reg-created\n\nPre-populate revoc_reg_id on IssuerRevRegRecord"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e62ac254a19ac294947",
    "number": 1922,
    "body": "This PR solves a bug in #1899 in which the public DID endpoint of an agent behind a mediator was the agent's own endpoint. These changes ensure that a mediated agent's public DID endpoint is the mediator's endpoint.\r\n\r\nSigned-off-by: Char Howland <char@indicio.tech>",
    "head_branch": "fix/mediated-agent-endpoint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1922 from cjhowland/fix/mediated-agent-endpoint\n\nfix: propagate endpoint from mediation record"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e62ac254a19ac294948",
    "number": 1921,
    "body": "During the implementation we stumbled upon inability of a recipient to validate a credential offer. That happens because the `credentialStatus` fields is popped from the credential offer (see [here](https://github.com/sake/aries-cloudagent-python/blob/main/aries_cloudagent/protocols/issue_credential/v2_0/formats/ld_proof/handler.py#L506)). Later, the two entities (one from credential request, and another from the offer) are being compared, and naturally the comparison fails, which leads to inability to receive the credential offer.\r\nThis change makes sure that the comparison of the provided reference data is comparable with the credential content, by replacing the `pop` method with `get` to leave the `credentialStatus` intact in the offer object.",
    "head_branch": "statuslist-fix-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1921 from sake/statuslist-fix-main\n\nLeave credentialStatus element in the LD credential"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e63ac254a19ac294949",
    "number": 1920,
    "body": "This Pr simplifies the did registry to a list for future development of a did registry interface.\r\n\r\nSigned-off-by: Adam Burdett <burdettadam@gmail.com>\r\nCo-authored-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "feature/simple-did-registry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1920 from sicpa-dlab/feature/simple-did-registry\n\nSimple did registry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e64ac254a19ac29494a",
    "number": 1916,
    "body": "This reverts commit 67db5de43770933efd8cbc816ffb5d3850fa5785.",
    "head_branch": "RB",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"[#1895] Stopping the aca-py shell process keeps python process running\"\n\nThis reverts commit 67db5de43770933efd8cbc816ffb5d3850fa5785.\n\nSigned-off-by: Ry Jones <ry@linux.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e65ac254a19ac29494b",
    "number": 1915,
    "body": "Recent changes to the resolution of sov/indy DIDs caused PyDID to parse\r\nservice endpoints that should have been recognized as DIDComm services\r\nas plain services. This broke some logic in accepting invitations from\r\npublic DIDs. Pulling in these updates from PyDID resolves the issue.\r\n\r\nSigned-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "chore/update-pydid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1915 from dbluhm/chore/update-pydid\n\nchore: update pydid"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e66ac254a19ac29494c",
    "number": 1914,
    "body": "This PR adds the connection IDs of the mediated connections. This should make it easier to trigger the next step in a flow (i.e. accept a connection request for one of the connections, if it's in the right state).",
    "head_branch": "fix/conn-id-in-keylist-webhook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1914 from sicpa-dlab/fix/conn-id-in-keylist-webhook\n\nfeat: include connection ids in keylist update webhook"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e67ac254a19ac29494d",
    "number": 1913,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAddresses issue #1893\r\n\r\nRemoves the \"hard\" verification on un-revealed attributes and adds \"verify_msgs\" to the presentation exchange record to describe any warnings or errors encountered when processing the received proof.",
    "head_branch": "fix/proof-unrevealed-attrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1913 from ianco/fix/proof-unrevealed-attrs\n\nRemove aca-py check for unrevealed revealed attrs on proof validation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e68ac254a19ac29494e",
    "number": 1912,
    "body": "Small change that won't really affect anything but OpenAPI json and client generators.\r\n\r\nThe query features endpoint returns the discovery record directly rather than nesting it in a `results` attribute.",
    "head_branch": "fix/query-features-response-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1912 from dbluhm/fix/query-features-response-schema\n\nfix: incorrect response schema for discover features"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e69ac254a19ac29494f",
    "number": 1911,
    "body": "Signed-off-by: Thomas Diesler <tdiesler@redhat.com>",
    "head_branch": "ghi1895",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1911 from hyperledger/ghi1895\n\n[#1895] Stopping the aca-py shell process keeps python process running"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e69ac254a19ac294950",
    "number": 1910,
    "body": "Signed-off-by: Ry Jones <ry@linux.com>",
    "head_branch": "sonarcloud",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1910 from hyperledger/sonarcloud\n\nCreate sonarcloud.yml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e6aac254a19ac294951",
    "number": 1908,
    "body": "We found out that the `offers_attach` attribute is not present in the credential offer schema. It is possible to send it to the api but its not present in the openapi spec. This is a problem is you generate yourself a client with the openapi spec because offers_attach is not defined.\r\n\r\nThis pr adds the attribute to the credential offer schemas.\r\nIt seems that there were also some other changes that are not reflected in the openapi.json. Therefore the changes in the openapi spec are bigger than the real changes in this pr.",
    "head_branch": "feature/offersattach-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e6bac254a19ac294952",
    "number": 1906,
    "body": "There is a ToDo note talking about sending webhooks when records are deleted. There are also no webhooks that get sent when a credential is deleted. This PR aims to fix the ToDo, as well as provide webhooks for when a credential has been deleted.",
    "head_branch": "feature/send-webhook-upon-delete",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1906 from frostyfrog/feature/send-webhook-upon-delete\n\nSend webhooks upon record/credential deletion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e6cac254a19ac294953",
    "number": 1904,
    "body": "- Update for the v1.0.0-rc0 release. Changelog comment added for v0.7.4\n- Added this PR to changelog\n",
    "head_branch": "v1.0.0-rc0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1904 from swcurran/v1.0.0-rc0\n\nUpdate for the v1.0.0-rc0 release. Changelog comment added for v0.7.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e6dac254a19ac294954",
    "number": 1903,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "v1.0.0-rc1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e6eac254a19ac294955",
    "number": 1902,
    "body": "Adapt uses of `RouteManager` to pass the profile as argument.\r\nThis is following a refactoring in #1851\r\n\r\nSigned-off-by: Clément Humbert <clement.humbert@sicpa.com>",
    "head_branch": "fix/manual-update-keylist-route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1902 from sicpa-dlab/fix/manual-update-keylist-route\n\nfix: update RouteManager methods use to pass profile as parameter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e6fac254a19ac294956",
    "number": 1900,
    "body": "Signed-off-by: Peter Strobel <peter@indicio.tech>",
    "head_branch": "feat/add_message_to_forward_event",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e70ac254a19ac294957",
    "number": 1899,
    "body": "This PR supports publishing endpoint information with routing keys in accordance with the did:sov specification. Routing keys are retrieved from `mediation_id` if specified, or else a default mediator. If no mediated connection is present, `routingKeys` defaults to an empty array. \r\n\r\nThis PR allows for publishing DIDs with routing keys; PR #1863 allows for resolving DIDs with routing keys.",
    "head_branch": "feat/public-did-endpts-with-routing-keys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1899 from cjhowland/feat/public-did-endpts-with-routing-keys\n\nFeat/public did endpoints for agents behind mediators"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e71ac254a19ac294958",
    "number": 1897,
    "body": "Fixes:\r\n- one 023-did-exchange error\r\n- 0434-oob errors\r\n- one 0183-revocation error\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1897 from ianco/master\n\nFixes a few AATH failures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e71ac254a19ac294959",
    "number": 1896,
    "body": "Signed-off-by: Thomas Diesler <tdiesler@redhat.com>",
    "head_branch": "ghi1895",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e72ac254a19ac29495a",
    "number": 1894,
    "body": "**What’s wrong?**\r\nThe OpenAPI spec requires an Input Descriptor’s `schema` property to contain a `SchemasInputDescriptorFilter` object.\r\nHowever, on deserialization, there is a [preprocessing step](https://github.com/hyperledger/aries-cloudagent-python/blob/d407c48cc9f041c5b27ee8f589fc0e2eaef2220d/aries_cloudagent/protocols/present_proof/dif/pres_exch.py#L235-L254) which ensures that lists of URIs or a dict containing a `oneof_filter` property are accepted as well by transforming them into said object. (These alternative input formats are also [included as examples](https://github.com/hyperledger/aries-cloudagent-python/blob/d407c48cc9f041c5b27ee8f589fc0e2eaef2220d/aries_cloudagent/protocols/present_proof/dif/pres_exch.py#L640-L663) in the `InputDescriptors` model.) Yet, input that already IS a `SchemasInputDescriptorFilter` object is not handled correctly during preprocessing and deserialization fails. This results in any client adhering to the spec being unable to create valid input descriptors and, ultimately, a presentation definition to use in a DIF proof request.\r\n\r\n**What has been changed?**\r\nI adjusted the preprocessing step such that input is forwarded as-is if it looks like a `SchemasInputDescriptorFilter`. I also extended the tests to cover deserializing the actual object.",
    "head_branch": "fix/SchemasInputDescriptorFilter-deserialization",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1894 from rmnre/fix/SchemasInputDescriptorFilter-deserialization\n\nFix: SchemasInputDescriptorFilter: broken deserialization renders generated clients unusable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e73ac254a19ac29495b",
    "number": 1892,
    "body": "Addresses issue https://github.com/hyperledger/aries-cloudagent-python/issues/1868\r\n",
    "head_branch": "fix/revoc_error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1892 from ianco/fix/revoc_error\n\nRefactor ledger correction code and insert into revocation error handling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e74ac254a19ac29495c",
    "number": 1891,
    "body": "This PR removes did registry class and uses a list instead. Simplifying the code.\r\n\r\nSigned-off-by: Adam Burdett <burdettadam@gmail.com>\r\nCo-authored-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "feature/simple-did-registry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e75ac254a19ac29495d",
    "number": 1888,
    "body": "Putting this out there to hopefully spark some discussion.\r\n\r\nThis PR adds Dockerfiles for publishing images for ACA-Py directly from this repo (i.e. no dependencies on bcgovimages). I made some opinionated decisions that I hope will catch some people's attention (so you can tell me why I'm wrong :slightly_smiling_face:):\r\n- Rather than building aries-askar, indy-shared-rs, and indy-vdr directly in the image, I opted to instead let it use the binaries bundled in the python packages. Good chance I'm wrong, but I'm about 70% sure these libraries might have been taking precedence over those included in von-image anyways.\r\n- I am thinking of \"indy-less\" ACA-Py as the default. `ghcr.io/hyperledger/aries-cloudagent-python:py3.6-0.7.4` image would not have any Indy libraries installed. To get an image with Indy included, I'm thinking the image name+tag might look like: `ghcr.io/hyperledger/aries-cloudagent-python:py3.6-indy-1.16.0-0.7.4`.\r\n- The ACA-Py+Indy image does NOT include Indy CLI (von-image did).\r\n- The default ACA-Py image's user is now `aries` instead of `indy`. The ACA-Py+Indy image's user will still be `indy` (this inconsistency may be undesirable...).\r\n- I introduced an `indy-python` image that can be reused as a base for things needing an image with just python3-indy and built Indy libraries. This is the base image used by the ACA-Py+Indy image. I would like to see this published as `ghcr.io/hyperledger/indy-python`.\r\n- Rather than using pyenv to get a specific python version, I opted to just use the relevant python docker image for the requested version, i.e. `python:3.6.13-slim-buster`. Python packages are installed into the system site packages (rather than the user site packages or a virtual environment).\r\n- ~For now, I've followed the example of the aries-cloudagent-container repo and am installing ACA-Py through the published PyPI package. It might make more sense to be able to publish directly from the repo contents?~ With the GHA additions, the images are now built directly from the repo.\r\n\r\nI get the feeling that we can further prune a lot of the installed packages but (for now) I've left in most of those originally installed in von-image.\r\n\r\nI've included a simple Makefile purely to demonstrate building the image and I do not anticipate that we'd leave this Makefile around. I'll plan on removing it before this PR moves on to potentially getting merged.\r\n\r\nThis is relevant to #1854, #1856, and #1871.\r\n\r\ncc @WadeBarnes @andrewwhitehead @swcurran @burdettadam ",
    "head_branch": "feature/standalone-docker",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e76ac254a19ac29495e",
    "number": 1886,
    "body": "As part of #1859, I have made it so the coordinate-mediation protocol uses did:key representation. Apologies that this took as long as it did. Implementing this impacted more of ACA-Py than I realized it would while keeping it compatible with existing agents.",
    "head_branch": "fix/RFC-0211-Compliance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1886 from frostyfrog/fix/RFC-0211-Compliance\n\nUse did:key for recipient keys"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e77ac254a19ac29495f",
    "number": 1885,
    "body": "This PR enables the Schema class of a model to determine the default `unknown` behavior. Without this, if you have a schema where you expect extra values to be present, every time `deserialize` or `serialize` is called, you must set `unknown=INCLUDE`. Now, in the `Meta` class of the Schema, `unknown` can be set to some value that will be respected as the default if not overrided by method parameter.\r\n\r\nWhile I was at it, I also touched up some of the typing. I'm not fond of using `@overload` but I think it's the best way to address typing a method where a bool flag impacts the return type.",
    "head_branch": "fix/base-model-unknown",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1885 from dbluhm/fix/base-model-unknown\n\nfix: schema class can set Meta.unknown"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e78ac254a19ac294960",
    "number": 1884,
    "body": "aio-pika integrates asyncio which is used within acapay and makes it easier to work with async tasks",
    "head_branch": "feat-IDCORE-4617-rabbitmq-plugin-rebased",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e78ac254a19ac294961",
    "number": 1881,
    "body": "Hi everyone,\r\n\r\nthis PR fixes a few problems which were apparently introduced by #1710:\r\n\r\n- A didx request which is received in response to an explicit oob invitation cannot be accepted because the state of the corresponding connection record is not updated to `'request-received'`\r\n\r\n- The admin api incorrectly indicates that the `/out-of-band/receive-invitation` endpoint returns a `ConnRecord` instead of the new `OobRecord` (which is also why the `OobRecord` is not included in the `swagger.json`)\r\n\r\n@TimoGlastra: maybe you want to take a look to make sure I didn't break the connectionless exchange feature by saving the updated connection record?",
    "head_branch": "fix/oob-connectionless-bugfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1881 from rmnre/fix/oob-connectionless-bugfix\n\nfix: didx request cannot be accepted"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e79ac254a19ac294962",
    "number": 1880,
    "body": "Fix a small oversight that prevents specifying a qualified class name as\r\nwallet type.\r\n\r\nSigned-off-by: Clément Humbert <clement.humbert@sicpa.com>",
    "head_branch": "fix/external-profile-classnames",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1880 from sicpa-dlab/fix/external-profile-classnames\n\nAllow fully qualified class names for profile managers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e7aac254a19ac294963",
    "number": 1878,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "fix/askar-memory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1878 from dbluhm/fix/askar-memory\n\nfix: unable to use askar with in memory db"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e7bac254a19ac294964",
    "number": 1870,
    "body": "- Move `check_existing_schema `, `create_and_send_schema` and `create_and_send_credential_definition` to the `BaseLedger` class, to avoid duplication between `IndySdkLedger` and `IndyVdrLedger` backends\r\n- Fixes a logic error in `create_and_send_credential_definition` in `IndyVdrLedger`\r\n- Remove unnecessary session creation in `IndySdkLedger`\r\n\r\nI think this should resolve the most common integration test failures (published cred def not found in wallet).",
    "head_branch": "fix/cred-def-not-found",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1870 from andrewwhitehead/fix/cred-def-not-found\n\nIndy ledger fixes and cleanups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e7cac254a19ac294965",
    "number": 1866,
    "body": "This PR merges the universal resolver plugin into main ACA-Py. This PR adds a couple new CLI args to configure usage of the universal resolver.\r\n\r\nBy default, the universal resolver is NOT loaded. If the `--universal-resolver` flag is given, without arguments, it will default to using `https://dev.uniresolver.io` for convenience. We might want to add language somewhere discouraging people from using this endpoint all the time. We should encourage people to use `--universal-resolver https://my.universal.resolver.com` to point to their own deployed universal resolver instance.\r\n\r\nBy default, if the resolver is loaded, it will retrieve properties from the universal resolver and use that to compile a regex that matches all supported DIDs. This regex will be used to determine if a given DID is supported by the resolver. Alternatively, the user can specify `--universal-resolver-regex regex-one regex-two regex-three` to manually configure what DIDs should be supported by the universal resolver. This is useful when you want to limit usage of the universal resolver to a known \"trustworthy\" set of DIDs or similar. The arguments to `--universal-resolver-regex` are compiled into a single regex on startup.\r\n\r\ncc @swcurran ",
    "head_branch": "feature/universal-resolver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1866 from sicpa-dlab/feature/universal-resolver\n\nfeat: add universal resolver"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e7dac254a19ac294966",
    "number": 1865,
    "body": "This PR includes some minor tweaks to tests involving `IndySdkProfile`s to prevent them from emitting warnings. Based on my analysis, the warnings are a result of how the event loop is managed in asynchronous testing with pytest. The profile reference falls out of scope at the same time as the event loop is closed for a test and what results are `Coroutine never awaited` errors.\r\n\r\nThis may not be the best solution (open to thoughts) but in most cases, I simply monkeypatched the `_make_finalizer` call where the behavior of the finalizer was not what was under test. Where it was under test, I opted to manually call the finalizer before the end of the test (or as a part of fixture clean up) and, therefore, before the event loop starts to close.",
    "head_branch": "fix/indy-sdk-profile-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1865 from dbluhm/fix/indy-sdk-profile-tests\n\nfix: warnings in tests from IndySdkProfile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e7eac254a19ac294967",
    "number": 1864,
    "body": "Following the documentation for JSONLD Credentials, there is a parameter\r\nfor adding `credentialStatus` to a credential:\r\nhttps://github.com/hyperledger/aries-rfcs/blob/main/features/0593-json-ld-cred-attach/README.md\r\n\r\nHowever, adding the parameter causes all flows to fail due to the\r\ncredentialStatus never making it into the credential. I don't know the\r\nhistory of this parameter, but in order to follow RFC 0593 a bit more\r\nclosely, I have fixed up the flow so that it doesn't fail issuance.\r\n\r\nSigned-off-by: Colton Wolkins (Indicio work address) <colton@indicio.tech>",
    "head_branch": "fix/jsonld-credential-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e7fac254a19ac294968",
    "number": 1863,
    "body": "Naive solution to the issue raised by @TimoGlastra in #1313.",
    "head_branch": "fix/did-sov-resolver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1863 from dbluhm/fix/did-sov-resolver\n\nfix: resolve dids following new endpoint rules"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e7fac254a19ac294969",
    "number": 1860,
    "body": null,
    "head_branch": "feat-gid-rebase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e80ac254a19ac29496a",
    "number": 1858,
    "body": "This partially implements the updates in #1717, for the specific tests that were failing under 3.9. There is some overlap with #1854.",
    "head_branch": "fix/tests-3.9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1858 from andrewwhitehead/fix/tests-3.9\n\nUnit test fixes for python 3.9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e81ac254a19ac29496b",
    "number": 1856,
    "body": "Hi, @swcurran mentioned in today's AcaPug call that you would be interested in a pipeline for building and publishing AcaPy Docker images automatically for every tagged commit.\r\n\r\nThe GitHub Action below should do this. It is triggered for every tagged commit and will build the docker image using the `docker/Dockerfile.run` file. The images are being published in the GitHub package registry of this repo.\r\n\r\nExample: If a commit is tagged with `0.7.4-rc6` an image will automatically be built and published with the following two tags:\r\n1. aries-cloudagent-python:latest\r\n2. aries-cloudagent-python:0.7.4-rc6\r\n\r\nYou can also see the build image in my forked version of this repo: https://github.com/PaulWen/aries-cloudagent-python/pkgs/container/aries-cloudagent-python\r\n\r\n\r\nLet me know if this is of any help or if I misunderstood the requirements. I am happy to iterate over it and appreciate any feedback!",
    "head_branch": "githubaction-publish-docker-image",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e82ac254a19ac29496c",
    "number": 1854,
    "body": "# UNDER RAPID DEVELOPMENT!\r\nThis draft PR updates ACA-PY to use python-3.7 along with dependency updates. \r\nFor questions during development please reach out to @burdettadam or @dbluhm.",
    "head_branch": "feature/python-3.7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e83ac254a19ac29496d",
    "number": 1853,
    "body": "Small fix to return an http inbound session if the return route decorator is present but the processing of the message did not elicit a response. Ended up being a quite straightforward fix. Current behaviour is to keep the socket open and hang indefinitely.\r\n\r\nI would like some input on this PR as it changes behaviour and makes e.g. long polling impossible. However I do think there's ways to work around that. As @smithbk pointed out in #1372 we could reserve the `noop` message from the pickup protocol for this. \r\n\r\nCurrently clients have to guess whether ACA-Py succesfully received the message as it won't return a 200 response. This mens that e.g. in AFJ we terminate the request after 15 seconds and just assume it went well if return routing was enabled.\r\n\r\nWe could of course disable return routing in the client (I'll make an additional PR to AFJ), but I think it's good to also fix the behaviour in ACA-Py.\r\n\r\nThe behaviour as implemented in this PR is also what's implemented in AFJ. We process the message, and if the processing didn't elicit a response we terminate the socket for HTTP. For websockets we keep it alive as it's more expected to have long lived sessions.\r\n\r\nWith current behaviour how it is implemented in AFJ's client side I was able to reduce the setup process (create connection with mediator, request mediation) from 17 to 1.7 seconds. Of course this is because AFJ has a set timeout of 15 seconds, but I suspect other implementations will have similar behaviour.\r\n\r\nFixes #1372 ",
    "head_branch": "fix/return-processing-no-response",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1853 from TimoGlastra/fix/return-processing-no-response\n\nfix: return if return route but no response"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e84ac254a19ac29496e",
    "number": 1851,
    "body": "This PR is a significant refactor of routing for both Mediation and Multi-tenancy, impacting Connections, Out-of-band, and DID Exchange managers, with the goal of eliminating a race condition possible when using mediation. Additionally, this PR also simplifies routing setup significantly for both mediation and multi-tenancy.\r\n\r\n### Mediation Race Condition during Connection Formation\r\n\r\nDuring connection formation, the current implementation of mediation support triggers a keylist update message to be sent just prior to sending the connection request or response (or a DID Exchange request or response) **without** waiting for confirmation from the mediator that the keylist update was received and processed successfully. This can result in a scenario where the connection request or response is received and responded to before the mediator has processed the keylist update. Typically, the keylist update process is quick and, especially when using the default HTTP transport mechanisms, the chances of things getting out of order are very slim. However, when introducing outbound queuing or another transport, this race condition has proven to be frequent.\r\n\r\n#### Mediation Client as Invitee\r\n![image](https://user-images.githubusercontent.com/22032832/176949299-2eef91a5-c4b6-47b6-994a-8d627637e696.png)\r\n\r\n#### Mediation Client as Inviter\r\n![image](https://user-images.githubusercontent.com/22032832/176950192-3f385598-5430-4085-9ec8-35ffdc3363e6.png)\r\n\r\n### Solution\r\nTo prevent this race condition, this PR adds the `/mediation/update-keylist/{conn-id}` Admin endpoint that is called after `receive-invitation` or `receive-request` and before `accept-invitation` or `accept-request`. This endpoint creates connection keys and sends those keys in a keylist update to the specified mediator. When combined with the changes in #1769, the controller can then wait for the keylist update response received webhook, match the thread_id to the id of the keylist update returned from `/mediation/update-keylist/{conn-id}`, and then proceed with the next step in the connection.\r\n\r\n![image](https://user-images.githubusercontent.com/22032832/176953386-630b8a1d-b9a6-45ca-b4d9-e2957ccbb6eb.png)\r\n\r\n![image](https://user-images.githubusercontent.com/22032832/176953427-1a4cdf60-72e5-4f2e-8e2f-a96840238c47.png)\r\n\r\n\r\nThis should look familiar; this is more or less how the old `establish-inbound` endpoint worked. However, a key difference and the next major addition of this PR is the new `RouteManager` abstract base class. Two concretions are included in this PR: one for standard Coordinate Mediation v1 route management and one for Multi-tenancy + Mediation, which handles base wallet route creation and routing through a base wallet mediator and/or a sub wallet mediator.\r\n\r\nUsing the `RouteManager` to abstract away routing details, the Connection, OOB, and DIDExchange managers have each been significantly simplified (IMHO :slightly_smiling_face:).\r\n\r\nSome additional notes:\r\n- This is a backwards compatible change. If `/mediation/update-keylist/{conn-id}` is not used, forming connections through a mediator should behave exactly as before.\r\n- This PR also corrects a slight misbehavior where both the base wallet's and sub wallet's mediator were informed of new connection keys being formed, even though the base wallet mediator was the only mediator in that chain that would have seen those keys.\r\n",
    "head_branch": "feature/manual-keylist-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1851 from sicpa-dlab/feature/manual-keylist-update\n\nEnable manually triggering keylist updates during connection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e85ac254a19ac29496f",
    "number": 1849,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.7.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1849 from swcurran/0.7.4\n\n0.7.4 Release Changelog and version update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e85ac254a19ac294970",
    "number": 1847,
    "body": "Test output with the error (mixing revocable and non-revocable credentials in one proof): https://github.com/hyperledger/aries-cloudagent-python/pull/1761#issuecomment-1165468687\r\n",
    "head_branch": "fix/credx-non-rev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1847 from andrewwhitehead/fix/credx-non-rev\n\nFix handling of non-revocable credential when timestamp is specified (askar/credx)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e86ac254a19ac294971",
    "number": 1846,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "update-supportedrfcs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1846 from swcurran/update-supportedrfcs\n\nUpdate the Supported RFCs document for 0.7.4 release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e87ac254a19ac294972",
    "number": 1845,
    "body": "Fixes #1839\r\n\r\nSigned-off-by: Ry Jones <ry@linux.com>",
    "head_branch": "ryjones-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1845 from hyperledger/ryjones-patch-1\n\nOnly run on main repo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e88ac254a19ac294973",
    "number": 1844,
    "body": "There is a typo in the example command to run the project using the docker container.\r\n\r\n```\r\nPORTS=\"5000:5000 8000:8000 1000:1000\" ./scripts/run_docker start --inbound-transport http 0.0.0.0 10000 --outbound-transport http --debug --log-level DEBUG\r\n```\r\n\r\nIt opens the port 1,000 for access instead of 10,000 which is specified as \"inbound-transport\". As a result, the agent wouldn't be accessible. ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1844 from feknall/main\n\nFix a typo in DevReadMe.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e89ac254a19ac294974",
    "number": 1840,
    "body": "Setting the prefix makes the test output much clearer:\r\n\r\n> Acme.agent | Received transaction message: transaction_endorsed\r\n> INFO:aiohttp.access:172.17.0.1 [23/Jun/2022:13:48:00 +0000] \"POST /webhooks/topic/endorse_transaction/ HTTP/1.1\" 200 149 \"-\" \"Python/3.6 aiohttp/3.8.1\"\r\n> Bob.agent  | Received transaction message: transaction_endorsed\r\n\r\ncompared to:\r\n\r\n> Aries      | Received transaction message: transaction_endorsed\r\n> INFO:aiohttp.access:172.17.0.1 [23/Jun/2022:13:48:00 +0000] \"POST /webhooks/topic/endorse_transaction/ HTTP/1.1\" 200 149 \"-\" \"Python/3.6 aiohttp/3.8.1\"\r\n> Aries      | Received transaction message: transaction_endorsed\r\n",
    "head_branch": "fix/int-test-prefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1840 from andrewwhitehead/fix/int-test-prefix\n\nSet prefix for integration test demo agents; some code cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e8aac254a19ac294975",
    "number": 1838,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.7.4-rc5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1838 from swcurran/0.7.4-rc5\n\n0.7.4-rc5 changelog, version and ReadTheDocs updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e8aac254a19ac294976",
    "number": 1837,
    "body": "When deploying different agents on same gateway url in service mesh there occures some problem cause static swagger path und swagger.json has no unique uri. This PR enables a baseurl to be set for the swagger urls mentioned via the environment variable ACA_PY_BASE_URL:\r\nUntil now, the static swagger path and swagger.json path is always the default value set in setup_aiohttp_apispec (static/swagger for 'static_path' and /api/docs/swagger.json for 'url'). By setting the ACA_PY_BASE_URL, the path can now be adjusted so that the urls can be set to{ACA_PY_BASE_URL }/api/docs/swagger.json. The urls can then be easily resolved in the virtual service via unique urls.",
    "head_branch": "0.7.4-rc2-set-baseurl-aiohttp-apispec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e8bac254a19ac294977",
    "number": 1836,
    "body": "When adding admin routes through plugins, it makes sense for the plugin to be able to specify that those routes should be accessible to the base wallet when appropriate.",
    "head_branch": "feature/configurable-route-access",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1836 from dbluhm/feature/configurable-route-access\n\nfeat: make base wallet route access configurable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e8cac254a19ac294978",
    "number": 1835,
    "body": "When deploying different agents on same gateway url in service mesh there occures some problem cause static swagger path und swagger.json has no unique uri. This PR enables a baseurl to be set for the swagger urls mentioned via the environment variable ACA_PY_BASE_URL:\r\nUntil now, the static swagger path and swagger.json path is always the default value set in setup_aiohttp_apispec (static/swagger for 'static_path' and /api/docs/swagger.json for 'url'). By setting the ACA_PY_BASE_URL, the path can now be adjusted so that the urls can be set to ${ACA_PY_BASE_URL }/static/swagger or ${ACA_PY_BASE_URL }/api/docs/swagger.json. The urls can then be easily resolved in the virtual service via unique urls.",
    "head_branch": "0.7.4-rc2-set-baseurl-aiohttp-apispec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e8dac254a19ac294979",
    "number": 1834,
    "body": "Signed-off-by: Ry Jones <ry@linux.com>",
    "head_branch": "ryjones-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1834 from hyperledger/ryjones-patch-1\n\nUse local deps only"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e8eac254a19ac29497a",
    "number": 1833,
    "body": "This PR implements some minor improvements on the type hints for the Settings classes and adds a class for `PluginSettings`. While working with plugins with configuration stored in ACA-Py's settings object, we often find ourselves needing to write lines like the following:\r\n\r\n```python\r\nvalue = cast(dict, context.settings.get(\r\n    \"plugin_config\", {}\r\n)).get(\r\n    \"my_plugin\", {}\r\n).get(\"value\", DEFAULT_VALUE)\r\n```\r\n\r\nWith this PR, we can now use:\r\n\r\n```python\r\nvalue = context.settings.for_plugin(\"my_plugin\").get(\"value\", DEFAULT_VALUE)\r\n```\r\nOr\r\n```python\r\nsettings = context.settings.for_plugin(\"my_plugin\")\r\nvalue = settings.get(\"value\", DEFAULT_VALUE)\r\n```\r\n\r\nThe plugin settings object is immutable. This decision was made to encourage plugin authors to handle mutable values through either objects injected into the context on startup or by storing values in a record.\r\n\r\nIt's a minor quality of life tweak but this adds more structure to plugin configuration and value retrieval that I think was previously lacking while also improving readability.",
    "head_branch": "feature/improve-settings-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1833 from dbluhm/feature/improve-settings-types\n\nImprove typing of settings and add plugin settings object"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e8fac254a19ac29497b",
    "number": 1831,
    "body": "Signed-off-by: Ry Jones <ry@linux.com>",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1831 from hyperledger-cicd/main\n\nEnable pip-audit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e90ac254a19ac29497c",
    "number": 1830,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.7.4-rc4-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1830 from swcurran/0.7.4-rc4-changelog\n\nUpdate changelog and version for 0.7.4-rc4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e90ac254a19ac29497d",
    "number": 1829,
    "body": null,
    "head_branch": "upd/pyjwt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1829 from andrewwhitehead/upd/pyjwt\n\nUpdate pyjwt to 2.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e91ac254a19ac29497e",
    "number": 1827,
    "body": "Fixes #1823 broken in #1804\r\n\r\nRan against integration tests T002-TAA and T003-TAA which were previously failing.",
    "head_branch": "fix/upd-crd-rev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1827 from andrewwhitehead/fix/upd-crd-rev\n\nFix IssuerCredRevRecord state update on revocation publish"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e92ac254a19ac29497f",
    "number": 1824,
    "body": "\r\n\r\nI got error messages when following the instructions and tried the updated version, which worked.\r\n\r\nSigned-off-by: lineko <36633510+lineko@users.noreply.github.com>",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1824 from lineko/patch-1\n\nUpdate POST /present-proof/send-request to POST /present-proof-2.0/send-request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e93ac254a19ac294980",
    "number": 1820,
    "body": "- resolve #1755 ",
    "head_branch": "issue#1755",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1820 from shaangill025/issue#1755\n\nFix: Present Proof v2 - check_proof_vs_proposal update to support proof request with restrictions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e94ac254a19ac294981",
    "number": 1818,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "troubleshooting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1818 from swcurran/troubleshooting\n\nAdd troubleshooting document, include initial examples - ledger connection, out-of-sync RevReg"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e95ac254a19ac294982",
    "number": 1817,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.7.4-rc3-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1817 from swcurran/0.7.4-rc3-changelog\n\nChangelog, version and ReadTheDocs updates for 0.7.4-rc3 release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e96ac254a19ac294983",
    "number": 1816,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1816 from ianco/master\n\nFix missing webhook handler"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e96ac254a19ac294984",
    "number": 1814,
    "body": "Modified files:\r\n- [x] demo/faber-local.sh\r\n- [x] demo/runners/agent_container.py\r\n- [x] demo/runners/faber.py\r\n- [x] demo/runners/performance.py\r\n- [x] demo/runners/support/agent.py\r\n\r\nPossible upgrades:\r\n- set the schema name to a constant\r\n- update readme\r\n",
    "head_branch": "refactor/faber-basic-functionality",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e97ac254a19ac294985",
    "number": 1813,
    "body": "This updates the revocation registry initialization process.\r\n\r\nPreviously, an event was fired using `profile.notify`, which led to an `IssuerRevRegRecord` being created and the associated revocation registry being generated. Now, the `IssuerRevRegRecord` is created first, and then the event is fired, which leads to the registry generation. This allows the detection of a registry in progress and helps to avoid multiple revocation registries being created in parallel for the same credential definition.\r\n\r\nAlso, the tails file is now uploaded after the registry definition is posted and before the first entry is posted, instead of after the first entry is posted. This ensures that the registry doesn't enter the ACTIVE state until after the tails file is publicly available.",
    "head_branch": "fix/revoc-tails",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1813 from andrewwhitehead/fix/revoc-tails\n\nRefactoring of revocation registry creation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e98ac254a19ac294986",
    "number": 1812,
    "body": "As the code currently stands, only internal outbound transports are able to be loaded. With these changes, it should be possible to load a new outbound transport via a plugin.",
    "head_branch": "feature/allow-external-outbound-methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1812 from Indicio-tech/feature/allow-external-outbound-methods\n\nFix external Outbound Transport loading code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e99ac254a19ac294987",
    "number": 1811,
    "body": "- resolve #1809 ",
    "head_branch": "issue#1809",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1811 from shaangill025/issue#1809\n\nFix: present-proof v1 send-proposal flow"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e9aac254a19ac294988",
    "number": 1808,
    "body": "I believe this fix only applies to tails file uploads at the moment. Previously, aiohttp would encounter an error because it closed the tails file after the first attempt.",
    "head_branch": "fix/put-redirect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1808 from andrewwhitehead/fix/put-redirect\n\nFix put_file when the server returns a redirect"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e9bac254a19ac294989",
    "number": 1804,
    "body": null,
    "head_branch": "fix/revoc-txn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1804 from andrewwhitehead/fix/revoc-txn\n\nAdjust revocation registry update procedure to shorten transactions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e9cac254a19ac29498a",
    "number": 1802,
    "body": "Signed-off-by: shaangill025 [gill.shaanjots@gmail.com](mailto:gill.shaanjots@gmail.com)\r\n\r\n- resolve #1790 \r\n- resolve #1791\r\n\r\nClosed original PR #1792 due to merge issues.",
    "head_branch": "issue#1791",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1802 from shaangill025/issue#1791\n\nFix: Inbound Transport is_external attribute"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e9dac254a19ac29498b",
    "number": 1800,
    "body": "Signed-off-by: shaangill025 <gill.shaanjots@gmail.com>\r\n\r\n- resolve #1786 ",
    "head_branch": "issue#1786",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1800 from shaangill025/issue#1786\n\nFix: Duplicated schema and cred_def - Askar and Postgres"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e9dac254a19ac29498c",
    "number": 1797,
    "body": "As mentioned in #1789, there is no way to currently filter for connections/invited created via the OOB handler. This commit adds a filter query parameter to filter with the invitation message ID.\r\n- resolve #1789 ",
    "head_branch": "feature/invitation-connection-filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1797 from Indicio-tech/feature/invitation-connection-filter\n\nfeat: Add filter param to connection list for invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e9eac254a19ac29498d",
    "number": 1795,
    "body": null,
    "head_branch": "feat-IDCORE-4594-wallet-source",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214e9fac254a19ac29498e",
    "number": 1792,
    "body": "Signed-off-by: shaangill025 <gill.shaanjots@gmail.com>\r\n- resolve #1790\r\n- resolve #1791",
    "head_branch": "cleanup_redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea0ac254a19ac29498f",
    "number": 1785,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "fix/tails_upload_multi2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1785 from ianco/fix/tails_upload_multi2\n\nFix tails server upload multi-ledger mode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea1ac254a19ac294990",
    "number": 1784,
    "body": null,
    "head_branch": "fix/tails_upload_multi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea2ac254a19ac294991",
    "number": 1783,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nThis PR is good to go:\r\n\r\n- added a couple of endpoints to get more detailed revocation info out of the wallet and leger\r\n- added an endpoint to post a ledger correcting entry (based on script from @andrewwhitehead )\r\n- fixed askar credential revocation state\r\n- added a new parameter to alice/faber `--taa-accept` to enforce TAA acceptance when required\r\n- added some integration tests and some docs - tested using indy and askar wallets\r\n",
    "head_branch": "feature/revoc_updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1783 from ianco/feature/revoc_updates\n\nAdditional endpoints to get revocation details and fix \"published\" status"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea2ac254a19ac294992",
    "number": 1778,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1778 from ianco/master\n\nDocument impact of multi-ledger on TAA acceptance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea3ac254a19ac294993",
    "number": 1777,
    "body": "Askar, on error, would end up not returning connections to the connection pool because aca-py left the connections open.",
    "head_branch": "fix/fix-askar-close-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1777 from Indicio-tech/fix/fix-askar-close-bug\n\nfix: add a close statement to ensure session is closed on error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea4ac254a19ac294994",
    "number": 1776,
    "body": "Signed-off-by: Akiff Manji <akiff.manji@gmail.com>",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1776 from petridishdev/main\n\nAdds `transport_id` variable assignment back to outbound enqueue method"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea5ac254a19ac294995",
    "number": 1774,
    "body": "After talking with Timo, the document loader uses a separate thread due to the fact that PyLD is synchronous code and calls \r\ninto the document loader (which requires asynchronous code). When swapping out the cache with (for example) a Redis based cache, the exception `got Future attached to a different loop` may arise due to the current separate thread/event loop based implementation.\r\n\r\nSwitching to `nest_asyncio` over using a separate thread/event loop resolves the issues that were observed.",
    "head_branch": "fix/document-loader-thread",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1774 from Indicio-tech/fix/document-loader-thread\n\nReplace async workaround within document loader"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea6ac254a19ac294996",
    "number": 1771,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1771 from swcurran/main\n\n0.7.4-rc2 update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea6ac254a19ac294997",
    "number": 1770,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "0.7.4-rc2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1770 from swcurran/0.7.4-rc2\n\n0.7.4-rc2 update, including some ReadTheDocs File updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea7ac254a19ac294998",
    "number": 1769,
    "body": "This PR adds emission of an event and webhook on keylist update stored. This event simply completes the feedback loop for mediation related actions and enables the controller to keep track of mediation routing state.",
    "head_branch": "feature/keylist-webhooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1769 from sicpa-dlab/feature/keylist-webhooks\n\nfeat: event and webhook on keylist update stored"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea8ac254a19ac294999",
    "number": 1761,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "default-askar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1761 from ianco/default-askar\n\nUse default wallet type askar for alice/faber demo and bdd tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ea9ac254a19ac29499a",
    "number": 1759,
    "body": null,
    "head_branch": "feat-IDCORE-4488-askar-0.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eaaac254a19ac29499b",
    "number": 1757,
    "body": "Signed-off-by: shaangill025 <gill.shaanjots@gmail.com>\r\n- resolve #1754 \r\n- Both v1 and v2",
    "head_branch": "issue#1754",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1757 from shaangill025/issue#1754\n\nProver - verification outcome from presentation ack message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eaaac254a19ac29499c",
    "number": 1753,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "074-rc1-tweak-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1753 from swcurran/074-rc1-tweak-2\n\n0.7.4-RC1 Changelog intro paragraph - fix copy/paste error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eabac254a19ac29499d",
    "number": 1752,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "074-rc1-tweak",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1752 from swcurran/074-rc1-tweak\n\nFixing the intro paragraph and heading in the changelog of this 0.7.4RC1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eacac254a19ac29499e",
    "number": 1751,
    "body": "`--monitor-revocation-notification` and `--notify-revocation` have a\r\nname conflict with their corresponding environment variables. Now they\r\ndon't have a conflict.\r\n\r\nSigned-off-by: Colton Wolkins (Indicio work address) <colton@indicio.tech>",
    "head_branch": "fix/revocation-env-var-names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1751 from Indicio-tech/fix/revocation-env-var-names\n\nfix: Resolve Revocation Notification environment variable name collision"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eadac254a19ac29499f",
    "number": 1749,
    "body": null,
    "head_branch": "feature/delete-mediation-record-async",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1749 from globalid/feature/delete-mediation-record-async\n\nAdded async with for mediator record delete"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eaeac254a19ac2949a0",
    "number": 1748,
    "body": "- resolve #1743 \r\n- @PaulWen This will dispatch a webhook [topic: `acapy::problem_report`] with the payload containing `cred_def_id` [pthid], `revoc_reg_id` [thid] and the reason. \r\nI think you expected this information to be presented in either `POST /credential-definitions` or `/topic/revocation_registry` webhook. Within `POST /credential-definitions`, the cred_def is written to the wallet and ledger but the upload of the tails file gets done separately as a registered event [EventBus], so it is difficult to show the error here. With `/topic/revocation_registry` webhook, based upon what I found, it is only triggered for [`init`, `generated`, `posted`, `active`] states.\r\n- Regarding ACA-Py logs, this was already implemented and you should have seen something like:\r\n```\r\n2022-04-27 21:04:45,521 aries_cloudagent.core.event_bus ERROR Error occurred while processing event\r\nTraceback (most recent call last):\r\n  File \"/home/indy/aries_cloudagent/core/event_bus.py\", line 120, in notify\r\n    await processor()\r\n  File \"/home/indy/aries_cloudagent/revocation/routes.py\", line 1274, in on_revocation_tails_file_event\r\n    raise RevocationError(err_msg)\r\naries_cloudagent.revocation.error.RevocationError: Tails file for rev reg W1dd41kbhMNopR5h38PWsm:4:W1dd41kbhMNopR5h38PWsm:3:CL:8:test205:CL_ACCUM:1d809179-3108-4f53-ba1b-a8c57a87d14c failed to upload: Exceeded maximum put attempts\r\n```",
    "head_branch": "issue#1743",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eafac254a19ac2949a1",
    "number": 1747,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "prep-for-074-rc1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1747 from swcurran/prep-for-074-rc1\n\nUpdates to Changelog for 0.7.4. RC1 release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eafac254a19ac2949a2",
    "number": 1746,
    "body": "… setup\r\n\r\nSigned-off-by: Thomas Diesler <tdiesler@redhat.com>",
    "head_branch": "ghi1745",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1746 from tdiesler/ghi1745\n\n[#1745] Fetch from --genesis-url likely to fail in composed container…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb0ac254a19ac2949a3",
    "number": 1741,
    "body": null,
    "head_branch": "update/rlp-dep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb1ac254a19ac2949a4",
    "number": 1740,
    "body": null,
    "head_branch": "fix/key-iter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1740 from andrewwhitehead/fix/key-iter\n\nFix iteration over key list, update Askar to 0.2.5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb2ac254a19ac2949a5",
    "number": 1739,
    "body": "Fixes parenthesis in web hook url logic for presentation request in Faber demo",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1739 from petridishdev/main\n\nFixes logic for web hook formatter in Faber demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb3ac254a19ac2949a6",
    "number": 1738,
    "body": "I do not know if this is a complete list, but I think this might be useful information for anyone getting started on implementing their own controllers.\r\n\r\nSigned-off-by: Philipp Etschel <philipp.etschel@ch.bosch.com>",
    "head_branch": "feature/open-api-client-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1738 from boschresearch/feature/open-api-client-doc\n\nDocumentation on existing language wrappers for aca-py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb4ac254a19ac2949a7",
    "number": 1737,
    "body": "As part of #1734, I found that the Revocation Notification V2 code\r\nfailed to properly run due to the fact that the V1 code was deleting the\r\nDB objects before V2 could get to it. @dbluhm and I decided that adding\r\nan option to deny specific plugins from loading was one of the better\r\nsolutions to the problem.\r\n\r\nBefore the plugin has been initialized, any plugins listed within\r\n`--deny-plugins` will be unregistered to prevent them from initializing\r\nand potentially interferring with other plugins that have conflicts.\r\n\r\nSigned-off-by: Colton Wolkins (Indicio work address) <colton@indicio.tech>",
    "head_branch": "feat/deny-plugin-config-option",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1737 from Indicio-tech/feat/deny-plugin-config-option\n\nFeature: Add the ability to deny specific plugins from loading"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb4ac254a19ac2949a8",
    "number": 1734,
    "body": "This PR implements Revocation Notification V2, as described in https://github.com/hyperledger/aries-rfcs/pull/721. At this time, V1 takes precedence over V2 when a revocation occurs and V2 never gets fired off. After talking with @dbluhm, I plan to implement a config option to disable/exclude the loading of specific plugins so that, in terms of configuration, one can disable V1 notifications to allow V2 notifications to be triggered. Since Indy-Anoncreds are currently the only standard to be implemented at this time, there are a few hard coded values pointing to \"indy-anoncreds\" until such a time where a second credential revocation format needs to be implemented.",
    "head_branch": "feat/revocation-notification-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1734 from Indicio-tech/feat/revocation-notification-v2\n\nFeat/revocation notification v2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb5ac254a19ac2949a9",
    "number": 1729,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "fix/base-wallet-query-mediator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1729 from sicpa-dlab/fix/base-wallet-query-mediator\n\nfeat: allow querying default mediator from base wallet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb6ac254a19ac2949aa",
    "number": 1726,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nSee issue https://github.com/hyperledger/aries-cloudagent-python/issues/1703\r\n",
    "head_branch": "fix/endorse-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1726 from ianco/fix/endorse-did\n\nUse provided connection_id if provided"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb7ac254a19ac2949ab",
    "number": 1725,
    "body": "Tokens will now include an `iat` value which is also stored in the wallet record. If the `iat` of the JWT doesn't match the user won't be authorized. This means when a new token is created (using the multitenant apis) the old token becomes invalid.\r\n\r\nLooking for some input if this is a desired approach. It is a breaking change as previously you would always get the same token, while now you always get a new token revoking the older tokens.",
    "head_branch": "feat/rotate-wallet-token",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1725 from TimoGlastra/feat/rotate-wallet-token\n\nfeat: create new JWT tokens and invalidate older for multitenancy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb8ac254a19ac2949ac",
    "number": 1722,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1722 from swcurran/main\n\nPrep for adding the 0.7.4-rc0 tag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb8ac254a19ac2949ad",
    "number": 1721,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nSee issue:  https://github.com/hyperledger/aries-cloudagent-python/issues/1707\r\n",
    "head_branch": "fix/issue-1707",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1721 from ianco/fix/issue-1707\n\nDuplicate checking for schema and cred def"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eb9ac254a19ac2949ae",
    "number": 1720,
    "body": "Also updates demo to use `WEBHOOK_TARGET`, when supplied, to construct presentation request exchange urls ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1720 from petridishdev/main\n\nAdds support to faber demo for returning json response in connectionless proof-requests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ebaac254a19ac2949af",
    "number": 1719,
    "body": "When working in managed multi-tenancy mode, we store the keys for the sub-wallets within a WalletRecord in ACA-Py. These keys are then recalled when needed and used to unlock the wallet for processing messages or admin API requests intended for that sub-wallet. In the process of opening the wallet, the key is pushed through a key derivation algorithm to transform it into a wallet encryption key. This key derivation algorithm is a costly operation.\r\n\r\nThis PR implements allowing the key derivation method to be specified when creating a sub-wallet. This means that a multi-tenant ACA-Py agent can elect to use the `RAW` derivation method, for instance, and significantly reduce the wallet open cost.\r\n\r\nSince these keys are securely stored in ACA-Py, using a `RAW` key does not seem to impact security of the key. Additionally, I don't think the profile of potential attack changes from using the key derivation method when considering wallet tokens.\r\n\r\nCredit to @burdettadam.",
    "head_branch": "feature/key-derivation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1719 from sicpa-dlab/feature/key-derivation\n\nAllow specifying key derivation method on sub-wallet create"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ebbac254a19ac2949b0",
    "number": 1718,
    "body": "- Related to issue #1687, there was a bug in DIF presentation proposal code where the presentation request created from the proposal with auto flags was not according to the marshmallow schema. This rendered multiple present-proof-v2 endpoints unusable due to schema validation error. This bug was fixed in PR #1690.\r\n- This PR is a recreation of @matgnt PR#1701 as some tests were failing after rebase but local tests were passing. Changes here allow for the deletion of such records. For now, it only handles `V20PresExRecord` but if required it can be extended to other BaseExchangeRecord.",
    "head_branch": "delete_pres_exch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1718 from shaangill025/delete_pres_exch\n\nAllow deletion of invalid V20PresExRecord - failing schema validation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ebcac254a19ac2949b1",
    "number": 1716,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nFixes issue: https://github.com/hyperledger/aries-cloudagent-python/issues/1703\r\n",
    "head_branch": "fix/issue-1703",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1716 from ianco/fix/issue-1703\n\nFix order of operations connecting faber to endorser"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ebdac254a19ac2949b2",
    "number": 1715,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>\r\n- resolve #1330 \r\n- Closed PR #1709, there were issues applying `fixup` during rebase to cleanup commit history. I thought it is safer to recreate the PR as it has minor changes.\r\n\r\n@MonolithicMonk ACAPY_INBOUND_TRANSPORT should be specified as `ACAPY_INBOUND_TRANSPORT=[[\\\"http\\\",\\\"0.0.0.0\\\",\\\"8021\\\"]]` and not as `ACAPY_INBOUND_TRANSPORT=[[\"http\",\"0.0.0.0\",\"8021\"]]`\r\n\r\nYou can pass environment variables using `ENV_VARS` variable [similar to `PORTS`]. For your reference:\r\n```\r\nPORTS=\"5002 8002\" ENV_VARS=\"ACAPY_INBOUND_TRANSPORT=[[\\\"http\\\",\\\"0.0.0.0\\\",\\\"8021\\\"]]\" \\ \r\n./scripts/run_docker start ......\r\n``` ",
    "head_branch": "run_docker_script_env_vars",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1715 from shaangill025/run_docker_script_env_vars\n\nrun_docker start - pass environment variables"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ebdac254a19ac2949b3",
    "number": 1714,
    "body": "Signed-off-by: DaevMithran <daevmithran1999@gmail.com>\r\n\r\nUpdated pull request changes suggested by @TimoGlastra \r\n\r\n- Raising an http bad request error when a seed is passed in the body and wallet-allow-insecure-seed is not enabled\r\n- Updated schema for wallet/did/create",
    "head_branch": "Issue-1682",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1714 from DaevMithran/Issue-1682\n\nAdd seed command line parameter but use only if also an \"allow insecure seed\" parameter is set"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ebeac254a19ac2949b4",
    "number": 1711,
    "body": "- resolve #1597 \r\n- Moved changes from PR #1610 to overcome the DCO issue from partially verified commit and subsequent manual sign-off. \r\n- More details and comments can be found [here](https://github.com/hyperledger/aries-cloudagent-python/pull/1610)",
    "head_branch": "7.3_fixes_new",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1711 from shaangill025/7.3_fixes_new\n\nFixes for v7.3.0 - Issue#1597"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ebfac254a19ac2949b5",
    "number": 1710,
    "body": "Adds support for connectionnless exchange using ICv1, ICv2, PPv1 and PPv2 protocols for both roles (so issuer, holder and verifier).\r\n\r\nCan be initiated by creating or receiving an oob invitation without handshake protocols. If a connection already exists for the did in the oob invitation service, the connection will be used instead (as specified in OOB RFC).\r\n\r\nFixes #1636\r\n\r\nSome notes on the implementation:\r\n- Added an `OobRecord` to keep track of the oob state. This is used for both connectionfull and connectionless exchanges and will be removed once the interaction is done\r\n- The oob record will also emit events at the moment about reuse of connections etc... To not make breaking changes I kept the old OOB reuse webhook events in place. May be good to remove these in a future PR\r\n- Connectionless is not integrated with mediation yet (when creating an invitation). If this is desired, maybe someone else can take a look at this\r\n- I disabled multi use when attachments were present in the invitation as this would never have worked (there's no support for multi-use requests, offers AFAIK?)\r\n- Adds a cleanup of stale connections if a connection is being reused by sending a direct response to an attachment message in the oob invitation (I think connections weren't being cleaned up in this case)\r\n\r\n~Keeping it in draft until I know for sure all CI tests have passed (can't run all tests on my M1 mac)~",
    "head_branch": "fix/oob-connectionless",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1710 from TimoGlastra/fix/oob-connectionless\n\nfeat: support connectionless exchange"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec0ac254a19ac2949b6",
    "number": 1709,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>\r\n- resolve #1330 \r\n- @MonolithicMonk I think you are starting ACA-Py agent from `./scripts/run_docker start ...`. You can either specify the environment variables in `./scripts/run_docker` by adding each one of them as something like:\r\n```\r\n$CONTAINER_RUNTIME run --rm -ti --name \"aries-cloudagent-runner_${RAND_NAME}\" \\\r\n-e ACAPY_OUTBOUND_TRANSPORT=http -e ACAPY_INBOUND_TRANSPORT=[[\\\"http\\\",\\\"0.0.0.0\\\",\\\"8021\\\"],[\\\"ws\\\",\\\"0.0.0.0\\\",\\\"8023\\\"]] \\\r\n    $ARGS aries-cloudagent-run \"$@\"\r\n```\r\n- Another option [if this PR is approved and merged], is just to export the `environment variable` as usual. Updated script will go through all the `environment variables`, extract all with `*ACAPY_*` and `*=*` pattern match and add them to `docker run ... -e env_var -e env_var .....`.\r\n",
    "head_branch": "issue#1130_followup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec1ac254a19ac2949b7",
    "number": 1706,
    "body": "Please review the updates to the multitenancy docs.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1706 from MonolithicMonk/main\n\nMultitenancy Docs Update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec2ac254a19ac2949b8",
    "number": 1705,
    "body": "- Added wallet startup parameter: --wallet-allow-insecure-seed\r\n- support seed in wallet/did/create route\r\n\r\nSome questions around\r\n1. How do we support importing a key pair into the wallet as mentioned in the Issue\r\n2. Should I add seed in the schema of wallet/did/create ? . I don't think we can add conditional schemas according to startup parameter.  I can have it as an optional field.",
    "head_branch": "Issue-1682",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1705 from DaevMithran/Issue-1682\n\nFix Issue-1682"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec2ac254a19ac2949b9",
    "number": 1704,
    "body": "Pin ursa-bbs-signatures to 1.0.1 as 1.0.2 has broken the tests as also described [here](https://github.com/hyperledger/aries-cloudagent-python/pull/1667#issuecomment-1082502125).\r\n\r\nWe've just discovered a 1.0.2. release was made yesterday by mistake and we're currently working on un-releasing the package or making a 1.0.3 release that fixes this issue.",
    "head_branch": "fix/use-ursa-bbs-signatures-101",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec3ac254a19ac2949ba",
    "number": 1702,
    "body": "Signed-off-by: DaevMithran <daevmithran1999@gmail.com>\r\n\r\nFix [https://github.com/hyperledger/aries-cloudagent-python/issues/1698](url)",
    "head_branch": "Issue-1698",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1702 from DaevMithran/Issue-1698\n\nAdd auto_verify flag in present-proof protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec4ac254a19ac2949bb",
    "number": 1701,
    "body": "Related to #1687 this allows deleting a presentation exchange\r\nrecord without reading it from storage.\r\n\r\n@shaangill025 Does it make sense to have something like this in addition to your change in #1690 to make sure we always have an option to delete an item without reading it?",
    "head_branch": "fix-deleting-pres-exchange",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec5ac254a19ac2949bc",
    "number": 1700,
    "body": "- resolve #1691 \r\n- Earlier `IndyLedgerRequestsExecutor` instance was retrieved by calling `profile.inject(IndyLedgerRequestsExecutor)` which would correspond to the `root_profile`. If the base `wallet_type` is basic then the `BaseLedger` instance will not be specified which caused the above issue. I have now updated the logic to create a new `IndyLedgerRequestsExecutor` instance for each sub wallet.",
    "head_branch": "issue#1691",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1700 from shaangill025/issue#1691\n\nFix: update IndyLedgerRequestsExecutor logic - multitenancy and basic base wallet type"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec6ac254a19ac2949bd",
    "number": 1697,
    "body": "@dbluhm suggested seeing if adding a platform target would allow docker to run the test scripts, which worked. I expect more changes for complete mac m1 development support but this seems to be a good starting point.\r\n\r\nSigned-off-by: Adam Burdett <burdettadam@gmail.com>",
    "head_branch": "fix/m1-run-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1697 from burdettadam/fix/m1-run-tests\n\nplatform target in run tests."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec6ac254a19ac2949be",
    "number": 1696,
    "body": "As stated in #1447, the changes by Harsh fix an issue where ACA-Py could not publish ATTRIB records because they were not signed by the endorser. We need those changes in for 0.7.4 if possible, but PR #1616 has not seen any updates and has merge conflicts with the latest changes in main. I have attempted to fix those merge conflicts and make the requested changes from @ianco in that PR, as well as fix all the unit test failures. \r\n\r\nThis closes #1616. I am not sure if more work is needed for #1447.",
    "head_branch": "fix/author-endorser-attrib-txn-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1696 from Indicio-tech/fix/author-endorser-attrib-txn-2\n\nEndorser support for updating DID endpoints on ledger"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec7ac254a19ac2949bf",
    "number": 1694,
    "body": "This PR adds in a number of events which are emitted when a message is undelivered.\r\n\r\nThese events can be leveraged by plugins to take certain actions when messages are undelivered, such as writing the message to a persistent queue, sending a push notification to a mobile device that attempted to send the message, or some other action.\r\n\r\nThe events leverage the existing `OutboundSendStatus` states and don’t supersede the current return value. The `OutboundSendStatus` is still returned within ACA-Py as it has been, so this shouldn’t impact any existing functionality, but I’d be happy to hear any concerns I’ve not thought of. Thanks to @dbluhm for his feedback prior to this PR being opened. ",
    "head_branch": "feature/undelivered-events",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1694 from Indicio-tech/feature/undelivered-events\n\nFeature/undelivered events"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec8ac254a19ac2949c0",
    "number": 1692,
    "body": "This PR is intended to supersede #928. Due to significant changes since the original PR was opened, I cherry-picked a commit but had to modify it. History has not been well preserved, unfortunately. Credit to @TimoGlastra for the original work on the `ProfileCache` especially and for assistance in finding the solution implemented here.\r\n\r\nThis PR adds a LRU cache for profiles opened by `MultitenantManager` (corresponding to wallet types `indy` and `askar`, but not `askar-profile`). `weakref.finalize` is used to ensure the profiles are closed when they fall out of scope. An ordered dictionary of profiles holds a (strong) reference to the profile until it is evicted. If that profile happens to still be in use at the time it is evicted, it will not be closed until other (strong) references to it expire, i.e. after processing of a message or admin request has finished. This exact scenario is unlikely but possible.\r\n\r\nIn addition to this profile caching mechanism, I also updated a few aspects of the `BaseMultitenantManager` and its subclasses to make them more consistent with conventions used in ACA-Py.\r\n\r\nAlso, after being very confused by handling of askar profiles (not to be confused with `AskarProfile`s) within the `AskarProfileMultitenantManager` and `AskarProfile`, I did some light updates to (I hope) improve clarity.\r\n\r\nA brief listing of known limitations:\r\n- ~As implemented, the capacity of the LRU cache is statically defined as 100.~\r\n- A temporally based system for evicting profiles from the cache is likely better than a max capacity based system.\r\n\r\nUpdate:\r\nI've taken a pass at improving the multitenancy-config argument. It will still accept json (read: this shouldn't be a breaking change) but it will now also accept `key=value` pairs. I'm still a bit iffy on whether these shouldn't just be their own separate arguments though...",
    "head_branch": "feature/multitenant-profile-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1692 from sicpa-dlab/feature/multitenant-profile-cache\n\nMulti-tenancy stale wallet clean up"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ec9ac254a19ac2949c1",
    "number": 1690,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>\r\n- resolve #1687 \r\n- So the validation for `/present-proof-v2.0/send-proposal` is working but the problem was that with `auto_respond_presentation_proposal` flag on it would create an invalid bound request from the proposal [`input_descriptors` was not enclosed in `presentation_definition`]. I am surprised that I didn't catch this earlier.\r\n- @swcurran According to the [RFC](https://github.com/hyperledger/aries-rfcs/blob/main/features/0510-dif-pres-exch-attach/README.md#examples-propose-presentation), the `propose-presentation` message only expects `input_descriptors` and no `options` [for `challenge` and/or `domain`]. With auto flag, there will be no opportunity to add a domain to the request, so I have updated the schema to allow `options` in the `propose-presentation` message. `challenge` is always required for verifying presentation, if `options` is not specified then it is randomly assigned.",
    "head_branch": "issue#1687",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1690 from shaangill025/issue#1687\n\nFix: DIF proof proposal when creating bound presentation request [Issue#1687]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ecaac254a19ac2949c2",
    "number": 1688,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "docs-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1688 from ianco/docs-cleanup\n\nRemove references to play with von"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ecbac254a19ac2949c3",
    "number": 1683,
    "body": null,
    "head_branch": "feat-IDENT-4220-proof-request-pres-by-thread",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eccac254a19ac2949c4",
    "number": 1676,
    "body": "- resolve #1608 \r\n- resolve #1609\r\n- Fixed an issue with OOB workflow, unused connections were not deleted with invitation containing request attachments.\r\n- DIF PE: fixed an issue where numerical comparisons are requested for an attribute that could be included as a number string.",
    "head_branch": "issue#1662",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1676 from shaangill025/issue#1662\n\nFix DIF PresExch and OOB request_attach delete unused connection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eccac254a19ac2949c5",
    "number": 1675,
    "body": "signed-off-by: Thomas Diesler <tdiesler@redhat.com>",
    "head_branch": "ghi1674",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1675 from tdiesler/ghi1674\n\n[#1674] Add basic DOCKER_ENV logging for run_demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ecdac254a19ac2949c6",
    "number": 1672,
    "body": "…on-revocable cred\r\n\r\nSigned-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\n(the branch is incorrectly named against the wrong issue oops)",
    "head_branch": "fix/issue-1669",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1672 from ianco/fix/issue-1669\n\nAdd an integration test for mixed proof with a revocable cred and a n…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eceac254a19ac2949c7",
    "number": 1671,
    "body": "This PR adds [pre-commit](https://pre-commit.com/) and associated configuration. This is more or less a tool for installing git hooks that check flake8 and black before committing. When used, this helps prevent follow up commits for formatting changes with black or correcting complaints from flake8.\r\n\r\nThere is also a configuration for installing hooks for checking that the commit message conforms to [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/).\r\n\r\nIt is possible to use the pre-commit hooks (flake8 and black) without the commit-msg hooks (commitlint) and vice-versa. Contributors can also ignore pre-commit altogether -- this is purely opt-in and must be explicitly installed.\r\n\r\nPre-commit is a pretty widely used tool in the python community and is analogous to [husky](https://typicode.github.io/husky/) in the javascript community. I've had these configuration files hanging out in my local fork of the ACA-Py repo and have been happily using them for more than a year.",
    "head_branch": "chore/pre-commit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1671 from dbluhm/chore/pre-commit\n\nAdd pre-commit as optional developer tool"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ecfac254a19ac2949c8",
    "number": 1670,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nFixes issue #1541\r\n",
    "head_branch": "fix/did-exch-self-connect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1670 from ianco/fix/did-exch-self-connect\n\nQualify did exch connection lookup by role"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed0ac254a19ac2949c9",
    "number": 1668,
    "body": "Attempt to fix an issue with blank credential values seen in the test harness.",
    "head_branch": "fix/store-response",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1668 from andrewwhitehead/fix/store-response\n\nFixes for credential details in issue-credential webhook responses"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed1ac254a19ac2949ca",
    "number": 1667,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>\r\n\r\nresolve #1474 ",
    "head_branch": "issue#1474",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1667 from shaangill025/issue#1474\n\nFix: present-proof v2 send-proposal [issue#1474]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed2ac254a19ac2949cb",
    "number": 1666,
    "body": "Incorrectly pushed to the official Hyperledger repository\r\n",
    "head_branch": "chore/initialisation-script-for-caa",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed2ac254a19ac2949cc",
    "number": 1665,
    "body": "Removes the check to notify in the `on_revocation_published` event handler. This check in the `on_revocation_published` would only take the global config option into account, meaning it doesn't matter if you provided `notify: true` in the `/revoke` endpoint.\r\n\r\nA`RevNotificationRecord` is only created if a notification should be sent (either global agent config, or `notify` prop in the revoke endpoint). So if a record exists I think we can assume that a notification should be sent as otherwise the record wouldn't exist in the first place. Maybe I'm missing something?\r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/681e9aab9a6f6d3e76484d02ccb969d3227bf34f/aries_cloudagent/revocation/manager.py#L116-L126\r\n\r\n",
    "head_branch": "fix/always-notify-if-notification-record",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1665 from hyperledger/fix/always-notify-if-notification-record\n\nfix: always notify if revocation notification record exists"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed3ac254a19ac2949cd",
    "number": 1663,
    "body": "As an Author, if I attempt to publish duplicate schemas or credential definitions, I get a trace stack returned to me complaining about how the `signed_txn` key does not exist. While I adding a response for that situation (to just return the schema ID/ Cred Def ID instead of an error), I noticed that we were never populating the `\"sent\"` key in our responses to controllers. I have standardized the responses to follow the OpenAPI Schema and included the `\"sent\"` key.",
    "head_branch": "fix/prevent-error-on-duplicate-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1663 from Indicio-tech/fix/prevent-error-on-duplicate-schema\n\nAdd \"sent\" key to both Schema and Cred Defs when using Endorsers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed4ac254a19ac2949ce",
    "number": 1660,
    "body": "Related to #1619 ",
    "head_branch": "fix/send-cred-ack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1660 from andrewwhitehead/fix/send-cred-ack\n\nRevert change to send_credential_ack return value"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed5ac254a19ac2949cf",
    "number": 1659,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>",
    "head_branch": "cleanup_redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1659 from shaangill025/cleanup_redis\n\nRedis PQ Cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed6ac254a19ac2949d0",
    "number": 1658,
    "body": "The change shows what might be necessary to support \"Option 3\" described in #1657 \r\n\r\nStill needs discussion whether this is the desired way to go.",
    "head_branch": "base-wallet_register_nym-1657",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed7ac254a19ac2949d1",
    "number": 1655,
    "body": "When publishing a new credential definition to the ledger (with the Author/Endorser workflow), the `cred_def_id` is nowhere to be found in the transaction response or the webhooks. I have moved the metadata definition lines for `cred_def_id` and `issuer_id` to the actual definition point for the metadata and have removed the redundant lines that were in an if block.",
    "head_branch": "fix/missing-creddef-id-in-transact",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1655 from Indicio-tech/fix/missing-creddef-id-in-transact\n\nAdd cred_def_id to metadata when using an Endorser"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed7ac254a19ac2949d2",
    "number": 1654,
    "body": "Also updates the rocket chat link to a discord link\r\n",
    "head_branch": "docs/attribution",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1654 from hyperledger/docs/attribution\n\ndocs: supported features attribution"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed8ac254a19ac2949d3",
    "number": 1653,
    "body": "Follow up to #1619",
    "head_branch": "fix/send-cred-ack-result",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1653 from andrewwhitehead/fix/send-cred-ack-result\n\nFix usage of send_credential_ack"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ed9ac254a19ac2949d4",
    "number": 1647,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "perf-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1647 from ianco/perf-demo\n\nPerformance demo updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214edaac254a19ac2949d5",
    "number": 1646,
    "body": "Update `Endorser.md` documentation to reflect the recent addition of `--auto-promote-author-did` parameter.\r\n\r\nSigned-off-by: Clément Humbert <clement.humbert@sicpa.com>",
    "head_branch": "update-endorser-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1646 from sicpa-dlab/update-endorser-doc\n\nUpdate Endorser documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214edbac254a19ac2949d6",
    "number": 1645,
    "body": "We noticed that a `V20PresExRecord` which is returned by the present-proof v2.0 `/verify-presentation` endpoint does not match its schema when DIF format is used to request a presentation. Because of this, parsing it into a Kotlin class fails:\r\n`com.squareup.moshi.JsonDataException: Expected one of [true, false] but was True at path $.verified`\r\n\r\nFixed this by applying json.dumps() when setting `pres_ex_record.verified` - just like it's done in the indy handler.\r\n\r\nHowever, couldn't `verified` be a boolean instead of a string? I found comments in the schema and in the indy handler saying it has to be a string to be used as a tag (that was my takeaway at least ;) ), but I couldn't find where it is actually declared or used that way.\r\n\r\nSigned-off-by: Roman Reinert <roman.reinert@gematik.de>",
    "head_branch": "fix/difpreshandler-verified",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1645 from rmnre/fix/difpreshandler-verified\n\nFix DIFPresFormatHandler returning invalid V20PresExRecord on presentation verification"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214edbac254a19ac2949d7",
    "number": 1643,
    "body": "Adds option to accept the TAA using config parameters in addition to the Admin API and using TTY.\r\n\r\nThe TAA can be accepted by providing a valid acceptance mechanism, and specifying the version. This is to make sure newer versions of the TAA aren't automatically accepted. If the version does not match, or the acceptance mechanism doesn't exist in the aml, an error is thrown and the process is terminated (this seems fine to me as it is run on startup and can be fatal to using the agent).\r\n\r\nThe configuration is as follows:\r\n\r\n```\r\n--accept-taa on_file 1.0\r\n```\r\n\r\nor in the yml config:\r\n\r\n```yml\r\naccept-taa: [on_file, 1.0]\r\n```\r\n\r\nFixes #1532 ",
    "head_branch": "feat/accept-taa-args",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1643 from hyperledger/feat/accept-taa-args\n\nfeat: accept taa using config"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214edcac254a19ac2949d8",
    "number": 1642,
    "body": "Temporary fix due to breaking changes in the dependency.\r\n\r\nThe 2.2 branch of aiohttp-apispec requires Jinja2 < 3, while its 3.0 (beta) branch supports newer Jinja2 versions which would likely also bypass this issue. We can either test out the current beta or wait for a new release there.",
    "head_branch": "fix/markupsafe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1642 from andrewwhitehead/fix/markupsafe\n\nPin markupsafe at version 2.0.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eddac254a19ac2949d9",
    "number": 1641,
    "body": "Signed-off-by: DaevMithran <daevmithran1999@gmail.com>",
    "head_branch": "Issue-1640",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214edeac254a19ac2949da",
    "number": 1638,
    "body": "Connection responses associated with an invite that was created with mediation were not properly reporting the mediators endpoint and keys when automatically sent after receiving a connection request. This PR fixes this issue and also does some minor code clean up.",
    "head_branch": "fix/mediated-conn-response",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1638 from dbluhm/fix/mediated-conn-response\n\nFix auto connection response not being properly mediated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214edfac254a19ac2949db",
    "number": 1637,
    "body": "Now that `their_public_did` is saved as a tag (https://github.com/hyperledger/aries-cloudagent-python/pull/1543), we can use it to filter connections made with a specific public did.\r\n\r\nThis PR adds the filter option to the get all connections endpoint. Same as with #1453, this will only work for connections made after PR #1453 was merged or if the upgrade command has been run",
    "head_branch": "feat/query-public-did",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1637 from hyperledger/feat/query-public-did\n\nfeat: query connections by their_public_did"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214edfac254a19ac2949dc",
    "number": 1633,
    "body": "## What is this PR for?\r\n- Error state saving was done when the session could be already disposed\r\n\r\nSigned-off-by: Andraž Cuderman <andraz.cuderman@global.id>",
    "head_branch": "feat-IDENT-4193-problem-report-deadlock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1633 from globalid/feat-IDENT-4193-problem-report-deadlock\n\nMove database operations inside the session context"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee0ac254a19ac2949dd",
    "number": 1628,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "proof_revoc_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1628 from ianco/proof_revoc_fix\n\nFix for non-revoc proof with no timestamp"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee1ac254a19ac2949de",
    "number": 1627,
    "body": "- This allows multi-instance multi-argument parameters such as `--inbound-transport` to be specified using the associated environment variable.  Version 1.2.3 of ConfigArgParse was unable to parse the associated environment variables properly.\r\n- Example using the environment variable for `--inbound-transport`: `ACAPY_INBOUND_TRANSPORT=[[\\\"http\\\",\\\"0.0.0.0\\\",\\\"8021\\\"],[\\\"ws\\\",\\\"0.0.0.0\\\",\\\"8023\\\"]]`\r\n\r\nResults In:\r\n```\r\n::::::::::::::::::::::::::::::::::::::::::::::\r\n:: Aries Cloud Agent                        ::\r\n::                                          ::\r\n::                                          ::\r\n:: Inbound Transports:                      ::\r\n::                                          ::\r\n::   - http://0.0.0.0:8021                  ::\r\n::   - ws://0.0.0.0:8023                    ::\r\n...\r\n```\r\n\r\nSigned-off-by: Wade Barnes <wade@neoterictech.ca>",
    "head_branch": "upgrade/configargparse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1627 from WadeBarnes/upgrade/configargparse\n\nUpgrade ConfigArgParse to version 1.5.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee2ac254a19ac2949df",
    "number": 1620,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>",
    "head_branch": "fix_conn_record_state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee3ac254a19ac2949e0",
    "number": 1619,
    "body": "- Improve logging\r\n- Use transactions for better state management under Askar\r\n- Add more checks around the credential exchange state in case of repeated messages",
    "head_branch": "fix/issue-cred-sessions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1619 from andrewwhitehead/fix/issue-cred-sessions\n\nFixes and cleanups for issue-credential 1.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee4ac254a19ac2949e1",
    "number": 1616,
    "body": "This is a PR that contains logic which would enable the endpoint to get updated on ledger after the endorser has signed the transaction.\r\n\r\nThe endpoints that have undergone changes are : \r\n1.) /wallet/set-did-endpoint\r\n2.) /wallet/did/public\r\n\r\nThese are in the /aries_cloudagent/wallet/routes.py file.\r\n\r\nAfter the endpoint is updated on the ledger, it also gets updated in the wallet. The call to update it in the wallet is not included in this code, but would be implemented soon.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee4ac254a19ac2949e2",
    "number": 1615,
    "body": "Black released their first stable version on January 29, resulting in the github action now failing on changes unrelated to submitted PRs. This should fix it.",
    "head_branch": "style/stable-black",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1615 from hyperledger/style/stable-black\n\nstyle: format with stable black release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee5ac254a19ac2949e3",
    "number": 1614,
    "body": "Adds mediation webhook topic so webhook events are sent for mediation events.\r\n\r\nFixes #950\r\n\r\n@dbluhm anything I'm missing here? The change seems so trivial that I may be forgetting something",
    "head_branch": "feat/enable-mediation-webhook-events",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1614 from hyperledger/feat/enable-mediation-webhook-events\n\nfeat: enable webhook events for mediation records"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee6ac254a19ac2949e4",
    "number": 1610,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>\r\n- resolve #1597 \r\n- Fixes (1)",
    "head_branch": "7.3_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee7ac254a19ac2949e5",
    "number": 1607,
    "body": "Adds a couple of options:\r\n\r\nAuthor can specify to auto-promote DID to their public DID when they receive the endorsed transaction (and it is saved)\r\n\r\nEndorser can use a different DID for endorsing than they use for their public DID (for connections) (can be specified globally by parameter, or can be specified when they call the endorse endpoint).\r\n",
    "head_branch": "endorser-did-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1607 from ianco/endorser-did-support\n\nAuto-promote author did to public after endorsing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee8ac254a19ac2949e6",
    "number": 1606,
    "body": "## What is this PR for?\r\n\r\n- Update aiohttp and async-timeout dependency\r\n- aiohttp 3.7 has https://github.com/aio-libs/aiohttp/issues/4818 exploit\r\n- Changes were tested with all jsonld based flows",
    "head_branch": "feat-IDENT-4048-update-web-server-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1606 from globalid/feat-IDENT-4048-update-web-server-dependency\n\nUpdate aiohttp dependency"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ee9ac254a19ac2949e7",
    "number": 1605,
    "body": "Related to #1588 ",
    "head_branch": "fix/blank-exchange-state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1605 from andrewwhitehead/fix/blank-exchange-state\n\nReplace blank credential/presentation exchange states with abandoned state"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eeaac254a19ac2949e8",
    "number": 1604,
    "body": "- resolve #1513 \r\n![image](https://user-images.githubusercontent.com/9292265/150176209-66f2954c-2f89-47dc-916b-57ae8d6dbdbf.png)\r\n",
    "head_branch": "persistant_queue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eeaac254a19ac2949e9",
    "number": 1603,
    "body": "## Issue\r\n\r\n- When signing the proof presentation or credential using BLS key created before the aries-askar update the process fails with:\r\n\r\n\r\n```\r\nFile \"/aries-cloudagent-python/aries_cloudagent/wallet/askar.py\", line 592, in sign_message\r\nkey = keypair.key\r\nFile \"/usr/local/lib/python3.6/site-packages/cached_property.py\", line 36, in __get__\r\nvalue = obj.__dict__[self.func.__name__] = self.func(obj)\r\nFile \"/usr/local/lib/python3.6/site-packages/aries_askar/store.py\", line 147, in key\r\nreturn Key(self._list.load_key(self._pos))\r\nFile \"/usr/local/lib/python3.6/site-packages/aries_askar/bindings.py\", line 210, in load_key\r\nbyref(handle),\r\nFile \"/usr/local/lib/python3.6/site-packages/aries_askar/bindings.py\", line 531, in do_call\r\nraise get_current_error(True)\r\naries_askar.error.AskarError: Unsupported JWK for key import\r\nThe above exception was the direct cause of the following exception:\r\nTraceback (most recent call last):\r\nFile \"/usr/local/lib/python3.6/site-packages/ddtrace/contrib/aiohttp/middlewares.py\", line 61, in attach_context\r\nresponse = await handler(request)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 163, in ready_middleware\r\nreturn await handler(request)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 200, in debug_middleware\r\nreturn await handler(request)\r\nFile \"/usr/local/lib/python3.6/site-packages/aiohttp_apispec/middlewares.py\", line 45, in validation_middleware\r\nreturn await handler(request)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 339, in check_multitenant_authorization\r\nreturn await handler(request)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 383, in setup_context\r\nreturn await task\r\nFile \"/aries-cloudagent-python/aries_cloudagent/protocols/present_proof/v2_0/routes.py\", line 1072, in present_proof_send_presentation\r\ncomment=comment,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/protocols/present_proof/v2_0/manager.py\", line 264, in create_pres\r\nrequest_data,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/protocols/present_proof/v2_0/formats/dif/handler.py\", line 371, in create_pres\r\nrecords_filter=limit_record_ids,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/protocols/present_proof/dif/pres_exch_handler.py\", line 1290, in create_vp\r\ndocument_loader=document_loader,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/vc_ld/prove.py\", line 101, in sign_presentation\r\ndocument_loader=document_loader,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/ld_proofs/ld_proofs.py\", line 41, in sign\r\ndocument_loader=document_loader,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/ld_proofs/proof_set.py\", line 53, in add\r\ndocument=input, purpose=purpose, document_loader=document_loader\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/ld_proofs/suites/bbs_bls_signature_2020.py\", line 82, in create_proof\r\nproof = await self.sign(verify_data=verify_data, proof=proof)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/ld_proofs/suites/bbs_bls_signature_2020.py\", line 181, in sign\r\nsignature = await self.key_pair.sign(verify_data)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/ld_proofs/crypto/wallet_key_pair.py\", line 38, in sign\r\nfrom_verkey=self.public_key_base58,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/wallet/askar.py\", line 604, in sign_message\r\nraise WalletError(\"Exception when signing message\") from err\r\naries_cloudagent.wallet.error.WalletError: Exception when signing message\r\n```\r\n\r\n- Temporary fix is to limit dependency to 0.2.2\r\n\r\n- The renaming done in https://github.com/hyperledger/aries-askar/pull/31/files#diff-9a004bebad212a7cc70871d55577ebd32f8dbff770e029d927abc4535435cf3cR539  seems to be a breaking change.\r\n\r\n@andrewwhitehead Can you please take a look and advise on a proper fix?",
    "head_branch": "fix-revert-askar-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1603 from globalid/fix-revert-askar-package\n\nUpdate aries-askar patch version to at least 0.2.4 as 0.2.3 does not include backward compatibility"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eebac254a19ac2949ea",
    "number": 1602,
    "body": "## Issue\r\n\r\n- When signing the proof presentation or credential using BLS key created before the aries-askar update the process fails with:\r\n\r\n\r\n```\r\nFile \"/aries-cloudagent-python/aries_cloudagent/wallet/askar.py\", line 592, in sign_message\r\nkey = keypair.key\r\nFile \"/usr/local/lib/python3.6/site-packages/cached_property.py\", line 36, in __get__\r\nvalue = obj.__dict__[self.func.__name__] = self.func(obj)\r\nFile \"/usr/local/lib/python3.6/site-packages/aries_askar/store.py\", line 147, in key\r\nreturn Key(self._list.load_key(self._pos))\r\nFile \"/usr/local/lib/python3.6/site-packages/aries_askar/bindings.py\", line 210, in load_key\r\nbyref(handle),\r\nFile \"/usr/local/lib/python3.6/site-packages/aries_askar/bindings.py\", line 531, in do_call\r\nraise get_current_error(True)\r\naries_askar.error.AskarError: Unsupported JWK for key import\r\nThe above exception was the direct cause of the following exception:\r\nTraceback (most recent call last):\r\nFile \"/usr/local/lib/python3.6/site-packages/ddtrace/contrib/aiohttp/middlewares.py\", line 61, in attach_context\r\nresponse = await handler(request)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 163, in ready_middleware\r\nreturn await handler(request)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 200, in debug_middleware\r\nreturn await handler(request)\r\nFile \"/usr/local/lib/python3.6/site-packages/aiohttp_apispec/middlewares.py\", line 45, in validation_middleware\r\nreturn await handler(request)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 339, in check_multitenant_authorization\r\nreturn await handler(request)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/admin/server.py\", line 383, in setup_context\r\nreturn await task\r\nFile \"/aries-cloudagent-python/aries_cloudagent/protocols/present_proof/v2_0/routes.py\", line 1072, in present_proof_send_presentation\r\ncomment=comment,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/protocols/present_proof/v2_0/manager.py\", line 264, in create_pres\r\nrequest_data,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/protocols/present_proof/v2_0/formats/dif/handler.py\", line 371, in create_pres\r\nrecords_filter=limit_record_ids,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/protocols/present_proof/dif/pres_exch_handler.py\", line 1290, in create_vp\r\ndocument_loader=document_loader,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/vc_ld/prove.py\", line 101, in sign_presentation\r\ndocument_loader=document_loader,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/ld_proofs/ld_proofs.py\", line 41, in sign\r\ndocument_loader=document_loader,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/ld_proofs/proof_set.py\", line 53, in add\r\ndocument=input, purpose=purpose, document_loader=document_loader\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/ld_proofs/suites/bbs_bls_signature_2020.py\", line 82, in create_proof\r\nproof = await self.sign(verify_data=verify_data, proof=proof)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/ld_proofs/suites/bbs_bls_signature_2020.py\", line 181, in sign\r\nsignature = await self.key_pair.sign(verify_data)\r\nFile \"/aries-cloudagent-python/aries_cloudagent/vc/ld_proofs/crypto/wallet_key_pair.py\", line 38, in sign\r\nfrom_verkey=self.public_key_base58,\r\nFile \"/aries-cloudagent-python/aries_cloudagent/wallet/askar.py\", line 604, in sign_message\r\nraise WalletError(\"Exception when signing message\") from err\r\naries_cloudagent.wallet.error.WalletError: Exception when signing message\r\n```\r\n\r\n- Temporary fix is to limit dependency to 0.2.2\r\n\r\n- The renaming done in https://github.com/hyperledger/aries-askar/pull/31/files#diff-9a004bebad212a7cc70871d55577ebd32f8dbff770e029d927abc4535435cf3cR539  seems to be a breaking change.\r\n\r\n@andrewwhitehead Can you please take a look and advise on a proper fix?",
    "head_branch": "fix-IDENT-4039-acapy-signing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eecac254a19ac2949eb",
    "number": 1601,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAdds endorser support to the ledger register_nym function, allowing Authors to self-register a public DID.",
    "head_branch": "endorser-did-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1601 from ianco/endorser-did-support\n\nDID updates for endorser"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eedac254a19ac2949ec",
    "number": 1599,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>\r\nresolve #1595 \r\nresolve #1594 ",
    "head_branch": "did_exchange",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1599 from shaangill025/did_exchange"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eeeac254a19ac2949ed",
    "number": 1596,
    "body": "Signed-off-by: DaevMithran <daevmithran1999@gmail.com>\r\n\r\nIssue is not fixed yet. Tried replacing the white spaces with %20 in tails_local_path. I'm not receiving error in swagger now. I'm receiving error in the logs. And it creates only one rev_reg instead of two now. Can anyone guide me on this?",
    "head_branch": "Issue-1580",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eeeac254a19ac2949ee",
    "number": 1593,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1593 from swcurran/main"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214eefac254a19ac2949ef",
    "number": 1592,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1592 from swcurran/main\n\nDoh....update the date in the Changelog for 0.7.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef0ac254a19ac2949f0",
    "number": 1591,
    "body": "- Fix RevocationError instantiations\r\n- Ensure transaction is not left open when IndyIssuerRevocationRegistryFullError exception is raised\r\n",
    "head_branch": "fix/askar-rev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1591 from andrewwhitehead/fix/askar-rev\n\nFixes for revocable credential issuance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef1ac254a19ac2949f1",
    "number": 1589,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>\r\n```\r\naries_cloudagent/commands/upgrade.py\r\nfrom packaging import version as package_version\r\nModuleNotFoundError: No module named 'packaging'\r\n```",
    "head_branch": "upgrade_cmd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1589 from shaangill025/upgrade_cmd\n\nFix for Test Harness --version issue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef2ac254a19ac2949f2",
    "number": 1587,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>\r\n- resolve #1568",
    "head_branch": "w3c_cred",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef3ac254a19ac2949f3",
    "number": 1585,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>\r\n- #1582 ",
    "head_branch": "conn_use_existing_peer_did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef3ac254a19ac2949f4",
    "number": 1583,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>\r\n\r\n- Fixes issues with multiple ledger support when using `askar` wallet-type. Issue (#1567) reported [here](https://github.com/hyperledger/aries-cloudagent-python/issues/1567#issuecomment-1004153961).",
    "head_branch": "mult_indy_network_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1583 from shaangill025/mult_indy_network_support\n\nMultiple Indy Ledger - Askar Fixes and Cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef4ac254a19ac2949f5",
    "number": 1581,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>",
    "head_branch": "oob_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1581 from shaangill025/oob_fix\n\nOOB connection_reuse webhooks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef5ac254a19ac2949f6",
    "number": 1576,
    "body": "Allow OPTIONS method used by browsers to implement CORS checks to be serviced without requiring the x-api-key to be present in the request.  Also added a test case for same.\r\n\r\nSigned-off-by: john court <jcourt@anonyome.com>",
    "head_branch": "OPTIONSWithoutApiKey#1575",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1576 from anonyome/OPTIONSWithoutApiKey#1575\n\nAdd fix for #1575 to allow OPTIONS method to work with x-api-key"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef6ac254a19ac2949f7",
    "number": 1574,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAddresses https://github.com/hyperledger/aries-cloudagent-python/issues/1571\r\n\r\nNote - added a `--reuse-connections` parameter to faber - this will trigger faber to use a public did in the didexchange connection (and alice will always \"reuse connection\" if possible) and the connection indeed gets reused, however right now there are no webhooks for the \"reuse\" messages so the alice/faber controllers are getting hung ...\r\n",
    "head_branch": "demo_public-invites",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1574 from ianco/demo_public-invites\n\nAllow public invites for alice/faber demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef7ac254a19ac2949f8",
    "number": 1573,
    "body": null,
    "head_branch": "0.7.3-final",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1573 from swcurran/0.7.3-final\n\nUpdates for final Release 0.7.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef8ac254a19ac2949f9",
    "number": 1570,
    "body": "Signed-off-by: Timo Glastra <timo@animo.id>\r\n\r\nInvitation key was not taken into account for get connections endpoint.\r\n\r\nIf possible, would like to get this in the upcoming 0.7.3 release :)",
    "head_branch": "fix/connection-invitation-key",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1570 from hyperledger/fix/connection-invitation-key\n\nfix: use invitation key for connection query"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef8ac254a19ac2949fa",
    "number": 1569,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>\r\n- resolve #1567 ",
    "head_branch": "mult_indy_network_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1569 from shaangill025/mult_indy_network_support\n\nMulti ledger: IndyDID resolver bug fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ef9ac254a19ac2949fb",
    "number": 1566,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>",
    "head_branch": "small_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1566 from shaangill025/small_fixes\n\nDiscoveryExchangeRecord RECORD_TOPIC typo fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214efaac254a19ac2949fc",
    "number": 1565,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nRequired to support newer versions of docker\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1565 from ianco/master\n\nUpdate docker scripts to use new & improved docker IP detection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214efbac254a19ac2949fd",
    "number": 1564,
    "body": "Hi!\r\nThis PR fixes the inconsistency of invitation_msg_id between invitation and response when connection is reused.\r\n\r\n### example of problem\r\n`receive-invitation` with invitation\r\n{\"@type\": \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/out-of-band/1.0/invitation\", \"@id\": \"**6ccba5e9-2b8d-4071-bd91-0058d5187d79**\", \"services\": [\"did:sov:2ACCk6nnJQmaibXp5yiXZA\"], ...\r\n\r\nThe response of `receive-invitation`\r\n{\"my_did\": \"VrN5qwVB7ewV43C679ekUx\", \"invitation_msg_id\": \"**a7753007-5e3f-4583-826b-ae94550fed15**\", \"their_public_did\": \"2ACCk6nnJQmaibXp5yiXZA\", ...\r\n\r\n### solution\r\nFetch the connection record after reuse handshake.\r\n\r\nThanks!\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "fetch-conn-record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1564 from baegjae/fetch-conn-record\n\nFix the inconsistency of invitation_msg_id between invitation and response"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214efcac254a19ac2949fe",
    "number": 1563,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1563 from ianco/master\n\nTypo vdr service name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214efcac254a19ac2949ff",
    "number": 1562,
    "body": "This should have a pretty minimal impact on things while enabling resolution of Documents with nonconforming `@context` attributes (spec defines that context must be a list of strings, some docs have embedded contexts). Also solves the bug mentioned in this comment from forever ago: https://github.com/hyperledger/aries-cloudagent-python/pull/1218#issuecomment-890591874",
    "head_branch": "feature/update-pydid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1562 from dbluhm/feature/update-pydid\n\nchore: update pydid to ^0.3.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214efdac254a19ac294a00",
    "number": 1561,
    "body": null,
    "head_branch": "didexch_alias",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1561 from ianco/didexch_alias\n\nAdd alias field to didexchange invitation UI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214efeac254a19ac294a01",
    "number": 1558,
    "body": "Fixes a few warnings during tests.",
    "head_branch": "fix/sleep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1558 from andrewwhitehead/fix/sleep\n\nAwait asyncio.sleeps"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214effac254a19ac294a02",
    "number": 1557,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>\r\n- `upgrade` command\r\n  **Example**\r\n  ```\r\n  ./scripts/run_docker upgrade --upgrade-config ./aries_cloudagent/acapy_upgrade_config.yml \\\r\n  --from-version v0.7.2 \\\r\n  --wallet-type indy \\\r\n  --wallet-name issuer \\\r\n  --wallet-key mykey \\\r\n  --wallet-storage-type postgres_storage \\\r\n  --wallet-storage-config '{\"url\":\"host.docker.internal:5432\",\"max_connections\":5}' \\\r\n  --wallet-storage-creds '{\"account\":\"postgres\",\"password\":\"pwd\",\"admin_account\":\"postgres\",\"admin_password\":\"pwd\"}'\r\n  ```\r\n    - `--upgrade-config` - path to YAML config file\r\n      **Example YAML config**\r\n      ```\r\n      v0.6.0:\r\n      ...\r\n      v0.7.1:\r\n      ...\r\n      v0.7.2:\r\n        resave_records:\r\n          base_record_path:\r\n            - \"aries_cloudagent.connections.models.conn_record.ConnRecord\"\r\n          base_exch_record_path:\r\n            - \"aries_cloudagent.protocols.issue_credential.v1_0.models.credential_exchange.V10CredentialExchange\"\r\n        update_existing_records: false\r\n      ```\r\n      The above will re-save `ConnRecord` and `V10CredentialExchange`. `update_existing_records` can be used to handle \r\n      changes where existing records need to be updated, for instance, if a new required field has been added to Marshmallow \r\n      schema. It is handled here: [link1](https://github.com/hyperledger/aries-cloudagent-python/blob/c97c1ba35168e9ab445ec9328e19350a7ece0d47/aries_cloudagent/commands/upgrade.py#L39) and [link2](https://github.com/hyperledger/aries-cloudagent-python/blob/c97c1ba35168e9ab445ec9328e19350a7ece0d47/aries_cloudagent/commands/upgrade.py#L122) and [link3](https://github.com/hyperledger/aries-cloudagent-python/blob/c97c1ba35168e9ab445ec9328e19350a7ece0d47/aries_cloudagent/commands/upgrade.py#L183), this will have to be managed every release.\r\n    - `--from-version` is only required when version information is not there in storage. It will be ignored if version is found in storage\r\n    - Also accepts `WalletGroup` arguments\r\n\r\nUpdate: now follows this [approach](https://github.com/hyperledger/aries-cloudagent-python/pull/1557#issuecomment-996387027).\r\n\r\nThanks @ianco for suggesting the command approach. This is an initial implementation, for now, it can only handle re-save and/or update records but it can be expanded upon. @andrewwhitehead, @swcurran, and @ianco I will appreciate any feedback.",
    "head_branch": "upgrade_cmd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1557 from shaangill025/upgrade_cmd\n\nACA-Py Upgrade command implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f00ac254a19ac294a03",
    "number": 1556,
    "body": "## What is this PR for?\r\n\r\n- Added external queue support as an alternative to HTTP webhook events",
    "head_branch": "feat-IDENT-3905-webhook-events-queue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f01ac254a19ac294a04",
    "number": 1553,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>",
    "head_branch": "issue_1542",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1553 from shaangill025/issue_1542\n\nPR#1543 Follow up - Adding invitation_msg_id and their_public_did back to record_value."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f02ac254a19ac294a05",
    "number": 1551,
    "body": null,
    "head_branch": "fix/demo-reqs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1551 from andrewwhitehead/fix/demo-reqs\n\nUpdate demo requirements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f02ac254a19ac294a06",
    "number": 1550,
    "body": "Also adjusts the return value from `get_ledger_for_identifier` for consistency.\r\n\r\nFixes #1549 ",
    "head_branch": "fix/multi-ledger-deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1550 from andrewwhitehead/fix/multi-ledger-deps\n\nRemove required dependencies from multi-ledger code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f03ac254a19ac294a07",
    "number": 1545,
    "body": "Pull request for [Issue: 1539](https://github.com/hyperledger/aries-cloudagent-python/issues/1539)\r\n@swcurran  Added the credential_revoked state. \r\nFor now I have considered only issue-credential 1.0, I should check for the record in V20CredentialExchange too.\r\nWill do it soon. If you have any suggestions on my approach please comment below.\r\n\r\nQuestions:\r\n- Is it required raise an error if the credential record doesn't exist? \r\n- The credential state should be changed only after publishing revocation.\r\n   When publish is set to pending, what is the best way to implement this?. I'm planning to create retrieve credential records using rev_reg_id and cred_rev_id",
    "head_branch": "Issue-1539",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1545 from DaevMithran/Issue-1539\n\nAdd credential_revoked state"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f04ac254a19ac294a08",
    "number": 1544,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAddresses issue https://github.com/hyperledger/aries-cloudagent-python/issues/1541\r\n\r\nTested in alice/faber, there are some error messages on the faber side however the connection (didexchange) is established and can be used for issuing credentials and requesting proofs.\r\n\r\nNot sure what is the issue of removing `request_id` from the inviter connection record, or why it's required for didexchange but not connections protocol.\r\n",
    "head_branch": "issue/1541",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f05ac254a19ac294a09",
    "number": 1543,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>\r\n- resolve #1542 ",
    "head_branch": "issue_1542",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1543 from shaangill025/issue_1542\n\nConnRecord tags - `their_public_did` and `invitation_msg_id`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f06ac254a19ac294a0a",
    "number": 1538,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "issue/1536",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1538 from ianco/issue/1536\n\nFix validation for range checks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f06ac254a19ac294a0b",
    "number": 1535,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n",
    "head_branch": "0.7.3.-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1535 from swcurran/0.7.3.-release\n\nUpdates to Changelog, RTD and version for the 0.7.3-RC0 release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f07ac254a19ac294a0c",
    "number": 1534,
    "body": "- resolve #1529 ",
    "head_branch": "issue_1529",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f08ac254a19ac294a0d",
    "number": 1530,
    "body": "When connecting over WS, it is impossible for ACA-Py to detect when the other end has unexpectedly closed (no WS close or error message sent) without using a heartbeat and timeout. With these changes, if a mobile agent connected over WS suddenly loses connectivity (wifi or data signal drops, for instance), the window of time where a message can be lost due to ACA-Py not realizing the WS has entered a bad state is shrunk to at most `timeout_interval` seconds. An image with a version of these changes has been in testing in a live mediator deployment for a couple of months now with much success.",
    "head_branch": "fix/mediation-ws-ping",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1530 from Indicio-tech/fix/mediation-ws-ping\n\nEnable WS Pings for WS Inbound Transport"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f09ac254a19ac294a0e",
    "number": 1528,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1528 from ianco/master\n\nFix integration tests (revocation notifications)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f0aac254a19ac294a0f",
    "number": 1527,
    "body": null,
    "head_branch": "revocation-notification",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1527 from ianco/revocation-notification\n\nAdd Revocation notification support to alice/faber"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f0bac254a19ac294a10",
    "number": 1526,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "print_invite_qr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1526 from ianco/print_invite_qr\n\nDisplay QR code when generating/displaying invites on startup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f0bac254a19ac294a11",
    "number": 1525,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>\r\n- resolves #1524\r\n- Updated `ConnectionManager` and `DIDXManager` to look up `ConnRecord` by `invitation_msg_id`\r\n- Also fixes the issue, when an OOB invitation [`0160` and with public DID] is accepted by the invitee, on the inviter side, a new `ConnRecord` is created and activated, and the original `ConnRecord` created along with the invitation remains unused.",
    "head_branch": "issue_1524",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1525 from shaangill025/issue_1524\n\nOOB: Fixes issues with multiple public explicit invitation and unused 0160 connection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f0cac254a19ac294a12",
    "number": 1523,
    "body": "- [x] SQlite\r\n- [x] PostgreDB\r\n- [x] Link in other documentation\r\n- [x] Docker Compose example",
    "head_branch": "docs/databases",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1523 from chriamue/docs/databases\n\nadded documentation for wallet storage databases"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f0dac254a19ac294a13",
    "number": 1521,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>\r\n- resolve #1511 \r\n- The problem it solves:\r\n  - If 2 agents [`Alice and Bob`] have an active connection setup (using an OOB public DID invitation)\r\n  - `Alice` send another OOB invitation (public) to `Bob`\r\n  - `Bob` accepts it with `use_existing_connection` option, then on `Alice` side, the invitation and associated connection generated remain unused.\r\n- ~~This PR implements `flush_stale_connections` function, which deletes all `ConnRecords` with `state: invitation` and `invitation_mode: once` which were last updated `at least 3 hours` back. The trigger for this function is creating an OOB invitation, so whenever a new `OOB invitation` is created then this cleanup is performed. Does this strategy sound reasonable?~~\r\n- Following feedback from @swcurran, fixed initial flawed implementation of `reuse` message and used it to accomplish deletion of `hanging` connections.",
    "head_branch": "issue_1511",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1521 from shaangill025/issue_1511\n\nDelete unused ConnRecord generated - OOB invitation  `(use_exising_connection)`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f0eac254a19ac294a14",
    "number": 1519,
    "body": "Added markdown documentation of logging in Acapy.\r\n\r\n- [x] Command Line Arguments\r\n- [x] Environment Variables\r\n- [x] Acapy Config\r\n- [x] Logging Config File\r\n- [x] Link in dev readme",
    "head_branch": "docs/logging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1519 from chriamue/docs/logging\n\nadded logging documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f0fac254a19ac294a15",
    "number": 1518,
    "body": "This PR fixes error when removing a wallet on askar-profile\r\n\r\n### Environment\r\naskar-profile\r\n\r\n### Problem\r\nError occurred when removing a wallet.\r\n\r\n### Fix\r\nUnlike other options, in askar-profile, the profiles of sub wallet are not stored in `self._instances`.\r\nHowever, current code always try to delete the profile in `self._instances` when removing a wallet.\r\nThis PR resolves the above problem.\r\n\r\nThanks!\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "fix-remove-wallet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1518 from baegjae/fix-remove-wallet\n\nFix error when removing a wallet on askar-profile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f0fac254a19ac294a16",
    "number": 1517,
    "body": "- resolve #1512 ",
    "head_branch": "issue_1512",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1517 from shaangill025/issue_1512\n\nFix DIF Presentation Request Input Validation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f10ac254a19ac294a17",
    "number": 1516,
    "body": "Follow-up error after [PR 1515](https://github.com/hyperledger/aries-cloudagent-python/pull/1515). When calling `/credential-definitions/{cred_def_id}/write_record` in the Swagger UI, the call results in:\r\n\r\n    AttributeError: 'IndySdkLedger' object has no attribute 'add_cred_def_non_secrets_record'\r\n\r\nThe code attempts to call `add_cred_def_non_secrets_record` on the `ledger` instance which doesn't have such a method. Instead, the actual method is in `routes.py` itself and should just be called there.\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1516 from gorgsenegger/main\n\nFix AttributeError"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f11ac254a19ac294a18",
    "number": 1515,
    "body": "When calling `/credential-definitions/{cred_def_id}/write_record` in the Swagger UI, the call results in a `TypeError` (same reason as in  [PR 1494](https://github.com/hyperledger/aries-cloudagent-python/pull/1494)). So the correct line of code has to be\r\n\r\n        ledger = context.inject_or(BaseLedger)\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1515 from gorgsenegger/main"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f12ac254a19ac294a19",
    "number": 1510,
    "body": "This PR fixes bug when getting credentials under askar-profile environment.\r\n\r\n### Environment\r\naskar-profile\r\n\r\n### Problem\r\nAfter holder received credential from issuer, holder get empty results when getting credentials.\r\n\r\n### Fix\r\nAdd `profile` parameter with `wallet.askar_profile` when scanning credentials\r\n\r\n\r\nThanks!\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "fix-get-credentials",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1510 from baegjae/fix-get-credentials\n\nFix bug when getting credentials on askar-profile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f13ac254a19ac294a1a",
    "number": 1509,
    "body": "Signed-off-by: shaangill025 <gill.shaanjots@gmail.com>\r\n\r\n- resolves #1506\r\n- For duplicated object description, renamed references in `__init__.py`:\r\n  - `vc.ld_proofs.crypto`, `vc.ld_proofs.purposes`, `vc.ld_proofs.suites` by adding a `_` when importing modules. Modified `vc.ld_proofs` to accomodate these changes\r\n  -  `vc.vc_ld.models` by adding a `_` when importing modules. Modified `vc.vc_ld` accordingly\r\n- For cross-reference warnings, adopted solution from [here](https://github.com/sphinx-doc/sphinx/issues/3866#issuecomment-768167824).\r\n- Regarding`list not hashable` issue in `aries_cloudagent/protocols/issue_credential/v1_0/models/credential_exchange.py`, I think there was a minor bug/typo, we had `credential_request: [Mapping, IndyCredRequest] = None` instead of `credential_request: Union[Mapping, IndyCredRequest] = None`.",
    "head_branch": "sphinx_rtd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1509 from shaangill025/sphinx_rtd\n\nFix warnings when generating ReadTheDocs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f14ac254a19ac294a1b",
    "number": 1508,
    "body": "This PR fixes error when connection request is received with public invitation under askar\r\n\r\n### Environment\r\n- connections/1.0 protocol\r\n- public invitation\r\n- askar\r\n\r\n### Problem\r\nFaber (invitation creator) encountered error below, when connection request was received.\r\n```\r\n2021-11-22 17:39:38,849 aries_cloudagent.core.dispatcher ERROR Handler error: Dispatcher.handle_message\r\nTraceback (most recent call last):\r\n  File \"/Users/baegjae/src/aries-cloudagent-python/aries_cloudagent/core/dispatcher.py\", line 197, in handle_message\r\n    await handler(context, responder)\r\n  File \"/Users/baegjae/src/aries-cloudagent-python/aries_cloudagent/protocols/connections/v1_0/handlers/connection_request_handler.py\", line 41, in handle\r\n    await mgr.receive_request(\r\n  File \"/Users/baegjae/src/aries-cloudagent-python/aries_cloudagent/protocols/connections/v1_0/manager.py\", line 592, in receive_request\r\n    my_info = await wallet.create_local_did(DIDMethod.SOV, KeyType.ED25519)\r\n  File \"/Users/baegjae/src/aries-cloudagent-python/aries_cloudagent/wallet/askar.py\", line 199, in create_local_did\r\n    await self._session.handle.insert_key(\r\nAttributeError: 'NoneType' object has no attribute 'insert_key'\r\n```\r\n\r\n`wallet` was inactive (=handle was None) when creating local did.\r\n\r\n### Fix\r\nThis PR make `wallet` active to create local did.\r\n\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "fix-askar-public-invitation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1508 from baegjae/fix-askar-public-invitation\n\nFix error when connection request is received (askar, public invitation)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f14ac254a19ac294a1c",
    "number": 1504,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "remove-streetcred-ref",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1504 from swcurran/remove-streetcred-ref\n\nRemove Streetcred references"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f15ac254a19ac294a1d",
    "number": 1501,
    "body": "This PR improves the usability of outbound queues by:\r\n- Fixing a bug where a queue instance was created twice when loading the class\r\n- Add explicit startup and shutdown methods that are called in startup and shutdown of the conductor. This makes it so we can hold connections to external queues and give the outbound queue implementation the flexibility to determine how long those connections should live.\r\n- Add `open` and `close` method to be used as `start` and `stop` were previously used. These methods are called by `aenter` and `aexit` on the base class and are therefore used each time a message is enqueued.\r\n- All the `start`, `stop`, `open`, and `close` methods are now optional. If no special behavior is required, the inheriting class need not define an empty method.\r\n- Outbound queue accepts a `Profile` instance for configuration instead of `Settings`. This allows the queue to subscribe to an publish events through the root profile.\r\n\r\nThis represents a BREAKING CHANGE in the outbound queue interface as the semantics of `start` and `stop` have been altered. Additionally, queue implementation init methods will need to be reconfigured to accept a profile instead of a settings object.\r\n\r\nI think these changes, while breaking changes, go a long way towards improving the outbound queue interface and will better support a wider variety of external queue implementations.",
    "head_branch": "feature/outbound-queue-profile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1501 from dbluhm/feature/outbound-queue-profile\n\nOutbound Queue - more usability improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f16ac254a19ac294a1e",
    "number": 1500,
    "body": "- resolves #1466\r\n- v1.0 refactoring/rewrite - workflow should now be compliant with [RFC0031](https://github.com/hyperledger/aries-rfcs/tree/b3a3942ef052039e73cd23d847f42947f8287da2/features/0031-discover-features)\r\nEarlier implementation involved calling `/featues` endpoint [under `server` tag] to disclose protocols for that agent. It did not involve the flow of `Aries` messages as specified in the RFC.\r\n- v2.0 implementation [RFC0557](https://github.com/hyperledger/aries-rfcs/tree/b3a3942ef052039e73cd23d847f42947f8287da2/features/0557-discover-features-v2)\r\n\r\nMajor Changes\r\n- Startup arguments\r\n  - `--auto-disclose-features` Enables [proactive disclosure](https://github.com/hyperledger/aries-rfcs/tree/b3a3942ef052039e73cd23d847f42947f8287da2/features/0557-discover-features-v2#requester) for v2.0. Such agent will automatically disclose features to another agent when an active connection gets established. `--disclose-features-list` can be used to limit what to disclose and if not specified, then all are disclosed.\r\n  - `--disclose-features-list` Provides control over what features to publish. Accepts a path to YAML config file [example structure below]. This is valid for both v1.0 and v2.0\r\n- Removed `/features under server` endpoint\r\n- Added these endpoints:\r\n  -  `discover-features` tag\r\n     -  /discover-features/query\r\n     - /discover-features/records\r\n  -  `discover-features v2.0` tag\r\n     - /discover-features-2.0/queries\r\n     - /discover-features-2.0/records\r\n- Added Controller class to protocols to specify, manage and load goal-codes\r\nYAML config file structure, such agent will only disclose `did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/action-menu/1.0` protocol and/or `aries.vc` goal-code\r\n```\r\n   protocols: [\"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/action-menu/1.0\"]\r\n   goal-codes: [\"aries.vc\"]\r\n```\r\n\r\nTesting\r\n- For v1.0, execute query using ` /discover-features/query`. If no `connection_id` is specified then it processes the query on the same agent (disclose features of the same agent). This essentially mimics what can be achieved using `/features` [under `server`]. To look up either all records or a record by `connection_id`, use `/discover-features/records`.\r\n- For v2.0, execute queries using `/discover-features-2.0/queries`. Same logic when no `connection_id` is specified as above. To look up either all records or a record by `connection_id`, use `/discover-features-2.0/records`.\r\n`connection_id` is an unique identifier for these records.\r\n",
    "head_branch": "discover-feature-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1500 from shaangill025/discover-feature-v2\n\nDiscover Features Protocol: v1_0 refactoring and v2_0 implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f17ac254a19ac294a1f",
    "number": 1496,
    "body": "Needed (I think) to get ReadTheDocs generation working again.  Currently not working because of a way that RTD works. Generation is no longer working because of a change in a default dependency, per [this bug report](https://gitanswer.com/build-failed-typeerror-generator-object-is-not-subscriptable-python-readthedocs-org-1036337375) and [guidance](https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html#using-a-configuration-file).",
    "head_branch": "rtd-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1496 from swcurran/rtd-docs\n\nAdd RTD configs to get generator working"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f18ac254a19ac294a20",
    "number": 1494,
    "body": "When calling /schemas/{schema_id}/write_record, a server error 500 occurrs. The log output says\r\n\r\n    TypeError: inject() got an unexpected keyword argument 'required'\r\n\r\nOther code in this file seems to indicate that the proposed change is what is needed to prevent the error from being thrown.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1494 from gorgsenegger/patch-2\n\nFix TypeError"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f18ac254a19ac294a21",
    "number": 1493,
    "body": "- resolve #1486 \r\n- review all tests involving `TEST_CRED_DICT` and `TEST_CRED_WILDCARD` with `FHIR` contexts to mock `pyld` returns.",
    "head_branch": "issue_1486",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1493 from shaangill025/issue_1486\n\nDIF PresExch - ProblemReport and \"is_holder\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f19ac254a19ac294a22",
    "number": 1492,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n",
    "head_branch": "release-0.7.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1492 from swcurran/release-0.7.2\n\nAries Cloud Agent Python Release 0.7.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f1aac254a19ac294a23",
    "number": 1491,
    "body": "This is a repeat of #1251 , then it started working without any updates after sometime.",
    "head_branch": "1490_json_ld_test_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1491 from shaangill025/1490_json_ld_test_fix\n\nDIF PresExch Tests - temporary update to fix pyld.jsonld.JsonLdError"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f1bac254a19ac294a24",
    "number": 1490,
    "body": "This fixes an error in the use of a default mediator in the connections and out of band protocols. The mediation ID was being saved as None instead of the retrieved default mediator value.",
    "head_branch": "fix/default-mediator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1490 from dbluhm/fix/default-mediator\n\nfix: using a default mediator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f1cac254a19ac294a25",
    "number": 1489,
    "body": "Updates to readme to better reflect the current state of ACA-Py. \r\n\r\nUpdate the \"Supported RFCs\" doc to use the checklist style that Northern Block and Animo Solutions created.",
    "head_branch": "acapy-features",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1489 from swcurran/acapy-features\n\nUpdate to ReadMe and Supported RFCs for 0.7.2."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f1cac254a19ac294a26",
    "number": 1488,
    "body": "Update the the Read The Docs material in preparation for the next release of ACA-Py. We'll leave this as a WIP until 0.7.2 is ready to be released, to catch the latest updates.\r\n\r\nThere is one error that has been there since 0.7.1 -- not sure the reason or fix.  Anyone?\r\n\r\n`WARNING: error while formatting arguments for aries_cloudagent.protocols.issue_credential.v1_0.models.credential_exchange.V10CredentialExchange: unhashable type: 'list'`\r\n\r\nI'll keep this open until 0.7.2 is final.",
    "head_branch": "072-rtd-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1488 from swcurran/072-rtd-2\n\nUpdating the RTDs code for Release 0.7.2 - Try 2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f1dac254a19ac294a27",
    "number": 1484,
    "body": "Closes #1477 \r\n\r\nSigned-off-by: Elias Strehle <elias@circulartree.com>",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1484 from estrehle/main\n\nClarify instructions in Acme Controller Workshop"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f1eac254a19ac294a28",
    "number": 1483,
    "body": "This enables us to use the undelivered queue with static connections by not specifying the endpoint.",
    "head_branch": "fix/static-connection-queue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1483 from dbluhm/fix/static-connection-queue\n\nfix: create static doc use empty endpoint if None"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f1fac254a19ac294a29",
    "number": 1482,
    "body": "Closes #1477.",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f20ac254a19ac294a2a",
    "number": 1481,
    "body": "Closes #1477.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f20ac254a19ac294a2b",
    "number": 1478,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f21ac254a19ac294a2c",
    "number": 1476,
    "body": "Dataclass wasn't added until python 3.7 and we're on 3.6. Not sure how this wasn't failing tests :thinking: we must have a backport package installed in the base image or similar but at any rate, I'm hopeful this will resolve issues @swcurran raised in #1473 for this module's doc generation.",
    "head_branch": "fix/mediation-invite-store-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1476 from dbluhm/fix/mediation-invite-store-type\n\nfix: use named tuple instead of dataclass in mediation invite store"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f22ac254a19ac294a2d",
    "number": 1475,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nSee issue https://github.com/hyperledger/aries-cloudagent-python/issues/1462\r\n\r\n@jsyro",
    "head_branch": "neg_encoding_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1475 from ianco/neg_encoding_fix\n\nUpdate credential and proof mappings to allow negative encoded values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f23ac254a19ac294a2e",
    "number": 1473,
    "body": "Update the the Read The Docs material in preparation for the next release of ACA-Py.  We'll leave this as a WIP until 0.7.2 is ready to be released, to catch the latest updates.\r\n\r\nCurrently getting generation errors from the [coordinate_mediation](https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/protocols/coordinate_mediation/mediation_invite_store.py) module. Help on these would be appreciated -- it's something to do with the formatting of the documentation for the listed methods:\r\n\r\n``` bash\r\nWARNING: error while formatting arguments for aries_cloudagent.protocols.coordinate_mediation.mediation_invite_store.MediationInviteRecord.from_json: Handler <function update_annotations_using_type_comments at 0x7f18ab6a5ae8> for event 'autodoc-before-process-signature' threw an exception (exception: wrapper loop when unwrapping dataclasses.dataclass.from_json)\r\nWARNING: error while formatting arguments for aries_cloudagent.protocols.coordinate_mediation.mediation_invite_store.MediationInviteRecord.to_json: Handler <function update_annotations_using_type_comments at 0x7f18ab6a5ae8> for event 'autodoc-before-process-signature' threw an exception (exception: wrapper loop when unwrapping dataclasses.dataclass.to_json)\r\nWARNING: error while formatting arguments for aries_cloudagent.protocols.coordinate_mediation.mediation_invite_store.MediationInviteRecord.unused: Handler <function update_annotations_using_type_comments at 0x7f18ab6a5ae8> for event 'autodoc-before-process-signature' threw an exception (exception: wrapper loop when unwrapping dataclasses.dataclass.unused)\r\n/home/swcur/repos/aries-cloudagent-python/aries_cloudagent/protocols/coordinate_mediation/mediation_invite_store.py:docstring of aries_cloudagent.protocols.coordinate_mediation.mediation_invite_store.MediationInviteStore.get_mediation_invite_record:10: WARNING: Field list ends without a blank line; unexpected unindent.\r\n```\r\n",
    "head_branch": "072-rtd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f24ac254a19ac294a2f",
    "number": 1472,
    "body": "Removed potential deadlocks for Wallet endpoints\r\n\r\nAdditional info in this issue: #1417 ",
    "head_branch": "feat-IDENT-3671-wallet-seesions-askar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1472 from globalid/feat-IDENT-3671-wallet-seesions-askar\n\nFixed potential deadlocks by opening sessions only on demand (Wallet endpoints)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f24ac254a19ac294a30",
    "number": 1471,
    "body": "Removed potential deadlocks for Wallet endpoints\r\n\r\nAdditional info in this issue: #1417",
    "head_branch": "feat-IDENT-3671-wallet-seesions-askar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f25ac254a19ac294a31",
    "number": 1470,
    "body": "Removed potential deadlocks for Wallet endpoints\r\n\r\nAdditional info in this issue: #1417 ",
    "head_branch": "feat-IDENT-3373-decryption-session-handling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f26ac254a19ac294a32",
    "number": 1469,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nSee issue: https://github.com/hyperledger/aries-cloudagent-python/issues/1441\r\n\r\nThis is a bit of a shot in the dark, the connection auto-replies aren't following the same convention as other protocols.\r\n",
    "head_branch": "conn_req_reply_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1469 from ianco/conn_req_reply_fix\n\nFix connection record response for mobile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f27ac254a19ac294a33",
    "number": 1468,
    "body": "See issues: https://github.com/hyperledger/aries-cloudagent-python/issues/1441, https://github.com/hyperledger/aries-cloudagent-python/issues/1372\r\n\r\nThis is a bit of a shot in the dark, the connection auto-replies aren't following the same convention as other protocols.\r\n",
    "head_branch": "conn_req_reply_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f28ac254a19ac294a34",
    "number": 1465,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAddresses issue https://github.com/hyperledger/aries-cloudagent-python/issues/1455\r\n",
    "head_branch": "pres_exch_revoc_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1465 from ianco/pres_exch_revoc_fix\n\nFix error removing proof req entries by timestamp"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f29ac254a19ac294a35",
    "number": 1464,
    "body": "This PR implements revocation notifications following the RFC: https://github.com/hyperledger/aries-rfcs/blob/main/features/0183-revocation-notification/README.md\r\n\r\nCurrently, `~please_ack` support is not implemented and there is no way to propagate a comment from issuer to recipient. Hopefully this serves as a good starting point to collect feedback.\r\n\r\nI've done some testing using the [revocation demo](https://github.com/Indicio-tech/acapy-revocation-demo) I put together a while ago and everything worked as expected but I plan to implement some tests (at a minimum unit tests, perhaps integration test with some direction from @ianco) before we merge this one.",
    "head_branch": "feature/revocation-notification",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1464 from atb-leap/feature/revocation-notification\n\nImplement Revocation Notification v1.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f29ac254a19ac294a36",
    "number": 1463,
    "body": "Connecting the base wallet to a mediator is supported through command line arguments but not the Admin API. In our experience, it is often simpler to establish the base wallet's mediator after startup through the Admin API. That being said, there could be consequences to this change that I'm not seeing yet so hoping @ianco and @TimoGlastra could give their thoughts on this change.",
    "head_branch": "feature/base-wallet-admin-routes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1463 from sicpa-dlab/feature/base-wallet-admin-routes\n\nAllow base wallet to connect to a mediator after startup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f2aac254a19ac294a37",
    "number": 1461,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nIf the appropriate startup arguments are provided, auto-initiate the connection between the author and endorser on agent startup",
    "head_branch": "endorser_protocol_connection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1461 from ianco/endorser_protocol_connection\n\nAuto connect from author to endoposer on startup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f2bac254a19ac294a38",
    "number": 1459,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAdded startup and shutdown event notifications\r\n\r\n@TimoGlastra  this adds startup/shutdown notifications (as discussed on RocketChat I think?), let me know if this is what you were thinking.  This is for the base wallet but assume we need something similar for sub-wallets?\r\n",
    "head_branch": "endorser_protocol_connection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1459 from ianco/endorser_protocol_connection\n\nStartup and shutdown events (prep for endorser updates)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f2cac254a19ac294a39",
    "number": 1453,
    "body": "This PR solves issue #1449 ",
    "head_branch": "feat-IDENT-3532-iso-format-dates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1453 from globalid/feat-IDENT-3532-iso-format-dates\n\nUpdate base record time-stamp to standard ISO format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f2dac254a19ac294a3a",
    "number": 1450,
    "body": "Add askar support to integration test script (`BDD_EXTRA_AGENT_ARGS=\"{\\\"wallet-type\\\":\\\"askar\\\"}\" ./demo/run_bdd`)\r\n\r\nFix database locking errors (similar issues as were fixed in PR https://github.com/hyperledger/aries-cloudagent-python/pull/1439)\r\n\r\nFix/cleanup unit tests\r\n\r\n- unit tests are all passing\r\n- `./run_bdd` all tests pass (indy-sdk, default wallet)\r\n- `ACAPY_ARG_FILE=postgres-indy-args.yml ./run_bdd` all tests pass (indy-sdk, postgres wallet)\r\n- `BDD_EXTRA_AGENT_ARGS=\"{\\\"wallet-type\\\":\\\"askar\\\"}\" ./run_bdd` all tests pass (askar/credx, default wallet)\r\n- `BDD_EXTRA_AGENT_ARGS=\"{\\\"wallet-type\\\":\\\"askar\\\"}\" ACAPY_ARG_FILE=postgres-indy-args.yml ./run_bdd` all tests pass (askar/credx, postgres wallet)\r\n",
    "head_branch": "endorser_protocol_askar_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1450 from ianco/endorser_protocol_askar_fixes\n\nEndorser protocol askar fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f2eac254a19ac294a3b",
    "number": 1448,
    "body": "Add a function to the protocol to (potentially) subscribe to events\r\n\r\nRegister/subscribe to all protocol events on aca-py startup\r\n\r\nAdd meta-data to the endorser transaction record to pass information downstream (e.g. save cred def revocation info so it's available to the revocation registry tasks)\r\n\r\n(see https://hackmd.io/51flx8CVS1ypyOjEqVl1tg?view#Implementation-Details)\r\n\r\nThere are some issues when running with askar but I will deal with those on a separate PR\r\n",
    "head_branch": "endorser_protocol_3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1448 from ianco/endorser_protocol_3\n\nEndorser protocol updates - refactor to use event bus"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f2eac254a19ac294a3c",
    "number": 1446,
    "body": "This pull request adds an additional credential instance validation for any missing attributes. With this check eliminate errors at the issuance stage where in case of missing attributes, Aca-Py returns 500 error right now. And exchange record goes into a fault state.",
    "head_branch": "feat-IDENT-3529-add-create-offer-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1446 from globalid/feat-IDENT-3529-add-create-offer-validation\n\nAdd credential validation to offer issuance step"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f2fac254a19ac294a3d",
    "number": 1445,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "fix/mediation-arg-text",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1445 from dbluhm/fix/mediation-arg-text\n\nfix: help text for open-mediation flag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f30ac254a19ac294a3e",
    "number": 1442,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "ws-protocol-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1442 from ianco/ws-protocol-fix\n\nAdd missing param to ws protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f31ac254a19ac294a3f",
    "number": 1439,
    "body": "Removed potential deadlocks in Multitenancy, Issue credential v2, Present proof v2 and mediation protocols by opening sessions on demand and closing them asap.\r\n\r\nAdditional info in this issue: https://github.com/hyperledger/aries-cloudagent-python/issues/1417",
    "head_branch": "feat-IDENT-3372-askar-session-deadlock-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1439 from globalid/feat-IDENT-3372-askar-session-deadlock-v2\n\nFixed potential deadlocks by opening sessions only on demand"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f32ac254a19ac294a40",
    "number": 1438,
    "body": "Small fix in the type hinting of the store_credential method\r\n\r\nIn general I think it may be good to look into static type checking tools for ACA-Py. E.g. tools like [pyright](https://github.com/microsoft/pyright) can help find errors in typing (and thus implementation)\r\n\r\nSigned-off-by: Timo Glastra <timo@animo.id>",
    "head_branch": "fix/incorrect-return-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1438 from animo/fix/incorrect-return-type\n\nfix: incorrect return type"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f33ac254a19ac294a41",
    "number": 1437,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nSee issue https://github.com/hyperledger/aries-cloudagent-python/issues/1436",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1437 from ianco/master\n\nFix issue with cred limit on presentation endpoint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f33ac254a19ac294a42",
    "number": 1434,
    "body": "Update Changelog, version.py, open-api.json and update the indy-vdr dependency to the latest release.",
    "head_branch": "release0.7.2rc0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1434 from swcurran/release0.7.2rc0\n\nRelease 0.7.2-rc0 preparation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f34ac254a19ac294a43",
    "number": 1433,
    "body": "When developing plugins for different transports it becomes difficult to do things without having access to the context profile provides. This pr adds root_profile to the base class of outbound transport which is passed in from the outbound transport manager. \r\n\r\nchanges:\r\n - aries_cloudagent/transport/outbound/base.py\r\n     - added class attribute to store profile called root_profile with supporting code\r\n - aries_cloudagent/transport/outbound/manager.py\r\n     - updated the class creation to take the manager profile\r\n     \r\nSigned-off-by: Adam Burdett <burdettadam@gmail.com>",
    "head_branch": "feature/outbound-transport-root-profile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1433 from sicpa-dlab/feature/outbound-transport-root-profile\n\nProfile for base outbound transport class"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f35ac254a19ac294a44",
    "number": 1431,
    "body": "Add a function to the protocol to (potentially) subscribe to events\r\n\r\nRegister/subscribe to all protocol events on aca-py startup\r\n\r\nAdd meta-data to the endorser transaction record to pass information downstream (e.g. save cred def revocation info so it's available to the revocation registry tasks)\r\n\r\nCode refactor is WIP\r\n\r\n(see https://hackmd.io/51flx8CVS1ypyOjEqVl1tg?view#Implementation-Details)\r\n",
    "head_branch": "endorser_protocol",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f36ac254a19ac294a45",
    "number": 1430,
    "body": "- resolve #1427\r\n- resolve #1457\r\n\r\n**Pending**\r\nIf changes are required based on clarification received from `DIF`, those will be made in a subsequent PR.\r\n- Independent evaluation of `submission_requirements` which was requested by @rpobulic \r\nThis removes the ability to do AND operation. This behavior can also be achieved with current implementation via multiple-level nested requirements. \r\n- Should count, min, max property with `rule pick` rely on number of `input_descriptors` or `submission_requirements` [as currently implemented] or number of input from `input_descriptors` [ `VCs`, as shown in examples in `DIF Spec`]?\r\n",
    "head_branch": "issue_1427",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1430 from shaangill025/issue_1427\n\nDIF Pres Exch Updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f37ac254a19ac294a46",
    "number": 1429,
    "body": "This pr adds metadata to the event passed to an event handler. While writing a queue plugin that subscribes to events on the event bus a limitation of knowing what regular expression triggered the handler being called was identified. The event bus will call multiple handlers that match the subscribed regular expression. Currently, inside the handler, we must discover what regular expression triggered the event handler. The addition of metadata with the matched pattern in an event simplifies required logic in handlers that is error-prone.\r\n\r\nChanges:\r\n- event_bus.py \r\n  - added new EventMetaData and EventWithMetaData classes to add needed context to events",
    "head_branch": "feature/event-bus-includes-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1429 from sicpa-dlab/feature/event-bus-includes-metadata\n\nEvent bus Metadata"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f38ac254a19ac294a47",
    "number": 1428,
    "body": "Signed-off-by: Ry Jones <ry@linux.com>",
    "head_branch": "ryjones-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1428 from hyperledger/ryjones-patch-1\n\nUpdate CONTRIBUTING.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f38ac254a19ac294a48",
    "number": 1426,
    "body": "## What is this PR for?\r\n\r\nCurrently, the issuer only has the ability to offer a credential that is the same as the one defined in a credential proposal. \r\nThis PR enables the holder and issuer to negotiate about the credential via proposals and offers in order to agree on what credential the holder will receive.\r\n\r\n### Backwards compatibility:\r\n\r\nIf the counter-offer is not defined/empty logic stays the same as It was before this change.",
    "head_branch": "feat-IDENT-3499-json-ld-credential-offer-proposal-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1426 from globalid/feat-IDENT-3499-json-ld-credential-offer-proposal-fix\n\nAdd support for custom offers from the proposal"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f39ac254a19ac294a49",
    "number": 1425,
    "body": "- https://hackmd.io/BVye073CTiqgNEMXxDeVdQ?view\r\n- Detailed document describing how multiple ledger support works can be found at `./Multiledger.md` (this PR).",
    "head_branch": "mult_indy_network_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1425 from shaangill025/mult_indy_network_support\n\nMultiple Indy Ledger support and State Proof verification"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f3aac254a19ac294a4a",
    "number": 1424,
    "body": "This PR fixes the connections part of the #1417 issue.",
    "head_branch": "feat-IDENT-3371-askar-sessions-demand-connections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1424 from globalid/feat-IDENT-3371-askar-sessions-demand-connections\n\nOpen askar sessions only on demand - Connections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f3bac254a19ac294a4b",
    "number": 1423,
    "body": "This PR fixes the connections part of the #1417 issue.",
    "head_branch": "feat-IDENT-3371-connections-askar-sessions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f3cac254a19ac294a4c",
    "number": 1422,
    "body": "See issue https://github.com/hyperledger/aries-cloudagent-python/issues/1238\r\n\r\nThis PR adds automation support for requesting, endorsing and writing transactions, and for executing the workflow of creating a cred def that supports revocation.\r\n\r\nThe next stage of work will re-factor the code to use the event bus and eliminate the code duplication (see https://hackmd.io/51flx8CVS1ypyOjEqVl1tg?view#Implementation-Details)\r\n",
    "head_branch": "endorser_protocol",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1422 from ianco/endorser_protocol\n\nEndorser protocol configuration, automation and demo integration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f3dac254a19ac294a4d",
    "number": 1420,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1420 from ianco/master\n\nWhen fetching the admin config, don't overwrite webhook settings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f3eac254a19ac294a4e",
    "number": 1416,
    "body": "Currently liveness and readiness endpoints are protected by api key, it's difficult to provide agent status to external probs without revealing the key in clear text. Suggest to make the two endpoints unprotected.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1416 from weiiv/main\n\nunprotect liveness and readiness endpoints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f3fac254a19ac294a4f",
    "number": 1415,
    "body": "for `... --multitenant --cred-type json-ld` need to start the agent before creating a DID\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1415 from ianco/master\n\nFix issue with startup sequence for faber agent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f3fac254a19ac294a50",
    "number": 1413,
    "body": "To ease Aca-py's deployment in scenarios where command line arguments\r\ncannot be changed easily, make `--mediator-invitation` and\r\n`--mediator-connections-invite` available to the `provision` command.\r\n\r\n`provision` stores the mediator invite to be used by the agent (effectively \"provisioning\" it).\r\n`start` uses the stored invite. Once used, it does not establish connection again.\r\nIf the invitation changes, the  stored value is replaced by the new one, the default mediator is cleared and the new invitation\r\nis used to establish connection.\r\n\r\nBoy-scouting: I split the mediation invite tests apart from the other ones for the sake of easier comprehension/code management.\r\n",
    "head_branch": "idempotent-mediator-invitation-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1413 from sicpa-dlab/idempotent-mediator-invitation-url\n\n Make mediation invitation parameter idempotent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f40ac254a19ac294a51",
    "number": 1411,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1411 from ianco/master\n\nMake requested attributes and predicates required on indy proof request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f41ac254a19ac294a52",
    "number": 1409,
    "body": "- resolve #1397 ",
    "head_branch": "issue#1397",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1409 from shaangill025/issue#1397\n\nLog warning when unsupported problem report code is received"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f42ac254a19ac294a53",
    "number": 1408,
    "body": "## What is this PR for?\r\n\r\nThis PR fixes issue #1402 ",
    "head_branch": "feat-IDENT-3334-external-queue-encode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1408 from globalid/feat-IDENT-3334-external-queue-encode\n\nEncode DIDComm messages before sent to the queue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f43ac254a19ac294a54",
    "number": 1407,
    "body": "When implementing a custom inbound transport there is no way to access settings through the profile. This PR adds a root profile to the `BaseInboundTransport` class that allows custom implemented inbound transports access to the profile provided to `InboundTransportManager`.\r\n\r\nmain changes:\r\n- transport/inbound/base.py, now has a `root_profile` attribute.\r\n- transport/inbound/manager.py,  passes profile into `register_transport`",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1407 from sicpa-dlab/main\n\nfeature/inbound-transport-profile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f43ac254a19ac294a55",
    "number": 1406,
    "body": "Fixes issue https://github.com/hyperledger/aries-cloudagent-python/issues/1333\r\n",
    "head_branch": "close-return-route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1406 from ianco/close-return-route\n\nFix aip 20 behaviour and other cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f45ac254a19ac294a56",
    "number": 1405,
    "body": "Fixed a few typos in the demo's README.md and changed the \"ACA-Py\" abbreviation to be consistent throughout the text.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1405 from pavlos-p/main\n\nTypos in the demo's README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f45ac254a19ac294a57",
    "number": 1404,
    "body": "Fixed a few typos in the demo's README.md and changed the \"ACA-Py\" abbreviation to be consistent throughout the text.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f46ac254a19ac294a58",
    "number": 1400,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1400 from ianco/master\n\nRun integration tests using external ledger and tails server"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f47ac254a19ac294a59",
    "number": 1395,
    "body": null,
    "head_branch": "connectionless-proof-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1395 from ianco/connectionless-proof-demo\n\nConnectionless proof demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f48ac254a19ac294a5a",
    "number": 1394,
    "body": "Add test coverage for indy-credx issuance happy path",
    "head_branch": "credx-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1394 from andrewwhitehead/credx-test\n\nImplement get_credentials, credential_revoked for credx backend"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f49ac254a19ac294a5b",
    "number": 1393,
    "body": null,
    "head_branch": "cleanups",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1393 from andrewwhitehead/cleanups\n\nImport cleanups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f4aac254a19ac294a5c",
    "number": 1392,
    "body": "Corrected the return type of these instances of `inject`. Apologies for missing these on the first pass.",
    "head_branch": "fix/inject-return-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1392 from dbluhm/fix/inject-return-type\n\nfix: return type of inject"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f4aac254a19ac294a5d",
    "number": 1390,
    "body": null,
    "head_branch": "feat/recv-ack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1390 from andrewwhitehead/feat/recv-ack\n\nAdd no-op handler for generic ack message (RFC 0015)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f4bac254a19ac294a5e",
    "number": 1389,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "fix/connection-static-result-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1389 from dbluhm/fix/connection-static-result-typo\n\nfix: typo in connection static result schema"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f4cac254a19ac294a5f",
    "number": 1387,
    "body": "Requiring this method in concrete outbound classes should not be required -- this exact method signature is relevant only to redis. This probably should have been dropped with the outbound queue refactor but was missed.",
    "head_branch": "fix/queue-base-push",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1387 from dbluhm/fix/queue-base-push\n\nfix: don't require push on outbound queue implementations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f4dac254a19ac294a60",
    "number": 1383,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nNot required in general (if we are verifying a proof it means we have already received the proof) and causes an error on connectionless proof requests.\r\n",
    "head_branch": "proof-verify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1383 from ianco/proof-verify\n\nRemove connection check on proof verify"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f4eac254a19ac294a61",
    "number": 1382,
    "body": "Refactoring step before proposing changes in mediation connection\r\nsetup.\r\n\r\n* Align `OutOfBandManager.receive_invitation` signature with the\r\n  `ConnectionManager.receive_invitation` and\r\n  `DIDXManager.receive_invitation`\r\n    * rename first parameter to `invitation`\r\n    * change return type to `ConnRecord` and leave serialization work\r\n      for users of the manager\r\n\r\n* Serialize the received `ConnRecord` in\r\n  `protocols.out_of_band.v1_0.routes`\r\n\r\n* Adapt related tests. `assert\r\n  ConnRecord.deserialize(conn_rec)` is dubious as a test assertion but boiled down to `assert conn_rec\r\n  is not None`.\r\n\r\n* Use this refactoring to reduce branching in mediator connection\r\n  handling in `conductor.py`.\r\n\r\nSigned-off-by: Clément Humbert <clement.humbert@gmail.com>",
    "head_branch": "oob-connection-manager-api-alignment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1382 from sicpa-dlab/oob-connection-manager-api-alignment\n\nAlign OutOfBandManager.receive_invitation with other connection managers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f4fac254a19ac294a62",
    "number": 1380,
    "body": null,
    "head_branch": "pre-release-0.7.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1380 from andrewwhitehead/pre-release-0.7.1\n\nPre release 0.7.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f4fac254a19ac294a63",
    "number": 1379,
    "body": null,
    "head_branch": "write-schema-cred-def-non-secrets",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1379 from ianco/write-schema-cred-def-non-secrets\n\nWrite schema cred def non secrets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f50ac254a19ac294a64",
    "number": 1378,
    "body": "This PR solves issue #1362.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1378 from Fethbita/main\n\nAllow underscore in endpoints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f51ac254a19ac294a65",
    "number": 1377,
    "body": "send-proposal doesn't have `connection_id` in the schema, which is inconvenient for generated clients",
    "head_branch": "fix/send-proposal-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1377 from TimoGlastra/fix/send-proposal-schema\n\nfix: send proposal schema"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f52ac254a19ac294a66",
    "number": 1376,
    "body": "This PR removes the `required` parameter from `Injector.inject` and introduces `inject_or` that mimics the behavior of `inject(..., required=False)`. The reasoning for this change is that type checkers take issue with using the result of `inject(..., required=True)` when the signature says that it could still be `None`. For example:\r\n\r\n```python\r\nstorage = context.inject(BaseStorage)\r\nrecords = await storage.find_all_records(...)\r\n```\r\nYields the error `\"find_all_records\" is not a known member of \"None\"` when using pyright, even though we know that the call will have resulted in an error if it was actually `None`.\r\n\r\nThis PR is mostly a proposal and does not yet fix the 109 or so instances of `inject(..., required=False)` that should be switched to `inject_or`. Open to suggestions or alternatives.",
    "head_branch": "fix/injector-typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1376 from dbluhm/fix/injector-typing\n\nfeat: add inject_or"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f53ac254a19ac294a67",
    "number": 1375,
    "body": "This allows type checkers such as pyright to detect that `ConnRecord.retrieve_by_id` returns a `ConnRecord` rather than a `BaseRecord`\r\n\r\nThese changes are purely cosmetic/developer quality of life improvements.",
    "head_branch": "fix/base-record-typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1375 from dbluhm/fix/base-record-typing\n\nfix: refine typing on base record"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f54ac254a19ac294a68",
    "number": 1374,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n",
    "head_branch": "release-071-rc0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1374 from swcurran/release-071-rc0\n\nChange log for 0.7.1 and update version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f55ac254a19ac294a69",
    "number": 1373,
    "body": "- resolve #1370\r\n- default timezone: UTC",
    "head_branch": "issue_cred",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1373 from shaangill025/issue_cred\n\nTimezone inclusion [ISO 8601] for W3C VC and Proofs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f56ac254a19ac294a6a",
    "number": 1371,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n\r\nI added a mock for `aries_cloudagent.vc`, which eliminated all of the errors. Of course I suspect that it also removes the doc generation for that module, but am not certain.  But I feel better that all the warnings are gone...\r\n",
    "head_branch": "rtd-updates-071",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1371 from swcurran/rtd-updates-071\n\nUpdates to eliminate warnings on RTD doc generation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f57ac254a19ac294a6b",
    "number": 1368,
    "body": "This mode can be run by specifying askar-profile as the wallet_type in the CLI argument --multitenancy-config\r\nAdded AskarProfileMultitenantManager class which handles the new logic to get the wallet profile. The old logic was moved to MultitenantManager. The both extend BaseMultitenantManager where most of the previous code remained\r\nThe MultitenantManagerProvider chooses the right manager to use depending on the CLI argument",
    "head_branch": "feat-IDENT-3049-multitenancy-single-wallet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1368 from globalid/feat-IDENT-3049-multitenancy-single-wallet\n\n#1349 Added option to multitenant mode to handle multiple wallets inside the same subwallet with many Askar profiles"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f58ac254a19ac294a6c",
    "number": 1366,
    "body": null,
    "head_branch": "rtd-renames",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1366 from andrewwhitehead/rtd-renames"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f58ac254a19ac294a6d",
    "number": 1364,
    "body": "Quick fix for what appears to be a typo.",
    "head_branch": "fix/predicate-timestamp-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1364 from dbluhm/fix/predicate-timestamp-check\n\nfix: error not raised in predicate timestamp check"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f59ac254a19ac294a6e",
    "number": 1363,
    "body": "This mode can be run by specifying `askar-profile` as the `wallet_type` in the CLI argument `--multitenancy-config`\r\nAdded `AskarProfileMultitenantManager` class which handles the new logic to get the wallet profile. The old logic was moved to `MultitenantManager`. The both extend `BaseMultitenantManager` where most of the previous code remained\r\nThe MultitenantManagerProvider chooses the right manager to use depending on the CLI argument",
    "head_branch": "feat-IDENT-3049-multitenancy-with-single-wallet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f5aac254a19ac294a6f",
    "number": 1360,
    "body": null,
    "head_branch": "IDENT-3101-raw-key-derivation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f5bac254a19ac294a70",
    "number": 1359,
    "body": "Updates various files necessary to generate the Read The Docs files about ACA-Py.  Should have been done before the tagging of 0.7.0 -- my miss.\r\n\r\nMostly complete, with two classes of warnings in the generation process remaining as follows:\r\n\r\n1. One instance of this:\r\n\r\n```bash\r\nWARNING: error while formatting arguments for aries_cloudagent.protocols.issue_credential.v1_0.models.credential_exchange.V10CredentialExchange: unhashable type: 'list'\r\n```\r\n\r\n2. Nine instances with the same symptom referencing `__all__`, here are two:\r\n\r\n```\r\nWARNING: __all__ should be a list of strings, not [typing.Callable[[str, dict], dict], <class 'aries_cloudagent.vc.ld_proofs.document_loader.DocumentLoader'>] (in module aries_cloudagent.vc.ld_proofs.document_loader) -- ignoring __all__\r\nWARNING: __all__ should be a list of strings, not [<class 'aries_cloudagent.vc.ld_proofs.crypto.KeyPair.KeyPair'>, <class 'aries_cloudagent.vc.ld_proofs.crypto.WalletKeyPair.WalletKeyPair'>] (in module aries_cloudagent.vc.ld_proofs.crypto) -- ignoring __all__\r\n\r\n```\r\n\r\nIf anyone knows how to address that, please do.\r\n\r\nTo reproduce the errors on this branch, follow the instructions in the `readme.md` file in the \\docs folder (install sphinx, run the build command).",
    "head_branch": "rtd-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1359 from swcurran/rtd-updates\n\nUpdates to the Read The Docs for 0.7.0/1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f5cac254a19ac294a71",
    "number": 1356,
    "body": "Appears to be an error leftover from when the problem report message definition was relocated.",
    "head_branch": "fix/connection-problem-report",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1356 from dbluhm/fix/connection-problem-report\n\nfix: problem report handler for connection specific problems"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f5dac254a19ac294a72",
    "number": 1355,
    "body": null,
    "head_branch": "poc-cli-subwallet-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f5eac254a19ac294a73",
    "number": 1352,
    "body": "@Moopli had an interop issue between AFGO and ACA-Py. It came down to ACA-Py modifying the json returned from an attachment decorator which would cause issues later on because the object was missing some expected properties. (see more info below)\r\n\r\nTo prevent such mistakes in the future it is now fixed by making a deep copy both when setting and retrieving json from an attachment decorator. I'm not 100% what the impact of this is on performance, and whether json.dumps and json.loads may be faster.\r\n\r\nWe could also fix it by making a copy in the json ld handler, but this won't fix the issue all together. @andrewwhitehead I'm interested to hear which approach you'd take.\r\n\r\n> TimoGlastra I found the bug\r\nfrom here:\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/protocols/issue_credential/v2_0/manager.py#L571\r\nwe end up calling ld_proof/handler LDProofCredFormatHandler.receive_credential, and when it gets here:\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/protocols/issue_credential/v2_0/formats/ld_proof/handler.py#L493\r\nit modifies the original attachment in the message, removing the proof member from the credential. So when the ld proof handler returns, V20CredManager stores the damaged message, causing the later error on deserialization.\r\nThe issue is, AttachDecorator returns json attachments by reference: https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/messaging/decorators/attach_decorator.py#L560\r\nTo fix this issue alone, LDProofCredFormatHandler.receive_credential could simply build a shallow copy of cred_dict\r\nbut I imagine that where one bug appears, others lurk in silence - is AttachDecorator` supposed to provide a mutable reference? Or should it return a deep copy of the dict?\r\nthe workaround I'm doing right now is to make the issued credential a b64 attachment instead",
    "head_branch": "fix/deepcopy-attach-decorator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1352 from animo/fix/deepcopy-attach-decorator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f5fac254a19ac294a74",
    "number": 1350,
    "body": null,
    "head_branch": "poc-multitenant-profiles",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f5fac254a19ac294a75",
    "number": 1348,
    "body": "This PR adjusts the outbound queue interface to be more easily generalized. As we've worked to implement outbound queuing via Kafka, we've found that the configuration just did not map onto what was needed in Kafka. Rather than expecting a connection string and parsing protocol etc. etc., this PR just passes all settings to the outbound queue implementation and allows it to read plugin configuration from the settings. This affords much greater flexibility in the structure of the outbound queue implementation. As a result, I removed some outbound queue command line arguments that were no longer used.\r\n\r\nAdditionally, I updated aioredis to 2.0.0. From the aioredis maintainers speaking on version 1.3.1 of the library:\r\n\r\n> As of December, 2019, this library had been abandoned. The code had grown stale, issues were piling up, and we were rapidly becoming out-of-date with Redis’s own feature-set. In light of this, the decision was made to ensure that the barrier to support for potential maintainers or contributors would be minimized.\r\n\r\nI found that using aioredis 2.0.0 significantly simplified the code as it stood.\r\n\r\nSome other minor consistency fixes were made to bring the outbound queue package in line with the rest of the code base.\r\n\r\nI haven't had an opportunity to integration test the redis changes just yet. I noticed there were some tests for this but they did not appear to be run anywhere in the tests run by the github actions. Is this something we would want run as part of PR checks or is the occasional one-off sufficient?",
    "head_branch": "refactor/outbound-queue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1348 from dbluhm/refactor/outbound-queue\n\nRefactor outbound queue interface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f60ac254a19ac294a76",
    "number": 1347,
    "body": "Doing a bit of spit balling.\r\n\r\nWe previously addressed the need for supplying configuration to plugins with the `--plugin-config` flag to load a yaml file into `settings` for use by plugins. We've found this feature to be quite helpful, especially in the case of loading multiple plugins (i.e. resolvers) that each require their own configuration. However, we have also found that it would be handy to be able to set or modify these values from the command line. So instead of having to modify the `plugin_config.yml` you're using to load the universal resolver plugin to point it to a different resolver instance, we could have a command line argument like the following:\r\n```\r\n--plugin-config-value http_uniresolver.endpoint=http://localhost:3000\r\n```\r\n\r\nOr perhaps a short form of:\r\n```\r\n-o http_uniresolver.endpoint=http://localhost:3000\r\n```\r\n\r\nWith such a command line argument, we propose that dotted key values act as a shorthand for nesting values. For example, `a.b.c.d=value` becomes `{\"a\": {\"b\": {\"c\": {\"d\": \"value\"}}}}`. We also propose that the value be loaded as yaml to avoid parsing ourselves while still allowing us to express values more complicated than just strings and numbers.\r\n\r\nOpen to thoughts :slightly_smiling_face: ",
    "head_branch": "feature/plugin-config-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1347 from dbluhm/feature/plugin-config-cli\n\nfeat: set arbitrary plugin config value at cli"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f61ac254a19ac294a77",
    "number": 1342,
    "body": "Add an optional parameter '--ledger-socks-proxy' to specify the socks proxy and pass it on to pool configuration\r\nimplementation for issue #1341 \r\n\r\n**Attention**! This pull request requires the newest versions of INDY-SDK and INDY-VDR (s. issue)\r\n\r\nSigned-off-by: Vitalij Reicherdt <vitalij.reicherdt@commerzbank.com>",
    "head_branch": "feature/support-zmq-socks-proxy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1342 from IDunion/feature/support-zmq-socks-proxy\n\nAdd an optional parameter '--ledger-socks-proxy'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f62ac254a19ac294a78",
    "number": 1339,
    "body": "Signed-off-by: john court <jcourt@anonyome.com>",
    "head_branch": "UsingOpenAPI#1329",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1339 from anonyome/UsingOpenAPI#1329\n\nCloses#1329 Initial cut of OpenAPI Code Generation guidelines"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f63ac254a19ac294a79",
    "number": 1334,
    "body": "- resolve #1327 ",
    "head_branch": "cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1334 from shaangill025/cleanup\n\nUpdated IndyCredPrecisSchema - pres_referents renamed to presentation_referents"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f64ac254a19ac294a7a",
    "number": 1331,
    "body": "Also cleans up and relocates the (incomplete) in-memory ECDH-1PU support.\r\n\r\nThis does not make the DIDComm v2 envelope format(s) available for communication yet, it only establishes some of the basic functionality.\r\n",
    "head_branch": "didcomm-initial",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1331 from andrewwhitehead/didcomm-initial\n\nInitial DIDComm v2 envelope support via Askar backend"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f65ac254a19ac294a7b",
    "number": 1325,
    "body": "Fixes error when deserializing a connection record that has a `connection_protocol` value set:\r\n```\r\nmarshmallow.exceptions.ValidationError: {'connection_protocol': ['Must be one of: c, o, n, n, e, c, t, i, o, n, s, /, 1, ., 0, d, i, d, e, x, c, h, a, n, g, e, /, 1, ., 0.']}\r\n```",
    "head_branch": "fix/conn-record-protocl-deser",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1325 from dbluhm/fix/conn-record-protocl-deser\n\nfix: error on deserializing conn record with protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f65ac254a19ac294a7c",
    "number": 1324,
    "body": "I believe this only affects connection establishment when using an Askar wallet together with multi-tenant wallets.\r\n\r\nFixes #1323 ",
    "head_branch": "fix/get_pack_recip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1324 from andrewwhitehead/fix/get_pack_recip\n\nHandle unpadded protected header in PackWireFormat::get_recipient_keys"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f66ac254a19ac294a7d",
    "number": 1318,
    "body": "Fixing typo (line was accidentally commented out), and explaining where to copy paste a code snippet (unclear from the instructions)",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f67ac254a19ac294a7e",
    "number": 1317,
    "body": "",
    "head_branch": "askar-0.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1317 from andrewwhitehead/askar-0.2\n\nUpdate version to 0.7.0, update to Askar 0.2 release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f68ac254a19ac294a7f",
    "number": 1316,
    "body": "- Extends work done by @DaevMithran in #1216 \r\n- Adds a `create-offer` endpoint in `issue-credential-v1` and `issue-credential-v2` to create an offer independent of connection.\r\n- Support both `issue-credential-v1` and `issue-credential-v2` credential offer workflow \r\n[Faber] with auto flags, offer_sent -> request_received -> credential_issued\r\n[Alice] with auto flags, offer_received -> request_sent -> credential_received\r\n- Test coverage",
    "head_branch": "oob_cred_offer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1316 from shaangill025/oob_cred_offer\n\nOOB Protocol - CredentialOffer Attachment Support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f69ac254a19ac294a80",
    "number": 1314,
    "body": "Fixes #1307\r\n\r\nAlso avoids a potential failure when two agent processes try to perform the public DID upgrade process simultaneously.",
    "head_branch": "pub-did-posture",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1314 from andrewwhitehead/pub-did-posture\n\nSet DID posture to posted when assigned as the public DID"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f6aac254a19ac294a81",
    "number": 1306,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "tweak-acme-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1306 from swcurran/tweak-acme-doc\n\nTweaks to AcmeWorkshop Docs -- instruction to use external ledger"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f6bac254a19ac294a82",
    "number": 1305,
    "body": "Previously, `posted` metadata was used to check a public did.\r\nHowever, multiple dids could have `posted` metadata, even though these dids are not a public did.\r\nThis PR uses the `get_public_did()` method to get and check a public did.\r\n\r\nAlso, This PR resolves https://github.com/hyperledger/aries-cloudagent-python/issues/1256\r\n\r\nThanks!",
    "head_branch": "correct-public-invitation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f6bac254a19ac294a83",
    "number": 1304,
    "body": "",
    "head_branch": "pre-release-0.7-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1304 from andrewwhitehead/pre-release-0.7-1\n\nUpdate version to 0.7.0-rc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f6cac254a19ac294a84",
    "number": 1303,
    "body": "- This PR is connected to #1294. Keeping this separate for the review process. Once this merged and PR#1294 is updated, I expect all checks to pass.\r\n- Following discussion with @andrewwhitehead, now using `is_holder` to decide whether `VP` should be signed or not. The `VP` cannot be verified unless `is_holder` property is specified in the `presentation_definition` which is causing the tests to fail.",
    "head_branch": "demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1303 from shaangill025/demo\n\nDIF PE Integration Test Update - required before PR#1294 merge"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f6dac254a19ac294a85",
    "number": 1302,
    "body": "",
    "head_branch": "actions-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1302 from andrewwhitehead/actions-fixes\n\nFix warnings due to action API updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f6eac254a19ac294a86",
    "number": 1301,
    "body": "Minor fix for jsonld verify route.",
    "head_branch": "fix/jsonld-verify-vmethod",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1301 from sicpa-dlab/fix/jsonld-verify-vmethod\n\nfix: failure to verify jsonld on non-conformant doc but vaild vmethod"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f6fac254a19ac294a87",
    "number": 1300,
    "body": "Follow-up to https://github.com/hyperledger/aries-cloudagent-python/pull/1296",
    "head_branch": "accept-short-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1300 from andrewwhitehead/accept-short-did\n\nAccept short DIDs for their_public_did parameter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f70ac254a19ac294a88",
    "number": 1298,
    "body": "PR #1296 introduced a problem that  when the `pthid` got set to the public DID in a DIDX request with an already qualified DID it would still get prefixed with `did:sov`.\r\n\r\n\r\nSigned-off-by: Woerner Dominic (RBCH/PJ-IOT) <dominic.woerner2@ch.bosch.com>",
    "head_branch": "fix/handle-qualified-dids",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1298 from boschresearch/fix/handle-qualified-dids\n\ncheck if did is already qualified"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f71ac254a19ac294a89",
    "number": 1297,
    "body": "",
    "head_branch": "pre-release-0.7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1297 from andrewwhitehead/pre-release-0.7\n\nUpdate version to 0.7.0-rc0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f71ac254a19ac294a8a",
    "number": 1296,
    "body": "Be more permissive in validation of target public DID in `didexchange/create-request`.\r\nPublic DIDs are resolved using the resolver interface which supports additional DID methods besides `did:sov` (e.g. `did:web`).\r\n\r\nOnly question is if we should still allow unqualified DIDs.",
    "head_branch": "feature/support-generic-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1296 from boschresearch/feature/support-generic-did\n\nSupport generic public DIDs in DIDX request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f72ac254a19ac294a8b",
    "number": 1295,
    "body": "Be more permissive in validation of a DID when creating a DID Exchange request targeting a public DID. \r\nThe public DID is resolved using the resolver interface which supports resolution of additional did methods (e.g. did:web)\r\n\r\nSigned-off-by: Woerner Dominic (RBCH/PJ-IOT) <dominic.woerner2@ch.bosch.com>",
    "head_branch": "feature/support-generic-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f73ac254a19ac294a8c",
    "number": 1294,
    "body": "- resolve #1261\r\n- I think this meets the following attributes from the DIF spec ~~but does not use the `is_holder` property to decide whether the `VP` should be signed or not. But in case, this is needed then this can be done with minimal changes/extension~~.\r\n1. `Verify that the Holder or Subject of the Claim still controls the identifier [DID].` [Link](https://identity.foundation/presentation-exchange/#proof-of-identifier-control)\r\n2. `Holder of  Claim is the same as the Subject of the attribute.` [Link](https://identity.foundation/presentation-exchange/#note-2) ",
    "head_branch": "dif-pres-exch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1294 from shaangill025/dif-pres-exch\n\nDIF PE - is_holder property implementation - compliant with DIF spec"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f74ac254a19ac294a8d",
    "number": 1293,
    "body": "- Basic unit test coverage\r\n- Split out unit tests for `Role` class\r\n- Move `taa_digest` implementation to base class\r\n- Update indy-vdr version\r\n- Implement `txn_endorse` for IndyVdrLedger\r\n",
    "head_branch": "vdr-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1293 from andrewwhitehead/vdr-tests\n\nAdd indy-vdr test coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f75ac254a19ac294a8e",
    "number": 1289,
    "body": "Signed-off-by: Ana Maria Franco Cuesta <afrancoc2000@gmail.com>\r\nFixing the issue [here](https://github.com/hyperledger/aries-cloudagent-python/issues/1288)\r\n\r\n",
    "head_branch": "update-acme-init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1289 from afrancoc2000/update-acme-init\n\nChanging acme initialization to be like Alice and Faber ones"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f76ac254a19ac294a8f",
    "number": 1287,
    "body": "Also adds support for endorser_did/write_ledger params",
    "head_branch": "fix-accum-from",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1287 from andrewwhitehead/fix-accum-from\n\nFix handling of empty accum_from in revocation state"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f77ac254a19ac294a90",
    "number": 1286,
    "body": "This PR introduces events relating to outbound messages. These changes are looking forward to more separation between the core ACA-Py message processing and generation components and message delivery mechanisms, which is fraught with nuance and largely dictated by use case. In such a state where there is a separation between message generation and delivery, we propose that these events (and/or similar events) act as the primary interface between the two. For now, however, these events are simply emitted and do not replace any of the previous functionality with one significant exception: considering how `OutboundSendStatus` was returned up the call stack from `outbound_message_router` and beyond, an `OutboundStatusEvent` seemed preferable. This change is mostly self-contained except for the recent `forward` message handler additions made to help with emitting push notifications to clients of mediators.\r\n\r\n@TimoGlastra we were hoping to get your opinion on this change. As implemented, do you think the new `OutboundStatusEvent` would provide enough context to a push notifier or do we want to continue with a specific forward message event encapsulating the send status of the forwarded message?",
    "head_branch": "feature/transport-events",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f78ac254a19ac294a91",
    "number": 1285,
    "body": "This fixes several AATH tests by formatting the `cred_rev_id` of a credential info structure as a string, not a number (Askar/Credx backend).",
    "head_branch": "credx-rev-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1285 from andrewwhitehead/credx-rev-id\n\nFormat cred_rev_id as a string"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f79ac254a19ac294a92",
    "number": 1284,
    "body": "- Following discussion with Andrew, decided to move the sorting logic into `./storage/vc_holder` for all 3 backends. \r\n- If there is a `dateutil` exception triggered when sorting then return the `records` list as it is\r\n- Reverted changes made to `./present_proof/v2_0/formats/dif/handler.py`, `./present_proof/v2_0/routes.py` and corresponding tests.",
    "head_branch": "dif-pres-exch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1284 from shaangill025/dif-pres-exch\n\nPR#1276 Rework - Moved sorting of VCRecords into VCHolder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f7aac254a19ac294a93",
    "number": 1283,
    "body": "The `BaseLedger` interface ((it should really be called `IndyLedger`) is sufficient and allows indy-vdr to substitute.\r\n\r\nThis PR also changes the requirement checks in the demo agents to allow running without indy-sdk.",
    "head_branch": "fix-indy-resolver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1283 from andrewwhitehead/fix-indy-resolver\n\nRemove indy-sdk dependency in IndyDidResolver"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f7bac254a19ac294a94",
    "number": 1282,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nMakes the json response consistent with the previous aca-py release\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1282 from ianco/master\n\nRevert create schema and cred_def json response (remove 'sent')"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f7bac254a19ac294a95",
    "number": 1281,
    "body": "- To fix explicit invitations AATH tests\r\n- Got approval from @nodlesh, ready to be merged ",
    "head_branch": "connections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1281 from shaangill025/connections\n\nOOB explicit invitations - Workaround for missing invitation_msg_id in webhook payload"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f7cac254a19ac294a96",
    "number": 1280,
    "body": "Signed-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>",
    "head_branch": "connections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1280 from shaangill025/connections\n\nDIDExchange Error Fix - /didexchange/create-request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f7dac254a19ac294a97",
    "number": 1278,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "shared-components",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f7eac254a19ac294a98",
    "number": 1276,
    "body": "- resolve #1262 \r\n[includes detail about the approach and discussion around the use cases]\r\n- Maybe `./demo/AliceWantsAJsonCredential.md` needs to be updated\r\n1. With no `auto` settings on. if multiple credentials are applicable to a `presentation_request` then it is required for `holder` to specify the credential `record_id`.\r\n\r\n```\r\n\"record_ids\": {\r\n     \"citizenship_input_1\": [ \"1496316f972e40cf9b46b35971182337\" ]\r\n}\r\n```\r\n2. With `auto` settings on, if X credentials are applicable to a `presentation_request` and only Y credentials should be returned based upon `submission_requirements`, then first Y credentials sorted by `issuanceDate` [in reverse] are returned.",
    "head_branch": "dif-pres-exch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1276 from shaangill025/dif-pres-exch\n\nDIF PE - giving Holder more control on how to specify presentation_request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f7fac254a19ac294a99",
    "number": 1275,
    "body": "Ledger methods are updated to provide endorser support for revocation updates\r\n\r\nbdd updates are to allow tests to be run using askar wallet\r\n",
    "head_branch": "shared-components",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1275 from ianco/shared-components\n\nUpdate bdd tests to support askar; fix ledger method signatures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f80ac254a19ac294a9a",
    "number": 1274,
    "body": "We've found this to be generally useful in some of our coding efforts and after a brief discussion with @esune noting that it would be of use in some of his ongoing work, we figured it would be good to pop this out of our ongoing work so it can be used elsewhere.",
    "head_branch": "feature/eventbus-wait",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1274 from dbluhm/feature/eventbus-wait\n\nAdd `wait_for_event` method on event bus"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f81ac254a19ac294a9b",
    "number": 1273,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nFixes the OpenAPI example\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f82ac254a19ac294a9c",
    "number": 1272,
    "body": "- Now able to tell if a ConnRecord was created using `0160`, `0023` and `0023 with didcomm v2 envelope` [in future]\r\n- Should fix AATH connection tests, as `connection_protocol` can be used instead of relying on `missing invitation_msg_id` which is no longer the case as to support connection_reuse [`RFC 0434`]",
    "head_branch": "connections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1272 from shaangill025/connections\n\nConnection protocol used in ConnRecord"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f82ac254a19ac294a9d",
    "number": 1267,
    "body": "- Add `indy-vdr` ledger client\r\n- Add `indy-credx` credential handling\r\n- Add `aries-askar` storage backend\r\n\r\nThe `performance`, `alice`, and `faber` demo agents should all support the `--wallet-type askar` argument for testing with the new backend components, as does the agent itself when run with `aca-py`.",
    "head_branch": "shared-components",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1267 from hyperledger/shared-components\n\nAdd support for shared components"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f83ac254a19ac294a9e",
    "number": 1266,
    "body": "",
    "head_branch": "perf-demo-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1266 from andrewwhitehead/perf-demo-fix\n\nFix performance demo, clean up some warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f84ac254a19ac294a9f",
    "number": 1265,
    "body": "- Should fix `HandshakeReuse validation failed` error when trying to reuse 0160 connection [public_did]",
    "head_branch": "oob_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1265 from shaangill025/oob_fix\n\nOOB- 0160 connection reuse fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f85ac254a19ac294aa0",
    "number": 1259,
    "body": "While writing test for AATH I noticed in the vc-data-model section on [types](https://www.w3.org/TR/vc-data-model/#types), the following excerpt:\r\n\r\n> All credentials, presentations, and encapsulated objects MUST specify, or be associated with, additional more narrow types (like UniversityDegreeCredential, for example) so software systems can process this additional information.\r\n\r\nThis is also tested in the vc-test-suite: https://github.com/w3c/vc-test-suite/blob/gh-pages/test/vc-data-model-1.0/10-basic.js#L95-L99\r\n\r\nThis PR adds this restriction to the validation of VCs in ACA-Py",
    "head_branch": "fix/additional-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1259 from animo/fix/additional-types\n\nfix: credentials must specify additional types"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f86ac254a19ac294aa1",
    "number": 1252,
    "body": "The checker method that checks for properties without a context was giving incorrect results for the vaccination context. This PR also checks if compaction expands a property as described in https://github.com/w3c-ccg/vaccination-vocab/issues/22\r\n\r\n",
    "head_branch": "fix/expanded-type-checker",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1252 from animo/fix/expanded-type-checker\n\nfix: check for expanded types in context checker"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f87ac254a19ac294aa2",
    "number": 1250,
    "body": "- Addresses the following from #1247, @andrewwhitehead will this meet the requirement? \r\n> As discussed, I think this tag filtering belongs in VCHolder so that it can be specialized for the specific backends, but it's fine to merge this as-is and I can revisit it later with the shared-components work. Most important is that it works for now.\r\n- resolve #1253\r\n- Verification mechanism to check if the received presentation matches against the `constraints` in `presentation_definition`",
    "head_branch": "dif-pres-exch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1250 from shaangill025/dif-pres-exch\n\nDIF PE - VCHolder backend-specific tag_query building and handle no given_id credentials"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f88ac254a19ac294aa3",
    "number": 1249,
    "body": "This should be much faster when there are many DIDs stored in the wallet.\r\n\r\nThe 'public' DID metadata property is now generally ignored except when auto-upgrading an existing wallet. The `get_posted_dids` method is updated to NOT filter the public DID, as it did previously.\r\n\r\nIncludes a couple fixes for warnings when running tests.",
    "head_branch": "fast-did-public",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1249 from andrewwhitehead/fast-did-public\n\nUpdate get/set_did_public to use a storage record pointer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f89ac254a19ac294aa4",
    "number": 1248,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "fix/metadata-deletion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1248 from dbluhm/fix/metadata-deletion\n\nfix: delete metadata on connection deletion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f8aac254a19ac294aa5",
    "number": 1247,
    "body": "- resolve #1244 \r\n- resolve #1242 \r\n- resolve #1240 \r\n- present_proof_v1 and OOB attachment fix",
    "head_branch": "dif-pres-exch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1247 from shaangill025/dif-pres-exch\n\nDIF PE Updates and present_proof_v1_0 OOB Attachment Fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f8aac254a19ac294aa6",
    "number": 1246,
    "body": "Adds endorser protocol support for revocation functionality such as:\r\n- publishing a revocation registry definition to the ledger\r\n- publishing a revocation entry to the ledger\r\nIt is based on #1230, so that PR should likely be merged first.c.c: @ianco \r\n\r\nCurrently, if endorsing is requested the agent will NOT handle the generation and rotation of the revocation registry for the user. Improvements to the usability are necessary, see #1238 for reference.\r\n\r\nA set of BDD tests validating the end-to-end flow has been added.\r\n",
    "head_branch": "endorser-revocation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1246 from esune/endorser-revocation\n\nAdd endorser protocol support for revocation functionality"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f8bac254a19ac294aa7",
    "number": 1245,
    "body": "Adds endorser protocol support for revocation functionality such as:\r\n- publishing a revocation registry definition to the ledger\r\n- publishing a revocation entry to the ledger\r\nIt is based on #1230, so that PR should likely be merged first.c.c: @ianco \r\n\r\nCurrently, if endorsing is requested the agent will NOT handle the generation and rotation of the revocation registry for the user. Improvements to the usability are necessary, see #1238 for reference.\r\n\r\nA set of BDD tests validating the end-to-end flow has been added.\r\n",
    "head_branch": "endorser-revocation-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f8cac254a19ac294aa8",
    "number": 1236,
    "body": "- resolve #1237 \r\n- Holder can now control which W3C credentials get applied to each `input_descriptor` in `presentation_definition`. \r\n```\r\n{\r\n    \"<input descriptor id_1>\": [\"<record id_1>\", \"<record id_2>\"],\r\n    \"<input descriptor id_2>\": [\"<record id>\"],\r\n}\r\n``` \r\n- Fixes error which causes AATH present-proof-v2 to fail.",
    "head_branch": "dif-pres-exch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1236 from shaangill025/dif-pres-exch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f8dac254a19ac294aa9",
    "number": 1235,
    "body": "Still work in progress - working on updates to the documentation, and adding BDD tests.  Logic in the demo is pretty straightforward and will be enhanced.\r\n\r\nThe holder `credentialSubject.id` (in the credential) must be specified in order for the presentation to validate.  I have added this as an optional parameter to the `/create-request` endpoint, if the holder supplied a did then it will be inserted into the credential request as the `credentialSubject.id`.  (Not sure if this is the best approach @TimoGlastra @andrewwhitehead @swcurran )\r\n",
    "head_branch": "json-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1235 from ianco/json-demo\n\nUpdate Alice/Faber demo to include json-ld credentials and proofs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f8eac254a19ac294aaa",
    "number": 1234,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nNot sure if this is the best approach, but need to get the record_id of each credential to be able to add these to the presentation.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1234 from ianco/master\n\nInclude record_id in the returned list of credentials"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f8fac254a19ac294aab",
    "number": 1233,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nFix this error:\r\n\r\n```\r\nAlice      | Traceback (most recent call last):\r\nAlice      |   File \"/home/indy/.pyenv/versions/3.6.13/lib/python3.6/site-packages/aiohttp/web_protocol.py\", line 422, in _handle_request\r\nAlice      |     resp = await self._request_handler(request)\r\nAlice      |   File \"/home/indy/.pyenv/versions/3.6.13/lib/python3.6/site-packages/aiohttp/web_app.py\", line 499, in _handle\r\nAlice      |     resp = await handler(request)\r\nAlice      |   File \"/home/indy/.pyenv/versions/3.6.13/lib/python3.6/site-packages/aiohttp/web_middlewares.py\", line 119, in impl\r\nAlice      |     return await handler(request)\r\nAlice      |   File \"/home/indy/aries_cloudagent/admin/server.py\", line 162, in ready_middleware\r\nAlice      |     return await handler(request)\r\nAlice      |   File \"/home/indy/aries_cloudagent/admin/server.py\", line 199, in debug_middleware\r\nAlice      |     return await handler(request)\r\nAlice      |   File \"/home/indy/.pyenv/versions/3.6.13/lib/python3.6/site-packages/aiohttp_apispec/middlewares.py\", line 45, in validation_middleware\r\nAlice      |     return await handler(request)\r\nAlice      |   File \"/home/indy/aries_cloudagent/admin/server.py\", line 366, in setup_context\r\nAlice      |     return await task\r\nAlice      |   File \"/home/indy/aries_cloudagent/protocols/present_proof/v2_0/routes.py\", line 566, in present_proof_credentials_list\r\nAlice      |     credentials = indy_credentials + dif_cred_value_list\r\nAlice      | TypeError: can only concatenate tuple (not \"list\") to tuple\r\n```",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1233 from ianco/master\n\nFix type mismatch error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f90ac254a19ac294aac",
    "number": 1231,
    "body": "- removes the accidental `?`\r\n- resolves #1228 \r\n\r\nSigned-off-by: Woerner Dominic (RBCH/PJ-IOT) <dominic.woerner2@ch.bosch.com>",
    "head_branch": "fix/1228-pattern-too-permissive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1231 from boschresearch/fix/1228-pattern-too-permissive\n\nfix regex for did:web pattern"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f91ac254a19ac294aad",
    "number": 1230,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nFor @esune , just cd to `./demo` and run:\r\n\r\n```\r\n./run_bdd -t @T002-RFC0586\r\n```\r\n\r\nRevocation logic is commented out.",
    "head_branch": "endorser_bdd_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch 'endorser_bdd_2' of https://github.com/ianco/aries-cloudagent-python into endorser-revocation-tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f91ac254a19ac294aae",
    "number": 1229,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "docs/did-resolver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1229 from dbluhm/docs/did-resolver\n\ndocs: add did resolution docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f92ac254a19ac294aaf",
    "number": 1226,
    "body": "This PR implements a new argument for specifying a yaml file for loading arbitrary plugin configuration.\r\nCloses #1121\r\n\r\nCredit to @Luis-GA ",
    "head_branch": "feature/plugin-config-by-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1226 from sicpa-dlab/feature/plugin-config-by-file\n\nPlugin configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f93ac254a19ac294ab0",
    "number": 1225,
    "body": "This PR updates ACA-Py to use the soon-to-be-released PyDID 0.3.x. These updates aim to address the following issues through the updated PyDID features:\r\n- Reliance on unmaintained `voluptuous` library. PyDID now uses `pydantic`.\r\n- Ugly validation errors. These errors should now be significantly easier to understand due to being more succinct and descriptive.\r\n- Extensibility. Subclassing and extending PyDID objects to tighten or loosen validation on DID Documents is far simpler.\r\n\r\nIn addition to these benefits granted by the updated PyDID version, this PR also slightly modifies the DID Resolver interface to simply return a dictionary on `resolve`. Thanks to the rapid development of the DID spec, there is a wide variety of DID Documents with varying levels of conformance to the DID spec in the wild. By separating the resolution and deserialization steps, we elect to give the caller the responsibility of determining how strict or otherwise the document parsing should be or whether the document is even parsed at all.\r\n\r\nFor `dereference`, a \"least common denominator\" approach is taken. The document parsing is attempted with strict rules but, if validation fails, it will fall back to a simplified `NonconformantDocument`. By following this approach, we can take advantage of retrieving parsed `VerificationMethod`s or `Service`s when the document is spec-conforming while still being able to retrieve values by ID from non-spec-conforming documents.",
    "head_branch": "feature/update-pydid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1225 from sicpa-dlab/feature/update-pydid\n\nUpdate to PyDID 0.3.x"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f94ac254a19ac294ab1",
    "number": 1224,
    "body": "… w.i.p.\r\n\r\nSigned-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "endorser_bdd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f95ac254a19ac294ab2",
    "number": 1223,
    "body": "Steps to reproduce:\r\n1. Clone repo\r\n2. `cd demo`\r\n3. `run_demo faber`\r\n\r\nExpected:\r\n- to start the demo connection flow\r\n\r\nActual:\r\n- fails with:\r\n\r\n```\r\n./run_demo faber                                             \r\nPreparing agent image...\r\nsha256:5c8d0c8453ec05bcd7ff2e234267e09e113ac041707cb4f21a22f613f832727c\r\nTrying to detect ngrok service endpoint\r\njq not found\r\n192.168.65.3\r\ndocker: Error response from daemon: Mounts denied: \r\nThe path ..../aries-cloudagent-python/demo/../logs\r\nis not shared from OS X and is not known to Docker.\r\nYou can configure shared paths from Docker -> Preferences... -> File Sharing.\r\nSee https://docs.docker.com/docker-for-mac/osxfs/#namespaces for more info.\r\n.\r\nERRO[0000] error waiting for container: context canceled \r\n```\r\n\r\nThe proposed fix assumes that `logs` are only required when `--timing` in enabled.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1223 from eabadjiev/main\n\nrun_demo fails if ../logs folder doesn't exist"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f96ac254a19ac294ab3",
    "number": 1220,
    "body": "Introduces an optional flag `use_public_did` in `/didexchange/create-request`\r\n\r\nEnabling the flag will create a DIDX request with the public DID of the requester.\r\nThe approach is not ideal since the did doc will still be attached to the request instead of just setting the `did` property as suggested in the [RFC](https://github.com/hyperledger/aries-rfcs/blob/master/features/0023-did-exchange/README.md#request-message-attributes) (but not required :) ).\r\n\r\nSetting only the `did` property leads to issues because of inconsistencies in ACA-Py's DID Doc class and the DID Doc class returned by the resolver. ",
    "head_branch": "feature/didx-with-public-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1220 from boschresearch/feature/didx-with-public-did\n\nFeature/didx request with public did"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f97ac254a19ac294ab4",
    "number": 1218,
    "body": "Add native [did:web](https://w3c-ccg.github.io/did-method-web/) resolver. Carved out and touched up from #1143 \r\n\r\n- Uses DID and DID Doc validation from pyDID\r\n- ~Does not support encoding of ports in DIDs yet (e.g. `did:web:localhost%3A8443 -> https://localhost:443/.well-known/did.json` yet, because pyDID does not allow '%' char in DID (See: https://github.com/dbluhm/pydid/issues/34)~",
    "head_branch": "feature/native-did-web-resolver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1218 from boschresearch/feature/native-did-web-resolver\n\nFeature/native did web resolver"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f98ac254a19ac294ab5",
    "number": 1216,
    "body": "The out of band protocol doesn't support the attachment type credential-offer yet. I added my code in outofband receive_invitation to receive a credential offer and send a credential request. \r\n\r\nThe receive_offer and create_request functions worked perfectly , But I am facing a `connection_record not found error` while the issuer agent executes credential_request_handler script. I am including the logs below. \r\n\r\n`  \r\n\r\n> File \"/home/indy/aries_cloudagent/core/dispatcher.py\", line 198, in handle_message\r\n>     await handler(context, responder)\r\n>   File \"/home/indy/aries_cloudagent/protocols/issue_credential/v1_0/handlers/credential_request_handler.py\", line 39, in handle\r\n>     context.message, context.connection_record.connection_id\r\n>   File \"/home/indy/aries_cloudagent/protocols/issue_credential/v1_0/manager.py\", line 470, in receive_request\r\n>     session, connection_id, message._thread_id\r\n>   File \"/home/indy/aries_cloudagent/protocols/issue_credential/v1_0/models/credential_exchange.py\", line 206, in retrieve_by_connection_and_thread\r\n>     {\"connection_id\": connection_id} if connection_id else None,\r\n>   File \"/home/indy/aries_cloudagent/messaging/models/base_record.py\", line 250, in retrieve_by_tag_filter\r\n>     cls.__name__, tag_filter, f\", {post_filter}\" if post_filter else \"\"\r\n> aries_cloudagent.storage.error.StorageNotFoundError: V10CredentialExchange record not found for {'thread_id': '56ccbd83-3800-41a8-907c-fcbedeebb706'}, {'connection_id': '737ca643-7f05-470a-8b47-89fafb11a83d'}\r\n\r\n`",
    "head_branch": "outofband",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch 'main' of https://github.com/hyperledger/aries-cloudagent-python into outofband"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f99ac254a19ac294ab6",
    "number": 1213,
    "body": "Still to work out:\r\n* general WQL (+ `\"$and\"`) for restrictions in proof request requested attributes/predicates\r\n* not necessarily relying on these being a list: they can be a (WQL statement) dict or a list of (WQL statement) dicts, each (WQL statement) dict possibly being its own compound WQL statement; e.g., this is a valid restriction:\r\n```\r\n{\r\n  \"$and\": [\r\n    {\r\n      \"$or\": [\r\n        {\r\n          \"schema_name\": \"membership\"\r\n        },\r\n        {\r\n          \"schema_name\": \"members\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"$neq\": {\r\n        \"schema_version\": \"0.1\"\r\n      }\r\n    },\r\n    {\r\n      \"issuer_did\": \"abc123\"\r\n    },\r\n    {\r\n      \"$not\": {\r\n        \"$in\": {\r\n          \"attr::name::value\": [\r\n            \"joe\",\r\n            \"dolly\",\r\n            \"bill\"\r\n          ]\r\n        }\r\n      }\r\n    }\r\n  ]\r\n}\r\n```",
    "head_branch": "support-indy-1.16-predicate-restrictions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1213 from sklump/support-indy-1.16-predicate-restrictions\n\nSupport indy 1.16 predicate restrictions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f99ac254a19ac294ab7",
    "number": 1212,
    "body": "",
    "head_branch": "finish-prob-rept-adoption-into-issue-cred-present-proof",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1212 from sklump/finish-prob-rept-adoption-into-issue-cred-present-proof\n\nFinish prob rept adoption into issue cred present proof"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f9aac254a19ac294ab8",
    "number": 1210,
    "body": "Due https://github.com/hyperledger/aries-cloudagent-python/pull/1186#issuecomment-849452360 \r\n\r\nThere was a bug that does not save the metadata into the records once they were set.\r\nThis PR fixes that bug, updating the connections metadata everywhere.",
    "head_branch": "bug/set-connection-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f9bac254a19ac294ab9",
    "number": 1209,
    "body": "Resolves #1208 \r\n\r\nSigned-off-by: Woerner Dominic (RBCH/PJ-IOT) <dominic.woerner2@ch.bosch.com>",
    "head_branch": "fix/1208-expose-wallet-creds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1209 from boschresearch/fix/1208-expose-wallet-creds\n\nFix exposing wallet storage creds in configuration endpoint."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f9cac254a19ac294aba",
    "number": 1207,
    "body": "Similar fix with https://github.com/hyperledger/aries-cloudagent-python/pull/1190\r\nThanks!\r\n\r\n@sklump \r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "bugfix/problem-report-1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f9dac254a19ac294abb",
    "number": 1204,
    "body": "- resolve #1203 \r\n- Went through the following test cases, all invitations should now work as expected.\r\n![image](https://user-images.githubusercontent.com/9292265/119702684-942f2480-be0a-11eb-9527-cbff0e26f885.png)\r\n",
    "head_branch": "oob_connection_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1204 from shaangill025/oob_connection_fix\n\nFix: Public Connections Invitation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f9eac254a19ac294abc",
    "number": 1202,
    "body": "- resolve #1138 ",
    "head_branch": "issue#1138",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1202 from shaangill025/issue#1138\n\nUpdates to OOB InvitationMessage & Endpoint example - Consistent with RFC0434"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f9fac254a19ac294abd",
    "number": 1200,
    "body": "This pull request consists of the following changes in endorser protocol : \r\n\r\n1.  The author can give the functionality to the endorser where he/she can auto-write the transaction to the ledger after it gets endorsed.\r\n2. The agent from where the transaction is written to the ledger is separated, it the author writes the transaction, it would go from author's agent and same for endorser.\r\n3. Always, the record would be stored in author's wallet, irrespective of who (Author/Endorser) actually writes the transaction to the ledger.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1200 from HarshMultani-AyanWorks/main\n\nChanges in Endorser Protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214f9fac254a19ac294abe",
    "number": 1199,
    "body": "Sorry about that\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "patch-save-error-state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1199 from sklump/patch-save-error-state\n\nfix cascading problem report, error state failures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa0ac254a19ac294abf",
    "number": 1197,
    "body": "Remove downloaded tails files with invalid hashes. This fixes #1196",
    "head_branch": "fix/handle-invalid-hash-tails",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1197 from boschresearch/fix/handle-invalid-hash-tails\n\nChanged retrieve_tails to delete invalid tails files after fetching"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa1ac254a19ac294ac0",
    "number": 1195,
    "body": "fix protocols/problem_report/v1_0/__init__.py internal_error() en passant: hadn't been creating compliant RFC 35 ProblemReport objects, resulting in cascading failure",
    "head_branch": "mitigate-rich-schema-thirst",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1195 from sklump/mitigate-rich-schema-thirst\n\nMitigate rich schema thirst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa2ac254a19ac294ac1",
    "number": 1193,
    "body": "- Now able to create and receive OOB invitations against public DIDs.\r\n- Fixes not being able to load `IndyDIDResolver`.\r\n- Implement `supported_did_regex` in `KeyDIDResolver` and `IndyDIDResolver`.",
    "head_branch": "oob_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1193 from shaangill025/oob_fix\n\nFix: OOB Invitation against Public DIDs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa3ac254a19ac294ac2",
    "number": 1190,
    "body": "Fixes a bug caused by inconsistent naming that would result in problem reports not being handled correctly by the receiving agent for `issue-credential-2.0`.\r\n\r\nI am surprised all the unit tests passed before: is there a testing pattern I should be looking into to add one, or is this something that will/should be caught by the test harness?",
    "head_branch": "bugfix/problem-report-2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1190 from esune/bugfix/problem-report-2.0\n\nFix bug with problem report 2.0 handler and message family"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa4ac254a19ac294ac3",
    "number": 1188,
    "body": "- In regards to decoding, we handle base64 permissively, passing `urlsafe` as `True`.\r\n- If `emit_new_didcomm_mime_type` and `emit_new_didcomm_prefix` arguments are set, send everything as base64url [updates `data_base64` accordingly] else leave eveything as it is.\r\ncloses #1108",
    "head_branch": "issue#1108",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa5ac254a19ac294ac4",
    "number": 1186,
    "body": "With this PR, It is possible to add tags to connections. The tags are saved as a metadata key-value on the connections record.\r\nOnce the connections have been tagged, it is possible to group them on tags.\r\n\r\nThe tags are added on `/connections/create-invitation` & `/connections/receive-invitation` via a query parameter called `tags` in the request.  The input is a string, it is possible to add multiple tags if they are separated by commas. \r\n\r\nThe tags could be filtered on `/connections` via a query parameter called `tags` in the request. The input is a string, it is possible to filter by multiple tags if they are separated by commas.\r\n\r\n**Examples**:\r\n\r\n- Create invitation\r\n\r\n> Request\r\n`curl -X POST \"http://localhost:8021/connections/create-invitation?tags=tag1%2Ctag3\" -H \"accept: application/json\" -H \"Content-Type: application/json\" -d \"{ }\"`\r\n\r\n> Response\r\n`{\r\n  \"connection_id\": \"8e1d9605-5843-4844-99d1-96141329e006\",\r\n  \"invitation\": {\r\n    \"@type\": \"did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/connections/1.0/invitation\",\r\n    \"@id\": \"1b62e664-a8d9-4c97-bb7a-2ba3b5329ebb\",\r\n    \"recipientKeys\": [\r\n      \"Gsc9q2FskuKYH2bAMnd3UkQadEkJ4QFwwA8RUdyGqsTo\"\r\n    ],\r\n    \"label\": \"faber.agent\",\r\n    \"serviceEndpoint\": \"https://0639b9bd3d2a.ngrok.io\"\r\n  },\r\n  \"invitation_url\": \"https://0639b9bd3d2a.ngrok.io?c_i=eyJAdHlwZSI6ICJkaWQ6c292OkJ6Q2JzTlloTXJqSGlxWkRUVUFTSGc7c3BlYy9jb25uZWN0aW9ucy8xLjAvaW52aXRhdGlvbiIsICJAaWQiOiAiMWI2MmU2NjQtYThkOS00Yzk3LWJiN2EtMmJhM2I1MzI5ZWJiIiwgInJlY2lwaWVudEtleXMiOiBbIkdzYzlxMkZza3VLWUgyYkFNbmQzVWtRYWRFa0o0UUZ3d0E4UlVkeUdxc1RvIl0sICJsYWJlbCI6ICJmYWJlci5hZ2VudCIsICJzZXJ2aWNlRW5kcG9pbnQiOiAiaHR0cHM6Ly8wNjM5YjliZDNkMmEubmdyb2suaW8ifQ==\"\r\n}`\r\n\r\n- Filter connections\r\n\r\n> Request\r\n`curl -X GET \"http://localhost:8021/connections?tags=tag1\" -H \"accept: application/json\"`\r\n\r\n> Response\r\n`{\r\n  \"results\": [\r\n    {\r\n      \"updated_at\": \"2021-05-20 12:06:41.865730Z\",\r\n      \"created_at\": \"2021-05-20 12:06:41.865730Z\",\r\n      \"accept\": \"manual\",\r\n      \"rfc23_state\": \"invitation-sent\",\r\n      \"their_role\": \"invitee\",\r\n      \"routing_state\": \"none\",\r\n      \"state\": \"invitation\",\r\n      \"invitation_mode\": \"once\",\r\n      \"connection_id\": \"8e1d9605-5843-4844-99d1-96141329e006\",\r\n      \"invitation_key\": \"Gsc9q2FskuKYH2bAMnd3UkQadEkJ4QFwwA8RUdyGqsTo\",\r\n      \"metadata\": {\r\n        \"tags\": [\r\n          \"tag1\",\r\n          \"tag3\"\r\n        ]\r\n      }\r\n    }\r\n  ]\r\n}`\r\n\r\nBased on @burdettadam idea, https://github.com/sicpa-dlab/aries-cloudagent-python/issues/49.",
    "head_branch": "feature/tags-on-connection-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa5ac254a19ac294ac5",
    "number": 1185,
    "body": "",
    "head_branch": "issue-cred-store-cred-done",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1185 from sklump/issue-cred-store-cred-done\n\nIssue cred store cred done"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa6ac254a19ac294ac6",
    "number": 1183,
    "body": "RFCs 36, 37, 453 state that exchange states go to null on both sides on error; 454 uses \"abandoned\".\r\n\r\nThis work sets states accordingly where possible (unless there is no such record or the problem is storage itself), but does not (yet) send problem reports - that's another PR for the near-ish future.\r\n\r\nIn issue-credential, separate store-credential from send-ack: whether storage succeeds or fails, the protocol owes an ack because acknowledgement is to credential receipt, not storage.",
    "head_branch": "align-with-rfcs-for-error-states-in-issue-cred-and-present-proof",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1183 from sklump/align-with-rfcs-for-error-states-in-issue-cred-and-present-proof\n\nAlign with rfcs for error states in issue cred and present proof"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa7ac254a19ac294ac7",
    "number": 1182,
    "body": "Work left from #1174 and #1137.\r\n\r\n- /didexchange/create-request now return ConnRecord\r\n- Based upon feedback from @domwoe and  @andrewwhitehead, this will make it more consistent",
    "head_branch": "did-exch-send-request",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1182 from shaangill025/did-exch-send-request\n\nDIDX create-request [return ConnRecord]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa8ac254a19ac294ac8",
    "number": 1180,
    "body": "Signed-off-by: Timo Glastra <timo@animo.id>",
    "head_branch": "fix/local-jsonld",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1180 from TimoGlastra/fix/local-jsonld\n\nfix: use injected document loader for pyld calls"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fa9ac254a19ac294ac9",
    "number": 1179,
    "body": "This metadata includes information on how the DID was resolved, enabling the caller to make decisions about whether it accepts DID Documents resolved remotely or from a particular resolver, etc.\r\n\r\nProps to @Luis-GA for doing most of the legwork on this feature.",
    "head_branch": "feature/resolution-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1179 from dbluhm/feature/resolution-metadata\n\nAdd `resolve_with_metadata` method to DID resolver"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214faaac254a19ac294aca",
    "number": 1178,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "fix/indy-resolver-loading",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1178 from dbluhm/fix/indy-resolver-loading\n\nfix: don't load indy resolver if no indy ledger"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fabac254a19ac294acb",
    "number": 1176,
    "body": "This PR extends the `BaseResolver.supports` method to be asynchronous and to take a `Profile` to support such use cases as retrieving resolver connections from storage and checking DIDs supported by those resolver connections. Additionally, this PR adds `supported_did_regex` as a value intended to be implemented by subclasses of `BaseResolver` and used in the default `supports` implementation. This changes the previous behavior of matching on the DID method alone to regex matching, granting more flexibility in how resolvers are selected to handle DID resolution.\r\n\r\n`supported_methods` remains functional to prevent breaking resolver plugins already in the wild but is marked as deprecated.",
    "head_branch": "feature/resolver-supports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1176 from sicpa-dlab/feature/resolver-supports\n\nMake BaseResolver.supports async and prefer regex matching"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214facac254a19ac294acc",
    "number": 1175,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "dispatcher-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1175 from sklump/dispatcher-unit-tests\n\nunit tests cover new core/dispatcher code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fadac254a19ac294acd",
    "number": 1174,
    "body": "closes #1137 ",
    "head_branch": "did-exch-send-request",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1174 from shaangill025/did-exch-send-request\n\nDID Exchange - Create and send requests against implicit invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214faeac254a19ac294ace",
    "number": 1171,
    "body": "https://github.com/hyperledger/aries-cloudagent-python/issues/1167\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "propagate-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1171 from sklump/propagate-comment\n\npropagate comment in auto for issue-cred v1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214faeac254a19ac294acf",
    "number": 1169,
    "body": "Address https://github.com/hyperledger/aries-cloudagent-python/issues/1166",
    "head_branch": "repair-marshmallow-duplicate-schema-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1169 from sklump/repair-marshmallow-duplicate-schema-warning\n\nRepair marshmallow duplicate schema warning"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fafac254a19ac294ad0",
    "number": 1168,
    "body": "Address https://github.com/hyperledger/aries-cloudagent-python/issues/1163 partially: have holder refuse to send hopeless proof request to indy-sdk.\r\n\r\nUltimately the handlers should send problem reports - that's a bigger job and needs its own PR",
    "head_branch": "holder-reject-proof-req-on-bad-attr-value-restriction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1168 from sklump/holder-reject-proof-req-on-bad-attr-value-restriction\n\nHolder reject proof req on bad attr value restriction"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb0ac254a19ac294ad1",
    "number": 1164,
    "body": "",
    "head_branch": "local-jsonld-for-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1164 from sklump/local-jsonld-for-unit-tests\n\nLocal jsonld for unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb1ac254a19ac294ad2",
    "number": 1162,
    "body": "RFC 11 suggests a looser interpretation than our original.\r\nAddress https://github.com/hyperledger/aries-cloudagent-python/issues/1147\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "accept-alien-decorators-as-data",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1162 from sklump/accept-alien-decorators-as-data\n\nretain unrecognizable decorators as opaque data"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb2ac254a19ac294ad3",
    "number": 1161,
    "body": "@ianco - I aligned endorsement protocol transaction records' id_ with the praxis of the rest of the records, among the rest of the noise. I don't see Harsh in the list of available reviewers here?\r\n\r\nAnyway, this update turns a lot of {}'s into rich detailed models within the admin API.",
    "head_branch": "richer-swagger-models",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1161 from sklump/richer-swagger-models\n\nRicher swagger models"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb3ac254a19ac294ad4",
    "number": 1160,
    "body": "Ability for the native indy resolver to get additional services / endpoint types from an indy ledger.\r\n\r\n",
    "head_branch": "feat/indy-resolver-service-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1160 from boschresearch/feat/indy-resolver-service-types\n\nallow other service/endpoint types in indy did docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb4ac254a19ac294ad5",
    "number": 1156,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "fix/json-ld-route-schemas",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb5ac254a19ac294ad6",
    "number": 1155,
    "body": "Continuing on Timo Glastra's work: https://github.com/hyperledger/aries-cloudagent-python/pull/1140",
    "head_branch": "issue-cred-v2-schema-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1155 from sklump/issue-cred-v2-schema-fix\n\nIssue cred v2 schema fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb5ac254a19ac294ad7",
    "number": 1154,
    "body": "* Fix issue described in [Rocket chat ](https://chat.hyperledger.org/channel/aries-cloudagent-python?msg=CDike9uCQciDRohRu)\r\n* Allow `type` property in proof validation schema\r\n* Set default proof type if property is not provided\r\n\r\nCurrently only `Ed25519Signature2018` is allowed anyways...",
    "head_branch": "fix/type-in-ld-proof",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1154 from boschresearch/fix/type-in-ld-proof\n\nFix/type in ld proof"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb6ac254a19ac294ad8",
    "number": 1153,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\n@esune \r\n\r\nRemoves some of the validation when setting up connection meta-data to remove timing dependencies between the author and endorser setup tasks",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1153 from ianco/master\n\nTone down the endorser validation when setting up connection metadata"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb7ac254a19ac294ad9",
    "number": 1151,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>\r\n\r\nA recent update to PyDID brought some bad input data to light.",
    "head_branch": "fix/resolver-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1151 from dbluhm/fix/resolver-unit-tests\n\nfix: bad service endpoint in test data"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb8ac254a19ac294ada",
    "number": 1150,
    "body": "Update the openapi file and enable the multitenancy api in `generate-open-api-script`\r\n\r\nFixes #1034 ",
    "head_branch": "docs/update-openapi-spec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1150 from animo/docs/update-openapi-spec\n\ndocs: update openapi file, enable multitenancy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fb9ac254a19ac294adb",
    "number": 1148,
    "body": "This adds an option to ACA-Py to send webhook events on received forward messages (`--monitor-forward`, taken from `monitor-ping`).\r\n\r\nI extended the `OutboundSendStatus` work from Daniel and added a few more status options. These are then included in the webhook event, so the controller can react to the event. \r\n\r\nIf `--monitor-forward` is not enabled, the event is still dispatched in the event bus (just not as webhook), so other parts of the codebase/plugins can hook into this if they want to manage it in ACA-Py instead of the controller",
    "head_branch": "feature/foward-webhook-events",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1148 from animo/feature/foward-webhook-events\n\nfeat: send webhooks for forward messages"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fbaac254a19ac294adc",
    "number": 1145,
    "body": "Question: what in the OOB protocol ever creates such a problem report?\r\n\r\nIn any case, this update roughs in compliance with RFC35 problem reports and adopts them into the protocol for such time as operations do create them in OOB, representing move mainly laterally but slightly better.",
    "head_branch": "adopt-problem-report-oob-and-coord-mediation-protos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1145 from sklump/adopt-problem-report-oob-and-coord-mediation-protos\n\nAdopt problem report oob and coord mediation protos"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fbbac254a19ac294add",
    "number": 1143,
    "body": "Work in progress PR to add the did web capabilities to ACA-PY\r\n\r\n* Native did:web resolver\r\n* Serve did document under `/.well-known/did.json`\r\n* Create a did document from wallet content (uses public DID and endpoint) + additional keys (e.g.) BBS+ keys can be referenced\r\n* Connection/DID Exchange based on implicit invitation with public did:web\r\n\r\nMultitenancy is currently not supported.\r\nNeeds cleaning and tests.\r\nI'm not an experienced Python programmer so there might be stupid things I've done. Would be cool if someone could take a look.\r\n\r\nExample usage:\r\nAssumption: ACA-Py has configured a public DID, admin interface with HTTPS (e.g. via ngrok) and a BBS+ did:key \r\n```\r\nPOST:  /didweb​/create-from-wallet​/{did}\r\n\r\n{\r\n  \"verification_methods\": [{\r\n\"did\":\"did:key:zUC71v7BaQAEpNCN9wVetcqMWtWPygSuQ2t4MJ1H9654Aio3DypS8wCd253CZ29C1CiLSMmC8MrepFYvKrvdMHBatyEoQa5pffr8HMqvRR98Vb7NtEBkpN9Ld73jyeyAqYxg8Fy\", \"\r\nverification_relationships\": [\"assertion_method\"]\r\n}]}\r\n```\r\n\r\nwill produce:\r\n```\r\n{\r\n  \"@context\": \"https://www.w3.org/ns/did/v1\",\r\n  \"id\": \"did:web:478eb39f6464.ngrok.io\",\r\n  \"verificationMethod\": [\r\n  {\r\n    \"id\": \"did:web:478eb39f6464.ngrok.io#key-1\",\r\n    \"type\": \"Ed25519VerificationKey2018\",\r\n    \"controller\": \"did:web:478eb39f6464.ngrok.io\",\r\n    \"publicKeyBase58\": \"DAwrZwgMwkTVHUQ8ZYAmuvzwprDmX8vFNXzFioxrWpCA\"\r\n  },\r\n  {\r\n     \"id\": \"did:web:478eb39f6464.ngrok.io#key-2\",\r\n     \"type\": \"Bls12381G2Key2020\",\r\n     \"controller\": \"did:web:478eb39f6464.ngrok.io\",\r\n     \"publicKeyBase58\": \r\n\"n5ZJWiW1TkL9jzpoig99Db9UjQ8hN4L8UuRTfEcFRqSEpNroSGoUDd5XQ2nwUuAhJ9MK5wzqSMzxNzCWC1qs51i5cEBii2ie1i9XXCWG1dyWXKr9jRyETJdmWUEHFzoodef\"\r\n}\r\n],\r\n\"authentication\": [\r\n\"did:web:478eb39f6464.ngrok.io#key-1\"\r\n],\r\n\"assertionMethod\": [\r\n\"did:web:478eb39f6464.ngrok.io#key-1\",\r\n\"did:web:478eb39f6464.ngrok.io#key-2\"\r\n],\r\n\"service\": [\r\n{\r\n\"id\": \"did:web:478eb39f6464.ngrok.io#did-communication\",\r\n\"type\": \"did-communication\",\r\n\"serviceEndpoint\": \"http://host.docker.internal:8000\",\r\n\"recipientKeys\": [\r\n\"did:web:478eb39f6464.ngrok.io#key-1\"\r\n],\r\n\"routingKeys\": [],\r\n\"priority\": 0\r\n}\r\n]\r\n}\r\n```\r\n\r\nserved under `https:478eb39f6464.ngrok.io/.well-known/did.json`",
    "head_branch": "feature/didweb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fbcac254a19ac294ade",
    "number": 1141,
    "body": "Just some small rewording, no substantive changes",
    "head_branch": "jsonld-documentatin-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1141 from animo/jsonld-documentatin-fixes\n\ndocs: small updates to jsonld docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fbdac254a19ac294adf",
    "number": 1140,
    "body": "@sklump, re #1135, I modified the base class which is used for both `credential_exchange_send` and `credential_exchange_create`. My bad. I created a separate schema for `credential_exchange_send` now. \r\n\r\nAFAIK `credential_exchange_send` should take a connection id as input (so does the code also suggest). Otherwise I fail to see the difference between `credential_exchange_create` and `credential_exchange_send`\r\n\r\nIt is weird because both have the description \"Send holder a credential, automating entire flow\", while they do different things.",
    "head_branch": "issue-cred-v2-schema-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fbdac254a19ac294ae0",
    "number": 1139,
    "body": "and sync up problem reports to current RFC 35",
    "head_branch": "adopt-problem-reports-issue-cred-present-proof",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1139 from sklump/adopt-problem-reports-issue-cred-present-proof\n\nAdopt problem reports issue cred present proof"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fbeac254a19ac294ae1",
    "number": 1136,
    "body": "Adds documentation on issuing JSON-LD credentials. Present Proof is todo and dependant on PR #1125.",
    "head_branch": "jsonld-credentials-documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1136 from animo/jsonld-credentials-documentation\n\ndocs: add docs on issuing jsonld credentials"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fbfac254a19ac294ae2",
    "number": 1135,
    "body": "Noticed while writing documentation that the connection_id was missing. ",
    "head_branch": "issue-cred-v2-schema-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc0ac254a19ac294ae3",
    "number": 1134,
    "body": "This is a WIP pull request, and it covers the changes in endorser protocol for issues defined in \r\n\r\n1. #1031 \r\n2. #1029 ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1134 from HarshMultani-AyanWorks/main\n\nChanges in Endorser Protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc1ac254a19ac294ae4",
    "number": 1133,
    "body": "As discussed in #1096, when writing plugins, having the flexibility to implement messages differently than the pattern followed within ACA-Py can be really significant. This PR defines a minimized base message class that is unopinionated and trivial to extend.\r\n\r\nThis PR also addresses concerns around message serialization in anticipation of changes coming with DIDComm v2 by defining `serialize` and `deserialize` methods that specify the output/input format. At present, the `AgentMessage` class only implements DIDComm v1 message structure.",
    "head_branch": "feature/minimum-base-message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1133 from dbluhm/feature/minimum-base-message\n\nAdd \"minimum viable message\" base class for use in plugins"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc2ac254a19ac294ae5",
    "number": 1132,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>\r\n\r\nNot sure what happened (perhaps related to Ubuntu 18.04 EOL?) but `run_tests` stopped working all of a sudden. This switches image base to `python:3.6.13`.",
    "head_branch": "fix/run-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1132 from dbluhm/fix/run-tests\n\nfix: run_tests script"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc3ac254a19ac294ae6",
    "number": 1131,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAdds small delay plus check that cred def was created (to address random failure of integration tests)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1131 from ianco/master\n\nAdd check after cred def created in integration test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc4ac254a19ac294ae7",
    "number": 1130,
    "body": "As a result of some discussion in #950, I did a quick investigation of what it would look like to provide some feedback to the responder send methods about message delivery so that from the `forward` message handler, for example, we could determine whether the message was sent directly or not. This doesn't provide a ton of information but I think it provides just enough to know whether a push notification should be sent to a mobile device or not from the forward message handler, as @TimoGlastra described in the comments of that issue.\r\n\r\nI think there are a lot of ways to end up at similar functionality though this one ended up being simpler than I anticipated. Interested to hear thoughts.\r\n\r\nSigned-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "feature/message-send-feedback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1130 from dbluhm/feature/message-send-feedback\n\nfeat: feedback from responder methods about message delivery"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc4ac254a19ac294ae8",
    "number": 1129,
    "body": "Signed-off-by: Timo Glastra <timo@animo.id>\r\n\r\nThis should fix the issues with not having the indy and bbs libraries installed. There were a few offenders besides me for the indy library, but they should all be fixed now.\r\n\r\nFixes #1127\r\nFixes #1128 ",
    "head_branch": "fix/required-dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1129 from animo/fix/required-dependencies\n\nfix: do not require indy or bbs to be installed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc5ac254a19ac294ae9",
    "number": 1125,
    "body": "- https://www.w3.org/TR/vc-data-model/\r\n- https://identity.foundation/presentation-exchange/\r\n- https://github.com/hyperledger/aries-rfcs/tree/master/features/0510-dif-pres-exch-attach\r\n- https://github.com/hyperledger/aries-rfcs/tree/master/features/0454-present-proof-v2",
    "head_branch": "dif-pres-exch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1125 from shaangill025/dif-pres-exch\n\nDIF Presentation Exchange and present-proof-v2 Updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc6ac254a19ac294aea",
    "number": 1124,
    "body": "This should hopefully address #1123.\r\n\r\n### Changes\r\n**fix: stateless records emit events**\r\n\r\nError on the side of caution for BaseRecord.emit_event, using topic\r\nwithout state when none is given, and inserting the serialized record as\r\nthe payload if no payload is given.\r\n\r\nEvents are only not emitted by records when no record topic is set.\r\n\r\n**fix: relax admin server record event pattern**\r\n\r\nShould now accept stateless record event topics\r\n\r\n**fix: add event namespace to base records to allow plugins to override**\r\n\r\n**test: record topic parsing for webhook**",
    "head_branch": "fix/stateless-record-webhooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1124 from dbluhm/fix/stateless-record-webhooks\n\nFix: stateless record webhooks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc7ac254a19ac294aeb",
    "number": 1120,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "accommodate-no-body-in-issue-cred-bound-offer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1120 from sklump/accommodate-no-body-in-issue-cred-bound-offer\n\nallow for no body"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc8ac254a19ac294aec",
    "number": 1119,
    "body": "\r\n",
    "head_branch": "take-no-body-in-issue-cred-bound-offer-take-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fc9ac254a19ac294aed",
    "number": 1118,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-test-cover-endorser-routes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1118 from sklump/unit-test-cover-endorser-routes\n\nmake long strings look like elsewhere in aca-py; cover new routes code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fcaac254a19ac294aee",
    "number": 1117,
    "body": "Fix https://github.com/hyperledger/aries-cloudagent-python/issues/1114",
    "head_branch": "take-no-body-in-issue-cred-bound-offer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fcaac254a19ac294aef",
    "number": 1116,
    "body": "This is a PR that contains changes in endorser protocol.\r\n\r\nThe changes are defined in the issue\r\n#1040 \r\n#1028 ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1116 from HarshMultani-AyanWorks/main\n\nChanges in Endorser Protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fcbac254a19ac294af0",
    "number": 1115,
    "body": "This decouples the in-memory pack/unpack from the envelope handling code, to allow other encryption methods in future.",
    "head_branch": "refactor/jwe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1115 from andrewwhitehead/refactor/jwe\n\nAdd generic JWE envelope handling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fccac254a19ac294af1",
    "number": 1112,
    "body": "Signed-off-by: wadeking98 <wkingnumber2@gmail.com>\r\n\r\ncompare_digest only supports ascii strings or bytes like objects. I added .encode() method to the compare_digest to allow utf string to be compared.",
    "head_branch": "feature/secure-comparison",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1112 from wadeking98/feature/secure-comparison\n\nFeature/secure comparison"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fcdac254a19ac294af2",
    "number": 1111,
    "body": "Signed-off-by: wadeking98 <wkingnumber2@gmail.com>\r\n@andrewwhitehead \r\ncomparing user input to secrets and then responding makes this application vulnerable to timing attacks. See resource here: https://blog.sqreen.com/developer-security-best-practices-protecting-against-timing-attacks/  \r\n  \r\nWhile an attacker isn’t likely to be able to exploit this from somewhere over the internet due to network jitter, they might be able to pull it off if the agent ever supports TOR, HTTP/2 (timeless timing attack), or if they get access to a pod inside the same openshift cluster that can send requests to the agent (ie: the api pod)",
    "head_branch": "feature/secure-comparison",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1111 from wadeking98/feature/secure-comparison\n\nsecured api_key against timing attacks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fceac254a19ac294af3",
    "number": 1110,
    "body": "https://github.com/hyperledger/aries-cloudagent-python/issues/1103",
    "head_branch": "issue-cred-bound-counter-offer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1110 from sklump/issue-cred-bound-counter-offer\n\nIssue cred bound counter offer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fcfac254a19ac294af4",
    "number": 1107,
    "body": "Had a few bugs slip past; discovered these after more manual testing. This PR activates the json-ld routes, makes the DID resolver DID Document validation less picky, and corrects a schema validation issue in `verify`.",
    "head_branch": "fix/resolution-and-json-ld-routes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1107 from dbluhm/fix/resolution-and-json-ld-routes\n\nFixes for JSON-LD routes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd0ac254a19ac294af5",
    "number": 1105,
    "body": "",
    "head_branch": "upd-deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1105 from andrewwhitehead/upd-deps\n\nUpdate package dependencies"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd1ac254a19ac294af6",
    "number": 1102,
    "body": "… requested\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-pp2-bait-and-switch-err-message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1102 from sklump/fix-pp2-bait-and-switch-err-message\n\nmake clear that presentation violates restrictions either proposed or…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd2ac254a19ac294af7",
    "number": 1101,
    "body": "Fix introductions protocol. Integrate did-exchange problem reports with problem-report protocol (leave connections as per its RFC 160, predating problem-report protocol).",
    "head_branch": "fix-intro",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1101 from sklump/fix-intro\n\nFix introductions protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd2ac254a19ac294af8",
    "number": 1100,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "feature/oob-resolve-invitations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1100 from dbluhm/feature/oob-resolve-invitations\n\nReplace ledger with resolver in OOB manager"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd3ac254a19ac294af9",
    "number": 1099,
    "body": "",
    "head_branch": "dockerize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd4ac254a19ac294afa",
    "number": 1096,
    "body": "This one might be a bit of a stretch but here's my reasoning. I think I'm one of the most active ACA-Py plugin developers at the moment and one of the things I've found is that it can be somewhat burdensome to follow the same pattern ACA-Py does for defining messages and handlers in all cases. I've experimented with using a simplified base class other than the `AgentMessage` in ACA-Py and have had favorable results. There _is_ a loss of functionality but, with these tweaks, the core functions work. From what I've gathered so far, the lost functionality is limited primarily to timing and tracing features, which might be a reasonable trade-off in a plugin context if a different root message class integrates better with the rest of your code.\r\n\r\nThis PR uses `typing.Protocol` to define the expected methods on messages to send, loosening the original explicit type check for `AgentMessage` to a \"shape\" check. This uses the `typing-extensions` package to backport `typing.Protocol` for python 3.6.\r\n\r\nRather than defining just what the responder needs to send a message, it might make sense to define something somewhere else that outlines the minimum functional agent message attributes. To get a message from decrypted object to being handled, a minimum of `Handler`, and `deserialize` is required. To get a message from creation (in a handler, for instance) to being sent as an encrypted message, a minimum of `to_json` and `_thread_id` is required.\r\n\r\nInterested to hear thoughts :slightly_smiling_face: ",
    "head_branch": "feature/responder-type-checks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd5ac254a19ac294afb",
    "number": 1095,
    "body": "In order to implement something like the message pickup protocol, we need to be able to access the inbound transport manager for both session data and undelivered messages on the queue. I'm prototyping a revision of the pickup protocol and this change is the only one I've had to make to core ACA-Py to get things to work.",
    "head_branch": "feature/transport-manager-access",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1095 from dbluhm/feature/transport-manager-access\n\nfeat: make transport manager accessible from handlers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd6ac254a19ac294afc",
    "number": 1092,
    "body": "Note that throughout aca-py, `did` is typically a string. This gave rise to some ambiguity in passing public (PyDID) DID objects into what expected a string.\r\n\r\nAlso refactored the DIDInfo duplication away.",
    "head_branch": "py-did-vs-str-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1092 from sklump/py-did-vs-str-did\n\nPy did vs str did"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd7ac254a19ac294afd",
    "number": 1091,
    "body": "This PR updates json-ld admin routes to utilize did resolver during verification. Before, a user-provided a verkey to verify json-ld signatures, now if a verkey is not provided the `verificationMethod` will be used to attempt to resolve the verkey. Code updates to support this feature include:\r\n- dropped attribute reporting\r\n- interface update, pass session instead of wallet instance\r\n- improved tests\r\n- PyDID exception wrapping\r\n\r\nThis PR is intended not to change json-ld admin API except for making `verkey` optional on `/jsonld/verify` requests.",
    "head_branch": "clean/clean/jsonld",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1091 from sicpa-dlab/clean/clean/jsonld\n\nfeat/json-ld_with_did_resolver"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd8ac254a19ac294afe",
    "number": 1090,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-test-cover-plugin-registry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1090 from sklump/unit-test-cover-plugin-registry\n\ntouch up unit tests to cover all plugin registry error cases"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd8ac254a19ac294aff",
    "number": 1089,
    "body": "touch up unit tests to cover all code correctly",
    "head_branch": "unit-test-plugin-registry-errors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fd9ac254a19ac294b00",
    "number": 1088,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "rename-demo-features-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1088 from sklump/rename-demo-features-v2\n\ndemo uses v2 protocols, not v1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fdaac254a19ac294b01",
    "number": 1087,
    "body": "Ignore unrecognized formats rather than rejecting their messages",
    "head_branch": "relax-formats-rfcs-453-454",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1087 from sklump/relax-formats-rfcs-453-454\n\nRelax formats rfcs 453 454"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fdbac254a19ac294b02",
    "number": 1086,
    "body": "This PR lets any plugin module defining a `setup` method to be loaded as a plugin. This supports the DID Resolver interfaces recently merged as resolvers are pluggable components but do not necessarily define `routes` or `definitions`.",
    "head_branch": "feat/permissive-plugin-loading",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1086 from dbluhm/feat/permissive-plugin-loading\n\nfeat: permissive plugin loading"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fdcac254a19ac294b03",
    "number": 1085,
    "body": "This PR is a WIP implementing RFC 587 with the goal of updating ACA-Py Encryption Envelope to achieve Aries agent interop with AFGo. Specifically, this PR implements the ECDH-1PU algorithm, built using the AFGo codebase as a reference (https://github.com/hyperledger/aries-framework-go/blob/main/pkg/crypto/tinkcrypto/wrap_support.go#L71) and using the python-ecdsa library.\r\n\r\nFurther work includes adding more test cases and implementing the OOB header to indicate which version of the encryption envelope is being used.\r\n\r\nAny feedback from the ACA-Py team is appreciated!",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1085 from Windforcer/main\n\nimplement basic ECDH-1PU crypto functionality according to RFC 587"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fddac254a19ac294b04",
    "number": 1082,
    "body": "Fixes #1081",
    "head_branch": "add-assertion-method-sov",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1082 from TimoGlastra/add-assertion-method-sov\n\nfix: add assertionMethod to did:sov diddocs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fdeac254a19ac294b05",
    "number": 1080,
    "body": "Progress: https://github.com/hyperledger/aries-cloudagent-python/issues/1078\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "swagger-audit-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1080 from sklump/swagger-audit-1\n\nAdmin API data structure vs. schema audit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fdfac254a19ac294b06",
    "number": 1079,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "v20-cred-ex-record-dump-by-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1079 from sklump/v20-cred-ex-record-dump-by-format\n\ndump by-format components in cred ex record"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fdfac254a19ac294b07",
    "number": 1077,
    "body": "This PR uses the DID Resolver to resolve connection info from a public DID received in an invitation.\r\n\r\nCredit to @Luis-GA for his awesome work on this feature.",
    "head_branch": "feature/resolve-invitation-public-dids",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1077 from sicpa-dlab/feature/resolve-invitation-public-dids\n\nUse DID Resolver to resolve public DIDs in invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe0ac254a19ac294b08",
    "number": 1076,
    "body": "Addresses #1075 \r\n\r\nSigned-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "fix/sov-doc-consistency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1076 from sicpa-dlab/fix/sov-doc-consistency\n\nfix: did sov verification method id consistent with uniresolver"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe1ac254a19ac294b09",
    "number": 1074,
    "body": "Resolve a formatting issue that snuck in while the Black action was unavailable",
    "head_branch": "black-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1074 from andrewwhitehead/black-fix\n\nFix formatting for black"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe2ac254a19ac294b0a",
    "number": 1073,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "query-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1073 from sklump/query-config\n\nquery config from admin API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe3ac254a19ac294b0b",
    "number": 1071,
    "body": "",
    "head_branch": "prover-remove-superfluous-timestamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1071 from sklump/prover-remove-superfluous-timestamp\n\nProver remove superfluous timestamp"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe4ac254a19ac294b0c",
    "number": 1070,
    "body": "This PR cleans up #1033. The change set was too large to really reason about so I've isolated changes to just the addition of the resolver and will follow up with further integration.\r\n\r\nThis PR adds interfaces to enable plugging in one or more DID resolvers. This enables ACA-Py to resolve DIDs from any VDR as long as there is a resolver plugin supporting it and the plugin is registered. By using a plugin that connects to a universal resolver instance, ACA-Py can inherit support for all methods supported by the universal resolver (with security and trust implications as a result of DIDs being resolved remotely).",
    "head_branch": "feature/did-resolver-cleaned",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1070 from sicpa-dlab/feature/did-resolver-cleaned\n\nPluggable DID Resolver Interface (cleaned)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe5ac254a19ac294b0d",
    "number": 1069,
    "body": "Formalize DucaDellaForcoleta's approach of\r\nhttps://chat.hyperledger.org/channel/aries-cloudagent-python/thread/XKFaiAQj364yW4amW?msg=aZwH7qZmLax8yDFhq\r\nto allow larger client requests than default if need be. Range is from 1 (default) through 16MB.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "config-max-cli-req-size",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1069 from sklump/config-max-cli-req-size\n\nmake max client request size configurable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe6ac254a19ac294b0e",
    "number": 1068,
    "body": "Fixes #1067 \r\n\r\nSigned-off-by: Filip Burlacu <filip.burlacu@securekey.com>",
    "head_branch": "multicodec-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1068 from Moopli/multicodec-fix\n\nfix: multicodec prefix for ed25519 uses varint encoding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe7ac254a19ac294b0f",
    "number": 1066,
    "body": "Formalize DucaDellaForcoleta's approach of\r\nhttps://chat.hyperledger.org/channel/aries-cloudagent-python/thread/XKFaiAQj364yW4amW?msg=aZwH7qZmLax8yDFhq\r\nto allow larger client requests than default if need be. Range is from 1 (default) through 16MB.",
    "head_branch": "arg-cli-max-req-size-take-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe8ac254a19ac294b10",
    "number": 1065,
    "body": "Formalize DucaDellaForcoleta's approach of\r\nhttps://chat.hyperledger.org/channel/aries-cloudagent-python/thread/XKFaiAQj364yW4amW?msg=aZwH7qZmLax8yDFhq\r\nto allow larger client requests than default if need be. Range is from 1 (default) through 16MB.",
    "head_branch": "arg-client-max-req-size",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe8ac254a19ac294b11",
    "number": 1064,
    "body": "Formalize DucaDellaForcoleta's approach of\r\nhttps://chat.hyperledger.org/channel/aries-cloudagent-python/thread/XKFaiAQj364yW4amW?msg=aZwH7qZmLax8yDFhq\r\nto allow larger client requests than default if need be. Range is from 1 (default) through 16MB.",
    "head_branch": "arg-client-max-size",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fe9ac254a19ac294b12",
    "number": 1063,
    "body": "This adds an event bus and utilizes it to simplify webhooks. Events are emitted and the Admin Server subscribes to some of them to be forwarded as webhooks. Here is a diagram outlining the refactor: https://hackmd.io/IoDqYR_cS3yRAe7DI8JAiA\r\n\r\nEvents are namespaced. `acapy::*` events are anything originating from ACA-Py this way plugins can use their own events without collision.\r\n\r\n### Some notable changes:\r\n\r\n#### Responder.send_webhook\r\n\r\nIs deprecated, it emits a warning and uses the `acapy::webhook::{TOPIC}` event to retain backwards compatibility.\r\n\r\n#### BaseRecord webhooks\r\n\r\nInstead of sending a webhook, it now emits an event. As such, `WEBHOOK_TOPIC` -> `RECORD_TOPIC` and `send_webhook` -> `emit_event`\r\n\r\nThe record event topic follows this pattern: `acapy::record::{RECORD_TOPIC}::{STATE}`\r\n\r\n#### Removed Admin Server webhook_targets\r\n\r\nIt appears that the admin server webhook_targets are no longer used. See: https://github.com/hyperledger/aries-cloudagent-python/blob/main/aries_cloudagent/admin/server.py#L754-L755 Instead we just rely on `profile.settings.get(\"admin.webhook_urls\")`\r\n\r\nAs such, the following are removed:\r\n\r\n- BaseAdminServer.add_webhook_target\r\n- BaseAdminServer.remove_webhook_target\r\n- BaseAdminServer.send_webhook\r\n\r\n",
    "head_branch": "feature/event-bus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1063 from Indicio-tech/feature/event-bus\n\nFeature/event bus"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214feaac254a19ac294b13",
    "number": 1061,
    "body": " - Issue Credential v2 with Linked Data proofs\r\n - BBS+ and Ed25519\r\n - Issue, verify, derive VC\r\n - Create, verify VP\r\n - Add did:key for Ed25519 and Bls12381 keys\r\n\r\nMost noticeable breaking changes are in the wallet. Because of the addition of new key types and did methods it had to be extended.",
    "head_branch": "cwu-bbs-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1061 from animo/cwu-bbs-main\n\nCWU - W3C Issue Credential"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214febac254a19ac294b14",
    "number": 1060,
    "body": "…uto-issue before issuing in demo webhooks. Also accommodate multiple detail records on same cred ex id in cred ex record deletion -- which should never happen but which controllers could erroneously produce.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "touch-up-demo-docs-for-v2-protos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1060 from sklump/touch-up-demo-docs-for-v2-protos\n\nAriesOpenAPI, Acme, Alice Phone demos: update text pics & code. Check…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fecac254a19ac294b15",
    "number": 1058,
    "body": "This is a WIP Pull Request. It consists of the following changes of endorser protocol.\r\n\r\n1. #1028 \r\n2.  #1040 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fedac254a19ac294b16",
    "number": 1057,
    "body": "…elsewhere in aca-py source code\r\n\r\nAddress https://github.com/hyperledger/aries-cloudagent-python/issues/1041.\r\nWill need to merge https://github.com/hyperledger/aries-cloudagent-python/pull/1056 manually once it's in.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "open-mediation-env-var",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214feeac254a19ac294b17",
    "number": 1056,
    "body": "- Remove `--emit-new-didcomm-prefix` and `--emit-new-didcomm-mime-type` in favour of `--aip-version` (1 or 2). I believe the .NET framework will currently only accept the old MIME type.\r\n- Change the DID document service type to `did-communication` when using the `did-exchange` protocol.\r\n- Remove DID shortening from DIDDoc and related classes.\r\n- Do not accept DID documents without an `id` property.\r\n- Qualify connection DIDs with `did:peer:` (does NOT yet qualify other DIDs with `did:sov:`).\r\n- Updates the `INDY_DID` pattern to accept `did:sov:` or `did:peer:`, which isn't technically correct. We should be using a generic DID pattern in most places.\r\n- Should permissively accept DID documents in the current v1.0 format, or in the older format (which I'm calling v0). When using the `did-exchange` protocol, the new format (with `verificationMethod`) is used for serialization regardless of the AIP version setting. When using the `connections` protocol, the old format (with `publicKey`) is used.\r\n\r\nThese changes might be better addressed though the generic resolver PR depending on the timeline, but this is for testing compatibility with other agents.",
    "head_branch": "aip-v2-flag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fefac254a19ac294b18",
    "number": 1053,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-json-ld-and-admin-server-multitenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1053 from sklump/unit-tests-json-ld-and-admin-server-multitenancy\n\nUnit test coverage: json-ld, multitenancy in admin-server setup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff0ac254a19ac294b19",
    "number": 1051,
    "body": "",
    "head_branch": "indy-ledger-endorse-txn-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1051 from sklump/indy-ledger-endorse-txn-unit-tests\n\nIndy ledger endorse txn unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff0ac254a19ac294b1a",
    "number": 1049,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-test-coverage-outbound-queue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1049 from sklump/unit-test-coverage-outbound-queue\n\ncover transport outbound queue code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff1ac254a19ac294b1b",
    "number": 1047,
    "body": "... to match incoming aries-rfc tweak https://github.com/hyperledger/aries-rfcs/pull/600\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "pluralize-proposal-attach-for-present-proof-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1047 from sklump/pluralize-proposal-attach-for-present-proof-v2\n\npluralize proposal(s) attached"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff2ac254a19ac294b1c",
    "number": 1046,
    "body": "Workflow can run on PR (hyperledger repo) or manually.  Runs a specific sub-set of bdd tests since some tests cause test execution to \"hang\" under GHA:\r\n\r\n`./run_bdd` - runs all the tests, can be run manually\r\n`./run_bdd -t @GHA` - runs a sub-set of tests - should be sufficient to smoke test existing functionality\r\n\r\nWorkflow is setup to run its own indy ledger and tails server, but can be run with external ledger/tails server using environment settings.\r\n\r\n\"Actions\" are re-factored the same way as they are setup under AATH.\r\n",
    "head_branch": "gha_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1046 from ianco/gha_tests\n\nAdd GHA workflow for aca-py integration tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff3ac254a19ac294b1d",
    "number": 1045,
    "body": "For consideration. I think we may be able to consolidate holder/routes.py into fewer endpoints later, once revocation is in place for DIF credentials, but this allow admin API access for the current state of affairs.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "vc-holder-admin-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1045 from sklump/vc-holder-admin-api\n\ntentative admin plumbing for DIF cred get/list/delete"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff4ac254a19ac294b1e",
    "number": 1038,
    "body": "Suspect: magic values as of August 2020 for timeouts in `messaging/{schemas,credential_definitions}/routes.py` for transaction record expiry. What are these for? Do we mean to create stale records? If so, zero would be clearer here? Please advise.",
    "head_branch": "endorse-txn-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1038 from sklump/endorse-txn-unit-tests\n\nEndorse txn unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff5ac254a19ac294b1f",
    "number": 1035,
    "body": "- Closes #1025 \r\n- https://github.com/hyperledger/aries-rfcs/commit/02ff04e735529c529c19b302a54550d07cea8954",
    "head_branch": "oob-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1035 from shaangill025/oob-fix\n\nOOB - Alias Fix and Pluralized fields as per RFC0074"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff6ac254a19ac294b20",
    "number": 1033,
    "body": "This PR is a work in progress.\r\n\r\nThis PR adds interfaces to enable plugging in one or more DID resolvers. This enables ACA-Py to resolve DIDs from any VDR as long as there is a resolver plugin supporting it and the plugin is registered. By using a plugin that connects to a universal resolver instance, ACA-Py can inherit support for all methods supported by the universal resolver (with security and trust implications as a result of DIDs being resolved remotely).",
    "head_branch": "feature/did-resolver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff7ac254a19ac294b21",
    "number": 1032,
    "body": "- https://identity.foundation/presentation-exchange/\r\n- https://w3c.github.io/vc-data-model/",
    "head_branch": "vc-holder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff8ac254a19ac294b22",
    "number": 1023,
    "body": "Implements https://github.com/hyperledger/aries-rfcs/pull/607",
    "head_branch": "rfc592-453-454",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1023 from sklump/rfc592-453-454\n\nRfc592 453 454"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff8ac254a19ac294b23",
    "number": 1022,
    "body": "Signed-off-by: Anthony Voutas <anthonyv@kiva.org>",
    "head_branch": "record-limit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ff9ac254a19ac294b24",
    "number": 1018,
    "body": "- Includes in-memory and Indy-SDK storage implementations\r\n- Askar implementation: can take advantage of multi-value tag storage, will be added later on shared-components branch\r\n",
    "head_branch": "vc-holder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1018 from andrewwhitehead/vc-holder\n\nInitial support for VC storage and retrieval"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ffaac254a19ac294b25",
    "number": 1017,
    "body": "Switching between wallets in a multi-tenancy Alice was losing the token, which made any invitations be collected by the last created wallet rather than the last wallet switched to.",
    "head_branch": "fix-wallet-switch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1017 from JulianNicholls/fix-wallet-switch\n\nFix wallet switching losing id and token - See issue #1011"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ffbac254a19ac294b26",
    "number": 1016,
    "body": "In line 532 of aries_cloudagent/protocols/out_of_band/v1_0/manage.py the initialization \r\nof PresentationManager should take Profile as an argument and not ProfileSession.\r\n\r\nThe error bellow occurs when the receive_invitation is called:\r\n_AttributeError: 'IndySdkProfileSession' object has no attribute 'session'_\r\n\r\nIn order to avoid the above error, this line(532) **proof_present_mgr = PresentationManager(self._session)**  \r\nmust be replaced with this **proof_present_mgr = PresentationManager(self._session.profile)**.\r\n\r\nAs a result, with this change the above error disappears.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1016 from konsmosc/main\n\nCorrection to out_of_band protocol v1_0 in manager.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ffcac254a19ac294b27",
    "number": 1015,
    "body": "",
    "head_branch": "endorser_protocol",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1015 from ianco/endorser_protocol\n\nBDD integration test for Endorser protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ffdac254a19ac294b28",
    "number": 1013,
    "body": "- Add BoundedInt argument helper\r\n- Accept PORTS in old or new format\r\n- Fix 'Illegal byte sequence' error on macOS",
    "head_branch": "int-arg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1013 from andrewwhitehead/int-arg\n\nStartup argument fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214ffeac254a19ac294b29",
    "number": 1010,
    "body": "",
    "head_branch": "rfc454-present-proof-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1010 from sklump/rfc454-present-proof-v2\n\nRfc454 present proof v2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fffac254a19ac294b2a",
    "number": 1009,
    "body": "Signed-off-by: DucaDellaForcoletta <a.vignapiano@gmail.com>",
    "head_branch": "ledger-keepalive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1009 from ducadellaforcoletta/ledger-keepalive\n\n#1006 Added ledger keepalive startup parameter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66214fffac254a19ac294b2b",
    "number": 1004,
    "body": "# Intro\r\nI have been working on getting this framework up and running. Along the way there have been questions and still are. Therefore I dedicated to, in this issue: https://github.com/hyperledger/aries-cloudagent-python/issues/983 to make a demo that uses the basis of this framework to explain what goes on. Dont do any shortcuts, but still fast enough to play with.\r\n\r\nThis is the first draft, hence draft pull request. The goal is to get an example of hosting as well in the same demo.\r\n\r\nBut for now, there are alot of questions in this doc itself, that need inline answering to, that can be reference to documentation or what not, but I was not able to easily find it.\r\n\r\nAs the questions are answered the doc will be updated.\r\nThe doc will also be update as I go along the way of making this work for our benefit.\r\n\r\n# Communication so far\r\nhttps://github.com/hyperledger/aries-cloudagent-python/issues/983\r\nhttps://chat.hyperledger.org/channel/aries-cloudagent-python?msg=GZF2o6YrKJ9c9voxg\r\nhttps://chat.hyperledger.org/channel/aries-cloudagent-python?msg=o4nwTqwQMevvtjoJG",
    "head_branch": "demo-zero-to-hero-basis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215000ac254a19ac294b2c",
    "number": 1000,
    "body": "",
    "head_branch": "pre-release-0.6.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1000 from andrewwhitehead/pre-release-0.6.0\n\nUpdate to version 0.6.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215001ac254a19ac294b2d",
    "number": 999,
    "body": "Closes #993\r\nSigned-off-by: Shaanjot Gill shaangill025@users.noreply.github.com",
    "head_branch": "transport",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #999 from shaangill025/transport\n\nFix for handle_not_delivered being triggered when there is no message property"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215002ac254a19ac294b2e",
    "number": 998,
    "body": "Closes #993\r\nSigned-off-by: Shaanjot Gill <shaangill025@users.noreply.github.com>",
    "head_branch": "outbound_transport",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215003ac254a19ac294b2f",
    "number": 997,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #997 from ianco/master\n\nAdd port mapping to aca-py docker startup command"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215004ac254a19ac294b30",
    "number": 995,
    "body": "",
    "head_branch": "image-1.15-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #995 from andrewwhitehead/image-1.15-1\n\nUpdate docker images to 1.15-1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215005ac254a19ac294b31",
    "number": 992,
    "body": "Address https://github.com/hyperledger/aries-cloudagent-python/issues/988\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-graceless-double-accept-connection-invitation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #992 from sklump/fix-graceless-double-accept-connection-invitation\n\nfinesse error message for double-tap to receive request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215006ac254a19ac294b32",
    "number": 991,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "didx-create-req-on-implicit-invi-must-have-responder-public-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #991 from sklump/didx-create-req-on-implicit-invi-must-have-responder-public-did\n\nmust have responder DID to create request on implicit invitation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215006ac254a19ac294b33",
    "number": 990,
    "body": "asyncio.Task.all_tasks() was moved to asyncio.all_tasks()",
    "head_branch": "fix/python_3_7_and_above",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #990 from borancar/fix/python_3_7_and_above\n\nFix start cmd for Python versions >= 3.9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215007ac254a19ac294b34",
    "number": 989,
    "body": "",
    "head_branch": "pre-release-0.6rc1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #989 from andrewwhitehead/pre-release-0.6rc1\n\nUpdate version to 0.6.0-rc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215008ac254a19ac294b35",
    "number": 987,
    "body": "",
    "head_branch": "rtd-cleanups-060-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #987 from swcurran/rtd-cleanups-060-3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215009ac254a19ac294b36",
    "number": 986,
    "body": "",
    "head_branch": "issue-cred-v2-accept-all-encodings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #986 from sklump/issue-cred-v2-accept-all-encodings\n\nIssue cred v2 accept all encodings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621500aac254a19ac294b37",
    "number": 985,
    "body": "",
    "head_branch": "rtd-cleanup-060",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #985 from swcurran/rtd-cleanup-060\n\nClean up autodoc errors in code; move GettingStarted and assets folders to root and out of docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621500bac254a19ac294b38",
    "number": 984,
    "body": "Combined transport fixes. Adding `trust_env` to `ClientSession` causes it to respect the environment-defined transport settings. Renamed `MessageParseError` and `MessageEncodeError` in the transport module to avoid ambiguity. Supercedes #980 ",
    "head_branch": "fix/trust-env",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #984 from andrewwhitehead/fix/trust-env\n\nRename duplicate MessageParseError, add trust_env to ClientSession"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621500cac254a19ac294b39",
    "number": 982,
    "body": "for docs generation\r\n",
    "head_branch": "fix/docs-mock-marshmallow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #982 from andrewwhitehead/fix/docs-mock-marshmallow\n\nAvoid error during import if marshmallow library is mocked"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621500dac254a19ac294b3a",
    "number": 981,
    "body": "",
    "head_branch": "docs-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #981 from swcurran/docs-update\n\nAdd note about mediation and unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621500dac254a19ac294b3b",
    "number": 980,
    "body": "The issue is described here: https://github.com/hyperledger/aries-cloudagent-python/issues/977\r\n\r\nit's my first PR in AcaPy...  I hope I did not forget anything",
    "head_branch": "proxy-trust-env",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621500eac254a19ac294b3c",
    "number": 979,
    "body": "",
    "head_branch": "fix/codecov-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #979 from andrewwhitehead/fix/codecov-main\n\nUse main branch for codecov badge"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621500fac254a19ac294b3d",
    "number": 978,
    "body": "The issue is described here: https://github.com/hyperledger/aries-cloudagent-python/issues/977\r\n",
    "head_branch": "trust-environment-proxy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215010ac254a19ac294b3e",
    "number": 976,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "get-endpoints-via-conn-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #976 from sklump/get-endpoints-via-conn-id\n\nquery endpoints by connection id"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215011ac254a19ac294b3f",
    "number": 973,
    "body": "https://github.com/hyperledger/aries-cloudagent-python/pull/967 PR has problem that a `send` of AdminResponder overrides a `send` of BaseResponder.\r\nThis PR fixes this problem.\r\n\r\n@andrewwhitehead @TimoGlastra \r\nI should have done the test properly. Sorry for the inconvenience.\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "fix-responser-send",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #973 from baegjae/fix-responser-send\n\n[Multi-tenancy] Fix AdminResponder send overriding problem"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215012ac254a19ac294b40",
    "number": 971,
    "body": "In the demo folder, run `./run_bdd` to run the behave tests.\r\n\r\nDocumentation is provided in `demo/INTEGRATION-TESTS.md`.\r\n\r\nCurrently tests are provided to test simple connection, cred issue and proof scenarios.  Tests run against multiple agent configurations, and can run against default (SQLite) or postgres wallets.  A test scenario for endorsement (setup connection and endorser/author dids) is started and will be completed once the endorser PR is merged.\r\n\r\nThere is a new \"runner\" (`demo/runners/agent_container.py`) that consolidates some of the alice and faber code (the intent is to eventually re-factor alice and faber to use this same code - re-factor of alice/faber will be done once this PR is reviewed/approved).\r\n\r\n@swcurran @nodlesh @TimoGlastra @andrewwhitehead @sklump \r\n",
    "head_branch": "bdd_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #971 from ianco/bdd_tests\n\nBdd integration tests for aca-py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215013ac254a19ac294b41",
    "number": 970,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "present-proof-problem-report",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #970 from sklump/present-proof-problem-report\n\nallow problem report on present-proof protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215014ac254a19ac294b42",
    "number": 969,
    "body": "re: https://github.com/sklump/aries-cloudagent-python/pull/new/fix-demo-doc-re-mediation\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-demo-doc-re-mediation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #969 from sklump/fix-demo-doc-re-mediation\n\nadjust Aries demo README to fit current admin API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215015ac254a19ac294b43",
    "number": 968,
    "body": "@TimoGlastra is there meant to be a separation between `wallet_webhook_urls` values of `[]` (empty list) vs. `None` (multitenant/admin/routes.py lines 355-370)? Please advise.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "backfill-lazy-unit-test-misses",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #968 from sklump/backfill-lazy-unit-test-misses\n\ncover easy modules 100%"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215015ac254a19ac294b44",
    "number": 967,
    "body": "After aca-py restarts, there are two routes to load the sub wallet profile.\r\n\r\n1. API call\r\n2. inbound message\r\n\r\nIn case 1, the responder is updated with the loaded profile.\r\nhttps://github.com/hyperledger/aries-cloudagent-python/blob/982a260ca327e0e9432a45dbb381b7b80c4c8ed2/aries_cloudagent/admin/server.py#L333\r\n\r\nHowever, in case 2, since there is no such process as above, the responder is based on the profile of the base wallet.\r\nWe observed the problem that webhook message came to the webhook url of the base wallet, not the webhook url of the sub wallet.\r\n\r\nThis PR enable to update the responder with the loaded profile in case 2.",
    "head_branch": "fix-responder-profile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #967 from baegjae/fix-responder-profile\n\n[Multi-tenancy] Fix incorrect responder profile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215016ac254a19ac294b45",
    "number": 966,
    "body": "",
    "head_branch": "docstrings5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #966 from swcurran/docstrings5\n\nAdding back in authors because RTD requires it"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215017ac254a19ac294b46",
    "number": 965,
    "body": "",
    "head_branch": "docstrings4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #965 from swcurran/docstrings4\n\nUpdated conf.py, index files and generated docs files to get RTD to work"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215018ac254a19ac294b47",
    "number": 964,
    "body": "",
    "head_branch": "docstrings3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215019ac254a19ac294b48",
    "number": 963,
    "body": "",
    "head_branch": "docstrings2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621501aac254a19ac294b49",
    "number": 962,
    "body": "",
    "head_branch": "docstrings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #962 from swcurran/docstrings\n\nAdjust include path in sphinx conf.py to see if docstrings will be included on RTDs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621501bac254a19ac294b4a",
    "number": 961,
    "body": "",
    "head_branch": "rtd-0.6.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #961 from swcurran/rtd-0.6.0\n\nUpdate to docs folder for rtd generation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621501bac254a19ac294b4b",
    "number": 960,
    "body": "",
    "head_branch": "0.6-rc0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #960 from andrewwhitehead/0.6-rc0\n\nAdjust version to 0.6.0-rc0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621501cac254a19ac294b4c",
    "number": 959,
    "body": "",
    "head_branch": "restore-initiator-to-conn-rec-nominally",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #959 from sklump/restore-initiator-to-conn-rec-nominally\n\nRestore initiator to conn rec nominally"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621501dac254a19ac294b4d",
    "number": 957,
    "body": "The requester creates a (did-exchange) request with the responder's public DID; the admin API returns the request.\r\nThe requester sends it out-of-band (since there isn't a connection yet).\r\nThe responder receives the request via the didexchange admin API. If --auto-accept-requests is on or the auto_accept parameter is set in the API call, the responder code accepts the request automatically; otherwise, the connection awaits acceptance. Either way, from here the flow follows on the same as for explicit invitations.",
    "head_branch": "implicit-invitations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #957 from sklump/implicit-invitations\n\nImplicit invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621501eac254a19ac294b4e",
    "number": 956,
    "body": "",
    "head_branch": "didcomm-mime-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #956 from andrewwhitehead/didcomm-mime-type\n\nAdd option to emit the new(ish) DIDComm MIME type"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621501fac254a19ac294b4f",
    "number": 955,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #955 from ianco/master\n\nRemove WEBHOOK_URL double-tap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215020ac254a19ac294b50",
    "number": 954,
    "body": "",
    "head_branch": "readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #954 from swcurran/readme\n\nRevised readme to reflect recent updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215021ac254a19ac294b51",
    "number": 953,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #953 from ianco/master\n\nAdd webhook callback to get rid of error running performance/revocation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215022ac254a19ac294b52",
    "number": 952,
    "body": "",
    "head_branch": "explicit-public-invitations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #952 from sklump/explicit-public-invitations\n\nExplicit public invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215022ac254a19ac294b53",
    "number": 951,
    "body": "also, look for auto-accept-invites on didx-manager receiving invitation",
    "head_branch": "magic-invitation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215023ac254a19ac294b54",
    "number": 949,
    "body": "For compatibility with 0.6 updates",
    "head_branch": "fix/0.6-perf-rev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #949 from andrewwhitehead/fix/0.6-perf-rev\n\nFixes for performance demo w/ revocation enabled"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215024ac254a19ac294b55",
    "number": 948,
    "body": "Small update to throw an error when a wallet key is provided, but not required. This could be when running in managed mode, or using a local wallet.\r\n\r\nFixes issue posted in rocket.chat: https://chat.hyperledger.org/channel/aries-cloudagent-python?msg=wvdD5tb8RyFca5kX3",
    "head_branch": "fix/multitenancy-throw-error-key-provided-managed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #948 from TimoGlastra/fix/multitenancy-throw-error-key-provided-managed\n\n[multi-tenancy] throw error if key is provided but not required"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215025ac254a19ac294b56",
    "number": 946,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\n",
    "head_branch": "060-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #946 from swcurran/060-docs\n\nAdding/updating require repo docs, and readthedocs files for 0.6.0 release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215026ac254a19ac294b57",
    "number": 945,
    "body": "",
    "head_branch": "pre-release-0.6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #945 from andrewwhitehead/pre-release-0.6\n\nPre-release 0.6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215027ac254a19ac294b58",
    "number": 943,
    "body": "… unit test fruit\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-invitation-url-public-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #943 from sklump/fix-invitation-url-public-did\n\nfix invitation url for public invitation record, low hanging verifier…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215028ac254a19ac294b59",
    "number": 942,
    "body": "@andrewwhitehead ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #942 from esune/main\n\nDisambiguate AUTO_ACCEPT_REQUESTS environment variable."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215028ac254a19ac294b5a",
    "number": 941,
    "body": "- Testing and debugging - Done\r\n- Unit Test Coverage and Fixes - Done\r\n- Similar to connections invitation, mediation using OOB invitation is not supported implicitly when using public DID.\r\nCloses #912",
    "head_branch": "mediator_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #941 from shaangill025/mediator_support\n\nMediator support to DID Exchange and OOB"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215029ac254a19ac294b5b",
    "number": 939,
    "body": "Encapsulate handshake protocols into an enum for tighter admin API integration.\r\n\r\n99% of this work is @shaangill025: this PR finesses https://github.com/hyperledger/aries-cloudagent-python/pull/937/files#",
    "head_branch": "handshake",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #939 from sklump/handshake\n\nOut-of-band test coverage improvement fixes, cleanup + handshake"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621502aac254a19ac294b5c",
    "number": 937,
    "body": "100% Test Coverage - Done\r\n\r\nFollowing discussion with Andrew, changed pthid for reuse messages to the existing conn_record invitation_msg_id [original] instead of the received OOB invitation_msg_id [previous impl] - Done\r\n\r\nCleanup: reordering of import according to the convention - Done\r\n",
    "head_branch": "oob_protocol",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621502bac254a19ac294b5d",
    "number": 936,
    "body": "…nvitation\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "respect-auto-accept-on-oob-invitations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #936 from sklump/respect-auto-accept-on-oob-invitations\n\noob-mgr passes auto-accept from parameter into didx manager receive-i…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621502cac254a19ac294b5e",
    "number": 934,
    "body": "- GitHub will automatically redirect links to the old branch name, however the URLs should eventually be updated once all of the repositories have been updated.\r\n\r\nSigned-off-by: Wade Barnes <wade.barnes@shaw.ca>",
    "head_branch": "feature/rename-default-branch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #934 from WadeBarnes/feature/rename-default-branch\n\nUpdates to correctly reference the default branch after renaming."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621502dac254a19ac294b5f",
    "number": 931,
    "body": "Split did-exchange (rfc23) auto-acceptance of out-of-band requests by those referring to peer DIDs vs. public DIDs, since responses to out-of-band implicit invitations do not refer to an invitation and so acceptance of those requests must be by configuration. Nudged connection (rfc160) protocol analagously for symmetry.\r\n\r\nReduced scope of invitation records as they are for returning via admin API, not for saving, given the above.",
    "head_branch": "fix-implicit-invitations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #931 from sklump/fix-implicit-invitations\n\nFix implicit invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621502eac254a19ac294b60",
    "number": 930,
    "body": "Was https://github.com/hyperledger/aries-cloudagent-python/pull/926",
    "head_branch": "rfc-0453-take-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #930 from sklump/rfc-0453-take-2\n\nRfc 0453 take 2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621502fac254a19ac294b61",
    "number": 928,
    "body": "This PR adds a very simple approach to multi-tenant profile management. A `ProfileCache` is added that has a max `capacity` (initialized with 100 for now) and keeps count of references using `sys.getrefcount`. It will close wallets when the capacity is exceeded and the profile is not used at the moment. The ledger implementation uses a custom refcounter using async context managers which may be nice to also use for this scenario. However this implementation allowed to build the cache on top of the profiles without modifying the profile itself.",
    "head_branch": "multitenancy/profile-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215030ac254a19ac294b62",
    "number": 926,
    "body": "Plus fixes for bugs/repetitiveness found along the way",
    "head_branch": "rfc453-issue-cred-2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215030ac254a19ac294b63",
    "number": 925,
    "body": "This PR enables two features:\r\n\r\n- PUT /multitenancy/wallet/{wallet_id} : Update a subwallet \r\nWe can update `wallet_dispatch_type`, `wallet_webhook_urls`, `label`, and `image_url` of the existing subwallet.\r\n- GET /multitenancy/wallets : Query subwallets\r\nWe can query with `wallet_name`.\r\n\r\nThanks!\r\n@ianco @TimoGlastra ",
    "head_branch": "wallet-query-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #925 from baegjae/wallet-query-update\n\n[Multi-tenancy] Update & Query subwallet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215031ac254a19ac294b64",
    "number": 924,
    "body": "Fix a couple of problems in exception messages in `ledger/indy.py` where `self.wallet.name` was used instead of `self.wallet.opened.name`.",
    "head_branch": "fix/indy-ledger-errors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #924 from dbluhm/fix/indy-ledger-errors\n\nfix: wallet.name to wallet.opened.name in error msgs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215032ac254a19ac294b65",
    "number": 923,
    "body": "This fixes a bug related to taa acceptance. The taa acceptance was cached in memory with only the ledger pool name, while multiple wallets share the same pool. This caches the taa acceptance based on pool name + wallet name which is always unique\r\n\r\n@mat-work this fixes the bug you reported a while ago with TAA acceptance",
    "head_branch": "fix/multitenancy-taa-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #923 from TimoGlastra/fix/multitenancy-taa-cache\n\n[multi-tenancy] unique taa cache key per wallet and ledger pool"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215033ac254a19ac294b66",
    "number": 921,
    "body": "Add support for mediation to the alice/faber demo, and add mediation docs from Indicio.\r\n\r\nThis includes support for mediation within a multi-tenant aca-py.  Also adds mediator and multitenant support to the performance demo.\r\n",
    "head_branch": "mediator_demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #921 from ianco/mediator_demo\n\nMediator demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215034ac254a19ac294b67",
    "number": 919,
    "body": "",
    "head_branch": "manager-profile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #919 from andrewwhitehead/manager-profile\n\nMake RoutingManager and MediationManager accept a Profile instead of a session"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215035ac254a19ac294b68",
    "number": 918,
    "body": "Noticed I made quite some typos and careless mistakes in the multi-tenancy documentation. So this is my attempt to fix it. It doesn't change anything to the story",
    "head_branch": "docs/typo-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #918 from TimoGlastra/docs/typo-fixes\n\n[multi-tenancy] documentation cleanup and typo fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215036ac254a19ac294b69",
    "number": 917,
    "body": "@ianco ",
    "head_branch": "docs/multitenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #917 from TimoGlastra/docs/multitenancy\n\n[multi-tenancy] Documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215036ac254a19ac294b6a",
    "number": 915,
    "body": "This adds mediator support for multitenant agents. \r\n\r\nThere are a lot of different setups possible so these are the ones that are currently supported.\r\n\r\n1. base wallet automatically connects to mediator `--mediation-invitation` / `default-mediatior-id`\r\n    - When a subwallet creates a connection / key it will be registered at the mediator (via the base wallet connection)\r\n    - Base wallet will act as relay\r\n    - Pro: Not every wallets needs create a connection with the mediator\r\n    - Con: No control over mediator for subwallets\r\n2. sub wallet creates connection with mediator and requests mediation. Can set as default and use that for connections.\r\n\r\nA combination of 2 and 3 can be used. So two mediators will be used. Whats not possible is to automatically connect every new subwallet to a mediator on creation.\r\n\r\nIn the future it may be desirable to create a routing manager that handles mediation and relaying for both base and subwallets. This way the integration of features will be less scattered around the code base\r\n\r\n@victormartinez-work @ianco ",
    "head_branch": "feature/multitenancy-mediation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #915 from TimoGlastra/feature/multitenancy-mediation\n\n[Multitenancy] mediator support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215037ac254a19ac294b6b",
    "number": 914,
    "body": "These arguments caused more confusion than anything else with\r\nquestionable value add.\r\n\r\nSigned-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "feature/no-flag-for-keylist-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #914 from dbluhm/feature/no-flag-for-keylist-updates\n\nfeat: remove cli args for keylist updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215038ac254a19ac294b6c",
    "number": 913,
    "body": "get/set/clear default mediator admin API. This code provides admin API endpoints for the recently added  `default mediator` configuration.",
    "head_branch": "feature/default-mediator-admin-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #913 from burdettadam/feature/default-mediator-admin-api\n\nFeature, default mediator admin api"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215039ac254a19ac294b6d",
    "number": 911,
    "body": "Adding `FAST=1` to the invocation of the of run_tests will skip the image build and mount the `aries_cloudagent` directory as a volume in the container.\r\n\r\nGenerally, the way I use this script while developing, I don't need the image to rebuild to update the environment, just need it to run on the changes I've made in the `aries_cloudagent` folder. This might be utilizing this script in a way that it was not intended so I'm happy to just keep this small optimization locally if that's the case but I've found the change useful and others might as well.",
    "head_branch": "feature/fast-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #911 from dbluhm/feature/fast-tests\n\nfeat: add \"fast\" option to run_tests scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621503aac254a19ac294b6e",
    "number": 909,
    "body": "**Background**\r\n- Messages often stay in the internal ACA-py queue for long periods of time without being delivered. This internal queue is ephemeral and in-memory. The team wants to add an option such that outbound messages can be sent to a durable queue external to ACA-py before transport.\r\n- This PR implements the use case of storing outbound messages in a durable queue. A new set of commandline options have been added to provide a way for users to \"opt in\" to use of the outbound queue. This is intended to be an optional replacement to the current ACA-py outbound transport.\r\n- For the sake of simplicity, the first queue supported by ACA-py itself, introduced in this PR, is a Redis `LIST`. Users will need to configure [Redis persistence](https://redis.io/topics/persistence) to gain message durability benefits in Redis.\r\n- However this PR exposes a pluggable interface extensible to other queue types. The new commandline option `--outbound-queue-class` is available for this use case. Developers can specify the dotpath to a custom queue backend which developers can define themselves, implementing the base class `BaseOutboundQueue`.\r\n- The queue in this PR does not actually deliver the message to another agent. A delivery service ([one prototype can be found here](https://github.com/andrewwhitehead/aca-deliver)) would need to be run. This service should pick up a message from the queue and then deliver that message. What the queue in this PR does provide is simply a new persistence layer that acts as a durable buffer between ACA-py and this new delivery service. In one sense, this PR can be characterized as a form of decomposition, using a queue between two services (ACA-py on the one hand, and a new delivery service on the other).\r\n- A delivery service consuming this queue in order to send outbound messages over transport will need to pop from the left side of the queue (i.e. the Redis `LPOP` command) to get messages in the order they were sent.\r\n- Connections sometimes time out from the server side. For example this may be possible for a persistent connection to Redis. But the redis client provided by `aioredis` seems to be resilient in the case of serverside connection timeout. I tested this on a running redis instance with a timeout set. No errors were generated and the client silently autoconnects without ACA-py needing to handle the event in any way.\r\n- Unit tests should pass when running Redis on a local development environment, defining the environment variable `TEST_REDIS_CONFIG`. If that variable is not defined, the unit tests that require a live Redis connection will simply be skipped. If you want to run the unit test suite with Redis, the easiest thing is to run redis with the default settings (`$ redis-server`) in one terminal screen, then run the unit tests in another with the following syntax: `$ TEST_REDIS_CONFIG=redis://host.docker.internal:6379 ./scripts/run_tests`\r\n\r\n**Known Remaining Issues**\r\n- Include an additional `.md` file, along the lines of `Multitenancy.md` or `Mediation.md`, that describes what's been done.\r\n\r\n**Changes in this branch**\r\n- This branch introduces three new commandline options, `-oq` to define an outbound queue, `-oqp` to define a prefix to use when generating the queue key, and `-oqc` to specify the location of a custom queue class.\r\n- Changed commandline validation to require either `-ot` or `-oq`, but not both at the same time.\r\n- The `print_banner()` method is updated, to print out information on the queue, and to hide a transport in the case there is no transport.\r\n- Refactored a lot of `print_banner()` into new class, `Banner`, with reusable line generating functions.\r\n- Defined new `RedisOutboundQueue` and its `BaseOutboundQueue` base class type.\r\n- Refactored in `core/conductor.py` to make external vs internal queue save logic clear.\r\n- Handled Redis connection management inside of `transport.start()` and `transport.stop()`.\r\n- Used `msgpack` to serialize before storing in Redis. The message contains three toplevel keys: `headers`, `endpoint`, and `payload`.\r\n- Added optional unit tests for Redis backend. Redis test endpoint can be specified through env var TEST_REDIS_CONFIG.\r\n- Updated run_tests script to proxy TEST_REDIS_CONFIG environment variable to docker.\r\n- Removed a test `test_setup_x()` which seemed to test that a KeyError raised by the outbound transport manager always propagates up the stack. But this manager is now optional.\r\n- Added `aioredis` to requirements.",
    "head_branch": "outbound-redis-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #909 from adamsc64/outbound-redis-integration\n\nOutbound queue integration: Redis and pluggable interface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621503bac254a19ac294b6f",
    "number": 908,
    "body": "Objectives\r\n\r\n- Support 0160 Connections protocol [Done]\r\n- Connection Reuse\r\n1. Use an existing connection when only request~attach is present [done]\r\n2. Use an existing connection when only handshake_protocols is present [done]\r\n3. Both handshake_protocols and request~attach are present [done]\r\n- Attachment [PRESENTATION_REQUEST done]\r\n- Testing [in-progress]\r\n\r\nhttps://github.com/hyperledger/aries-rfcs/tree/master/features/0496-transition-to-oob-and-did-exchange\r\nhttps://github.com/hyperledger/aries-rfcs/tree/master/features/0434-outofband",
    "head_branch": "oob_protocol",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #908 from shaangill025/oob_protocol\n\nOut of Band Protocol [ref: Aries RFC 0434 & 0496]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621503cac254a19ac294b70",
    "number": 907,
    "body": "Webhook dispatch is demonstrated inside the terminal as follows:\r\n![image](https://user-images.githubusercontent.com/9292265/104367059-1dcefd00-54cf-11eb-835a-d9ed26fde8a2.png)\r\n",
    "head_branch": "demos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #907 from shaangill025/demos\n\nSubwallet webhook demonstration [Alice-Faber Demo]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621503dac254a19ac294b71",
    "number": 906,
    "body": "When upgrading a local to public that has no endpoint, the default_endpoint will be registered on the ledger. However the endpoint is not stored in the wallet after this. So /wallet/get-did-endpoint returns null even though the endpoint is registered on the ledger\r\n\r\nThe issue from Rocket.chat:\r\n> One thing that I noticed was that when I assign the public did: POST /wallet/did/public. GET /wallet/get-did-endpoint still returns null for the endpoint, but the endpoint is already on the ledger. I have to do a set-did-endpoint for this to change.\r\n\r\nThis is not specific to multitenancy, however it is now more noticeable because the flow is more common due to not being able to provide a seed to a multitenant wallet",
    "head_branch": "fix-set-public-did-default-endpoint-not-saved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #906 from TimoGlastra/fix-set-public-did-default-endpoint-not-saved\n\nstore default endpoint in wallet in set public did"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621503dac254a19ac294b72",
    "number": 905,
    "body": "The responder that is set in multitenancy authorization middleware was bound to the AdminContext, but not the profile itself. Therefor not all places had access to the correct responder. The responder is now bound to the profile, which is used in the AdminContext.\r\n\r\nFixes #898 ",
    "head_branch": "fix/responder-only-bound-to-request-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #905 from TimoGlastra/fix/responder-only-bound-to-request-context\n\n[Multitenancy] fix responder only bound to request context"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621503eac254a19ac294b73",
    "number": 903,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #903 from ianco/master\n\nFix error query connections by alias"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621503fac254a19ac294b74",
    "number": 902,
    "body": "It seems like a good idea to be able to set a default mediator for use in all newly created connections. This would also support multitenancy with external mediator.",
    "head_branch": "feature/default-mediator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #902 from dbluhm/feature/default-mediator\n\nfeature: set default mediator for use in all newly created connections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215040ac254a19ac294b75",
    "number": 901,
    "body": "Signed-off-by: Daniel Bluhm <dbluhm@pm.me>",
    "head_branch": "fix/create-invitation-error-handling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #901 from dbluhm/fix/create-invitation-error-handling\n\nfix: improperly handled storage errors from bad mediation ids in connections admin api"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215041ac254a19ac294b76",
    "number": 900,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>\r\n\r\nI don't believe keylist merits its own tag, since it follows the same RFC (0211) with the rest of coordinate-mediation. I note that the spec itself vacillates between \"keylist\" and \"key list\" _(I'd prefer \"key list\" since it's correct English, but it's not my spec after all)_.",
    "head_branch": "touchup-coordination-mediation-routes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #900 from sklump/touchup-coordination-mediation-routes\n\nmake openapi tags align with rest of aca-py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215042ac254a19ac294b77",
    "number": 899,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-didx-accept-invitation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #899 from sklump/fix-didx-accept-invitation\n\nconvert invitation to raw keys on use, do not save raw in invitation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215042ac254a19ac294b78",
    "number": 897,
    "body": "A quick fix for a regression I slipped into the mediation changes. Also a unit test to validate the fix and hopefully prevent future regression.",
    "head_branch": "fix/invitation-from-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #897 from dbluhm/fix/invitation-from-did\n\nfix: receive invitations with public DID"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215043ac254a19ac294b79",
    "number": 896,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "demo-multitenancy-touchups",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #896 from sklump/demo-multitenancy-touchups\n\ntouch up README text and include screen shot of admin API section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215044ac254a19ac294b7a",
    "number": 895,
    "body": "Public DIDs were not registered for relaying until it was used in an invitation. However a public did by itself could be used as an an implicit invitation, therefore it should be routed to the corresponding subwallet",
    "head_branch": "fix/multitenancy-implicit-invitations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #895 from animo/fix/multitenancy-implicit-invitations\n\n[Multitenancy] fix: public dids could not be used for implicit invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215045ac254a19ac294b7b",
    "number": 894,
    "body": "- This PR adds an optional `seed` field when creating DID, and the seed is used for did derivation.\r\n- Especially in **multitenancy** situations, we may need to use the assigned DID. In our case, we need to use the steward DID to use registering nym.\r\n- I know the seed is sensitive data, but the seed is not recorded in this API. So, we only need to be careful when calling the API.\r\n\r\n@ianco @TimoGlastra\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "create-did-with-seed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215046ac254a19ac294b7c",
    "number": 893,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215047ac254a19ac294b7d",
    "number": 892,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-backfill-2021-01",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #892 from sklump/unit-tests-backfill-2021-01\n\nunit test coverage improvement"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215048ac254a19ac294b7e",
    "number": 891,
    "body": "I've decided to leave accept-invitation in didexchange routes and manager, as it uses a BaseResponder and is thus an in-band operation.",
    "head_branch": "move-receive-invitation-to-oob",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #891 from sklump/move-receive-invitation-to-oob\n\nMove receive invitation to oob"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215048ac254a19ac294b7f",
    "number": 890,
    "body": "Signed-off-by: Timo Glastra <timo@animo.id>",
    "head_branch": "fix/multitenancy-swagger-ui-authorization",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #890 from animo/fix/multitenancy-swagger-ui-authorization\n\n[Multitenancy] Swagger UI Authorization fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215049ac254a19ac294b80",
    "number": 889,
    "body": "This adds unit tests for almost all code added for multitenancy.\r\n\r\nIt also add an image url option to the agent startup. The multitenancy branch had this option, but there was no way to set it for a non-multitenant wallet. This is just for feature parity.",
    "head_branch": "feature/multitenancy-testing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #889 from animo/feature/multitenancy-testing\n\n[Multitenancy] unit tests (and image url option)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621504aac254a19ac294b81",
    "number": 888,
    "body": "Dump rfc23 state strictly to match RFC text, rather than for internal conn record state machine logic, for clients that require such (e.g., test harness)",
    "head_branch": "conn-rec-rfc23-state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #888 from sklump/conn-rec-rfc23-state\n\nConn rec rfc23 state"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621504bac254a19ac294b82",
    "number": 886,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #886 from ianco/master\n\nAdded docs for some of the alice/faber demo options"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621504cac254a19ac294b83",
    "number": 884,
    "body": "Signed-off-by: Shaanjot Gill <gill.shaanjots@gmail.com>\r\n\r\n- Looking for feedback for this approach, this is a draft version with no test cases added yet\r\n- Updated multitenancy Admin API to include associated webhook_urls and dispatch type\r\n- Support different dispatch types, \"default\" will send only to associated webhook_urls, \"base\" will send to only to AdminServer's webhook_targets, and \"both\"\r\n- In server.py [send_webhook function], the following approach was giving a WalletNotFound error.\r\n```\r\nasync with profile.session() as session:\r\n     wallet = await WalletRecord.retrieve_by_id(session, wallet_id)\r\n```\r\n- Current implementation is using values from profile settings.",
    "head_branch": "webhook-feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #884 from shaangill025/webhook-feature\n\nWebhooks dispatch model w/ multitenancy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621504dac254a19ac294b84",
    "number": 883,
    "body": "This PR adds an Admin API for working with the coordinate mediation protocol.",
    "head_branch": "feature/coordinate-mediation-admin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #883 from dbluhm/feature/coordinate-mediation-admin\n\nCoordinate Mediation Admin API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621504eac254a19ac294b85",
    "number": 882,
    "body": "This PR adds transfering of metadata from multi-use invitations to the connections created by receiving a request through that invitation.",
    "head_branch": "feature/multi-use-invite-meta-transfers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #882 from dbluhm/feature/multi-use-invite-meta-transfers\n\nfeat: transfer metadata from multi-use invitations to connections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621504fac254a19ac294b86",
    "number": 880,
    "body": "Signed-off-by: Brian Richter <brian@aviary.tech>",
    "head_branch": "invitiation-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215050ac254a19ac294b87",
    "number": 878,
    "body": "API Key can be sent as part of the request parameter [x-api-key], it is specified by appending it to the webhook URL and separate it using a hash [#].",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #878 from shaangill025/master\n\nWebhook - Optional API Key in Header"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215050ac254a19ac294b88",
    "number": 877,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAdd __init__.py so the multitenancy stuff will install (AATH failed to build)\r\n\r\nFix lgtm error from previous commit\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #877 from ianco/master\n\nA few multitenancy fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215051ac254a19ac294b89",
    "number": 876,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "agency-multitenant",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #876 from ianco/agency-multitenant\n\nFormatting again"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215052ac254a19ac294b8a",
    "number": 875,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "agency-multitenant",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #875 from ianco/agency-multitenant\n\nFormtting fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215053ac254a19ac294b8b",
    "number": 874,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "agency-multitenant",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #874 from ianco/agency-multitenant\n\nFormatting fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215054ac254a19ac294b8c",
    "number": 873,
    "body": "@andrewwhitehead this can be merged into master.  There is still some work in progress:\r\n\r\n- unit tests\r\n- documentation\r\n- wallet caching\r\n- integration testing\r\n- full integration of mediator, managed wallet and web hooks\r\n- aome alice/faber/performance demo updates\r\n\r\nHowever multitenancy works and can be used, and all existing aca-py functionality is working.\r\n\r\nFYI @TimoGlastra \r\n",
    "head_branch": "agency-multitenant",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #873 from hyperledger/agency-multitenant\n\nAgency multitenant"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215055ac254a19ac294b8d",
    "number": 872,
    "body": "- Optional API key which can be included in the request header when dispatching webhooks. This can be done by providing --webhook-url as hashlinks [# separated], with the first part being the endpoint and the second being the API key.\r\n- The webhook_target dictionary key has been changed from target_url to (wallet_id, target_url), this is done to support multitenancy\r\n- When routing webhooks, wallet_id [context.profile.name] is used so that only targets for that wallet are dispatched\r\n- Multiple webhooks can now be configured by specifying multiple targets using --webhook-url CLI parameter.\r\nSigned-off-by: Shaanjot <Gill>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215056ac254a19ac294b8e",
    "number": 871,
    "body": "- Optional API key which can be included in the request header when dispatching webhooks. This can be done by providing --webhook-url as hashlinks [# separated], with the first part being the endpoint and the second being the API key.\r\n- The webhook_target dictionary key has been changed from target_url to (wallet_id, target_url), this is done to support multitenancy\r\n- When routing webhooks, wallet_id [context.profile.name] is used so that only targets for that wallet are dispatched\r\n- Multiple webhooks can now be configured by specifying multiple targets using --webhook-url CLI parameter.\r\nSigned-off-by: Shaanjot <Gill>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215056ac254a19ac294b8f",
    "number": 870,
    "body": "This feature is to allow author to send the transaction request to Endorser for signature and write to ledger.\r\nThis PR is related to a previous one #799 \r\n\r\nBelow are the related details :\r\n\r\n#736\r\n\r\nhttps://hackmd.io/5LzMhfsMQBevB5V2tKz4hA?view\r\n\r\n#836 \r\n\r\nIt contains changes in connection metadata, connection manager and routes. Also added handler and a new message type for sending role to another agent.\r\nA new module is added \"endorse_transaction\"",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #870 from HarshMultani-AyanWorks/master\n\nSign Transaction Protocol implementation - Related to#799"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215057ac254a19ac294b90",
    "number": 869,
    "body": "- Optional API key which can be included in the request header when dispatching webhooks. This can be done by providing --webhook-url as hashlinks [# separated], with the first part being the endpoint and the second being the API key.\r\n\r\n- The webhook_target dictionary key has been changed from target_url to (wallet_id, target_url), this is done to support multitenancy\r\n\r\n- When routing webhooks, wallet_id [context.profile.name] is used so that only targets for that wallet are dispatched\r\n\r\n- Multiple webhooks can now be configured by specifying multiple targets using --webhook-url CLI parameter.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215058ac254a19ac294b91",
    "number": 868,
    "body": "- Optional API key which can be included in the request header when dispatching webhooks. This can be done by providing --webhook-url as hashlinks [# separated], with the first part being the endpoint and the second being the API key. \r\n- The webhook_target dictionary key has been changed from target_url to (wallet_id, target_url), this is done to support multitenancy\r\n- When routing webhooks, wallet_id [context.profile.name] is used so that only targets for that wallet are dispatched\r\n- Multiple webhooks can now be configured by specifying multiple targets using --webhook-url CLI parameter.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215059ac254a19ac294b92",
    "number": 867,
    "body": "This should allow the Aries agent test harness back channel to associate the invitation with the connection.\r\n\r\n@nodlesh ",
    "head_branch": "conn-record-inv-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #867 from andrewwhitehead/conn-record-inv-id\n\nAdd OOB invitation_msg_id to connection record"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621505aac254a19ac294b93",
    "number": 866,
    "body": "These tweaks better support using docker-compatible container runtimes (i.e. podman, which is the default for RHEL based systems these days) for running tests by specifying an alternate runtime with the environment variable `CONTAINER_RUNTIME`. Additionally, I made changes as recommended by shellcheck.\r\n\r\nI believe these changes should be pretty benign but I don't have a reliable way to test that for all environments.",
    "head_branch": "fix/docker-tweaks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #866 from dbluhm/fix/docker-tweaks\n\nfix: minor tweaks to run scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621505bac254a19ac294b94",
    "number": 864,
    "body": "bugfix for mediation connection protocol integration.\r\n\r\n- `create_did_doc(...)` now stores routing keys as public keys objects instead of strings. when outbound transport consumes routing keys it requires a public key, not a string.\r\n- code duplication is reduced by use of a decorator to check mediation parameters\r\n- added mediation_record parameter to optimize decorator behavior\r\n- small documentation changes\r\n\r\nSigned-off-by: Adam Burdett <burdettadam@gmail.com>",
    "head_branch": "bug-fix/did_doc_pk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #864 from burdettadam/bug-fix/did_doc_pk\n\nstore routing keys as public keys in did."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621505cac254a19ac294b95",
    "number": 863,
    "body": "…unit test coverage for connection metadata.\r\n\r\nShort circuit doomed out-of-band create-invitation to raise HTTPBadRequest before creating the Invitation record.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "short-circuit-doomed-oob-create-invitation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #863 from sklump/short-circuit-doomed-oob-create-invitation\n\nAlso: underscores separate webhook topics and record types. Complete …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621505cac254a19ac294b96",
    "number": 862,
    "body": "Restore a `send_reply` where a `send` was erroneously added",
    "head_branch": "fix/connection-response-send-reply",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #862 from dbluhm/fix/connection-response-send-reply\n\nfix: connection response not being sent as \"reply\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621505dac254a19ac294b97",
    "number": 861,
    "body": "- sync with master\r\n- allow to set label on wallet creation (@esune)\r\n- allow to set key management mode on wallet creation\r\n- add admin api openapi response schemas\r\n- general cleanup / improvements\r\n- add multitenancy authorization header to openapi / swaggerui\r\n- add route protection for base and subwallets\r\n  - subwallets cannot call /multitenancy endpoints\r\n  - base wallet cannot call general workflow actions (issue-credential ....)\r\n- add wallet id to webhooks (x-wallet-id header) \r\n- move relay to session class. This makes it transport agnostic and doesn't require code on the transport layer\r\n\r\n@ianco ",
    "head_branch": "multitenancy-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #861 from animo/multitenancy-updates\n\n[Multitenancy] general updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621505eac254a19ac294b98",
    "number": 860,
    "body": "Checking was not very graceful originally, resulting in errors under the right circumstances. Added/modified tests to check those circumstances.",
    "head_branch": "fix/conn-req-handler-mediation-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #860 from dbluhm/fix/conn-req-handler-mediation-metadata\n\nfix: connection req handler mediation metadata when no record"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621505fac254a19ac294b99",
    "number": 859,
    "body": "… message\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "audit-didx-conn-states-manual-accept",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #859 from sklump/audit-didx-conn-states-manual-accept\n\nRFC23: responder connection state is completed upon sending completed…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215060ac254a19ac294b9a",
    "number": 858,
    "body": "This modification provides a much smoother transition period for the toolbox in supporting the up and coming 0.6.0 release of ACA-Py, as the toolbox does not yet support the new out of band protocol.",
    "head_branch": "feature/print-connections-invite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #858 from dbluhm/feature/print-connections-invite\n\nfeat: add argument for printing old connections style invites"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215061ac254a19ac294b9b",
    "number": 856,
    "body": "Note that the agent with the registered nym must still mark the DID public in its own wallet after the fact - the Steward cannot write there.",
    "head_branch": "accommodate-steward-register-ledger-nym",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #856 from sklump/accommodate-steward-register-ledger-nym\n\nAccommodate steward register ledger nym"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215062ac254a19ac294b9c",
    "number": 853,
    "body": "complete unit tests for mediate-connections as it stands, fix tiny bu…g on not-found route record\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "oob-create-invitation-handshake-didexchange-proto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #853 from sklump/oob-create-invitation-handshake-didexchange-proto\n\nfix handshake protocol: it's didexchange/v1.0, not out-of-band/v1.0/invitation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215063ac254a19ac294b9d",
    "number": 852,
    "body": "Add admin api for retrieving and setting connection metadata. I found this to be handy in my use of metadata.",
    "head_branch": "feature/conn-metadata-admin-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #852 from dbluhm/feature/conn-metadata-admin-api\n\nConnection metadata admin api"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215064ac254a19ac294b9e",
    "number": 851,
    "body": "This PR adds the ability to assign metadata to the connection record created during invitation creation for both the connections and OOB protocols. The motivation for this change is to enable assignment of permissions/groups when creating a new invite (on both the CLI on startup and later) to support the toolbox plugin use case.",
    "head_branch": "feature/assign-metadata-to-invite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #851 from dbluhm/feature/assign-metadata-to-invite\n\nSet connection metadata on invite creation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215064ac254a19ac294b9f",
    "number": 850,
    "body": "This pr updates the connection protocol to support new mediation features. \r\nchanges:\r\n-  added command line arguments `auto_send_keylist_update_in_requests`, `auto_send_keylist_update_in_create_invitation` to allow keylist updates to be sent to mediator when appropriate.\r\n- added code to create_did_doc to allow routing keys to be looked up from `mediation_id` that was passed as a parameter.\r\n- added mediation_id to connection admin API where appropriate\r\n- added `metadata_get` to request handler to allow mediation_id lookup from originating offer. ",
    "head_branch": "feature/mediation-connections-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #850 from burdettadam/feature/mediation-connections-integration\n\nFeature/mediation connections integration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215065ac254a19ac294ba0",
    "number": 849,
    "body": "Verifiers, provers choose credentials and vet presentations deterministically as per RFC 441.",
    "head_branch": "rfc-441-compliance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #849 from sklump/rfc-441-compliance\n\nRfc 441 compliance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215066ac254a19ac294ba1",
    "number": 848,
    "body": "",
    "head_branch": "unit-test-more-backfill",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #848 from sklump/unit-test-more-backfill\n\nUnit test more backfill"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215067ac254a19ac294ba2",
    "number": 846,
    "body": "",
    "head_branch": "agency-multitenant",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #846 from ianco/agency-multitenant\n\n[multitenant] Add meaningful tag to faber cred def"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215068ac254a19ac294ba3",
    "number": 845,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #845 from ianco/master\n\nAdd meaningful tag to faber cred def"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215069ac254a19ac294ba4",
    "number": 843,
    "body": "Sync updates from master branch\r\n",
    "head_branch": "agency-multitenant",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #843 from ianco/agency-multitenant\n\nAgency multitenant"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621506aac254a19ac294ba5",
    "number": 841,
    "body": "See https://github.com/hyperledger/aries-cloudagent-python/blob/master/demo/AliceGetsAPhone.md\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #841 from ianco/master\n\nFix Faber demo to work with mobile PWD demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621506bac254a19ac294ba6",
    "number": 840,
    "body": "Took me a while, but the profile features are now fully integrated with the multitenancy features\r\n\r\nresource management is not implemented yet. This means wallets will only get opened but not closed after a while/ if there are open too many.\r\n\r\n@ianco ",
    "head_branch": "multitenant/profile-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #840 from animo/multitenant/profile-integration\n\n[Multitenancy] Profile integration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621506cac254a19ac294ba7",
    "number": 839,
    "body": "…ion from proposal in pres ex rec\r\n\r\nAs wip-abramson noticed, send-bound took a whole required proof request in the web request, and then the processing ignored it and built a proof req from the proposal in question anyway, as the 'bound' API call name suggests.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "present-proof-request-per-proposal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #839 from sklump/present-proof-request-per-proposal\n\nsend-bound-request: do not insist on unused request, identify connect…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621506cac254a19ac294ba8",
    "number": 838,
    "body": "",
    "head_branch": "unit-test-backfill",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #838 from sklump/unit-test-backfill\n\nUnit test backfill"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621506dac254a19ac294ba9",
    "number": 837,
    "body": "For the sake of completeness, here is a small addition of `metadata_delete` and `metadata_get_all` methods for connection record custom metadata.",
    "head_branch": "feature/connection-record-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #837 from dbluhm/feature/connection-record-metadata\n\nfeat(conn_record): add metadata delete, get all methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621506eac254a19ac294baa",
    "number": 836,
    "body": "After some brief discussion with @andrewwhitehead and @ianco on rocket chat about a need to be able to track info not strictly related to the connection protocol but still associated with the connection, I threw this together as a quick proof of concept. I get the feeling there might be a better optimized way to do this or other more elegant solutions but figured I'd get the conversation started with the obvious/simple choice.",
    "head_branch": "feature/connection-record-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #836 from dbluhm/feature/connection-record-metadata\n\nfeat(conn_record): add arbitrary metadata key-value storage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621506fac254a19ac294bab",
    "number": 835,
    "body": "Quick correction for type hints found in `MediationRecord`. `InjectionContext` was still being used instead of `ProfileSession`. As the method signature did not technically change, tests were still passing but to avoid confusion, I figured it was a good idea to fix that.",
    "head_branch": "fix/coordinate-mediation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #835 from dbluhm/fix/coordinate-mediation\n\nfix(mediation): correct incorrect type hints in record"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215070ac254a19ac294bac",
    "number": 834,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "update-acme-demo-for-revocation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #834 from sklump/update-acme-demo-for-revocation\n\nupdate Acme for revocation refactoring circa PR 710"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215071ac254a19ac294bad",
    "number": 833,
    "body": "This PR adds support for RFC 0211's coordinate-mediation protocol. This protocol is intended to eventually replace the preliminary `routing` protocol currently supported by ACA-Py and several mobile agents (as far as I know?). This PR does not remove the routing protocol in the hopes of easing the transition to the newer protocol.\r\n\r\nIt is notable that this PR **does not** modify the connection protocol and therefore this PR does not enable ACA-Py to act as a \"client\" in a mediator relationship; this was done with the intention of reducing the impact of this PR on other protocols and reducing the change set. @burdettadam is already working on the necessary changes to enable this functionality and we should hopefully have a follow up PR for this soon.\r\n\r\nOpen to feedback and recommendations.",
    "head_branch": "feature/coordinate-mediation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #833 from dbluhm/feature/coordinate-mediation\n\nRFC 0211 Coordinate Mediation Protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215072ac254a19ac294bae",
    "number": 831,
    "body": "- Add wallet-type to alice, faber, performance agents\r\n- Enable basic logger for execution errors\r\n- Check revocation option and tails-server-base option are consistent in performance demo\r\n- In the performance demo, fetch the credential definition on alice's side before starting the credential exchange to reduce the initial delay (more accurate numbers)",
    "head_branch": "agent-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #831 from andrewwhitehead/agent-fixes\n\nAdd wallet type to agent runners, other fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215073ac254a19ac294baf",
    "number": 830,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "invitation-url-in-invitation-record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #830 from sklump/invitation-url-in-invitation-record\n\ninvitation url in invitation record allows QR code inclusion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215074ac254a19ac294bb0",
    "number": 829,
    "body": "Implement distinct upload/download base URL for tails server in https://github.com/hyperledger/aries-cloudagent-python/pull/807; default upload to base.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "distinct-upload-tails-file-path",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #829 from sklump/distinct-upload-tails-file-path\n\nallow for distinct upload and download tails server base URLs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215075ac254a19ac294bb1",
    "number": 827,
    "body": "- Add `find_all_records`, `delete_all_records` to `BaseStorage` interface for both convenience and optimization under Askar backend\r\n- Move `search_records` to `BaseStorageSearch` interface, provided at profile level\r\n- Fixes for session usage in `credential_definition`, `schema` routes\r\n",
    "head_branch": "fetch-remove-all",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #827 from andrewwhitehead/fetch-remove-all\n\nStorage search API updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215075ac254a19ac294bb2",
    "number": 826,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nVersion number for master branch (next version in development)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #826 from ianco/master\n\nUpdate version number to 0.6.0-pre for next release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215076ac254a19ac294bb3",
    "number": 825,
    "body": "This makes `python -m aries_cloudagent` equivalent to running `aca-py`.",
    "head_branch": "add-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #825 from andrewwhitehead/add-main\n\nAdd __main__ to package"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215077ac254a19ac294bb4",
    "number": 824,
    "body": "",
    "head_branch": "ping-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #824 from andrewwhitehead/ping-fix\n\nUpdate routes and tests for action menu, basicmessage, trustping"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215078ac254a19ac294bb5",
    "number": 823,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #823 from ianco/master\n\nAdd AATH instructions to DevReadMe"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215079ac254a19ac294bb6",
    "number": 822,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "demo-faber-handle-issuer-cred-rev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #822 from sklump/demo-faber-handle-issuer-cred-rev\n\nhandle issuer-cred-rev webhook at faber in demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621507aac254a19ac294bb7",
    "number": 821,
    "body": "**Problem:**\r\n- I tested aca-py scaleout: two multitenancy aca-py servers (A and B) share a postgres wallet (storage).\r\n- I found that when server A creates Alice and server B receives inbound message for Alice, an error occurs.\r\n- The problem was that server B was trying to get Alice's wallet without opening the wallet.\r\n\r\nThis PR fixes the problem.\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "fix-inbound-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #821 from baegjae/fix-inbound-error\n\n[multitenancy] Fix wallet error when getting wallet at inbound message handler"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621507bac254a19ac294bb8",
    "number": 820,
    "body": "Update CredentialManager, InboundTransportManager, InboundSession to accept a Profile instance. Route outbound messages with a Profile rather than a context.\r\n\r\nGeneral refactoring: combine InjectorError and ProviderError into InjectionError.",
    "head_branch": "profiles-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #820 from andrewwhitehead/profiles-3\n\nProfiles follow-up"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621507bac254a19ac294bb9",
    "number": 816,
    "body": "Open API specification does not currently validate correctly and causes openapi generator to crash or produce invalid code.\r\n\r\nA PR was created to fix related issues with aiohttp-apispec: https://github.com/maximdanilchenko/aiohttp-apispec/pull/104",
    "head_branch": "openapi-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #816 from rd-dlab/openapi-validation\n\nfix Openapi validation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621507cac254a19ac294bba",
    "number": 815,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "proof-req-comment-through-prover",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #815 from sklump/proof-req-comment-through-prover\n\npropagate pres req message, including comment, through prover"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621507dac254a19ac294bbb",
    "number": 814,
    "body": "Update for the multitenancy branch.\r\n\r\n- add inbound message relay (not finished, but working)\r\n- also supports relay for new didexchange / oob features\r\n- fixed alice/faber demo\r\n\r\nTwo tests are failing because of changes to the responder. Andrew made similar changes to his profile PR, so I’ll resolve those once that branch is merged\r\n\r\n@ianco",
    "head_branch": "feature/multitenant-inbound-message-relay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #814 from animo/feature/multitenant-inbound-message-relay\n\n[Multitenancy] inbound message relay"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621507eac254a19ac294bbc",
    "number": 812,
    "body": "This PR adds a `Profile` base class which represents an identity and service provider. This and the `ProfileManager` base class replace the wallet management methods of `BaseWallet`, which is reduced to only key and DID management operations. A profile has an `InjectionContext` and can inject certain base classes, but in order to inject implementations of `BaseLedger`, `BaseStorage`, or `BaseWallet` for instance, a `ProfileSession` must first be created using the `session` or `transaction` methods. This is to help enable support for the Askar backend.\r\n\r\nThe `RequestContext` passed to message handlers no longer inherits from `InjectionContext`, but has a `profile` property and convenience methods for creating a session or injecting base class implementations. Handler tests are updated to use the new `test_context` method.\r\n\r\nSimilarly, an `AdminRequestContext` class is added to provide a similar interface for admin route handlers. This is moved from `request.app[\"request_context\"]` to `request[\"context\"]` allowing the profile and context to be adjusted on a per-request basis (which would be relevant for multi-tenancy).\r\n\r\nOther changes:\r\n\r\n- `BasicStorage` and `BasicWallet` are renamed to `InMemoryStorage` and `InMemoryWallet`.\r\n- Indy-SDK support code is moved into the `indy` package and renamed (`Base -> Indy`, `Indy -> IndySdk`).\r\n- `Injector.inject` and `Provider.provide` are no longer async methods.\r\n- The wallet provider, storage provider, and ledger provider classes are removed (functionality moved to profile managers).\r\n- It is no longer possible to select the `BaseStorage` implementation independent of the wallet type.\r\n- The `BaseLedger` implementation is managed directly by the profile implementation (`IndySdkProfile` for now) - base class to be renamed to `IndyLedger`.\r\n- The provision command should fail if an existing wallet is found, unless `--recreate-wallet` is passed.\r\n- The start command will not create a new wallet unless `--auto-provision` is passed.\r\n- The `auto-remove` property of a wallet previously served double duty, to remove an existing wallet on open and to remove the current wallet on close. An `auto_recreate` property is added to determine the behaviour on open.\r\n",
    "head_branch": "profiles",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #812 from hyperledger/profiles\n\nAdd Profile, ProfileSession abstractions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621507fac254a19ac294bbd",
    "number": 811,
    "body": "This PR allows Visual Studio Code ptvsd to attach to the docker running pytest from the run_tests script. The `--debug` flag can now be used with run_tests, for example.\r\n```bash\r\n./scripts/run_tests --debug\r\n```\r\nThe flag and any other arguments are then passed into the docker container directly to pytest, allowing calls like.\r\n```bash\r\n./scripts/run_tests --debug aries_cloudagent/protocols/connections\r\n```",
    "head_branch": "feature/ptvsd-pytest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #811 from burdettadam/feature/ptvsd-pytest\n\nptvsd debugger for pytest"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215080ac254a19ac294bbe",
    "number": 810,
    "body": "",
    "head_branch": "didexchange-impl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #810 from sklump/didexchange-impl\n\nDidexchange impl"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215081ac254a19ac294bbf",
    "number": 809,
    "body": "In multitenancy, when registering nym, the `wallet_name` parameter is optionally used to register the DID of wallet_name's wallet.\r\nThis PR fixes the error cases below.\r\n\r\n1. Fix an error when getting `wallet_name`'s wallet while the wallet was not loaded\r\n(Note that on demand wallet loading was applied in https://github.com/hyperledger/aries-cloudagent-python/pull/779)\r\n2. Handle an exception when given `wallet_name` is not exist in storage\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "fix-register-nym",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #809 from baegjae/fix-register-nym\n\n[multitenancy] Fix error when registering nym"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66215082ac254a19ac294bc0",
    "number": 808,
    "body": "Removed sending and submitting rev_reg definition after calling registry_record.generate_registry. This duplicates activity also called inside generate_registry and creates additional ledger transactions. \r\nAlso removed the pending_registry_record, which seems to duplicate the already existing registry_record seemingly without adding any value. \r\n",
    "head_branch": "bug-double-regdef-creation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215082ac254a19ac294bc1",
    "number": 807,
    "body": "Added support for having a different upload path than download path for the public tails file. This supports the case where the upload path is a restricted, internal route to a central file distribution server and the download path is a public interface for a static file download. In our case using dockers, the upload path is an internal docker-resolved path and the public path is the controller application that links to the cloud-agent application.",
    "head_branch": "feature-tails-uploadurl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215084ac254a19ac294bc2",
    "number": 805,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215084ac254a19ac294bc3",
    "number": 803,
    "body": "This PR adds a shared ledger pool that can be reused by wallets. \r\n\r\nIn the current multitenancy branch all wallets created their own genesis transactions and created their own connection to the ledger even though most will use the same connection.\r\n\r\nThis makes use of the cached provider to create an unique pool per pool_name\r\n\r\n@ianco This resolves the problems with the alice/faber demo where faber couldn't start. Both wallets were managing the same pool in different ledger instances which gave conflicts",
    "head_branch": "feature/multi-wallet-ledger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #803 from animo/feature/multi-wallet-ledger\n\n[Multitenancy] shared pool for wallets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215085ac254a19ac294bc4",
    "number": 802,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "pres-ex-list-creds-response-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #802 from sklump/pres-ex-list-creds-response-schema\n\nresults template for present-proof list-creds op by pres req"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215086ac254a19ac294bc5",
    "number": 801,
    "body": "Merge indy reorg changes and catch up with master\r\n\r\n@ianco ",
    "head_branch": "indy-reorg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #801 from animo/indy-reorg\n\n[Multitenancy] indy reorg and catch up with master"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215087ac254a19ac294bc6",
    "number": 800,
    "body": "- Removes unused methods, simplifies API around storage record search\r\n- Avoid having a constructor in an interface class (BaseStorageRecordSearch)",
    "head_branch": "slim-storage-search",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #800 from andrewwhitehead/slim-storage-search\n\nSimplify storage record search API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215088ac254a19ac294bc7",
    "number": 799,
    "body": "This is a WIP pull request which includes following changes related to the \"Sign Transaction\" Protocol to be implemented.\r\nBelow are the related details : \r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/issues/736\r\n\r\nhttps://hackmd.io/5LzMhfsMQBevB5V2tKz4hA?view\r\n\r\nIt contains changes in connection record, connection related classes and new module is added \"endorse_transaction\"",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215089ac254a19ac294bc8",
    "number": 798,
    "body": "Add support for multitenance alice/faber demo\r\n",
    "head_branch": "agency-multitenant",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #798 from ianco/agency-multitenant\n\nAgency multitenant - add multitenancy support to alice/faber"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621508aac254a19ac294bc9",
    "number": 797,
    "body": "- Move current issuer, holder, verifier support under indy subpackage, renaming Base* to Indy*\r\n- Update test package dependencies\r\n- Add support for `askar`, `indy_credx`, `indy_vdr` test tags and automatic test skipping\r\n",
    "head_branch": "indy-reorg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #797 from andrewwhitehead/indy-reorg\n\nIndy reorganization"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621508bac254a19ac294bca",
    "number": 796,
    "body": "This adds the initial multitenancy admin api (+ some more). It is based on a combination of the current multitenancy branch and the alternate implementation by nick.\r\n\r\nIt includes:\r\n- `--multitenant` parameter to enable handling of subwallets (checks for `Authorization` header)\r\n- `--multitenant-admin` parameter to enable the `/multitenancy` plugin with routes\r\n- `--jwt-secret` parameter which expects a secret to be used for jwt signing / verifying\r\n- create, get list, delete wallet endpoints. Code is structured to support `unmanaged` wallets, but currently it only works with `managed` wallets\r\n- Separate context per  request, this was global first (set on `app` instead of `request`). I've also updated all `test_routes.py` to use the request context instead of the app context. This is why the PR became so large, but this is also why a lot of tests are failing in the current multitenancy branch.\r\n\r\n\r\nI will add tests for the admin routes later, as the routes still need a bit of ironing out and the PR is already quite large. There are no restrictions yet (subwallets can call multitenancy admin api, base wallet can call normal operations).\r\n\r\n---\r\nTo test it out start an ACA-Py instance with the 3 new parameters (`--multitenant --multitenant-admin --jwt-secret very_secret_secret`) and call `POST /multitenancy/wallet`. You'll get back a json object with `token`. If you now set that token as header (`Authorization: Bearer <token>`) all data will be stored in the corresponding subwallet (calling `create-invitation` without Authorization header and then calling get `connections`  with authorization header will return no connections for example. Removing the header will) .",
    "head_branch": "feature/multitenancy-api-plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #796 from animo/feature/multitenancy-api-plugin\n\nmultitenancy admin api"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621508cac254a19ac294bcb",
    "number": 795,
    "body": null,
    "head_branch": "missing-indy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #795 from swcurran/missing-indy\n\nAdd instruction about missing library in bare-metal install; update agent diagram"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621508dac254a19ac294bcc",
    "number": 793,
    "body": "",
    "head_branch": "agency-multitenant",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #793 from ianco/agency-multitenant\n\nAgency multitenant catch up to master branch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621508dac254a19ac294bcd",
    "number": 792,
    "body": "",
    "head_branch": "multitenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #792 from ianco/multitenancy\n\nMultitenancy catch up to latest in master branch"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621508eac254a19ac294bce",
    "number": 791,
    "body": "Description:\r\n- This PR improves the query performance when searching wallet_record.\r\n- Previously, only `post_filter` was used to search for the wallet_record by wallet_name.\r\n- However, this method included the overhead of searching all wallet_records, because `tag_filter` was not used.\r\n- This PR actively uses `tag_filter` to search for the wallet_record.\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "fast-query-wallet-record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #791 from baegjae/fast-query-wallet-record\n\n[multitenancy] Improve query performance when searching wallet_record"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621508fac254a19ac294bcf",
    "number": 790,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "write-conn-rec-enums-as-old-values",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #790 from sklump/write-conn-rec-enums-as-old-values\n\nstore conn records with legacy values for their-role, state"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215090ac254a19ac294bd0",
    "number": 789,
    "body": "### Problem:\r\n- When a user creates a wallet, aca-py creates a temporal genesis file to pass the pool configuration to indy-sdk.\r\n- The problem is that the path of the temporal genesis file is shared.\r\n- When user A and user B create wallets at the same time, aca-py throws an ERROR `Empty genesis transaction file` and shutdown because user B creates an empty file while the user A reads the file.\r\n\r\n### Solution:\r\n- Each user creates a temporal genesis file with a unique path to avoid conflicts.\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "fix-ledger-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #789 from baegjae/fix-ledger-error\n\n[multitenancy] Fix ledger error when creating wallets at the same time"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66215091ac254a19ac294bd1",
    "number": 787,
    "body": "... along the way I renamed the record to ConnRecord to make sure I didn't miss any reference to examine. I hope you don't mind.",
    "head_branch": "adapt-conn-recs-for-rfc23",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #787 from sklump/adapt-conn-recs-for-rfc23\n\nAdapt conn recs for rfc23"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215092ac254a19ac294bd2",
    "number": 786,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "invitation-body-optional",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #786 from sklump/invitation-body-optional\n\nit is possible to post null body"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215093ac254a19ac294bd3",
    "number": 785,
    "body": "Updates PR #777",
    "head_branch": "openapi-json-order-paths",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #785 from sklump/openapi-json-order-paths\n\nOpenapi json order paths"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215093ac254a19ac294bd4",
    "number": 784,
    "body": "Minor adjustments to the Storage API to allow more efficient alternatives (for Askar support)",
    "head_branch": "storage-api-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #784 from andrewwhitehead/storage-api-1\n\nInitial storage API adjustments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215094ac254a19ac294bd5",
    "number": 782,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "cred-count-int-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #782 from sklump/cred-count-int-fix\n\nquery strings are always strings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215095ac254a19ac294bd6",
    "number": 781,
    "body": "**Changes**\r\n\r\n1. Merge the changes from the master to the branch\r\n2. Updated default routing endpoint with agent routing endpoint\r\n3. Create and store routing keys on mediate grant",
    "head_branch": "route-coordination",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215096ac254a19ac294bd7",
    "number": 779,
    "body": "### Description:\r\nThe webhook functionality is an essential feature, because the controller should receive messages from the aca-py server. This PR enables the functionality of webhooks, labels and image_url per wallet. Also, it contains useful other features. See updates and APIs changes below.\r\n\r\n### Terms:\r\n**Base wallet**: Wallet created when aca-py is launched.\r\n\r\n### Updates:\r\n1. `webhook_urls` works per wallet\r\n2. `label` works per wallet\r\n3. `image_url` works per wallet\r\n4. on demand wallet loading (reduce boot-up time)\r\n5. wallet mapping (`connection_id` or `key` -> `wallet_name`) is stored in the storage (preparation for scale-out aca-py)\r\n6. When registering nym, optional `wallet_name` is used to register the did of another wallet\r\n7. When creating local did, optional `seed` is used\r\n\r\n### APIs changes:\r\n- `POST /wallet` : Add new wallet (added `webhook_urls`, `label`, `image_url`) - public\r\n- `GET /wallet` : Get information of wallets with query - base wallet only\r\n- `PUT /wallet/{wallet_id}` : Update information of a wallet - base wallet only\r\n- `DELETE /wallet/{wallet_id}` : Remove a wallet - base wallet only\r\n- `GET /wallet/me` : Get information of my wallet - user wallet\r\n- `PUT /wallet/me` : Update information of my wallet - user wallet\r\n- `DELETE /wallet/me` : Remove my wallet - user wallet\r\n- `/wallet/did/create` : Create a local DID (added `seed`)\r\n- `/ledger/register-nym` : Send a NYM registration to the ledger (added `wallet_name` to register the did of another wallet)\r\n\r\n### Demo changes:\r\n- The `--multitenant` flag enables multitenancy support. With this, Faber and Alice will use a single Base agent. Please see the detailed flows in README-multitenant.md.\r\n\r\n### TODO\r\n- Test code updates (Several `send_webhook` functions included `context` as a parameter to make webhook works per wallet)\r\n\r\n",
    "head_branch": "features_per_wallet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #779 from baegjae/features_per_wallet\n\n[Multitenancy] functionality of webhooks, labels and image_url per wallet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66215097ac254a19ac294bd8",
    "number": 778,
    "body": "This pr contains extended admin API to allow connection invitations to be created with routing and recipient keys as well as service endpoints. This functionality is needed for establishing connections using a mediator. \r\nSigned-off-by: Adam Burdett <burdettadam@gmail.com>",
    "head_branch": "invitation-connection-target",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #778 from burdettadam/invitation-connection-target\n\nfeature/Connection Invitation with routingKeys"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215098ac254a19ac294bd9",
    "number": 777,
    "body": "Signed-off-by: john court <jcourt@anonyome.com>",
    "head_branch": "apichecking-742",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215099ac254a19ac294bda",
    "number": 775,
    "body": "- [x] Appends `/topic` in AdminAPI Webhooks example path\r\n",
    "head_branch": "fix_typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #775 from THCLab/fix_typo\n\nFix typo in webhook example path"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621509aac254a19ac294bdb",
    "number": 774,
    "body": "Updates in Connection Record and APIs to accomodate changes specific to below issue for Sign Transaction Protcol \r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/issues/736\r\n\r\nReference : \r\nhttps://hackmd.io/5LzMhfsMQBevB5V2tKz4hA?view\r\n\r\n@swcurran @andrewwhitehead @ianco please check ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621509aac254a19ac294bdc",
    "number": 772,
    "body": "Issue #769 :\r\n- marshmallow coerces to integer by default: make them strict in schemas\r\n- correct non-emptiness check in non-revocation interval\r\n- catch IndyError in ledger/indy.py and wrap as LedgerError so aca-py raises it in a problem report\r\n\r\nIssue #771 :\r\n- include role in cred-ex-record on free offer creation (issue-credential)\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "non-revocation-interval-detail",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #772 from sklump/non-revocation-interval-detail\n\naddress issues 769, 771"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621509bac254a19ac294bdd",
    "number": 770,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "multitenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #770 from ianco/multitenancy\n\nAdd multi tenant/wallet support to the alice/faber demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621509cac254a19ac294bde",
    "number": 768,
    "body": "Also add an example yaml arg file with multitenancy options\r\n",
    "head_branch": "multitenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #768 from ianco/multitenancy\n\nMultitenancy - update to latest from master"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621509dac254a19ac294bdf",
    "number": 767,
    "body": "Enhance `agent.py` to read env variable `WEBHOOK_TARGET`, which will be forwarded as a `--webhook-url` to aca-py.\r\n`run_demo` received a new option `--webhook-url`, which (together with env variable `WEBHOOK_URL`) will forward the URL to the agent.\r\n\r\nExample usage: `WEBHOOK_URL=host.docker.internal:8888 ./run_demo faber --webhook-url`",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #767 from bcersows/master\n\nEnable to set custom web hook in demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621509eac254a19ac294be0",
    "number": 766,
    "body": "in particular, on proposal receipt\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "cred-ex-record-deletion-audit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #766 from sklump/cred-ex-record-deletion-audit\n\nset auto-remove consistently in cred ex records"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621509fac254a19ac294be1",
    "number": 765,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "allow-interval-in-holder-check-cred-rev-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #765 from sklump/allow-interval-in-holder-check-cred-rev-status\n\nallow interval in holder cred rev check via ledger"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a0ac254a19ac294be2",
    "number": 764,
    "body": "also tweak non-revocation interval validation to correct 'from' data key",
    "head_branch": "nudge-floats-to-ints-in-non-revocation-intervals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #764 from sklump/nudge-floats-to-ints-in-non-revocation-intervals\n\nNudge floats to ints in non revocation intervals"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a1ac254a19ac294be3",
    "number": 763,
    "body": "If someone could figure out how to simulate keyboard interruption, I'd be much obliged\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #763 from sklump/unit-tests-commands\n\ncommands/start unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a2ac254a19ac294be4",
    "number": 762,
    "body": "Addresses https://github.com/hyperledger/aries-cloudagent-python/issues/756",
    "head_branch": "full-verkey-on-public-did-invi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #762 from sklump/full-verkey-on-public-did-invi\n\nFull verkey on public did invi"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a2ac254a19ac294be5",
    "number": 761,
    "body": "Update demo readme to suggest the correct flag to enable routing during the performance demo.\r\nHere is a link to the argument configuration, https://github.com/hyperledger/aries-cloudagent-python/blob/master/demo/runners/performance.py#L544",
    "head_branch": "update-demo/readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #761 from burdettadam/update-demo/readme\n\nUpdate demo readme …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a3ac254a19ac294be6",
    "number": 760,
    "body": "",
    "head_branch": "pre-release-0.5.6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #760 from andrewwhitehead/pre-release-0.5.6\n\nUpdate version to 0.5.6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a4ac254a19ac294be7",
    "number": 759,
    "body": "",
    "head_branch": "fix/black-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #759 from andrewwhitehead/fix/black-check\n\nSwitch to official black github action"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a5ac254a19ac294be8",
    "number": 758,
    "body": "Addresses an error that would cause the agent to try publishing its endpoint when set to work in read-only mode, causing it to crash and exit.\r\n\r\n@andrewwhitehead @sklump ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #758 from esune/master\n\nEnsure no attempt to publish endpoints is made when in read-only mode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a6ac254a19ac294be9",
    "number": 757,
    "body": "Update demo readme to suggest the correct flag to enable routing during the performance demo.\r\nHere is a link to the argument configuration, https://github.com/hyperledger/aries-cloudagent-python/blob/master/demo/runners/performance.py#L544",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a7ac254a19ac294bea",
    "number": 755,
    "body": "Current state of our multitenant agent: Started to introduce the wallet_record to manage wallets as proposed by @nrempel. Currently used for persisting the list of all wallets and recovering it at agent restart.",
    "head_branch": "multitenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #755 from LukasSMueller/multitenancy\n\nMultitenancy: Started to switch to wallet_record functionality"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662150a8ac254a19ac294beb",
    "number": 750,
    "body": "",
    "head_branch": "pre-release-0.5.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #750 from andrewwhitehead/pre-release-0.5.5\n\nUpdate version to 0.5.5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a8ac254a19ac294bec",
    "number": 749,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #749 from ianco/master\n\nUpdates to the mobile demo for PWD"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150a9ac254a19ac294bed",
    "number": 748,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nConvert config files to yaml format and force yaml format\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #748 from ianco/master\n\nConvert config files to yaml and force yaml formal for config files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150aaac254a19ac294bee",
    "number": 747,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "record-deletion-review",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #747 from sklump/record-deletion-review\n\nwire up cred-ex deletion; delete calls take HTTP DELETE methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150abac254a19ac294bef",
    "number": 746,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nChanges in the ConfigArgParse PR broke the provision task\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #746 from ianco/master\n\nMove endpoint to general group for provision task"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150acac254a19ac294bf0",
    "number": 744,
    "body": "",
    "head_branch": "feat/custom-prefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #744 from andrewwhitehead/feat/custom-prefix\n\nAllow custom message prefixes; simplify message type registration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150adac254a19ac294bf1",
    "number": 741,
    "body": "Update the AdminAPI doc with some development guidelines.\r\n",
    "head_branch": "admin_api_updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #741 from ianco/admin_api_updates\n\nAdmin api updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150aeac254a19ac294bf2",
    "number": 740,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "remove-leading-path-slash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #740 from sklump/remove-leading-path-slash\n\nremove leading slash from scripts in path: pwd already has it"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150afac254a19ac294bf3",
    "number": 739,
    "body": "Make \"--endpoint\" required.  Make genesis required (url, file or txns) unless \"--no-ledger\" is specified.  Make some \"indy\" wallet parameters required (name, key, etc) if indy wallet type is specified.\r\n\r\nAdded \"--arg-file <file>\" to allow params to be included in a file.  (File is just a list of args, not structured with yml etc)  Had to change some related logic - couldn't flag args as \"required\" so moved the check to the \"get_settings()\" method and threw \"ArgsParseError\"; display usage on any ArgsParseError.  (Had to fix a couple of unit tests that expected the \"old\" behaviour.\r\n\r\nRelated to issue #521 ",
    "head_branch": "args_updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #739 from ianco/args_updates\n\nAca-py startup arg updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150afac254a19ac294bf4",
    "number": 738,
    "body": "",
    "head_branch": "sort-swagger-defs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #738 from sklump/sort-swagger-defs\n\nSort swagger defs recursively for consistent output"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b0ac254a19ac294bf5",
    "number": 735,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "prover-check-rev-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #735 from sklump/prover-check-rev-status\n\ncheck ledger for rev reg delta evidence of cred revocation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b1ac254a19ac294bf6",
    "number": 734,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "finesse-revocation-method-for-consistency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #734 from sklump/finesse-revocation-method-for-consistency\n\nMove parameters for credential revocation to request body for automated test consistency"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b2ac254a19ac294bf7",
    "number": 732,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "cred-brief-attrs-are-raw",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #732 from sklump/cred-brief-attrs-are-raw\n\ncred brief attr values are raw; remove dead code from holder routes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b3ac254a19ac294bf8",
    "number": 728,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "predicate-value-type-i32",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #728 from sklump/predicate-value-type-i32\n\ntest harness p_value should always be int32"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b4ac254a19ac294bf9",
    "number": 727,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "codify-rev-reg-size",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #727 from sklump/codify-rev-reg-size\n\nCodify rev reg size"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b5ac254a19ac294bfa",
    "number": 726,
    "body": "…entials\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-cred-response-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #726 from sklump/fix-cred-response-schema\n\nholder credential queries return cred briefs, not full in-wallet cred…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b5ac254a19ac294bfb",
    "number": 725,
    "body": "Currently, The ACA-py allows for setting `--max-message-size` for inbound transport only. I think someone who uses the webhook feature might need to apply that config for the outbound transport max message limit also due to large messages will lead to `OutboundTransportError('Unexpected response status 413, caused by: Request Entity Too Large')`\r\n\r\nThis PR might be useful for some use cases which use the webhook feature and large messages.",
    "head_branch": "outbound-msg-limit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b6ac254a19ac294bfc",
    "number": 723,
    "body": "... for credential and proof exchange (just for the exchange records)\r\n",
    "head_branch": "exch_unecryp_tags2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #723 from ianco/exch_unecryp_tags2\n\nConfigure to allow use of unencrypted tags"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b7ac254a19ac294bfd",
    "number": 718,
    "body": "Address https://github.com/hyperledger/aries-cloudagent-python/issues/695. Issuer estimate of revocation status per revocable credential without proof (note that `GET /revocation/credential-record` takes cred-ex-id or rev-reg-id+cred-rev-id; 404 implies credential not revocable). Allow for revocation by cred ex id.\r\n\r\nMove revocation operations from `issue-credential/` to `revocation/`: they are not in RFC 36 that issue-credential/ banner advertises.",
    "head_branch": "retain-rev-info-post-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #718 from sklump/retain-rev-info-post-issue\n\nRetain rev info post issue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b8ac254a19ac294bfe",
    "number": 717,
    "body": "Put tails file up from admin API.\r\nSimplify issuer revocation registry state machine and related issue-credential logic.",
    "head_branch": "troubleshoot-tails-file-rollover",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #717 from sklump/troubleshoot-tails-file-rollover\n\nTroubleshoot tails file rollover"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150b9ac254a19ac294bff",
    "number": 716,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "connections-unit-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #716 from sklump/connections-unit-test\n\ncover code from PR#715"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150baac254a19ac294c00",
    "number": 715,
    "body": "While I was trying to manually go through the invite/request process via Swagger I used the `/connections/{conn_id}/accept-request` endpoint and added My URL endpoint which resulted in an error 500.\r\n\r\n```\r\nCreating connection response\r\n    connection_id: db0b89aa-df4c-4ec7-a99d-f11c1bcb18df\r\n\r\n2020-09-09 12:32:12,290 aries_cloudagent.core.dispatcher ERROR Handler error: connections_accept_request\r\nTraceback (most recent call last):\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aries_cloudagent/protocols/connections/v1_0/routes.py\", line 435, in connections_accept_request\r\n    response = await connection_mgr.create_response(connection, my_endpoint)\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aries_cloudagent/protocols/connections/v1_0/manager.py\", line 488, in create_response\r\n    my_info, connection.inbound_connection_id, my_endpoints\r\nUnboundLocalError: local variable 'my_endpoints' referenced before assignment\r\n2020-09-09 12:32:12,292 aries_cloudagent.admin.server ERROR Handler error with exception: local variable 'my_endpoints' referenced before assignment\r\n2020-09-09 12:32:12,292 aiohttp.server ERROR Error handling request\r\nTraceback (most recent call last):\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aiohttp/web_protocol.py\", line 418, in start\r\n    resp = await task\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aiohttp/web_app.py\", line 458, in _handle\r\n    resp = await handler(request)\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aiohttp/web_middlewares.py\", line 119, in impl\r\n    return await handler(request)\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aries_cloudagent/admin/server.py\", line 146, in ready_middleware\r\n    raise e\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aries_cloudagent/admin/server.py\", line 136, in ready_middleware\r\n    return await handler(request)\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aries_cloudagent/admin/server.py\", line 161, in debug_middleware\r\n    return await handler(request)\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aiohttp_apispec/middlewares.py\", line 45, in validation_middleware\r\n    return await handler(request)\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aries_cloudagent/admin/server.py\", line 253, in apply_limiter\r\n    return await task\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aries_cloudagent/protocols/connections/v1_0/routes.py\", line 435, in connections_accept_request\r\n    response = await connection_mgr.create_response(connection, my_endpoint)\r\n  File \"/home/laurencedejong/.venv/aries-cloudagent-python/lib/python3.6/site-packages/aries_cloudagent/protocols/connections/v1_0/manager.py\", line 488, in create_response\r\n    my_info, connection.inbound_connection_id, my_endpoints\r\nUnboundLocalError: local variable 'my_endpoints' referenced before assignment\r\n```",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #715 from ldej/patch-1\n\nInitialize my_endpoints with my_endpoint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150baac254a19ac294c01",
    "number": 713,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "default-old-didcomm-prefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #713 from sklump/default-old-didcomm-prefix\n\nemit old DIDComm prefix by default until Step 2 of RFC 348"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150bbac254a19ac294c02",
    "number": 712,
    "body": "I think the correct name is 'credential definition' , not 'schema'.",
    "head_branch": "fix/openapi-demo-description",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #712 from kg0r0/fix/openapi-demo-description\n\nFixed description of Aries OpenAPI Demo parameter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150bcac254a19ac294c03",
    "number": 710,
    "body": "I did everything mentioned in this workshop but the acme.py code show errors. I think the code is incomplete. I added some code and it worked. Error is related to revocation registry.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150bdac254a19ac294c04",
    "number": 709,
    "body": "",
    "head_branch": "push-tails-file-retries",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150beac254a19ac294c05",
    "number": 708,
    "body": "Set rev reg state manually",
    "head_branch": "admin-revocation-intervention",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #708 from sklump/admin-revocation-intervention\n\nAdmin revocation intervention"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150bfac254a19ac294c06",
    "number": 706,
    "body": "…ed attrs\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "support-names-on-find-non-unique-creds-per-proposal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #706 from sklump/support-names-on-find-non-unique-creds-per-proposal\n\nwhen >1 cred in wallet matching proof req, allow for names in request…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c0ac254a19ac294c07",
    "number": 705,
    "body": "Command line flag is `--emit-old-didcomm-prefix`, default to new, always accept either",
    "head_branch": "support-message-type-transition-phase-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #705 from sklump/support-message-type-transition-phase-2\n\nSupport message type transition phase 2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c1ac254a19ac294c08",
    "number": 703,
    "body": "Method doesn't need last parameter: it can take it from absence of timestamps\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "simplify-global-non-revoc-interval-tweak-at-verifier",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #703 from sklump/simplify-global-non-revoc-interval-tweak-at-verifier\n\nsimplify non-revoc tweak at verifier for non-revocable creds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c1ac254a19ac294c09",
    "number": 702,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "find-missing-tails-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #702 from sklump/find-missing-tails-file\n\ndo not assume as issuer that local tails file is in place"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c2ac254a19ac294c0a",
    "number": 700,
    "body": "…e-proof operation\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "send-problem-report-for-bad-cred-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #700 from sklump/send-problem-report-for-bad-cred-id\n\ncatch and raise PR for WalletNotFoundError on wrong cred_id for creat…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c3ac254a19ac294c0b",
    "number": 699,
    "body": "Also a ton of black tweaks arising from the new version.\r\n\r\nAddresses https://github.com/hyperledger/aries-cloudagent-python/issues/698",
    "head_branch": "remove-superfluous-non-revoc-intervals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #699 from sklump/remove-superfluous-non-revoc-intervals\n\nRemove superfluous non revoc intervals"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c4ac254a19ac294c0c",
    "number": 693,
    "body": "This is some boilerplate for the early DID Exchange work. Most of the effort has gone into teasing apart the notion of connections from the old protocol and supporting both the old protocol alongside the new did exchange protocol. There is no code worth sharing for this, but here are some notes about my reasoning:\r\n\r\n2 options that I can see:\r\n\r\n## Option 1\r\n\r\n- Subclass the [connection record model](https://github.com/hyperledger/aries-cloudagent-python/blob/master/aries_cloudagent/connections/models/connection_record.py) into the connection *protocol* as well as the did exchange protocol.\r\n- Move all connection protocol specific stuff out this record and into the relevant subclasses\r\n- Maintain shared stuff in the base (including everything that the framework relies on and assumes exists)\r\n- Anything in the connection protocol package will reference the subclass, everything else in the framework will reference the base. For instance this should reference something in core/connections instead of referencing the protocol package directly: https://github.com/hyperledger/aries-cloudagent-python/blob/master/aries_cloudagent/core/conductor.py#L23\r\n\r\nThis is a significant effort since the protocol package is referenced directly in many parts of the system.\r\n\r\nPros:\r\n-   Move to a broader notion of supporting multiple connection protocols that all share a common base\r\n\r\nCons:\r\n- Harder\r\n\r\n## Option 2\r\n\r\nAssume that, once we are past the migration from old connection protocol to new did exchange protocol, we only need to support a single notion of a connection. Supporting both types is temporary and we eventually flip a switch to support did exchange only and delete supporting code.\r\n\r\n",
    "head_branch": "did-exchange",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c5ac254a19ac294c0d",
    "number": 692,
    "body": "…ncellations\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "hush-admin-server-on-302",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #692 from sklump/hush-admin-server-on-302\n\ntone down disquieting error messages on routine redirects and task ca…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c6ac254a19ac294c0e",
    "number": 691,
    "body": "",
    "head_branch": "did-posture-include-ledger-non-public",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #691 from sklump/did-posture-include-ledger-non-public\n\nDid posture include ledger non public"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c7ac254a19ac294c0f",
    "number": 690,
    "body": "",
    "head_branch": "multitenancy-nrempel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c7ac254a19ac294c10",
    "number": 689,
    "body": "Among the options for '--wallet-storage-type' that were not previously supported, 'indy' was modified to 'default'.\r\n\r\nFor this problem, if you follow the description of the option and set it to 'indy', you will receive an error of 'Unknown wallet storage type'.\r\n\r\nThis is received from the indy library and only handles the 'default' option as a map in the WalletService of the indy library, and does not add the 'indy' option.\r\n\r\nSo I modified & reinforced the description of '--wallet-storage-type'.",
    "head_branch": "fix-start-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #689 from msjeong482/fix-start-options\n\nFIx a description of the agent option"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c8ac254a19ac294c11",
    "number": 688,
    "body": "Among the options for '--wallet-storage-type' that were not previously supported, 'indy' was modified to 'default'.\r\n\r\nFor this problem, if you follow the description of the option and set it to 'indy', you will receive an error of 'Unknown wallet storage type'.\r\n\r\nThis is received from the indy library and only handles the 'default' option as a map in the WalletService of the indy library, and does not add the 'indy' option.\r\n\r\nSo I modified & reinforced the description of '--wallet-storage-type'.",
    "head_branch": "fix-start-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150c9ac254a19ac294c12",
    "number": 687,
    "body": "",
    "head_branch": "json-ld-non-ascii",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #687 from sklump/json-ld-non-ascii\n\nJson ld non ascii"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150caac254a19ac294c13",
    "number": 685,
    "body": "",
    "head_branch": "pre-release-0.5.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #685 from andrewwhitehead/pre-release-0.5.4\n\nUpdate version to 0.5.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150cbac254a19ac294c14",
    "number": 683,
    "body": "Addresses discovered inefficiency in investigating https://github.com/hyperledger/aries-cloudagent-python/issues/679",
    "head_branch": "streamline-peri-cred-def-creation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #683 from sklump/streamline-peri-cred-def-creation\n\nStreamline peri cred def creation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150ccac254a19ac294c15",
    "number": 682,
    "body": "…, not replay of existing schema on ledger\r\n\r\nAddresses https://github.com/hyperledger/aries-cloudagent-python/issues/678.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "avoid-duplicating-schema-created-record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #682 from sklump/avoid-duplicating-schema-created-record\n\nonly add schema creation non-secrets record on actual schema creation…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150cdac254a19ac294c16",
    "number": 681,
    "body": "…g description text\r\n\r\nhttps://github.com/hyperledger/aries-cloudagent-python/issues/676\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "wallet-get-did-public-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #681 from sklump/wallet-get-did-public-fix\n\nmatch get-did-list to response \"public\" schema spec and fix misleadin…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150cdac254a19ac294c17",
    "number": 680,
    "body": "@msjeong482 originally caught this one and submitted https://github.com/hyperledger/aries-cloudagent-python/pull/677.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-non-revoc-none",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #680 from sklump/fix-non-revoc-none\n\nindy-libvcx sets non_revoked to None: accommodate"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150ceac254a19ac294c18",
    "number": 677,
    "body": "A runtime error was found while testing by linking between the VCX library in the indy-sdk repository and Aries cloudagent.\r\n\r\nThat is, the problem occurred because the value of 'non_revoked' field was not initialized to '{}' and the value was set to 'None'.\r\n\r\nThis occurs when the value of the 'non_revoked' field in the presentation record is loaded in the process of sending presentation (/present-proof/records/{pres_ex_id}/send-presentation REST API).\r\n\r\nWhen a presentation proof is requested using the VCX library, the 'non_revoked' field value in the record is set to the 'None' value.\r\nSo, you can see that the return value of the dict.get() function is set to 'None' instead of '{}'.\r\n\r\nSo, it works normally only when the part that checks the field is strengthened as follows.",
    "head_branch": "runtime-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150cfac254a19ac294c19",
    "number": 674,
    "body": "The swagger object for schema get indicates an object name of\r\n\"schema_json\" whilst the actual returned json in the body is \"schema\".\r\nChanging to have swagger object called \"schema\" to be consistent\r\nsince this is what existing clients must have been forcing to for it to\r\nwork.",
    "head_branch": "schemaget-openapi-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #674 from anonyome/schemaget-openapi-interface\n\nfixes#675 Align swagger schema get output."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d0ac254a19ac294c1a",
    "number": 673,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "resubmit-get-nym-role",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #673 from sklump/resubmit-get-nym-role\n\nresubmit get-nym-role (former PR#671)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d1ac254a19ac294c1b",
    "number": 672,
    "body": "",
    "head_branch": "fix-provisioning-on-read-only-ledger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #672 from sklump/fix-provisioning-on-read-only-ledger\n\nFix provisioning on read only ledger"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d2ac254a19ac294c1c",
    "number": 671,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "get-nym-role",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "get-nym-role from ledger for public DID\n\nSigned-off-by: sklump <srklump@hotmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d3ac254a19ac294c1d",
    "number": 669,
    "body": "… (to wallet+ledger) naming conventions for endpoint types\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "provision-profile-linked-domain-endpoints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #669 from sklump/provision-profile-linked-domain-endpoints\n\nprovisioning for profile endpoints, accommodate w3c (to API) and indy…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d4ac254a19ac294c1e",
    "number": 668,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-complete-conductor-shutdown-admin-server-on-fatal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #668 from sklump/unit-tests-complete-conductor-shutdown-admin-server-on-fatal\n\ncomplete unit tests notifying admin server on fatal error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d4ac254a19ac294c1f",
    "number": 667,
    "body": "Merge current master into Dominic Wörner's PR#589 (which became #634) endpoint-type work en route to merging back into master, unit test coverage",
    "head_branch": "endpoint-type-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #667 from sklump/endpoint-type-merge\n\nEndpoint type merge"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d5ac254a19ac294c20",
    "number": 666,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-more-transport",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #666 from sklump/unit-tests-more-transport\n\ncover more transport code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d6ac254a19ac294c21",
    "number": 664,
    "body": "This PR introduces the following changes:\r\n- Wallet id is passed in `context.settings` instead of set in provider itself\r\n- Some routes updated to use adjusted  local context\r\n- Ledger und storage provider handle multiple intances to align with their own stored wallet instance",
    "head_branch": "multitenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #664 from LukasSMueller/multitenancy\n\nMapping of inbound messages based on key in message body -> eliminatess need for individual path mappings"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662150d7ac254a19ac294c22",
    "number": 662,
    "body": "This is a proof of concept for a slightly different approach for managing multiple wallets.\r\n\r\n ",
    "head_branch": "multitenancy-alt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d8ac254a19ac294c23",
    "number": 661,
    "body": "",
    "head_branch": "unit-tests-conductor-notify-fatal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #661 from sklump/unit-tests-conductor-notify-fatal\n\nUnit tests conductor notify fatal"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d9ac254a19ac294c24",
    "number": 659,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #659 from ianco/master\n\nCheck for fatal ledger errors on dispatch task completion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150d9ac254a19ac294c25",
    "number": 658,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #658 from sklump/unit-tests-commands\n\ncover commands start and help with unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150daac254a19ac294c26",
    "number": 657,
    "body": "…ailable\r\n\r\nSigned-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #657 from ianco/master\n\nReadiness and liveliness endpoints return 503 unavailable when not av…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150dbac254a19ac294c27",
    "number": 656,
    "body": "…eivably OK\r\n\r\nI (used to) fundamentally disagree with this approach: I believe standards should be exclusive to ensure the tightest possible profile for interop, but I concede that embrace-and-extend is the zeitgeist of the day. Also, allowing extra fields and ignoring them by default puts us on a more error-resistant posture when it comes time to jockey multiple versions of a protocol.\r\n\r\nThis work allows extra fields (which aca-py discards) on protocols and messages without blowing up.\r\n\r\n~I'm also working on a less invasive approach which might not suffice in the end. I'd rather not see this one merged until I fully exhaust that possibility.~ _update: it's cute but no better; prefer this approach_\r\n\r\nFor these two reasons I will mark this PR as draft for the moment.\r\n_update_: I've made it ready to merge and am satisfied with the work if the group is.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "exclude-extra-schema-fields-take-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #656 from sklump/exclude-extra-schema-fields-take-2\n\nallow (but exclude) extra fields in protocols and messages where conc…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150dcac254a19ac294c28",
    "number": 654,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "perf_demo_routing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150ddac254a19ac294c29",
    "number": 653,
    "body": "Add \"--multitenant\" option to alice and faber scripts.\r\n\r\nSet aca-py options as appropriate for multitenancy and include the \"Wallet\" header in aca-py admin requests.\r\n\r\nNote this PR includes some catch-up with the aca-py master branch ...\r\n",
    "head_branch": "multitenancy_demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #653 from ianco/multitenancy_demo\n\nUpdates to demo script to support multitenancy option"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662150deac254a19ac294c2a",
    "number": 651,
    "body": "Signed-off-by: Lukas Mueller <Lukas.ML.Mueller@bmw.de>",
    "head_branch": "multitenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #651 from LukasSMueller/multitenancy\n\nAdded documentation for multitenancy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150dfac254a19ac294c2b",
    "number": 649,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "allow-null-protocol-comments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #649 from sklump/allow-null-protocol-comments\n\nallow null values for protocol comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e0ac254a19ac294c2c",
    "number": 648,
    "body": "Accommodate per-referent non-revocation interval missing \"from\" or \"to\"",
    "head_branch": "non-revoc-interval-finesse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #648 from sklump/non-revoc-interval-finesse\n\nNon revoc interval finesse"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e1ac254a19ac294c2d",
    "number": 645,
    "body": "Forward to latest master branch code\r\n",
    "head_branch": "multitenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #645 from ianco/multitenancy\n\nMultitenancy - catch up to aca-py master branch"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662150e1ac254a19ac294c2e",
    "number": 644,
    "body": "Update revocation demo to support old tails server environment variable for backwards compatibility and documentation alignment ",
    "head_branch": "update-revoc-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #644 from nrempel/update-revoc-demo\n\nUpdate revocation demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e2ac254a19ac294c2f",
    "number": 643,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nissue #638 \r\n\r\nSet live check to False when we get a fatal ledger error\r\n",
    "head_branch": "live_check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #643 from ianco/live_check\n\nSet liveliness status on fatal ledger error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e3ac254a19ac294c30",
    "number": 641,
    "body": "config subpackage, revocation evolution througout including tails/, \r\nplus code sync: python3-style super() where possible, wallet and ledger type (instance) property rather than class variable.",
    "head_branch": "unit-test-config-plus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #641 from sklump/unit-test-config-plus\n\nUnit test config plus"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e4ac254a19ac294c31",
    "number": 640,
    "body": "This PR adds `~please-ack` to the message in below three cases.\r\n- POST /connections/{conn_id}/accept-request\r\n- POST /issue-credential/records/{cred_ex_id}/issue\r\n- POST /present-proof​/records​/{pres_ex_id}​/send-presentation\r\n\r\n**Reason:**\r\n- I was testing the communication between faber (**aca-py**) and alice (**LibVCX**).\r\n- I encountered the alice not sending an acknowledgement to the faber, and as a result the faber's status remains `credential_issued` after issuing.\r\n- I checked the RFC of issue credential (https://github.com/hyperledger/aries-rfcs/tree/master/features/0036-issue-credential#issue-credential), and I found that `~please-ack` is needed if the issuer wants an acknowledgement.\r\n- The faber's status was changed `credential_acked` correctly after adding `~please-ack`.\r\n- I think `~please-ack` is needed to explicitly request an acknowledgement in above three cases.\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "add-please-ack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e5ac254a19ac294c32",
    "number": 639,
    "body": "This pull request converts to and from `did:key` style keys to conform with https://github.com/hyperledger/aries-rfcs/tree/master/features/0360-use-did-key",
    "head_branch": "did-key-prefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #639 from nrempel/did-key-prefix\n\nTransform to and from 'did:key' style keys in oob messages"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e6ac254a19ac294c33",
    "number": 637,
    "body": "Fixes #635",
    "head_branch": "hotfix-635",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #637 from nrempel/hotfix-635\n\nDon't crash on no public_did, add test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e7ac254a19ac294c34",
    "number": 636,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nAdded a sleep() when there are *only* retries in the queue.\r\n\r\nWas causing problems with aries-vcr on startup - when the request was sent to establish a self-connection, aca-py was hogging cpu and preventing the aries-vcr startup from continuing; aries-vcr was unable to respond to callbacks until aca-py retries had all failed and timed out.\r\n",
    "head_branch": "queue_retry_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #636 from ianco/queue_retry_fix\n\nAdd a pause when only retries are in the queue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e7ac254a19ac294c35",
    "number": 634,
    "body": "Signed-off-by: Woerner Dominic (RBCH/PJ-IOT) <dominic.woerner2@ch.bosch.com>",
    "head_branch": "feat-endpointType",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e8ac254a19ac294c36",
    "number": 633,
    "body": "Cover all messaging but jsonld, which is worth a separate PR",
    "head_branch": "unit-tests-messaging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #633 from sklump/unit-tests-messaging\n\nUnit tests messaging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150e9ac254a19ac294c37",
    "number": 632,
    "body": "Fixed two issues from merge with latest aca-py version creating problems in connection protocol\r\n- context not passed to `handle_message` in outbound manager\r\n- passed endpoint to `create_response` in connection manager not considered\r\n\r\n*note*: `run_docker` script changed to be able to build the container in environments behind a proxy",
    "head_branch": "multitenancy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #632 from LukasSMueller/multitenancy\n\nMulti-tenancy merge fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662150eaac254a19ac294c38",
    "number": 631,
    "body": "This adjustment allows the mediator forward function to work with endpoint-less connections, either via active connections with return route, or via the outbound queue. (Sending to an endpoint was already supported.)",
    "head_branch": "feature/mediate_forward",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #631 from Indicio-tech/feature/mediate_forward\n\nallow forwarded messages to use existing connections and the outbound queue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150ebac254a19ac294c39",
    "number": 630,
    "body": "",
    "head_branch": "pre-release-0.5.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #630 from andrewwhitehead/pre-release-0.5.3\n\nUpdate version to 0.5.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150ecac254a19ac294c3a",
    "number": 629,
    "body": "Addresses #626",
    "head_branch": "fix-non-indy-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #629 from nrempel/fix-non-indy-tests\n\nFix non indy tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150edac254a19ac294c3b",
    "number": 628,
    "body": "... and `utils/temp.py`, no longer in play for revocation and now dead code\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #628 from sklump/unit-tests-utils\n\nunit test coverage for utils, remove vestigial out-of-band context param"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150edac254a19ac294c3c",
    "number": 624,
    "body": "This PR enables ACA-Py to handle multiple wallets for issuing, holding and verifying. \r\n\r\n## Running ACA-Py as Multi Wallet Agent\r\n\r\nto start the agent in a multi wallet setup you need to pass the following flags during start:\r\n\r\n`-it http_custodial`\r\n\r\n`--plugin aries_cloudagent.wallet_handler`\r\n\r\n\r\n### Admin API\r\n\r\nTo be able to use the admin API with multiple wallets each request might need to use a different wallet. To prevent that one requests overwrites the wallet inside another request which is waiting for some async coroutine each request needs it's individual local context with a different wallet requested in the `DynamicProvider` for the wallet class. To accomplish that a middleware checks the authorisation in the header of the request and obtains (somehow - best with a plugable authorization module -) the corresponding wallet for that request. Than the global context is copied and the `requested_instance` of the wallet provider is set according to the authorization. The request can than be handled as for the one-wallet-agent.\r\n\r\n### Inbound Messages\r\n\r\nTo enable the agent to associate an inbound message with the correct wallet, for communication a new inbound path `default_endpoint/sha256(wallet_name+num(connections))` is created and passed to the agent which participates in that communication. If the agent receives a message he uses the endpoint to which the message is posted to check (by querying the `wallet_handler`) with what wallet the message can be received. In `create_session()` of the inbound manager the global context is copied, adapted for the correct wallet and passed to the session which handles the incoming message.\r\n\r\n### Outbound Messages\r\n\r\nOutbound messages are always associated to a specific connection. The `wallet_handler` keeps a mapping of connections to wallets so that it can return the correct wallet for any connection. Similar as for inbound messages the `outbound_manager` uses this functionallity to adapt a copied context with the correct wallet inside `perform_encode()` and pass it to the `queued` object. The following functionallity than picks up the correct wallet during injection and works as always.\r\n\r\n### Persistance\r\n\r\nIf postgres is used as storage everything is persistent (credentials, connection, etc). However to get the data back from a wallet stored in the storage after the agent is restarted it needs to be opened again with `POST /wallet` by providing the same information as for the initial creation. This is because currently the list of handled wallets is not persisted by the agent.\r\n\r\n## ToDo\r\n- [ ] Make inbound message handling use key in message instead of endpoint\r\n- [ ] Create larger test setup\r\n- [ ] Production ready authorization setup\r\n- [ ] Persist wallet  list",
    "head_branch": "pr_multitenency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #624 from LukasSMueller/pr_multitenency\n\nMultitenent Functionality"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662150eeac254a19ac294c3d",
    "number": 623,
    "body": "Require local jq install for ngrok detection\r\n\r\nRemove some bash-isms",
    "head_branch": "fix/docker-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #623 from andrewwhitehead/fix/docker-cache\n\nFix caching of demo agent image"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150efac254a19ac294c3e",
    "number": 622,
    "body": "",
    "head_branch": "black-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f0ac254a19ac294c3f",
    "number": 621,
    "body": "Adds a github workflow to format code (not just check)",
    "head_branch": "nrempel-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f1ac254a19ac294c40",
    "number": 620,
    "body": "Added additional debug logging and more details when posting, retrying and handling an exception for outbound messages.\r\n\r\nThis is useful when troubleshooting errors during webhook delivery.",
    "head_branch": "logging-details",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #620 from esune/logging-details\n\nAdditional logging when posting outbound message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f2ac254a19ac294c41",
    "number": 619,
    "body": "This pull request modifies the behaviour of managing revocation registries so that controllers need to track and manage less.\r\n\r\nWhen a credential definition is created, if revocation is enabled, the agent will create and publish revocation registry entry, definition, and tails file. It also publishes an additional set of registry and tails file to be swapped out when the current registry is full.\r\n\r\nWhen issuing credentials, the correct revocation information is used automatically and rotates registries when needed creating a new ready-to-swap one in the background.\r\n\r\nDemo has been updated.\r\n\r\nWith a tails [server](https://github.com/bcgov/indy-tails-server) running, run the demo like so:\r\n\r\n```\r\n# Linux\r\n./run_demo performance --revocation --tails-server-base-url http://172.17.0.1:6543\r\n# Mac/Windows\r\n./run_demo performance --revocation --tails-server-base-url http://host.docker.internal:6543\r\n```",
    "head_branch": "revocation-changes-backup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #619 from nrempel/revocation-changes-backup\n\nRevocation changes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f2ac254a19ac294c42",
    "number": 618,
    "body": "unit test coverage for out-of-band protocol",
    "head_branch": "oob-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #618 from sklump/oob-unit-tests\n\nOob unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f3ac254a19ac294c43",
    "number": 616,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "debug-request-middleware",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #616 from sklump/debug-request-middleware\n\nshow exactly in debug log what is about to hit the validation middleware"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f4ac254a19ac294c44",
    "number": 615,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nSee issue https://github.com/hyperledger/aries-cloudagent-python/issues/604\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #615 from ianco/master\n\nFix to continue outbound queue processing with retry messages in backlog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f5ac254a19ac294c45",
    "number": 614,
    "body": "",
    "head_branch": "openshift-pod-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #614 from sklump/openshift-pod-support\n\nOpenshift pod support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f6ac254a19ac294c46",
    "number": 613,
    "body": "This pull request modifies the behaviour of managing revocation registries so that controllers need to track and manage less.\r\n\r\nWhen a credential definition is created, if revocation is enabled, the agent will create and publish revocation registry entry, definition, and tails file. It also publishes an additional set of registry and tails file to be swapped out when the current registry is full.\r\n\r\nWhen issuing credentials, the correct revocation information is used automatically and rotates registries when needed creating a new ready-to-swap one in the background.\r\n\r\nDemo has been updated.\r\n\r\nWith a tails [server](https://github.com/bcgov/indy-tails-server) running, run the demo like so:\r\n\r\n```\r\n# Linux\r\n./run_demo performance --revocation --tails-server-base-url http://172.17.0.1:6543\r\n# Mac/Windows\r\n./run_demo performance --revocation --tails-server-base-url http://host.docker.internal:6543\r\n```",
    "head_branch": "revocation_changes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f7ac254a19ac294c47",
    "number": 612,
    "body": "I found that changes of the revocation API (https://github.com/hyperledger/aries-cloudagent-python/issues/428) have not yet been applied to the credential revocation documentation.\r\nChanged to the correct revocation API.\r\n\r\nSigned-off-by: Ethan Sung <baegjae@gmail.com>",
    "head_branch": "correct-revocation-document",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #612 from baegjae/correct-revocation-document\n\nCorrect revocation API in credential revocation documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f8ac254a19ac294c48",
    "number": 611,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "put-label-in-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #611 from sklump/put-label-in-status\n\nput agent label in status call"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f8ac254a19ac294c49",
    "number": 610,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-endpoint-provisioning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #610 from sklump/fix-endpoint-provisioning\n\nprovision did with arg endpoint, whether public or local-only"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150f9ac254a19ac294c4a",
    "number": 609,
    "body": "We work a lot with aca-py, but as most of our projects are written in Java I created a small library that lets you interact with aca-py directly from Java e.g.\r\n\r\n`acaPy.connectionsReceiveInvitation(invitation, alias);`\r\n\r\nThe first idea was to make a pull request in the controllers repo, but the client is less about writing examples, instead its tightly coupled to aca-py's rest interface and it's supposed to evolve with it (versioning and all). So I propose a structure similar to whats in indy-sdk/wrappers where the sdk also houses all language specific implementations as well. Together with the structure I also want to introduce the first client implementation for Java. The term _client_ can be interchanged with _controller_ as well.\r\n\r\nThe Java client is not feature complete, and not a 1:1 mapping, it's more about simplification and getting the most important use cases up and running. ",
    "head_branch": "aca-py-clients",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150faac254a19ac294c4b",
    "number": 608,
    "body": "…raphically\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "order-openapi-call-parms",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #608 from sklump/order-openapi-call-parms\n\norder swagger path parameters by location, required/optional, lexicog…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150fbac254a19ac294c4c",
    "number": 605,
    "body": "…default is much less chatty\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "remove-rev-reg-issuance-on-demand",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #605 from sklump/remove-rev-reg-issuance-on-demand\n\nremove the possibility of revocation registry issuance on demand: by …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150fcac254a19ac294c4d",
    "number": 602,
    "body": "Sort tags, annotate out-of-band headline. Unit tests for out-of-band routes.py.",
    "head_branch": "sort-swagger-tags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #602 from sklump/sort-swagger-tags\n\nSort swagger tags"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150fdac254a19ac294c4e",
    "number": 601,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-build-revo-states-in-multi-cred-proofs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #601 from sklump/fix-build-revo-states-in-multi-cred-proofs\n\nchoose each cred rev id by its proper cred in multi-cred proof"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150feac254a19ac294c4f",
    "number": 598,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #598 from ianco/master\n\nDefault settings for tracing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150ffac254a19ac294c50",
    "number": 597,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "trace-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #597 from ianco/trace-docs\n\nAdd some docs on using tracing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662150ffac254a19ac294c51",
    "number": 596,
    "body": "…ssue request body\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "issue-cred-lose-body-preview",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #596 from sklump/issue-cred-lose-body-preview\n\npreview from offer now contains attribute values - take them out of i…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215100ac254a19ac294c52",
    "number": 595,
    "body": "",
    "head_branch": "problem-report-review",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #595 from sklump/problem-report-review\n\nProblem report review"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215101ac254a19ac294c53",
    "number": 593,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215102ac254a19ac294c54",
    "number": 590,
    "body": "Addresses https://github.com/hyperledger/aries-cloudagent-python/issues/584",
    "head_branch": "fix-reliance-on-temp-tails-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #590 from sklump/fix-reliance-on-temp-tails-file\n\nFix reliance on temp tails file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215103ac254a19ac294c55",
    "number": 588,
    "body": "",
    "head_branch": "feat-endpoint-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215104ac254a19ac294c56",
    "number": 587,
    "body": "…tions within proof request for present-proof protocol\r\n\r\nTightens https://github.com/hyperledger/aries-cloudagent-python/pull/585 in validation.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "names-restrictions-attr-values-in-proof-req",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #587 from sklump/names-restrictions-attr-values-in-proof-req\n\nsupport names and attribute-value specifications in attribute restric…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215105ac254a19ac294c57",
    "number": 586,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "microseconds-precision",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #586 from sklump/microseconds-precision\n\nmicroseconds (in particular from vcx) can take more than 6 digits"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215105ac254a19ac294c58",
    "number": 585,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "attr_value_restrictions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215106ac254a19ac294c59",
    "number": 582,
    "body": "",
    "head_branch": "version-0.5.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #582 from andrewwhitehead/version-0.5.2\n\nUpdate version to 0.5.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215107ac254a19ac294c5a",
    "number": 579,
    "body": "Publish any pending revocations for rev reg id on any revocation with publish=True.\r\nRecover from revocation failures gracefully.\r\nAllow clearing of pending revocations by rev reg id (null/empty for all) and by cred rev ids (null/empty for all)\r\nAllow for granularity in publication of pending revocations by rev reg id (null/empty for all) and by cred rev ids (null/empty for all).\r\nDemo touch-ups to match.",
    "head_branch": "revocation-hotfixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #579 from sklump/revocation-hotfixes\n\nRevocation hotfixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215108ac254a19ac294c5b",
    "number": 577,
    "body": "",
    "head_branch": "problem-reports-for-issue-cred-internal-errors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #577 from sklump/problem-reports-for-issue-cred-internal-errors\n\nProblem reports for issue cred internal errors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215109ac254a19ac294c5c",
    "number": 576,
    "body": "This pull request adds support for step 1 of the out of band migration: https://github.com/hyperledger/aries-rfcs/blob/4afa0a941d1943f67116c9aa1529d0e073a0c426/features/0496-transition-to-oob/README.md",
    "head_branch": "did-exchange",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #576 from nrempel/did-exchange\n\nOut of band stage 1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621510aac254a19ac294c5d",
    "number": 574,
    "body": "",
    "head_branch": "update/sdk-1.15",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #574 from andrewwhitehead/update/sdk-1.15\n\nUpdate to 1.15-0 docker image"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621510bac254a19ac294c5e",
    "number": 573,
    "body": "Also accommodate get-schema by transaction number in messaging/schema/routes.py",
    "head_branch": "update-did-endpoint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #573 from sklump/update-did-endpoint\n\nUpdate did endpoint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621510cac254a19ac294c5f",
    "number": 572,
    "body": "Fixes #569. This should help with debugging especially when using k8 yaml files for deploying aca py. Previously, there was no easy way to discern between input argument errors and database errors.\r\n\r\nAlso improve documentation around `--wallet-storage-config` and `--wallet-storage-creds`",
    "head_branch": "check-storage-args",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #572 from msembinelli/check-storage-args\n\nCheck JSON format storage_config, storage_creds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621510cac254a19ac294c60",
    "number": 571,
    "body": "",
    "head_branch": "fix/cred-offer-missing-param",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #571 from andrewwhitehead/fix/cred-offer-missing-param\n\nFix missing parameter error when creating credential offer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621510dac254a19ac294c61",
    "number": 570,
    "body": "And show authorization options in swagger UI\r\nIncludes changes from PR #528 ",
    "head_branch": "feature/unprotected-swagger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #570 from andrewwhitehead/feature/unprotected-swagger\n\nAllow access to swagger UI when protected by API key"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621510eac254a19ac294c62",
    "number": 565,
    "body": null,
    "head_branch": "update-rtd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #565 from swcurran/update-rtd\n\nUpdate of RTD documents in preparation for the upcoming 0.5.2 release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621510fac254a19ac294c63",
    "number": 564,
    "body": "",
    "head_branch": "no-hopeless-offers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #564 from sklump/no-hopeless-offers\n\nNo hopeless offers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215110ac254a19ac294c64",
    "number": 563,
    "body": "",
    "head_branch": "predicate-preview-self-attested-attrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #563 from sklump/predicate-preview-self-attested-attrs\n\nPredicate preview self attested attrs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215111ac254a19ac294c65",
    "number": 562,
    "body": "",
    "head_branch": "cache-rev-reg-def",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #562 from sklump/cache-rev-reg-def\n\nCache rev reg def"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215112ac254a19ac294c66",
    "number": 561,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "ledger-ops-state-audit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #561 from sklump/ledger-ops-state-audit\n\nensure ledger is open for any submission to it"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215112ac254a19ac294c67",
    "number": 560,
    "body": "allows for creation of DIDs without having a public DID on the ledger\r\nSigned-off-by: Cam Parra <caeparra@gmail.com>",
    "head_branch": "PRO-1948",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215113ac254a19ac294c68",
    "number": 559,
    "body": "Also, ledger must be open on receiving presentation preview to check if revocation applies\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "provision-local-did",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #559 from sklump/provision-local-did\n\nallow provision of local-only DID in wallet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215114ac254a19ac294c69",
    "number": 558,
    "body": "For listing credentials and retrieving credentials by proof request referent.",
    "head_branch": "holder-search-pagination",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #558 from sklump/holder-search-pagination\n\nHolder search pagination"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215115ac254a19ac294c6a",
    "number": 555,
    "body": "…h same in issue-cred, present-proof\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "storage-error-finesse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #555 from sklump/storage-error-finesse\n\nanticipate indy errors in searches and raise StorageSearchError; catc…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215116ac254a19ac294c6b",
    "number": 554,
    "body": "…sage, trailing .)\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "err-traceback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #554 from sklump/err-traceback\n\nInclude tracebacks, finesse error roll-up message (class where no mes…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215117ac254a19ac294c6c",
    "number": 553,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-transport",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #553 from sklump/unit-tests-transport\n\nlow hanging fruit of transport test coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215118ac254a19ac294c6d",
    "number": 551,
    "body": "Hi, I'm a PM on the GitHub security team. This repository is eligible to try the new [GitHub Advanced Security code scanning](https://help.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/about-code-scanning) beta.\n\nCode scanning runs a static analysis tool called CodeQL which scans your code at build time to find any potential security issues. We've tuned the set of queries to be only the most severe, most precise issues. We'll show alerts in the security tab, and we'll show alerts for any net new vulnerabilities on pull requests as well. We've tried to make this super developer friendly, but we'd love your feedback as we work through the beta. \n\nIf you're interested in trying it out, you can merge this pull request to set up the Actions workflow. You can also get this set up yourself in any additional repositories in this organization by following these [instructions](https://help.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/enabling-code-scanning)",
    "head_branch": "codeql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #551 from jhutchings1/codeql\n\nAdd CodeQL security scanning"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215119ac254a19ac294c6e",
    "number": 550,
    "body": "Carrying on from https://github.com/hyperledger/aries-cloudagent-python/pull/549\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "demo-acme-offer-preview",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #550 from sklump/demo-acme-offer-preview\n\nadapt and repackage contribution from spsingh559"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215119ac254a19ac294c6f",
    "number": 549,
    "body": "In Issuing credential offer for Acme, cred_preview variable is missing and due to this acme agent will throw \" Acme | Error during POST /issue-credential/send-offer: 422, message='Unprocessable Entity', url=URL('http://192.168.65.3:8041/issue-credential/send-offer')\"\r\n\r\n![cred_preview_error](https://user-images.githubusercontent.com/20536576/84073573-c406d180-a9d9-11ea-94dd-45611c2e909a.png)\r\n\r\nSo to fix this issue, I have added the cred_preiew object and add that property in offer_request object.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621511aac254a19ac294c70",
    "number": 548,
    "body": "… with explicit inter-proto version dependence.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "standardize-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #548 from sklump/standardize-imports\n\nAlways import from aries-cloudagent relatively. Remove FIXME and live…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621511bac254a19ac294c71",
    "number": 547,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "mime-types-to-holder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #547 from sklump/mime-types-to-holder\n\nmove mime-types request into holder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621511cac254a19ac294c72",
    "number": 543,
    "body": "",
    "head_branch": "error-audit-protocols",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #543 from sklump/error-audit-protocols\n\nError audit protocols"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621511dac254a19ac294c73",
    "number": 542,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "defensive-close-ledger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #542 from sklump/defensive-close-ledger\n\nclear out close task on failure to close"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621511eac254a19ac294c74",
    "number": 541,
    "body": "Ian, please see if this helps?\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "defensive-close-ledger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #541 from sklump/defensive-close-ledger\n\ntry up to 3 times to close ledger, retain ref count on failure"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621511fac254a19ac294c75",
    "number": 540,
    "body": "This adds JSON-LD signing and verify, exposed through the administrative REST interface. Signing is done with keys in the wallet.\r\n\r\nWork funded by SICPA.",
    "head_branch": "feature/jsonldsign",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #540 from TelegramSam/feature/jsonldsign\n\nFeature/jsonldsign"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621511fac254a19ac294c76",
    "number": 539,
    "body": "…: server got itself in trouble\r\n\r\nStill to do: this exercise in much of protocols/**. In time.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "error-audit-omnibus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #539 from sklump/error-audit-omnibus\n\ncatch common exceptions in routes and raise web errors instead of 500…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215120ac254a19ac294c77",
    "number": 537,
    "body": "This adds JSO-LD support for signing and verifying credentials. Currently supported in the administrative REST api.\r\n\r\nCC: @victormartinezjurado ",
    "head_branch": "feature/jsonld",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215121ac254a19ac294c78",
    "number": 536,
    "body": "This PR adds endpoints to the administrative REST interface that allow for signing and verification of JSON-LD based credentials. Signing is performed with keys in the wallet.\r\n\r\nThis work was funded by SICPA.",
    "head_branch": "feature/jsonldadmin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215122ac254a19ac294c79",
    "number": 534,
    "body": "…tion exceptions in routes.\r\n\r\nThere are a bunch of these in issue-credential but I am waiting for the merge of https://github.com/hyperledger/aries-cloudagent-python/pull/531 before I fix those.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "error-audit-no-endpoint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #534 from sklump/error-audit-no-endpoint\n\ninclude root cause chain in error roll-up; integrate with deserializa…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215123ac254a19ac294c7a",
    "number": 533,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "error-audit-no-ledger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #533 from sklump/error-audit-no-ledger\n\nhumane error for no ledger, including via missing wallet-type"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215124ac254a19ac294c7b",
    "number": 531,
    "body": "I hope this doesn't blow anyone's use case up: aries offers always have previews (pure-indy offers don't - they're just a handshake to prove issuer's bona fides).",
    "head_branch": "revisit-issue-cred-vs-rfc-36",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #531 from sklump/revisit-issue-cred-vs-rfc-36\n\nRevisit issue cred vs rfc 36"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215125ac254a19ac294c7c",
    "number": 528,
    "body": "This is the proposed option number 2. It uses the websocket\r\nto expect a message with the admin api key before it is being\r\nused to transmit any other messages than 'ping'\r\n\r\nSigned-off-by: Matthias Binzer <matthias.binzer.ext@bosch.com>",
    "head_branch": "fix-427-opt2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215126ac254a19ac294c7d",
    "number": 527,
    "body": "… errors that truncate at carriage return\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "schema-errors-audit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #527 from sklump/schema-errors-audit\n\naudit errors in schema, revisit base error to accommodate aiohttp web…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215126ac254a19ac294c7e",
    "number": 526,
    "body": "Addresses https://github.com/hyperledger/aries-cloudagent-python/issues/524 and cousins throughout issue-credential protocol\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "nicer-error-on-issue-cred-wrong-cred-ex-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #526 from sklump/nicer-error-on-issue-cred-wrong-cred-ex-id\n\nrespond with 404 Not Found for bad cred ex id in issue-cred"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215127ac254a19ac294c7f",
    "number": 525,
    "body": "Please have a look. I think:\r\n* the public DID key rotation should hang off the ledger API - it's defensive design against an off-line agent trying to the rotate key pair for a DID that's public.  Ledgers need wallets but wallets don't need ledgers; the operation initializes at the wallet, updates the ledger, then returns to the wallet to apply the update, and it uses the same wallet operations as for local DID key pair rotation below.\r\n* the local DID key pair rotation should hang off the wallet because it only needs the wallet. There are two calls: start and apply; the `routes.py` calls one and then the other. The wallet needs to retain both calls to accommodate public DID key pair rotation as above.\r\n* the wallet master encryption key rotation is a provision operation. Could you look this over in particular? On some level I can't believe it's this simple.\r\n\r\nI'm open to the idea of renaming stuff in `routes.py` for ledger, wallet. I was toying with the idea of 'nym' instead of 'public-did' for symmetry, but we've used public-did everywhere else to refer to public DIDs, and properly the keys belong to the DID not the NYM.",
    "head_branch": "key-rotation-operations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #525 from sklump/key-rotation-operations\n\nKey rotation operations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215128ac254a19ac294c80",
    "number": 523,
    "body": "Addresses https://github.com/hyperledger/aries-cloudagent-python/issues/522\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "performance-demo-json-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #523 from sklump/performance-demo-json-fix\n\njson.dumps not json_dumps"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215129ac254a19ac294c81",
    "number": 516,
    "body": "…gger API\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "protocol-spec-refs-by-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #516 from sklump/protocol-spec-refs-by-version\n\nreferences to specs by protocol version, include ref doc links in swa…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621512aac254a19ac294c82",
    "number": 515,
    "body": "Just a minor bug I ran into, figured I may aswell push a fix",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621512bac254a19ac294c83",
    "number": 514,
    "body": "",
    "head_branch": "protocol-version-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621512cac254a19ac294c84",
    "number": 513,
    "body": "This change is based on the 2 proposals in #427 \r\n",
    "head_branch": "fix-427",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621512cac254a19ac294c85",
    "number": 511,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621512dac254a19ac294c86",
    "number": 510,
    "body": null,
    "head_branch": "zoom-link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #510 from swcurran/zoom-link\n\nFix zoom link to video"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621512eac254a19ac294c87",
    "number": 509,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-test-coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #509 from sklump/unit-test-coverage\n\ncoverage in connections, core, transport"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621512fac254a19ac294c88",
    "number": 507,
    "body": "Automatically detect ngrok endpoint for tails server\r\n\r\nNeed to pass in the name of the tails server docker network, e.g.:\r\n\r\n`TAILS_NETWORK=docker_tails-server ./run_demo faber --revocation`\r\n",
    "head_branch": "ngrok_endpoints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #507 from ianco/ngrok_endpoints\n\nNgrok endpoints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215130ac254a19ac294c89",
    "number": 504,
    "body": "…special stuff\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "post-process-api-registered-methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #504 from sklump/post-process-api-registered-methods\n\npost processing to fix up openapi descriptions for methods returning …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215131ac254a19ac294c8a",
    "number": 503,
    "body": "",
    "head_branch": "post-registration-openapi-hook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215131ac254a19ac294c8b",
    "number": 502,
    "body": "More formal implementation allows for any module to define free function `set_openapi_file_responses()` to set JSON in swagger (OpenAPI) for registered methods returning files. Admin server picks these up and executes them via plugin registry after initial aiohttp Web application setup.",
    "head_branch": "get-tails-file-response-type-annotation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215132ac254a19ac294c8c",
    "number": 501,
    "body": "Maximum try count for outbound messages was defined as hardcoded in manager. For any reason, it might be necessary to increase or decrease this parameter. \r\n\r\nThis value was set as 4 as a defult value in manager and set as a a parameter in config and changes has been made for using this value from settings.",
    "head_branch": "feature/max-outbound-retry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #501 from ecospend/feature/max-outbound-retry\n\nMaximum try count for outbound messages"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215133ac254a19ac294c8d",
    "number": 500,
    "body": "",
    "head_branch": "test/conn-less-cred",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #500 from andrewwhitehead/test/conn-less-cred\n\nAdmin endpoint for connectionless credential issuance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215134ac254a19ac294c8e",
    "number": 499,
    "body": "This PR updates the phone demo to use the new tails server available here: https://github.com/bcgov/von-tails-server",
    "head_branch": "demo-tails-server",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #499 from nrempel/demo-tails-server\n\nDemo tails server"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215135ac254a19ac294c8f",
    "number": 498,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "create-pres-req-needs-no-conn-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #498 from sklump/create-pres-req-needs-no-conn-id\n\ncreate-pres-req does not need connection: adjust body schema"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215136ac254a19ac294c90",
    "number": 497,
    "body": "…at all in config\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "accommodate-no-endpoints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #497 from sklump/accommodate-no-endpoints\n\ndo not crash on connection request/response creation if no endpoints …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215137ac254a19ac294c91",
    "number": 495,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "accommodate-no-additional-endpoints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #495 from sklump/accommodate-no-additional-endpoints\n\nadditional endpoints may be None"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215137ac254a19ac294c92",
    "number": 494,
    "body": "…of request bodies\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-pre-verify-logic-and-request-schemas",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #494 from sklump/fix-pre-verify-logic-and-request-schemas\n\nfix logic error in pre-verify, allow trace in issue-cred, present-pro…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215138ac254a19ac294c93",
    "number": 493,
    "body": "",
    "head_branch": "unit-tests-storage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #493 from sklump/unit-tests-storage\n\nUnit tests storage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215139ac254a19ac294c94",
    "number": 491,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "pre-verify-check-revoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #491 from sklump/pre-verify-check-revoc\n\ninstrument pre-verification to reject proof bypassing revocation check"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621513aac254a19ac294c95",
    "number": 490,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-deco",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #490 from sklump/unit-tests-deco\n\nunit test coverage for decorators: ignore sig as it is obsolescent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621513bac254a19ac294c96",
    "number": 487,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-ping",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #487 from sklump/unit-tests-ping\n\nunit test coverage for trust-ping protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621513cac254a19ac294c97",
    "number": 486,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-cred-def-routes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #486 from sklump/unit-tests-cred-def-routes\n\nunit tests for cred def routes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621513dac254a19ac294c98",
    "number": 485,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-pre-verify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #485 from sklump/unit-tests-pre-verify\n\nunit tests exercising pre-verify for tamper evidence"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621513eac254a19ac294c99",
    "number": 484,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "issue-cred-routes-preview-audit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #484 from sklump/issue-cred-routes-preview-audit\n\nremove dead code that allowed for defunct optionality of cred preview"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621513eac254a19ac294c9a",
    "number": 483,
    "body": "In particular, ensure Alice gets Faber's ack in demo operation\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "present-proof-verifier-ack-pres",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #483 from sklump/present-proof-verifier-ack-pres\n\nverifier specifies conn id in replying on proof verification"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621513fac254a19ac294c9b",
    "number": 482,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-holder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #482 from sklump/unit-tests-holder\n\nholder and routing unit test coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215140ac254a19ac294c9c",
    "number": 481,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "demo-strip-whitespace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #481 from sklump/demo-strip-whitespace\n\nstrip whitespace from demo input"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215141ac254a19ac294c9d",
    "number": 479,
    "body": "Update marshmallow and friends to current versions. Validate input via middleware. Some light refactoring of parameters (auto-accept for connections, public dids wallet searches).",
    "head_branch": "evergreen-server-marshmallow-universe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #479 from sklump/evergreen-server-marshmallow-universe\n\nEvergreen server marshmallow universe"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215142ac254a19ac294c9e",
    "number": 476,
    "body": null,
    "head_branch": "id_corrections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #476 from swcurran/id_corrections\n\nClarifications that the id is a cred_ex_id per community request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215143ac254a19ac294c9f",
    "number": 475,
    "body": "",
    "head_branch": "pre-release-0.5.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #475 from andrewwhitehead/pre-release-0.5.1\n\nUpdate version to 0.5.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215143ac254a19ac294ca0",
    "number": 474,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #474 from ianco/master\n\nReturn json rather than json-encoded string"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215144ac254a19ac294ca1",
    "number": 470,
    "body": "",
    "head_branch": "pre-release-0.5.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #470 from andrewwhitehead/pre-release-0.5.0\n\nUpdate version to 0.5.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215145ac254a19ac294ca2",
    "number": 469,
    "body": "Fixed #468 ",
    "head_branch": "fix/restore-cred-routes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #469 from andrewwhitehead/fix/restore-cred-routes\n\nRestore credential querying/removal routes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215146ac254a19ac294ca3",
    "number": 467,
    "body": "",
    "head_branch": "fix/remove-rev-param",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #467 from andrewwhitehead/fix/remove-rev-param\n\nRemove misleading/ignored request parameter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215147ac254a19ac294ca4",
    "number": 466,
    "body": "…@docs decorators. Low-hanging fruit for admin-server test coverage.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "swagger-param-schema-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215148ac254a19ac294ca5",
    "number": 465,
    "body": "",
    "head_branch": "black-check-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215148ac254a19ac294ca6",
    "number": 464,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #464 from swcurran/master\n\nCorrect format of the timestamp in the JSON"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215149ac254a19ac294ca7",
    "number": 463,
    "body": "",
    "head_branch": "fix/without-indy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #463 from andrewwhitehead/fix/without-indy\n\nContain references to indy package, IndyError class"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621514aac254a19ac294ca8",
    "number": 462,
    "body": "",
    "head_branch": "nrempel-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621514bac254a19ac294ca9",
    "number": 461,
    "body": "At present marshmallow aiohttp apispec does not enforce schema as @docs decorator specifies, but further research could complete the last mile.\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "list-rr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #461 from sklump/list-rr\n\nlist rev regs created; plumbing to tighten query parameters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621514cac254a19ac294caa",
    "number": 460,
    "body": "Fixes: run_docker was looking for `--timing` instead of `--debug`, run_demo did not allow you to override the host name with APPLICATION_URL.",
    "head_branch": "fix/script-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #460 from andrewwhitehead/fix/script-cleanup\n\nScript formatting cleanups and fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621514dac254a19ac294cab",
    "number": 458,
    "body": "Addresses #459 \r\n\r\nThis pull request adds a new github action to run the Black formatter with `--check` as a linting step. We already use the Black formatter along with custom linting rules. This check will enforce running Black on all work before being merge into master.\r\n\r\nEnsuring that all code uses the same auto-formatter is beneficial because it eliminates git conflicts on formatting changes.",
    "head_branch": "format-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #458 from nrempel/format-code\n\nAdd Black format check github action"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621514eac254a19ac294cac",
    "number": 457,
    "body": "…eaks\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "support-all-preds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #457 from sklump/support-all-preds\n\nbecause of prior anticipation, support requires only doc and style tw…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621514eac254a19ac294cad",
    "number": 456,
    "body": "",
    "head_branch": "signed-attachments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #456 from sklump/signed-attachments\n\nSigned attachments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621514fac254a19ac294cae",
    "number": 455,
    "body": "Indexes revocation states according to the proof identifier's timestamp, not the timestamp of the delta that was retrieved.\r\n\r\nThis fixes proof verification for remote agents that use the requested timestamp, or any other timestamp in the requested range.",
    "head_branch": "fix/rev-state-ts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #455 from andrewwhitehead/fix/rev-state-ts\n\nAdjust verifier revocation states"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215150ac254a19ac294caf",
    "number": 453,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "wallet-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #453 from sklump/wallet-tests\n\nwallet test coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215151ac254a19ac294cb0",
    "number": 452,
    "body": "Signed-off-by: euroledger <emerysolutions@yahoo.co.uk>",
    "head_branch": "aries-demo-workshop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #452 from euroledger/aries-demo-workshop\n\nchanges to acme controller instructions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215152ac254a19ac294cb1",
    "number": 451,
    "body": "Still a few outstanding TODO's, but opening up the PR to get some eyes on it.\r\n\r\nAdds exchange-specific tracing (adds a \"trace\" attribute to the exchange records as well as admin API inputs and outputs).\r\n\r\nAdded tracing to proof exchange and credential exchange.\r\n\r\nAdded support to the alice/faber demo to support tracing to standard log and http endpoint.\r\n\r\nTODO:\r\n- append trace logs to messages is partially implemented - need to either finish this or rip out the code\r\n- had to add reference to the EFK docker network into the test and demo scripts - need to clean this up - FIXED\r\n- also need to look into the implications for message forwarding and routing ...\r\n- anything else from the reviews ...\r\n",
    "head_branch": "trace_reports_3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #451 from ianco/trace_reports_3\n\nTrace reports - exchange-specific tracing; proof exchange tracing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215153ac254a19ac294cb2",
    "number": 450,
    "body": null,
    "head_branch": "update-demo-instructions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #450 from swcurran/update-demo-instructions\n\nUpdates to the OpenAPI demo and the Mobile demo; rename Mobile Demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215154ac254a19ac294cb3",
    "number": 449,
    "body": "Added a new demo parameter --self-attested (the default it to NOT include self attested attributes in the proof request)\r\n\r\nUpdated the tails file commands to include the proper host name when on PWD (so you can just copy and paste the commands directly)\r\n\r\nIncluded the \"base64\" command as a temporary workaround for eSatus wallet\r\n",
    "head_branch": "demo_updates_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #449 from ianco/demo_updates_2\n\nDemo updates 2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215154ac254a19ac294cb4",
    "number": 447,
    "body": "",
    "head_branch": "revo-demo-bug-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #447 from sklump/revo-demo-bug-fixes\n\nRevo demo bug fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215155ac254a19ac294cb5",
    "number": 445,
    "body": "Run auto-formatter to bring entire codebase up to spec",
    "head_branch": "format-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215156ac254a19ac294cb6",
    "number": 443,
    "body": "Addresses: #409, https://github.com/hyperledger/aries-rfcs/issues/407 \r\n\r\nThis pull requests major/minor version routing for aries protocols.\r\n\r\nThe implementation follows these rules:\r\n\r\n- Existing protocols (internal and external) should still work. This work is designed to not introduce any breaking changes.\r\n- If a protocol uses the old style, it can't receive other minor version messages. For them, the `@type` parameter must match exactly\r\n- New protocols must include a top level [definition module](https://github.com/hyperledger/aries-cloudagent-python/pull/443/files#diff-c8ea657f1116ef5e00980dae3e252b19) and include references to protocol implementation as children.\r\n- There can only be any number of  major version implementations per protocol. Each major version protocol is effectively treated as a separate protocol and is referenced by the definition module.\r\n- There can only be one minor version implementation per protocol major version.\r\n- Minimum minor version can be specified in `definition.py`. If a message is received for a protocol and major version with a minor version *less than* the minimum supported version, the agent will respond with a problem report with text describing the violation.\r\n- Any extra fields are now ignored when deserializing _any_ agent messages. This ensures that protocols can support minor versions greater than the current implementation.\r\n\r\nRemaining todo:\r\n\r\n- [x] Documentation page on creating a new protocol\r\n- [x] Even more manual testing?\r\n\r\n\r\nDocs: https://github.com/nrempel/aries-cloudagent-python/blob/proto-versions/aries_cloudagent/protocols/README.md\r\n",
    "head_branch": "proto-versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #443 from nrempel/proto-versions\n\nAdd support for major/minor protocol version routing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215157ac254a19ac294cb7",
    "number": 442,
    "body": "... and fix my misunderstanding of assertRaises error context handling in issue-credential routes tests\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-indy-ledger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #442 from sklump/unit-tests-indy-ledger\n\ncover latest additions to indy ledger"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215158ac254a19ac294cb8",
    "number": 441,
    "body": "Revoke by rev reg id + cred rev id. Leave rev regs out of credential exchange records until issue. Unit test coverage for indy-issuer.",
    "head_branch": "revo-cleanup-to-controller",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #441 from sklump/revo-cleanup-to-controller\n\nRevo cleanup to controller"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215159ac254a19ac294cb9",
    "number": 440,
    "body": "Current - can be configured to write events (json format) to standard log file or http endpoint.\r\n\r\n(Future - append to exchange and message records)\r\n\r\nSample docker-based EFK stack under demo/EFK-stack - runs Elasticsearch, Fluentd and Kibana - for testing writing events to monitoring and reporting tool.\r\n\r\nCurrently includes event tracing on credential exchange only.",
    "head_branch": "trace_reports_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #440 from ianco/trace_reports_2\n\nEvent tracing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621515aac254a19ac294cba",
    "number": 439,
    "body": "Current - can be configured to write events (json format) to standard log file or http endpoint.\r\n\r\n(Future - append to exchange and message records)\r\n\r\nSample docker-based EFK stack under demo/EFK-stack - runs Elasticsearch, Fluentd and Kibana - for testing writing events to monitoring and reporting tool.\r\n\r\nCurrently includes event tracing on credential exchange only.",
    "head_branch": "trace_reports_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621515bac254a19ac294cbb",
    "number": 437,
    "body": "",
    "head_branch": "fix/perf-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #437 from andrewwhitehead/fix/perf-demo\n\nHandle missing revocation property"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621515cac254a19ac294cbc",
    "number": 435,
    "body": "Also adds issuance_by_default parameter to create-registry endpoint\r\nFixes some method signatures in base classes\r\n",
    "head_branch": "revoke-multiple",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #435 from andrewwhitehead/revoke-multiple\n\nrevoke_credential -> revoke_credentials to allow more efficient implementation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621515cac254a19ac294cbd",
    "number": 432,
    "body": "This update allows operation of issue-credential with revocation via Admin API.\r\n\r\nThere are still many user experience improvements to go, but this update marks a stake in the ground.",
    "head_branch": "revocation-in-issue-credential",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #432 from sklump/revocation-in-issue-credential\n\nRevocation in issue credential"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621515dac254a19ac294cbe",
    "number": 431,
    "body": "",
    "head_branch": "fix-nonce",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #431 from nrempel/fix-nonce\n\nUse recommend indy generate_nonce"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621515eac254a19ac294cbf",
    "number": 429,
    "body": "For end-to-end testing, I have to perform similar work in the issue-credential protocol beforehand - that's a separate PR, coming soon.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "revocation-in-present-proof-from-proposal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #429 from sklump/revocation-in-present-proof-from-proposal\n\nintegrate revocation into present-proof protocol; test coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621515fac254a19ac294cc0",
    "number": 426,
    "body": "Add new decorator for trace reports\r\n\r\nAdd decorator to BasicMessage\r\n",
    "head_branch": "trace_reports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215160ac254a19ac294cc1",
    "number": 425,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "separate-revocation-and-publication",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #425 from sklump/separate-revocation-and-publication\n\nseparate revocation from publication"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215161ac254a19ac294cc2",
    "number": 424,
    "body": null,
    "head_branch": "hannah-feedback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215162ac254a19ac294cc3",
    "number": 423,
    "body": null,
    "head_branch": "run-demo-bg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #423 from swcurran/run-demo-bg\n\nUpdate the run_demo script to add background mode and usage info"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215162ac254a19ac294cc4",
    "number": 422,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nMakes the mobile demo a bit cleaner, as the connection will only be in \"response\" state when accepted by the mobile agent.\r\n\r\nTested and we can send a credential when the connection state is \"response\".\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #422 from ianco/master\n\nAllow faber to continue when connection is in 'response' state"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215163ac254a19ac294cc5",
    "number": 421,
    "body": "Updated based on feedback from user kthomas.  Still not work because of #420 but we're pretty close.",
    "head_branch": "kthomas-openapi-help",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #421 from swcurran/kthomas-openapi-help\n\nUpdate the OpenAPI script based on feedback from kthomas"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215164ac254a19ac294cc6",
    "number": 417,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "fix-tails-file-download-hanging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #417 from sklump/fix-tails-file-download-hanging\n\nuse requests for now to fetch tails file reliably"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215165ac254a19ac294cc7",
    "number": 416,
    "body": "Breaking change for 0.5.0",
    "head_branch": "remove-old-protocols",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #416 from andrewwhitehead/remove-old-protocols\n\nRemove previous credential and presentation protocols"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215166ac254a19ac294cc8",
    "number": 415,
    "body": null,
    "head_branch": "mobile-instructions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #415 from swcurran/mobile-instructions\n\nUpdate instructions for revocation so that they can be tested"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215167ac254a19ac294cc9",
    "number": 414,
    "body": "Add support for publishing tails files in an alternate location (e.g. github) so we can service via https\r\n\r\nUpdate api docs (mobile scenario) to describe how to publish tails files and enable revocation\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #414 from ianco/master\n\nUpdate revocation support to the alice/faber demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215168ac254a19ac294cca",
    "number": 413,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "revo-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #413 from sklump/revo-unit-tests\n\nunit test coverage for revocation subsystem"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215168ac254a19ac294ccb",
    "number": 412,
    "body": "Rather than checking that err_type is IndyError. The Indy SDK wrapper now returns Errors that are a subclass of IndyError but not of type IndyError, failing the check in the handler. This causes the Error Handler to not properly wrap raised errors.\r\n\r\nSigned-off-by: Daniel Bluhm <daniel.bluhm@sovrin.org>",
    "head_branch": "fix/ledger-indy-error-handler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215169ac254a19ac294ccc",
    "number": 411,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nWhen running play with docker, ensure the \"public\" url for the tails file is published to the ledger\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #411 from ianco/master\n\nTrack public admin url for tails file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621516aac254a19ac294ccd",
    "number": 408,
    "body": "Re: #365",
    "head_branch": "feature/outbound-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #408 from andrewwhitehead/feature/outbound-context\n\nMake context available in outbound transport handler"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621516bac254a19ac294cce",
    "number": 406,
    "body": "Allows the class to be swapped out for indy-credx.\r\n\r\nProbably reduces test coverage because the ledger tests were also testing the issuer code.",
    "head_branch": "isolate-creds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #406 from andrewwhitehead/isolate-creds\n\nIsolate anoncreds usage in IndyIssuer and IndyHolder classes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621516cac254a19ac294ccf",
    "number": 405,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "revo-touch-ups",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #405 from sklump/revo-touch-ups\n\ntiny touch-ups: tails, eqality operator for LGTM-bot, comment tweak"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621516dac254a19ac294cd0",
    "number": 404,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #404 from ianco/master\n\nAdded link to api docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621516eac254a19ac294cd1",
    "number": 403,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #403 from ianco/master\n\nSeparate 2 API docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621516fac254a19ac294cd2",
    "number": 402,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #402 from ianco/master\n\nSome API doc content updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621516fac254a19ac294cd3",
    "number": 401,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #401 from ianco/master\n\nUpdates to the Demo API walkthrough doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215170ac254a19ac294cd4",
    "number": 400,
    "body": "Caused stack trace and fail-out\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "pres-preview-pred-spec-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #400 from sklump/pres-preview-pred-spec-typo\n\npred spec not attr spec in presentation preview predicates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215171ac254a19ac294cd5",
    "number": 399,
    "body": "",
    "head_branch": "pre-release-0.4.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #399 from andrewwhitehead/pre-release-0.4.5\n\nUpdate to version 0.4.5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215172ac254a19ac294cd6",
    "number": 398,
    "body": "Addresses https://github.com/hyperledger/aries-cloudagent-python/issues/367\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "notices",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #398 from sklump/notices\n\nNotices"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215173ac254a19ac294cd7",
    "number": 397,
    "body": "Still a work in progress, however most content and screenshots are in place\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #397 from ianco/master\n\nUpdated docs for API demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215174ac254a19ac294cd8",
    "number": 396,
    "body": "Also catch exceptions on verifier_verify_proof, log the reason for pre-verify failure\r\n",
    "head_branch": "fix/restrict-self-attest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #396 from andrewwhitehead/fix/restrict-self-attest\n\nDon't accept self-attested attributes when restrictions are present"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215175ac254a19ac294cd9",
    "number": 395,
    "body": "This prevents  output buffering from preventing invite printout.\r\nSigned-off-by: Sam Curren <telegramsam@gmail.com>",
    "head_branch": "fix/flush_invitation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #395 from TelegramSam/fix/flush_invitation\n\nFlushes output buffer when printing invite"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215176ac254a19ac294cda",
    "number": 394,
    "body": "Fixes #393 ",
    "head_branch": "fix/pre-verify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #394 from andrewwhitehead/fix/pre-verify\n\nAccept self attested attributes in pre-verify; add logging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215176ac254a19ac294cdb",
    "number": 392,
    "body": "",
    "head_branch": "pre-release-0.4.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #392 from andrewwhitehead/pre-release-0.4.4\n\nUpdate version to 0.4.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215177ac254a19ac294cdc",
    "number": 391,
    "body": "",
    "head_branch": "update-docker-14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #391 from andrewwhitehead/update-docker-14\n\nUpdate docker images to indy-sdk 1.14.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215178ac254a19ac294cdd",
    "number": 390,
    "body": "This appears to be a typo that is causing `pre_verify` to return `None` when it should be returning `OK`",
    "head_branch": "fix/pre-verify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #390 from dbluhm/fix/pre-verify\n\nFix pre-verify check"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215179ac254a19ac294cde",
    "number": 389,
    "body": "…dy schema, not cred def\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "cred-eager-canon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #389 from sklump/cred-eager-canon\n\ndo not canonicalize attr names in cred previews: retain raw as per in…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621517aac254a19ac294cdf",
    "number": 388,
    "body": "",
    "head_branch": "pre-release-0.4.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #388 from andrewwhitehead/pre-release-0.4.3\n\nUpdate to version 0.4.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621517bac254a19ac294ce0",
    "number": 387,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #387 from ianco/master\n\nAdd endpoint info to error message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621517bac254a19ac294ce1",
    "number": 385,
    "body": "Signed-off-by: Daniel Bluhm <daniel.bluhm@sovrin.org>",
    "head_branch": "fix/taa-accept",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #385 from dbluhm/fix/taa-accept\n\ntaa_accept default to True when sign is True"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621517cac254a19ac294ce2",
    "number": 384,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "fix-216-credential-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #384 from ianco/fix-216-credential-api\n\nAdd credential_id to store_credential protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621517dac254a19ac294ce3",
    "number": 383,
    "body": null,
    "head_branch": "openapidemo-newintro",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #383 from swcurran/openapidemo-newintro\n\nUpdated the start of the OpenAPI demo instructions to add events"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621517eac254a19ac294ce4",
    "number": 382,
    "body": "Added screenshots from @sklump \r\nSigned-off-by: shaktishenoy <shaktishenoy@yahoo.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #382 from shaktishenoy/master\n\nUpdated AriesOpenAPIDemo.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621517fac254a19ac294ce5",
    "number": 381,
    "body": "Added screenshots from @sklump  ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215180ac254a19ac294ce6",
    "number": 380,
    "body": "",
    "head_branch": "fix/demo-cred",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #380 from andrewwhitehead/fix/demo-cred\n\nFix logging of received credential in demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215181ac254a19ac294ce7",
    "number": 379,
    "body": "This pull request adds support for Step 1 of [RFC 0348](https://github.com/hyperledger/aries-rfcs/blob/master/features/0348-transition-msg-type-to-https/README.md)\r\n",
    "head_branch": "support-new-message-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #379 from nrempel/support-new-message-type\n\nSupport new message @type prefix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215181ac254a19ac294ce8",
    "number": 378,
    "body": "Add support for additional postgres wallet schemes, such as \"MultiWalletDatabase\"\r\n",
    "head_branch": "pg_scheme_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #378 from ianco/pg_scheme_support\n\nPg scheme support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215182ac254a19ac294ce9",
    "number": 377,
    "body": "Fixes #366",
    "head_branch": "fix/admin-ws-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #377 from andrewwhitehead/fix/admin-ws-timeout\n\nHandle send timeout in admin websocket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215183ac254a19ac294cea",
    "number": 376,
    "body": null,
    "head_branch": "demo-instructions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #376 from swcurran/demo-instructions\n\nTweaked instructions to separate messaging and exchanging credentials"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215184ac254a19ac294ceb",
    "number": 375,
    "body": "Adds event logger to agent.py that is activated when running run_demo with the --events option.\r\n\r\nAdds a --no-auto option to run_demo that deactivates --auto-... arguments in agent.\r\n\r\nUpdates OpenAPI demo documentation for invitation scenarios when --no-auto option is set\r\n\r\nPR for: #361",
    "head_branch": "openapi-demo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #375 from petridishdev/openapi-demo\n\nOpenAPI demo option for no-auto and events"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215185ac254a19ac294cec",
    "number": 374,
    "body": "Adds event logger to `agent.py` that is activated when running `run_demo` with the `--events` option.\r\n\r\nAdds a `--no-auto` option to `run_demo` that deactivates `--auto-...` arguments in agent.\r\n\r\nUpdates OpenAPI demo documentation for invitation scenarios when `--no-auto` option is set\r\n\r\nPR for: https://github.com/hyperledger/aries-cloudagent-python/issues/361",
    "head_branch": "openapi-demo-remove-automation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215186ac254a19ac294ced",
    "number": 373,
    "body": "The request for seed isn't defined in `/wallet/did/create`. But I wanna generate did with the specific seed so I made some modifications.\r\nThx!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215187ac254a19ac294cee",
    "number": 371,
    "body": "Signed-off-by: shaktishenoy <shaktishenoy@yahoo.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #371 from shaktishenoy/master\n\nUpdated AriesOpenAPIDemo.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215187ac254a19ac294cef",
    "number": 370,
    "body": "Added explanatory notes to \"Issuing a Credential\" section",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215188ac254a19ac294cf0",
    "number": 369,
    "body": "DID 1.0 spec assumes authentication block elements to be string references or embedded ones",
    "head_branch": "diddoc-authentication",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215189ac254a19ac294cf1",
    "number": 368,
    "body": "",
    "head_branch": "pre-release-0.4.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #368 from andrewwhitehead/pre-release-0.4.2\n\nUpdate to version 0.4.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621518aac254a19ac294cf2",
    "number": 364,
    "body": "Add  a parameter to set the ledger to \"read only\"\r\n\r\nAgent will throw an exception for any attempted ledger write operations\r\n\r\nEXCEPT a \"DID update endpoint\" will be silently ignored\r\n",
    "head_branch": "read-only-ledger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #364 from ianco/read-only-ledger\n\nRead only ledger flag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621518bac254a19ac294cf3",
    "number": 363,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nOnly log the stack trace if max retries exceeded\r\n",
    "head_branch": "fix_retry_logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #363 from ianco/fix_retry_logs\n\nFix logging on http retries"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621518bac254a19ac294cf4",
    "number": 359,
    "body": "",
    "head_branch": "fix/incomplete-presentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #359 from andrewwhitehead/fix/incomplete-presentation\n\nAvoid throwing exception on invalid or incomplete received presentations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621518cac254a19ac294cf5",
    "number": 357,
    "body": "Fixes compatibility issues with the `run_docker` script when running in bash under windows.\r\n\r\nTested with:\r\n- GNU bash, version 4.4.23(1)-release (x86_64-pc-msys)\r\n- GNU bash, version 4.4.20(1)-release (x86_64-pc-linux-gnu) (WSL in Windows 10)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #357 from esune/master\n\nTweaks to run_docker script for windows bash compatibility"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621518dac254a19ac294cf6",
    "number": 356,
    "body": "Restores the missing mapping for the `create-proof`, necessary for the connection-less protocol.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #356 from esune/master\n\nRestore create-proof route"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621518eac254a19ac294cf7",
    "number": 355,
    "body": "The toolbox taps into ACA-Py's credential exchange records to get a record of credentials issued; deleting these records once the exchange completes makes it a little harder to accurately show a list of issued credentials. The added command line argument gives the option to preserve those records after the exchange has completed.",
    "head_branch": "preserve-exchange-records",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #355 from dbluhm/preserve-exchange-records\n\nAdd CLI arg for preserving exchange records"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621518fac254a19ac294cf8",
    "number": 354,
    "body": "This change will be useful when creating a backchannel for ACA-Py for testing with the protocol test suite. Also helpful for general connecting of static agents, of course.",
    "head_branch": "feature/static-connection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #354 from dbluhm/feature/static-connection\n\nActivate create-static REST API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215190ac254a19ac294cf9",
    "number": 353,
    "body": "",
    "head_branch": "pre-release-0.4.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #353 from andrewwhitehead/pre-release-0.4.1\n\nRelease 0.4.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215191ac254a19ac294cfa",
    "number": 350,
    "body": "…in BaseRecord (if not None -> is not None)\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "record-eq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #350 from sklump/record-eq\n\nHush LGTM with equality comparison for exhange records, tiny bug fix …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215192ac254a19ac294cfb",
    "number": 349,
    "body": "",
    "head_branch": "fix/forward-dict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #349 from andrewwhitehead/fix/forward-dict\n\nFix forward handler; accept string or dict in received forward message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215192ac254a19ac294cfc",
    "number": 348,
    "body": "…pgraded cred finding\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "auto-proof-comment-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #348 from sklump/auto-proof-comment-fix\n\nfix argparse help for auto-respond-presentation-requests to reflect u…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215193ac254a19ac294cfd",
    "number": 347,
    "body": "Address https://github.com/hyperledger/aries-cloudagent-python/issues/341\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "issue-cred-v1.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215194ac254a19ac294cfe",
    "number": 346,
    "body": "",
    "head_branch": "fix/find-cred-def",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #346 from andrewwhitehead/fix/find-cred-def\n\nFix check for existing cred def on older indy SDK version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215195ac254a19ac294cff",
    "number": 345,
    "body": "This makes it possible to send a message to a connection only if they have a live session open.\r\n\r\nWe found this useful for instances where one message handler triggers a chatty/non-essential notification to another agent.",
    "head_branch": "to_session_only",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #345 from dbluhm/to_session_only\n\nAdd `to_session_only` option"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215196ac254a19ac294d00",
    "number": 344,
    "body": "Visit raw vs. encoded attribute values, predicate threshold values in proof request/proof to fail proofs with tamper evidence before submitting to indy-sdk for verification.",
    "head_branch": "verify-raw-vs-encoding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #344 from sklump/verify-raw-vs-encoding\n\nVerify raw vs encoding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215197ac254a19ac294d01",
    "number": 339,
    "body": "…ifications.\r\n\r\nNote that nothing here breaks v1.0 of RFC 37. It only anticipates the forthcoming tweak (+referent in attribute specification): the code will subsequently understand the corresponding proof request (with `names`) once the von-image uplift moves to 1.13 or higher.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "pres-proposal-preview-attr-refs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #339 from sklump/pres-proposal-preview-attr-refs\n\naccommodate referents in presentation proposal preview attribute spec…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215198ac254a19ac294d02",
    "number": 338,
    "body": "Re: #337",
    "head_branch": "unpadded-b64",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #338 from andrewwhitehead/unpadded-b64\n\nAdjust handling of unpadded base64 input"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215198ac254a19ac294d03",
    "number": 336,
    "body": "…RFC 36\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "issue-cred-proposal-preview-optional",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #336 from sklump/issue-cred-proposal-preview-optional\n\nmake issue-credential proposal preview optional, aligning with Aries …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215199ac254a19ac294d04",
    "number": 333,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "cred-def-reconstruct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #333 from sklump/cred-def-reconstruct\n\nrevisit send-cred-def and associated non-secret record write"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621519aac254a19ac294d05",
    "number": 332,
    "body": "changed 'stored' state to 'credential_acked' in Credential Exchange Record Updated (issue_credential). 'stored' state is never emitted, 'credential_acked' is emitted after storing a credential.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #332 from TimoGlastra/patch-1\n\nupdate state of issue_credential in AdminAPI.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621519bac254a19ac294d06",
    "number": 331,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "schema-attr-names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #331 from sklump/schema-attr-names\n\nmatch SchemaSchema with indy-sdk parse result (attrNames)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621519cac254a19ac294d07",
    "number": 330,
    "body": "…etween presentation proposal and request\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "pres-repeat-cred-def",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #330 from sklump/pres-repeat-cred-def\n\naccommodate proofs with repeat cred defs, check for bait-and-switch b…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621519dac254a19ac294d08",
    "number": 328,
    "body": "Signed-off-by: Ry Jones <ry@linux.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #328 from ryjones/master\n\nAdd GitHub action to publish releases to PyPI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621519eac254a19ac294d09",
    "number": 326,
    "body": "Signed-off-by: Daniel Bluhm <daniel.bluhm@sovrin.org>",
    "head_branch": "fix/presentation-role",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #326 from dbluhm/fix/presentation-role\n\nFix missing presentation exchange role on certain case"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621519eac254a19ac294d0a",
    "number": 325,
    "body": "Ran into this recently. Seems to be breaking requesting a presentation through a controller, resulting in a schema validation failure if `p_type` and `p_value` are specified.\r\n\r\nSigned-off-by: Daniel Bluhm <daniel.bluhm@sovrin.org>",
    "head_branch": "fix/indy-predicate-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #325 from dbluhm/fix/indy-predicate-schema\n\nFix broken assignment in IndyProofReqPredSpecSchema"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621519fac254a19ac294d0b",
    "number": 323,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "send-cred-def",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a0ac254a19ac294d0c",
    "number": 322,
    "body": "I ran into a use case where there was a need to run both the \"http\" and \"ws\" transport on the same port. I wasn't sure a transport that combined both of these into one \"http+ws\" transport was something that was wanted upstream (if it is, I'm happy to address that separately) but I noticed that a couple of small tweaks would make it easy enough to side load my combined transport.\r\n\r\nI'm curious how others feel about this approach.",
    "head_branch": "alternate-transport-loading",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #322 from dbluhm/alternate-transport-loading\n\nAllow side loading alternate inbound transports"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a1ac254a19ac294d0d",
    "number": 321,
    "body": "…JWT validation dead code\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-cred-def-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #321 from sklump/unit-tests-cred-def-cache\n\nextend unit test coverage for issue-cred over cache, storage; remove …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a2ac254a19ac294d0e",
    "number": 320,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>\r\n\r\nFixes https://github.com/hyperledger/aries-cloudagent-python/issues/313\r\n\r\nChecks ledger for existence of cred def before trying to create\r\n",
    "head_branch": "313_cred_def_dup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a3ac254a19ac294d0f",
    "number": 318,
    "body": "This PR adds web controllers that complement the ACA-py terminal-based [demos](https://github.com/hyperledger/aries-cloudagent-python/tree/master/demo) as part of issue [#93](https://github.com/hyperledger/aries-cloudagent-python/issues/93).\r\n\r\nThree controllers have been implemented with various frameworks (documentation on running these controllers are included as a README in each controller root directory):\r\n\r\n1. Faber is a .NET + Blazor hybrid server/client application\r\n2. Acme is an Express.js (Node.js) server application\r\n3. Alice is an Angular client application\r\n\r\nApplications have been designed to largely follow the demo workshop.\r\n\r\n**All applications:**\r\n* Can create and receive invitations to connect to each other, view pending connection requests and active connections. \r\n\r\n**Faber-specific features:**\r\n* Can view Credential Schemas and Definitions and can issue Credentials\r\n\r\n**Alice-specific features:**\r\n* Can view issued Credentials and Proof Requests\r\n\r\n**Acme-specific features:**\r\n* Can issue and verify Proof Requests\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a4ac254a19ac294d10",
    "number": 317,
    "body": "Isolated discovery unit test coverage, removing erroneous ledger test update inclusion.",
    "head_branch": "sklump/unit-tests-proto-discovery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #317 from sklump/sklump/unit-tests-proto-discovery\n\nSklump/unit tests proto discovery"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a5ac254a19ac294d11",
    "number": 316,
    "body": "Extend unit test coverage through discovery protocol",
    "head_branch": "unit-tests-proto-discovery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a5ac254a19ac294d12",
    "number": 315,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-ledger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #315 from sklump/unit-tests-ledger\n\ncover future close after keepalive"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a6ac254a19ac294d13",
    "number": 314,
    "body": "connection-id must be in post-filter for search to pick up presentation exchange record\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #314 from sklump/master\n\nfix issue #311 presentation ack missing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a7ac254a19ac294d14",
    "number": 312,
    "body": "+ light unlikely-to-encounter bug fixes\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-ledger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #312 from sklump/unit-tests-ledger\n\nunit tests to cover ledger ops"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a8ac254a19ac294d15",
    "number": 310,
    "body": "",
    "head_branch": "fix/timing-startup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #310 from andrewwhitehead/fix/timing-startup\n\nRemove obsolete methods from timing inspection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151a9ac254a19ac294d16",
    "number": 309,
    "body": "",
    "head_branch": "fix/demo-genesis-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #309 from andrewwhitehead/fix/demo-genesis-options\n\nEnable GENESIS_URL option for demo agents"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151aaac254a19ac294d17",
    "number": 308,
    "body": "`my_endpoints` is undefined if `my_endpoint` is passed to the method. The fix initializes `my_endpoints` in the else block",
    "head_branch": "connection-pass-endpoint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #308 from gnarula/connection-pass-endpoint\n\nFix passing custom endpoint while accepting invitation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151abac254a19ac294d18",
    "number": 307,
    "body": null,
    "head_branch": "read-the-docs-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #307 from swcurran/read-the-docs-updates\n\nUpdate the RTD generated files and the README about how to generate; fix comment format in code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151abac254a19ac294d19",
    "number": 306,
    "body": "- Adds RevocationRegistry class for interfacing with local and external revocation registries\r\n- Adds IssuerRevocationRecord for tracking revocation registry generation and issuance\r\n- Adds an admin route for generating a new registry against a credential definition\r\n- Adds parameters to credential-definition and issue-credential routes for supporting revocation\r\n",
    "head_branch": "feature/rev-reg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #306 from andrewwhitehead/feature/rev-reg\n\nBasic support for credential revocation and revocation registry handling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151acac254a19ac294d1a",
    "number": 305,
    "body": "- Adds RevocationRegistry class for interfacing with local and external revocation registries\r\n- Adds IssuerRevocationRecord for tracking revocation registry generation and issuance\r\n- Adds an admin route for generating a new registry against a credential definition\r\n- Adds parameters to credential-definition and issue-credential routes for supporting revocation",
    "head_branch": "feature/rev-reg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151adac254a19ac294d1b",
    "number": 304,
    "body": "",
    "head_branch": "fix/plugin-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #304 from andrewwhitehead/fix/plugin-error\n\nLog full plugin module path when loading fails"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151aeac254a19ac294d1c",
    "number": 303,
    "body": "",
    "head_branch": "fix/package-info",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #303 from andrewwhitehead/fix/package-info\n\nAdd project URL and classifiers to package info for display on PyPi"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151afac254a19ac294d1d",
    "number": 302,
    "body": "",
    "head_branch": "pre-release-0.4.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #302 from andrewwhitehead/pre-release-0.4.0\n\nUpdate version to 0.4.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b0ac254a19ac294d1e",
    "number": 301,
    "body": "",
    "head_branch": "refactor/core",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #301 from andrewwhitehead/refactor/core\n\nMove modules into core and utils packages"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b1ac254a19ac294d1f",
    "number": 300,
    "body": "Adapted from revocation registry work\r\n",
    "head_branch": "feature/repeat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #300 from andrewwhitehead/feature/repeat\n\nAdd standard method to perform HTTP requests with retries"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b1ac254a19ac294d20",
    "number": 299,
    "body": "Restore changes lost during conflict resolution between #288  and #289\r\n\r\n@nrempel can you please check and confirm everything is there?",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #299 from esune/master\n\nRestore changes from #289"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b2ac254a19ac294d21",
    "number": 298,
    "body": "+ note enum-like fields are class, not instance variables: python allows slack here but mock framework raises fewer surprises in unit testing when specified class-wise\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-proto-introduction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #298 from sklump/unit-tests-proto-introduction\n\nUnit tests for introduction protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b3ac254a19ac294d22",
    "number": 297,
    "body": "- Refer to [von-network PR 82](https://github.com/bcgov/von-network/pull/82) for details.\r\n\r\nSigned-off-by: Wade Barnes <wade.barnes@shaw.ca>",
    "head_branch": "fix/che-ip-docker",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #297 from WadeBarnes/fix/che-ip-docker\n\nUpdate che-ip image reference"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b4ac254a19ac294d23",
    "number": 296,
    "body": "The pull request includes changes necessary to support presentation requests that do not rely on an existing agent-to-agent connection.\r\n\r\nA use case for this is when [vc-authn-oidc](https://github.com/bcgov/vc-authn-oidc) creates a presentation request to allow users that hold credentials that satisfy it to access a protected resource.\r\nIn this case, the presentation request does not require a connection between the vc-authn-oidc agent and the user's agent to exist and be active: any user holding appropriate credentials should be able to receive the same presentation request and be authenticated when they respond with the correct credential claims.\r\n\r\nTagging @andrewwhitehead for review.",
    "head_branch": "create-request",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #296 from esune/create-request\n\nAdd support for connection-less presentation requests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b5ac254a19ac294d24",
    "number": 294,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-protocol-routing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #294 from sklump/unit-tests-protocol-routing\n\nrouting protocol test coverage, basic storage $in bug fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b6ac254a19ac294d25",
    "number": 293,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-proto-connections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #293 from sklump/unit-tests-proto-connections\n\nunit test coverage for connections protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b6ac254a19ac294d26",
    "number": 291,
    "body": "I wasn't able to run the demo agent in the way that was described in the documentation. This patch fixes that issue.\r\n\r\n`GENESIS_FILE=<MY-GENESIS-FILE> DEFAULT_POSTGRES=true START_TIMEOUT=120 python3 -m runners.alice --port 8030`\r\n",
    "head_branch": "use-genesis-file-when-running-locally",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #291 from tretkow/use-genesis-file-when-running-locally\n\nUse GENESIS_FILE when running the agent locally"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b7ac254a19ac294d27",
    "number": 290,
    "body": "",
    "head_branch": "fix/send-ping-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #290 from andrewwhitehead/fix/send-ping-schema\n\nFix request schema on send-ping"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b8ac254a19ac294d28",
    "number": 289,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #289 from nrempel/master\n\nset attachment id explicitely in unbound proof request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151b9ac254a19ac294d29",
    "number": 288,
    "body": "Adding a new API endpoint `/present-proof/create-request` to support creating a Proof request without needing an active connection with an agent, as previously supported by the deprecated endpoint `/presentation_exchange/create_request`.\r\n\r\ntests have been added following the ones that were already available for `presentation_exchange_send_free_request` and removing the test cases that are not required due to the missing `connection-id` requirement.\r\n\r\nPlease note my formatter has made changes to the files I edited (currently using black version `19.3b0`): let me know if this is expected, or what I should be doing to have a formatter behaviour that is consistent with the rest of the community.\r\n\r\nTagging @andrewwhitehead for review.",
    "head_branch": "create-request",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #288 from esune/create-request\n\nAdd create-proposal endpoint to the present-proof API namespace"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151baac254a19ac294d2a",
    "number": 287,
    "body": "- Add environment variable for adjusting maximum active dispatcher tasks\r\n- Track dispatcher timing via its task queue and log time spent in queue\r\n- Fix issue with empty TaskQueue evaluating as false",
    "head_branch": "feature/dispatch-active",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #287 from andrewwhitehead/feature/dispatch-active\n\nDispatcher queue improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151bbac254a19ac294d2b",
    "number": 286,
    "body": "",
    "head_branch": "fix/null-mime-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #286 from andrewwhitehead/fix/null-mime-type\n\nAllow null value for credential preview mime-type"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151bcac254a19ac294d2c",
    "number": 285,
    "body": "",
    "head_branch": "fix/problem-report-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151bcac254a19ac294d2d",
    "number": 284,
    "body": "…ecorator in basicmessage\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-actionmenu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #284 from sklump/unit-tests-actionmenu\n\nunit test coverage for actionmenu, basic message protocols; l10n as d…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151bdac254a19ac294d2e",
    "number": 283,
    "body": "",
    "head_branch": "fix/problem-report",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #283 from andrewwhitehead/fix/problem-report\n\nFix problem report import issue; change webhook topic"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151beac254a19ac294d2f",
    "number": 282,
    "body": "- facilitate decoding pack messages in async context\r\n- move postgres plugin loading out of root into wallet module",
    "head_branch": "cleanup/unpack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #282 from andrewwhitehead/cleanup/unpack\n\nRemove old anoncrypt/authcrypt support; split up decode_pack_message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151bfac254a19ac294d30",
    "number": 281,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-connections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c0ac254a19ac294d31",
    "number": 279,
    "body": "Signed-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "present-proof-unit-test-coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #279 from sklump/present-proof-unit-test-coverage\n\nPresent-proof protocol unit test coverage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c1ac254a19ac294d32",
    "number": 278,
    "body": "I've reintroduced credential_received, credential_acked and credential_stored as distinct states. Only the issuer gets credential_acked in an exchange record; the record is gone at the holder side at ack in any case; the holder's last web hook update is credential_saved.\r\n\r\nThe please-ack from the issuer side necessarily asks for ack on credential_stored (accepted) as per Aries RFC 0036 (issue-credential) state transition diagram (text disagrees for the moment - patience will provide convergence) and 0317 (please-ack) semantics (not the example - again, I hope to convince the example to converge with all germane Aries RFC pics and text).\r\n\r\nFor the moment this impl is a stake in the ground to show the concept working as I interpret the Aries RFC design intent.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "please-ack-on-save-cred",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c1ac254a19ac294d33",
    "number": 277,
    "body": "Signed-off-by: Sam Curren <telegramsam@gmail.com>\r\n",
    "head_branch": "feature/validate_additional",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #277 from TelegramSam/feature/validate_additional\n\nAdded additional date formats to validation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c2ac254a19ac294d34",
    "number": 276,
    "body": "Signed-off-by: Sam Curren <telegramsam@gmail.com>\r\n",
    "head_branch": "feature/additional_endpoints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #276 from TelegramSam/feature/additional_endpoints\n\nallow additional endpoints to be specified"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c3ac254a19ac294d35",
    "number": 275,
    "body": "Fixes Github Issue #270 \nSigned-off-by: Sam Curren <telegramsam@gmail.com>\n",
    "head_branch": "feature/expand_date_formats",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #275 from TelegramSam/feature/expand_date_formats\n\nAllow timestamp without trailing Z"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c4ac254a19ac294d36",
    "number": 274,
    "body": "- Adding agent label to CLI banner\r\n- Adding agent label and version to SwaggerUI\r\n\r\nHaving this information displayed on CLI and UI helps to identify agents without keeping port number based notepads. \r\n\r\nSigned-off-by: Satish Mohan <54302767+smohan-dw@users.noreply.github.com>",
    "head_branch": "label",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #274 from smohan-dw/label\n\nChanges to display Agent Label and Version on CLI and SwaggerUI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c5ac254a19ac294d37",
    "number": 273,
    "body": "- Add tests for trust ping, basic message, problem report message handlers\r\n- Remove indy.pairwise support in wallet implementations\r\n- Use raw wallet keys in unit tests to improve speed\r\n- Add tests for create_public_did and set_public_did wallet methods",
    "head_branch": "handler-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #273 from andrewwhitehead/handler-tests\n\nUnit test additions and cleanups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c6ac254a19ac294d38",
    "number": 272,
    "body": "```PORTS=\"5000:5000 10000:10000\" ./scripts/run_docker ``` -> ```PORTS=\"5000:5000 10000:10000\" ./scripts/run_docker start```",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #272 from smohan-dw/patch-1\n\nminor update to docker agent start command"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c7ac254a19ac294d39",
    "number": 271,
    "body": "Also adds `--ping` option to the performance demo to test messaging performance w/o issuing credentials.",
    "head_branch": "remove-conn-activity",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #271 from andrewwhitehead/remove-conn-activity\n\nRemove connection activity tracking and add ping webhooks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c7ac254a19ac294d3a",
    "number": 269,
    "body": "- move unpacking and return routing into inbound transport manager\r\n- move packing, delivery tracking and retries into outbound transport manager\r\n- apply a limiter on the number of concurrent message handlers (agent message handlers + admin API handlers)\r\n- add support for --max-message-size parameter",
    "head_branch": "refactor/transport",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #269 from andrewwhitehead/refactor/transport\n\nMessage transport refactoring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c8ac254a19ac294d3b",
    "number": 268,
    "body": "…t-proof manager, ack message\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "unit-tests-aries-36-37-handlers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #268 from sklump/unit-tests-aries-36-37-handlers\n\nunit tests for present-proof and issue-cred protocol handlers, present-proof manager, ack message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151c9ac254a19ac294d3c",
    "number": 266,
    "body": " for issue-cred, present-proof protocols\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "cred-proof-routes-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #266 from sklump/cred-proof-routes-unit-tests\n\nExercise all routes.py in unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151caac254a19ac294d3d",
    "number": 265,
    "body": "Add support for environment variable QUEUE_SIZE to set max size of the internal outbound queue.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add environment parameter to set outbound queue max size (#265)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151cbac254a19ac294d3e",
    "number": 264,
    "body": "Signed-off-by: Kenneth Ebert <ken@kindredlearning.com>\r\n\r\nUpdate text of error message to make it clearer.",
    "head_branch": "errormsg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #264 from ken-ebert/errormsg\n\nFix error message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151ccac254a19ac294d3f",
    "number": 263,
    "body": "",
    "head_branch": "fix/cred-params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #263 from andrewwhitehead/fix/cred-params\n\nFix parameter names in demo and demo documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151cdac254a19ac294d40",
    "number": 262,
    "body": "",
    "head_branch": "instrument-outbound-queue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #262 from nrempel/instrument-outbound-queue\n\nAdd more logging to outbound queue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151ceac254a19ac294d41",
    "number": 261,
    "body": "- differentiate when a plugin is missing vs. when it has a code error and log warnings\r\n- fix redundant code and incorrect method documentation\r\n- add unit tests to class loader",
    "head_branch": "fix/plugin-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #261 from andrewwhitehead/fix/plugin-imports\n\nStreamline ClassLoader and improve plugin imports"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151ceac254a19ac294d42",
    "number": 260,
    "body": "This adds an invitation mode of \"static\" for connections created statically. The end goal is to be able to distinguish connection records for static connections from connections made through the connection protocol. Not sure if this is the best way but it works.",
    "head_branch": "static-invite-mode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #260 from dbluhm/static-invite-mode\n\nAdd invitation mode \"static\" for static connections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151cfac254a19ac294d43",
    "number": 259,
    "body": "Allow for cred proposal underspecification of cred def id, only lock down cred def id at issuer on offer. Sync up api requests to Aries RFC-36 verbiage.",
    "head_branch": "cred-proposal-1.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #259 from sklump/cred-proposal-1.1\n\nbroaden aries-rfc-36 cred proposal to underspecify cred def, allow is…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d0ac254a19ac294d44",
    "number": 258,
    "body": "",
    "head_branch": "fix/no-cookies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #258 from andrewwhitehead/fix/no-cookies\n\nDisable cookies on outbound requests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d1ac254a19ac294d45",
    "number": 257,
    "body": "Supercedes PR #248",
    "head_branch": "feature/plugin-registry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #257 from andrewwhitehead/feature/plugin-registry\n\nAdd plugin registry used for protocol and admin route registration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d2ac254a19ac294d46",
    "number": 256,
    "body": "Now done in a standard way instead of using polling or other methods",
    "head_branch": "feature/cache-lock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #256 from andrewwhitehead/feature/cache-lock\n\nAdd support for locking a cache key, to avoid overlapping expensive operations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d3ac254a19ac294d47",
    "number": 255,
    "body": "",
    "head_branch": "feature/uvloop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #255 from andrewwhitehead/feature/uvloop\n\nAdd optional support for uvloop"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d4ac254a19ac294d48",
    "number": 254,
    "body": "",
    "head_branch": "timing-log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #254 from andrewwhitehead/timing-log\n\nOutput timing information to log file when --timing-log is provided"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d5ac254a19ac294d49",
    "number": 253,
    "body": "",
    "head_branch": "support-new-message-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d5ac254a19ac294d4a",
    "number": 252,
    "body": "",
    "head_branch": "fix/store-schema-record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #252 from andrewwhitehead/fix/store-schema-record\n\nFix issue submitting schema/cred-def: epoch record tag as a string"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d6ac254a19ac294d4b",
    "number": 250,
    "body": "",
    "head_branch": "refactor-protocols",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #250 from andrewwhitehead/refactor-protocols\n\nRefactor protocol support from aries_cloudagent.messaging to aries_cloudagent.protocols"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d7ac254a19ac294d4c",
    "number": 249,
    "body": "",
    "head_branch": "fix/multi-load-pg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #249 from andrewwhitehead/fix/multi-load-pg\n\nFix test failure when load_postgres_storage is called multiple times"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d8ac254a19ac294d4d",
    "number": 248,
    "body": "I'd like to propose a slightly different mechanism for loading protocol handlers as well as other features. Rather than specifically looking for message types inside of a loaded module, I propose that we attempt to load and execute an asynchronous `setup` method, with the context passed as the first argument. This would allow side loaded modules to not only add protocol handlers but also potentially define new ledgers, admin servers, admin server routes, etc. without having to fork the ACA-Py code base. The changes I've included here are mostly just a proof of concept of what this might look like and other changes are likely necessary to fully support side loading something like a ledger.\r\n\r\nMore than open to thoughts and feedback, why this approach is a bad idea, ideas for a better approach etc.",
    "head_branch": "feature/plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151d9ac254a19ac294d4e",
    "number": 246,
    "body": "",
    "head_branch": "pre-release-0.3.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #246 from andrewwhitehead/pre-release-0.3.5\n\nUpdate version to 0.3.5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151daac254a19ac294d4f",
    "number": 245,
    "body": "Track schemas and cred defs an agent creates via non-secrets records, allow query via admin API.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "track-issued-schema-cred-def",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #245 from sklump/track-issued-schema-cred-def\n\ntrack issued schema, cred defs and allow query via admin API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151dbac254a19ac294d50",
    "number": 243,
    "body": "Plus related updates to routes and unit tests",
    "head_branch": "perf-issue-credential",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #243 from andrewwhitehead/perf-issue-credential\n\nUse issue-credential protocol in performance demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151dcac254a19ac294d51",
    "number": 242,
    "body": "Also adds tests and type info to the CredentialManager class, and allows create_offer to be called without a credential proposal.",
    "head_branch": "cred-req-reuse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #242 from andrewwhitehead/cred-req-reuse\n\nReuse credential offers and requests when possible"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151dcac254a19ac294d52",
    "number": 241,
    "body": "`signer` -> `signers`\r\n\r\nhttps://github.com/hyperledger/aries-rfcs/tree/master/features/0234-signature-decorator#tutorial\r\nhttps://github.com/hyperledger/aries-rfcs/blob/master/features/0234-signature-decorator/ed25519sha256_single.md#application",
    "head_branch": "hotfix/fix_signature_decorator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151ddac254a19ac294d53",
    "number": 240,
    "body": "As defined in the RFC nested msg in Forward must be nested JSON object returned by pack message\r\n\r\nhttps://github.com/hyperledger/aries-rfcs/tree/master/concepts/0094-cross-domain-messaging#corerouting10forward",
    "head_branch": "hotfix/fix_forwarding_msg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #240 from jovfer/hotfix/fix_forwarding_msg\n\nAlign Forward message with RFC 0094: msg must be JSON dict, not a string"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151deac254a19ac294d54",
    "number": 239,
    "body": "As defined in the RFC these fields must be `did` and `did_doc`.\r\n\r\nhttps://github.com/hyperledger/aries-rfcs/tree/master/features/0160-connection-protocol#attributes",
    "head_branch": "hotfix/fix_connection_detail_json_schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151dfac254a19ac294d55",
    "number": 238,
    "body": "Removes credential exchange metadata caching",
    "head_branch": "remove-caching",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #238 from nrempel/remove-caching\n\nRemove caching"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e0ac254a19ac294d56",
    "number": 237,
    "body": "",
    "head_branch": "trace-http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #237 from andrewwhitehead/trace-http\n\nAdd statistics on HTTP requests to timing output"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e1ac254a19ac294d57",
    "number": 236,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #236 from swcurran/master\n\nUpdate the status of the use of the DID-Exchange protocol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e2ac254a19ac294d58",
    "number": 235,
    "body": "- Avoid fetching tags on BaseRecord models\r\n- Reduce the tags applied to current BaseRecord models\r\n- Add in-memory filtering for values that were previously tags\r\n- Implement caching by thread ID in the (v0.1) CredentialManager",
    "head_branch": "less-tags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #235 from andrewwhitehead/less-tags\n\nReduce impact of tags in non-secrets"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e2ac254a19ac294d59",
    "number": 234,
    "body": "",
    "head_branch": "pre-release-0.3.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #234 from andrewwhitehead/pre-release-0.3.4\n\nRelease 0.3.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e3ac254a19ac294d5a",
    "number": 233,
    "body": "Ongoing work on signing attachment decorator content and integrating RFC#15 ack messages for issue-credential and present-proof protocols.",
    "head_branch": "sign-ack-for-v0.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #233 from sklump/sign-ack-for-v0.4\n\nUse ack message in issue-credential protocol and add signature support to attachment decorator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e4ac254a19ac294d5b",
    "number": 232,
    "body": "",
    "head_branch": "aries-37-pres-ack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e5ac254a19ac294d5c",
    "number": 231,
    "body": "* Fixed the link to point to a section in same doc, instead of pointing to another page\r\n",
    "head_branch": "doc-minor-link-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #231 from amarts/doc-minor-link-fix\n\n[doc] demo/AriesOpenAPIDemo: minor link fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e6ac254a19ac294d5d",
    "number": 226,
    "body": "Allow for sign/verify on attachment decorator data (base64 variant only for the moment, can look at further support as required).\r\n\r\nDetails may need adjustment as RFC work solidifies.",
    "head_branch": "attach-deco-signature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e7ac254a19ac294d5e",
    "number": 225,
    "body": "Some tweaks may become necessary as the RFC solidifies.\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "attach-deco-signature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e7ac254a19ac294d5f",
    "number": 224,
    "body": "Cleanup of base64 heterodoxy in preparation for signed attachment decorator work\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "use-wallet-utils-for-base64",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #224 from sklump/use-wallet-utils-for-base64\n\ninvoke all base64 ops via wallet utils"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e8ac254a19ac294d60",
    "number": 223,
    "body": "Allow cred-def-id tagging via admin API\r\nAccept seq# as schema-id for get-schema() via admin API\r\nCache schema by seq# and by schema-id",
    "head_branch": "cred-def-2-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #223 from sklump/cred-def-2-schema\n\nCred def 2 schema"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151e9ac254a19ac294d61",
    "number": 222,
    "body": "Added support for providing multiple proof referents to the present-proof API endpoint.\r\n\r\nNo unit tests were available, so some basic test were added for the functionality that was updated (alongside a couple of \"bonus\" ones 😉 ).\r\n\r\nTagging @nrempel for reviewing the change and the tests.",
    "head_branch": "multiple-proof-referents",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #222 from esune/multiple-proof-referents\n\nMultiple proof referents"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151eaac254a19ac294d62",
    "number": 221,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #221 from swcurran/master\n\nUpdated the Supported RFCs documentation for ACA-Py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151ebac254a19ac294d63",
    "number": 219,
    "body": "Fix missing comment field in presentation request request schema in\r\npresent_proof admin routes. A comment is expected but was not declared\r\nin the schema.\r\n\r\nSigned-off-by: Daniel Bluhm <daniel.bluhm@sovrin.org>",
    "head_branch": "fix/missing-comment-field",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #219 from dbluhm/fix/missing-comment-field\n\nFix missing comment field in presentation request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151ecac254a19ac294d64",
    "number": 218,
    "body": "Same reasoning as #214 ",
    "head_branch": "feature/presentation-exchange-role",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #218 from dbluhm/feature/presentation-exchange-role\n\nAdd role to presentation exchange records"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151edac254a19ac294d65",
    "number": 217,
    "body": "Caused protocol arguments to be grouped under logging.\r\n\r\nSigned-off-by: Daniel Bluhm <daniel.bluhm@sovrin.org>",
    "head_branch": "fix/protocol-arg-group",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #217 from dbluhm/fix/protocol-arg-group\n\nFix protocol arguments missing group name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151edac254a19ac294d66",
    "number": 215,
    "body": "- don't require a signature for get_txn_request in credential_definition_id2schema_id\r\n- avoid repeated lookups of public DID when submitting ledger requests\r\n",
    "head_branch": "fix-unsigned-req",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #215 from andrewwhitehead/fix-unsigned-req\n\nFix ledger request signing issue; avoid duplicate public DID lookups"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151eeac254a19ac294d67",
    "number": 214,
    "body": "Without role attached to exchange records, it is difficult to distinguish between exchanges where I am the issuer and where I am the holder as the exchange can be triggered by the holder with a proposal or by the issuer with an offer. Also relevant for down the road when a potential holder can send a credential request directly for a credential that doesn't require the full flow.",
    "head_branch": "feature/exchange-role",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #214 from dbluhm/feature/exchange-role\n\nAdd role to credential exchange records"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151efac254a19ac294d68",
    "number": 213,
    "body": "Avoid signing ledger requests in cred_def_id2schema_id method. This makes it so potential holders are not required to have a public DID to send a proposal to an issuer.",
    "head_branch": "fix/cred_def_id2schema_id_signing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f0ac254a19ac294d69",
    "number": 212,
    "body": "Re: #194 ",
    "head_branch": "admin-api-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #212 from andrewwhitehead/admin-api-docs\n\nAdd documentation on the administration API and webhooks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f1ac254a19ac294d6a",
    "number": 211,
    "body": "",
    "head_branch": "no-snyk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #211 from andrewwhitehead/no-snyk\n\nRemove snyk badge"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f2ac254a19ac294d6b",
    "number": 210,
    "body": "Allow specification of all attach-deco attributes on init; auto-generate (uuid4) ident for attachment deco by default via from_indy_dict().",
    "head_branch": "attachment-decorator-ident",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #210 from sklump/attachment-decorator-ident\n\nAttachment decorator ident"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f2ac254a19ac294d6c",
    "number": 209,
    "body": "The scripts under the `scripts` folder were updated to allow their execution in Windows (using Git bash). The changes include prefixing the `docker` executable with `winpty` and escaping the volume mount paths.\r\n\r\n`.gitattributes` was also updated to prevent line endings in the scripts from being changed when checking out code in windows, since this would cause issues in UNIX/Linux machines if committed.\r\n\r\nChanges were tested under Windows in Git Bash and using WSL (Ubuntu), to ensure correct execution under UNIX/Linux.",
    "head_branch": "fix-scripts-windows",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #209 from esune/fix-scripts-windows\n\nUpdate scripts to run correctly in Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f3ac254a19ac294d6d",
    "number": 208,
    "body": "Richer form hints for requests and results in admin API swagger UI. Tighter marshmallow validation where obvious.",
    "head_branch": "admin-api-richer-hints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #208 from sklump/admin-api-richer-hints\n\nAdmin api richer hints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f4ac254a19ac294d6e",
    "number": 207,
    "body": "@dbluhm Related to #154",
    "head_branch": "test-static",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #207 from andrewwhitehead/test-static\n\nAdd support for test-suite-specific static connection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f5ac254a19ac294d6f",
    "number": 206,
    "body": "This pull request automatically removes old credential exchange records after the exchange completes in order to keep down database bloat.\r\n\r\nOn the issuer agent, records are removed automatically after the exchange completes taking into account parents thread records that need to stick around.\r\n\r\nOn the holder side, parent exchange records are kept around for an hour before removing them. Child thread exchanges are removed immediately. There is no way to identify records that can be immediately deleted so we set an expiration of an hour for parent records.",
    "head_branch": "remove-old-exchange-records",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #206 from nrempel/remove-old-exchange-records\n\nRemove old exchange records"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f6ac254a19ac294d70",
    "number": 205,
    "body": "Signed-off-by: Ry Jones <ry@linux.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #205 from 5daa1fac63ae83fd1b3fca8f219a6851/master\n\nAdd default SECURITY policy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f7ac254a19ac294d71",
    "number": 204,
    "body": "",
    "head_branch": "pre-release-0.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #204 from andrewwhitehead/pre-release-0.3.3\n\nRelease 0.3.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f8ac254a19ac294d72",
    "number": 203,
    "body": "",
    "head_branch": "issue-rollup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #203 from andrewwhitehead/issue-rollup\n\nFix message dispatch; clean up LGTM warnings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f8ac254a19ac294d73",
    "number": 199,
    "body": "Fixes #198 ",
    "head_branch": "unwrap-direct-response",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #199 from andrewwhitehead/unwrap-direct-response\n\nDon't wrap direct response messages with Forward wrapper(s)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151f9ac254a19ac294d74",
    "number": 197,
    "body": "Related to #135 ",
    "head_branch": "invite-base-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #197 from andrewwhitehead/invite-base-url\n\nAdd --invite-base-url option for customizing the URL used in connection invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151faac254a19ac294d75",
    "number": 193,
    "body": "",
    "head_branch": "feature-discovery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #193 from andrewwhitehead/feature-discovery\n\nUpdate feature discovery support to match RFC, rename endpoint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151fbac254a19ac294d76",
    "number": 192,
    "body": "More command line arguments for specifying role, label, multiuse, and public attributes of the invite generated at startup. Helpful for debugging.",
    "head_branch": "feature/invite-roles",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #192 from dbluhm/feature/invite-roles\n\nAdd CLI args for specifying more attrs of invite"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151fcac254a19ac294d77",
    "number": 188,
    "body": "This pull request adds the option of passing a \"credential_id\" parameter in the body of the request to instruct the wallet to use that id for storage.\r\n\r\nExisting functionality is not changed if no value is passed.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #188 from nrempel/master\n\nAdd support for explicitly setting credential_id on storage"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151fdac254a19ac294d78",
    "number": 187,
    "body": "- Add postgres storage statistics to performance demo\r\n- Reduce size of credential exchange record after successful storage\r\n- Enable unencrypted tags in BaseRecord subclasses",
    "head_branch": "perf-storage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #187 from andrewwhitehead/perf-storage\n\nPerformance tracking and improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151fdac254a19ac294d79",
    "number": 186,
    "body": "Fixes #180 ",
    "head_branch": "alice-invites",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #186 from andrewwhitehead/alice-invites\n\nHandle connection invitations in base64 or URL formats"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151feac254a19ac294d7a",
    "number": 185,
    "body": "- Add `wallet/tag-policy/{cred_def_id}` GET and POST endpoints\r\n- Avoid republishing a cred def that already exists on the ledger",
    "head_branch": "set-tag-policy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #185 from andrewwhitehead/set-tag-policy\n\nAdd methods to get and set the credential tagging policy for a cred def ID"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662151ffac254a19ac294d7b",
    "number": 181,
    "body": "This pull request allows the controller to query for credentials for a proof request for multiple referents at once:\r\n\r\n\"/presentation_exchange/{id}/credentials/{referent}\"\r\n\r\ncan also be called as\r\n\r\n\"/presentation_exchange/{id}/credentials/{referent_1},{referent_2},{referent_3}\"\r\n\r\nMultiple referents should be passed as a comma delimited string.\r\n\r\nExisting behaviour does not change for a single referent",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #181 from nrempel/master\n\nAllow querying credentials for proof request with multiple referents"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215200ac254a19ac294d7c",
    "number": 179,
    "body": "The v0.1 approach of selecting model record by initiator tag (filter) would not fly for v1.0 (issue-credential, present-proof) protocols: either side may initiate. Instead, select by connection identifier, available from the request context.\r\n\r\nWhile altering manager.py for both, get message data from context where possible (i.e., unless routes.py instantiates and calls manager without the request context that corresponding handlers have).\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "aries_36_37_self_connection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #179 from sklump/aries_36_37_self_connection\n\nallow self-connected agent to issue credentials, present proof"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215201ac254a19ac294d7d",
    "number": 178,
    "body": "This is from the discussion in #150 . It is intended for discussion at this point, though I am using it in my project already. ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #178 from rosenbrockc/master\n\nLedger Endpoint for OpenAPI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215202ac254a19ac294d7e",
    "number": 176,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "174-fix-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #176 from swcurran/174-fix-docs\n\nFixes #174 Adds document about credential_id is same as referent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215203ac254a19ac294d7f",
    "number": 170,
    "body": "",
    "head_branch": "pre-release-0.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #170 from andrewwhitehead/pre-release-0.3.2\n\nRelease 0.3.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215203ac254a19ac294d80",
    "number": 169,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "fix-rtd-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #169 from swcurran/fix-rtd-typo\n\nFix typo in link for to storage submodule"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215204ac254a19ac294d81",
    "number": 167,
    "body": "",
    "head_branch": "36-37-renaming",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #167 from andrewwhitehead/36-37-renaming\n\nRemove references to aries 36/37; update related admin routes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215205ac254a19ac294d82",
    "number": 164,
    "body": "incorporating latest available updates from hyperledger/master",
    "head_branch": "aries-36-37-v1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #164 from sklump/aries-36-37-v1\n\nAries 36 and 37 v1, demo/workshop updates to match"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215206ac254a19ac294d83",
    "number": 161,
    "body": "This pull request adds `initiator` to queries on records to ensure uniqueness in the case of a self-connection.\r\n\r\nWith a self-connection, `thread_id` alone is not unique (exists on both sides of the exchange).",
    "head_branch": "bugfix-thread-id-unique",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #161 from nrempel/bugfix-thread-id-unique\n\nQuery records on thread_id AND initiator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215207ac254a19ac294d84",
    "number": 159,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "rtd-content",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #159 from swcurran/rtd-content\n\nAdd intro to RTD site; add link to RTD site in README; cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215208ac254a19ac294d85",
    "number": 158,
    "body": "There are some open questions:\r\n\r\n1. There is a mechanism to clean out the queue for expired messages. I couldn't find any existing 'scheduled task' code within the project, so wanted to discuss where it should go.\r\n2. I've set a 1-week message retention policy by default but we may need smarter defaults in place.\r\n3. This does not yet retry message transmission, but that should be added as we determine how to do scheduled tasks per question 1.\r\n\r\nI welcome feedback and anticipate making some changes before this PR is merged.",
    "head_branch": "feature/142_outbound_queue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #158 from TelegramSam/feature/142_outbound_queue\n\nFeature/142 outbound queue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215209ac254a19ac294d86",
    "number": 157,
    "body": "Signed-off-by: dappsec <alank9+dappsec@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #157 from dappsec/master\n\nFixing some typos in Getting Started Guide docs - thanks for the PR!"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621520aac254a19ac294d87",
    "number": 152,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>\r\n\r\n* Updated readme to match standard\r\n* Update DevReadMe.md accordingly\r\n* Remove command line parameters table\r\n* Update inline command line parameters help to replace command line table",
    "head_branch": "update-readme-args",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #152 from swcurran/update-readme-args\n\nUpdate README to standard format; update CL help"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621520aac254a19ac294d88",
    "number": 149,
    "body": "This pull request adds an optional alias parameter on the `create` and `receive` connection invitation endpoints.\r\n\r\nIt also adds the ability to query for connections by alias.",
    "head_branch": "alias-connection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #149 from nrempel/alias-connection\n\nAlias connection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621520bac254a19ac294d89",
    "number": 145,
    "body": "",
    "head_branch": "optional-ledger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #145 from andrewwhitehead/optional-ledger\n\nDo not fail with an error when no ledger is configured"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621520cac254a19ac294d8a",
    "number": 144,
    "body": "",
    "head_branch": "taa-routes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #144 from andrewwhitehead/taa-routes\n\nAdd initial TAA acceptance admin routes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621520dac254a19ac294d8b",
    "number": 143,
    "body": "PyNaCl publishes wheel packages with libsodium included, which helps to simplify installation.\r\n\r\nNote: recent versions of marshmallow pass additional arguments to pre-load and post-load hooks.",
    "head_branch": "pynacl-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #143 from andrewwhitehead/pynacl-support\n\nSwitch to PyNaCl instead of pysodium; update dependencies"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621520eac254a19ac294d8c",
    "number": 141,
    "body": "",
    "head_branch": "pre-release-0.3.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #141 from andrewwhitehead/pre-release-0.3.1\n\nRelease 0.3.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621520fac254a19ac294d8d",
    "number": 140,
    "body": "Fixes #132 \r\nAnd increases code coverage. :)",
    "head_branch": "feature/132-reusable-invitations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #140 from TelegramSam/feature/132-reusable-invitations\n\nFeature/132 reusable invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215210ac254a19ac294d8e",
    "number": 138,
    "body": "\r\nSigned-off-by: Stephen Curran <swcurran@gmail.com>\r\n\r\n@andrewwhitehead - the code changes are all in comments.  Note how embedded JSON is to be defined for extraction in RTD:\r\n\r\n- blank line before\r\n- a line of \"::\"\r\n- blank line\r\n- the JSON indented further\r\n- blank line after\r\n\r\nAlso, notice that I had to add some config mock imports, but they are internal to the aries-cloudagent-python code base.  Is there something in the code - perhaps imported, but not defined?\r\n\r\nThanks!",
    "head_branch": "rtd-structure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #138 from swcurran/rtd-structure\n\nCleanup RTD - add import mocks, fix some comment formatting in code and markdown"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215211ac254a19ac294d8f",
    "number": 136,
    "body": "",
    "head_branch": "fix-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #136 from andrewwhitehead/fix-version\n\nFix -v behaviour; minor cleanups for docker builds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215211ac254a19ac294d90",
    "number": 134,
    "body": "This helps respond to messages from the driver.",
    "head_branch": "basicmessage-connection-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #134 from dbluhm/basicmessage-connection-id\n\nBasicMessage include connection_id"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215212ac254a19ac294d91",
    "number": 133,
    "body": "Fixed a couple of KeyErrors and fixed the timing of acceptance which was formerly too precise and was being rejected by the Indy ledger.",
    "head_branch": "taa-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #133 from dbluhm/taa-fixes\n\nTAA Fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215213ac254a19ac294d92",
    "number": 131,
    "body": "We ran into a couple of small issues recently; hopefully these are acceptable fixes.",
    "head_branch": "2019-08-09-instasprint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215214ac254a19ac294d93",
    "number": 130,
    "body": "Merged from aca-py 0.3.0.\r\n- Aries#0036 issue-credential v1.0\r\n- Aries#0037 present-proof v1.0\r\n- Descriptions in routes.py admin API models via schemas\r\n- Validators for indy types\r\n- Debug config settings for auto-everything\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "aries-36-37-v1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215215ac254a19ac294d94",
    "number": 129,
    "body": "Includes additional documentation updates for the 0.3.0 release.",
    "head_branch": "demo-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #129 from andrewwhitehead/demo-fixes\n\nFixes for running agents via docker; fix for running demo agents directly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215216ac254a19ac294d95",
    "number": 128,
    "body": "",
    "head_branch": "pre-release-0.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #128 from andrewwhitehead/pre-release-0.3\n\nRelease 0.3.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215217ac254a19ac294d96",
    "number": 127,
    "body": "- Add support for transaction author agreements when required by the ledger pool\r\n- Add `--genesis-file` config parameter (alternative to `--genesis-url`)\r\n- Move ledger and wallet config into common methods\r\n- Add `--replace-public-did` config parameter to allow replacement of the wallet public DID at startup\r\n- Update Docker images to indy-sdk 1.11.0",
    "head_branch": "taa-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #127 from andrewwhitehead/taa-support\n\nLedger and wallet config updates; add support for transaction author agreements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215217ac254a19ac294d97",
    "number": 126,
    "body": "",
    "head_branch": "handle-dupe-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #126 from andrewwhitehead/handle-dupe-schema\n\nHandle duplicate schema in send_schema by always fetching first"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215218ac254a19ac294d98",
    "number": 125,
    "body": "Fixes an issue with the demo Faber agent freezing while waiting for the swagger JSON to be downloaded",
    "head_branch": "fix-detect-process",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #125 from andrewwhitehead/fix-detect-process\n\nMore flexible timeout support in detect_process"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215219ac254a19ac294d99",
    "number": 124,
    "body": "Fix misspelling.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #124 from AlexITC/patch-1\n\nUpdate AriesBigPicture.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621521aac254a19ac294d9a",
    "number": 119,
    "body": "Added missing `start` commands to the `run_docker` invocations in the dev readme. Running the commands as they are now (without `start`) fails.\r\n\r\nSigned-off-by: Jordan McKinney <jordanmmck@gmail.com>",
    "head_branch": "update-readme-commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #119 from jordanmmck/update-readme-commands\n\nadd start command to run_docker invocations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621521bac254a19ac294d9b",
    "number": 118,
    "body": "The 'Running Locally' section is missing the `start` command which should follow the invocation of the `run_docker` script. Without `start` the commands fail.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621521cac254a19ac294d9c",
    "number": 117,
    "body": "From python docs:\r\n   modules intended for use as the main module of a Python application\r\n   must always use absolute imports.\r\n\r\nIn order to use a debugger with this agent we want to invoke it as a\r\nmain entry point but the relative import of .support then breaks.\r\n\r\nA fix is to add  the path to the runners directory to the python path\r\nso that we may use it with an absolute import instead.\r\ne.g. from runners.support.\r\n\r\nI cleaned up my branch to get rid of spurious commits that were reversed.",
    "head_branch": "fiximports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621521cac254a19ac294d9d",
    "number": 116,
    "body": "From python docs:\r\n  \" modules intended for use as the main module of a Python application\r\n   must always use absolute imports.\"\r\n\r\nIn order to use a debugger with this agent we want to invoke it as a\r\nmain entry point but the relative import of .support then breaks.\r\n\r\nA fix is to add  the path to the runners directory to the python path\r\nso that we may use it with an absolute import instead.\r\ne.g. from runners.support.\r\n\r\nThis patches faber.py alice.py and acme.py so that they do not use relative import. This allows them to run as main entry without throwing error.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621521dac254a19ac294d9e",
    "number": 114,
    "body": "This pull request adds a new `stored` state to the issuer credential exchange object.\r\n\r\nThe holder agent can send a new message type back to the issuer agent to inform them that the credential was successfully stored.\r\n\r\nThis change breaks compatibility with our provisional 0.1 credential exchange protocol: https://hackmd.io/oWSw18DLTYCmHi_ty_gYvg?view\r\n\r\nHowever, worst case scenario, the issuer agent will receive a \"credential_stored\" message it doesn't understand or no message at all.\r\n\r\nThe new message type is `did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/credential-issuance/0.1/credential-stored`. The message body is empty except for other information such as threads, etc.\r\n\r\nThis pull request also updates the performance demo to wait for this message before considering a credential issue \"complete\".\r\n\r\n@andrewwhitehead do you mind looking extra close at the changes to the performance demo to make sure what I've done makes sense? Thanks!\r\n\r\ncc: @swcurran just a heads up regarding a change to the protocol.",
    "head_branch": "issuer-stored-state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #114 from nrempel/issuer-stored-state\n\nAdd issuer stored state"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621521eac254a19ac294d9f",
    "number": 112,
    "body": "To allow generation of a QR code from a presentation request (Tobias)",
    "head_branch": "create-pres-req",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #112 from andrewwhitehead/create-pres-req\n\nAdd admin route to create a presentation request without sending it"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621521fac254a19ac294da0",
    "number": 110,
    "body": "",
    "head_branch": "print-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #110 from andrewwhitehead/print-version\n\nAdd -v option to aca-py executable to print version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215220ac254a19ac294da1",
    "number": 108,
    "body": "- Adds `--auto-store-credential` to the demo Alice agents\r\n- Adds optional logging around credential and presentation exchanges\r\n- Optimizes credential retrieval in the Alice agent demo to use one admin request\r\n",
    "head_branch": "fix-demo-pres-request",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #108 from andrewwhitehead/fix-demo-pres-request\n\nFix demo presentation request, optimize credential retrieval"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215221ac254a19ac294da2",
    "number": 103,
    "body": "",
    "head_branch": "pypi-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #103 from andrewwhitehead/pypi-readme\n\nAdd pypi badge to README and make document link URLs absolute"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215222ac254a19ac294da3",
    "number": 102,
    "body": "",
    "head_branch": "did-provision",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #102 from andrewwhitehead/did-provision\n\nAdd admin routes for creating and listing wallet DIDs, adjusting the public DID"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215222ac254a19ac294da4",
    "number": 101,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "readme-local",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #101 from swcurran/readme-local\n\nUpdate the running locally instructions based on feedback from Sam Smith"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215223ac254a19ac294da5",
    "number": 100,
    "body": "This adds a markdown document to the demos folder that details the install, configuration, and execution instructions for running local versions fo the Faber and Alice demos on macOS. It includes the missing information discovered during the process of getting it working.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215224ac254a19ac294da6",
    "number": 99,
    "body": "- Changes normal invocation from `aca-py` to `aca-py start` to run an agent\r\n- Adds support for additional commands, including `aca-py provision wallet ...` to create a wallet with an optional seed\r\n- Adds a `--log-file` parameter for redirecting log output without replacing the log config file",
    "head_branch": "split-commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #99 from andrewwhitehead/split-commands\n\nAdd support for multiple invocation commands, implement start/provision/help commands"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215225ac254a19ac294da7",
    "number": 98,
    "body": "This pull request adds a new admin endpoint to send a problem-report as part of the credential-exchange protocol.\r\n\r\nThe problem report is sent to the other agent and aca-py is also now configured to send webhooks to its subscribers when it receives a problem report.",
    "head_branch": "controller-send-problem-report",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #98 from nrempel/controller-send-problem-report\n\nAdd admin endpoint to send problem report"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215226ac254a19ac294da8",
    "number": 97,
    "body": "This pull request adds an additional state transition for the credential exchange protocol.\r\n\r\nWhen a holder receives a credential, instead of storing it immediately, the protocol enters a \"received\" state. The controller can then operate on the credential if it wants before storing it.\r\n\r\nWhen the controller is ready for the credential to be stored in the wallet, it calls `/credential_exchange/{id}/store` which will carry it along to the next and (currently) state. This state is the same as it was previously.\r\n\r\nThe agent can be started with the flag `--auto-store-credential` to automate this step. With this flag passed, the agent behaviour is the same as before.\r\n\r\ncloses #95",
    "head_branch": "add-cred-ex-transitions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #97 from nrempel/add-cred-ex-transitions\n\nAdd credential received state transition"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215227ac254a19ac294da9",
    "number": 94,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "performance-with-router",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #94 from swcurran/performance-with-router\n\nAdding documentation for the routing version of the performance example"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215227ac254a19ac294daa",
    "number": 89,
    "body": "…the list in the README\r\n\r\nSigned-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #89 from swcurran/master\n\nDocument listing the Aries RFCs supported by ACA-Py and reference to …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215228ac254a19ac294dab",
    "number": 87,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #87 from swcurran/master\n\nFurther updates to the running locally section of the demo README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215229ac254a19ac294dac",
    "number": 86,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #86 from swcurran/master\n\nUpdate the demo instructions for running locally using python; tweaking the \"follow the steps\" section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621522aac254a19ac294dad",
    "number": 85,
    "body": "@sklump Re: Aries#36 support",
    "head_branch": "skip-decorator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #85 from andrewwhitehead/skip-decorator\n\nDon't extract decorators with names matching the 'data_key' of defined schema fields"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621522bac254a19ac294dae",
    "number": 84,
    "body": "",
    "head_branch": "fix-demo-startup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #84 from andrewwhitehead/fix-demo-startup\n\nAllow demo scripts to run outside of Docker; add command line parsing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621522cac254a19ac294daf",
    "number": 82,
    "body": "- Return a problem report when a connection invitation is submitted as an agent message\r\n- Remove support for connection invitations as HTTP GET requests\r\n- Rename parameters to `--auto-accept-invites` and `--auto-accept-requests`\r\n- Allow the creation and reception of public (DID-based) connection invitations when `--public-invites` is enabled\r\n- Publish the endpoint to the ledger when a public DID is used and the ledger is available",
    "head_branch": "invite-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #82 from andrewwhitehead/invite-fixes\n\nConnection invitation fixes and improvements; support DID-based invitations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621522dac254a19ac294db0",
    "number": 81,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #81 from nrempel/master\n\nbump version number"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621522dac254a19ac294db1",
    "number": 78,
    "body": "This file is required for pip install to succeed since we parse `requirements.txt` in order to define this framework's dependencies",
    "head_branch": "0.2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #78 from nrempel/0.2.1\n\nAdd missing MANIFEST file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621522eac254a19ac294db2",
    "number": 77,
    "body": "",
    "head_branch": "0.2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #77 from nrempel/0.2.0\n\nPrepare for version 0.2.0 release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621522fac254a19ac294db3",
    "number": 76,
    "body": "These changes allow the initial connection response message (or problem report) sent after a connection request is received to be delivered by direct response, in cases where the sender has provided a transport decorator and is using a supported transport.",
    "head_branch": "direct-response",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #76 from andrewwhitehead/direct-response\n\nSupport direct response for connection response message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215230ac254a19ac294db4",
    "number": 75,
    "body": "This changeset adds the BaseRecord class with support for webhooks and logging of state changes. It removes duplicate code from the ConnectionRecord, CredentialExchange, and PresentationExchange classes and moves webhook handling out of the corresponding Manager classes.",
    "head_branch": "base-record",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #75 from andrewwhitehead/base-record\n\nUse a common base class for storage-based data records"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215231ac254a19ac294db5",
    "number": 74,
    "body": "- Clarify the use of the *Running the Network Locally* instructions for demos and development.\r\n\r\nSigned-off-by: Wade Barnes <wade.barnes@shaw.ca>",
    "head_branch": "von-network-doc-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #74 from WadeBarnes/von-network-doc-updates\n\nUpdate von-network related references."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215232ac254a19ac294db6",
    "number": 73,
    "body": "Signed-off-by: Sam Curren <telegramsam@gmail.com>",
    "head_branch": "fixvaldationlogging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #73 from TelegramSam/fixvaldationlogging\n\nFixed log_level arg, added validation error logging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215233ac254a19ac294db7",
    "number": 72,
    "body": "fix the shell inconsistency in the script.\r\n\r\nThe bash should use instead of sh.\r\nRemove \"[[\" in the shell syntax which may cause incompatibility issue.\r\n\r\n\r\nSigned-off-by: dongwangdw <xdragon007@gmail.com>",
    "head_branch": "fix-shell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #72 from dongwangdw/fix-shell\n\nfix shell inconsistency"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215233ac254a19ac294db8",
    "number": 71,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #71 from swcurran/master\n\n#57 further cleanup to the OpenAPI demo script"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215234ac254a19ac294db9",
    "number": 68,
    "body": "- Add 'accept' flag on connections (\"manual\" or \"auto\"), and equivalent parameters to create_invitation and receive_invitation for more granular control of invitation acceptance\r\n- Add support for an intermediate routing agent in the credential performance test",
    "head_branch": "perf-route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #68 from andrewwhitehead/perf-route\n\nUpdates to invitation handling and performance test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215235ac254a19ac294dba",
    "number": 67,
    "body": "Adds 2 new cli parameters:\r\n\r\n--admin-insecure-mode\r\n--admin-api-key\r\n\r\nExactly one of these two parameters are required if --admin is passed.\r\n\r\nIf an API key is provided, then requests must pass the key in the HTTP header X-API-Key otherwise the request will fail with a 401 response.\r\n",
    "head_branch": "api-security",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #67 from nrempel/api-security\n\nApi security"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215236ac254a19ac294dbb",
    "number": 66,
    "body": "Signed-off-by: Wade Barnes <wade.barnes@shaw.ca>",
    "head_branch": "fix-line-endings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #66 from WadeBarnes/fix-line-endings\n\nFix line endings on Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215237ac254a19ac294dbc",
    "number": 65,
    "body": "",
    "head_branch": "fix-repo-link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #65 from andrewwhitehead/fix-repo-link\n\nFix repository name in badge links"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215238ac254a19ac294dbd",
    "number": 64,
    "body": "This pull request refactors the rest of `connection.is_active` references to use `is_ready` instead. It also removes the `is_ready` property on the connection record",
    "head_branch": "connection-record-is-ready",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #64 from nrempel/connection-record-is-ready\n\nConnection record is_ready refactor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215239ac254a19ac294dbe",
    "number": 63,
    "body": "",
    "head_branch": "perf-pwd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215239ac254a19ac294dbf",
    "number": 60,
    "body": "…perledger aries-cloud-agent\r\n\r\nSigned-off-by: sklump <srklump@hotmail.com>",
    "head_branch": "aries-0036",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621523aac254a19ac294dc0",
    "number": 59,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621523bac254a19ac294dc1",
    "number": 58,
    "body": "Also some minor refactoring of the demo (to prepare for workshop instructions)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #58 from ianco/master\n\nFix API instructions for cred def id"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621523cac254a19ac294dc2",
    "number": 56,
    "body": "Aries#0036 support toward JIRA IS-1281 contribution, work in progress.",
    "head_branch": "aries-0036",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621523dac254a19ac294dc3",
    "number": 55,
    "body": "This helps respond to messages through the admin rest api",
    "head_branch": "sf-receive-cred-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621523eac254a19ac294dc4",
    "number": 54,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #54 from ianco/master\n\nUpdated API demo docs to use alice/faber scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621523eac254a19ac294dc5",
    "number": 53,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #53 from swcurran/master\n\nUpdates to the readme for the demo to add PWD support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621523fac254a19ac294dc6",
    "number": 52,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215240ac254a19ac294dc7",
    "number": 51,
    "body": "Signed-off-by: Ian Costanzo <ian@anon-solutions.ca>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #51 from ianco/master\n\nSwallow empty input in demo scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215241ac254a19ac294dc8",
    "number": 49,
    "body": "Fixes issue #47 ",
    "head_branch": "fix-blank-state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #49 from andrewwhitehead/fix-blank-state\n\nSet credential_exchange state when created from a cached credential request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215242ac254a19ac294dc9",
    "number": 46,
    "body": "",
    "head_branch": "connection-record-is-ready",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #46 from nrempel/connection-record-is-ready\n\nCheck for readiness instead of activeness in credential admin routes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215242ac254a19ac294dca",
    "number": 44,
    "body": "Sets build timeout to 30m in circleci to prevent test fail.",
    "head_branch": "fix-test-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215243ac254a19ac294dcb",
    "number": 43,
    "body": "Add new demo actor \"Acme\" for workshop exercises\r\n",
    "head_branch": "demo_updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #43 from ianco/demo_updates\n\nDemo updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215244ac254a19ac294dcc",
    "number": 42,
    "body": "Update postgres unit tests to allow configuration for postgres source\r\n\r\nFix reference for problem reporting\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #42 from ianco/master\n\nMisc fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215245ac254a19ac294dcd",
    "number": 41,
    "body": "Contains changes from #40 \r\n\r\nI haven't been able to make the table formatting better in the readme. If anyone knows a trick to making the table horizontally scrollable, let me know.",
    "head_branch": "readme-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #41 from nrempel/readme-updates\n\nReadme updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215246ac254a19ac294dce",
    "number": 40,
    "body": "",
    "head_branch": "change-binary-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #40 from nrempel/change-binary-name\n\nChange installed \"binary\" name to aca-py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215247ac254a19ac294dcf",
    "number": 38,
    "body": "",
    "head_branch": "fix-decorator-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #38 from andrewwhitehead/fix-decorator-check\n\nMove decorator checks after unpack; add message serializer tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215248ac254a19ac294dd0",
    "number": 36,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #36 from nrempel/master\n\nAdd pypi long description from readme and add instructions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215249ac254a19ac294dd1",
    "number": 34,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #34 from nrempel/master\n\nFix tests locally and fix demo error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215249ac254a19ac294dd2",
    "number": 33,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #33 from swcurran/master\n\nTweak in script to work under Linux; updates to readme for demo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621524aac254a19ac294dd3",
    "number": 31,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #31 from swcurran/master\n\nNew routing example document, typo corrections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621524bac254a19ac294dd4",
    "number": 30,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #30 from swcurran/master\n\nMore bad links :-("
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621524cac254a19ac294dd5",
    "number": 29,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #29 from swcurran/master\n\nLinks cleanup for the documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621524dac254a19ac294dd6",
    "number": 28,
    "body": "",
    "head_branch": "alice-faber-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #28 from andrewwhitehead/alice-faber-update\n\nAlice-Faber demo update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621524eac254a19ac294dd7",
    "number": 27,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #27 from swcurran/master\n\nDeployment Model document - getting started guide and revised the readme."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621524eac254a19ac294dd8",
    "number": 26,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #26 from swcurran/master\n\nPlantuml source and images for documentation; w/image generator script"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621524fac254a19ac294dd9",
    "number": 25,
    "body": "Signed-off-by: Wade Barnes <wade.barnes@shaw.ca>",
    "head_branch": "doc-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #25 from WadeBarnes/doc-updates\n\nMove generated documentation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215250ac254a19ac294dda",
    "number": 24,
    "body": "- Update instructions.\r\n- Update configuration.\r\n- Fix some document warnings.\r\n\r\nSigned-off-by: Wade Barnes <wade.barnes@shaw.ca>",
    "head_branch": "doc-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #24 from WadeBarnes/doc-updates\n\nUpdate generated documents"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215251ac254a19ac294ddb",
    "number": 23,
    "body": "- Move command line parsing into config/argparse\r\n- Move context initialization into config/default_context (add ContextBuilder class)\r\n- Move logging into config/logging\r\n- Add related unit tests, plus tests for conductor and dispatcher\r\n",
    "head_branch": "config-split",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #23 from andrewwhitehead/config-split\n\nSplit application configuration into separate modules and add tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215252ac254a19ac294ddc",
    "number": 22,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #22 from swcurran/master\n\nUpdates to the RTD configuration file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215253ac254a19ac294ddd",
    "number": 21,
    "body": "",
    "head_branch": "diddoc-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #21 from andrewwhitehead/diddoc-merge\n\nMerge DIDDoc support from von_anchor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215254ac254a19ac294dde",
    "number": 19,
    "body": "Signed-off-by: Stephen Curran <swcurran@gmail.com>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #19 from swcurran/master\n\nAdding Prov of BC, Gov of Canada copyright"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215255ac254a19ac294ddf",
    "number": 18,
    "body": "- Change the test report output directory.\r\n\r\nSigned-off-by: Wade Barnes <wade.barnes@shaw.ca>",
    "head_branch": "ci-updates",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #18 from bcgov/ci-updates\n\nUpdate test configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215255ac254a19ac294de0",
    "number": 17,
    "body": "",
    "head_branch": "ci-updates",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #17 from bcgov/ci-updates\n\nCI updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66215256ac254a19ac294de1",
    "number": 15,
    "body": "- Move webhook dispatch into AdminServer and use same mechanism for admin websocket connections\r\n- Use a single outbound queue and limit active transmissions with TaskProcessor\r\n- Add inbound and outbound transport unit tests, related refactoring\r\n- Fix demos to run with `acagent` instead of `icatagent`\r\n- Fixes for clean agent shut down\r\n",
    "head_branch": "transport-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15 from andrewwhitehead/transport-updates\n\nTransport updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  }
]