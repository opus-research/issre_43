[
  {
    "_id": "661f84e7a88c0a76e0a4e92d",
    "number": 2579,
    "body": "## What is this Python project?\r\n\r\nNuitka is the optimizing Python compiler written in Python that creates executables that run without an need for a separate installer. Data files can both be included or put alongside.\r\n\r\nNuitka is fully compatible with Python 3 (3.4 — 3.11) and Python 2 (2.6, 2.7), works on Windows, macOS, Linux and more, basically where Python works for you already.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPerformance: Nuitka aims to produce highly optimized executables by analyzing and transforming Python code into C or C++ code, which is then compiled to machine code. This optimization often results in faster execution compared to interpreted Python code.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84e7a88c0a76e0a4e92e",
    "number": 2578,
    "body": "## What is this Python project?\r\n\r\nStreamlit is an open-source Python library that allows you to create interactive web applications for machine learning and data science. It enables developers to build attractive user interfaces in no time. Streamlit turns data scripts into shareable web apps in minutes, all in pure Python. It’s designed for rapid prototyping, with a simple and Pythonic syntax. Streamlit also supports live editing, meaning your app updates instantly as you edit your script.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Compared to other Python libraries, Streamlit stands out for its simplicity and speed. It’s designed specifically for data scientists and machine learning engineers, allowing them to deploy models easily and quickly with only a few lines of code. Unlike other frameworks, Streamlit doesn’t require any knowledge of front-end technologies like HTML, CSS, or JavaScript.\r\n\r\n2. In contrast to event-driven frameworks, Streamlit operates on a top-down model, re-running the entire script on events. This approach resonates with users who are used to the reproducible research workflow, where you run your script top to bottom each time to ensure there is no hidden state.\r\n\r\n3. Streamlit also differs from libraries like Taipy, which requires familiarity with Markdown. Streamlit’s simplicity makes it a great choice for prototyping, and its compatibility with most Python libraries makes it versatile and flexible.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2578 from r-a-j-a-n/master\n\nAdd streamlit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84e8a88c0a76e0a4e92f",
    "number": 2577,
    "body": "## What is this Python project?\r\n\r\n\"Python Module of the Week\" is a series of articles written by [Doug Hellmann](https://doughellmann.com/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs with every lists and newsletters they are not comparable — every author provides his own point of view.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84e9a88c0a76e0a4e930",
    "number": 2576,
    "body": "## What is this Python project?\r\n\r\nLightGBM, short for Light Gradient Boosting Machine is ideal for large-scale data projects.\r\nEfficient Large-Scale Learning: Optimized for performance, making it suitable for large datasets and high-dimensional data.\r\nFast Training: Implements novel techniques like gradient-based one-side sampling and exclusive feature bundling, speeding up training times.\r\nLower Memory Usage: More memory-efficient than many other gradient-boosting libraries.\r\nParallel and GPU Learning: Supports parallel and GPU learning, enhancing its capability to handle complex tasks.\r\nHigh-Performance: Delivers high performance, both in terms of speed and accuracy, for a variety of machine learning tasks.\r\nFlexible and Versatile: Suitable for a range of applications, from regression to classification and ranking tasks.\r\nActive Community and Development: Benefits from ongoing development and a growing community.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Fast Training when compared to traditional scikit-learn Gradient boosted algos.\r\n2. Lower Memory Usage: More memory-efficient than many other gradient-boosting libraries.\r\n3. Parallel and GPU Learning: Supports parallel and GPU learning.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "lightgbm",
    "is_a_fork": true,
    "comments": [
      "The market cycle has not fully found its balance, but I'm confident trading with this platform, they understand the situation, their signals are bullish. All thanks to Glòrıãförextràdeş on Instagram.",
      "Good"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84eaa88c0a76e0a4e931",
    "number": 2575,
    "body": "## What is this Python project?\r\n\r\nStable Baselines 3 is a PyTorch version of Stable Baselines for reliable implementations of (deep) reinforcement learning algorithms. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nStable Baselines 3 is a significant improvement from previous Stable Baseline versions providing: \r\n- state-of-the-art PyTorch algorithms for (deep) reinforcement learning with\r\n  - observation space and Tensorboard support\r\n  - custom environments, policies, callbacks and interface\r\n  - can integrate with other libraries\r\n- [a full list of features can be found using this link](https://github.com/DLR-RM/stable-baselines3#main-features)\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "stable-baselines-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84eba88c0a76e0a4e932",
    "number": 2574,
    "body": "## What is this Python project?\r\n\r\nTyper is a library for building command-line applications in Python with automatic type checking and validation. It simplifies the creation of command-line interfaces by leveraging Python type annotations to define CLI arguments and options.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- **Simplicity**: Typer provides a simple and intuitive API for defining CLI applications using Python's type annotations, reducing the amount of boilerplate code required.\r\n\r\n- **Type Safety**: Typer enforces type checking and validation for CLI arguments and options based on Python's type hints, ensuring robustness and reliability in command-line applications.\r\n\r\n- **Compatibility**: Typer seamlessly integrates with existing Python codebases and libraries, making it easy to incorporate CLI functionality into Python projects.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84eca88c0a76e0a4e933",
    "number": 2573,
    "body": "## What is this Python project?\r\n\r\nThis adds a `Benchmarking` section. It includes two benchmarking harnesses, a module in the standard library, and a tool for tracking benchmark results over time.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is currently no listed benchmark harnesses. This PR adds them.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "benchmarking",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84eca88c0a76e0a4e934",
    "number": 2572,
    "body": "## What is this Python project?\r\n\r\npdm is a modern package management for Python (alterative to Poetry)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- Supporting the latest PEP standards\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "duplicate of #2514 ",
      "Thanks for the info there @deronnax, closing this PR as duplicated"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84eda88c0a76e0a4e935",
    "number": 2571,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "The market cycle has not fully found its balance, but I'm confident trading with this platform, they understand the situation, their signals are bullish. All thanks to Glòrıãförextràdeş on Instagram."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84eea88c0a76e0a4e936",
    "number": 2570,
    "body": "## What is this Python project?\r\n\r\nA minimalistic http client https://github.com/sonic182/aiosonic for asyncio\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Pure 100% python async http client, with decent performance\r\n* Only http client, not server, not more stuffs\r\n* Minimal and simple\r\n* Uses StreamWriter and StreamReader of asyncio for faster tcp handling\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Bueno muy bien "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84efa88c0a76e0a4e937",
    "number": 2569,
    "body": "## What is this Python project?\r\n\r\nuv is a fast pip replacement which is written in Rust.\r\npiccolo is fast and user friendly async orm.\r\nblacksheep is a fast framework for building APIs.\r\nsanic is simple and community driven web framework with a lot of helper modules.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f0a88c0a76e0a4e938",
    "number": 2568,
    "body": "## What is this Python project?\r\n\r\nPyrgo is a Python package manager that uses common tools such as `pytest`, `uv`, `ruff`, `mypy`, etc. And expose all of those in a Cargo-like interface. This allows you to have a standard project structure and more importantly to control your development workflow with a single CLI tool and not 5 or 6 different tools\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "- - [ ] @shlomif ![image](https://github.com/vinta/awesome-python/assets/160978623/7be8f8e7-22d8-431d-b6fd-ca5b8e23d687)[]()",
      "> Print \n\n",
      "> Print \n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f1a88c0a76e0a4e939",
    "number": 2567,
    "body": "# What is this Python project?\r\nPython 3 wrapper for wkhtmltopdf utility to convert HTML to PDF using Webkit.\r\n# What's the difference between this Python project and similar ones?\r\nIt is easy to use in docker\r\n```\r\nFROM python:3.9-slim\r\nRUN pip install pdfkit==1.0.0\r\n# convert html to pdf\r\nRUN apt update -y && apt install -y wkhtmltopdf \\\r\n    && apt autoremove && apt clean\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f2a88c0a76e0a4e93a",
    "number": 2566,
    "body": "## What is this Python project?\r\n\r\nPanel is the powerful data exploration & web app framework for Python. Created in 2018, it's one of the leaders in this space together with Streamlit, Gradio, Dash and Voila (see [pyviz.org](https://pyviz.org/tools.html#dashboarding)).\r\nWhat's the difference between this Python project and similar ones?\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to the projects I mentioned above, Panel is a Swiss-army knife kind of framework that is agnostic to its user domain (dashboard, chat app, streaming data, ...). It comes with many features that allow pretty much all sorts of data apps to be built.\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.",
    "head_branch": "add-panel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f3a88c0a76e0a4e93b",
    "number": 2565,
    "body": "## What is this Python project?\r\n\r\nGradio is an open-source Python package that allows you to quickly build a demo or web application for your machine learning model, API, or any arbitrary Python function. You can then share a link to your demo or web application in just a few seconds using Gradio's built-in sharing features. No JavaScript, CSS, or web hosting experience needed!\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. **Simplicity and ease of use:** Gradio prioritizes simplicity and ease of use, allowing users to quickly build demos or web applications without needing to have expertise in JavaScript, CSS, or web hosting. This focus on simplicity sets it apart from some other similar projects that may require more technical knowledge or setup.\r\n\r\n2. **Built-in sharing features:** Gradio comes with built-in sharing features, enabling users to share their demos or web applications with others easily. This feature is not always present or as straightforward in other similar projects, where users may need to handle deployment and hosting separately.\r\n\r\n3. **Support for arbitrary Python functions:** Gradio allows users to build demos or web applications for not only machine learning models or APIs but also any arbitrary Python function. This versatility makes it suitable for a wider range of use cases compared to some other projects that may be more specialized.\r\n\r\n4. **Active development and community:** Gradio benefits from active development and a growing community, which contributes to its ongoing improvement, documentation, and support. This active community aspect can enhance the user experience and provide valuable resources that may not be as readily available for some other projects.\r\n\r\n5. **Integration with popular machine learning frameworks:** Gradio seamlessly integrates with popular machine learning frameworks such as TensorFlow, PyTorch, and scikit-learn, making it easy for users to create demos or web applications for their models built using these frameworks. While other projects may also support integration with these frameworks, Gradio's focus on simplicity and ease of use can make the integration process smoother for users.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "And I also adjust the TOC in the `README.md`\r\n\r\nThanks @vinta "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f3a88c0a76e0a4e93c",
    "number": 2564,
    "body": "## What is this Python project?\r\n\r\nAn extremely fast Python linter and code formatter, written in Rust.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is the first formatter written in Rust. It is extremely fast and it has over than in-built 700 rules. For more information click [see](https://docs.astral.sh/ruff/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f4a88c0a76e0a4e93d",
    "number": 2563,
    "body": "I have added new open source please check and give feedback if any  i read in your repo somewhere in order to add our name to repo we have to add our link here . here is the link(https://github.com/JOBIN-SABU)\r\nplease reply me if  I am wrong",
    "head_branch": "my-new",
    "is_a_fork": true,
    "comments": [
      "Change the name of your PR. For example: add package name",
      "I have corrected everything . Sorry for your trouble . projects like yours help begginer's like us to contribute and improve our skill as well. I have one question to ask you. I am a begginer but learnt a lot of concept but my skills are not good. i have been advised to contribute for good first. but the most I find are still hard for me . Can you suggest any other way to improve my  coding skills or any way so that I can find project of my level. Sorry but I have lack of mentorship that's why I am asking you.",
      "> I have added new open source please check and give feedback if any  i read in your repo somewhere in order to add our name to repo we have to add our link here . here is the link(https://github.com/JOBIN-SABU)\n> please reply me if  I am wrong\n\n",
      "“Hi there, I’ve encountered a merge conflict with  this pull request . Could you please advise on how to best resolve this? I’m willing to make the necessary changes or update my pull request as needed.”"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f5a88c0a76e0a4e93e",
    "number": 2562,
    "body": "## What is this Python project?\r\n\r\nFalco is a CLI tool for Django. It serves the dual purpose of generating projects and providing ongoing support throughout the development lifecycle. Falco includes a CRUD generator, facilitating rapid prototyping for Django projects. Additionally, it offers a comprehensive set of guides covering various topics for Django developers, including task queues, real-time features, multitenancy, and more.\r\n\r\nKey features:\r\n\r\n- Generate a project that is pre-configured with best practices, ready for deployment.\r\n- CRUD generator for quickly creating basic views during prototyping.\r\n- A set of guides to help a django dev get an overview of how to solve common issues\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- cookiecutter-django: falco is more django a project starter and aims to help througout the lifecycle with a projects with the CLI and the guides.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f6a88c0a76e0a4e93f",
    "number": 2561,
    "body": "ℹ️ **Pytube**: A lightweight and easy-to-use Python library for downloading YouTube videos. Pytube provides a simple interface to interact with YouTube's API, allowing developers to effortlessly integrate video downloading functionality into their applications. It supports various video resolutions and formats, making it a versatile choice for fetching YouTube content programmatically.\r\n\r\n🚀 **Key Features:**\r\n- Simple API for video downloading\r\n- Support for multiple video resolutions and formats\r\n- Ability to download entire playlists\r\n- Lightweight and easy to integrate into Python projects\r\n\r\n👩‍💻 **Usage Example:**\r\n```python\r\nfrom pytube import YouTube\r\n\r\n# Example: Download a YouTube video\r\nfrom pytube import YouTube\r\n\r\nyoutube_video_url = 'https://www.youtube.com/watch?v=example_video_id'\r\n\r\nyt = YouTube(youtube_video_url)\r\nvideo_stream = yt.streams.get_highest_resolution\r\n\r\nprint(f\"Video Title: {yt.title}\")\r\nprint(f\"Video Duration: {yt.length} seconds\")\r\nprint(f\"Video Resolution: {video_stream.resolution}\")\r\n\r\ndownload_directory = '/path/to/download/directory'\r\n\r\nprint(\"Downloading...\")\r\nvideo_stream.download(download_directory)\r\nprint(\"Download complete!\")\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f7a88c0a76e0a4e940",
    "number": 2560,
    "body": "## What is this CherryPy?\r\n\r\nCherryPy is a minimalist, object-oriented web framework known for its simplicity and reliability.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCherryPy enables the development of web apps with its built-in web server and doesn’t provide frontend utilities nor will it tell you how to speak with your storage as CherryPy allows the developer make those decisions. Hulu and Netflix's websites are ran on CherryPy!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [
      "I didn't add it to the README file. This is my first real contribution "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f7a88c0a76e0a4e941",
    "number": 2559,
    "body": "## What is this Python project?\r\n\r\nThis is the official IPinfo's Python library and provides IP to Geolocation data. The library is awesome because:\r\n\r\n- It provides easy access to IPinfo's API services such as IP to Geolocation data, ASN, privacy detection etc.\r\n- It even supports tokenless access to the API (1,000 req/month)\r\n- It supports bulk IP enrichment\r\n- Has native support for caching\r\n- Support async operation\r\n\r\nCode example:\r\n\r\n```python\r\nimport ipinfo\r\nhandler = ipinfo.getHandler()\r\nip = \"149.74.80.31\"\r\ndetails = handler.getDetails(ip)\r\n\r\nprint(details.all)\r\n```\r\n\r\nOutput\r\n\r\n```json\r\n{\r\n  \"ip\": \"149.74.80.31\",\r\n  \"hostname\": \"31.pool149-74-80.dynamic.orange.es\",\r\n  \"city\": \"Sant Mart\\u00ed\",\r\n  \"region\": \"Catalonia\",\r\n  \"country\": \"ES\",\r\n  \"loc\": \"41.4181,2.1993\",\r\n  \"org\": \"AS12479 Orange Espagne SA\",\r\n  \"postal\": \"08018\",\r\n  \"timezone\": \"Europe/Madrid\",\r\n  \"readme\": \"https://ipinfo.io/missingauth\",\r\n  \"country_name\": \"Spain\",\r\n  \"isEU\": true,\r\n  \"country_flag_url\": \"https://cdn.ipinfo.io/static/images/countries-flags/ES.svg\",\r\n  \"country_flag\": {\r\n    \"emoji\": \"\\ud83c\\uddea\\ud83c\\uddf8\",\r\n    \"unicode\": \"U+1F1EA U+1F1F8\"\r\n  },\r\n  \"country_currency\": {\r\n    \"code\": \"EUR\",\r\n    \"symbol\": \"\\u20ac\"\r\n  },\r\n  \"continent\": {\r\n    \"code\": \"EU\",\r\n    \"name\": \"Europe\"\r\n  },\r\n  \"latitude\": \"41.4181\",\r\n  \"longitude\": \"2.1993\"\r\n}\r\n```\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs the library is officially built on top of IPinfo's API service, it is hard to distinguish this Python project from similar ones. However, there are additional advantages to using the library instead of accessing the API directly:\r\n\r\n- The library has built-in support for native bulk operations, allowing for efficient enrichment of IP metadata on a large scale without the need for sequential API calls.\r\n- The API does not provide country-specific information.\r\n- The library handles asynchronous operations internally.\r\n- Both Python and this library offer caching support, which is not available at the API level.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f8a88c0a76e0a4e942",
    "number": 2558,
    "body": "## What is this Python project?\r\n\r\nIP2Location.IO Python SDK allows user to query for an enriched data set based on IP address and provides WHOIS lookup API that helps users to obtain domain information.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- It provides the latest geolocation information of an IP address.\r\n- It provides WHOIS lookup which others didn't have.\r\n- It doesn't require excessive database download.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84f9a88c0a76e0a4e943",
    "number": 2557,
    "body": "## What is this Python project?\r\n\r\nPymox is mocking on steroids. It's a powerful mock object framework for Python, providing many tools to help with your unit tests so you can write them in an easy, quick, and intuitive way.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Provides a clear separation between expectations (https://github.com/ivancrneto/pymox?tab=readme-ov-file#new-elegant-way)\r\n* Easy way to set multiple calls with different parameters and return values (https://github.com/ivancrneto/pymox?tab=readme-ov-file#multiple-times)\r\n* Has comparators, allowing comparison of parts of parameters (https://github.com/ivancrneto/pymox?tab=readme-ov-file#comparators)\r\n* Has a great developer experience\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84faa88c0a76e0a4e944",
    "number": 2556,
    "body": "## What is this Python project?\r\n\r\nTruss is an open source model packaging framework for specifying a model server for an ML model from generative models like Mistral to data science models using tools like XGBoost.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTruss is agnostic toward model serving engine (VLLM, TRT-LLM, TGI, etc), model framework (transformers, diffusors, data science frameworks like XGBoost), and i/o spec, offering substantial flexibility and interoperability with other open source tools. As a pure Python tool, it does not require local Docker like most model serving frameworks.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Si"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84fba88c0a76e0a4e945",
    "number": 2555,
    "body": "## What is this Python project?\r\n\r\n[Qrlew](https://qrlew.github.io/) (/ˈkɝlu/) is the [open source library](https://github.com/Qrlew) that rewrites SQL queries into privacy-preserving variants using [Differential Privacy (DP)](https://en.wikipedia.org/wiki/Differential_privacy).\r\n\r\nUse Qrlew if you want to bring privacy guarantees to your SQL pipelines. It is:\r\n- **SQL-to-SQL**: Qrlew turns SQL queries into differentially-private SQL queries that can be executed at scale on many SQL datastore, in many SQL dialects.\r\n- **Feature-rich**: Qrlew covers the broadest range of SQL queries, including JOIN and nested queries\r\n- **Privacy-optimized**: Qrlew keeps track of tight bounds and ranges throughout each step, minimizing the amount of noise needed to achieve differential privacy.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\r\nThere are a few existing open-source libraries for differential privacy.\r\n\r\nSome libraries focus on deep learning and *DP-SGD*, such as: *Opacus*, *Tensorflow Privacy* or *Optax's DP-SGD*. [Qrlew](https://qrlew.github.io/) has a very different goal: analytics and SQL.\r\n\r\n*GoogleDP* is a library implementing many differentially private mechanisms in various languages (C++, Go and Java).\r\n*IBM's diffprivlib* is also a rich library implementing a wide variety of DP primitives in python and in particular many DP versions of classical machine learning algorithms. \r\nThese libraries provide the bricks for experts to build DP algorithms. [Qrlew](https://qrlew.github.io/) has a very different approach, it is a high level tool designed to take queries written in SQL by a data practitioner with no expertise in privacy and to rewrite them into DP equivalent able to run on any SQL-enabled data store. [Qrlew](https://qrlew.github.io/) implemented very few DP mechanisms to date, but automated the whole process of rewriting a query, while these library offer a rich variety of DP mechanism, and give full control to the user to use them as they wish.\r\n\r\nGoogle built several higher-level tools on top of.\r\n*PrivacyOnBeam* is a framework to run DP jobs written in Apache Beam with its Go SDK.\r\n*PipelineDP* is a framework that let analysts write Beam-like or Spark-like programs and have them run on Apache Spark or Apache Beam as back-end. It focuses on the Beam and Spark ecosystem, while [Qrlew](https://qrlew.github.io/) tries to provide an SQL interface to the analyst and runs on SQL-enabled back-ends (including Spark, a variety of data warehouses, and more traditional databases).\r\nZetaSQL, gives the user a way to write SQL-like queries and have them executed on tables using GoogleDB custom code, so it is not  compatible with any SQL data store and support relatively simple queries only.\r\n\r\n*OpenDP* is a powerful Rust library with a python bindings. It offers many possibilities of building complex DP computations by composing basic elements. Nonetheless, it require both expertise in privacy and to learn a new API to describe a query. Also, the computations are handled by the Rust core, so it does not integrate easily with existing data stores and may not scale well either.\r\n\r\n*Tumult Analytics* shares many of the nice composable design of OpenDP, but runs on Apache Spark, making it a scalable alternative to OpenDP. Still, it require the learning of a specific API (close to that of Spark) and cannot leverage any SQL back-end.\r\n\r\n*SmartNoise SQL* is a library that share some of the design choices of [Qrlew](https://qrlew.github.io/). An analyst can write SQL queries, but the scope of possible queries is relatively limited: no `JOIN`s, no sub-queries, no CTEs (`WITH`) that [Qrlew](https://qrlew.github.io/) supports. Also, it does not run the full computation in the DB so the integration with existing systems may not be straightforward.\r\n\r\nOther systems such as *PINQ* and *Chorus* are prototypes that do not seem to be actively maintained. *Chorus* shares many of the design goals of [Qrlew](https://qrlew.github.io/), but requires post-processing outside of the DB, which can make the integration more complex on the data-owner side (as the computation happens in two distinct places).\r\n\r\nBeyond that, [Qrlew](https://qrlew.github.io/) brings unique functionalities, such as:\r\n* advanced automated range propagation;\r\n* the possibility to automatically blend in synthetic data;\r\n* advanced privacy unit definition capabilities across many related tables;\r\n* the possibility for the non-expert to simply write standard SQL, but for the DP aware analyst to improve its utility by adding `WHERE x < b` or `WHERE x IN (1,2,3)` to give hints to the [Qrlew](https://qrlew.github.io/);\r\n* all the compute happens in the DB.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84fca88c0a76e0a4e946",
    "number": 2554,
    "body": "## What is this Python project?\r\n\r\nRemove abandoned project. Looks like it died 8 years, with no contributions since then\r\n![image](https://github.com/vinta/awesome-python/assets/6220504/0dab14ae-3304-4a5f-9b1f-8c3c8247b9dd)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\nNA\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks for the quick review! \r\n\r\nI think a great awesome list for a programming language is a starting point to find awesome packages that one can use. I don't expect to encounter packages that are dead and cannot be used, I'd call that _not so awesome_! Or maybe, formerly-awesome or _awesome-abandoned-packages_.\r\n\r\nIn this specific case:\r\n- Abandoned 8 years ago - we agree on that\r\n- Outdated - well, the package is for payment integrations, my best guess is that a bunch of those integrations will be entirely broken due to underlying API changes. Let's just say, I won't be using it!\r\n\r\nThanks for the link - though I don't know how it relates. The link is about Github retention policy. I would suggest that the retention policy for _awesome_ software might have some stricter requirements like, the project is maintained, usable and the documentation site doesn't return a 404 e.g. like [merchants](https://www.agiliq.com/demo/merchant).\r\n\r\nI guess we have different definitions of _awesome_! Would be good to update the contribution guide as to what criteria should be met for an entry to be removed. Here are some that have been removed on this list, for being abandoned much more recently\r\n- https://github.com/vinta/awesome-python/pull/2297 \r\n- https://github.com/vinta/awesome-python/pull/274\r\n\r\n@st4r-w4rs what makes this PR different to the above two examples?\r\n\r\nHave a good weekend!",
      "Anytime!\r\n\r\nI agree with you that their webpage returns a 404 error; however, their main webpage is still up, and their code is available on their GitHub page.\r\n\r\nRegarding the term \"outdated,\" I stated that being abandoned doesn't automatically mean outdated. It might be, but it also might not be. So in other words, I neither denied nor confirmed whether it is outdated or not. What I intended to convey is that just because a project is \"abandoned\" doesn't instantly render it unusable or, in other words, \"outdated\". If you choose not to use it, that is your decision, but you are free to fork the project and work on its code. That is the spirit of open source, after all... :)\r\n\r\nAbout the link that you don't know how it relates... : Once again, I think was deliberately clear enough earlier to prevent any future disagreement, and yet here we are... So, as I said, the topic is indirect and doesn't directly relate to this specific PR, but in general there is a logical (common sense) interpretation concept related to the topic here (hence the word \"indirect\").\r\n\r\nYes, we both agree that the contributor guide should be updated to be a bit more specific and straightforward.\r\n\r\n@ucg8j, the previous PR acceptances do not change the fact of my own individual position, which I still maintain.\r\n\r\nYou too have a nice weekend!",
      "Thank you sure did 😉SalinasOn Jan 19, 2024, at 2:13 PM, Vajda Örs ***@***.***> wrote:﻿\r\nAnytime!\r\nI agree with you that their webpage returns a 404 error; however, their main webpage is still up, and their code is available on their GitHub page.\r\nRegarding the term \"outdated,\" I stated that being abandoned doesn't automatically mean outdated. It might be, but it also might not be. So in other words, I neither denied nor confirmed whether it is outdated or not. What I intended to convey is that just because a project is \"abandoned\" doesn't instantly render it unusable or, in other words, \"outdated\". If you choose not to use it, that is your decision, but you are free to fork the project and work on its code. That is the spirit of open source, after all... :)\r\nAbout the link that you don't know how it relates... : Once again, I think was deliberately clear enough earlier to prevent any future disagreement, and yet here we are... So, as I said, the topic is indirect and doesn't directly relate to this specific PR, but in general there is a logical (common sense) interpretation concept related to the topic here (hence the word \"indirect\").\r\nYes, we both agree that the contributor guide should be updated to be a bit more specific and straightforward.\r\n@ucg8j, the previous PR acceptances do not change the fact of my own individual position, which I still maintain.\r\nYou too have a nice weekend!\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you are subscribed to this thread.Message ID: ***@***.***>",
      "Closing this PR as the maintainer @vinta removed this package in a clean up see this\r\ncommit/diff: https://github.com/vinta/awesome-python/commit/8524f28e77fe169bd248c0a18ea7635ee43d9434#diff-b335630551682c19a781afebcf4d07bf978fb1f8ac04c6bf87428ed5106870f5L524"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84fda88c0a76e0a4e947",
    "number": 2553,
    "body": "## What is this Python project?\r\n\r\nPyMuPDF is a Python binding for MuPDF, a lightweight PDF, XPS, and E-book viewer and toolkit. It enables efficient PDF handling, offering features such as rendering, text extraction, and image manipulation.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike alternatives such as pypdf, pdfminer, and pypdf2, PyMuPDF distinguishes itself with a focus on speed and efficiency. It leverages the MuPDF engine for swift PDF processing, making it a lightweight and high-performance choice for tasks such as rendering and text extraction. Benchmark data is available both [here](https://github.com/py-pdf/benchmarks?tab=readme-ov-file) and [here](https://pymupdf.readthedocs.io/en/latest/about.html#performance).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-PyMuPDF",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84fda88c0a76e0a4e948",
    "number": 2552,
    "body": "## What is this Python project?\r\n\r\nImagine that all the libraries in the world are already installed on your computer. Just do an `import` in your code and the library will automatically pull up for use. You can distribute your scripts in a single file without the complex machinery around it that determines how to work with dependencies.\r\n\r\nOther features:\r\n\r\n⚡ You can use 2 different versions of the same library in the same program.\r\n⚡ You can use incompatible libraries in the same project, as well as libraries with incompatible/conflicting dependencies.\r\n⚡ The library does not leave behind \"garbage\". After the end of the program, no additional files remain in the system.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAll other dependency management tools are difficult for the user. Only [`instld`](https://github.com/pomponchik/instld) hides this complexity as if it doesn't exist at all.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84fea88c0a76e0a4e949",
    "number": 2551,
    "body": "## What is this Python project?\r\n\r\nStreamlit is a Python-based library that allows data scientists to create and share machine learning applications. Here are some of its key features:\r\n\r\n- **Simplicity**: Streamlit's API is designed to be intuitive, which makes it easy to build data apps without needing any web development experience.\r\n- **Interactivity**: Streamlit allows you to add widgets for user interaction. Adding a widget is as simple as declaring a variable.\r\n- **Compatibility**: Streamlit is compatible with most Python libraries, including pandas, matplotlib, seaborn, plotly, Keras, PyTorch, and SymPy.\r\n- **Deployment**: Streamlit provides a platform to deploy, manage, and share your apps.\r\n- **Data caching**: Streamlit simplifies and speeds up computation pipelines by caching data.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nStreamlit is often compared with other Python libraries for building data apps, such as Gradio, Dash, Panel, Flask, and Jupyter. Here are some key differences:\r\n\r\n- **Gradio**: Like Streamlit, Gradio is a Python library for creating interactive web UIs. However, Gradio is more focused on machine learning demos, while Streamlit is designed for creating data dashboards.\r\n- **Dash**: Dash is a low-code framework for building data apps with the Plotly plotting library. It's a good choice for building production-ready data dashboards for larger companies.\r\n- **Panel**: Panel is a Python library for creating flexible dashboards and web apps. It's a good choice if you already have Jupyter Notebooks and need more flexibility.\r\n- **Flask**: Flask is a more general framework for web application development. It's a good choice if you want to build your own solution from the ground up.\r\n- **Jupyter**: Jupyter is a notebook that data scientists use for data analysis and manipulation. It's a good choice if your team is very technical.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f84ffa88c0a76e0a4e94a",
    "number": 2550,
    "body": "## What is this Python project?\r\n\r\nVanna is an MIT-licensed open-source Python RAG (Retrieval-Augmented Generation) framework for SQL generation and related functionality.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike LangChain, this is a specialized tool for AI SQL generation and related functionality. There are core abstractions that are related to SQL generation, which means that many user interfaces can be built upon those abstractions:\r\nhttps://github.com/vanna-ai/vanna-streamlit\r\nhttps://github.com/vanna-ai/vanna-chainlit\r\nhttps://github.com/vanna-ai/vanna-flask\r\n\r\nThe focus is on simplicity so that data analysts are able to use it quickly. It does not depend on Docker at all. The (optional) default web interface is launchable from *inside* Jupyter notebooks:\r\nhttps://vanna.ai/docs/app.html\r\n\r\n![8251g701uko1mygtalvz](https://github.com/vinta/awesome-python/assets/7146154/9bbad305-3d2a-4b52-8ac8-b38c859c8d88)\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8500a88c0a76e0a4e94b",
    "number": 2549,
    "body": "## What is this Python project?\r\n\r\n[Pulumi](https://www.pulumi.com/) is an open-source tool that allows you to build, manage, and scale your infrastructure by defining cloud resources in python code. Pulumi supports all major cloud providers - AWS, Azure, and GCP, along with over 150 providers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike other IaC solutions such as Terraform or AWS CDK, Pulumi is open-source, cloud-agnostic, and supports all popular programming languages, including of course, Python.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8501a88c0a76e0a4e94c",
    "number": 2548,
    "body": "This is just a small typo fix in the README. Thank you!",
    "head_branch": "fix-readme-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8502a88c0a76e0a4e94d",
    "number": 2547,
    "body": "\r\n## What is this Python project?\r\n\r\nLogstash pipeline parser is Parsing expression grammar (PEG) and Abstract syntax tree (AST) for [Logstash](https://www.elastic.co/logstash) pipeline syntax - [documentation](https://tomaskoutek.github.io/logstash-pipeline-parser/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no other project for parsing the Logstash pipeline in python (currently).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8502a88c0a76e0a4e94e",
    "number": 2546,
    "body": "fixed non working link for click lib",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2546 from EpicSprout/master\n\nUpdate README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8503a88c0a76e0a4e94f",
    "number": 2545,
    "body": "Added fastbots library.\r\n\r\n[Fastbots](https://ubertidavide.github.io/fastbots/) is a simple library designed for rapid bot and scraper development using Selenium and the POM (Page Object Model) design.\r\nIt enhances productivity by allowing developers to focus solely on scraping, reducing boilerplate code, and eliminating the need for direct driver management-related code, thanks to browser-independent settings.\r\nEven if site locators change, this library doesn't require modifications to the code; adjustments can be made solely in the configuration.\r\n\r\nfastbots is also fully compatible with all selenium functions, refer to [selenium official documentation](https://www.selenium.dev/documentation/webdriver/elements/interactions/) for more details.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Change the name of the pr. For example add 'package name'"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8504a88c0a76e0a4e950",
    "number": 2544,
    "body": "## What is this Python project?\r\n\r\nLink to project [here](https://fusion-engine.tech/)\r\n\r\nFusion engine is a game engine that is focused to be as easy as possible, but to still be powerfull enough for most games. It's leveraging different python libraries to make it powerfull. The api is made for ease of use and is really open to beginners. For more pro's it offers more \"general needed\" features, so you won't have to implement it yourself.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\nEase of use:\r\nFusion is made in mind to be as easy as possible, while other libraries have a bigger learning curve. This makes it more approachable to beginners. \r\n\r\nVery feature-full:\r\nIncludes a lot of feautures to make your development a lot easier. It removes the requirement to implement everything yourself. Other libraries often require you to implement a lot of things by yourself. \r\n\r\nFast:\r\nFusion is build around PyOpenGL and Pygagme-ce. We are using the powerful library pygame for windowing and events, while the rendering is happening in PyOpenGL for fast rendering. Due to this our engine is fast, but still pretty light.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Looks awesome, bright future ahead 😀 ",
      "YOOOOOO",
      "@vinta this has reached 20 thumbs please merge. Thx!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8505a88c0a76e0a4e951",
    "number": 2543,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8506a88c0a76e0a4e952",
    "number": 2542,
    "body": "## What is this Python project?\r\nEnable to interact with website frontend instead of Javascript !\r\nmore info:\r\n- https://github.com/brython-dev/brython#brython\r\n- https://brython.info\r\n\r\n## What's the difference between this Python project and similar ones?\r\nEnumerate comparisons:\r\nThere is no equivalence, other way to have Python in the webbrowser are heavier (in term of size, resources, or learning curve) \r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you @Taterseth to have approved this addition.\r\n\r\nis there something that I have to do in order to finalize the merging ?",
      "I don't think so ",
      "How do I get them to load to my wallets \n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8506a88c0a76e0a4e953",
    "number": 2541,
    "body": "## What is this Python project?\r\n\r\nSuperDuperDB is an open-source framework for integrating AI directly with major databases, including streaming inference, scalable model training, and vector search.\r\n\r\nSuperDuperDB is not a database. SuperDuperDB eliminates complex MLOps pipelines, specialized vector databases - and the need to migrate and duplicate data by integrating AI at the data's source, directly on top of your existing data infrastructure. This massively simplifies building and managing AI applications.\r\n\r\nCurrently Supported AI: Any model from PyTorch, Sklearn, HuggingFace as well as AI APIs such as OpenAI, Anthrophic, Cohere.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- SuperDuperDB enables to build and manage even the most complex AI applications on existing data infrastructure.\r\n- Anyone can integrate and train AI models, integrate AI APIs and etc.\r\n- Simplicity (One line of code of python to connect several AI to any database)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8507a88c0a76e0a4e954",
    "number": 2540,
    "body": "## What is this Python project?\r\n\r\nAn open-source Django admin panel based on bootstrap 5.  Developer-friendly, rich with features, and highly customizable dashboard any developer can ever need.\r\n\r\n**Features:**\r\n\r\n- Based on latest Django 5\r\n- Bootstrap 5.3.2\r\n- Basic cards\r\n- Fully Responsive Layout\r\n- Organized Folder Structure\r\n- Clean & Commented Code\r\n- Well Documented\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is based on latest Bootstrap 5.3.2 & Django 5 . Besides, it is highly customizable and easy to use admin panel to develop any kind of web apps. Moreover, it has MIT licence.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8508a88c0a76e0a4e955",
    "number": 2539,
    "body": "## What is this Python project?\r\n\r\nAdd Robyn web frameworks\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is the fastest one according to Techempower and follows a unique approach of using a Rust runtime.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8509a88c0a76e0a4e956",
    "number": 2538,
    "body": "## What is this Python project?\r\n\r\nHyperparameter is a versatile hyperparameter management library designed for machine learning researchers and system developers, offering a unified and user-friendly interface across Python, Rust, and C++, with a focus on simplicity and performance.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nHyperparameter provides strong configuration management capabilities, focusing on simplicity and ease of use. It employs a straightforward approach with the param_scope and auto_param features to enable users to define and adjust hyperparameters seamlessly. Hyperparameter prioritizes a user-friendly experience and straightforward configuration setup.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_hyperparameter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f850aa88c0a76e0a4e957",
    "number": 2537,
    "body": "## What is this Python project?\r\n\r\nScikit-learn is a machine learning library for Python that provides simple and efficient tools for data analysis and modeling. It is built on NumPy, SciPy, and Matplotlib and is designed to be user-friendly, accessible, and extensible.\r\n\r\nKey Features:\r\n\r\nWide Range of Algorithms:\r\nScikit-learn includes a variety of machine learning algorithms for classification, regression, clustering, dimensionality reduction, and more.\r\n\r\nConsistent API:\r\nThe library provides a consistent and easy-to-use API, making it straightforward to switch between different algorithms and models.\r\n\r\nData Preprocessing:\r\nIt offers tools for data preprocessing, including scaling, normalization, and feature extraction, ensuring that data is appropriately prepared for modeling.\r\n\r\nModel Evaluation:\r\nScikit-learn includes functions for model evaluation, parameter tuning, and cross-validation, making it easy to assess and optimize the performance of machine learning models.\r\n\r\nIntegration with NumPy and SciPy:\r\nBeing built on top of NumPy and SciPy, scikit-learn seamlessly integrates with these libraries, allowing for efficient numerical operations and scientific computing.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDifference from Similar Projects:\r\n\r\nEase of Use:\r\nScikit-learn is renowned for its user-friendly design, making it an excellent choice for users who prioritize simplicity and quick implementation.\r\n\r\nCommunity Support:\r\nScikit-learn has a large and active community, contributing to ongoing development, providing support, and ensuring a wealth of resources for users.\r\n\r\nDocumentation:\r\nThe project boasts extensive and well-maintained documentation, offering clear explanations, examples, and guides for users at all levels.\r\n\r\nInteroperability:\r\nScikit-learn plays well with other Python libraries and frameworks, facilitating seamless integration into various data science and machine learning workflows.\r\n\r\nVersatility:\r\nWith a broad spectrum of algorithms, scikit-learn covers a wide range of machine learning tasks, making it suitable for both beginners and experts working on diverse projects.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "It can bring that",
      "But I don't remember you anymore?\r\n\r\nLe sam. 27 juil. 2024 19:04, red ***@***.***> a écrit :\r\n\r\n> ***@***.**** approved this pull request.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/vinta/awesome-python/pull/2537#pullrequestreview-2203210229>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BEPCY42K37JT7THJPMJJ2OTZOPHJHAVCNFSM6AAAAABABZ5G2KVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMZDEMBTGIYTAMRSHE>\r\n> .\r\n> You are receiving this because you commented.Message ID:\r\n> ***@***.***>\r\n>\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f850ba88c0a76e0a4e958",
    "number": 2536,
    "body": "Added the pip module, auto-py-to-exe.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\nauto-py-to-exe is a .py to .exe converter using a simple graphical interface and PyInstaller in Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- It has a simple-user friendly GUI making it easily usable by anyone.\r\n- The file conversion from .py to .exe makes it easily usable by anyone who wants to use your product.\r\n- Consumers don't need any programming knowledge or code editor to use the application once converted into .exe format.\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\r\n\r\nDapatkan Outlook untuk Android<https://aka.ms/AAb9ysg>\r\n________________________________\r\nFrom: gamesgpo ***@***.***>\r\nSent: Saturday, December 2, 2023 2:31:40 AM\r\nTo: vinta/awesome-python ***@***.***>\r\nCc: Subscribed ***@***.***>\r\nSubject: Re: [vinta/awesome-python] Added auto-py-to-exe (PR #2536)\r\n\r\n\r\n@gamesgpo approved this pull request.\r\n\r\n—\r\nReply to this email directly, view it on GitHub<https://github.com/vinta/awesome-python/pull/2536#pullrequestreview-1760367159>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/BDHXOJ6NLPS4DJWE2UKUDPLYHIPAZAVCNFSM6AAAAABAAI7E62VHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMYTONRQGM3DOMJVHE>.\r\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\r\n",
      "Bitcoin address \n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f850ba88c0a76e0a4e959",
    "number": 2535,
    "body": "## What is this Python project?\r\n\r\nAn extremely fast Python linter and code formatter, written in Rust.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- 10-100x faster than existing linters (like Flake8) and formatters (like Black)\r\n- Installable via pip\r\n- pyproject.toml support\r\n- Python 3.12 compatibility\r\n- Drop-in parity with [Flake8](https://docs.astral.sh/ruff/faq/#how-does-ruff-compare-to-flake8), isort, and Black\r\n- Built-in caching, to avoid re-analyzing unchanged files\r\n- Fix support, for automatic error correction (e.g., automatically remove unused imports)\r\n- Over [700 built-in rules](https://docs.astral.sh/ruff/rules/), with native re-implementations of popular Flake8 plugins, like flake8-bugbear\r\n- First-party [editor integrations](https://docs.astral.sh/ruff/integrations/) for [VS Code](https://github.com/astral-sh/ruff-vscode) and [more](https://github.com/astral-sh/ruff-lsp)\r\n- Monorepo-friendly, with [hierarchical and cascading configuration](https://docs.astral.sh/ruff/configuration/#pyprojecttoml-discovery)\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Duplicate for #2292 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f850ca88c0a76e0a4e95a",
    "number": 2534,
    "body": "## What is this Python project?\r\n\r\nCustomTkinter is a python UI-library based on Tkinter, which provides new, modern and fully customizable widgets.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n-- With CustomTkinter you'll get a consistent and modern look across all desktop platforms (Windows, macOS, Linux).\r\n-- They are created and used like normal Tkinter widgets and can also be used in combination with normal Tkinter elements. \r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Nice"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f850da88c0a76e0a4e95b",
    "number": 2533,
    "body": "As mentioned in this discussion https://github.com/pylint-dev/pylint/issues/7384 the pylint dot org domain is no longer associated with the python linter. Change the name to the one linked in the GitHub Repo.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2533 from massi1008/patch-1\n\nFix pylint link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f850ea88c0a76e0a4e95c",
    "number": 2532,
    "body": "The links that were previously were not safe as they were using the http protocol . This PR changes the protocol to 'https' in some links\r\n**The new URL uses \"https://\" for a secure connection.**\r\nThis change is a minor improvement that enhances the user experience\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "The link to `click` seems to not be right anymore. According to pypi.org the current website is `https://palletsprojects.com/p/click/`.\r\n\r\nThere also seems to be a problem with `docopt`. Its certificate seems to be wrong - I get a warning in my browser.\r\nBoth [pypi](https://pypi.org/project/docopt/) and the [Github page](https://github.com/docopt) use a non-http**s** link too. Given that the website is text only and there is no input https doesn't seem necessary for me anyway. \r\n\r\nGiven that you touched those links it would be great if you could fix them in this PR.",
      "> The link to `click` seems to not be right anymore. According to pypi.org the current website is `https://palletsprojects.com/p/click/`.\r\n> \r\n> There also seems to be a problem with `docopt`. Its certificate seems to be wrong - I get a warning in my browser. Both [pypi](https://pypi.org/project/docopt/) and the [Github page](https://github.com/docopt) use a non-http**s** link too. Given that the website is text only and there is no input https doesn't seem necessary for me anyway.\r\n> \r\n> Given that you touched those links it would be great if you could fix them in this PR.\r\n\r\nYes I have changed them accordingly\r\n",
      "@vinta Can you please review the PR?"
    ],
    "commit_messages": [
      "Merge pull request #2532 from Atharva1723/master\n\nUpdated some links in README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f850fa88c0a76e0a4e95d",
    "number": 2531,
    "body": "What is this Python project?\r\n\r\nhttps://github.com/Dicklesworthstone/swiss_army_llama The Swiss Army Llama is a comprehensive toolkit for working with local Large Language Models (LLMs). It uses FastAPI to provide REST endpoints for a variety of tasks, including text embeddings, completions, semantic similarity measurements, and more. It supports a wide range of document types, including those requiring OCR, and audio files for transcription. Embeddings are cached in SQLite for efficiency, and RAM Disks are used for quick loading of multiple LLMs. The toolkit is accessible via a Swagger UI and integrates with various technologies like FAISS for semantic search and the Fast Vector Similarity library for advanced similarity measures.\r\n\r\nWhat's the difference between this Python project and similar ones?\r\n\r\n1. FastAPI Integration: Swiss Army Llama is fully integrated with FastAPI, providing a Swagger page for easy access and interaction with its REST API, a feature not commonly found in similar projects.\r\n2. Comprehensive Caching: The project implements automatic caching for all processes, significantly enhancing efficiency and reducing redundant computations. This level of automatic caching is not standard in similar tools.\r\n3. RAM Disk Utilization: It uniquely uses RAM Disk to accelerate the loading of models, providing a substantial speed advantage in accessing and using various LLMs.\r\n4. Broad File Format Support with Textract: The integration with Textract allows the Swiss Army Llama to handle a wide array of file formats, far exceeding the capabilities of similar projects which often have limited file format support.\r\n5. Integration with Whisper: The project is integrated with OpenAI's Whisper model for advanced audio transcription, a feature that is not typically included in similar LLM toolkits.\r\n6. BNF Grammar Tools: It includes specialized tools for working with Backus-Naur Form (BNF) grammars, offering unique capabilities in generating structured LLM outputs based on specific grammar rules.\r\n7. Support for Token-Level Embeddings: In addition to standard embeddings, Swiss Army Llama supports token-level embeddings, providing more nuanced data representation and analysis. This level of detail in embeddings is not commonly available in similar projects.\r\n\r\nFeatures:\r\n\r\nVersatile File Processing: Supports an extensive array of file types including PDFs, Word documents, images, and audio files, with advanced text preprocessing and OCR capabilities.\r\nComprehensive Embedding Features: Offers both fixed-sized and token-level embeddings, with the unique introduction of combined feature vectors for comparing strings of unequal length.\r\nAdvanced Semantic Search: Combines FAISS vector searching with sophisticated similarity measures like spearman_rho, kendall_tau, and jensen_shannon_similarity, enabling nuanced text comparisons.\r\nEfficient Caching and RAM Disk Usage: Implements efficient caching in SQLite and optional RAM Disk usage for faster model loading and execution.\r\nComprehensive Logging and Real-Time Monitoring: Features a real-time log file viewer in the browser, and uses Redis for efficient request handling and logging.\r\nInteractive and User-Friendly Interface: Integrates with Swagger UI for easy access and management of large result sets, making it user-friendly and easily integrable into applications.\r\nCustomizable and Scalable: Built on FastAPI, it is highly scalable and customizable with configurable settings for response formats and parallel inference.\r\nMultiple Model and Measure Support: Accommodates a variety of models and measures, providing flexibility and customization according to user needs.\r\nSpecialized Grammar-Enforced Text Completions: Offers the ability to generate multiple text completions with specified grammar, enhancing structured LLM output.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "Added-Swiss-Army-Llama",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f850fa88c0a76e0a4e95e",
    "number": 2530,
    "body": "Added Level Up Your Python.\r\nhttps://henryiii.github.io/level-up-your-python/notebooks/0%20Intro.html\r\n\r\n## What is this Python project?\r\n\r\nThis is a tutorial website describing how to code better.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike any other tutorials, this one is for beginners ready to move up learning intermediate python.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Cosmo og\n",
      "> Cosmo og\n> \n\nsorry, wdym?",
      "Need a generator codes for Web site gift card information with the latest version of the latest numbers that work for Amazon Walmart wish casino games and more",
      "> > Cosmo og\n> > \n> \n> sorry, wdym?\n\nNtg, chill\n",
      "site_name: Awesome Python \n site_url: https://awesome-python.com \n site_description: A curated list of awesome Python frameworks, libraries and software \n site_author: Vinta Chen \n repo_name: vinta/awesome-python \n repo_url: https://github.com/vinta/awesome-python \n theme: \n   name: material \n   palette: \n     primary: red \n     accent: pink \n extra: \n   social: \n     - type: github \n       link: https://github.com/vinta \n     - type: twitter \n       link: https://twitter.com/vinta \n     - type: linkedin \n       link: https://www.linkedin.com/in/vinta \n google_analytics: \n   - UA-510626-7 \n   - auto \n extra_css: \n     - css/extra.css \n nav: \n   - \"Life is short, you need Python.\": \"index.md\"",
      "في الأحد، 31‏/12‏/2023 7:51 م، كتب Alouk M ***@***.***>:\r\n\r\n>\r\n",
      "في الأحد، 31‏/12‏/2023 7:51 م، كتب Alouk M ***@***.***>:\r\n\r\n>\r\n> في الأحد، 31‏/12‏/2023 7:51 م، كتب Alouk M ***@***.***>:\r\n>\r\n>>\r\n",
      "Closing this"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8510a88c0a76e0a4e95f",
    "number": 2529,
    "body": "UPDATED:\r\nLine 191: [BitBake](http://www.yoctoproject.org/docs/1.6/bitbake-user-manual/bitbake-user-manual.html) \r\nOld version docs no longer at this URL.\r\n\r\nLine 415: [psycopg2](http://initd.org/psycopg/)\r\nPermanently moved to new site.\r\n\r\nLine 571: [shoop](https://www.shuup.com/en/)\r\n/en/ is 404, removed.\r\n\r\nLine 674: [PyGObject](https://wiki.gnome.org/Projects/PyGObject) \r\nPermanently moved to new URL.\r\n\r\nLine 698: [Cocos2d](http://cocos2d.org/)\r\nPermanently moved to new URL.\r\n\r\nLine 1008: [vibora](https://vibora.io/)\r\nThis library was recently archived, also homepage is 404 but docs.vibora.io is functional.\r\n\r\nLine 1039: [Open Babel](http://openbabel.org/wiki/Main_Page) \r\nPermanently moved to new URL.\r\n\r\nREMOVED:\r\nLine 427: [py2neo](https://py2neo.org/)\r\nProject is EOL.\r\n\r\nLine 765: [pygram](https://github.com/ajkumar25/pygram) \r\nLibrary no longer exists?\r\n\r\nLine 1342: [Pythonic News](https://news.python.sc/) \r\nEntire site is 404.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "But why is this?\r\n\r\nOn Tue, Nov 7, 2023, 9:44 PM CAPS LOCK DAVE ***@***.***>\r\nwrote:\r\n\r\n> UPDATED:\r\n> Line 191: BitBake\r\n> <http://www.yoctoproject.org/docs/1.6/bitbake-user-manual/bitbake-user-manual.html>\r\n> Old version docs no longer at this URL.\r\n>\r\n> Line 415: psycopg2 <http://initd.org/psycopg/>\r\n> Permanently moved to new site.\r\n>\r\n> Line 571: shoop <https://www.shuup.com/en/>\r\n> /en/ is 404, removed.\r\n>\r\n> Line 674: PyGObject <https://wiki.gnome.org/Projects/PyGObject>\r\n> Permanently moved to new URL.\r\n>\r\n> Line 698: Cocos2d <http://cocos2d.org/>\r\n> Permanently moved to new URL.\r\n>\r\n> Line 1008: vibora <https://vibora.io/>\r\n> This library was recently archived, also homepage is 404 but\r\n> docs.vibora.io is functional.\r\n>\r\n> Line 1039: Open Babel <http://openbabel.org/wiki/Main_Page>\r\n> Permanently moved to new URL.\r\n>\r\n> REMOVED:\r\n> Line 427: py2neo <https://py2neo.org/>\r\n> Project is EOL.\r\n>\r\n> Line 765: pygram <https://github.com/ajkumar25/pygram>\r\n> Library no longer exists?\r\n>\r\n> Line 1342: Pythonic News <https://news.python.sc/>\r\n> Entire site is 404.\r\n>\r\n> --\r\n>\r\n> Anyone who agrees with this pull request could submit an *Approve* review\r\n> to it.\r\n> ------------------------------\r\n> You can view, comment on, or merge this pull request online at:\r\n>\r\n>   https://github.com/vinta/awesome-python/pull/2529\r\n> Commit Summary\r\n>\r\n>    - 6d8b6c6\r\n>    <https://github.com/vinta/awesome-python/pull/2529/commits/6d8b6c6ed4888ede736065a3359151e8047bdcf6>\r\n>    Fixed a Number of Dead Links\r\n>\r\n> File Changes\r\n>\r\n> (1 file <https://github.com/vinta/awesome-python/pull/2529/files>)\r\n>\r\n>    - *M* README.md\r\n>    <https://github.com/vinta/awesome-python/pull/2529/files#diff-b335630551682c19a781afebcf4d07bf978fb1f8ac04c6bf87428ed5106870f5>\r\n>    (17)\r\n>\r\n> Patch Links:\r\n>\r\n>    - https://github.com/vinta/awesome-python/pull/2529.patch\r\n>    - https://github.com/vinta/awesome-python/pull/2529.diff\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/vinta/awesome-python/pull/2529>, or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AXOXHUPCUHPPW6GH4URPE73YDL5YZAVCNFSM6AAAAAA7CGMIBSVHI2DSMVQWIX3LMV43ASLTON2WKOZRHE4DENRWGAZTMMY>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n"
    ],
    "commit_messages": [
      "Merge pull request #2529 from DAVEALLCAPS/master\n\nFixed a Number of Dead Links"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8511a88c0a76e0a4e960",
    "number": 2528,
    "body": "## What is this Python project?\r\n\r\n[pyTermTk](https://github.com/ceccopierangiolieugenio/pyTermTk) is a self contained TUI library in a qt/tkinter api style cross compatible and with many built in widgets, i.e.:\r\n\r\nhttps://github.com/vinta/awesome-python/assets/8876552/52e77f6d-e0cf-49d3-b134-bf1b310f297b\r\n\r\n\r\nhttps://github.com/vinta/awesome-python/assets/8876552/a5af4989-ca1a-4d04-8164-0b02362c090e\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTextual is a close one, it use a different approach than pyTermTk.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Nice vids",
      "Thanks\r\n",
      "Any progress about merging this Pull Request?\r\n\r\nThis is the latest update on pyTermTk,\r\nThe new Table Widget\r\n\r\nhttps://github.com/user-attachments/assets/0cab2610-5039-44b0-b1ea-ae8aa86aed82\r\n\r\n",
      "This is the latest update on pyTermTk's showcase,\r\n\r\nhttps://github.com/user-attachments/assets/888e745a-ea00-4d03-b6ec-273319d54ea7\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8512a88c0a76e0a4e961",
    "number": 2526,
    "body": "…h plotting and data manipulation functionality (works with tkinter)\r\n\r\n## What is this Python project?\r\n\r\nIt's a convenient way to add pandas table to GUI\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\nYou can use PyQt5 but for pandastable works with tkinter \r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "pandastable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8513a88c0a76e0a4e962",
    "number": 2525,
    "body": "Included pytime-manager.\r\n\r\n## What is this Python project?\r\n\r\nImproves work with time in Python. Includes a unit converter and over 10 functions for enhanced work with time. Also supports asynchronous mode.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project provides user-friendly functions to work with time. This project provides unit converter, asynchronous functions to work with, and more.\r\n\r\n---------------------------------------\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "? "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8514a88c0a76e0a4e963",
    "number": 2524,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8514a88c0a76e0a4e964",
    "number": 2523,
    "body": "## What is this Python project?\r\n\r\nAdded TextBlob to the NLP libraries. TextBlob is a Simple, Pythonic, text processing--Sentiment analysis, part-of-speech tagging, noun phrase extraction, translation, and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTextBlob stands on the giant shoulders of [NLTK](http://nltk.org/) and [pattern](https://github.com/clips/pattern/), and plays nicely with both.\r\n\r\n[Features](https://github.com/sloria/TextBlob#features)\r\nNoun phrase extraction\r\nPart-of-speech tagging\r\nSentiment analysis\r\nClassification (Naive Bayes, Decision Tree)\r\nTokenization (splitting text into words and sentences)\r\nWord and phrase frequencies\r\nParsing\r\nn-grams\r\nWord inflection (pluralization and singularization) and lemmatization\r\nSpelling correction\r\nAdd new models or languages through extensions\r\nWordNet integration\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\nPlease tag this as hacktoberfest-approved!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I have to say tha I rally do not understand what I do. And even when I guis help me I am not even able to se the repairs fails. A disaster. But many thanks!!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8515a88c0a76e0a4e965",
    "number": 2522,
    "body": "## What is this Python project?\r\n\r\n[Gymnasium](https://github.com/Farama-Foundation/Gymnasium) is the successor of [gym](https://github.com/openai/gym), later of which is no longer being maintained.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nJust the fact that [gym](https://github.com/openai/gym) is no longer maintained and all further developments and fixes will only happen in [Gymnasium](https://github.com/Farama-Foundation/Gymnasium) should be enough to validate this change.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8516a88c0a76e0a4e966",
    "number": 2521,
    "body": "## What is this Python project?\r\n\r\n**[Slideflow](https://github.com/jamesdolezal/slideflow)** is a deep learning library for digital pathology that provides a unified API for building, training, and testing models using Tensorflow or PyTorch.\r\n\r\nSlideflow includes tools for [whole-slide image processing](https://slideflow.dev/slide_processing), customizable deep learning [model training](https://slideflow.dev/training) with dozens of supported architectures, [multi-instance learning](https://slideflow.dev/mil), [self-supervised learning](https://slideflow.dev/ssl), [cell segmentation](https://slideflow.dev/cellseg), explainability tools (including [heatmaps](https://slideflow.dev/evaluation/#heatmaps), [mosaic maps](https://slideflow.dev/posthoc/#mosaic-maps), [GANs](https://slideflow.dev/stylegan/), and [saliency maps](https://slideflow.dev/saliency/)), analysis of [layer activations](https://slideflow.dev/posthoc/), [uncertainty quantification](https://slideflow.dev/uq/), and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSlideflow is a one-of-a-kind library in this field and I haven't come across a similar one with this level of robustness. A variety of fast, optimized whole-slide image processing tools are included, including background filtering, blur/artifact detection, [stain normalization/augmentation](https://slideflow.dev/norm), and efficient storage in *.tfrecords format. Model training is easy and highly configurable, with a straightforward API for training custom architectures. Slideflow can also be used as an image processing backend for external training loops, serving optimized tf.data.Dataset or torch.utils.data.DataLoader to read and process slide images and perform real-time stain normalization.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8517a88c0a76e0a4e967",
    "number": 2520,
    "body": "## What is this Python project?\r\n\r\nHere are some of the main features of Scikit-learn:\r\n1. Data classification and modeling.\r\n2. End-to-end machine learning algorithms.\r\n3. Pre-processing of data.\r\n4. Model selection. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is easily interoperable with other SciPy stack tools. Scikit-learn has a user-friendly and consistent interaction that makes it easy for you to share and use data. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "It's already there. Under Machine Learning. And in fact, I don't think it should be under Deep Learning -- sklearn isn't a deep learning library.",
      "> It's already there. Under Machine Learning. And in fact, I don't think it should be under Deep Learning -- sklearn isn't a deep learning library.\n\nI agree. There are no neural networks involves here."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8518a88c0a76e0a4e968",
    "number": 2519,
    "body": "## What is this Python project?\r\n\r\nFastStream is a project that simplifies the process of writing producers and consumers for different message brokers.\r\nIt's currently supporting RabbitMQ and Apache Kafka only, but there are other brokers that will be implemented in a future.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFastStream is automated.\r\nIt automatically handles networking, validating, parsing and docs creation.\r\nIt's also fully compatible with any HTTP framework.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Good job!!\r\n\r\nOn Sat, Sep 23, 2023, 9:58 PM thaisjulia ***@***.***> wrote:\r\n\r\n> ***@***.**** approved this pull request.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/vinta/awesome-python/pull/2519#pullrequestreview-1640964423>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BAWGSC2CGVFS2RO24VHXURLX36HTTANCNFSM6AAAAAA5C37JSI>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8519a88c0a76e0a4e969",
    "number": 2518,
    "body": "## What is this Python project?\r\n\r\nI updated the homepage link for psycopg2, that was not working previously.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI discovered that psycopg now has version 3. Could psycopg3 be added as a new project?\r\n\r\nSome new features from psycopg3 compared to psycopg2\r\n- Asynchronous support\r\n- Server-side parameters binding\r\n- Prepared statements\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "canhuynh-dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2518 from canhuynh1998/canhuynh-dev\n\nUpdated psycopg2's homepage link and possibly a new project related to psycopg2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8519a88c0a76e0a4e96a",
    "number": 2517,
    "body": "## Summary\r\n\r\nAdd another processing script - `pypify.py` to apply to `README.md` after `sort.py`. \r\n\r\nThis script will add one-liners to each _installable_ library / package in \r\nREADME.md with a script to install it through pip. These one-liners are scraped from PyPI. \r\n\r\nSee docs in `pypify.py`.\r\n\r\n**EXAMPLE:**\r\n\r\nCurrent line featuring the flower package:\r\n```\r\n* [flower](https://github.com/mher/flower) - Real-time monitor and web admin for Celery.\r\n```\r\n\r\nAfter pypify:\r\n```\r\n* [flower](https://github.com/mher/flower) - Real-time monitor and web admin for Celery. **INSTALL**: `pip install flower`\r\n```\r\n\r\nThe resulting enhanced `README.md` can be post-processed by other scripts to scrape the \r\npackage info and give the user the ability to install them automatically in some package manager.\r\n\r\n## TODO\r\n\r\n- Maybe add exporting `README.md` to some structured format, e.g. JSON, YAML, Pandas, Excel, etc.",
    "head_branch": "pip-oneliners",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f851aa88c0a76e0a4e96b",
    "number": 2516,
    "body": "## What is this Python project?\r\n\r\nImagine your job queue operates at very high rps and needs distribution over multiple workers. But you need to keep context-sensitive requests in same thread and manage thread request processing priority. In other words, sharded queue is a queue with sub-queues inside. Tasks are executed in FIFO order and you define how to route them correctly per handler basis.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no libraries that can be used for sharding and prioritize job queues keeping strict order\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f851ba88c0a76e0a4e96c",
    "number": 2515,
    "body": "## What is this Python project?\r\nThis package is awesome because it helps you track all your LLM prompts, templates, variables and other prompt metadata. You can also visualize prompt chains and score/evaluate prompts with human feedback.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are a lot of packages that are either just simple wrappers around openai or langchain, but you can do a whole lot more with CometLLM, including use the interactive UI. There are also a lot of packages that do one or some elements of prompt \"engineering\"/management, but there aren't many that can do all of these things.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-comet-llm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f851ca88c0a76e0a4e96d",
    "number": 2514,
    "body": "## What is this Python project?\r\n\r\n[PDM](https://pdm.fming.dev/latest/) is a modern Python package and dependency manager supporting the latest PEP standards. But it is more than a package manager. It boosts your development workflow in various aspects. The most significant benefit is it installs and manages packages in a similar way to npm that doesn't need to create a virtualenv at all!\r\n\r\nFeature highlights:\r\n\r\n- Simple and fast dependency resolver, mainly for large binary distributions.\r\n- A [PEP 517](https://www.python.org/dev/peps/pep-0517) build backend.\r\n- [PEP 621](https://www.python.org/dev/peps/pep-0621) project metadata.\r\n- Flexible and powerful plug-in system.\r\n- Versatile user scripts.\r\n- Opt-in centralized installation cache like [pnpm](https://pnpm.io/motivation#saving-disk-space-and-boosting-installation-speed).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPDM is like Poetry, but more respectful of PEP standards, with more features.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "We started using it in my company and it's dope. Poetry is good but PDM is more modern and more respectful of standard. +1 for inclusion.",
      "its cool  ",
      "it's used by, amongst others, [hyperscan](https://github.com/darvid/python-hyperscan) and [pydantic](https://github.com/pydantic/pydantic). It reached 6K stars on Github few days ago.\r\nCan we get a merge, @vinta 🙃 ?",
      "The PDM docs URL has since changed to <https://pdm-project.org/latest/> (though the current link in this PR still redirects to the new one). +1 for merge, I switched from Poetry for PEP 621 compliance and it's awesome.",
      "Thanks @sventec, link updated :slightly_smiling_face: ",
      "Unfortunately it doesn't look like @vinta has the capacity to groom the backlog of PRs. There are many no-brainers like this PR and [the one that adds Ruff](https://github.com/vinta/awesome-python/pull/2292) that are waiting for a long time, with many upvotes, without being merged. PRs then [go stale](https://github.com/vinta/awesome-python/pull/1412) (yay stale bots), are [re-opened](https://github.com/vinta/awesome-python/pull/2551), and, strangely, sometimes [merged immediately with 0 upvote](https://github.com/vinta/awesome-python/pull/2578), while they are a duplicate of an older PR with more upvotes.\r\n\r\nI'm not sure what the process is here, or if there's even one. It would be much more engaging if it was documented somewhere :thinking: I'm actually thinking about just closing this one for clean up.\r\n\r\nAlso, I invite everyone here to have a look at https://github.com/ml-tooling/best-of-python. Best-of lists are much more detailed than Awesome ones, and rank projects with a scoring algorithm. It could be nice to add PDM there too :man_shrugging: ",
      "If @vinta ever adds a collaborator on the repository to help them with maintenance, someone please let me know, and I'll reopen (if needed).\r\n\r\n(By the way I'm willing to help with maintenance. Not for eternity, but I can seriously groom the backlog in a short period. I'm well versed in the Python ecosystem. I'd merge the no-brainers, and close duplicate quickly. I won't blindly merge something I don't know just because of upvotes, which in some cases seem fake)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f851da88c0a76e0a4e96e",
    "number": 2513,
    "body": "## What is this Python project?\r\nMamba is a fast, robust, and cross-platform package manager.\r\n\r\nDescribe features.\r\nIt runs on Windows, OS X and Linux (ARM64 and PPC64LE included) and is fully compatible with conda packages and supports most of conda’s commands.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThe mamba-org organization hosts multiple Mamba flavors:\r\n\r\nmamba: a Python-based CLI conceived as a drop-in replacement for conda, offering higher speed and more reliable environment solutions\r\n\r\nmicromamba: a pure C++-based CLI, self-contained in a single-file executable\r\n\r\nlibmamba: a C++ library exposing low-level and high-level APIs on top of which both mamba and micromamba are built\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "https://docs.djangoproject.com/en/dev/topics/db/models",
      "Balance Issue Center "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f851ea88c0a76e0a4e96f",
    "number": 2512,
    "body": "## What is this Python project?\r\n\r\n- **[README-AI](https://github.com/eli64s/readme-ai)**: Python library and CLI that auto-generates comprehensive README.md files for your software and data projects.\r\n- **Motivation**: Simplifies the documentation process, aiming to enhance the adoption and usability of open-source projects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. **Automated Codebase Documentation**: README-AI leverages large-language models to generate technical summaries of your repository contents.\r\n\r\n2. **Badge Integration**: Visualizes codebase metadata via [shields.io](https://shields.io/) badges and more, offering a visually pleasing and informative README out-of-the-box.\r\n\r\n3. **User-Friendly**: This tool aims to improve the technical workflow for all skill levels and project use-cases.\r\n\r\n4. **Dynamic Setup Guides**: README-AI preprocesses the contents of your repository and generates dynamic instructions for installing, running, and testing your project.\r\n\r\n5. **AI-Powered Content**: Detailed prompts embedded with repository metadata are used to create a more contextually accurate and in-depth README, via integration with OpenAI's GPT APIs.\r\n\r\n6. **Custom Templates**: Feature under development that allows users to select from a variety of README formats and styles, tailored for specific use-cases like data science, AI/ML, research, etc.\r\n\r\n7. **Flexible Installation Options**: Offers various installation methods, including Pip, Docker, Conda, and manual setup, giving users multiple options to suit their workflow.\r\n\r\n---\r\n\r\nThank you!",
    "head_branch": "update-readme-list",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f851ea88c0a76e0a4e970",
    "number": 2511,
    "body": "Adding a new Python library for data visualization and web application building\r\n\r\n## What is this Python project?\r\n\r\nTaipy is an open-source Python library for building your web application front-end & back-end. \r\nNo knowledge of web development is required! \r\n\r\nTaipy helps you develop an application's front-end without knowing about HTML, JS, and CSS. It provides a simple syntax, accelerating the process of creating interactive and customizable multiple-page dashboards. Taipy generates highly interactive interfaces, including charts and all sorts of widely used controls.\r\n\r\nTaipy is also used to develop the back-end of an application. It models dataflows and orchestrates pipelines. Each pipeline execution is referred to as a scenario. Scenarios are stored, recorded, and actionable, enabling what-if analysis and KPI comparison.\r\n\r\nConfiguring your pipelines has never been simpler with the help of Taipy Studio, the graphical editor.\r\n\r\nAs a data scientist or developer, Taipy will help you be successful with your Python developments. Whether you want to develop a simple pilot or a full-scale application, either on IDEs’ or Notebooks, Taipy provides all the functionalities you need. It has been designed to reduce drastically the development and deployment time.\r\n\r\nBesides, Taipy greatly eases your web application deployment. It provides the most suitable cloud tool to host, deploy, and share your Taipy applications easily. In addition, this platform provides the ability to manage, store, and maintain the various states of your backend.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Provides a simple syntax to accelerate the process of creating interactive & customizable multiple-page dashboards without requiring any knowledge of web development (CSS, HTML, and JavaScript). It uses augmented Markdown.\r\n- Flexible: easy user input\r\n- Enables the use of asynchronous calls\r\n- Decimator: allows dealing with large/big data\r\n- Available on several development environments: IDEs or Notebooks.\r\n- API extension: allows the bringing of third-party graphical components and libraries.\r\n- Offers front-end and back-end components. Pure Python.\r\n- Callbacks: Efficient event loops\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-Taipy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f851fa88c0a76e0a4e971",
    "number": 2510,
    "body": "## Javascript\r\n\r\n*Libraries for interpolating with javascript code.*\r\n\r\n* Duktape\r\n    * [dukpy](https://github.com/amol-/dukpy) - Simple JavaScript interpreter for Python.\r\n* Node\r\n    * [JSPyBridge](https://github.com/extremeheat/JSPyBridge) - 🌉. Bridge to interoperate Node.js and Python.\r\n* SpiderMonkey\r\n    * [PythonMonkey](https://github.com/Distributive-Network/PythonMonkey) - A Mozilla SpiderMonkey JavaScript engine embedded into the Python VM, using the Python engine to provide the JS host environment.\r\n* Transpiler\r\n    * [Js2Py](https://github.com/PiotrDabkowski/Js2Py/) - JavaScript to Python Translator & JavaScript interpreter written in 100% pure Python🚀\r\n* V8\r\n    * [PyMiniRacer](https://github.com/sqreen/PyMiniRacer) - PyMiniRacer is a V8 bridge in Python.\r\n    * [STPyV8](https://github.com/cloudflare/stpyv8) - Python 3 and JavaScript interoperability. Successor To PyV8.\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "section-javascript",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8520a88c0a76e0a4e972",
    "number": 2509,
    "body": "## What is this Python project?\r\n**[Questionary](https://github.com/tmbo/questionary)** is a Python library designed to provide a simple mechanic for building pretty command-line user prompts. It's based on functional programming principles and inspired by functional user prompts like select, rawselect, text, password, confirm, and many more which can be found in Inquirer.js.\r\n\r\n**Functional Design**: Straightforward way to prompt the user for input by focusing on functional design.\r\n\r\n**Variety of Prompts**: It supports a wide range of prompts like free text inputs, multiple choice, yes/no confirmation, and so on.\r\n\r\n**Validation Support**: Can provide custom validation for any question type.\r\n\r\n**Auto-Completion**: Support for autocompletion in text prompt.\r\n\r\n**Styling**: Built-in styles for questions and default answers, including color and token customization.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n**User Experience**: questionary focuses on a fluid and interactive experience. It navigates between questions based on the answers provided.\r\n\r\n**Customizability**: It provides a greater level of control over question styling and presentation, supporting multiple styles and colors.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Questionary has been really great, especially with limited terminal support in Windows."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8521a88c0a76e0a4e973",
    "number": 2508,
    "body": "## What is this Python project?\r\nA language for matching/validating/filtering Python dictionaries\r\n## What's the difference between this Python project and similar ones?\r\nThe kmatch library can be used for a wide variety of applications. One example is filtering a list of dictionaries that match a pattern. Another example is to validate dictionaries passed to a function.\r\n\r\n\r\n",
    "head_branch": "add-kmatch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8522a88c0a76e0a4e974",
    "number": 2507,
    "body": "## What is this Python project?\r\n\r\nkmatch library provides a language for matching python dictionaries\r\n\r\n## What's the difference between this Python project and similar ones?\r\nkmatch can be used for a wide variety of application\r\nOne example is filtering a list of dictionaries that match a pattern. and you can validate dictionaries passed to a function\r\n",
    "head_branch": "add-mongodb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8523a88c0a76e0a4e975",
    "number": 2506,
    "body": "# General Comments\r\n\r\nThe purpose of this pull request is to add polars to the Data Analysis section and Plotly to the Data Visualization section \r\n\r\n\r\nThe changes made to the README.md file are well-formatted and adhere to the existing style of the document.\r\nThe links provided for polars and Plotly point to the correct GitHub repositories.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@DanielSarmiento04 I am unsure how strict this project is, but I do note that your PR comment does not match the template. I don't see \"What is this Python project?\" heading and content, nor \"What's the difference between this Python project and similar ones?\" heading and content, nor the very useful \"Anyone who agrees with this pull request could submit an Approve review to it.\" -- necessary for getting 20 votes and inclusion. Would you consider amending your post?",
      "Sure, here you can view the packages with the specific description \r\n\r\n## Description\r\n\r\nThis pull request aims to enrich the data analysis and data visualization capabilities of this Python project by introducing two essential packages: Polars and Plotly.\r\n\r\n## What is this Python project?\r\n\r\nThis Python project is a comprehensive data analysis and visualization tool that caters to various user needs. It offers a wide array of features and functionalities for data manipulation, analysis, and representation.\r\nWhat's the difference between this Python project and similar ones?\r\n\r\nUnlike similar Python projects, our project distinguishes itself by offering an extensive ecosystem of tools for data handling and visualization, making it a one-stop solution for data professionals and enthusiasts. With the inclusion of Polars and Plotly, we are further enhancing the project's capabilities, enabling users to work with data more efficiently and create stunning visualizations effortlessly.\r\nChanges in this PR:\r\n\r\nAdded the Polars package to the Data Analysis section.\r\nAdded the Plotly package to the Data Visualization section.\r\n\r\n## Links\r\n\r\n[Polars GitHub Repository](https://github.com/pola-rs/polars)\r\n[Plotly GitHub Repository](https://github.com/plotly/plotly.py)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8523a88c0a76e0a4e976",
    "number": 2505,
    "body": "## What is this Python project?\r\nDjango-jazzmin is an Open source Drop-in theme for Django admin that provides a more stylish and user-friendly admin interface for Django projects. It is based on the AdminLTE 3 and Bootstrap 4 frameworks, and it offers a number of features that make it more powerful and flexible than the default Django admin interface.\r\n\r\n\r\nDescribe features.\r\n- Drop-in admin skin, all configurations optional\r\n- Bootstrap 4 & AdminLTE UI components\r\n- Customisable UI (via Live UI changes, or custom CSS/JS)\r\n- Customisable side, top and user menu\r\n- 4 different Change form templates (horizontal tabs, vertical tabs, carousel, collapsible)\r\n- Responsive\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Actively maintained: Django-jazzmin is still actively maintained, with regular releases and bug fixes. Django-suit has not been updated since 2019, Django-xadmin has not been updated since 2020, and Django-jet is still in its early stages of development.\r\n\r\n- Easy to integrate: Django-jazzmin is easy to integrate with existing Django projects. It can be installed with a single command and does not require any changes to your Django models. \r\n\r\n- Wide range of features: Django-jazzmin offers a wide range of features, including it Live UI changes.\r\n\r\n- Popularity: Django-Jazzmin is more popular than other similar libraries and has good documentation and support.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review.\r\n\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Pull request ",
      "> * [project-name](http://example.com/) - A short description ends with a period.\r\n\r\nThanks @F-a-r-m-a-n, i i would add the period ",
      "Html is way better  ig?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8524a88c0a76e0a4e977",
    "number": 2504,
    "body": "## What is this Python project?\r\nResume Matcher\r\nDescribe features.\r\n- Python Based ATS Tool to help people get their resumes improved with matching keywords from Job Description.\r\n- 1.4K+ Stars, 200+ Fork & 250+ people in community building this tool more powerful. \r\n- Free & Open Source, powered by Vector Search, Spacy, NLTK & more. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n- This is a free and open-source tool or alternative to paid software that are out there. \r\n- This gives control to the people and the user's data is localized.\r\n- This is built by the community. For the community. \r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-resume-matcher",
    "is_a_fork": true,
    "comments": [
      "@vinta I have created this Open-Source tool https://github.com/srbhr/Resume-Matcher that aims to help people in improving their resumes by matching it to job description and gives/suggests them keywords. This is a free tool and it was trending on GH a few weeks ago as well. \r\nIf you like this, please merge. ",
      "This seems like a bot account. \"Joined in 6 hours ago.\""
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8525a88c0a76e0a4e978",
    "number": 2503,
    "body": "Zipline is no longer maintained (see https://github.com/quantopian/zipline/issues/2841).\r\n\r\nEither remove or replace with a maintained fork.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8526a88c0a76e0a4e979",
    "number": 2502,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "All this PR seems to do is create a typo in `README.md` - is this intentional, or are there commits missing?",
      "I noticed that there were no new features added or updated from the changes made. However, I did spot a new typo for the word ‘Pytho’, which should be ‘Python’. The previous line was grammatically correct, so I hope that the intended commits will be added soon."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8527a88c0a76e0a4e97a",
    "number": 2501,
    "body": "## What is this Python project?\r\n\r\n[Hazm](https://www.roshan-ai.ir/hazm/) is a python library to perform natural language processing tasks on Persian text. It offers various features for analyzing, processing, and understanding Persian text. You can use Hazm to normalize text, tokenize sentences and words, lemmatize words, assign part-of-speech tags, identify dependency relations, create word and sentence embeddings, or read popular Persian corpora.\r\n\r\n**Features:**\r\n- Normalization: Converts text to a standard form, such as removing diacritics, correcting spacing, etc.\r\n- Tokenization: Splits text into sentences and words.\r\n- Lemmatization: Reduces words to their base forms.\r\n- POS tagging: Assigns a part of speech to each word.\r\n- Dependency parsing: Identifies the syntactic relations between words.\r\n- Embedding: Creates vector representations of words and sentences.\r\n- Persian corpora reading: Easily read popular Persian corpora with ready-made scripts and minimal code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as my knowledge goes, there are no other libraries that can match the utility provided by this package.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8528a88c0a76e0a4e97b",
    "number": 2500,
    "body": "## What is this Python project?\r\n\r\nVedro.io appears to be a modern and pragmatic framework, providing all the necessary functionality right out of the box without relying on magic.\r\n\r\nFeatures:\r\n\r\n- Many plugins (for Allure, PyCharm, Gitlab, Playwright, Pyppeteer, Vedro-dev)\r\n- Beautiful reporting system\r\n- Skipping scenarios\r\n- Built-in parametrization\r\n- Built-in scenarios distribution server (Vedro Cloud)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Vedro is a modular framework. Each library framework can be replaced with any other library.\r\n- Vedro has no magic (no autouse fixtures and any global variables).\r\n- Vedro has a blog where users can find best practices, examples, and more.\r\n- Vedro has a built-in scenarios distribution server (self-hosted Vedro Cloud).\r\n- Still a small but active community.\r\n- Vedro is not only a framework for testing. Vedro is a universe of libraries that work well together and separately from each other.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hello @vinta,\r\nI'm excited to inform you that this pull request has garnered over 20 👍 reactions! This level of community engagement highlights its value and relevance. \r\n\r\nCould you please take a moment to review and merge it? Your prompt action would be greatly appreciated.",
      "Congratulations on the project @vinta "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8528a88c0a76e0a4e97c",
    "number": 2499,
    "body": "## What is this Python project?\r\n[\r\npython-starlark-go](https://github.com/caketop/python-starlark-go) provides Python bindings for Starlark, a dialect of Python intended for configuration. Starlark can't access your files and is deterministic, meaning that the same code and input data always produce the same result.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to INI, JSON, YAML, TOML, etc. for configuration, the advantage is that you configure your Python program in almost-Python without compromising security. The worst a Starlark program can do is waste memory and CPU time. When you use a programming language for configuration, you don't have to choose between repeating yourself and adding control flow to, e.g., YAML (usually an anti-pattern). Compared to [Jsonnet](https://github.com/google/jsonnet) or [Dhall](https://github.com/s-zeng/dhall-python), there is less language to learn.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8529a88c0a76e0a4e97d",
    "number": 2498,
    "body": "This open source project provides lighting fast capabilities for PyTorch training code.\r\nIt is explained in details in this post - https://magazine.sebastianraschka.com/p/accelerating-pytorch-model-training\r\n",
    "head_branch": "add-lighting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2498 from arunachalamev/add-lighting\n\nadded deep learning framework Lighting"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f852aa88c0a76e0a4e97e",
    "number": 2497,
    "body": "bold\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thank you for your response\r\n\r\nOn Sat, Jul 22, 2023, 3:32 AM bignicky9978 ***@***.***> wrote:\r\n\r\n> ***@***.**** approved this pull request.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/vinta/awesome-python/pull/2497#pullrequestreview-1542063330>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BAWGSC3I33JX7TO6ZLDBECDXRN6YJANCNFSM6AAAAAA2GZP6MI>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f852ba88c0a76e0a4e97f",
    "number": 2496,
    "body": "## What is this Python project?\r\n\r\nTextual is a Rapid Application Development framework for Python, built by [Textualize.io](https://www.textualize.io/).\r\nBuild sophisticated user interfaces with a simple Python API. Run your apps in the terminal and (coming soon) a web browser.\r\n\r\nYou can build sophisticated apps in your terminal using Textual. It supports majority of Widgets (components) supported by other GUI frameworks. Textual is based on modern web development framework and it's very easy to develop apps. it also supports events that are asynchronous in nature.\r\n\r\n## What's the difference between this Python project and similar ones?\r\ncurses is pretty old compared to Textual. \r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f852ca88c0a76e0a4e980",
    "number": 2495,
    "body": "## What is this Python project?\r\n\r\nIt is selenium based scraper with best practices from experienced bot developers to help create undetectable, low boilerplate and easy to debug bots.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1.  Adds Powerful Methods to make working with Selenium a lot easier.\r\n2.  Follows best practices to avoid Bot Detection by Cloudflare and PerimeterX.\r\n3.  Saves the HTML, Screenshot, and the run details for each task run to enable easy debugging.\r\n4.  Utility components to write scraped data as JSON, CSV, and Excel files.\r\n5.  Automatically downloads and initializes the correct Chrome driver.\r\n6.  Fast and Developer friendly.\r\n\r\n--\r\n*Has 400+ Stars*\r\nPlease let me know if you have questions regarding Botasaurus. You may view Botasaurus [here](https://github.com/omkarcloud/botasaurus) \r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Change the name of the PR.\n\nFor example: add \"package name\"",
      "@VascoSch92 Done!\r\nDo You have a Sponsors or Paypal Page, would like to sponsor for $28. You are doing Great Work!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f852da88c0a76e0a4e981",
    "number": 2494,
    "body": "## What is this Python project?\n\nDescribe features.\n\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n\n--\n\nAnyone who agrees with this pull request could submit an *Approve* review to it.\n",
    "head_branch": "dart",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f852da88c0a76e0a4e982",
    "number": 2493,
    "body": "## What is this Python project?\r\nImageKit is a Django app that helps you to add variations of uploaded images to your models. These variations are called “specs” and can include things like different sizes (e.g. thumbnails) and black and white versions.\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nIs faster and is integrated with Django models\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f852ea88c0a76e0a4e983",
    "number": 2492,
    "body": "add domain admin\r\n\r\n## What is this Python project?\r\n\r\na domain monitor systemt.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Good job\r\n\r\nOn Thu, Oct 12, 2023, 4:28 PM Samari4052 ***@***.***> wrote:\r\n\r\n> ***@***.**** approved this pull request.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/vinta/awesome-python/pull/2492#pullrequestreview-1675121533>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BAWGSCZU6ZTZIGH6ZIQBWRLX7BHF7ANCNFSM6AAAAAA2CYEYHE>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f852fa88c0a76e0a4e984",
    "number": 2491,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8530a88c0a76e0a4e985",
    "number": 2490,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\nXorbits is a scalable and distributed system that scales many python libraries including numpy, pandas, sklearn, etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\nDetailed comparison can refer to https://doc.xorbits.io/en/latest/getting_started/why_xorbits/comparisons.html\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks @igordertigor  for your review, @vinta Could you please merge this PR?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8531a88c0a76e0a4e986",
    "number": 2489,
    "body": "## What is this Python project?\r\n\r\n**JoliGEN** is an integrated framework for training custom generative AI image-to-image models\r\n\r\nMain Features:\r\n\r\n- JoliGEN implements both **GAN and Diffusion models** for unpaired and paired image to image translation tasks, including domain and style adaptation with conservation of semantics such as image and object classes, masks, ...\r\n\r\n- JoliGEN generative AI capabilities are targeted at real world applications such as **Controled Image Generation**, **Augmented Reality**, **Dataset Smart Augmentation** and object insertion, **Synthetic to Real** transforms.\r\n\r\n- JoliGEN allows for fast and stable training with astonishing results. A [**server with REST API**](https://www.joligen.com/doc/server.html#running-joligen-server) is provided that allows for simplified deployment and usage.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project combines various state-of-the-art methods and model architectures for training image-to-image generative models (such as [CycleGAN](https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix), [Palette](https://github.com/Janspiry/Palette-Image-to-Image-Diffusion-Models), [Cut](https://github.com/taesungp/contrastive-unpaired-translation)...),  open-source projects (like [Segment Anything](https://github.com/facebookresearch/segment-anything)), and [JoliBrain](https://github.com/jolibrain) open-source work.\r\n\r\nThere isn't really a similar project, at least not that we've heard of.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8531a88c0a76e0a4e987",
    "number": 2488,
    "body": "**DemoGPT** enables you to create quick demos by just using prompts.\r\n\r\n## What is this Python project?\r\n\r\n-  **Automated Demo Creation**: With just a simple prompt, DemoGPT can help generate a basic framework for your application.\r\n\r\n-  **LLM Integration**: Built on top of powerful language models, DemoGPT brings the power of advanced AI into application building.\r\n\r\n-  **LangChain Code Generation**: DemoGPT uses LangChain's documentation tree and a Tree-of-Transformers approach to automatically generate application code.\r\n\r\n- **Streamlined User Interface**: With the Streamlit app, user-friendly design and easy navigation are prioritized.\r\n\r\n- **Customizability**: Users have the ability to customize the generated applications according to their specific requirements.\r\n\r\n- **Cross-Platform**: DemoGPT is designed to work across different platforms.\r\n\r\n-  **Open Source**: The codebase is open-source, allowing developers to extend and adapt it to their specific needs.\r\n\r\n-  **Ease of Use**: The system is designed with a focus on user experience, ensuring a shallow learning curve even for non-technical users.\r\n\r\n-  **Scalability**: The architecture is designed to handle the generation of complex applications while maintaining good performance.\r\n\r\n- **Community and Support**: A growing community of developers and enthusiasts is available for support and contribution.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n🧩🔥 DemoGPT enables you to create quick demos by using your prompt. The differentiation point is that it is built top on Langchain documentation tree and it uses ToT approach. It can easily crate LLM-based applications despite of other automation codes. It's specialized on prototype generation. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8532a88c0a76e0a4e988",
    "number": 2487,
    "body": "## What is this Python project?\r\n\r\nCircuitPython is a microcontroller Python implementation\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI think CircuitPython is for high-level interfacing and building small projects, while MicroPython gives access to more low-level features.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8533a88c0a76e0a4e989",
    "number": 2486,
    "body": "Added Python Tutorial\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8534a88c0a76e0a4e98a",
    "number": 2485,
    "body": "## What is this Python project?\r\n\r\nPyI18n is GNU gettext free, simple and easy to use internationalization library for Python, inspired by Ruby i18n. It supposed to be lightweight and fast all the time.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It is simple and easy to use, supports namespaces as well.\r\n- Does not require any additional dependencies other than PyYAML.\r\n- Actively supported and developed, all bugs are fixed as soon as possible.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-pyi18n",
    "is_a_fork": true,
    "comments": [
      "@vinta Any chance of getting this PR merged? Thanks"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8535a88c0a76e0a4e98b",
    "number": 2484,
    "body": "## What is this Python project?\r\n\r\nScalene is a high-performance CPU, GPU and memory profiler for Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It runs orders of magnitude faster than many other profilers.\r\n- Includes both CLI and a web-based GUI.\r\n- First profiler ever to incorporate AI-powered proposed optimizations.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8535a88c0a76e0a4e98c",
    "number": 2483,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is hands-down the fastest cryptography library I've used in Python and it's trustworthy.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8536a88c0a76e0a4e98d",
    "number": 2482,
    "body": "Unmaintained. Last release in 2018, commit in 2020.\r\nextra-malus : has ~ 1/4 of the forks and stars of the other projects of its category.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta ping ? This one seems pretty straightforward to me 🙂 \r\n(sorry to ping you directly, I am doing a round to decrease the number of my opened PRs)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8537a88c0a76e0a4e98e",
    "number": 2481,
    "body": "Added Oracle Database driver\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8538a88c0a76e0a4e98f",
    "number": 2480,
    "body": "## What is this Python project?\r\n\r\n[pytest-watcher](https://github.com/olzhasar/pytest-watcher) is a tool to automatically rerun tests (using `pytest` by default) whenever your code changes.\r\nThe tool saves a lot of time and is especially useful for TDD practitioners.\r\n\r\nPypi:\r\nhttps://pypi.org/project/pytest-watcher/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI believe there are currently no utilities like this in the list.\r\nPreviously, there was a project called `pytest-watch` which, unfortunately, is no longer maintained. This project serves as a substitute for it.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8539a88c0a76e0a4e990",
    "number": 2479,
    "body": "## What is this Python project?\r\nmapfun is a function that applies a mapping function to an infinite number of input elements, with options to skip certain elements and selectively apply the mapping to keys and/or values of objects.\r\n\r\nThe mapfun function has been developed in JavaScript and Python, offering the same functionality in different programming languages.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I feel that most of the functionality would be there with plain `map` and `filter`. How does it differ that? If it's more full fledged stream processing, how does it differ from stream processing libraries like [rxpy](https://rxpy.readthedocs.io/en/latest/) or maybe [bytewax](https://www.bytewax.io/)?",
      "@igordertigor Thank you for your feedback\r\nthe mapfun function can be seen as a recursive implementation of a deep map\r\nExample : this code is valid\r\n```python\r\nfrom math import exp\r\nfrom mapfun import mapfun\r\nprint(mapfun(exp,{},{\"y\":1},[\r\n  (\r\n    [-1,\r\n      (\r\n        [\r\n          {\"z\":[\r\n            1,\r\n            {\"x\":2}\r\n          ]\r\n          }\r\n        ]\r\n      ),-3\r\n    ]\r\n  ),7\r\n]\r\n            )\r\n     )\r\n```\r\nand it map the exp function to each elements and keep the same structure in the returned values"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f853aa88c0a76e0a4e991",
    "number": 2478,
    "body": "## What is this Python project?\r\n\r\n[CustomTkinter](https://github.com/TomSchimansky/CustomTkinter) is a modern UI library based on tkinter\r\n\r\n## Features\r\n\r\n+ Can be used along side with tkinter\r\n+ Respects OS appearance(can be adjusted manually too)\r\n+ Has support for HighDPI scaling on windows and macos\r\n+ Consistent look across all OS\r\n+ Anyone with basic tkinter knowledge can easily use this\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ntkinter is very easy to learn without the steep learning curve that comes with other GUI frameworks,being based on tkinter and without the ugly windows I think CustomTkinter is awesome and belongs here :cake:\r\n\r\n> ##### I dont know deleting a fork would delete its pending pull request too.So I opened again,sorry!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f853ba88c0a76e0a4e992",
    "number": 2477,
    "body": "## What is this Python project?\r\n\r\nThis library helps developers to turn their code snippets into snapshot images like PNG, which can be shared on any platform.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- First of its kind library\r\n- Several online applications are present, but no python package available\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-code-snapshot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f853ba88c0a76e0a4e993",
    "number": 2476,
    "body": "## What is this Python project?\r\n\r\n[CustomTkinter](https://github.com/TomSchimansky/CustomTkinter) is a modern UI library based on tkinter\r\n\r\n## Features\r\n\r\n+ Can be used along side with tkinter\r\n+ Respects OS appearance(can be adjusted manually too)\r\n+ Has support for HighDPI scaling on windows and macos\r\n+ Consistent look across all OS\r\n+ Anyone with basic tkinter knowledge can easily use this\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ntkinter is very easy to learn without the steep learning curve that comes with other GUI frameworks,being based on tkinter and without the ugly windows I think CustomTkinter is awesome and belongs here :cake:\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f853ca88c0a76e0a4e994",
    "number": 2475,
    "body": "PyAssimilator: https://github.com/knucklesuganda/py_assimilator\r\n\r\n## What is this Python project?\r\n\r\nThe best Python patterns that allow you to completely remove dependencies from your code. PyAssimilator supports multiple databases and enables you to quickly switch data storages without changing a single line of your code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Simple and readable DDD patterns.\r\n- You can switch data storages without changing a single line of your code. For example, MySQL to MongoDB without changing the logic.\r\n- You can remove more than 40% of your boilerplate code.\r\n- You remove any kind of external dependencies from your code and move them to the patterns.\r\n- Common things like CRUD are already implemented, and you can use them with one function.\r\n- You can easily implement your own patterns for any kind of external provider.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f853da88c0a76e0a4e995",
    "number": 2474,
    "body": "Hey, I have added a reference link for Python Tutorial. I came upon this article while looking for resources to learn Python. This citation, in my opinion, will enhance the content of this article. Hope that my contribution will benefit other learners.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f853ea88c0a76e0a4e996",
    "number": 2473,
    "body": "Add Alembic as DB migration tool\r\n\r\n## What is this Python project?\r\n\r\nAlembic provides for the creation, management, and invocation of change management scripts for a relational database, using SQLAlchemy as the underlying engine. It's widely used by a variety of projects such as airflow\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNot aware of any other libraries that can provide the same utility as this package does\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_alembic",
    "is_a_fork": true,
    "comments": [
      "@vinta any chance of getting this PR merged ? Thanks"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f853fa88c0a76e0a4e997",
    "number": 2472,
    "body": "## What is this Python project?\r\n\r\nThe [Thumbnails](https://github.com/pysnippet/thumbnails) is a video thumbnail generator for modern web video players that stands out for its unparalleled optimization for the fastest thumbnail generation.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBy utilizing minimal resources, users can generate more in less time. And with a user-friendly CLI and a convenient Python API, this tool is the ultimate solution for efficient and streamlined thumbnail creation.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
    "head_branch": "thumbnails",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8540a88c0a76e0a4e998",
    "number": 2466,
    "body": "## What is this Python project?\r\n\r\n[deptry](https://github.com/fpgmaas/deptry) is a command line tool to check for issues with dependencies in a Python project, such as obsolete or missing dependencies. It supports the following types of projects:\r\n\r\n - Projects that use [Poetry](https://python-poetry.org/) and a corresponding pyproject.toml file\r\n - Projects that use [PDM](https://pdm.fming.dev/latest/) and a corresponding pyproject.toml file\r\n - Projects that use a requirements.txt file according to the [pip](https://pip.pypa.io/en/stable/user_guide/) standards\r\n\r\nDependency issues are detected by scanning for imported modules within all Python files in a directory and its subdirectories, and comparing those to the dependencies listed in the project's requirements.\r\n\r\nThe documentation can be found [here](https://fpgmaas.github.io/deptry/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as I know, the only similar project is [pip-check-reqs](https://github.com/r1chardj0n3s/pip-check-reqs). This only supports scanning of `requirements.txt`, whereas deptry supports a broader range of dependency specifications. It also contains a richer set of functionality, is currently under more active development, and has better documentation.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8540a88c0a76e0a4e999",
    "number": 2465,
    "body": "Update Pyqt and add PySide\r\n\r\n## PyQT vs PySide\r\n\r\nPyQt and PySide are two sets of Python bindings for the Qt toolkit by The Qt Company, used for developing graphical user interface (GUI) applications. Both are very similar in terms of functionality and design, as they both provide Python bindings for the same Qt libraries. However, there are some differences between them that are detailed below:\r\n\r\nLicense: PyQt has a commercial license, which means a license is required for commercial use. PySide, on the other hand, is open-source and distributed under the terms of the GNU General Public License (GPL).\r\n\r\nSupport: PyQt is maintained and developed by Riverbank Computing Ltd., while PySide is developed and maintained by the open-source community and The Qt Company.\r\n\r\nVersions: PyQt has support for older versions of Qt, while PySide only has support for more recent versions.\r\n\r\nDocumentation: PyQt has more detailed and extensive documentation compared to PySide.\r\n\r\nOverall, both tools are excellent choices for developing GUI applications in Python. The choice between PyQt and PySide will depend on the project's needs, personal preference, and budget.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8541a88c0a76e0a4e99a",
    "number": 2462,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPydantic:\r\n* uses type hints to define validation schema, so static typing tools and IDEs work elegantly with your data, and you don't need to learn a new DSL to define schemas\r\n* has JSON Schema integration\r\n* Supports validation of dataclasses\r\n* Is generally faster than other validation libraries\r\n* is the validation behind the very popular [FastAPI](https://fastapi.tiangolo.com/) web framework (already listed here)\r\n\r\nPydantic is download [60m times a month](https://pepy.tech/project/pydantic) - it's the most downloaded python data validation library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-pydantic",
    "is_a_fork": true,
    "comments": [
      "Sorry, this is a duplicate of #1723.",
      "re-opening since I think if pydantic is included in one section, it should be \"Data Validation\", not \"Built-in Classes Enhancement\" as #1723 has it.",
      "Tahir yanlış yerdesin aynalı tahşr\r\n\r\niPhone’umdan gönderildi\r\n\r\nYasser Tahiri ***@***.***> şunları yazdı (9 May 2023 12:31):\r\n\r\n﻿\r\n\r\n@yezz123 approved this pull request.\r\n\r\n—\r\nReply to this email directly, view it on GitHub<https://github.com/vinta/awesome-python/pull/2462#pullrequestreview-1417984743>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/A7KYAEAWLYETBTDZMIJK3CTXFIFGXANCNFSM6AAAAAAXU7APXM>.\r\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\r\n",
      "Already added.",
      "why was it added last when the rest of the entries in that section are sorted alphabetically?",
      "> why was it added last when the rest of the entries in that section are sorted alphabetically?\r\n\r\nI don't think it's intentional. The entries in the \"Data Analysis\" section are also not sorted alphabetically.\r\n\r\nCheckout #2229 where Pydantic was initially added to the list."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8542a88c0a76e0a4e99b",
    "number": 2461,
    "body": "## What is this Python project?\r\n\r\nPython binding for Dear ImGUI C++ which is **light-weight** and **bloat-free**\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n**Better implementation** of Dear ImGUI C++ library as a Python binding, \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "new-branch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8543a88c0a76e0a4e99c",
    "number": 2451,
    "body": "## What is this Python project?\r\n\r\n* This tool generates various reports to help analyze memory usage in libraries and applications. Fully customizable reporting data!\r\n* Can act as library to perform fine-grained profiling tasks.\r\n* Full stack traces for every function call so it can accurately represent the call stack, unlike sampling profilers.\r\n* Ability to work with Python and C/C++ threading features.\r\n* Integration with Jupyter Notebooks by using cell magic.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1) This project is actively maintained by the Bloomberg Engineering team.\r\n2) The project was originally an internal tool for development within the organization, which has since been moved to be an open source project on August 27, 2022.\r\n3) The closest project similar to this one is [pyflame](https://github.com/uber-archive/pyflame) which was written to leverage C++ is currently unmaintained and deprecated.\r\n4) Native integration with the pytest library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8544a88c0a76e0a4e99d",
    "number": 2446,
    "body": "## What is this Python project?\r\n\r\nMediaPipe Solutions provides a suite of libraries and tools for you to quickly apply artificial intelligence (AI) and machine learning (ML) techniques in your applications. You can plug these solutions into your applications immediately, customize them to your needs, and use them across multiple development platforms.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ni didn't find any\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
    "head_branch": "mediapipe",
    "is_a_fork": true,
    "comments": [
      "Es posible que se trate de una herramienta bibliográfica fantástica. Tendré que verificar esto una vez que inicie mi inmersión profunda en IA/ML.\n",
      "Please elaborate more on that MediaPipe"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8545a88c0a76e0a4e99e",
    "number": 2445,
    "body": "## DI-engine\r\n\r\nDI-engine is a generalized Decision Intelligence engine. It supports most basic deep reinforcement learning (DRL) algorithms, such as DQN, PPO, SAC, and domain-specific algorithms like QMIX in multi-agent RL, GAIL in inverse RL, and RND in exploration problems.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8545a88c0a76e0a4e99f",
    "number": 2443,
    "body": "## What is this Python project?\r\n\r\nIt compiles all Python libraries together for easy access\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8546a88c0a76e0a4e9a0",
    "number": 2435,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8547a88c0a76e0a4e9a1",
    "number": 2434,
    "body": "## What is this Python project?\r\n\r\nUpdated the existing ReadMe file\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nfuzzywuzzy git repo is moved and renamed to thefuzz\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Please refer to the read me page of \"https://github.com/seatgeek/fuzzywuzzy\" for quick reference to know more. Thank you.",
      "Link update to the latest \"thefuzz\" repository as the older \"fuzzywuzzy\" repository is moved.",
      "Requesting someone with write access to merge this pull request. The only option I see is to close the PR without a merge. Thank you. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8548a88c0a76e0a4e9a2",
    "number": 2433,
    "body": "## What is this Python project?\r\n\r\nPyBroker is a framework for creating algorithmic trading strategies, including those that utilize machine learning.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike other algotrading frameworks, PyBroker is specifically designed for developing trading strategies that use machine learning. With PyBroker, you can easily create and fine-tune trading rules, build powerful models, and gain valuable insights into your strategy’s performance.\r\n\r\nSome of the key features of PyBroker include:\r\n\r\n- A super-fast backtesting engine built using NumPy and accelerated with Numba.\r\n\r\n- The ability to create and execute trading rules and models across multiple instruments with ease.\r\n\r\n- Access to historical data from Alpaca and Yahoo Finance, or from your own data provider.\r\n\r\n- The option to train and backtest models using Walkforward Analysis, which simulates how the strategy would perform during actual trading.\r\n\r\n- More reliable trading metrics that use randomized bootstrapping to provide more accurate results.\r\n\r\n- Support for strategies that use ranking and flexible position sizing.\r\n\r\n- Caching of downloaded data, indicators, and models to speed up your development process.\r\n\r\n- Parallelized computations that enable faster performance.\r\n\r\nAdditionally, PyBroker was written to be Pythonic and very easy to use.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8549a88c0a76e0a4e9a3",
    "number": 2432,
    "body": "## What is this Python project?\r\nThis is an open source cross platform app developement framework\r\nDescribe features.\r\n\r\nAdded a new section but not sure how to link, can anyone help me with the link? If anyone responds I'll describe it!\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Erdde"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8549a88c0a76e0a4e9a4",
    "number": 2431,
    "body": "minor spelling correction to readme.md document.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "\"software\" is an uncountable noun, so no `s`."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f854aa88c0a76e0a4e9a5",
    "number": 2426,
    "body": "* PyPDF2 was merged into pypdf. PyPDF2 got deprecated ([source](https://pypi.org/project/PyPDF2/))\r\n* Link to PyPI instead of the (moved) Github project\r\n* `pypdf==3.1.0` is essentially the same as `PyPDF2==3.0.0`, except for the name\r\n\r\nI am the maintainer of both projects, so I know what I'm talking about :-)",
    "head_branch": "update-pypdf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f854ba88c0a76e0a4e9a6",
    "number": 2421,
    "body": "## What is this Python project?\r\n\r\nPants is a flexible build system for Python, JVM, Go and other languages and environments. It focuses on build determinism and fine-grained caching to make your builds fast and reliable. It leverages existing information via code introspection to minimize boilerplate and intelligently create dependency links between parts of your codebase, so that you can build, test, and ship the things that you've changed, and not the things you haven't. While it is typically envisaged as a tool for managing a monorepo, it can be used as well for managing single projects in a repository.\r\n\r\nPants started at Twitter to handle their Scala monorepo, but was eventually spun off into its own thing, with a Pants v2 engine being a complete re-write from the ground up, focusing on more generalized use cases, rather than being an open-sourced version of a large SV company's build tools.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike Poetry or Flit, Pants has very strong support for multiple build targets, and can easily manage multiple projects with a single repository. It's a general purpose build tool that could be integrated with multiple language environments. Unlike some of the other tools in its class (like Bazel or Please), Pants is very actively developed, and has a very active community. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-pants",
    "is_a_fork": true,
    "comments": [
      "ConscriptionConstriction! mindfulPy[](){¥}\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f854ca88c0a76e0a4e9a7",
    "number": 2420,
    "body": "## What is this Python project?\r\n\r\nA library that provides access to the full Project Gutenberg dataset.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no other maintained libraries I could find for accessing Project Gutenberg.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f854da88c0a76e0a4e9a8",
    "number": 2418,
    "body": "## What is this Python project?\r\n\r\nOpen-source NLP framework for building industrial strength applications on top of Transformer and LLM AI models.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Supports a wide range of models\r\n* Supports a wide range of databases and vector stores\r\n* Easily customisable and extendable, NLP pipelines can be easily composed into larger applications\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f854ea88c0a76e0a4e9a9",
    "number": 2415,
    "body": "I'd like to propose adding the smtplib module to the repository. smtplib is a Python standard library that provides an SMTP client session object to send emails over the internet. Other popular libraries, like yagmail, rely on smtplib as a dependency.\r\n\r\nI believe adding smtplib to the repository would be good to know this module\r\n\r\nIf you agree with this proposal, please consider submitting an Approve review for this pull request.\r\n\r\nThank you!\r\n",
    "head_branch": "add-smtplib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f854fa88c0a76e0a4e9aa",
    "number": 2412,
    "body": "## What is this Python project?\r\n\r\nWeekly recap with tutorials, articles and projects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEach article/project has a link to the relevant discussions (example: https://discu.eu/weekly/python/2023/12/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f854fa88c0a76e0a4e9ab",
    "number": 2406,
    "body": "## What is this Python project?\r\n\r\nThis is an async task queue, similar to celery or dramatiq. But this library is capable of executing async funcions. \r\n\r\nAlso it has replaceable brokers for different queue implementations:\r\n* Redis pub\\sub\r\n* RabbitMQ\r\n* Kafka\r\n* Nats\r\n* Memphis\r\n\r\nand more to come.\r\n\r\nAlso, it supports integrations with async frameworks like: \r\n* FastAPI\r\n* AioHTTP\r\n* LiteStar\r\n* AioGram for building telegram bots\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI've created a comparison table in docs. Please take a look at [this table](https://taskiq-python.github.io/guide/#why-not-use-existing-libraries). \r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "taskiq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8550a88c0a76e0a4e9ac",
    "number": 2404,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8551a88c0a76e0a4e9ad",
    "number": 2403,
    "body": "Fixed issue #2398 by changing the name of the \"Files\" section so it doesn't link to the actual files of the project.\r\n",
    "head_branch": "conder13-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2403 from conder13/conder13-patch-1\n\nChanged files section name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8552a88c0a76e0a4e9ae",
    "number": 2402,
    "body": "Fixed Zappa github project link as it moved to a new repository under https://github.com/zappa/Zappa\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2402 from DanielTatarkin/patch-1\n\nFixed Zappa link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8553a88c0a76e0a4e9af",
    "number": 2399,
    "body": "## What is this Python project?\r\n\r\nThe RAPIDS libraries of cuDF, cuML and cuGraph that provide dataframe manipulation operations, ML algortihms, and graph algorithms. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nGPU accelerated Machine learning ETL libraries vs the popular CPU versions (pandas, scikit-learn, networkx, and others)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8554a88c0a76e0a4e9b0",
    "number": 2397,
    "body": "## What is this Python project?\r\n\r\nAn online learning resource for Python devs to learn about common security vulnerabilities in the code and how to fix them in a fun and interactive manner while also getting a score for it in a game.\r\nCan visit the site at: https://play.secdim.com/game/python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhile there might be resources for outlining security vulnerabilities, none of them teach how to fix it through a game. This platform specializes in creating secure programming games to teach application security through.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8554a88c0a76e0a4e9b1",
    "number": 2393,
    "body": "## What is this Python project?\r\n\r\nFlaskNetworkBackup is free open-source Flask app for backup on switches,routers and firewalls.\r\n\r\nThis app can:\r\n\r\n    Getting backup from Fortinet, Palo Alto, Cisco, Aruba, Dell Force10, Brocade ICX, Ruijie, Juniper, Huawei devices\r\n    Creating a .cfg file and email the file as an attachment\r\n    Easy-to-use web interface\r\n    Add your device once and backup without re-enter again\r\n    Store your email configuration, login data, backups on SQLite\r\n    Download configuration backup as cfg file\r\n    Search devices and backups\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis application is web-based and user-friendly. Easy to use to get, email and download network devices backups.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8555a88c0a76e0a4e9b2",
    "number": 2380,
    "body": "## What is this Python project?\r\n\r\n`aioauth` asynchronous implementation of OAuth 2.0 protocol\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are few great OAuth frameworks for Python like [oauthlib](https://github.com/oauthlib/oauthlib) and [authlib](https://github.com/lepture/authlib), but they do not support asyncio and rewriting these libraries to asyncio is a significant challenge (see issues [here](https://github.com/lepture/authlib/issues/63) and [here](https://github.com/oauthlib/oauthlib/issues/415)).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8556a88c0a76e0a4e9b3",
    "number": 2375,
    "body": "## What is this Python project?\r\n\r\nPython validation library to validate files using type, mime, extension, magic numbers and size that supports Django. ✅\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8557a88c0a76e0a4e9b4",
    "number": 2373,
    "body": "## What is this Python project?\r\n\r\n`python-fsutil` provides high-level file-system [methods](https://github.com/fabiocaccamo/python-fsutil#methods) for performing common operations with one line of code.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "Add-python-fsutil",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8558a88c0a76e0a4e9b5",
    "number": 2372,
    "body": "## What is this Python project?\r\n\r\n`python-benedict` is a subclass of the built-in dict type, meaning that it is fully compatible with existing dictionaries and can be used as a drop-in replacement in most cases.\r\n\r\n### Features\r\n-   100% **backward-compatible**, you can safely wrap existing dictionaries.\r\n-   **Keylist** support using **list of keys** as key.\r\n-   **Keypath** support using **keypath-separator** *(dot syntax by default)*.\r\n-   Keypath **list-index** support  *(also negative)* using the standard `[n]` suffix.\r\n-   Normalized **I/O operations** with most common formats: `base64`, `csv`, `ini`, `json`, `pickle`, `plist`, `query-string`, `toml`, `xls`, `xml`, `yaml`.\r\n-   Multiple **I/O operations** backends: `filepath` *(read/write)*, `url` *(read-only)*, `s3` *(read/write)*.\r\n-   Many **utility** and **parse methods** to retrieve data as needed *(check the [API](https://github.com/fabiocaccamo/python-benedict#api) section)*.\r\n-   Well **tested**. ;)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "Add-python-benedict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8558a88c0a76e0a4e9b6",
    "number": 2369,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "makeChanges",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8559a88c0a76e0a4e9b7",
    "number": 2368,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f855aa88c0a76e0a4e9b8",
    "number": 2364,
    "body": "## What is this Python project?\r\n\r\nGlobal custom management extensions for the Django Framework.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSome of the items this library offers\r\n\r\n- Command extensions\r\n - generate graph models\r\n - shell plus\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "django-extensions",
    "is_a_fork": true,
    "comments": [
      "@peidrao What's going on with the crazy big diff? 🙂 ",
      "> @peidrao What's going on with the crazy big diff? slightly_smiling_face\r\n\r\n Think it was some conflicts\r\n\r\nI will close the PR, Thanks man!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f855ba88c0a76e0a4e9b9",
    "number": 2362,
    "body": "\r\n## What is this Python project?\r\n\r\nSemgrep is a fast, open-source, static analysis engine for finding bugs, detecting vulnerabilities in third-party dependencies, and enforcing code standards. It is faster than Bandit and covers almost all static analysis tools.\r\n\r\nSemgrep analyzes code locally on your computer or in your build environment: code is never uploaded.\r\n\r\nIts rules look like the code you already write; no abstract syntax trees, regex wrestling, or painful DSLs. You can write your own rules instead of using the already mentioned rules. Also, GitLab recently announced they are transitioning a majority GitLab SAST analyzers to Semgrep!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFaster Static analysis tool than any other tool.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "Add-Semgrep",
    "is_a_fork": true,
    "comments": [
      "@vinta , Semgrep is a fast static analyser not only for python but also for many other languages. \n\nYou can check [here](https://github.com/returntocorp/semgrep) Or [here](https://semgrep.dev/). \n\nA Well known project. I guess it doesn't need any votes or approvals.\n\nThanks.",
      "K"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f855ca88c0a76e0a4e9ba",
    "number": 2361,
    "body": "## What is this Python project?\r\n\r\nProvides easy access to a wide range of market data using [Polygon's Stock API](https://polygon.io/docs/stocks/getting-started) with the [Python client](https://github.com/polygon-io/client-python). Polygon is a financial data platform that provides both real-time and historical market data for Stocks, Options, Forex, and Crypto. There are 40+ example code snipped, for the [REST API](https://github.com/polygon-io/client-python/tree/master/examples/rest), and [real-time streaming](https://github.com/polygon-io/client-python/tree/master/examples/websocket), along with [video tutorials](https://polygon.io/blog/polygon-io-with-python-for-stock-market-data/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Great [documentation](https://polygon.io/docs/stocks/getting-started)\r\n- Rich API for both historical and real-time data with example code\r\n- Free historical end of day data\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f855da88c0a76e0a4e9bb",
    "number": 2358,
    "body": "## What is this Python project?\r\n[Quix Streams](https://github.com/quixio/quix-streams) is a library for developing real-time streaming applications focused on time-series data and high-performance. It was developed at McLaren for processing huge sensor data streams from F1 racing cars, and is designed to be used for high-frequency telemetry services when you need to process high volumes of time-series data with up to nanosecond precision. It uses a message broker such as Apache Kafka (instead of a database) so you can process time-series data with high performance and resource savings.\r\n\r\nUsing Quix Streams, you can:\r\n* Produce time-series and event data to a Kafka Topic.\r\n* Consume time-series and event data from a Kafka Topic.\r\n* Process data by consuming it from one Kafka Topic, process it, and then producing the results back to another Kafka Topic.\r\n* Attach metadata to streams and group streams by metadata attributes.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhat's distinct about Quix Streams is its processing API—although it’s a client library, it’s incredibly powerful.\r\n* On the feature spectrum, it lies somewhere between Kafka client libraries such as Faust and kafka-python (which are easy to use but have a basic feature set) and full-fat stream processing engines like Flink and Spark (which are powerful but have a steep learning curve).\r\n* Includes many built in functions and data types such as `ParameterData` (for time-series data) and `EventData`, buffering and state management for rolling window calculations, serialization support for video and audio streams, and more.\r\n* The main difference is that processing is done in Python rather than Java, and it runs in a client environment rather than a server-side engine.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f855da88c0a76e0a4e9bc",
    "number": 2355,
    "body": "Hi @vinta,\r\n\r\nI came across your repository [awesome-python](https://github.com/vinta/awesome-python) and found it to be a valuable resource for Python enthusiasts.\r\n\r\nWhile browsing through the repository, I noticed that it was missing links to any structured guides such as the famous [\"Python Developer Roadmap\"](https://roadmap.sh/python). I took the initiative to submit a [\"Pull Request\"](https://github.com/vinta/awesome-python/pull/2355) adding it in others section.\r\n\r\nThank you for your time and effort in maintaining this valuable resource :)\r\n\r\nBest,\r\nMouaaz\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f855ea88c0a76e0a4e9bd",
    "number": 2354,
    "body": "## What is this Python project?\r\n\r\npyodbc is an open-source Python module that makes accessing ODBC databases simple. It implements the DB API 2.0 specification but is packed with even more Pythonic convenience.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's the only well-maintained open-source python module that allows connecting to all kinds of persistent storage with support for ODBC like Microsoft Access, Microsoft Excel, Google Big Query, Teradata, Vertica, Hive, and more.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "feat/add-pyodbc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f855fa88c0a76e0a4e9be",
    "number": 2353,
    "body": "## What is this Python project?\r\n\r\nAn extremely fast Python linter, written in Rust.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n    * 10-100x faster than existing linters\r\n\r\n    * Installable via pip\r\n\r\n    *  pyproject.toml support\r\n\r\n    *  Built-in caching, to avoid re-analyzing unchanged files\r\n\r\n    * Autofix support, for automatic error correction (e.g., automatically remove unused imports)\r\n\r\n    * [Near-parity](https://beta.ruff.rs/docs/#how-does-ruff-compare-to-flake8) with the built-in Flake8 rule set\r\n\r\n    * Native re-implementations of dozens of Flake8 plugins, like [flake8-bugbear](https://pypi.org/project/flake8-bugbear/)\r\n\r\n    *  First-party editor integrations for [VS Code](https://github.com/charliermarsh/ruff-vscode) and [more](https://github.com/charliermarsh/ruff-lsp)\r\n\r\n    *  Monorepo-friendly, with [hierarchical and cascading configuration](https://beta.ruff.rs/docs/#pyprojecttoml-discovery)\r\n\r\nRuff aims to be orders of magnitude faster than alternative tools while integrating more functionality behind a single, common interface.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "feat/add-ruff-linter",
    "is_a_fork": true,
    "comments": [
      "hey man this is duplicate\r\n\r\nTo look [add ruff #2292](https://github.com/vinta/awesome-python/pull/2292)",
      "https://github.com/vinta/awesome-python/pull/2292\r\n\r\nRuff has been merged via another PR, this should be closed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8560a88c0a76e0a4e9bf",
    "number": 2350,
    "body": "Add audioFlux: A library for audio and music analysis, feature extraction.\r\n\r\n## What is this Python project?\r\n\r\nA library for audio and music analysis and feature extraction, which supports dozens of time-frequency analysis and transformation methods, as well as hundreds of corresponding time-domain and frequency-domain feature combinations, can be provided to the deep learning network for training, and can be used to study the classification, separation, music information retrieval (MIR), ASR and other tasks in the audio field.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Systematic and multi-dimensional feature extraction and combination can be flexibly used for various task research and analysis\r\n- The performance is efficient, the core is mostly implemented in C, and FFT hardware acceleration based on different platforms is convenient for large-scale data feature extraction.\r\n- It is applicable to the mobile end and supports real-time calculation of audio stream at the mobile end.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n\r\n",
    "head_branch": "liufeigit-patch-1",
    "is_a_fork": true,
    "comments": [
      "@elkarouani  @vinta  Thank you for the review, when can  merge my PR? ",
      "Nice,  thanks."
    ],
    "commit_messages": [
      "Merge pull request #2350 from liufeigit/liufeigit-patch-1\n\nUpdate README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8561a88c0a76e0a4e9c0",
    "number": 2345,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Idk"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8561a88c0a76e0a4e9c1",
    "number": 2343,
    "body": "Old link was just the old pyston repository with a readme.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[approve]()"
    ],
    "commit_messages": [
      "Merge pull request #2343 from renatocfrancisco/patch-1\n\nUpdate link for Pyston"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8562a88c0a76e0a4e9c2",
    "number": 2341,
    "body": "## What is this Python project?\r\n\r\nAdded new feature request issue file\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis issue template allow the user to describe the issue in more descriptive way\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "yashdev9274-patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue template will look like this\r\n\r\n![image](https://user-images.githubusercontent.com/72986960/216815820-faabdfe4-0fb7-4e1a-a3ab-862c21e473b6.png)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8563a88c0a76e0a4e9c3",
    "number": 2337,
    "body": "## What is this Python project?\r\n\r\n[roadmap.sh](https://roadmap.sh) is an opensource project with community curated roadmaps and visual guides for developers. Linked resource is the roadmap for learning Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is any other similar roadmap in the list.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8564a88c0a76e0a4e9c4",
    "number": 2336,
    "body": "## What is this Python project?\r\n\r\n[mashumaro](https://github.com/Fatal1ty/mashumaro) is a project that adds the ability to generate methods for serialization / deserialization of dataclasses with big variety of standard types out of the box to / from different formats (dict, json, msgpack, yaml, toml).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* it's written in pure python and works by generating highly optimized code for a specific dataclass taking into account all alterations, which makes it faster compared to alternatives\r\n* it has many extension options (third-party types, hooks, different serialization strategies, dialects, aliases, etc.)\r\n* it has full support for user-defined generic types\r\n* it has full support for user-defined variadic generic types from PEP 646\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8565a88c0a76e0a4e9c5",
    "number": 2333,
    "body": "add okcli\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8565a88c0a76e0a4e9c6",
    "number": 2328,
    "body": "What is this Python project?\r\n\r\nPynecone is an open-source, full-stack python framework that makes it easy to build and deploy web apps in minutes. It offers the ease of use and accessibility of low-code frameworks, combined with the flexibility, performance, and customizability of traditional web development. Pynecone is open-source and designed to be easy to get started with for those with no previous web development experience.\r\n\r\nWith Pynecone, data scientists and software engineers can create high-quality web applications quickly and easily without needing to learn web development. Whether you want to build a small-scale data science project/internal app, or a large-scale multi-page web app, Pynecone has the tools and features to handle any project. The framework is optimized for performance, scalability, and SEO, so you can focus on creating a beautiful and engaging web app that you can be proud of.\r\n\r\nHere is a short description of Pynecone from a user: https://www.youtube.com/watch?v=47BL6WLZJ1g\r\n\r\nWhat's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\n* Compared to Django/Flask, in Pynecone you write your UI in pure Python (no HTML or Javascript)\r\nIn Pynecone the UI compiles down to a NextJS/React app, and is fully customizable with CSS\r\n* You can easily wrap any React component and add it to Pynecone\r\n* Traditional API requests are replaced by simple Python functions\r\n* Compared to Streamlit, Pynecone aims to build real websites that are look just like a website you would make with traditional frontend tools\r\n\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8566a88c0a76e0a4e9c7",
    "number": 2326,
    "body": "The change resolve #2047 by adding pyscript to the web frameworks  \r\nSigned-off-by: Hani Kamal ",
    "head_branch": "adding-pyscript",
    "is_a_fork": true,
    "comments": [
      "Nice"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8567a88c0a76e0a4e9c8",
    "number": 2323,
    "body": "Adds [bytewax](https://github.com/bytewax/bytewax) to distributed compute under the stream processing subheading. Easy to use Python stream processing framework.\r\n\r\n## What is this Python project?\r\n\r\nStream Processing Framework.\r\n- connects to any streaming data source (Kafka, Pulsar, Redpanda, websockets, SSE etc.)\r\n- execute native python in stream processing operators.\r\n- stateful processing capabilities.\r\n- scales on k8s.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFaust is the most similar. Bytewax supports in-memory state first, can work with more than just Kafka and it is still actively supported/maintained.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Mo",
      "> Mo\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8568a88c0a76e0a4e9c9",
    "number": 2322,
    "body": "## What is this Python project?\r\n\r\nWith Flet, you code in Python only and a get multi-user, realtime Single-Page Application (SPA), with a beautiful Flutter UI.\r\n([Website](https://flet.dev/), [GitHub](https://github.com/flet-dev/flet))\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n- Based on Flutter - Flutter UI rendered\r\n- No SDKs, no thousands of dependencies, no complex tooling - Flet has built-in web server with assets hosting and desktop clients.\r\n- Deploy Flet app as a web app and view it in a browser. Package it as a standalone desktop app for Windows, macOS and Linux. Install it on mobile as [PWA](https://web.dev/what-are-pwas/)\r\n- Threads could be started anyhow within, without blocking the app's execution loop\r\n- Flet has a very simple architecture\r\n- Has hot reload for developpers\r\n- much more: https://flet.dev/\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "22 stars... \nmerge?",
      "yes"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8569a88c0a76e0a4e9ca",
    "number": 2321,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f856aa88c0a76e0a4e9cb",
    "number": 2316,
    "body": "## What is this Python project?\r\n\r\nOzon3 is an open-source Python package to easily obtain real-time, historical, or forecasted air quality data anywhere in the world. Reliable, accurate, and simple. Has 45 stars, 22 forks, 14 contributors, and 3 users so far.\r\n\r\nDescribe features.\r\n\r\n- Air quality data available for 11,000+ stations, and 1000 cities.\r\n- Uses the World Air Quality Index's API under the hood, meaning accurate and reliable data.\r\n- Historical air quality data from 2014 onwards.\r\n- Real-time air quality data for 15 parameters (updated hourly).\r\n- 7 and 14-day air quality forecasts for all stations.\r\n- Completely free and open-source for everyone!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- All other air quality data packages are simple wrappers around air quality APIs. Ozon3, by comparison, provides complex methods and combines a lot of data from the AQICN API to provide the perfect interface for python programmers to access air quality data.\r\n- No other package can provide this quantity of historical data for free.\r\n- No other package covers this many stations and cities.\r\n- Tried and tested, and proven to work really well!\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "> ## What is this Python project?\r\n> Ozon3 is an open-source Python package to easily obtain real-time, historical, or forecasted air quality data anywhere in the world. Reliable, accurate, and simple. Has 45 stars, 22 forks, 14 contributors, and 3 users so far.\r\n> \r\n> Describe features.\r\n> \r\n> * Air quality data available for 11,000+ stations, and 1000 cities.\r\n> * Uses the World Air Quality Index's API under the hood, meaning accurate and reliable data.\r\n> * Historical air quality data from 2014 onwards.\r\n> * Real-time air quality data for 15 parameters (updated hourly).\r\n> * 7 and 14-day air quality forecasts for all stations.\r\n> * Completely free and open-source for everyone!\r\n> \r\n> ## What's the difference between this Python project and similar ones?\r\n> Enumerate comparisons.\r\n> \r\n> * All other air quality data packages are simple wrappers around air quality APIs. Ozon3, by comparison, provides complex methods and combines a lot of data from the AQICN API to provide the perfect interface for python programmers to access air quality data.\r\n> * No other package can provide this quantity of historical data for free.\r\n> * No other package covers this many stations and cities.\r\n> * Tried and tested, and proven to work really well!\r\n>   --\r\n> \r\n> Anyone who agrees with this pull request could submit an _Approve_ review to it.\r\n\r\nI love Ozon3 and follow the project! Would be so cool to get added to this list :))"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f856aa88c0a76e0a4e9cc",
    "number": 2315,
    "body": "## Major changes\r\nJust a link and small description into the Readme for an interesting open source data analytic package.\r\n\r\n## What is this Python project?\r\n\r\n[MNE](https://mne.tools/stable/index.html) is a Python based Package for neurophysiological data analysis and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs many science Python package and libraries, it has [Machine Learning](https://mne.tools/stable/auto_tutorials/machine-learning/50_decoding.html) application. It can also give data visualization graphs.\r\n\r\nYou'll be able to visualize your EEG, MEG data and more.\r\n\r\n[Tutorials](https://mne.tools/stable/auto_tutorials/index.html) are given on the website.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f856ba88c0a76e0a4e9cd",
    "number": 2313,
    "body": "## What is this Python project?\r\nKlotho is a CLI tool for transforming plain Python code to deployable cloud native code. It introduces klotho annotations that transform code to execution units (lambdas, fargate, kubernetes), persist ORMs like SQLAlchemy, and more\r\n\r\n## What's the difference between this Python project and similar ones?\r\nAs far as we know there are no similar projects. The closest one would be Chalice \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f856ca88c0a76e0a4e9ce",
    "number": 2310,
    "body": "## What is this Python project?\r\n\r\nPython  implementation that run with only 4KB of RAM, zero dependencies, easy to bind with C.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- RAM usage: 4KB(PikaPython), 16KB(MicroPython)\r\n- Dependency: No OS, No file system(PikaPython), No OS(MicroPython)\r\n- Bind C module: write pyi(PikaPython), write C macro(MicroPython)\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f856da88c0a76e0a4e9cf",
    "number": 2307,
    "body": "added a new library sounddevice in the audio section ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "> added a new library sounddevice in the audio section\r\n\r\nIn your PR title there should be an \"add sounddevice\""
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f856ea88c0a76e0a4e9d0",
    "number": 2303,
    "body": "## What is this Python project?\r\n\r\nPython Standard Library for parsing csv and TOML files\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo real difference to make here, just thought it was right to include the standard library. \r\n\r\n`csv` isn't in the list while `csvkit` is. And `tomllib` was recently released with python 3.11.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f856ea88c0a76e0a4e9d1",
    "number": 2300,
    "body": "## What is this Python project?\r\n\r\nDagster is a job orchestration framework that is used to build data assets. It is a great tool, works on multiple platforms, and is very easy to set it up. It has a lot of useful features, such as:\r\n\r\n- Managing data assets with code, building python-based data jobs to load, transfer, and transform data\r\n- Integrates with [dbt](https://www.getdbt.com/) and provides a user interface to run dbt models\r\n- Provides a UI to monitor jobs, debug runs, inspect assets, or even launch backfills\r\n- Multiplatform - works with Windows and Mac by just installing from pip (no other dependencies)\r\n- It has multiple executors to run tasks, including in-process, multi-process, Dask, Celery, Docker, and Kubernetes.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- One great comparison for dagster is Airflow - but Dagster concentrates more on orchestrating data assets, including table materializations, etc\r\n- It is not just a scheduler, but a framework to build jobs using Dagster API \r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f856fa88c0a76e0a4e9d2",
    "number": 2297,
    "body": "## What is this (abandoned) Python project?\r\n\r\npyannotate has had its last update in 2019 and has [major/breaking bugs](https://github.com/dropbox/pyannotate/issues/92).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "remove-abandoned-project-pyannotate",
    "is_a_fork": true,
    "comments": [
      "Is there a good alternative that could be substituted in for pyannotate?",
      "Not that I know of, sadly. `pytype` (already in the list) is a usable alternative though."
    ],
    "commit_messages": [
      "Merge pull request #2297 from hofrob/remove-abandoned-project-pyannotate"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8570a88c0a76e0a4e9d3",
    "number": 2293,
    "body": "## What is this Python project?\r\n\r\nIt comes under the Section \"Libraries for Data Analyzing\". Polars is a blazingly fast DataFrame library completely written in Rust, using the Apache Arrow memory model.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n![benchmarks](https://user-images.githubusercontent.com/43924834/210128359-00c6041e-c217-4283-a7a2-1de7dde9b7f0.png)\r\n\r\n* Utilizes all the available cores unlike single-threaded libraries such as NumPy and Pandas.\r\n* Built from the ground up designed for parallelization of queries on dataframes.\r\n* Its csv and parquet readers are among the fastest in existence.\r\n* It consists of a lazy query engine, allowing Polars to do several optimizations that may improve query time and memory usage.\r\n\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8571a88c0a76e0a4e9d4",
    "number": 2292,
    "body": "## What is this Python project?\r\n\r\nThis is in python library for linter\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n<p align=\"center\">\r\n  <img alt=\"Bar chart with benchmark results\" src=\"https://user-images.githubusercontent.com/1309177/187504482-6d9df992-a81d-4e86-9f6a-d958741c8182.svg\">\r\n</p>\r\n\r\n- 10-100x faster than existing linters\r\n-  Installable via pip\r\n- hammer_and_wrench pyproject.toml support\r\n- Native re-implementations of popular Flake8 plugins, like [flake8-bugbear](https://pypi.org/project/flake8-bugbear/)\r\n- Monorepo-friendly configuration via hierarchical and cascading settings\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "0l\n\nOn Dec 30, 2022 6:23 PM, \"Pedro Fonseca\" ***@***.***> wrote:\n\nWhat is this Python project?\n\nThis is in python library for linter\nWhat's the difference between this Python project and similar ones?\n\n[image: Bar chart with benchmark results]\n<https://user-images.githubusercontent.com/1309177/187504482-6d9df992-a81d-4e86-9f6a-d958741c8182.svg>\n\n   - 10-100x faster than existing linters\n   - Installable via pip\n   - hammer_and_wrench pyproject.toml support\n   - Native re-implementations of popular Flake8 plugins, like\n   flake8-bugbear <https://pypi.org/project/flake8-bugbear/>\n   - Monorepo-friendly configuration via hierarchical and cascading settings\n\n--\n\nAnyone who agrees with this pull request could submit an *Approve* review\nto it.\n------------------------------\nYou can view, comment on, or merge this pull request online at:\n\n  https://github.com/vinta/awesome-python/pull/2292\nCommit Summary\n\n   - a50a140\n   <https://github.com/vinta/awesome-python/pull/2292/commits/a50a140da2ce2e300ba868c73df8a64a2c3afadb>\n   add ruff in code linters\n\nFile Changes\n\n(1 file <https://github.com/vinta/awesome-python/pull/2292/files>)\n\n   - *M* README.md\n   <https://github.com/vinta/awesome-python/pull/2292/files#diff-b335630551682c19a781afebcf4d07bf978fb1f8ac04c6bf87428ed5106870f5>\n   (2)\n\nPatch Links:\n\n   - https://github.com/vinta/awesome-python/pull/2292.patch\n   - https://github.com/vinta/awesome-python/pull/2292.diff\n\n—\nReply to this email directly, view it on GitHub\n<https://github.com/vinta/awesome-python/pull/2292>, or unsubscribe\n<https://github.com/notifications/unsubscribe-auth/AX6RBONI7ZHDUUEAERK2M6TWP4SCBANCNFSM6AAAAAATNB6F44>\n.\nYou are receiving this because you are subscribed to this thread.Message\nID: ***@***.***>\n",
      ":+1:",
      "This should be merge. Great linter.",
      "Agree with @Kub-AT . This PR should get merged as Ruff is getting more popular",
      "👍🏻",
      "Bumping this issue, Ruff is my favorite and go to linter it should be featured on here surprised it is not",
      "> Bumping this issue, Ruff is my favorite and go to linter it should be featured on here surprised it is not\r\n\r\nAgreed! So... did you approve this PR so we can get enough votes to move it through, @Commando-Brando ?\r\n\r\n> Anyone who agrees with this pull request could submit an Approve review to it.",
      "@bowmanjd didn't read the whole issue, oops, but it has been approved, cheers!",
      "> This should be merge. Great linter.\r\n\r\nAgreed! @Kub-AT could you approve the PR (that is what counts as a vote)",
      "> Agree with @Kub-AT . This PR should get merged as Ruff is getting more popular\r\n\r\nYes, indeed! Could you approve the PR,  @Owen-CH-Leung, then (approval is what counts as a vote; we need 20 to see ruff make the awesome list)",
      "more 3 likes :pray: ",
      "@vinta 20 likes",
      "Thanks for a quick update, @peidrao!\r\nAlso, it might be worth considering moving `ruff` to the `Code Formatters` section down below.",
      "@peidrao Some conflicts appeared, I imagine this is not the first time.\r\nAlso worth mentioning that ruff includes a formatter now - rules are quite similar to `black`, except it is 100 times faster.\r\n\r\n@vinta This PR is 2 years old while ruff popularity is exploding.\r\nHow is it not merged yet?",
      "BTW, in the meantime even the CPython repository started using ruff:\r\n\r\nhttps://github.com/python/cpython/blob/7ac933e2609b2ef9b08ccf9c815b682b0e1ede2a/.pre-commit-config.yaml#L2-L12",
      "@peidrao can you do a rebase and a squash?",
      "> @peidrao can you do a rebase and a squash?\r\n\r\nI have completed the rebase and squash. \r\n",
      "@vinta ready to merge.",
      "> @vinta ready to merge.\n\n",
      "> > @vinta ready to merge.\n> \n> \n\n",
      "> > @peidrao can you do a rebase and a squash?\n> \n> \n> \n> I have completed the rebase and squash. \n> \n> \n\n@vinta ready to merge",
      "> ## What is this Python project?\n> \n> This is in python library for linter\n> \n> ## What's the difference between this Python project and similar ones?\n> \n> <p align=\"center\">\n>   <img alt=\"Bar chart with benchmark results\" src=\"https://user-images.githubusercontent.com/1309177/187504482-6d9df992-a81d-4e86-9f6a-d958741c8182.svg\">\n> </p>\n> \n> - 10-100x faster than existing linters\n> -  Installable via pip\n> - hammer_and_wrench pyproject.toml support\n> - Native re-implementations of popular Flake8 plugins, like [flake8-bugbear](https://pypi.org/project/flake8-bugbear/)\n> - Monorepo-friendly configuration via hierarchical and cascading settings\n> \n> \n> --\n> \n> Anyone who agrees with this pull request could submit an *Approve* review to it.\n> \n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8572a88c0a76e0a4e9d5",
    "number": 2287,
    "body": "## Streamlit\r\n\r\n\"The fastest way to build data apps in Python\"\r\n\r\nThis is basically Python's version of RStudio/Posit's Shiny for creating data web applications.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8572a88c0a76e0a4e9d6",
    "number": 2274,
    "body": "## What is this Python project?\r\n\r\n`pandas-profiling` generates profile reports from a `pandas` DataFrame.\r\nThe reports are like a richer version of `DataFrame.describe` with a lot of information that any data scientist is looking for: distribution description, missing values, type inference, zero, high correlation, skewness, etc.\r\n\r\nThe reports can be generated in PDF or HTML. They contain alerts that give a clear information on the issues with a given dataset.\r\n\r\nThe library can also generate comparison reports between two datasets, so it can be used to compare two versions of the same dataset, or some new data once a model is in production (sort of model monitoring but for data).\r\n\r\nIt is well maintained with active development, has 10k stars on GitHub and it is used by many companies, including large ones.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as I know, there is no alternative library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8573a88c0a76e0a4e9d7",
    "number": 2273,
    "body": "## What is this Python project?\r\nCambridge dictionary cli app.\r\n\r\nFeatures:\r\n1. Auto-suggests related words on typo.\r\n2. Interactive suggestion menu to select words from in the above case.\r\n3. Handles past and past-particle words.\r\n4. No API/database involved.\r\n5. A Persistent caching mechanism. This avoids looking up already searched words; hence fast results.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8574a88c0a76e0a4e9d8",
    "number": 2262,
    "body": "## What is this Python project?\r\n\r\nPyxel is a retro game engine similar to Pico-8 and TIC-80.\r\n\r\nThanks to its simple specifications inspired by retro gaming consoles, such as only 16 colors can be displayed and only 4 sounds can be played back at the same time, you can feel free to enjoy making pixel art style games.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Focus on retro game development with built-in specifications to the palette, image banks, sounds, tilemaps etc.\r\n- Includes a resource editor to edit images, tilemaps, sounds and music.\r\n- Can create applications for desktop and web.\r\n- Pyxel has 11000 stars on GitHub. It is the number one game library for Python in the world.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8575a88c0a76e0a4e9d9",
    "number": 2259,
    "body": "Sort README.md by running `sort.py`.\r\n\r\n## What is this Python project?\r\n\r\nWhisper is a general-purpose speech recognition model. It is trained on a large dataset of diverse audio and is also a multi-task model that can perform multilingual speech recognition as well as speech translation and language identification.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Easy to use\r\n* Easy to install\r\n* Effective\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8576a88c0a76e0a4e9da",
    "number": 2258,
    "body": "## What is this Python project?\r\n\r\nA library for building CLI applications based on Python 3.6+ type hints. Made by tiangelo, the creator of fastapi \r\n\r\n[typer](https://github.com/tiangolo/typer)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFrom readme: \r\n\r\nIntuitive to write: Great editor support. Completion everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.\r\nEasy to use: It's easy to use for the final users. Automatic help, and automatic completion for all shells.\r\nShort: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\r\nStart simple: The simplest example adds only 2 lines of code to your app: 1 import, 1 function call.\r\nGrow large: Grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-typer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8577a88c0a76e0a4e9db",
    "number": 2257,
    "body": "## What is this Python project?\r\n\r\nA wrapper of [SQLAlchemy](https://www.sqlalchemy.org/) based on [pydantic](https://github.com/pydantic/pydantic) objects. Made by tiangelo, creator of FastAPI.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFrom docs: \r\n\r\nIntuitive to write: Great editor support. Completion everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.\r\nEasy to use: It has sensible defaults and does a lot of work underneath to simplify the code you write.\r\nCompatible: It is designed to be compatible with FastAPI, Pydantic, and SQLAlchemy.\r\nExtensible: You have all the power of SQLAlchemy and Pydantic underneath.\r\nShort: Minimize code duplication. A single type annotation does a lot of work. No need to duplicate models in SQLAlchemy and Pydantic.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-sqlmodel",
    "is_a_fork": true,
    "comments": [
      "Great man!!!!!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8577a88c0a76e0a4e9dc",
    "number": 2256,
    "body": "## What is this Python project?\r\n\r\nA rewrite of [cookiecutter](https://github.com/audreyr/cookiecutter) into a general purpose configuration language to build modular code generators and declarative CLIs.\r\n\r\n[tackle](https://github.com/sudoblockio/tackle)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Does everything cookiecutter does plus the following\r\n- Creates self documenting CLIs out of yaml / json / toml \r\n- Allows users to modularize code templating by importing other tackle providers that specialize in various parts of generating code \r\n- Turing complete syntax lets users conditionally prompt for options \r\n- Over 100 hooks which act as plugins within your config file \r\n\r\nIt is most comparable to Dhall, jsonnet, and CUE but specializes in generating code. I personally use it to manage kubernetes manifests by code generating them sort of like Helm but much more flexible. \r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-tackle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8578a88c0a76e0a4e9dd",
    "number": 2250,
    "body": "## What is this Python project?\r\n`pedalboard` is a Python library for working with audio: reading, writing, adding effects, and more. It supports most popular audio file formats and a number of common audio effects out of the box, and also allows the use of [VST3®](https://www.steinberg.net/en/company/technologies/vst3.html) and [Audio Unit](https://en.wikipedia.org/wiki/Audio_Units) formats for third-party plugins.\r\n\r\n`pedalboard` was built by [Spotify's Audio Intelligence Lab](https://research.atspotify.com/audio-intelligence/) to enable using studio-quality audio effects from within Python and TensorFlow. Internally at Spotify, `pedalboard` is used for [data augmentation](https://en.wikipedia.org/wiki/Data_augmentation) to improve machine learning models. pedalboard also helps in the process of content creation, making it possible to add effects to audio without using a Digital Audio Workstation.\r\n\r\n## Features (Copied from original project description)\r\n - Built-in audio I/O utilities ([pedalboard.io](https://spotify.github.io/pedalboard/reference/pedalboard.io.html))\r\n   - Support for reading and writing AIFF, FLAC, MP3, OGG, and WAV files on all platforms with no dependencies\r\n   - Additional support for reading AAC, AC3, WMA, and other formats depending on platform\r\n   - Support for on-the-fly resampling of audio files and streams with `O(1)` memory usage\r\n - Built-in support for a number of basic audio transformations, including:\r\n   - Guitar-style effects: `Chorus`, `Distortion`, `Phaser`, `Clipping`\r\n   - Loudness and dynamic range effects: `Compressor`, `Gain`, `Limiter`\r\n   - Equalizers and filters: `HighpassFilter`, `LadderFilter`, `LowpassFilter`\r\n   - Spatial effects: `Convolution`, `Delay`, `Reverb`\r\n   - Pitch effects: `PitchShift`\r\n   - Lossy compression: `GSMFullRateCompressor`, `MP3Compressor`\r\n   - Quality reduction: `Resample`, `Bitcrush`\r\n - Supports VST3® plugins on macOS, Windows, and Linux ([pedalboard.load_plugin](https://spotify.github.io/pedalboard/reference/pedalboard.html#pedalboard.load_plugin))\r\n - Supports Audio Units on macOS\r\n - Strong thread-safety, memory usage, and speed guarantees\r\n   - Releases Python's Global Interpreter Lock (GIL) to allow use of multiple CPU cores\r\n     - No need to use `multiprocessing`!\r\n   - Even when only using one thread:\r\n     - Processes audio up to **300x** faster than [pySoX](https://github.com/rabitt/pysox) for single transforms, and 2-5x faster than [SoxBindings](https://github.com/pseeth/soxbindings) (via [iCorv](https://github.com/iCorv/pedalboard_with_tfdata))\r\n     - Reads audio files up to **4x** faster than [librosa.load](https://librosa.org/doc/main/generated/librosa.load.html) (in many cases)\r\n - Tested compatibility with TensorFlow - can be used in `tf.data` pipelines!\r\n\r\n## What's the difference between this Python project and similar ones?\r\nEnumerate comparisons.\r\n- Simple API.\r\n- Extremely fast.\r\n- Supports different kinds of audio files.\r\n- Strong thread-safety, and memory usage.\r\n- Built-in audio transformations.\r\n- Type hints.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "padelboard",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8579a88c0a76e0a4e9de",
    "number": 2249,
    "body": "## What is this Python project?\r\n\r\n[Algviz](https://algviz.com) is an animation engine based on Jupyter to make it easier to visualize algorithms.\r\n\r\nFor example:\r\n\r\n+ Bubble sort algorithm:\r\n    ![bubble_sort_animation](https://cdn.jsdelivr.net/gh/zjl9959/algviz-launch@master/svgs/BubbleSort.svg)\r\n+ NQueens problem:\r\n    ![NQueens_animation](https://cdn.jsdelivr.net/gh/zjl9959/algviz-launch@master/svgs/NQueens.svg)\r\n+ Prim algorithm:\r\n    ![Prim_animation](https://cdn.jsdelivr.net/gh/zjl9959/algviz-launch@master/svgs/Prim_sec.svg)\r\n\r\nYou can try more examples in the online editor by clicking the button below:\r\n\r\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/zjl9959/algviz-launch)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n-- Simple API, vivid animations.\r\n-- Support multiple data structures, such as `vector`, `table`, `linked list`, `tree` and `graph`.\r\n-- Can be embedded into Jupyter notebook.\r\n-- The generated animation is based on SVG, which is portable and space-saving.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f857aa88c0a76e0a4e9df",
    "number": 2248,
    "body": "## What is this Python project?\r\n\r\n[Jina](https://github.com/jina-ai/jina) is a framework that empowers anyone to build such applications in the cloud. It handles infrastructure complexity, making advanced solution engineering and cloud-native technologies accessible to every developer.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n[Jina](https://github.com/jina-ai/jina) is a lean and efficient framework that makes advanced solution engineering and cloud-native technologies accessible to every developer. Applications built with Jina enjoy the following features out of the box:\r\n\r\n\r\n### Universal\r\n- Polyglot gateway that supports gRPC, WebSockets, HTTP, GraphQL protocols with TLS\r\n\r\n### Performance\r\n- Intuitive design pattern for high-performance microservices.\r\n\r\n### Cloud-native\r\n- Seamless Docker container integration: sharing, exploring, sandboxing, versioning and dependency control via Jina Hub\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-Jina",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f857ba88c0a76e0a4e9e0",
    "number": 2247,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hello you Welcome Thailand "
    ],
    "commit_messages": [
      "Merge pull request #2247 from timuric/master"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f857ca88c0a76e0a4e9e1",
    "number": 2246,
    "body": "## What is this Python project?\r\n\r\nThis is the Python library for interacting with the Svix API which is great for adding webhook functionality to your api.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nMost webhook libraries are for receiving webhooks only. This lets you setup up an entire service for your users to subscribe to specific events that you send them webhooks for as well as how to receive webhooks and verify signatures.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f857ca88c0a76e0a4e9e2",
    "number": 2241,
    "body": "## What is this Python project?\r\n\r\n[`click-extra`](https://github.com/kdeldycke/click-extra) is a collection of helpers and utilities for [Click](https://click.palletsprojects.com/), the Python CLI framework.\r\n\r\nIt is a drop-in replacement with good defaults that saves lots of boilerplate code and frustration. It also comes with [workarounds and patches](https://kdeldycke.github.io/click-extra/issues.html) that have not reached upstream yet (or are unlikely to).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project adds the following features on top of `click`:\r\n\r\n- Configuration file loader for:\r\n  - `TOML`\r\n  - `YAML`\r\n  - `JSON`, with inline and block comments (Python-style `#` and Javascript-style `//`)\r\n  - `INI`, with extended interpolation, multi-level sections and non-native types (`list`, `set`, …)\r\n  - `XML`\r\n- Download configuration from remote URLs\r\n- Optional strict validation of configuration\r\n- Search of configuration file from default user folder and glob patterns\r\n- Respect of `CLI` > `Configuration` > `Environment` > `Defaults` precedence\r\n- `--show-params` option to debug parameters defaults, values, environment variables and provenance\r\n- Colorization of help screens\r\n- `-h`/`--help` option names (see [rant on other inconsistencies](https://blog.craftyguy.net/cmdline-help/))\r\n- `--color`/`--no-color` option flag\r\n- Recognize the `NO_COLOR` environment variable convention from [`no-color.org`](https://no-color.org)\r\n- Colored `--version` option\r\n- Colored `--verbosity` option and logs\r\n- `--time`/`--no-time` flag to measure duration of command execution\r\n- Platform recognition utilities (macOS, Linux and Windows)\r\n- New conditional markers for `pytest`:\r\n  - `@skip_linux`, `@skip_macos` and `@skip_windows`\r\n  - `@unless_linux`, `@unless_macos` and `@unless_windows`\r\n  - `@destructive` and `@non_destructive`\r\n- [ANSI-capable Pygments lexers](https://kdeldycke.github.io/click-extra/pygments.html#lexers) for shell session and console output\r\n- Pygments styles and filters for ANSI rendering\r\n- [Fixes 30+ bugs](https://kdeldycke.github.io/click-extra/issues.html) from other Click-related projects\r\n- Rely on [`cloup`](https://github.com/janluke/cloup) to add:\r\n  - option groups\r\n  - constraints\r\n  - subcommands sections\r\n  - aliases\r\n  - command suggestion (`Did you mean <subcommand>?`)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-click-extra",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f857da88c0a76e0a4e9e3",
    "number": 2235,
    "body": "Add a line this is a demo version",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f857ea88c0a76e0a4e9e4",
    "number": 2234,
    "body": "Added the following for your review and feedback:\r\n\r\n* [Explore Python](https://kandi.openweaver.com/explore/python)\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f857fa88c0a76e0a4e9e5",
    "number": 2229,
    "body": "## What is this Python project?\r\n\r\nIt is a framework to easily create classes which attributes gets validated during object creation.\r\nThe base of the validation are type hints.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt makes heavily use of type hints and reduces so the amount of code lines.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Isn't pydantic there yet? I can't seem to find it. Otherwise, agreed.",
      "222222",
      "Also related - https://github.com/vinta/awesome-python/pull/2257 -> sqlmodel made by tiangelo, FastAPI creator "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8580a88c0a76e0a4e9e6",
    "number": 2223,
    "body": "## What is this Python project?\r\n\r\nHypercorn is an ASGI and WSGI server that supports both HTTP 1.1 and HTTP 2, as well as websockets.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSupports HTTP 2, unlike uvicorn. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thank you",
      " Why PR not merged?",
      "> Why PR not merged?\r\n\r\nBecause it doesn't yet have enough approvals ",
      "> Why PR not merged?\r\n\r\n@ademaro you could help things along by approving it! That counts as a vote. We need 20 approvals to see it included."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8581a88c0a76e0a4e9e7",
    "number": 2222,
    "body": "## What is this Python project?\r\n\r\n**Learn Python 3** is an open source book to learn Python Programming. \r\nIt resides in [Github](https://github.com/animator/learn-python) and is available both as [PDF](https://github.com/animator/learn-python/blob/main/pdf/learn-python-v2022.10.pdf) and [HTML](https://animator.github.io/learn-python/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe book has a very well defined structure. It is concise and touches a lot of fundamental concepts very well.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8582a88c0a76e0a4e9e8",
    "number": 2219,
    "body": "## What is this Python project?\r\n\r\nStarlette is a production ready, lightweight and low-complexity HTTP web framework/toolkit.\r\nWebSocket support.\r\n* In-process background tasks\r\n* Startup and shutdown events\r\n* CORS, GZip, Static Files, Streaming responses.\r\n* Session and Cookie support.\r\n* Compatible with asyncio and trio backends.\r\n* Great overall performance [against independent benchmarks](https://www.techempower.com/benchmarks/#hw=ph&test=fortune&l=zijzen-sf).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nStarlette is a minimalist ASGI library for writing against basic but powerful Request and Response classes. \r\n* Supports HTTP \r\n* Supports WebSockets\r\n\r\nThis framework is used by FastAPI already present in the list under **RESTful API**\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8582a88c0a76e0a4e9e9",
    "number": 2218,
    "body": "The original faust project hasn't received any updates in a long time. We're still actively maintaining our fork, please direct users to us!",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8583a88c0a76e0a4e9ea",
    "number": 2216,
    "body": "## What is this Python project?\r\n\r\nCommand line tool to listen to your favorite book, or article and save it to listen offline.\r\n\r\nSupported Formats:- pdf/txt/docs/rst/epub/mobie\r\n\r\nDescribe features.\r\n\r\n1. Create JSON format book\r\n2. Liste to your book with\r\n3. Save your audiobook for later\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n \r\n I don't think there is a similar project available in python(to my knowledge).\r\n--\r\n\r\nDocumentation:- [Audiobook Documentation](https://audiobook.readthedocs.io/)\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8584a88c0a76e0a4e9eb",
    "number": 2215,
    "body": "## What is this Python project?\r\n\r\nPlotly Library is an open-source library that can be used to easily visualize and understand data.\r\nPlotly supports a number of different plot types, including line charts, scatter plots, histograms, and cox plots.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPlotly has the ability to discover any outliers or anomalies in a huge number of data points using its hover tool.\r\nIt has a pleasing appearance and appeals to a variety of audiences.\r\nIt enables us to completely customize our graphs, which improves the significance and readability of our plot for others.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8585a88c0a76e0a4e9ec",
    "number": 2213,
    "body": "## What is this Python project?\r\n\r\n[website](https://strawberry.rocks/)\r\nPython GraphQL library inspired by dataclasses\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\nCompared to Graphene\r\nWorks with type annotations, has a better developer experience and is active mantained. \r\nStrawberry works with Django, asgi, Starlette, FastAPI, Flask and other frameworks. \r\n\r\nAs [FastAPI docs](https://fastapi.tiangolo.com/advanced/graphql/) says: \r\n>If you need or want to work with GraphQL, [Strawberry](https://strawberry.rocks/) is the recommended library as it has the design closest to FastAPI's design, it's all based on type annotations.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "there is already #1806 !"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8586a88c0a76e0a4e9ed",
    "number": 2209,
    "body": "redirected pyqt to link to official docs, which is more useful for a beginner\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #2209 from anuragrao04/patch-1\n\nredirected pyqt to official docs, which is more useful for a beginner"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8586a88c0a76e0a4e9ee",
    "number": 2204,
    "body": "added 4 free to read books to the books section, and removed one that was not free to read.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "AmongTribesmen-books",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8587a88c0a76e0a4e9ef",
    "number": 2196,
    "body": "## What is this Python project?\r\n\r\n[Refurb](https://github.com/dosisod/refurb/) is a code checker that uses pattern matching on abstract syntax trees to find patterns in the code and suggest improvements that make the code more readable and/or modern.\r\n\r\nI started using it, and it suggested I replace:\r\n\r\n```python\r\ntry:\r\n    something()\r\nexcept Exception:\r\n    pass\r\n```\r\n\r\nwith:\r\n\r\n```python\r\nwith contextlib.supress(Exception):\r\n    something()\r\n```\r\nAnd got me hooked.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project covers the code once it is correct, so it's compatible with other tools such as format checkers, style checkers, linters, type checkers. This will suggest modern approaches to frequently written patterns that are less readable than the suggested alternatives.\r\n\r\nI am not aware of other tools in this space.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_refurb",
    "is_a_fork": true,
    "comments": [
      "Looks great, but seems to need a bit more time. I hit my first bug within less then 5 minutes with refurb.",
      "Thanks for checking. I saw the bug reported 💪. What is your usual policy for revisiting a project?\n",
      "I'm not deciding on policies, I'm just voting and sometimes commenting. I should also mention that the bug I reported took only 3 hours to be fixed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8588a88c0a76e0a4e9f0",
    "number": 2192,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8589a88c0a76e0a4e9f1",
    "number": 2191,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hope It'll be useful for you"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f858aa88c0a76e0a4e9f2",
    "number": 2190,
    "body": "No updates for four years, apistar.org is dead, the repo has been archived.",
    "head_branch": "rm_apistar",
    "is_a_fork": true,
    "comments": [
      "@vinta Do you need help maintaining this repo?",
      "GET OFF MY ASS I HAVE NO MONEY DAMN IDIOTS\n\nOn Thu, Sep 29, 2022, 11:01 AM Ryan Delaney ***@***.***>\nwrote:\n\n> @vinta <https://github.com/vinta> Do you need help maintaining this repo?\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vinta/awesome-python/pull/2190#issuecomment-1262482751>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ATWZTNLZLP64PJLXAVTWE4LWAW4M5ANCNFSM6AAAAAAQYECIJE>\n> .\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>\n",
      "@RobertWright78 Sir this is a Wendy's"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f858aa88c0a76e0a4e9f3",
    "number": 2188,
    "body": "## What is this Python project?\r\n\r\n[mamba](https://github.com/mamba-org/mamba) is a reimplementation of the conda package manager in C++.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nmamba is a full replacement for conda, on aarch64 Linux, the official conda may unavailable, mamba can be an alternative in this case.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f858ba88c0a76e0a4e9f4",
    "number": 2176,
    "body": "## What is this Python project?\r\nShiny makes it easy to build interactive web applications with the power of Python’s data and scientific stack.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-  Write your application in Python; no web development skills required.\r\n- Built from the ground up to support custom layouts, styles, and the modularity required for full-fledged applications, all from Python.\r\n- Uses reactivity to efficiently handle data processing and minimize expensive re-computations.\r\n\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Awesome 👍",
      "@Yousuf28 , shiny looks interesting, but I didn't right away see how it improves over [streamlit](https://streamlit.io). Also, the website says that it's currently in alpha. So it might need a bit more time to really be recommendable as \"awesome\"."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f858ca88c0a76e0a4e9f5",
    "number": 2174,
    "body": "## What is this Python project?\r\n[Reloadium](https://github.com/reloadware/reloadium) adds hot reloading and profiling features to any Python application\r\nComes with a plugin for PyCharm and VsCode (in progress)\r\n\r\n## What's the difference between this Python project and similar ones?\r\nComes with full support for the most popular libraries like Django, Flask, Pandas, SqlAlchemy, PyGame\r\nEnables restarting frames, line profiling, fixing errors while debugging and other advanced hot reloading features.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Yes, this definitely should be on the list.",
      "> Excelentt\n\n",
      "wow!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f858da88c0a76e0a4e9f6",
    "number": 2172,
    "body": "## What is this Python project?\r\n\r\n`hyperparameter` is a configuration framework designed for data scientists and machine learning engineers. It works in a more pythonic way:  the users write their code in python and add a decorator to the functions or classes; `hyperparameter` will map the keyword arguments to configuration keys and use a `with` context to manage the configurations.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n`hyperparameter` is not a config file parser. It is a configuration framework that maps keyword arguments to configuration keys. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f858ea88c0a76e0a4e9f7",
    "number": 2167,
    "body": "## What is this Python project?\r\n\r\nPython library that provides common and simple database abstractions on top of Google Sheets.\r\n\r\n1. Provide a straightforward **key-value** and **row based database** interfaces on top of Google Sheets.\r\n2. Serve your data **without any server setup** (by leveraging Google Sheets infrastructure).\r\n3. Support **flexible enough query language** to perform various data queries.\r\n4. **Manually manipulate data** via the familiar Google Sheets UI (no admin page required).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComparisons are elaborated in [Alternative Analysis section](https://github.com/FreeLeh/docs/blob/main/freedb/alternatives.md).\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f858ea88c0a76e0a4e9f8",
    "number": 2165,
    "body": "## Add Sqlmodel to Python ORM Section\r\n sql model is an orm that is very useful and can be very helpful to many users",
    "head_branch": "sqlmodel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f858fa88c0a76e0a4e9f9",
    "number": 2163,
    "body": "## What is this Python project?\r\n\r\nIt is an async ORM-like tool that acts as a DB interface layer to execute and hydrate SQL queries into Python objects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Think of it as a one-way ORM: you provide the query, it provides the interface for managing the pool, executing queries, transaction, and model hydration\r\n- Makes `.sql` files first-class citizens\r\n- Emphasize data retrieval as a query action\r\n- Provides customizable tooling for projects with complex schema requirements to get data from the DB into Python\r\n- Easily enable developers to make full use of DB potential and not just limited toolset\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8590a88c0a76e0a4e9fa",
    "number": 2157,
    "body": "## What is this Python project?\r\n\r\nThis Project Tries To Bring Cool Things From Other Languages To Python. For Example:\r\n\r\n* One Line Conditions In C++\r\n* PHP Interfaces\r\n* C++ Switch-Case\r\n\r\nBut For Sure It Has Some Differences To That Languages Too. It Has Common Data Types With Some Cool Options Too. For Example `PyshaString` ( There Is Other DataTypes Like `PyshaDict` And `PyshaList` Too. ) That Has:\r\n*  `<<` Operator For Append To And String\r\n* `+=` Operator To Append To An String With Setting Changes\r\n* `>>` Operator To Prepend To An String\r\n*  `replace_dict` To Replace All Keys Of Dict With Values\r\n* Lots Of Other Cool Things :)\r\n\r\nPysha Has A New Ability To Get An Array With a Huge Dimontions From Input With `Loop` Class. It Has A `Crossplatformer` That Helps You Make Your Application Crossplatform Easier.It Has Cool Decorators Like `retry`,`ignore`,`once`,`timer` and `interface`. It Has a `PercentPrinter` That can make a Progressbar for you In Command Line. And Lots Of Other Cool Options :) You Can Check For More If You Want.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI Personally Did'nt Saw Any Python Library Or Framework That Give You Option To Use `Switch Case`, `PHP Interface` Or `C++ One Line Conditions`. I Admit Its A Little Bit Different But I Think Still Its Cool :)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8591a88c0a76e0a4e9fb",
    "number": 2151,
    "body": "## What is this Python project?\r\n\r\nI am the maintainer of AWS Data Wrangler which has now been renamed to AWS SDK for pandas.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe former [URL](https://github.com/awslabs/aws-data-wrangler) is now pointing to the new [repository](https://github.com/aws/aws-sdk-pandas) with the new name \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "jaidisido-patch-aws-sdk-pandas",
    "is_a_fork": true,
    "comments": [
      "> ## What is this Python project?\n> \n> I am the maintainer of AWS Data Wrangler which has now been renamed to AWS SDK for pandas.\n> \n> ## What's the difference between this Python project and similar ones?\n> \n> The former [URL](https://github.com/awslabs/aws-data-wrangler) is now pointing to the new [repository](https://github.com/aws/aws-sdk-pandas) with the new name \n> \n> --\n> \n> Anyone who agrees with this pull request could submit an *Approve* review to it.\n> \n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8592a88c0a76e0a4e9fc",
    "number": 2147,
    "body": "## What is this Python project?\r\n\r\nHerePy is a library that provides a Python interface to the HERE location APIs. Currently it supports the APIs below\r\n\r\n- DestinationWeatherApi\r\n- EVChargingStationsApi\r\n- FleetTelematicsApi\r\n- GeocoderApi\r\n- GeocoderAutoCompleteApi\r\n- GeocoderReverseApi\r\n- PlacesApi\r\n- PublicTransitApi\r\n- RmeApi\r\n- RoutingApi\r\n- TrafficApi\r\n- IsolineRoutingApi\r\n- MapTileApi\r\n- VectorTileApi\r\n- MapImageApi\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nHerePy is a Python framework that contains different location data based API clients with an easy to use interface. It also supports some APIs which other projects don't, such as EVChargingStations, FleetTelematics, MapTile and VectorTile APIs.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8593a88c0a76e0a4e9fd",
    "number": 2146,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8594a88c0a76e0a4e9fe",
    "number": 2145,
    "body": "## What is this Python project?\r\n`PyCryptodome` It is a library that can replace pycrypto.\r\n`SageMath` It has a lot of features in the field of mathematics.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt provides various features related to cryptography.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8594a88c0a76e0a4e9ff",
    "number": 2144,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8595a88c0a76e0a4ea00",
    "number": 2143,
    "body": "## pytube\r\n\r\npytube is a lightweight library written in Python. It has no third-party dependencies and aims to be highly reliable.\r\npytube includes a command-line utility, allowing you to download videos right from the terminal.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEasy to use\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8596a88c0a76e0a4ea01",
    "number": 2140,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Great work",
      "Maybe describe here, what this actually does? Why is it better than alternatives, you know, that whole stuff that is in the template?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8597a88c0a76e0a4ea02",
    "number": 2139,
    "body": "Adding Trunk to CLI productivity tools.\r\n\r\n## What is this Python project?\r\n\r\nTool for linting, static analysis, and merge queue via CLI. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis package brings together multiple tools to service all languages in 1 package. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8598a88c0a76e0a4ea03",
    "number": 2133,
    "body": "## What is this Python project?\r\n\r\npyttsx3 it's an offline text to speech synthesis library\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-- It can be used offline\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8599a88c0a76e0a4ea04",
    "number": 2131,
    "body": "## What is this Python project?\r\n\r\n`torchvision` is a computer vision library on top of PyTorch\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It provides very intuitive and pythonic APIs for image processing and creating a computation graph (compared to OpenCV)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8599a88c0a76e0a4ea05",
    "number": 2128,
    "body": "Added https in the LICENSES sections and removed http for the creative standard reference web address! ",
    "head_branch": "new_branch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f859aa88c0a76e0a4ea06",
    "number": 2126,
    "body": "## What is this Python project?\r\n\r\nA dataframe lib written in Rust, with Python API\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's faster\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f859ba88c0a76e0a4ea07",
    "number": 2123,
    "body": "Add FastAPI in Asynchronous Web Frameworks",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "It already is under Rest APIs, which seems to make more sense to me. After all, FastAPI isn't really a full-blown web framework.",
      "Aah, just saw it under REST APIs.\nYour opinion makes sense"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f859ca88c0a76e0a4ea08",
    "number": 2122,
    "body": "In line 226: dogpile.cache is next generation replacement for Beaker made by same authors ->  dogpile.cache is a next generation replacement for Beaker made by the same authors.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Yes",
      "[]()"
    ],
    "commit_messages": [
      "Merge pull request #2122 from nishans08/master\n\nfix errors in README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f859ca88c0a76e0a4ea09",
    "number": 2121,
    "body": "DVC, CML and MLEM added into Machine Learning and Job Scheduler section\r\n\r\n## What is this Python project?\r\n\r\n* Open-source Version Control System for Machine Learning Projects\r\n* Continuous Machine Learning (CML) is CI/CD for Machine Learning Projects\r\n* Open-source tool to simplify ML model deployment_\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* DVC combines a number of existing ideas into a single tool, with the goal of bringing best practices from software engineering into the data science field (refer to [What is DVC?](https://dvc.org/doc/user-guide/what-is-dvc) for more details).\r\n\r\n* MLOps isn't a platform- it's an ecosystem of tools. CML helps you bring your favorite DevOps tools to machine learning.\r\n\r\n* Git-native ML model development. Enable GitFlow and other software engineering best practices.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "DVC is pretty awesome."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f859da88c0a76e0a4ea0a",
    "number": 2119,
    "body": "## What is this Python project?\r\n\r\nFrida is a [free](https://www.gnu.org/philosophy/free-sw.en.html) dynamic instrumentation toolkit that enables software professionals to execute their own scripts in software that has traditionally been locked down; i.e. proprietary (such as Android applications).\r\n\r\nThis allows the software community to hook into live processes, enabling them to test, add functionality to, or even debug such applications.\r\n\r\nfrom: https://techmonitor.ai/technology/software/frida-tool-software-reverse\r\n\r\n“Frida makes it possible for a small company to create products compatible with products from large software companies. For example if a big company dominates the market in one area but isn’t interested in supporting users with Android phones, a small company could use Frida to gain the knowledge needed to create a compatible app for Android users.”\r\n\r\nDue to its ability to hook into processes dynamically, developers can rapidly develop tools using Frida. For example, in an Android application process, this can be hooked into to extract the output of the process itself, meaning that any additional functionality can be added with minimal effort. (For the technically inclined, the Frida team has produced a [useful example](https://www.frida.re/docs/examples/android) for injecting arbitrary JavaScript into an Android app process.)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFrida though has cross platform compatibility stands out because of its ability to also debug android applications.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f859ea88c0a76e0a4ea0b",
    "number": 2115,
    "body": "## What is this Python project?\r\n\r\nIt's a tool to download videos from YouTube, Twitch Clips and many more types of videos or video platforms.\r\n\r\nIt also supports plugins and has a python api.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* More extractors / support for more websites\r\n* faster\r\n* works better on slow internet connections\r\n* Better plugin support / plugin support\r\n* Better api support\r\n* Can block content in videos with sponsorblocker.\r\netc.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f859fa88c0a76e0a4ea0c",
    "number": 2111,
    "body": "## What is this Python project?\r\n\r\nThis project provides modern _pythonic_ bindings to OpenGL.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n### ModernGL vs PyOpenGL\r\n\r\n--Compared to PyOpenGL it is more pythonic, and easier to use and learn.\r\n--Faster than PyOpenGL in certain cases.\r\n--Less amount of code for the same behaviour.\r\n```\r\n# PyOpenGL\r\nvbo1 = glGenBuffers(1)\r\nGL.glBindBuffer(GL_ARRAY_BUFFER, vbo1)\r\nGL.glBufferData(GL_ARRAY_BUFFER, b'Hello World!', GL_STATIC_DRAW)\r\n\r\nvbo2 = glGenBuffers(1)\r\nGL.glBindBuffer(GL_ARRAY_BUFFER, vbo2)\r\nGL.glBufferData(GL_ARRAY_BUFFER, b'\\x00' * 1024, GL_DYNAMIC_DRAW)\r\n```\r\n```\r\n# ModernGL\r\nvbo1 = ctx.buffer(b'Hello World!')\r\nvbo2 = ctx.buffer(reserve=1024, dynamic=True)\r\n```\r\n\r\nAnother pull request was made years ago here: #893 But it went stale. I'm actually surprised it isn't already on the list, it seems fairly popular, and quite nice.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a0a88c0a76e0a4ea0d",
    "number": 2108,
    "body": "## What is this Python project?\r\n\r\n This Library a Audio Validator For Django With d MIME type checking the magic numbers signature And Extension Use FileType Library \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nthis library is first audio validator for django\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a1a88c0a76e0a4ea0e",
    "number": 2105,
    "body": "## What is this Python project?\r\n\r\nwikilink is a multiprocessing web-scraping *application* to scrape the wiki pages, extract urls and find the minimum number of links between 2 given wiki pages.\r\n\r\nhttps://github.com/tranlyvu/wiki-link\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-wikilink",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a1a88c0a76e0a4ea0f",
    "number": 2104,
    "body": "## What is this Python project?\r\n\r\n- Boilerplate /code structure for the restful Flask-Restx framework\r\n- Link of [the project](https://github.com/tranlyvu/Flask-RESTX-boilerplate)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-Flask-RESTX-boilerplate",
    "is_a_fork": true,
    "comments": [
      "How ",
      "> How\r\n\r\nHi, please vote on the description to get the project merged"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a2a88c0a76e0a4ea10",
    "number": 2101,
    "body": "## What is this Python project?\r\n\r\n* pybind11 is a lightweight header-only library that exposes C++ types in Python and vice versa, mainly to create Python bindings of existing C++ code. (cite from the official doc)\r\n\r\n* Inspired by Boost.Python, but aim to resolve the complexity.\r\n\r\n* A very compact implementation. It's only composed of ~4K line without comments.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. It's a lightweight, header only C++ library.\r\n2. It supprots modern C++ (instead of just C)\r\n3. One need not to learn a third language other than C++ and Python. (Some others require)\r\n4. Also Used by popular project like Cafe2 machine learning framework.\r\n5. Its documentation is quite complete!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "Add-pybind11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a3a88c0a76e0a4ea11",
    "number": 2099,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a4a88c0a76e0a4ea12",
    "number": 2093,
    "body": "## What is this Python project?\r\n\r\nPycord is a discord API wrapper used for building discord bots and webhooks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPycord (in my opinion) has:\r\n* a better community\r\n* more support\r\n* faster updates and development\r\n* it's also more consistent since discord.py was stopped then restarted\r\n\r\nThis is a duplicate of [this](https://github.com/vinta/awesome-python/pull/2089) PR. It was automatically closed after I deleted the branch, however it already had 3 upvotes\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "It's nice man"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a5a88c0a76e0a4ea13",
    "number": 2092,
    "body": "## What is this Python project?\r\n\r\nTextual is a TUI (Text User Interface) framework for Python inspired by modern web development. Currently a Work in Progress. It uses Rich to render rich text, so anything that Rich can render may be used in Textual.\r\n\r\nEvent handling in Textual is asynchronous (using async and await keywords). Widgets (UI components) can independently update and communicate with each other via message passing.\r\n\r\nTextual has more in common with modern web development than it does with curses; layout is done with CSS grid and (soon) the theme may be customized with CSS. Other techniques are borrowed from JS frameworks such as Vue and React.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nncurses and urwid look old-school compared to these projects (textual+rich)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a5a88c0a76e0a4ea14",
    "number": 2090,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a6a88c0a76e0a4ea15",
    "number": 2089,
    "body": "## What is this Python project?\r\n\r\nPycord is a discord API wrapper used for building discord bots and webhooks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPycord (in my opinion) has:\r\n* a better community\r\n* more support\r\n* faster updates and development\r\n* it's also more consistent since discord.py was stopped then restarted\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a7a88c0a76e0a4ea16",
    "number": 2087,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "MyeaMKelly-patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a8a88c0a76e0a4ea17",
    "number": 2086,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "OwireduDJustice-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85a9a88c0a76e0a4ea18",
    "number": 2085,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "MyeaMKelly-patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85aaa88c0a76e0a4ea19",
    "number": 2084,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "MyeaMKelly-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85aba88c0a76e0a4ea1a",
    "number": 2083,
    "body": "## What is this Python project?\r\n\r\nA collection of useful charts to help when doing ML model selection and hyperparameter fiddling.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the only data-vis package I've seen specifically aimed at assisting model selection.\r\n\r\nThe docs are thorough and they've put some effort into having a concise API.\r\n\r\nFWIW, it extends Matplotlib and is listed on [Matplotlib's own list of helpful third party packages](https://matplotlib.org/mpl-third-party/#domain-specific-libraries).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85aba88c0a76e0a4ea1b",
    "number": 2082,
    "body": "Arctic is a high performance datastore for numeric data (https://github.com/man-group/arctic)\r\n\r\n## What is this Python project?\r\n\r\n\"Arctic is a high performance datastore for numeric data. It supports Pandas, numpy arrays and pickled objects out-of-the-box, with pluggable support for other data types and optional versioning.\"\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\"Arctic can query millions of rows per second per client, achieves ~10x compression on network bandwidth, ~10x compression on disk, and scales to hundreds of millions of rows per second per [MongoDB] instance.\"\r\n\r\nThere isn't really similar project. It seems like a very specialized project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85aca88c0a76e0a4ea1c",
    "number": 2080,
    "body": "## What is this Python project?\r\n\r\nGraph-tool is an efficient [Python](https://www.python.org/) module for manipulation and statistical analysis of [graphs](https://en.wikipedia.org/wiki/Graph_%28mathematics%29) (a.k.a. [networks](https://en.wikipedia.org/wiki/Network_theory)). \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nContrary to most other Python modules with similar functionality, the core data structures and algorithms are implemented in [C++](https://en.wikipedia.org/wiki/C%2B%2B), making extensive use of [template metaprogramming](https://en.wikipedia.org/wiki/Template_metaprogramming), based heavily on the [Boost Graph Library](https://www.boost.org/doc/libs/release/libs/graph). This confers it a level of [performance](https://graph-tool.skewed.de/performance) that is comparable (both in memory usage and computation time) to that of a pure C/C++ library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85ada88c0a76e0a4ea1d",
    "number": 2078,
    "body": "## What is this Python project?\r\nContains every basic python resource a beginner into python needs.\r\nContains YT creators, cheatsheets, podcasts, newsletters, blogs, yt playlists, twitter creators. official links, ebooks, documentation sites and many more.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompiled. well structured info.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85aea88c0a76e0a4ea1e",
    "number": 2077,
    "body": "## What is this Python project?\r\n\r\nLineaPy helps data science professionals to quickly clean up their long, messy development scripts/notebooks and automatically transform them into production-ready pipelines.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- LineaPy primarily aims to serve the needs of data scientists, rather then professional programmers. Hence, the project is more low-code than other refactoring tools.\r\n- The project is better suited to serving refactoring needs in interactive computing (e.g., Jupyter notebooks) which is an integral part of data science workflows.\r\n- Given this nature, the project also integrates with other major components of the data science tooling ecosystem, such as Apache Airflow.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "lineapy",
    "is_a_fork": true,
    "comments": [
      "Approve"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85afa88c0a76e0a4ea1f",
    "number": 2074,
    "body": "## What is this Python project?\r\n\r\nCovalent is a framework for distributed computing on heterogeneous infrastructure - from CPUs, to GPUs, to quantum computers and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Designed to work across advanced computing hardware such as GPU clusters, (federations of) supercomputers, and quantum computers.\r\n* Native parallelization across diverse hardware types\r\n* Designed for on-premise and cloud deployments\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@vinta could you approve/merge this when possible?  Thanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b0a88c0a76e0a4ea20",
    "number": 2071,
    "body": "## What is this Python project?\r\n\r\nNextcord is a modern, easy-to-use, feature-rich, and async-ready API wrapper for Discord.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Maintained\r\n2. Rich documentation\r\n3. Great discord server\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b0a88c0a76e0a4ea21",
    "number": 2039,
    "body": "## Ursina Engine\r\n\r\nUrsina makes it easier to develop games, visualizations and other kinds of software.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n        • Reload code/textures/models while in-game\r\n        • Automatic import of .psd and .blend files\r\n        • Easy to use mesh class for making procedural geometry\r\n        • Concise code and less boilerplate code\r\n        • Built-in animation and tweening\r\n        • Pre-made prefabs such as FirstPersonController, 2d platformer controller, editor camera\r\n        • Lots of included procedural 3D primitives\r\n        • Play in fullscreen while developing\r\n        • Many shaders to choose from, or write your own with GLSL\r\n****\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "ursina",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b1a88c0a76e0a4ea22",
    "number": 2029,
    "body": "## What is this Python project?\r\n\r\nArgonaut makes App deployments to AWS cloud environments a breeze by automating several aspects.\r\nIt allows both App and Infrastructure management through the same interface.\r\nWe recently added Django app support on AWS Lambda environments.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nMuch simpler setup allowing you to deploy in minutes.\r\nHigh customization possibilities.\r\nAllows deployment on your cloud.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b2a88c0a76e0a4ea23",
    "number": 2027,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b3a88c0a76e0a4ea24",
    "number": 2024,
    "body": "## What is this Python project?\r\n\r\nThis framework is designed to take events from chat services and other sources and execute Python functions (skills) based on their contents. Those functions can be anything you like, from simple conversational responses to running complex tasks. The true power of this project is to act as a glue library to bring the multitude of natural language APIs, chat services and third-party APIs together.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is designed to be extendable, scalable and simple.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-opsdroid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b4a88c0a76e0a4ea25",
    "number": 2021,
    "body": "## What is this Python project?\r\n\r\n- Is an interface to [Graphviz](https://www.graphviz.org/)\r\n- Can parse and dump into the [DOT language](https://en.wikipedia.org/wiki/DOT_%28graph_description_language%29) used by GraphViz\r\n- Is written in pure Python,\r\nand [networkx](https://github.com/networkx/networkx) can convert its graphs to pydot.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It's a neat way to visualize graphs or binary trees in which I haven't seen anywhere else yet.\r\n- Can be especially useful if developing algorithms based on neural networks and decision trees.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "pydot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b5a88c0a76e0a4ea26",
    "number": 2020,
    "body": "## What is this Python project?\r\n\r\nPyCaret is an ML project management solution that shortens the lifecycle of machine learning projects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Make performing standard activities in an ML project simpler.\r\n- Python version of the Caret machine learning package.\r\n- Enables models to be tested, compared and tuned on a specific dataset with just a few lines of code.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "pycaret",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b6a88c0a76e0a4ea27",
    "number": 2019,
    "body": "## What is this Python project?\r\n\r\nSkyfield is a pure Python astronomy package that makes it easy to generate high precision- research grade positions for planet and earth satellites.\r\n\r\n-Written in pure python and it installs without any compilation\r\n-Supports Python 2.6, 2.7 and 3.\r\n-Compute geocentric positions\r\n-Obtain topocentric coordinates from a specific location on the Earth’s surface to the desired planet.\r\n-Will accept Astropy time objects as input and return results in AstroPy units.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nSimilar to Astropy, Skyfield can chart the morning and evening sky for a particular planet, such as the apparition of Venus.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "open-source-project",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b7a88c0a76e0a4ea28",
    "number": 2018,
    "body": "## What is this Python project?\r\nProblem Solving with Algorithms and Data Structures Using Python SECOND EDITION by Bradley N. Miller and David L. Ranum. This is a great book for beginner - intermediate Software Developers looking to improve their knowledge on DSA. \r\nDescribe features.\r\nThis book has 3 key features:\r\n- > A strong focus on problem solving introduces students to the fundamental data structures and algorithms by providing a very readable text without introducing an overwhelming amount of new language syntax.\r\n- > Algorithm analysis in terms of Big-O running time is introduced early and applied throughout.\r\n- > Python is used to facilitate the success of beginning students in using and mastering data structures and algorithms.\r\n- [Book on Amazon](https://www.amazon.com/Problem-Solving-Algorithms-Structures-Python/dp/1590282574)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Many books either have too many visuals and not enough code or vice versa. This book provides a perfect balance.\r\n- The topics chosen to illustrate algos are hard to find described better in other books.\r\n- Extremely clear, and reader-friendly without sacrificing depth and breadth of topics. Covers classic/important cs problems in addition to helping consolidate Python syntax.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "DSA",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b7a88c0a76e0a4ea29",
    "number": 2017,
    "body": "## What is this Python project?\r\n\r\nSoftware to create deepfake videos.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nInstructional videos, Youtube examples.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "deepfacelab",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b8a88c0a76e0a4ea2a",
    "number": 2016,
    "body": "## What is this Python project?\r\n\r\nIt spins up a testing environment on your local machine that provides the same functionality and APIs as the real AWS cloud environment.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "localstack",
    "is_a_fork": true,
    "comments": [
      "@jhuston5 Why did you reformat the whole file?",
      "Not sure - might be my prettier settings. I will close this request. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85b9a88c0a76e0a4ea2b",
    "number": 2014,
    "body": "## What is this Python project?\r\n\r\nA tool for managing the entire lifecycle of a project: creation, versioning, building (with its build backend Hatchling), environment management, publishing, etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- In comparison to `poetry`, Hatch specializes in environment management and has a more featureful plugin system.\r\n- In comparison to `poetry-core`, Hatchling never strays from community standards and is in fact eager to adopt new ones (it's the only backend that currently supports [PEP 639](https://www.python.org/dev/peps/pep-0639/)).\r\n- In comparison to `setuptools`, Hatchling is far smaller, making it less susceptible to security issues and more auditable. For example, the logic to build a wheel resides in this [one file](https://github.com/ofek/hatch/blob/master/backend/src/hatchling/builders/wheel.py). Also, wheels and sdists are built in a reproducible manner by default.\r\n- In comparison to `flit-core`, Hatchling is extensible by design. For example, there is already [a plugin](https://github.com/ofek/hatch-vcs) for [setuptools_scm](https://github.com/pypa/setuptools_scm) (which despite the legacy naming is actually now decoupled from `setuptools`) and [a plugin](https://github.com/ofek/hatch-mypyc) for compiling code with [Mypyc](https://github.com/mypyc/mypyc).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta Hello! Can you please take a look at this?",
      "Hatch is an absolutely awesome python project and is already used by [many python projects](https://hatch.pypa.io/latest/users/)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85baa88c0a76e0a4ea2c",
    "number": 2013,
    "body": "## What is this Python project?\r\naiomysql is a \"driver\" for accessing a MySQL database from the [asyncio](http://docs.python.org/3.5/library/asyncio.html) (PEP-3156/tulip) framework. It depends on and reuses most parts of [PyMySQL](https://github.com/PyMySQL/PyMySQL) .\r\n\r\naiopg is a library for accessing a [PostgreSQL](http://www.postgresql.org/) database from the [asyncio](https://docs.python.org/3/library/asyncio.html) (PEP-3156/tulip) framework.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThese db drivers operate asynchronously.\r\nMore details are as above.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85bba88c0a76e0a4ea2d",
    "number": 2008,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "FastAPI is already there under \"RESTful API\". I don't think, it makes sense to add it as a \"full stack web framework\"."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85bca88c0a76e0a4ea2e",
    "number": 2003,
    "body": "The project recently got several updates. The maintainer changed and the PyPI page links to all recent pages.",
    "head_branch": "pypdf2-update",
    "is_a_fork": true,
    "comments": [
      "Close this in favor of https://github.com/vinta/awesome-python/pull/2426"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85bca88c0a76e0a4ea2f",
    "number": 1999,
    "body": "An awesome, dead simple C gamedev library with Python bindings.\r\n",
    "head_branch": "raylib-python-cffi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85bda88c0a76e0a4ea30",
    "number": 1997,
    "body": "## What is this Python project?\r\n\r\nSquirrel is a great library for fast and flexible loading of large-scale datasets which makes it very useful for anyone working with deep learning. You can write your own drivers and load, transform, share datasets of images, text or multi-modal.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ngreat speed and flexibility - there are benchmarks at https://merantix-momentum.com/technology/squirrel\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85bea88c0a76e0a4ea31",
    "number": 1995,
    "body": "Signed-off-by: Sylvain Hellegouarch <sh@defuze.org>\r\n\r\n## What is this Python project?\r\n\r\nChaos Toolkit is a leading chaos engineering engineering engine. It's been around for almost 5 years and has grown a very nice friendly user base and is used in large organisations across industries.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNone known at this time.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-chaostoolkit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85bfa88c0a76e0a4ea32",
    "number": 1994,
    "body": "## What is this Python project?\r\n\r\nStreamlit turns data scripts into shareable web apps in minutes.\r\nAll in pure Python. No front‑end experience required.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUsing pure python, no additional libraries are needed. Ease of use is prioritized.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I love this library - it should definitely be added to the list."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c0a88c0a76e0a4ea33",
    "number": 1993,
    "body": "## What is this Python project?\r\n\r\nAdded an amazing GUI library that allows you to create and deploy cross-platform native context menus. It's really easy to use and integrates pretty vital functionality with native context menus.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFrom my research I haven't found any other libraries in Python that edit the context menu, and there's especially no other libraries to create cascading context menus.\r\n\r\nYou can find the home page here: https://github.com/saleguas/context_menu\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Very nice. I will try this library in the next few days. I hope your pull request is accepted.",
      "I'm the creator of this project, thank you so much for nominating me :). I put a ton of work into it and all I really want is people to know about it so it can help them with their projects.",
      "Well done.\r\n",
      "Implementing context menus in a non-strenuous manner with python can be quite useful"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c0a88c0a76e0a4ea34",
    "number": 1992,
    "body": " Download anything from Instagram with this robot\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c1a88c0a76e0a4ea35",
    "number": 1987,
    "body": "## What is this Python project?\r\n\r\nEasy. Awesome. \r\nSimple JWT provides a JSON Web Token authentication backend for the Django REST Framework.\r\nIt aims to cover the most common use cases of JWTs by offering a conservative set of default features. It also aims to be easily extensible in case a desired feature is not present.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nhttps://github.com/jpadilla/django-rest-framework-jwt\r\n- No more updates since August 13, 2019\r\n- So it is right to use simplejwt\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "djangor-rest-framework-simplejwt",
    "is_a_fork": true,
    "comments": [
      "I used this library in my project and it worked very well!",
      "> I used this library in my project and it worked very well!\n\n",
      "Im just getting started with GitHub and this was my first pull request. Im a \"new guy\" sorry if I didnt pull it correctly.\n \n\nBest Regards,\n\nRick Wright\n\n \n \n\nSent: Sunday, April 03, 2022 at 3:49 AM\nFrom: \"IdkSaveme\" ***@***.***>\nTo: \"vinta/awesome-python\" ***@***.***>\nCc: \"Subscribed\" ***@***.***>\nSubject: Re: [vinta/awesome-python] Add django-rest-framework-simplejwt (PR #1987)\n\n\n \n\n\nI used this library in my project and it worked very well!\n\n\n—\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>",
      "this library is very good"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c2a88c0a76e0a4ea36",
    "number": 1976,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c3a88c0a76e0a4ea37",
    "number": 1975,
    "body": "## What is this Python project?\r\n\r\nThe open sozúrce project Flower allows to federate any workload with any machine learning framework. It can be used to develop federated learning, analytics, and evaluation.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAdding federated learning resources. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "federated-learning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c4a88c0a76e0a4ea38",
    "number": 1974,
    "body": "## What is this Python project?\r\n\r\nThis is small framework for quick microservices scaffold generation\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c4a88c0a76e0a4ea39",
    "number": 1970,
    "body": "Added New Python Resources\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c5a88c0a76e0a4ea3a",
    "number": 1966,
    "body": "## What is this Python project?\r\n\r\nIt's a command line interface for [pypi.org](https://pypi-org \"The Python Package Index (PyPI) is a repository of software for the Python programming language.\")\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI've personally used it extensively and can say for sure that this is better than the alternatives. There also seems to be a [detailed comparison in the docs](https://wasi-master.github.io/pypi-command-line/#alternatives)\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-pypi-command-line",
    "is_a_fork": true,
    "comments": [
      "Make use of pip install "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c6a88c0a76e0a4ea3b",
    "number": 1965,
    "body": "## What is this Python project?\r\n\r\nChaos Genius is an open-source ML-powered analytics engine for outlier detection and root cause analysis. Chaos Genius can be used to monitor and analyze high dimensionality business, data, and system metrics at scale.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nChaos Genius offers an OSS alternative to proprietary analytics tools like AWS Lookout, Anodot, Sisu Data & Outlier.ai. It provides end to end platform from data ingestion, metric definition to machine learning and alerts. Other Python projects require significant engineering, machine learning, and plumbing to provide similar functionality. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c7a88c0a76e0a4ea3c",
    "number": 1962,
    "body": "…Analysis/Linting using many tools/Scanners with One Report\r\n\r\n## What is this Python project?\r\n\r\nCode Scanning/SAST/Static Analysis/Linting using many tools/Scanners with One Report. Written in Python. Suppors also Python scanning and also others.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no other similar ones.\r\n\r\nThere are other projects (i.e projects written in Java). However, having many tools (outputting in JSON) used to do Code Scanning and making one report is unique here.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "scanmycode",
    "is_a_fork": true,
    "comments": [
      "Microsoft Autook"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c8a88c0a76e0a4ea3d",
    "number": 1960,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85c9a88c0a76e0a4ea3e",
    "number": 1955,
    "body": "## cachetools\r\n\r\nThe [cachetools](https://cachetools.readthedocs.io/en/stable/) module provides various memoizing collections and decorators, including variants of the Python Standard Library’s [@lru_cache](http://docs.python.org/3/library/functools.html#functools.lru_cache) function decorator.\r\n\r\nFor the purpose of this module, a cache is a [mutable](http://docs.python.org/dev/glossary.html#term-mutable) [mapping](http://docs.python.org/dev/glossary.html#term-mapping) of a fixed maximum size. When the cache is full, i.e. by adding another item the cache would exceed its maximum size, the cache must choose which item(s) to discard based on a suitable [cache algorithm](http://en.wikipedia.org/wiki/Cache_algorithms).\r\n\r\nThis module provides multiple cache classes based on different cache algorithms, as well as decorators for easily memoizing function and method calls.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis module provides many useful variants and extensions of the Python Standard Library’s [@lru_cache (http://docs.python.org/3/library/functools.html#functools.lru_cache) function decorator.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-cachetools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85caa88c0a76e0a4ea3f",
    "number": 1952,
    "body": "## What is this Python project?\r\n\r\nCollection of Python Code Snippets for Beginners\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nA creative take on common Python patterns which is great for beginners.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi there - doing great hope all is well ",
      "Nice!!!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85caa88c0a76e0a4ea40",
    "number": 1949,
    "body": "## What is this Python project?\r\n\r\n`databooks` is a package to ease the collaboration between data scientists using [Jupyter notebooks](https://jupyter.org/), by reducing the number of git conflicts between different notebooks and resolution of git conflicts when encountered.\r\n\r\nThe key features include:\r\n\r\n- CLI tool\r\n  - Clear notebook metadata\r\n  - Resolve git conflicts\r\n- Simple to use\r\n- Simple API for using modelling and comparing notebooks using [Pydantic](https://pydantic-docs.helpmanual.io/)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- [nb-clean](https://github.com/srstevenson/nb-clean): helps clear notebook metadata, but only that, so more limited in scope compared to databooks.\r\n- [nbdime](https://github.com/jupyter/nbdime): helps with diffs and merges of notebooks, however, databooks supports a way to resolve existing conflicts, which is not supported by nbdime.\r\n- [nbdev](https://github.com/fastai/nbdev): nbdev provides an opinionated template for developing packages with notebooks, databooks is a configurable CLI tool that you can use in whatever way you prefer.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Also applied boy-scout rule on sorting of listings, looks like it's not enforced by CI",
      "@vinta Have you considered enforcing the sorting in the CI? I could set it up if you want",
      "はじめまして、お声かけをお願いします。",
      "晚安。\n\n发自Y\n\n> 在 2022年2月20日，下午2:11，reipa116 ***@***.***> 写道：\n> \n> ﻿\n> はじめまして、お声かけをお願いします。\n> \n> —\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> Triage notifications on the go with GitHub Mobile for iOS or Android. \n> You are receiving this because you are subscribed to this thread.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85cba88c0a76e0a4ea41",
    "number": 1936,
    "body": "## What is this Python project?\r\n\r\nPloomber is an open-source python library.\r\nIt's the fastest ⚡️ way to build data pipelines. Develop iteratively, deploy anywhere. ☁️\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPloomber is focused on data scientists instead of software engineers. It can run locally without any complex setup like airflow for instance.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hey @vinta  added Ploomber into your repo :) "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85cca88c0a76e0a4ea42",
    "number": 1931,
    "body": "## What is this Python project?\r\n\r\nQuickly create customizable UI components around your models. Gradio makes it easy for you to \"play around\" with your model in your browser by dragging-and-dropping in your own images, pasting your own text, recording your own voice, etc. and seeing what the model outputs.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nGradio is useful for:\r\n- Demoing your machine learning models for clients / collaborators / users / students\r\n- Deploying your models quickly with automatic shareable links and getting feedback on model performance\r\n- Debugging your model interactively during development using built-in interpretation visualizations for any model\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85cda88c0a76e0a4ea43",
    "number": 1929,
    "body": "## What is this Python project?\r\n\r\nA minimalistic http client https://github.com/sonic182/aiosonic for asyncio\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPure 100% python async http client, with decent performance\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85cea88c0a76e0a4ea44",
    "number": 1928,
    "body": "This PR has several parts:\r\n1. Rename \"Geolocation\" to \"geospatial data processing\", since it's a more accurate description of what these libraries do.\r\n2. Create a new subcategory for the \"core\" libraries and frameworks that are used for data analysis in the Python ecosystem.\r\n3. Move or add many popular libraries for visuzaliation and [exploratory] data analysis (see below).\r\n\r\nAdded / moves libraries:\r\n1. Cartopy, which is a complete geospatial data processing suit.\r\n2. GeoPandas, a geospatial data processing suit that is part of the HoloViz suit.\r\n3. TextBlob, a high-level API to NLTK.\r\n4. Dataprep, Pandas Profiling, SweetViz and Lux, which are \"exploratory data analysis\" tools that can automatically visualize a dataset.\r\n5. Folium, an API for rendering spatial data using Leaflet.js\r\n6. Glue, which is used to visualize data across different domains.\r\n7. HoloViz, a suit of modern visualization libraries.\r\n8. napari, is an advanced image viewer and annotator that can deal with very large images and layered data.\r\n9. D-Tale, a spreadsheet-like interface to Pandas DFs.\r\n10. xarray, a Pandas alternative for >3-dimensional data.\r\n11. PyArrow, an interface to Apache Arrow.\r\n12. bamboolib, a gui for visualizing and tranforming DFs.\r\n13. Turi Create, a machine learning framework from Apple.\r\n14. Polars, a fast Pandas alternative written in Rust.\r\n15. Vaex, an Arrow-NumPy hybrid for large datasets.\r\n16. RAPIDS, a suit of libraries for running data analysis tasks on GPUs.\r\n17. Modin, a Pandas-like API on top of Dask and Ray.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85cfa88c0a76e0a4ea45",
    "number": 1927,
    "body": "## What is this Python project?\r\n\r\nRaylib is a simple library for videogames programming. This set of static bindings provides a fast and familier interface with the original Raylib 4.0 API. Genuinly suprised to not see any python-raylib bindings already, so I'd very much like to suggest this package be the one featured on this fantastic list.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Automatically generated to be as close as possible to original Raylib.\r\n- Faster, fewer bugs and easier to maintain than ctypes.\r\n- Commercial-friendly license.\r\n-  Docstrings and auto-completion.\r\n- Now includes extra libraries: raygui, rlgl and physac\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "slurpyb-patch-1",
    "is_a_fork": true,
    "comments": [
      "Could anybody please explain to me how to apply this software and where to apply it? I am brand new to github and am learning code through Mimo online"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85cfa88c0a76e0a4ea46",
    "number": 1926,
    "body": "The libraries in this category allow for much more than just geolocation, so rather than starting a different category we can just rename this one.",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d0a88c0a76e0a4ea47",
    "number": 1925,
    "body": "Cartopy is more than just a visulization library: \"Python package designed for geospatial data processing in order to produce maps and other geospatial data analyses\".",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d1a88c0a76e0a4ea48",
    "number": 1924,
    "body": "Popular library for working with geographic data on top of Panads - 3k stars and 667 forks on Github.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d2a88c0a76e0a4ea49",
    "number": 1923,
    "body": "Theano has been deprecated and replaced with Aesra (see project pages)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d2a88c0a76e0a4ea4a",
    "number": 1918,
    "body": "## About P2PNetwork\r\n\r\nlibp2p is a networking stack and library modularized out of The IPFS Project, and bundled separately for other tools to use.\r\n\r\nlibp2p is the product of a long, and arduous quest of understanding -- a deep dive into the internet's network stack, and plentiful peer-to-peer protocols from the past. Building large-scale peer-to-peer systems has been complex and difficult in the last 15 years, and libp2p is a way to fix that. It is a \"network stack\" -- a protocol suite -- that cleanly separates concerns, and enables sophisticated applications to only use the protocols they absolutely need, without giving up interoperability and upgradeability. libp2p grew out of IPFS, but it is built so that lots of people can use it, for lots of different projects. [More](https://libp2p.io/)\r\n\r\n## About Multiaddr\r\n\r\nMultiaddr aims to make network addresses future-proof, composable, and efficient.\r\n\r\nCurrent addressing schemes have a number of problems.\r\n\r\nThey hinder protocol migrations and interoperability between protocols.\r\nThey don't compose well. There are plenty of X-over-Y constructions, but only few of them can be addressed in a classic URI/URL or host:port scheme.\r\nThey don't multiplex: they address ports, not processes.\r\nThey're implicit, in that they presume out-of-band values and context.\r\nThey don't have efficient machine-readable representations.\r\nMultiaddr solves these problems by modelling network addresses as arbitrary encapsulations of protocols.\r\n\r\nMultiaddrs support addresses for any network protocol.\r\nMultiaddrs are self-describing.\r\nMultiaddrs conform to a simple syntax, making them trivial to parse and construct.\r\nMultiaddrs have human-readable and efficient machine-readable representations.\r\nMultiaddrs encapsulate well, allowing trivial wrapping and unwrapping of encapsulation layers. [More](https://multiformats.io/multiaddr/)\r\n\r\n## About Multihash\r\n\r\nMultihash is a protocol for differentiating outputs from various well-established hash functions, addressing size + encoding considerations. It is useful to write applications that future-proof their use of hashes, and allow multiple hash functions to coexist.\r\n\r\nMultihash is particularly important in systems which depend on cryptographically secure hash functions. Attacks may break the cryptographic properties of secure hash functions. These cryptographic breaks are particularly painful in large tool ecosystems, where tools may have made assumptions about hash values, such as function and digest size. Upgrading becomes a nightmare, as all tools which make those assumptions would have to be upgraded to use the new hash function and new hash digest length. Tools may face serious interoperability problems or error-prone special casing. [More](https://multiformats.io/multihash/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hello"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d3a88c0a76e0a4ea4b",
    "number": 1916,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nAdded a code profiler that is not in the list\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d4a88c0a76e0a4ea4c",
    "number": 1914,
    "body": "## What is this Python project?\r\n\r\nA batteries included task runner, that uses pyproject.toml for configuration and works well with poetry.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Uses pyproject.toml for configuration\r\n- Integrates seamlessly with the [poetry](https://python-poetry.org/) dependency manager, either as a plugin or via its own CLI.\r\n- Can also be used with any virtualenv or standalone\r\n- Works cross platform (depending how tasks are defined)\r\n- Simple things are simple, complex things are possible: \r\n  - various ways of defining tasks (e.g. shell commands or python functions)\r\n  - define CLI arguments for tasks\r\n  - compose tasks together\r\n  - command line completion\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d5a88c0a76e0a4ea4d",
    "number": 1910,
    "body": "## What is this Python project?\r\nTwo very usefull packages are added\r\n**Streamlit** - Streamlit turns data scripts into shareable web apps in minutes.\r\n**Pycaret** - PyCaret is an open-source, low-code machine learning library in Python that automates machine learning workflows.\r\n\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "+1 Streamlit should definitely be included!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d6a88c0a76e0a4ea4e",
    "number": 1908,
    "body": "## What is this Python project?\r\n\r\nThis project is a fork of discord.py. Help discord.py alive.\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d7a88c0a76e0a4ea4f",
    "number": 1907,
    "body": "## What is this Python project?\r\n\r\nOnacol is a low-opinionated configuration management library with following features:\r\n\r\n- YAML (=structured and hierarchical) configuration file support\r\n- Environment variables support (explicit and implicit)\r\n- CLI arguments support\r\n- Configuration merging/overwriting/layering\r\n- Parameter validation (via Cerberus)\r\n- Configuration schema, documentation and default values are defined in single YAML -> No code schema.\r\n- Minimal dependencies\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComparing with all the configuration management libraries & frameworks I could find on GitHub, based on the features I consider important:\r\n\r\n| Framework | YAML | ENV vars | CLI args | Merging | Validation | No code schema |\r\n| :-------------- | :------: | :-----------: | :----------: | :---------: | :-----------: | :---------------------: |\r\n| [Hydra]       |   ✔️    |     ✔️        |     ❓      |    ✔️      |      ✔️       |     ✖️                    |\r\n| [Pydantic]   |   ❓    |    ❓         |      ✔️     |    ✔️      |      ✔️       |     ✖️                    |\r\n| [Dynaconf]  |    ✔️   |    ❓         |      ✔️     |    ✔️      |      ✔️       |     ✖️                    |\r\n| [python-dotenv] |   ✖️  |    ✔️         |     ✖️    |    ✖️     |     ✖️       |     ✖️                    |\r\n| [Gin Config] |   ❓   |    ❓         |     ❓         |    ❓    |     ✔️      |     ✖️                    |\r\n| [Python Decouple] |    ✖️   |     ✖️  |     ✔️         |    ✔️   |      ✖️         |     ✖️              |\r\n| [OmegaConf] |   ✔️   |    ✔️         |     ✔️         |    ✔️    |     ✔️      |     ✖️                    |\r\n| [Confuse]   |   ✔️    |    ✔️         |      ❓     |    ✔️      |      ✔️       |     ✖️                    |\r\n| [Everett]   |   ✔️    |    ✔️         |      ✔️     |    ❓      |      ✔️       |     ✖️                    |\r\n| [parse_it]   |   ✔️    |    ✔️         |      ✔️     |    ✔️       |      ❓       |     ✖️                    |\r\n| [Grift]         |   ✖️    |     ✖️        |     ✖️      |    ❓      |      ✔️       |     ✖️                    |\r\n| [profig]   |   ✖️   |    ✔️         |      ✖️     |    ❓      |      ✔️       |     ✖️                    |\r\n| [tweak]   |   ✔️   |    ✖️         |      ✖️     |    ✔️      |     ✖️       |     ✖️                    |\r\n| [Bison]   |   ✔️   |    ❓       |      ✔️     |    ✔️      |     ✔️       |     ✖️                    |\r\n| [Config-Man] |   ✖️   |    ✔️         |     ✔️         |    ❓    |     ✔️      |     ✖️                    |\r\n| [figga]   |   ✔️   |    ✖️         |      ✔️     |    ❓      |     ✖️       |     ✖️                    |\r\n| [**Onacol**] |   ✔️   |    ✔️         |     ✔️         |    ✔️    |     ✔️      |     ✔️                    |\r\n\r\n[Hydra]: https://hydra.cc/\r\n[Pydantic]: https://pydantic-docs.helpmanual.io/\r\n[Dynaconf]: https://github.com/rochacbruno/dynaconf\r\n[python-dotenv]: https://github.com/theskumar/python-dotenv\r\n[Gin Config]: https://github.com/google/gin-config\r\n[Python Decouple]: https://github.com/henriquebastos/python-decouple\r\n[OmegaConf]: https://github.com/omry/omegaconf\r\n[Confuse]: https://github.com/beetbox/confuse\r\n[Everett]: https://github.com/willkg/everett\r\n[parse_it]: https://github.com/naorlivne/parse_it\r\n[Grift]: https://github.com/kensho-technologies/grift\r\n[profig]: https://github.com/dhagrow/profig\r\n[tweak]: https://github.com/kislyuk/tweak\r\n[Bison]: https://github.com/edaniszewski/bison\r\n[Config-Man]: https://github.com/mmohaveri/config-man\r\n[figga]: https://github.com/berislavlopac/figga\r\n[**Onacol**]: https://github.com/calcite/onacol\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-onacol",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d7a88c0a76e0a4ea50",
    "number": 1900,
    "body": "## What is this Python project?\r\n\r\nSometimes it's very hard to find if some large files are eating up the system storage. We always need to detect these and takes actions afterwards. But in bigger file system it's challenging enough to filter through thousands and millions of files. This CLI application helps to find those giant files that are eating up your system storage with lot of filtering options and faster result.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Faster result\r\n- Works on huge file storage\r\n- Lot of filtering capabilities\r\n- No dependency overhead \r\n- easy to install and operate\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @rbrahul it is analog linux command 'find' ?",
      "> Hi @rbrahul it is analog linux command 'find' ?\r\n\r\nHi @sgaynetdinov not actuality. It's a CLI tool to detect largest files in the file system which offers some essential filtering. ",
      "@rbrahul maybe add more examples to the repository of real use?",
      "Please add me up on WhatsApp i want to know how to create command for hacking Facebook accounts ‪+234 903 642 1687‬",
      "> ## What is this Python project?\n> \n> \n> \n> Sometimes it's very hard to find if some large files are eating up the system storage. We always need to detect these and takes actions afterwards. But in bigger file system it's challenging enough to filter through thousands and millions of files. This CLI application helps to find those giant files that are eating up your system storage with lot of filtering options and faster result.\n> \n> \n> \n> ## What's the difference between this Python project and similar ones?\n> \n> \n> \n> - Faster result\n> \n> - Works on huge file storage\n> \n> - Lot of filtering capabilities\n> \n> - No dependency overhead \n> \n> - easy to install and operate\n> \n> \n> \n> --\n> \n> \n> \n> Anyone who agrees with this pull request could submit an *Approve* review to it.\n> \n> \n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d8a88c0a76e0a4ea51",
    "number": 1899,
    "body": "## What is this Python project?\r\n\r\nArcade - A game development library\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe previous link mentioned does not exist now. So I updated it with the latest one.\r\n\r\n![arcade_old_link](https://user-images.githubusercontent.com/48170643/146484082-d04c2d90-ac50-475d-9c86-ed4990db334f.PNG)\r\n\r\n**New Link - [https://api.arcade.academy/en/latest/](https://api.arcade.academy/en/latest/)**\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "link-updated-Arcade",
    "is_a_fork": true,
    "comments": [
      "Ok"
    ],
    "commit_messages": [
      "Merge pull request #1899 from pranavarora1895/link-updated-Arcade\n\narcade link updated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85d9a88c0a76e0a4ea52",
    "number": 1894,
    "body": "## Dataconf\r\n\r\nDataconf is a simple dataclasses configuration management for Python with hocon/json/yaml/properties/env-vars/dict support, based on awesome and lightweight pyhocon parsing library.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85daa88c0a76e0a4ea53",
    "number": 1891,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "subhankar_patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85dba88c0a76e0a4ea54",
    "number": 1890,
    "body": "## What is this Python project?\r\n\r\nhttps://github.com/RobertCraigie/prisma-client-py.\r\n\r\nAn auto-generated, fully type safe ORM tailored specifically for your schema - works with SQLite, PostgreSQL, MySQL, MongoDB, MariaDB, Azure SQL, SQL Server and AWS Aurora.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- The *first* and *only* ORM for Python that offers full query type safety.\r\n- Native support for usage with and without `async`\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
    "head_branch": "add-prisma",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85dca88c0a76e0a4ea55",
    "number": 1884,
    "body": "Added RexMex - a recommender system evaluation library.\r\n\r\n## What is this Python project?\r\n\r\nA recommender metric library for fair evaluation: covers coverage, classification, ranking, and rating.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComprehensive - it includes 30+ metrics that are not in other libraries.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@devinaconley, @zukijifukato, @Salv4d could you take a look into this?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85dca88c0a76e0a4ea56",
    "number": 1876,
    "body": "## What is this Python project?\r\n\r\nDiscord.py is a python wrapper for making Discord bots and interacting with Discord's API.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@originalankur ",
      "YOU FUCKEN LIEING BASTARDS\n\nOn Wed, Nov 24, 2021, 10:32 AM 86db0 ***@***.***> wrote:\n\n> @originalankur <https://github.com/originalankur>\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vinta/awesome-python/pull/1876#issuecomment-978033904>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ATWZTNLKJPKUDFWFH5GKWVTUNUHRTANCNFSM5ILHAMOA>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n>\n",
      "> @originalankur \n\nNot sure why I am tagged here?. ",
      "To read the article in its full, please click the link below:\n\nhttps://vuuzletvph.com/what-is-the-secret-of-nft-tokens-and-why-they-are-bought-for-millions-of-dollars/\n\n(You will be automatically redirected to the page once clicked/tapped)\n\n\n\nWhat is the secret of NFT tokens and why they are bought for millions of dollars - Vuuzle.TV Philippines\nhttps://vuuzletvph.com\nTo read the article in its full, please click the link below:\n\nhttps://vuuzletvph.com/heads-up-vuco-bounty-programs-are-coming-your-way/\n\n(You will be automatically redirected to the page once clicked/tapped)\n\n\n\nHEADS UP: VUCO Bounty Programs are coming your way! - Vuuzle.TV Philippines\nhttps://vuuzletvph.com\nCryptocaptrades\nwww.cryptocaptrades.com\nVuuzle Media Corp Limited sets into motion a whole blockchain ecology that can be explored in one application, the Cryptocaptrades.\n\nTransactions made easy, use your\nmoney with confidence\nBy using Cryptocaptrades, most kinds of cryptocurrency available in the market are now one tap away. Through this innovative app, you are now able to store, send, buy or sell existing cryptocurrencies. Cryptocaptrades is also a carrier for diverse third-party DAPPs.",
      "Library not maintained anymore"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85dda88c0a76e0a4ea57",
    "number": 1874,
    "body": "## What is this Python project?\r\n\r\nobjectfactory is a python package to easily implement the factory design pattern for object creation, serialization, and polymorphism\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- designed for easy polymorphic object loading\r\n- integrates with marshmallow for serialization, validation, and custom schemas\r\n- schema defined seamlessly as part of class definition\r\n- highly flexible to complex, nested, or unique object structures\r\n\r\nrepo here:\r\nhttps://github.com/devinaconley/py-object-factory\r\n\r\ndocs here:\r\nhttps://objectfactory.readthedocs.io/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85dea88c0a76e0a4ea58",
    "number": 1872,
    "body": "## What is this Python project?\r\n\r\nA bidirectional UTM-WGS84 converter.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85dfa88c0a76e0a4ea59",
    "number": 1871,
    "body": "## What is this Python project?\r\n\r\nA bidirectional UTM-WGS84 converter.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "NO: why did you reformat the entire file?",
      "I'm sorry, forgot a prettify extension on, will do a new PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e0a88c0a76e0a4ea5a",
    "number": 1870,
    "body": "[xltpl](https://github.com/zhangyu836/xltpl)\r\n\r\n## What is this Python project?\r\n\r\nA python module to generate xls/x files from a xls/x template.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhen xltpl reads a xls/x file, it creates a tree for each worksheet.\r\nAnd, each tree is translated to a jinja2 template with custom tags.\r\nWhen the template is rendered, jinja2 extensions of cumtom tags call corresponding tree nodes to write the xls/x file.\r\n[README](https://github.com/zhangyu836/xltpl/blob/master/README_EN.md)\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e1a88c0a76e0a4ea5b",
    "number": 1869,
    "body": "Beryl-python is the official driver for BerylDB, a key-value database used for session caching.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e1a88c0a76e0a4ea5c",
    "number": 1867,
    "body": "## What is this Python project?\r\n\r\n[JSONClasses](https://www.jsonclasses.com). \r\nA Pydantic alternative, an ORM, a web server.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDeclarative data modeling.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e2a88c0a76e0a4ea5d",
    "number": 1861,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e3a88c0a76e0a4ea5e",
    "number": 1859,
    "body": "minor change to link saleor to its github page instead of the website, being consistent with other projects\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e4a88c0a76e0a4ea5f",
    "number": 1854,
    "body": "## What is this Python project?\r\n\r\nOnline .PYC/.PYO decompilation tool.\r\nSimilar to awesome-php.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis project is open-source, easy to understand, and implement.\r\nThis project could be useful on almost any GitHub project,\r\nto record and automatically update the 'ReadME' file contents\r\nwith the information of the libraries used in the project.\r\n\r\n## Changes:\r\nFaster & more efficient code.  I simplified it where I could without impacting the readablility and functionality of the code.\r\nA difference of around 44% during compile time & a little bit faster run-time. (8.9nsec-by timeit)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e5a88c0a76e0a4ea60",
    "number": 1848,
    "body": "Add detectron",
    "head_branch": "add-detectron",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e5a88c0a76e0a4ea61",
    "number": 1847,
    "body": "Add detectron2",
    "head_branch": "add-detectron2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e6a88c0a76e0a4ea62",
    "number": 1840,
    "body": "## What is this Python project?\r\n\r\nPython uses .po files for storing translations for multi-lingual user interface.\r\nThis tool is very practical for editing those translations.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is completely free, prevents errors that occur when manually editing PO files, and is practical for non-technical translators.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e7a88c0a76e0a4ea63",
    "number": 1839,
    "body": "## What is this Python project?\r\n\r\n`vmam` is a Free and Open Source network access control (NAC) solution. that access the network under a specific domain and a specific VLAN, through LDAP authentication and RADIUS server. This is based on [RFC 3579](https://tools.ietf.org/html/rfc3579#section-2.1).\r\nBasically it creates mac-address users that represent the network card of a machine and associates these users with LDAP groups that represent the various VLANs specified created on their own network architecture.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Work with an open source LDAP server or Active Directory\r\n* Have a manual mode\r\n* Have an automatic mode\r\n* Use it in command line or as a python module\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "vmam",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e8a88c0a76e0a4ea64",
    "number": 1838,
    "body": "UPDATE README\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85e9a88c0a76e0a4ea65",
    "number": 1835,
    "body": "## What is this Python project?\r\n\r\nOnline .PYC/.PYO decompilation tool.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimilar to other Python decompilers, but available as an online tool (no registration required).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "You ",
      "Approve"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85eaa88c0a76e0a4ea66",
    "number": 1834,
    "body": "## What is this Python project?\r\n\r\nThe project provides common calculations and analysis tools required in microwave and RF engineering. This library can be used to perform scientific computation in the fields integrated circuits, high speed digital networks, waveguides and even optics. It is considered the go-to package in the industry when python is required to be used.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTo my knowledge, this is the only fully functional and actively maintained python package for RF/Microwave engineering. There is nothing else out there which provides all the functionality that this library does.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85eba88c0a76e0a4ea67",
    "number": 1831,
    "body": "## What is this Python project?\r\n\r\nThis is a deep learning OCR open source project supported by more than 70 languages. To my surprise, in addition to the basic OCR functions, it also has layout analysis and chart analysis, and can train and fine tune its own data. It's incredible。\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- [x] It provides a deep learning semi-automatic annotation tool. Although it is not very useful for ordinary users, it will be a powerful production tool for deep learning developers.\r\n- [x] The language support range is very wide, allowing developers to train language models without preset.\r\n- [x] The update speed of the algorithm is very fast, and it has an ultra lightweight model less than 10MB. It can be used whether it is a server or not.\r\n\r\nHope to be merged into this very interesting Python project family, thank you!\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "PaddleOCR",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85eba88c0a76e0a4ea68",
    "number": 1829,
    "body": "\r\nUpdated the link for the Arcade game framework which was previously pointing towards a nonexistent page.\r\n\r\n## What is this Python project?\r\n\r\nN/A\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nN/A\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "fix-arcade",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85eca88c0a76e0a4ea69",
    "number": 1827,
    "body": "## What is this Python project?\r\n\r\nBoilerplate template for a Python Flask application with HTMX and Tailwind CSS\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to other Flask boilerplates, it's using HTMX \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-flask-htmx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85eda88c0a76e0a4ea6a",
    "number": 1825,
    "body": "## What is this Python project?\r\n\r\nA Easy Implementation of PyTorch (It will be better if you learn pytorch first but then you can learning pytorch-lightning to make the DL process easier)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIts much easier than PyTorch\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Fix of issue #1826"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85eea88c0a76e0a4ea6b",
    "number": 1822,
    "body": "## What is this Python project?\r\n\r\npython-nmap is a python library which helps in using nmap port scanner. It allows to easilly manipulate nmap scan results and will be a perfect tool for systems administrators who want to automatize scanning task and reports. It also supports nmap script outputs.([Source Text](https://pypi.org/project/python-nmap/))\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe fsociety project also uses Nmap (binary) for information gathering. With python-nmap you can easily use nmap in your own script. \r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85efa88c0a76e0a4ea6c",
    "number": 1820,
    "body": "## What is this Python project?\r\n\r\npyodbc is an open source Python module that makes accessing ODBC databases simple. It implements the DB API 2.0 specification but is packed with even more Pythonic convenience.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFound no similar odbc projects.\r\n\r\nThis python module allows connecting to all kinds of persistent storage with support for odbc like Microsoft Access, Microsoft Excel, Google Big Query, Teradata, Vertica, Hive and more.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85efa88c0a76e0a4ea6d",
    "number": 1817,
    "body": "## What is this Python project?\r\n\r\nThis extends the native `codecs` with many encodings, e.g. morse, many bases (58, 62, 100, etc), sms, klopf, ...\r\nIt also provides a clean API for adding new encodings and a special feature based on a graph search for guessing multi-layer encodings.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFound no similar project.\r\n\r\nStrong points :\r\n- Clean API for adding new encodings\r\n- Test generation based on __examples__ dunder\r\n- Guess feature for decoding multiple layers\r\n- Supported on a regular basis, including new codecs\r\n\r\nWeak points :\r\n- Few stars ; probably suffers from a lack of visibility yet (this PR may fix this)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f0a88c0a76e0a4ea6e",
    "number": 1814,
    "body": "## What is this Python project?\r\n\r\nA caching library that provides LRU & TTL caching, plus memoization decorators.\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n### Compared to `functools`\r\n\r\n- it provides async support out of the box\r\n- it provides ttl caching out of the box\r\n\r\n### Compared to many other caching libraries in the same niche\r\n\r\n- simpler approach (it does not consider object sizes, only its count)\r\n- simpler & more performant approach for ttl caching (using `monotonic` instead of `datetime`)\r\n- more correct approach (when it comes to `__hash__` and `__eq__` functions)\r\n- ability to discard emptyish/nullish values from being cached at the decorator level\r\n- proper type hints\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f1a88c0a76e0a4ea6f",
    "number": 1812,
    "body": "## What is this Python project?\r\nIt's a pretty useful resource that shows different design pattern implementations in different programming languages, including python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThe examples and practical use scenarios are easy and quick to understand, especially for beginners.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I've read the book too but all the examples are written in C and I don't think it has anything to do with _\"awesome-python\"_. A very good alternative that I often read before while designing new software, is this: [Design Pattern in Python](https://refactoring.guru/design-patterns/python)",
      "This is more for the website not the book. They have the code examples in multiple languages, including python but I like the website you shared too, it's more python specific."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f2a88c0a76e0a4ea70",
    "number": 1811,
    "body": "## What is this Python project?\r\n\r\nThis library is defined to encourage similarity between Python modules used to access _NOSQL_ databases. In this way, I hope for consistency that leads to more easily understood modules, code that generally gets more portability across databases and a broader scope of database connectivity from Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Interface classes for all type of NOSQL database: **key-value**, **column**, **documents** and **graph** database.\r\n* ODM classes\r\n* Supports all CRUD operations\r\n* Functions that facilitate connection and session management\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "nosqlapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f3a88c0a76e0a4ea71",
    "number": 1810,
    "body": "## What is this Python project?\r\nThis is a library that allows you to create preview images, make logos, create a font pages for marketing, make a font banner for web and font booklet from one or more selected fonts.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Based on [Pillow](https://pillow.readthedocs.io/en/stable/) library\r\n- It is a specific font library\r\n- With this library is possible to create a [complex image](https://fontpreview.readthedocs.io/en/latest/example.html#fontpreview-example) with font.\r\n- [FiraCode example](https://github.com/MatteoGuadrini/fontpreview#advanced-usage) with python\r\n- Make a logos with one or two letters, like [Typescript logo](https://fontpreview.readthedocs.io/en/latest/example.html#fontlogo-example)\r\n- Dynamically creation of text banner with code for the web framework, like Flask or Django.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "fontpreview",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f4a88c0a76e0a4ea72",
    "number": 1809,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "👌🏿"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f5a88c0a76e0a4ea73",
    "number": 1808,
    "body": "## What is this Python project?\r\n\r\n[`humanize`](https://github.com/jmoiron/humanize) is a library that can turn values into more human readable formats. Examples include \"3 minutes ago\", \"32.4 KB\", \"1/3\" (`humanize.fractional(1/3)`), etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- Couldn't find anything similar on the list.\r\n\r\nDocumentation: https://python-humanize.readthedocs.io/en/latest/?badge=latest\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f5a88c0a76e0a4ea74",
    "number": 1807,
    "body": "## Added dinosay\r\n### What is this Python project?\r\ndinosay is a humble, simple, nice and paleolithic alternative to cowsay command line tool.\r\n\r\n### What's the difference between this Python project and similar ones?\r\n- It can be used directly in the command line\r\n- It can be used as a python library to beautify scripts\r\n- It can be used to build custom command lines\r\n- Use a custom files\r\n- Customize _eye_, _tongue_, _comic_ and _behavior_ of the dinosaur than has been printed\r\n- List all dinosaur, behavior and parts with only one command: `dinolist`\r\n\r\nDocs: https://matteoguadrini.github.io/dinosay/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "dinosay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f6a88c0a76e0a4ea75",
    "number": 1806,
    "body": "## What is this Python project?\r\n\r\nStrawberry is a library to create GraphQL APIs using python by adopting a syntax similar to dataclasses and making use of type hints\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is a modern library that tries to use the most modern python features to make it easier to develop APIs. It has also a very friendly and welcoming community and it is well maintained :)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This looks good, agree on this PR!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f7a88c0a76e0a4ea76",
    "number": 1805,
    "body": "## What is this Python project?\r\n\r\npyreports is a python library that allows you to create complex reports from various sources such as databases, text files, ldap, etc. and perform processing, filters, counters, etc. and then export or write them in various formats or in databases.\r\n\r\nYou can use this library for complex reports, or to simply filter data into datasets divided by topic. Furthermore, it is possible to export in various formats, such as csv, excel files or write directly to the database (mysql, mssql, postgresql and more).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Capture any type of data\r\n- Export data in many formats\r\n- Data analysis\r\n- Process data with filters and maps\r\n- Some functions will help you to process averages, percentages and much more\r\n--\r\n\r\nDocs: https://pyreports.readthedocs.io/en/latest/\r\nSite: https://matteoguadrini.github.io/pyreports/\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f8a88c0a76e0a4ea77",
    "number": 1804,
    "body": "## What is this Python project?\r\n\r\nPyC2PA is Python implementation of C2PA (Coalition for Content Provenance and Authenticity) addressing the prevalence of misleading information online through the development of technical standards for certifying the source and history (or provenance) of media content.\r\n\r\nDescribe features.\r\n\r\n- Inject metadata into JPEG files using JUMBF injection\r\n- Support for Single & Multiple Injection\r\n- Injected JPEG files will have metadata embedded into photo itself making it traceable across the web\r\n- Injected JPEG files verifiable with CAI Verification Website (https://verify.contentauthenticity.org/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the first project that injects CAI metadata into photos. Content Authenticity Initiative is headed by Adobe and C2PA specs are headed by Adobe, Microsoft and other technology companies. Its a movement to create authentic digital assets in a time where misinformation is very prevalent.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85f9a88c0a76e0a4ea78",
    "number": 1801,
    "body": "Hi,\r\n\r\nStjepan from Manning here. I thought this title might be a good match to your list. Thank you for considering it.\r\n\r\nBest,\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This book covers building a Python package from scratch to published on PyPI, using some of the latest PEP standards and tooling that reduces maintenance burden. The goal is to bring more users and tools up to speed on the standards for wider adoption, and to help people build their own mental model of the newer workflow for building Python packages."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85faa88c0a76e0a4ea79",
    "number": 1799,
    "body": "## What is this Python project?\r\n\r\nThis python project is called Flask-SocketIO.\r\n\r\nThe Link : https://flask-socketio.readthedocs.io\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhat makes this python project different is that its geared toward flask applications to allow you to implement real time communication between client and server using socketIO.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85faa88c0a76e0a4ea7a",
    "number": 1798,
    "body": "## What is this Python project?\r\n\r\nhttps://github.com/BayesWitnesses/m2cgen\r\n\r\nA tool that allows the conversion of trained classic ML models into a native code (Java, C, Python, Go, JavaScript, Visual Basic, C#, R, PowerShell, PHP, Dart, Haskell, Ruby, F#, Rust) with zero dependencies.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIn comparison with `sklearn-porter`, `m2cgen` has much wider support of machine learning models and target languages, and is actively maintained.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85fba88c0a76e0a4ea7b",
    "number": 1797,
    "body": "## What is this Python project?\r\n\r\nBasically, it's a feature to show the quality of code we are uploading here in this repo.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85fca88c0a76e0a4ea7c",
    "number": 1796,
    "body": "## What is this Python project?\r\nCornell is a record & reply mock server for E2E tests\r\n\r\nRepo - https://github.com/hiredscorelabs/cornell\r\nDocumentation - https://hiredscorelabs.github.io/cornell/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n* Ability for mocking in distributed systems and run complex E2E tests\r\n* Cornell wraps vcrpy with flask which provides a lightweight record and replay server\r\n* Easy for extensions \r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-cornell",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85fda88c0a76e0a4ea7d",
    "number": 1795,
    "body": "fixed a typo on line 5.\r\n\r\n",
    "head_branch": "fixed-typo-in-contributing-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1795 from VaishnaviMudaliar/fixed-typo-in-contributing-readme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85fea88c0a76e0a4ea7e",
    "number": 1794,
    "body": "\r\nfixed a few things in the readme :)\r\n",
    "head_branch": "Updating-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1794 from VaishnaviMudaliar/Updating-readme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85fea88c0a76e0a4ea7f",
    "number": 1793,
    "body": "## What is this Python project?\r\n\r\nan easy to use wrapper for the Discord API. (https://github.com/Rapptz/discord.py)\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. async\r\n2. feature-rich\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f85ffa88c0a76e0a4ea80",
    "number": 1792,
    "body": "## What is this Python project?\r\n\r\nA single line of code for Full Stack Python Security (https://www.manning.com/books/full-stack-python-security)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the only book dedicated to Python security.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8600a88c0a76e0a4ea81",
    "number": 1791,
    "body": "\r\n# Features\r\n\r\n    Generic parsing of dates in over 200 language locales plus numerous formats in a language agnostic fashion.\r\n    Generic parsing of relative dates like: '1 min ago', '2 weeks ago', '3 months, 1 week and 1 day ago', 'in 2 days', 'tomorrow'.\r\n    Generic parsing of dates with time zones abbreviations or UTC offsets like: 'August 14, 2015 EST', 'July 4, 2013 PST', '21 July 2013 10:15 pm +0500'.\r\n    Date lookup in longer texts.\r\n    Support for non-Gregorian calendar systems. See Supported Calendars.\r\n    Extensive test coverage\r\n\r\n# Popular Formats\r\n`\r\n    >>> import dateparser\r\n    >>> dateparser.parse('12/12/12')\r\n    datetime.datetime(2012, 12, 12, 0, 0)\r\n    >>> dateparser.parse('Fri, 12 Dec 2014 10:55:50')\r\n    datetime.datetime(2014, 12, 12, 10, 55, 50)\r\n    >>> dateparser.parse('Martes 21 de Octubre de 2014')  # Spanish (Tuesday 21 October 2014)\r\n    datetime.datetime(2014, 10, 21, 0, 0)\r\n    >>> dateparser.parse('Le 11 Décembre 2014 à 09:00')  # French (11 December 2014 at 09:00)\r\n    datetime.datetime(2014, 12, 11, 9, 0)\r\n    >>> dateparser.parse('13 января 2015 г. в 13:34')  # Russian (13 January 2015 at 13:34)\r\n    datetime.datetime(2015, 1, 13, 13, 34)\r\n    >>> dateparser.parse('1 เดือนตุลาคม 2005, 1:00 AM')  # Thai (1 October 2005, 1:00 AM)\r\n    datetime.datetime(2005, 10, 1, 1, 0)\r\n`\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "IMO, the libraries should be sorted alphabetically within the section, but I support the addition of `dateparser`"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8601a88c0a76e0a4ea82",
    "number": 1790,
    "body": "## What is this Python project?\r\nAny one can submit his/her Python notebooks on nbshare.io. It is a great way to learn Python through sharing notebooks.\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nTo best of my knowledge, there is no another platform which lets you share and learn Python through notebooks.\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8602a88c0a76e0a4ea83",
    "number": 1789,
    "body": "## What is this Python project?\r\nLets you use all the powers of Vue.js to write web UIs running in your browser but in pure Python.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8603a88c0a76e0a4ea84",
    "number": 1788,
    "body": "## What is this Python project?\r\n\r\nBy wrapping vcrpy with Flask, Cornell provides a lightweight record and replay server that can be easily used during distributed system testing and simulate all HTTP traffic needed for your tests.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBy building a proxy server and complete workflow on top of VCR.py, cornell makes it super easy to test complex external API services. Wheather you have full control over them or not.\r\nFull docs at - https://hiredscorelabs.github.io/cornell/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-cornell",
    "is_a_fork": true,
    "comments": [
      "Lgtm"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8604a88c0a76e0a4ea85",
    "number": 1787,
    "body": "## What is this Python project?\r\n\r\nAdded quo, a dynamic python module for creating cli apps\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8604a88c0a76e0a4ea86",
    "number": 1786,
    "body": "## What is this Python project?\r\n\r\nIntel® Extension for Scikit-learn provides drop-in replacement patching functionality for a seamless way to speed up Scikit-learn application. Acceleration is achieved through the use of the Intel® oneAPI Data Analytics Library ([oneDAL](https://github.com/oneapi-src/oneDAL)) and its convenient Python API daal4py powering the extension underneath.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Library uses all capabilities of the hardware, which allows you to get a significant performance boost for the classic machine learning algorithms. Check their [patching section](https://github.com/oneapi-src/oneDAL#scikit-learn-patching) and [medium articles](https://github.com/intel/scikit-learn-intelex#-follow-us-on-medium) for more details.\r\n\r\n![](https://raw.githubusercontent.com/intel/scikit-learn-intelex/master/doc/sources/_static/scikit-learn-acceleration-2021.2.3.PNG)\r\n- All optimizations can be easily integrated into scikit-learn application by changing one line of code. Check their [get started section](https://github.com/intel/scikit-learn-intelex#%EF%B8%8F-get-started) for more details. \r\n- The library supports intel GPU. Check their [get started section](https://github.com/intel/scikit-learn-intelex#%EF%B8%8F-get-started) for more details. \r\n- The library allows accelerating the prediction step for XGBoost and LightGBM. Read more [here](https://medium.com/intel-analytics-software/improving-the-performance-of-xgboost-and-lightgbm-inference-3b542c03447e).\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8605a88c0a76e0a4ea87",
    "number": 1785,
    "body": "## What is this Python project?\r\n\r\nImplementation of State Machine in Python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't find nothing similar in the actually open-source code\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8606a88c0a76e0a4ea88",
    "number": 1784,
    "body": "## What is this Python project?\r\n\r\nThis is an AutoML package as an alternative from popular methods inside scikit-learn, such as Grid Search and Randomized Grid Search.\r\n\r\nSklearn-genetic-opt uses evolutionary algorithms to choose the set of hyperparameters that optimizes the cross-validation scores, it can be used for both regression and classification problems with a scikit-learn alike API.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It uses AI for the optimization process, instead of brute force approach like GridSearch.\r\n* It adds several features missing in similar packages, worth to mention:\r\n   - **Callbacks:** Allows to monitor, save the models and stop the training when some of several possible criteria is met, such as the model has run for a long time, a threshold metric was achieved, etc. It even allows the user to create a custom callback.\r\n   - **Plotting:** It was several build-in plotting functionalities to help the user understand the optimization process and take decisions over the models.\r\n   - **Tensorboard:** It can log with just a single line of code all the evaluation metrics to a tensorboard instance to monitor the training.\r\n   - **MLflow:** With one single config class, log all the metrics, models, hyperparameters of each run into a MLflow server.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8607a88c0a76e0a4ea89",
    "number": 1783,
    "body": "Quick Summary\r\n---------------------\r\n* add pikepdf and PyMuPDF, two powerful and well-supported PDF libraries for Python\r\n* include a note that PyPDF2 is pure-python and unmaintained",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8608a88c0a76e0a4ea8a",
    "number": 1782,
    "body": "## What is this Python project?\r\n\r\nSierra is a Python framework created to develop web applications solely on Python and integrate with HTML and CSS\r\nPowerful functionalities of Python combined with regular web dev can open up a new stream for web application development purely with Python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\r\nOther existing HTML manipulation/web dev libraries do not offer base for web development solely on Python, and offer only limited use for functionalities. With Sierra, \r\nmost of Python's powerful functionalities can be integrated with their web applications - including other existing libraries too.\r\nEspecially with libraries like Flask among others, Sierra can definitely be a win-win.\r\n\r\nIt's a relatively new release, and development is on at a fast pace.\r\nI would create a new section for this, since this is a relatively new stream.\r\nEdit: I see a section called 'Web Frameworks', it would fit there\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "I feel that [yattag](https://www.yattag.org) is much better designed, when it comes to creating html-snippets from python code. Specifically, by using context managers, yattag ensures that you don't accidentally forget to close a tag. Sierra on the other hand requires that users explicitly close tags by calling `closeTags(...)`. However, I may be missing some of sierra's awesomeness. Would be great if you could elaborate a little?\r\n\r\nApart from creating small html snippets, why would you want to do \"web development solely in python\"? That seems odd and very inefficient. In particular given the gigantic and extremely well developed javascript ecosystem."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8609a88c0a76e0a4ea8b",
    "number": 1781,
    "body": "## What is this Python project?\r\n\r\nA framework for your API that provides:\r\n- Automated Integration Testing\r\n- Automated Live Documentation\r\n\r\nGiven an API specification, written in YAML/JSON format, ScanAPI hits the specified endpoints, runs the test cases, and generates a detailed report of this execution - which can also be used as the API documentation itself.\r\n\r\nWith almost no Python knowledge, the user can define endpoints to be hit, the expected behavior for each response and will receive a full real-time diagnostic report of the API!\r\n\r\n[Website](https://scanapi.dev)\r\n[Main Repo](https://github.com/scanapi/scanapi)\r\n[Content created by the community](https://scanapi.dev/community.html)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. It works for any REST API, doesn't matter how it was built;\r\n2. It is extremely useful for testing and documenting both owned and third-party APIs;\r\n3. It is possible to chain requests, which is essential for testing complex scenarios;\r\n4. The documentation is automatically generated, it never gets outdated;\r\n5. It is simple. The syntax is simple, and it requires almost no language-specific knowledge;\r\n6. It is extremely flexible, once pure python code is accepted in the specification;\r\n7. There is nothing in the market that does what ScanAPI does.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "scanapi",
    "is_a_fork": true,
    "comments": [
      "Hey @vinta, is there any way I can help to have this PR merged? It would be awesome for ScanAPI's visibility to appear here at `awesome-python`",
      "Hey 👋  \r\nIs there anything missing for this PR to be merged? ",
      "Hi @vinta is there anything missing for this PR to be merged? It's a awesome python project!",
      "Hey @vinta 👋 Is there anything missing for this PR to be merged? "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8609a88c0a76e0a4ea8c",
    "number": 1780,
    "body": "## What is this Python project?\r\n\r\nOpen-source Python wrapper for google speech to text API and also works with hugging face transformers\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n[Speech_recognition](https://github.com/Uberi/speech_recognition) is an alternative to easySpeech but sometimes people face issues while installing its dependencies but this doesn't occur with easySpeech\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f860aa88c0a76e0a4ea8d",
    "number": 1779,
    "body": "## What is this Python project?\r\n\r\npyreports is a python library that allows you to create complex reports from various sources such as databases, text files, ldap, etc. and perform processing, filters, counters, etc. and then export or write them in various formats or in databases.\r\n\r\nYou can use this library for complex reports, or to simply filter data into datasets divided by topic. Furthermore, it is possible to export in various formats, such as csv, excel files or write directly to the database (mysql, mssql, postgresql and more).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Capture any type of data\r\n* Export data in many formats\r\n* Data analysis\r\n* Process data with filters and maps\r\n* Some functions will help you to process averages, percentages and much more\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "pyreports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f860ba88c0a76e0a4ea8e",
    "number": 1778,
    "body": "## What is this Python project?\r\n\r\nThis is a library that allows you to create preview images, make logos, create a font pages for marketing, make a font banner for web and font booklet from one or more selected fonts.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Pillow library\r\n* It is a specific font library\r\n* Whit this library is possible to create a complex image with font: [FiraCode exmple with python](https://github.com/MatteoGuadrini/fontpreview#advanced-usage)\r\n* Make a logos with one or two letters, like [Typescript logo](https://fontpreview.readthedocs.io/en/latest/example.html#fontlogo-example)\r\n* Dynamically creation of text banner with code for the web framework, like Flask or Django\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an Approve review to it.\r\n",
    "head_branch": "fontpreview",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f860ca88c0a76e0a4ea8f",
    "number": 1777,
    "body": "## What is this Python project?\r\n\r\ndinosay is a humble, simple, nice and paleolithic alternative to cowsay command line tool.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It can be used directly in the command line\r\n* It can be used as a python library to beautify scripts\r\n* It can be used to build custom command lines\r\n* Use a custom files\r\n* Customize eye, tongue, comic and behavior of the dinosaur than has been printed\r\n* List all dinosaur, behavior and parts with only one command: dinolist\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
    "head_branch": "dinosay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f860da88c0a76e0a4ea90",
    "number": 1776,
    "body": "## What is this Python project?\r\n\r\nFeast is an open source feature store for machine learning. It allows teams to operationalize data for machine learning. \r\n* Build point-in-time correct training datasets\r\n* Materialize offline/batch data into online stores\r\n* Ensure retrieval consistency between training and online serving\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\nUnclear what comparison exists.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f860ea88c0a76e0a4ea91",
    "number": 1775,
    "body": "Tkinter Designer was created to speed up the GUI-development process in Python. It uses the well-known design software Figma to make creating beautiful Tkinter GUIs in Python a piece of cake.\r\n\r\nTkinter Designer is Featured on Awsomeopensource.com in Top 19 GUI Applications list.\r\n - https://awesomeopensource.com/projects/gui-application\r\n\r\nHere are more mentions of Tkinter Designer - \r\nhttps://docs.google.com/document/d/1vNRZY2XuDtG9MYxAEFAfah4uSqIgpOJCqci7xyV7Nmk/edit?usp=sharing",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f860ea88c0a76e0a4ea92",
    "number": 1774,
    "body": "It offers cross-platform, customizable ML solutions such as Face Detection,Face Mesh,Iris,Hands Detection etc.\r\n\r\n## What is this Python project?\r\n\r\nIt is a python library for used widely for computer vision",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f860fa88c0a76e0a4ea93",
    "number": 1773,
    "body": "## What is this Python project?\r\n\r\nthe smart python cms and you can see the demo: https://farapy.herokuapp.com/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n1) Modular\r\n2) Easy to develop (for business edition)\r\n3) Fast deployment\r\n4) Real power of security between all of other content management systems based on python\r\n5) Perfect utilities and etc\r\n\r\nEnumerate comparisons.\r\n\r\n5\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8610a88c0a76e0a4ea94",
    "number": 1772,
    "body": "## What is this Python project?\r\nThe fastest unstructured dataset management for TensorFlow/PyTorch. Stream data real-time & version-control it.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n1. It allows you to version control data via chunked compressed arrays. \r\n2. Hub datasets are compatible to TensorFlow and PyTorch.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "addHub",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8611a88c0a76e0a4ea95",
    "number": 1771,
    "body": "## What is this Python project?\r\n\r\nThe fastest computer vision dataset management framework for data streaming, data visualization, version-control and collaboration.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It allows you to upload and store data on Hub and then visualize that data.\r\n- It allows you to fork datasets you like after visualizing them in the visualization platform on Activeloop.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "addActiveloop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8612a88c0a76e0a4ea96",
    "number": 1770,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8612a88c0a76e0a4ea97",
    "number": 1769,
    "body": "## What is this Python project?\r\n\r\nJAX is a machine learning library with a NumPy-like interface designed to run on accelerators such as GPUs and TPUs. Its distinguishing feature are arbitrarily composable function transformations, enabling JIT compilation, higher order gradients, automatic batching, simple multi-device parallelism, and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- PyTorch: JAX provides higher order gradients, automatic batching, and JIT compilation at higher performance than PyTorch\r\n- TensorFlow: JAX is much simpler and narrower in scope, which means all its components are better integrated, easier to use, and has fewer bugs. It also exclusively leverages the XLA compiler instead of pre-compiled kernels.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8613a88c0a76e0a4ea98",
    "number": 1768,
    "body": "https://github.com/TomNicholas/Python-for-Scientists is no longer maintained.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8614a88c0a76e0a4ea99",
    "number": 1767,
    "body": "## Disclaimer\r\n\r\nI am not involved with the publisher or the author in any way. I simply think this is a very valuable book.\r\n\r\n\r\n## What is this Python project?\r\n\r\n_Effective Python_ is one of the most in-depth and helpful books out there. It covers all kinds of topics and pitfalls and proposes several quasi-standards to deal with them.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Where other resources describe the how to achieve a thing in Python, this book explains the why and the reason of doing it this way. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8615a88c0a76e0a4ea9a",
    "number": 1766,
    "body": "Add a Command-line Interface Development\r\n\r\n## What is this Python project?\r\n\r\nTyper is a library for building CLI applications that users will love using and developers will love creating. Based on Python 3.6+ type hints.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n-  Intuitive to write: Great editor support. Completion everywhere. Less time debugging. Designed to be easy to use and learn. Less time reading docs.\r\n \r\n- Easy to use: It's easy to use for the final users. Automatic help, and automatic completion for all shells.\r\n\r\n-  Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\r\n-  Start simple: The simplest example adds only 2 lines of code to your app: 1 import, 1 function call.\r\n- Grow large: Grow in complexity as much as you want, create arbitrarily complex trees of commands and groups of subcommands, with options and arguments.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@vinta I'm going to jump in here because I was actually just looking to get this added myself. Typer is the CLI sibling of FastAPI, which is arguably one of the most awesome frameworks in the python ecosystem. If we can get this merged in that'd be epic!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8616a88c0a76e0a4ea9b",
    "number": 1765,
    "body": "## What is this Python project?\r\n\r\npython package for manipulating gpx files and easily converting gpx to other different formats\r\n\r\nDescribe features.\r\n\r\n- Convert gpx files to other formats such as csv, arrays, dataframes, excel and json\r\n- Convert csv files to gpx\r\n- Apply interpolation on the gpx data\r\n- \r\n## What's the difference between this Python project and similar ones?\r\n\r\n- convert gpx easily to most used formats and not only csv\r\n- apply interpolation on the gpx data\r\n- \r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8617a88c0a76e0a4ea9c",
    "number": 1764,
    "body": "## What is this Python project?\r\n\r\nA flexible free and unlimited python tool to translate between different languages in a simple way using multiple translators.\r\n\r\nDescribe features.\r\n\r\n* Support for google translate\r\n* Support for the microsoft translator\r\n* Support for Pons translator\r\n* Support for the Linguee translator\r\n* Support for the Mymemory translator\r\n* Support for the Yandex translator\r\n* Support for the QCRI translator\r\n* Support for the DeepL translator\r\n* Support for proxy usage\r\n* Automatic single language detection\r\n* Batch language detection\r\n* Translate directly from a text file\r\n* Get multiple translations for a word\r\n* Automate the translation of different paragraphs in different languages\r\n* Translate directly from the terminal\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as I know, there is no similar tool \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8617a88c0a76e0a4ea9d",
    "number": 1763,
    "body": "\r\n\r\n## What is this Python project?\r\n\r\nigel is a machine learning library that makes it very easy to train and validate ML models. It can be used without any coding experience, it also comes with a built-in GUI for users who are not familiar with the CLI\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as I know, there is no similar project to igel\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8618a88c0a76e0a4ea9e",
    "number": 1762,
    "body": "## What is this Python project?\r\n\r\nA Neural Search framework to implement AI powered semantic search in your project\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Neural Networks\r\n* Works on pre-trained Neural Network models, saving time and efforts\r\n* Decentralized architecture\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "@gitcommitshow Any chance opening this back? I know approvals take time but I believe we need Jina in this list."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8619a88c0a76e0a4ea9f",
    "number": 1761,
    "body": "## What is this Python project?\r\n\r\nA Neural Search framework to implement AI powered semantic search in your project\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Neural Networks\r\n* Works on pre-trained Neural Network models, saving time and efforts\r\n* Decentralized architecture\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Fixed some styling and created [another PR](https://github.com/vinta/awesome-python/pull/1762)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f861aa88c0a76e0a4eaa0",
    "number": 1759,
    "body": "## What is this Python project?\r\n\r\nThe lightweight PyTorch wrapper for high-performance AI research to scale your models, not the boilerplate.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add/pytorch-lightning",
    "is_a_fork": true,
    "comments": [
      "@vinta can we ask you for a review? :rabbit: ",
      ":chipmunk: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f861ba88c0a76e0a4eaa1",
    "number": 1757,
    "body": "## What is this Python project?\r\n\r\nA suite of utilities for AWS Lambda functions to ease adopting best practices such as tracing, structured logging, custom metrics async, parameters and secrets management, idempotency, and more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n**Tenets**\r\n\r\nThis project separates core utilities that will be available in other runtimes vs general utilities that might not be available across all runtimes.\r\n\r\n- **AWS Lambda only** We optimise for AWS Lambda function environments and supported runtimes only. Utilities might work with web frameworks and non-Lambda environments, though they are not officially supported.\r\n- **Eases the adoption of best practices**. The main priority of the utilities is to facilitate best practices adoption, as defined in the AWS Well-Architected Serverless Lens; all other functionality is optional.\r\n- **Keep it lean**. Additional dependencies are carefully considered for security and ease of maintenance, and prevent negatively impacting startup time.\r\n- **We strive for backwards compatibility**. New features and changes should keep backwards compatibility. If a breaking change cannot be avoided, the deprecation and migration process should be clearly defined.\r\n- **We work backwards from the community**. We aim to strike a balance of what would work best for 80% of customers. Emerging practices are considered and discussed via Requests for Comment (RFCs)\r\nIdiomatic. Utilities follow programming language idioms and language-specific best practices.\r\n\r\n**Highlighted Features**\r\n\r\n- **Tracing** - Decorators and utilities to trace Lambda function handlers, and both synchronous and asynchronous functions\r\n- **Logging** - Structured logging made easier, and decorator to enrich structured logging with key Lambda context details\r\n- **Metrics** - Custom Metrics created asynchronously via CloudWatch Embedded Metric Format (EMF)\r\nBring your own middleware - Decorator factory to create your own middleware to run logic before, and after each Lambda invocation\r\n- **Parameters utility** - Retrieve and cache parameter values from Parameter Store, Secrets Manager, or DynamoDB\r\n- **Batch processing** - Handle partial failures for AWS SQS batch processing\r\n- **Typing** - Static typing classes to speedup development in your IDE\r\n- **Validation** - JSON Schema validator for inbound events and responses\r\n- **Event source data classes** - Data classes describing the schema of common Lambda event triggers\r\n- **Parser** - Data parsing and deep validation using Pydantic\r\n- **Idempotency** - Convert your Lambda functions into idempotent operations which are safe to retry\r\n- **Event Handler** - Decorators to help simplify AppSync [GraphQL] and API Gateway events. Think Flask for AWS Lambda\r\n- **Feature Flags** - A simple rule engine to evaluate when one or multiple features should be enabled depending on the input\r\n\r\n**More info**\r\n\r\n- [AWS Lambda Powertools - GitHub](https://github.com/awslabs/aws-lambda-powertools-python)\r\n- [AWS Lambda Powertools - Docs](https://awslabs.github.io/aws-lambda-powertools-python/latest/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "michaelbrewer-aws-powertools",
    "is_a_fork": true,
    "comments": [
      "Two things missing in the list of features is the new Event Handler (AppSync [GraphQL], and API Gateway/ALB) to reduce routing and other boilerplate stuff.",
      "I think only @vinta  can merge this in",
      "@vinta we got to 20 votes.  ",
      "@vinta the library just hit over 1k stars and nearly 3 million downloads :) ",
      "@vinta 👋🏻 ",
      "@vinta 👋🏻 again 😢 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f861ba88c0a76e0a4eaa2",
    "number": 1755,
    "body": "Hi, I'm a UX designer/marketer who has been learning a bit of Python on my own. I recently discovered DevProjects and wanted to include them in the list because I personally find the projects and community useful and interactive! Since I'm a beginner, I find other people's solutions helpful.\r\n\r\n## What is this Python project?\r\n\r\nI didn't choose a specific Python project from DevProjects, but I find the projects helpful as they're categorized as easy, medium, and difficult. As I'm new to Python, I usually try my hands on the easy ones, look at other people's solutions, and look at what the community is discussing about for each project. I like that new projects are added once in a while and that the website is completely free. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDevProjects is very organized and doesn't give you step by step instructions on how to complete the projects. It challenges you to think on your own, but all the projects have really clearly written requirements and suggested implementations, and I like that you can read other people's solutions and comments on different projects.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "jenniferdev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f861ca88c0a76e0a4eaa3",
    "number": 1753,
    "body": "## What is this Python project?\r\n\r\nBeanie is an Asynchronous ODM for MongoDB. It is based on Motor and Pydantic.\r\n\r\nThe project page with a quick-start example: https://github.com/roman-right/beanie\r\n\r\nThe documentation could be found here - https://roman-right.github.io/beanie/\r\n\r\nAlso, there are some articles about BeanieI:\r\n\r\n- In MongoDB developer blog - https://developer.mongodb.com/article/beanie-odm-fastapi-cocktails/\r\n- Mine from dev.to - https://dev.to/romanright/announcing-beanie-1-0-mongodb-odm-with-query-builder-4mbl\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. It is Asynchronous\r\n2. Find-, Update-, Aggregation Query Builders\r\n3. Data and schema migrations out of the box\r\n4. Indexes management\r\n5. Projections support\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "feature/add_beanie",
    "is_a_fork": true,
    "comments": [
      "Approve",
      "This is a great and very recommended library.",
      "Beanie is a fantastic project, can't say enough great things about it!  The async ODM model was missing for MongoDB in the Python ecosystem, I only found out about this project through https://pythonbytes.fm/ it would be great if this was added to awesome-python so that more people could find it.",
      "Great already and very active development. Very natural way of connecting to MongoDB using pydantic models. ",
      "I have really enjoyed using beanie.  Highly recommend.  👍 ",
      "Hi @vinta ,\r\nCould you please tell, if I have to add something to the PR or provide any information about the lib?",
      "Hey @KVROHITH098 ,\r\n\r\nIs it happening with Travis or GitHub actions? \r\nI'm asking because the error text looks exactly like GitHub actions raise. But I also see a Travis config there.\r\n\r\nAnyway, it looks like the problem is with the environment variable `GITHUB_TOKEN`.\r\n\r\nIf you are working with gh actions, this can help: https://docs.github.com/en/actions/reference/authentication-in-a-workflow\r\n\r\nIf I'm wrong, and you are working with travis, here I'd start to debug: https://github.com/vinta/awesome-python/blob/master/.travis.yml#L16",
      "Hi @KVROHITH098 ,\r\nProbably I misunderstood you.\r\nIf you are asking me to run actions, it is impossible. I don't have rights to run any action for this repo. Or even to see the outputs of actions.\r\nIf you need any other help, please tell me more details.",
      "To be honest, I am confused, what we are talking about.\r\n\r\nI'm suggesting this lib be added to the list. I'm the author of the PR but have no rights in the destination repo. \r\n@vinta has all the rights for this.\r\n\r\nBut you also shared an error from the GitHub action. Where did you get it from?",
      "@KVROHITH098 \r\n\r\nSorry man, it is getting weird a little. I will not join. \r\nIf you want to chat in real-time about this or Beanie overall, you can come to our discord server - https://discord.gg/ZTTnM7rMaz\r\nI think, our chat here is offtopic, let's stop.",
      "@vinta seems to be a bit of a of backlog of PRs.  I hope you're OK.\r\n\r\n@KVROHITH098 I think we're all a bit confused at what you're trying to say!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f861da88c0a76e0a4eaa4",
    "number": 1752,
    "body": "## What is this Python project?\r\n\r\nSQLLEX - Pythonic superstructure over sqlite3\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhat the heck is Sqllex? 🤔\r\n\r\nSqllex is a python library created to make it easier for developers to interact with databases. Currently it supports only SQLite databases but we’re planning to expand this list soon. SQLite is a nice and simple tool for admining databases, but Sqllex makes it even more easy and comfortable.\r\n\r\nIt'll be a lot easier to show then explain. Wiki / examples: https://github.com/v1a0/sqllex/wiki\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f861ea88c0a76e0a4eaa5",
    "number": 1751,
    "body": "section newsletters - add freecodecamp python articles collection",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f861fa88c0a76e0a4eaa6",
    "number": 1750,
    "body": "## What is this Python project?\r\n\r\nIn the section 'Environment management' I have added the pipenv tool. I consider it one of the best there is.\r\n\r\n## What's the difference between this Python project and similar ones ?\r\nPipenv is a packaging tool for Python that solves some common problems associated with the typical workflow using pip , virtualenv , and the good old requirements. txt . In addition to addressing some common issues, it consolidates and simplifies the development process to a single command line tool.\r\n\r\n--\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "It's the worst maintained tool out there, i'm not sure it should make into this list.",
      "> It's the worst maintained tool out there, i'm not sure it should make into this list.\r\n\r\nAgree, maybe it's still out there, but people should forget about its existence.",
      "Even if it is not well maintained, it still has its place.",
      "I have to echo the comment about it having a place. I have worked with it for a long time and have helped numerous non-programmer or not experienced programmers work with it. It does its job well.\r\n\r\nIf this is not good, please someone point me to a better solution ... this does what is advertised.\r\n",
      "I still work with it and as mentioned above it still does its job, is there any better solution ? ",
      "> I still work with it and as mentioned above it still does its job, is there any better solution ?\r\n\r\nYou should try poetry.",
      "+1 for adding it. We use it in 100+ projects. It has bugs but it does its job."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f861fa88c0a76e0a4eaa7",
    "number": 1749,
    "body": "## What is this Python project?\r\n\r\nThis is a link to a curated list of real-world python projects.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- link to multiple python projects with user-story & deliverables\r\n- community of python developers \r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "maggiedev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8620a88c0a76e0a4eaa8",
    "number": 1748,
    "body": "## What is this Python project?\r\n\r\nHub - Fastest unstructured dataset management for TensorFlow/PyTorch by activeloop.ai. Stream & version-control data. Converts large data into a single numpy-like array on the cloud, accessible on any machine.\r\n\r\nDescribe features.\r\n\r\n- Store and retrieve large datasets with version-control\r\n- Collaborate as in Google Docs: Multiple data scientists working on the same data in sync with no interruptions\r\n- Access from multiple machines simultaneously\r\n- Deploy anywhere - locally, on Google Cloud, S3, Azure, and Activeloop (by default - and for free!)\r\n- Integrate with your ML tools like Numpy, Dask, Ray, PyTorch, or TensorFlow\r\n- Create arrays as big as you want. You can store images as big as 100k by 100k!\r\n- Keep the shape of each sample dynamic. This way you can store small and big arrays as 1 array.\r\n- Visualize any slice of the data in a matter of seconds without redundant manipulations\r\n\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\nIt's much more deep learning, machine learning-oriented, and makes easy handling of the data.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "adding-hubpackage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8621a88c0a76e0a4eaa9",
    "number": 1747,
    "body": "# What is this Python project?\r\n\r\n[pyABC](https://github.com/icb-dcm/pyabc) is a tool for distributed likelihood-free inference using Approximate Bayesian Computation.\r\n\r\n# What's the difference between this project and similar ones?\r\n\r\n* It provides a state-of-the-art implementation of ABC-SMC with a few unique algorithms, such as population size adaptation, measurement noise quantification, and automatic distance learning.\r\n* It allows to exploit HPC infrastructure, thus scaling to computationally complex problems.\r\n* It has a very easy-to-use interface and is used by researchers in many areas.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8622a88c0a76e0a4eaaa",
    "number": 1746,
    "body": "## What is this Python project?\r\n\r\nA library for a simple integration of the JSON-RPC 2.0 protocol to a Python application using aiohttp. The motivation is to provide a simple, fast and reliable way to integrate the JSON-RPC 2.0 protocol into your application on the server and/or client side. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Features\r\n* Code quality\r\n* Good abstractions\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8623a88c0a76e0a4eaab",
    "number": 1745,
    "body": "## fontpreview: What is this Python project?\r\n\r\nThis is a library that allows you to create preview images from one or more selected fonts.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Based on Pillow library\r\n* It is a specific font library\r\n\r\n\r\n## dinosay: What is this Python project?\r\n\r\ndinosay is a humble, simple, nice and paleolithic alternative to cowsay.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It can be used directly in the command line\r\n* It can be used as a python library to beautify scripts\r\n* It can be used to build custom command lines\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Can you please send them as different PRs?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8624a88c0a76e0a4eaac",
    "number": 1744,
    "body": "## What is this Python project?\r\n\r\nLiquidb simplifies migration burden in big Django projects. One of useful use cases to quickly change state of DB schema in Django project that has with few codependent Django applications. Another example is to rollback to given state, so that code in Django project is consistent with DB schema.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere is no similar projects for Django in Python as far as I know. \r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "liquidb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8624a88c0a76e0a4eaad",
    "number": 1743,
    "body": "To make the existing curated list more awesome, added a useful module to the list.\r\n\r\n## What is this Python project?\r\n\r\nWhen working with date and time information in Python, you commonly use the classes date, datetime and/or time from the datetime package. Babel provides functions for locale-specific formatting of those objects in its dates module.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPython’s datetime module has different ways to deal with times and dates: naive and timezone-aware datetime objects.\r\n\r\nBabel generally recommends you to store all your time in naive datetime objects and treat them as UTC at all times. This simplifies dealing with time a lot because otherwise you can get into the hairy situation where you are dealing with datetime objects of different timezones. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8625a88c0a76e0a4eaae",
    "number": 1742,
    "body": "## What is this Python project?\r\n\r\nAn API client library with APIs to solve common business problems (i.e. virus scanning APIs, document conversion APIs, OCR APIs, validation APIs, etc.).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are currently no directly similar products.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8626a88c0a76e0a4eaaf",
    "number": 1741,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8627a88c0a76e0a4eab0",
    "number": 1738,
    "body": "## What is this Python project?\r\n\r\n`pdbr` is intended to make the PDB results more colorful. it uses Rich library to carry out that.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- New commands\r\n- IPython support\r\n- Celery support\r\n- Custom rich styles.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@vinta I wanted to remind you about this PR. I don't know if you have a routine to merge the PRs."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8628a88c0a76e0a4eab1",
    "number": 1737,
    "body": "## What is this Python project?\r\n\r\nA Prometheus exporter for Celery metrics.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nExplained in the 'Why?' section: https://github.com/danihodovic/celery-exporter/#why-another-exporter\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-celery-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8629a88c0a76e0a4eab2",
    "number": 1736,
    "body": "## What is this Python project?\r\n\r\nAriadne is a Python library for implementing GraphQL servers using a schema-first approach. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSchema-first approach - unlike graphene the schema is defined explicitly and is not inferred from code, it's more light-weight and less opinionated, it has subscriptions, file uploads,  tracing and other useful stuff built-in.\r\n\r\nExample hello world app with starlette:\r\n```py\r\nfrom ariadne import QueryType, make_executable_schema\r\nfrom ariadne.asgi import GraphQL\r\nfrom starlette.applications import Starlette\r\n\r\ntype_defs = \"\"\"\r\n    type Query {\r\n        hello: String!\r\n    }\r\n\"\"\"\r\n\r\nquery = QueryType()\r\n\r\n\r\n@query.field(\"hello\")\r\ndef resolve_hello(*_):\r\n    return \"Hello world!\"\r\n\r\n\r\n# Create executable schema instance\r\nschema = make_executable_schema(type_defs, query)\r\n\r\napp = Starlette(debug=True)\r\napp.mount(\"/graphql\", GraphQL(schema, debug=True))\r\n\r\n```\r\n\r\nHere's a really nice into and justification from one of the authors: https://blog.mirumee.com/schema-first-graphql-the-road-less-travelled-cf0e50d5ccff\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8629a88c0a76e0a4eab3",
    "number": 1734,
    "body": "Added nbshare.io as a resource for Python tutorials\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f862aa88c0a76e0a4eab4",
    "number": 1733,
    "body": "Hi, i'm Danix, a Python developer/Pythonista, i sorry if my english is bad but i only speak spanish.  I viewed Awersome Python repository and i wanted to contribute to it! In my contribution, i added the new Pylance to the Plugins/IDE's category, and the Ursina Engine framework to the Game Development category, i updated the Panda3D description to add the 2, i added the \"awesome\" Python Land to Resources/Tutorial Websites category and i added Awesome Python in Education why it's creator, [quobit](https://github.com/quobit) gived me permission to do it,.\r\n\r\nQuestions:\r\nQ: Why Ursina Engine is \"awesome\".\r\nA: Ursina Engine is \"awesome\" why is based in the Panda3D game development framework but compared to Panda3D it's really easy to use and it's a good first shoot for beginners in 3D game development (i think).\r\nQ: Why Pylance is \"awesome\".\r\nA: Pylance is a Microsoft official extension for VSCode that adds some incredible functions to the programming with Python (i don't used it but look really good), that is why it's \"awesome\".\r\nQ: What you updated from the Panda3D description.\r\nA: I added the 2D support to the description.\r\nQ: Why Python Land is \"awesome\".\r\nA: It's \"awesome\" why it Python Tutorial is soo easy for beginners (and experienced developers), and it's really complete.\r\nQ: Why Awesome Python in Education is \"awesome\".\r\nA: It's \"Awesome\" why it have a lot's of Python learning resources, game engine and more! It haves more of 500 starts and 100 forks! So, it don't needs explication.\r\n\r\nWell, i hope you like my contribution and accept it.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Yeah, there is not response from @vinta, so, this pull request is closed"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f862ba88c0a76e0a4eab5",
    "number": 1732,
    "body": "## What is this Python project?\r\nBigData library for having additional layer of abstraction between CSV/JSON/Parquet and NumPy/Pandas\r\n\r\n## What's the difference between this Python project and similar ones?\r\nadditional client abstraction layer over BigData stack\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f862ca88c0a76e0a4eab6",
    "number": 1731,
    "body": "## What is this Python project?\r\n\r\nLark is a general-purpose parsing toolkit.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nLark is already skyrocketing in popularity, compared to the competition: https://star-history.t9t.io/#lark-parser/lark&dabeaz/ply\r\n\r\nIt's much friendlier to beginners, with a better interface.\r\n\r\nIt can do a lot of things that PLY, and others, can't, like parsing natural language.\r\n\r\nIt also lets you generate a standalone parser, which is pretty unique.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta Hi, we have 20 votes. Is that enough to get this merged? Thanks",
      "Approve",
      "@vinta friendly ping, looks like this PR has reached the goal and deserves to be merged"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f862da88c0a76e0a4eab7",
    "number": 1730,
    "body": "Fixes dramatiq spelling.\r\n`daramatiq` -> `dramatiq`",
    "head_branch": "fix-dramatiq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1730 from ramonsaraiva/fix-dramatiq"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f862da88c0a76e0a4eab8",
    "number": 1729,
    "body": "## What is this Python project?\r\nCaer simplifies our approach towards Computer Vision by abstracting away unnecessary boilerplate code giving us the flexibility to quickly prototype deep learning models and research ideas.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis project has an elegant, type-checked API and unique design philosophy. This library has >2m downloads on PyPi. See the official repository: https://github.com/jasmcaus/caer\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request, please submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f862ea88c0a76e0a4eab9",
    "number": 1728,
    "body": "Added the rsa library. Under cryptography section. It uses the rsa algorithm for asymmetric encryption using public and private keys.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f862fa88c0a76e0a4eaba",
    "number": 1727,
    "body": "## What is this Python project?\r\n\r\n[PyG2Plot](https://github.com/hustcc/PyG2Plot) is a Python3 binding for [@AntV/G2Plot]( https://github.com/antvis/G2Plot) which an interactive and responsive charting library. Based on the grammar of graphics, you can easily make superior statistical charts through a few lines of code. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. based on AntV G2, the grammar of graphic\r\n2. easy to create common plots\r\n3. jupyter supported\r\n\r\nAlso pr to [awesome-javascript](https://github.com/sorrycc/awesome-javascript/pull/760).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8630a88c0a76e0a4eabb",
    "number": 1726,
    "body": "… CLI tools.\r\n\r\n## What is this Python project?\r\n\r\nThis library is aimed to provide useful features and to shorten required lines of code for writing nice-looking command-line interface tools.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis library is well designed, excellent coded with security in mind and is easy to use.  Multiple examples are available on the authors website [https://github.com/dhondta/python-tinyscript](https://github.com/dhondta/python-tinyscript)\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_tinyscript",
    "is_a_fork": true,
    "comments": [
      "1. Only 14 stars\r\n2. It is AGPL-3.0 License, which is very viral for a lib and especially considering it is a generator..\r\n3. There is an ugly default `{positional,arguments,dict}` so no improvement over argparse here",
      "AGPL-3.0 License just limits the application of the lib. It's not that I am against it.",
      "Is the number of stars a requirement to be added?",
      "I approve this pull request, I think it would be a nice addition.",
      "Tinyscript is definitely not a framework to provide a new useless paradigm, as it says, it is a development kit that remains argparse-based, so the same way to define CLI arguments. Where it really helps is that it provides lots of useful code fore reuse, therefore helping to develop scripts far quicker and in a really shorter way.",
      "> … CLI tools.\r\n> \r\n> ## What is this Python project?\r\n> This library is aimed to provide useful features and to shorten required lines of code for writing nice-looking command-line interface tools.\r\n> \r\n> ## What's the difference between this Python project and similar ones?\r\n> ## This library is well designed, excellent coded with security in mind and is easy to use. Multiple examples are available on the authors website https://github.com/dhondta/python-tinyscript\r\n> Anyone who agrees with this pull request could submit an _Approve_ review to it.\r\n\r\nIndeed, very interesting library and, as usual, the author did a great job in both the design and the implementation phases.   As a security professional,  I use it very regularly; I definitely do recommend this library as it is very easy to understand/use and it saves a lot of time. Thumps up for this project! ",
      "Very nice feature. I approve this request.",
      "@bahmadh just don't forget to publish derived code, or you may get in trouble with legal department.",
      "> @bahmadh just don't forget to publish derived code, or you may get in trouble with legal department.\r\n\r\nThanks Techtonik, I think, I know how to read a license... but always good to remind people. ",
      "Nice library, I agree that it would be a valuable addition to the list!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8631a88c0a76e0a4eabc",
    "number": 1725,
    "body": "resolve #1713\r\n\r\n## What is this Python project?\r\n\r\nGunicorn 'Green Unicorn' is a Python WSGI HTTP Server for UNIX. It's a pre-fork worker model. The Gunicorn server is broadly compatible with various web frameworks, simply implemented, light on server resources, and fairly speedy.\r\n\r\nhttps://gunicorn.org/\r\nhttps://github.com/benoitc/gunicorn\r\nhttps://en.wikipedia.org/wiki/Gunicorn\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Ok"
    ],
    "commit_messages": [
      "Merge pull request #1725 from yhay81/master\n\nFix gunicorn description"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8632a88c0a76e0a4eabd",
    "number": 1723,
    "body": "## What is this Python project?\r\n\r\nData validation and settings management using Python type hinting.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Pure Python\r\n- Intended as a supplement to standard library dataclasses and typing modules\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_pydantic",
    "is_a_fork": true,
    "comments": [
      "Additional info:\r\nfastapi use it inside and fastapi recommend users to use it in tutorial.\r\nhttps://fastapi.tiangolo.com/tutorial/sql-databases/\r\nThey seem to have similar contributers.",
      "Pydantic is so good and ubiquitous it actually deserves to be into multiple categories:\r\n- Built-in Classes Enhancement (included in this PR)\r\n- Configuration\r\n- Data Validation\r\n- Serialization\r\n\r\nI would go as far as suggest that once pydantic 2 is out and turns out to be better than pydantic 1, it should be made part of standard python library. ",
      "Approve\r\n\r\nCan't believe this isn't already on the list, it's one of the best libraries out there.",
      "Approve\r\n\r\nPydantic should be part of the Python standard library :-)",
      "Approved.. long back!!\r\n\r\nI personally think pydantic is an amazing package **but not something we need as a part of Python's standard library**!!!! I use pydantic a lot but it must be something we could add only if we need!!",
      "Approve",
      "It's probably a waste of time. This repo has not added a new entry in years.",
      "@erezsh actually there is contribution guide line: 'Pull requests will be merged when their votes reach 20.'\r\n\r\nwe have only 15 here",
      "> @erezsh actually there is contribution guide line: 'Pull requests will be merged when their votes reach 20.'\r\n> \r\n> we have only 15 here\r\n\r\n+1 ",
      "@cybergrind That's rich! Lark is at 30 and still hasn't made it in - https://github.com/vinta/awesome-python/pull/1731",
      "yeah, you're right",
      "20 ",
      "@vinta pydantic now also has 20, let's get it merged",
      "Approved since pydantic definitely offers class enhancements, but I think really it would be a better fit for the \"data validation\" section.\r\n\r\n@vinta - thanks so much for awesome-python, it's ... awesome, could we get this or #2462 approved?",
      "@samuelcolvin I think I grouped it here because the association with dataclasses, but in retrospect that doesn't make sense and I agree.  I will move it",
      "I see that someone else finally merged a change to add this"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8633a88c0a76e0a4eabe",
    "number": 1722,
    "body": "## What is this Python project?\r\nTraitlets is a pure Python library enabling:\r\n\r\n- the enforcement of strong typing for attributes of Python objects (typed attributes are called \"traits\");\r\n- dynamically calculated default values;\r\n- automatic validation and coercion of trait attributes when attempting a change;\r\n- registering for receiving notifications when trait values change;\r\n- reading configuring values from files or from command line arguments - a distinct layer on top of traitlets, so you may use traitlets without the configuration machinery.\r\n\r\nIts implementation relies on the descriptor pattern, and it is a lightweight pure-python alternative of the traits library.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Pure Python\r\n- configurable from file or CLI arguments\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_traitlets",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8633a88c0a76e0a4eabf",
    "number": 1721,
    "body": "## What is this Python project?\r\n\r\nPint allows you to manipulate physical quantities in a unit-aware manner.  Is compatible with other libraries such as numpy\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComes with a list of physical constants, units, and prefixes\r\nAutomatically typesets units for display in Jupyter\r\nAll operations are unit-aware\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_pint",
    "is_a_fork": true,
    "comments": [
      "There's already fairly advanced astropy.units module for the same purpose. Can you compare your code to it? In what sense is it better?",
      "> \r\n> \r\n> There's already fairly advanced astropy.units module for the same purpose. Can you compare your code to it? In what sense is it better?\r\n\r\n- more units.  Astropy is astronomy-oriented and the units reflect that.  Pint is generic and includes all SI units (e.g. astropy.units does not support units of data, fluid volume, or electrical current,  because those kinds of units are not useful for astronomy, but pint does) A full list of supported units supported by pint is [here](https://github.com/hgrecco/pint/blob/master/pint/default_en.txt)\r\n- more constants.  Again, Astropy is for astronomy and the available constants reflect that.  A full list of constants included in pint is available [here](https://github.com/hgrecco/pint/blob/master/pint/constants_en.txt)\r\n- support for non-metric, non-SI units e.g. the entire imperial system"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8634a88c0a76e0a4eac0",
    "number": 1720,
    "body": "fixed a spelling error that I made but did not notice until after you already merged this branch",
    "head_branch": "add_sqlite3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1720 from norweeg/add_sqlite3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8635a88c0a76e0a4eac1",
    "number": 1719,
    "body": "## What is this Python project?\r\n\r\nD-Tale is the combination of a Flask back-end and a React front-end to bring you an easy way to view & analyze Pandas data structures. It integrates seamlessly with jupyter notebooks & python/jupyter terminals. Currently this tool supports such Pandas objects as DataFrame, Series, MultiIndex, DatetimeIndex & RangeIndex.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAs far as I can tell there isn't anything for Exploratory Data Analysis on awesome-python yet so this might be in its own class.  The difference between this project and the ones in Data Visualization is that this one will allow users to apply a GUI to their pandas objects w/ one line of code `dtale.show(df)`.  This GUI comes complete with the following key features:\r\n* Smooth grid for sorting, filtering, selecting & editing\r\n* Chart builder created on top of `plotly-dash`\r\n* Network analysis using a combination of `networkx` & the JS package `vis-network`\r\n* Code exports so you can learn pandas as you perform operations\r\nThis package can also be integrated into your own Streamlit notebooks & Flask or Django applications. There are links to detailed instructions on how to do both in the README.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_dtale",
    "is_a_fork": true,
    "comments": [
      "`df.to_html()`\r\n\r\nand for jinja\r\n\r\n`{{ df.to_html() | safe }}`",
      "Approve",
      "Approve ",
      "Approve",
      "Approve",
      "Approve\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8636a88c0a76e0a4eac2",
    "number": 1718,
    "body": "## What is this Python project?\r\n\r\nIt is a SQlite interface in the Python standard library\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is in the python standard library\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_sqlite3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1718 from norweeg/add_sqlite3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8637a88c0a76e0a4eac3",
    "number": 1717,
    "body": "## What is this Python project?\r\n\r\nHoloviews is a high-level plotting library that simplifies the process of plotting data, abstracting away the minutiae of drawing axes and glyphs allowing you to focus on what the graph is trying to convey.   Holoviews supports bokeh, matplotlib, and plotly as backends for rendering the plot.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1.  abstracts the process of creating plots\r\n2. focuses on the structure and content of the data, not the structure and contents of a plot (e.g. a collection of axes, glyphs, etc.)\r\n3. a holoviews plot can be transformed, sliced, and cross-sectioned to create other plots without having to redraw anything.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_holoviews",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8638a88c0a76e0a4eac4",
    "number": 1716,
    "body": "## What is this Python project?\r\n\r\nOracle's own database driver for working with Oracle SQL databases\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no other drivers for Oracle SQL databases.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-cx_oracle",
    "is_a_fork": true,
    "comments": [
      "since I opened this PR, oracle deprecated cx_Oracle in favor of oracledb.  I have updated the PR accordingly"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8638a88c0a76e0a4eac5",
    "number": 1715,
    "body": "## What is this Python project?\r\n\r\nRADIS :\r\n- compute emission & absorption molecular spectra based on standard line databases (HITRAN/HITEMP) \r\n- can be used for combustion, plasma physics, atmospheres and exoplanet research\r\n- is also a post-processing toolbox to compare with experimental spectra \r\n- Has an online interface : https://radis.github.io/radis-lab/ with preconfigured research-grade databases, and a (WIP) webpage app https://radis.app/  for educational use \r\n- Aims at building a spectroscopy-enthusiasts community !\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Implements a new algorithm that makes it up to 4 orders of magnitude faster than equivalent codes ([hapi](https://github.com/hitranonline/hapi)) \r\n- Has non-equilibrium support (multiple-temperatures)\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8639a88c0a76e0a4eac6",
    "number": 1714,
    "body": "## What is this Python project?\r\n\r\nClickHouse Python Driver with native (TCP) interface support.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It allows to have an excellent driver of Python for ClickHouse\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1714 from kdiri/master"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f863aa88c0a76e0a4eac7",
    "number": 1711,
    "body": "## What is this Python project?\r\n\r\nMediator pattern implementation for python 3.6+. Supports pipline behaviors, async handling.\r\nLibrary uses type annotations to register handlers and behaviors and match queries to them.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- python class as a Query (or Command) in CQRS\r\n- python function or class as a handler of queries\r\n- easy registering handlers and behaviors by decorator\r\n- mediator.send(query) in synchronous mode\r\n- await mediator.send_async(query) in async mode\r\n- behavior wraps handler. For example for validation, speed measurement and others\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n\r\nhttps://github.com/megafetis/mediatr_py\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Pleace merge my pr",
      "Hard to take seriously when the example snippets aren't even runnable Python.",
      "@blakev very interesting. What about 500-600 downloads per-month and stars?\r\nI saw some mistakes and fixed them in readme.md below. \r\n\r\nHandlers are binding to requests via decorator `@Mediator.handler` or via function `Mediator.register_handler(func)`\r\nThey use type annotations to find handlers. \r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f863ba88c0a76e0a4eac8",
    "number": 1710,
    "body": "added MediaCMS to the list of CMSes.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Looks good"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f863ca88c0a76e0a4eac9",
    "number": 1709,
    "body": "## What is this Python project?\r\n\r\nFastAPI a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints,\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt has very good support for type hints and mature toolchain.\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-fastapi",
    "is_a_fork": true,
    "comments": [
      "We've just built a new Python RPC, and PubSub solutions on top of FastAPI websockets - But I guess you should merge this pull request before I submit a new one on top... But that's probably proof that at least FastAPI can be considered awesome \r\n\r\n- [FastAPI Websocket Pub/Sub](https://github.com/authorizon/fastapi_websocket_pubsub) - The classic pub/sub pattern made easily accessible and scalable over the web and across your cloud in realtime.\r\n- [FastAPI Websocket RPC](https://github.com/authorizon/fastapi_websocket_rpc) - RPC (bidirectional JSON RPC) over Websockets made easy, robust, and production ready."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f863da88c0a76e0a4eaca",
    "number": 1708,
    "body": "As discussed in https://github.com/vinta/awesome-python/issues/1619#issuecomment-756729525 adding a bot that can automatically manage the repository, track changelog, and take care of project version lifecycle. The bot will check the repository setup once it is enabled by the repository maintainer (@vinta). Please [follow the instructions in docs](https://thoth-station.ninja/docs/developers/adviser/integration.html#kebechet-github-application) for more info. Basically, you'll need to enable https://github.com/apps/khebhut application and let @sesheta be the collaborator of the repo so it can open PRs.\r\n\r\nLet us know if you have any issues, questions or you find any difficulties with the setup. We are happy to help.",
    "head_branch": "add-thoth",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f863da88c0a76e0a4eacb",
    "number": 1707,
    "body": "Repo is no longer supported, is archived and read-only. Maintainer is recommending people use the Maxmind's GeoIP2 Python API.\r\nMaxmind's GeoIP2 Python API.: https://github.com/maxmind/GeoIP2-python\r\npygeoip: https://github.com/appliedsec/pygeoip\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [
      "I agree with this report"
    ],
    "commit_messages": [
      "Merge pull request #1707 from SamPetherbridge/patch-5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f863ea88c0a76e0a4eacc",
    "number": 1706,
    "body": "Remove the profiling repo as it has been archived and no longer maintained. The repo owner is highly recommending people switching to py-spy which provides better performance and usability.\r\nRepo: https://github.com/what-studio/profiling\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1706 from SamPetherbridge/patch-3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f863fa88c0a76e0a4eacd",
    "number": 1705,
    "body": "The original line_profiler repo is no longer maintained and links to this new maintained repo.\r\nOld Repo: https://github.com/rkern/line_profiler\r\nNew Repo: https://github.com/pyutils/line_profiler\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8640a88c0a76e0a4eace",
    "number": 1704,
    "body": "Repository has been archived by the owner. It is now read-only. No Maintenance Intended.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8641a88c0a76e0a4eacf",
    "number": 1703,
    "body": "## What is this Python project?\r\n\r\nWas deprecated because the dependencies are reliant on py2 and nobody is working on it.\r\n \r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8641a88c0a76e0a4ead0",
    "number": 1702,
    "body": "## What is this Python project?\r\n\r\n[Texthero](https://www.github.com/jbesomi/texthero) is a library that combines a wide range of text preprocessing, visualization and representation functionality in an easy-to-use, well-documented way.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- well-documented and -maintained\r\n- up-to-date features\r\n- seamlessly integrated with Pandas, thus extremely easy and intuitive to use\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8642a88c0a76e0a4ead1",
    "number": 1701,
    "body": "## What is this Python project?\r\n\r\nAn open source, self hosted video and media CMS\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Modern stack (Python3/Django3/Reactjs).\r\n2. REST API included.\r\n3. Support for multiple publishing workflows\r\n4. Sane defaults for encoding of videos\r\n5. adaptive streaming (HLS)\r\n6. resumable uploads (through chunked file uploads)\r\n7. custom media management dashbord\r\n8. responsive design - multiple themes\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8643a88c0a76e0a4ead2",
    "number": 1700,
    "body": "## What is this Python project?\r\n\r\nThis project is a website blog-alike with plenty of articles that teach you a lot of different Python topics.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. The content ranges from beginner to advanced.\r\n2. Provides you with useful examples.\r\n3. The blog gets updated with new features.\r\n4. There's a newsletter you can subscribe to that sends you regular emails with tips and tricks about Python.\r\n5. Concise content. Explained in a way that is useful to understand.\r\n6. Easy to navigate through (links previous tutorials when needed.)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-dbader",
    "is_a_fork": true,
    "comments": [
      "Closing as it's from Real Python. My bad."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8644a88c0a76e0a4ead3",
    "number": 1699,
    "body": "## What is this Python project?\r\n\r\nCompares performance of various python serialization packages\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDon't know about existence of similar projects\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8645a88c0a76e0a4ead4",
    "number": 1696,
    "body": "## What is this Python project?\r\n\r\nThe `log` function of `timelogging` is designed to be a drop-in replacement for `print` and it enables a clean output of either the time, time and day, or a fully customizable timestamp.\r\n\r\nIt is designed to allow logging to be as minimalistic as possible and it aspires to be as customizable as possible as well.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is a wrapper around the builtin `logging` library with way less overhead. This allows quicker prototyping, especially for data science tasks where the tracking of run durations of code blocks in  a script is very important. \r\n\r\nThrough this log function the time can be easily tracked with just one line of code of importing it. I find it very useful and I use it all the time.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta Review requested"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8646a88c0a76e0a4ead5",
    "number": 1695,
    "body": "The powerful python cms wrote by django and python\r\nsample site: boshra.org or faral.tech\r\n\r\nWhat's the difference between this Python project and similar ones?\r\nForm creator\r\nnew context processor\r\nnew stream fields\r\nhttps://djangopackages.org/grids/g/cms/\r\nhttps://www.linkedin.com/company/faralco/\r\nhttps://www.wappalyzer.com/technologies/cms/farapy\r\nhttps://github.com/Faral-Ghaemi/FaraPy",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8646a88c0a76e0a4ead6",
    "number": 1694,
    "body": "## What is this Python project?\r\n\r\n[Pdfminer.six](https://github.com/pdfminer/pdfminer.six) is a community maintained fork of the original [PDFMiner](https://github.com/euske/pdfminer). It is a tool for extracting information from PDF documents.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n> As of 2020, `PDFMiner` is not actively maintained. For the active project, check out its fork `pdfminer.six`.\r\n\r\nSo I change `PDFMiner` to `pdfminer.six`\r\n\r\n----\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8647a88c0a76e0a4ead7",
    "number": 1693,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8648a88c0a76e0a4ead8",
    "number": 1691,
    "body": "Including a small, toggleable section with a headline that gives a comparison between the two former, which I hope should be alright with regards to the formatting:\r\n\r\n![image](https://user-images.githubusercontent.com/7313176/102009118-965a6680-3d35-11eb-8d02-a5e40ccb236e.png)\r\n\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8649a88c0a76e0a4ead9",
    "number": 1689,
    "body": "Since this PR isn't for adding a project, I deviated from the format. Let me know if you'd still like me to follow it.\r\n\r\nAdd [awesome-fastapi](https://github.com/mjhea0/awesome-fastapi) list for the FastAPI web framework.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f864aa88c0a76e0a4eada",
    "number": 1688,
    "body": "## What is this Python project?\r\n\r\nJupylet is a unique library for sound synthesis, live music coding, graphics, and game programming interactively in Jupyter notebooks:\r\n\r\n[https://github.com/nir/jupylet](https://github.com/nir/jupylet)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Jupylet brings interactive live music coding and live loops in the spirit of Sonic Pi to Jupyter, building on the natural interactivity of Jupyter Notebooks. \r\n\r\n* Jupylet brings the full power of sound synthesis to pure Python (and Numpy) - in contrast other sound synthesis libraries for Python are typically binding to C libraries or to separate audio servers. \r\n\r\nHere is an example of two simple live loops playing a synthesized instrument, created with a few lines of code:\r\nhttps://jupylet.readthedocs.io/en/latest/_static/audio/tb303.5.ogg\r\n\r\nYou can find the code for this example in [the online documentation](https://jupylet.readthedocs.io/en/latest/programmers_reference_guide/synthesis.html#filters). \r\n\r\n* Jupylet brings 2D and 3D interactive game programming into Jupyter. There are other Python libraries for game programming, but I am not aware of any that is designed to be programmed interactively.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f864ba88c0a76e0a4eadb",
    "number": 1687,
    "body": "## What is this Python project?\r\n\r\nA multi language graphical debugger for Vim\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f864ba88c0a76e0a4eadc",
    "number": 1685,
    "body": "Hey @vinta \r\n\r\njust improving the readability a bit..\r\n\r\nCheers!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1685 from SpeksForks/master\n\nReadability"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f864ca88c0a76e0a4eadd",
    "number": 1684,
    "body": "## What is this Python project?\r\n\r\nPipenv is a well-known package and virtualenv manage tool under the PyPA namespace.\r\n\r\nPDM is a new developed package manager that supports [PEP 582](https://www.python.org/dev/peps/pep-0582/) and a bunch of fancy features\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f864da88c0a76e0a4eade",
    "number": 1683,
    "body": "## What is this Python project?\r\n\r\nA efficent , lightweight and simple JSON database which focus on schema regularity.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* A unique ID is automatically assigned to each json data added.\r\n* Checks for schema regularity. If any json data have conflicts with the schema of the database its rejected.\r\n* Supports all CRUD operations.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f864ea88c0a76e0a4eadf",
    "number": 1681,
    "body": "## What is this Python project?\r\n\r\nThis is one of the most popular books of all time focusing on Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis book is geared toward people newer to the language and uses a practical approach to solidify concepts.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Why did you close it? :slightly_frowning_face: ",
      "The repo has been inactive for a time — even if/when they come back, I'm sure there'll be a flood of things to review. Can reopen whenever 😄 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f864fa88c0a76e0a4eae0",
    "number": 1680,
    "body": "## What is this Python project?\r\n\r\n[Neuraxle](https://www.neuraxle.org/) is an extension of the Scikit-Learn project to enable more sophisticated Machine Learning projects, as well as Deep Learning projects. Features: \r\n\r\n- ⚡️ Component-Based: Build encapsulated steps, then compose them to build complex pipelines.\r\n- 🔥 Evolving State: Each pipeline step can fit, and evolve through the learning process\r\n- 🎛 Hyperparameter Tuning: Optimize your pipelines using AutoML, where each pipeline step has their own hyperparameter space.\r\n- 🔌 Compatible: Use your favorite machine learning libraries inside and outside Neuraxle pipelines.\r\n- 🚀 Production Ready: Pipeline steps can manage how they are saved by themselves, and the lifecycle of the objects allow for train, and test modes.\r\n- 🏹 Streaming Pipeline: Transform data in many pipeline steps at the same time in parallel using multiprocessing Queues.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis framework is very similar to Scikit-Learn. However, Scikit-Learn has some limitations, and Scikit-Learn users have been stuck with these problems sometimes. Hopefully, Neuraxle solves most of the encountered problems when it comes to using it for deep learning, and is built upon Scikit-Learn with compatibility in mind, rather than as a replacement. \r\n\r\nHere is a full article dedicated to the differences between Scikit-Learn and Neuraxle, as well as how Neuraxle solves the problems that Scikit-Learn has: \r\n- https://www.neuraxle.org/stable/scikit-learn_problems_solutions.html\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8650a88c0a76e0a4eae1",
    "number": 1679,
    "body": "Just a quick correction to the table of contents - based on PR #1677. Thanks.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1679 from dsuch/master\n\nAdd \"Enterprise Application Integrations\" to the table of contents."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8650a88c0a76e0a4eae2",
    "number": 1678,
    "body": "# added [WSocket](https://github.com/Ksengine/wsocket) to list\r\n\r\n## Simple WSGI HTTP + Websocket Server, Framework, Middleware And App.\r\n\r\n## Includes\r\n- Server(WSGI) included - works with any WSGI framework\r\n- Middleware - adds Websocket support for any  WSGI framework\r\n- Framework - simple Websocket WSGI web application framework\r\n- App - Event based app for Websocket communication\r\n**When external server used some clients like Firefox requires `http 1.1` Server. Middleware, Framework, App**\r\n- Handler - adds Websocket support to [wsgiref](https://docs.python.org/3/library/wsgiref.html \"python builtin WSGI server\")(python builtin WSGI server)\r\n- Client -Coming soon...\r\n\r\n## Common Features\r\n\r\n- only single file less than 1000 lines\r\n- websocket sub protocol supported\r\n- websocket message compression supported (works if client asks)\r\n- receive and send pong and ping messages(with automatic pong sender)\r\n- receive and send binary or text messages\r\n- works for messages with or without mask\r\n- closing messages supported\r\n- auto and manual close\r\n\r\n## Alternatives\r\n### Non WSGI\r\n- [Autobahn](http://crossbar.io/autobahn/) - huge with extras\r\n- [websocket-client](https://github.com/websocket-client/websocket-client) - client only no server\r\n-[websockets](https://pypi.org/project/websockets/) - python2 not supported\r\n\r\n### WSGI\r\n- [Django Channels](https://channels.readthedocs.io/en/stable/) - only for Django. but WSocket middleware can add support for any WSGI framework.\r\n- [Flask-SocketIO](https://flask-socketio.readthedocs.io/en/latest/) - only for Flask.\r\n- [gevent-websocket](https://pypi.org/project/gevent-websocket/) - only for Gevent Server\r\n- [ws4py](https://github.com/Lawouach/WebSocket-for-Python) - works with few servers. but WSocket works with many servers\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "head_branch": "wsocket",
    "is_a_fork": true,
    "comments": [
      "Ok",
      "Accept this pull",
      "please merge this"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8651a88c0a76e0a4eae3",
    "number": 1677,
    "body": "## What is this Python project?\r\n\r\n[Zato](https://zato.io) is a full-featured open-source enterprise integration platform in Python - a scalable, high-performance service bus for SOA, APIs, publish/subscribe topics, guaranteed delivery message queues, file transfer and Single Sign-On.\r\n\r\nBuilt in features include high-availability clusters, servers, web-admin GUI, scheduler and dozens of protocols supported out of the box, such as REST, SOAP, IBM MQ, SAP, Odoo, AMQP, ZeroMQ, AWS, OpenStack, FTP, SFTP, ElasticSearch, Redis, MongoDB, SQL, e-mail, SMS and much, much more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no other project like this in Python.\r\n\r\n## Voting\r\n\r\nAnyone who agrees with this pull request can vote for it by adding a :+1: to it and the maintainer will merge it when votes reach 20 or more.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hello @FooBarQuaxx,\r\n\r\ncould you please say more about what you find lacking in this PR and what you feel could be improved?\r\n\r\nThanks.",
      "The Zato project really deserves more vsisibility.",
      "Great project, huge potential !!"
    ],
    "commit_messages": [
      "Merge pull request #1677 from dsuch/master\n\nAdd Zato to Enterprise Application Integrations."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8652a88c0a76e0a4eae4",
    "number": 1676,
    "body": "## What is this Python project?\r\n\r\nFlask-State is a lightweight chart plugin to show machine state.\r\n\r\n- Monitoring indicators: CPU, Memory, Disk usage, LoadAVG, Boot time.\r\n- Extensible: It has rich options for extended functions, including redis monitoring, user authentication, custom logging, i18n and etc.\r\n- Stable: Lightweight dependencies, meanwhile solving multi-progress concurrency problems (if you use gunicorn).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know other similar Python projects.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8653a88c0a76e0a4eae5",
    "number": 1675,
    "body": "## What is this Python project?\r\n\r\nfile-system utilities for lazy devs.\r\n- Simple and intuitive.\r\n- Zero dependencies.\r\n- Compatibile with python 2 and 3.\r\n- Well tested.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know similar libraries.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@fabiocaccamo what are the advantages over the standard library https://docs.python.org/3/library/pathlib.html",
      "@sgaynetdinov I made this library over the years, before `pathlib.Path` was available, for this reason `fsutil` is compatible with both python 2 and 3.\n\nBtw, `pathlib.Path` is pretty much equivalent to the `os` module: https://docs.python.org/3/library/pathlib.html#correspondence-to-tools-in-the-os-module.\n\n`fsutil` provides much more methods, just give a look to the [list of the available methods.](https://github.com/fabiocaccamo/python-fsutil#methods)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8654a88c0a76e0a4eae6",
    "number": 1673,
    "body": "Hi,\r\nI am Branko from Manning Publications and I thought this new book of ours could be a good resource for the list.\r\nThanks for considering it!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8654a88c0a76e0a4eae7",
    "number": 1671,
    "body": "## What is this Python project?\r\n\r\nGenerate codes similar to Heroku URLs (adjective-noun-code), or Youtube (URL Safe). It can easily be extended to add custom rules.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere's not another project like this listed.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8655a88c0a76e0a4eae8",
    "number": 1670,
    "body": "## What is this Python project?\r\n\r\n*Think Python: How to Think Like a Computer Scientist* is a book on python released under the GNU Free Documentation license. This book does not take the usual approach by other tutorials on teaching how to program with python but it teaches you to understand programs and solve problems efficiently.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Instead of just teaching programming with python, teaches you to solve problems too.\r\n- Comparing it to other books, this book also teaches you to understand how programs work while learning python.\r\n- Comparatively bigger than other resources but can be very useful for people who does not just want to learn scripting with python but to make programs for scientific research and production uses.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @MajorGamerJay - I think the intention of this repository's owner is to have a clean and nice commit message about what is being changed in readme.md under each PR.\r\n\r\nSo, instead of \"Update README.md\" I recommend that you commit with a message such as \"Add Think Python (book)\".",
      "Sorry about that @dsuch. Fixed the commit message, hope it's now eligible for merging.",
      "I am fine with your change @MajorGamerJay but I am not the owner of the repository, it belongs to @vinta.",
      "The change does not look fine since it has 3 commits when it should be 1 or 2 at max. @MajorGamerJay You could've just changed your last commit message instead.",
      "I meant the changed commit message by \"the change\"."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8656a88c0a76e0a4eae9",
    "number": 1669,
    "body": "This looks like a typo @vinta...\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1669 from SpekBin/master\n\nTypo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8657a88c0a76e0a4eaea",
    "number": 1668,
    "body": "## What is this Python project?\r\n\r\nEland is a Python Elasticsearch client for exploring and analyzing data in Elasticsearch with a familiar Pandas-compatible API.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Where possible the package uses existing Python APIs and data structures to make it easy to switch between numpy, pandas, scikit-learn to their Elasticsearch powered equivalents. \r\n\r\n- In general, the data resides in Elasticsearch and not in memory, which allows Eland to access large datasets stored in Elasticsearch.\r\n\r\n- Eland also provides tools to upload trained machine learning models from your common libraries like scikit-learn, XGBoost, and LightGBM into Elasticsearch.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-eland",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8658a88c0a76e0a4eaeb",
    "number": 1667,
    "body": "## What is this Python project?\r\n\r\nProvides a client library for interacting with here geocoder api\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nHERE exposes a number of rest APIs and this library is intended to make it even easier for python programmers to use the geocoder API. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8658a88c0a76e0a4eaec",
    "number": 1666,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\nAdding some code\r\nAdding some code\r\nAdding some code\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "FYI Hacktober T-shirt is now [opt-in](https://hacktoberfest.digitalocean.com/hacktoberfest-update) only."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8659a88c0a76e0a4eaed",
    "number": 1665,
    "body": "## What is this Python project?\r\n\r\nvedo ([github](https://github.com/marcomusy/vedo)) is a really useful library which allows to work with meshes and volumes.\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- package has an extensive list of features enumerated [here](https://github.com/marcomusy/vedo#--features) \r\n- intuitive API and lots of usage examples\r\n- can export 3d scenes to file or to web page\r\n- is part of the ubuntu/debian distribution\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f865aa88c0a76e0a4eaee",
    "number": 1664,
    "body": "This can be seen by following the link at the top of https://github.com/mitsuhiko/python-modernize readme",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1664 from tomviner/patch-1\n\nmodernize is renamed and re-homed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f865ba88c0a76e0a4eaef",
    "number": 1663,
    "body": "Hey @vinta \r\n\r\njust fixing the celery link - website is down.\r\n\r\nCheers!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@spekulatius may be used `https://docs.celeryproject.org/en/stable/` ?",
      "Hey @sgaynetdinov, yeah, that would work too. Should I change it?",
      "@spekulatius `https://docs.celeryproject.org/en/stable/` would be ok.",
      "Updated @vinta ",
      "@spekulatius Thank you!",
      "No problem @vinta, happy to help out!"
    ],
    "commit_messages": [
      "Merge pull request #1663 from SpekBin/master\n\nFixing celery link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f865ca88c0a76e0a4eaf0",
    "number": 1662,
    "body": "Other section is edited\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@subahanii Your submission looks like spam, it is guaranteed no one will want to open such a link. If you are truly interested in including it, do make sure that the one-line description is short and written in a neutral tone."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f865da88c0a76e0a4eaf1",
    "number": 1661,
    "body": "## What is this Python project?\r\n\r\nVizTracer is a logging/debugging/profiling tool that can trace and visualize code execution. It can record function entries/exits along with a lot of other optional information and generate an HTML file using google-trace-viewer to visualize the whole execution through time.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* VizTracer is using a much more intuitive UI - an interactive web page, compared to many other command line based tracers.\r\n* VizTracer has a very low overhead, similar to cProfile, because the essential part is implemented in pure C.\r\n* VizTracer is very powerful feature wise. It can record different kind of information without changing the source code. It has even more logging options with source code modification.\r\n* VizTracer is super easy to use and has no dependecies at all, and, it supports Windows.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f865da88c0a76e0a4eaf2",
    "number": 1659,
    "body": "notifier adding\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "spam"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f865ea88c0a76e0a4eaf3",
    "number": 1658,
    "body": "Python Program to Convert Celsius To Fahrenheit\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Fuck @digitalocean https://blog.domenic.me/hacktoberfest/"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f865fa88c0a76e0a4eaf4",
    "number": 1657,
    "body": "Added These Files Essential for Change log. It is automatic. I worked on this because this issue was open. \r\nIf you want this Automatic Change log generator. Simply Merge this PR\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "I Created Two Files. \r\nFirst name- action.yml contain the code for running the change log and Second name-- changelog for storing the changes made by contirbutors"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8660a88c0a76e0a4eaf5",
    "number": 1656,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8661a88c0a76e0a4eaf6",
    "number": 1655,
    "body": "## Python Function which accepts the radius of a circle from the user and computes the area.\r\n\r\nThe function has an area of circle formula which implements when the user passes the radius value during the function call\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt can be differently created but by using function it can be reused\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Guys, the repo is not for this kind of purposes."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8661a88c0a76e0a4eaf7",
    "number": 1654,
    "body": "Python Program to Illustrate Different Set Operations\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8662a88c0a76e0a4eaf8",
    "number": 1653,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8663a88c0a76e0a4eaf9",
    "number": 1652,
    "body": "program to Check Leap Year using Python\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "T-shirt spam."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8664a88c0a76e0a4eafa",
    "number": 1651,
    "body": "…odd numbers in descending  order.\r\n\r\nprogram to sort even numbers in  ascending order ,then odd numbers in descending  order\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "> Repo is `awesome-python`\r\n> PR is in C\r\n> almost no effort, not even using `.c` file extension\r\n> smh my head\r\n\r\nT-shirt spam. Hacktoberfest is a mess."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8664a88c0a76e0a4eafb",
    "number": 1649,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Spam"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8665a88c0a76e0a4eafc",
    "number": 1648,
    "body": "## What is this Python project?\r\n\r\nOpenAI Gym is a toolkit for developing and comparing reinforcement learning algorithms. This is the gym open-source library, which gives you access to a standardized set of environments.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- Contains a variety of RL environments that are easy to set up and use\r\n- Assures standardization of environments used in publications\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-gym",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1648 from IhebHaboubi/add-gym\n\nAdd gym"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8666a88c0a76e0a4eafd",
    "number": 1647,
    "body": "## What is this Python project?\r\n\r\nThe ProxyRequests Library first scrapes proxies from the web. Then it recursively attempts to make a request if the initial request with a proxy is unsuccessful..\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nProxyRequests library used Proxies for GET/POST requests.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8667a88c0a76e0a4eafe",
    "number": 1646,
    "body": "## What is this Python project?\r\n\r\nFixit allows the creation of custom lint rules, just like flake8 or pylint. In addition, fixit allows developers to apply code transformations, similar to 2to3.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\r\nflake8/pyflakes and pylint use the `ast` or `astroid` modules to analyze the source code. The resulting abstract syntax tree is missing information, such as whether a string was surrounded by single or double quotes, or the number of whitespaces between two tokens. Fixit is based on libCST, which uses a concrete syntax tree as its base representation and retains all formatting.\r\n\r\nTherefore, Fixit is not just a framework for lint rules, but a framework for code transformations. This can be used to enforce coding conventions or to ascertain certain properties of the source code like HTTP request timeouts.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "code-analysis-framework-fixit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8668a88c0a76e0a4eaff",
    "number": 1645,
    "body": "## What is this Python project?\r\n\r\nhttps://learnxinyminutes.com/docs/python/ is a comprehensive guide to python. It includes everything from simple operations to generators. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhile other projects are book based, this project shows you how to use python inline using comments. It is much easier than other books in this way.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8668a88c0a76e0a4eb00",
    "number": 1644,
    "body": "docs name\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "spam"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8669a88c0a76e0a4eb01",
    "number": 1643,
    "body": "https://github.com/tensorflow/recommenders\r\n\r\n## What is this Python project?\r\n\r\nIt is a library for building recommender system models using TensorFlow.\r\n\r\nIt helps with the full workflow of building a recommender system: data preparation, model formulation, training, evaluation, and deployment.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It helps with the full workflow of building a recommender system.\r\n- It's built on top of Keras.\r\n- It's maintained by TensorFlow itself.\r\n- Supports TensorFlow 2.x.\r\n- It's relatively easy to use.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f866aa88c0a76e0a4eb02",
    "number": 1642,
    "body": " Added #use MkDocs to generate a static website   so it get's easy for other people what you are trying to write the code for Hope it makes a lot of change\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f866ba88c0a76e0a4eb03",
    "number": 1641,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f866ba88c0a76e0a4eb04",
    "number": 1640,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "newbranch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f866ca88c0a76e0a4eb05",
    "number": 1639,
    "body": "Nice SANS' python3 cheatsheet added\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f866da88c0a76e0a4eb06",
    "number": 1638,
    "body": "## What is this Python project?\r\n\r\nChainer is an open-source Deep Learning framework written in Python on top of NumPy and CuPy libraries.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nChainer has four extension libraries – ChainerMN, ChainerRL, ChainerCV, and ChainerUI. With ChainerMN, Chainer can be used on multiple GPUs and deliver a super-fast performance, as compared to other Deep Learning frameworks like MXNet and CNTK.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f866ea88c0a76e0a4eb07",
    "number": 1637,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "T-shirt spam."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f866fa88c0a76e0a4eb08",
    "number": 1636,
    "body": "## What is this Python project?\r\n\r\nI have Added Machine Learning Libraries supported by Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nI have Added Machine Learning Libraries supported by Python.\r\nThese are very useful ML Libraries that make computation in Ml using Python faster.\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "my_doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8670a88c0a76e0a4eb09",
    "number": 1635,
    "body": "## What is this Python project?\r\nI have Added more Data Visualization Libraries.\r\n\r\nDescribe features.\r\nThe other important Data Visualization Libraries i.e. Folium and Plotly are added along with their description and official reference links.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nAdded more Data Visualization Libraries\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "my_contri",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8670a88c0a76e0a4eb0a",
    "number": 1634,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8671a88c0a76e0a4eb0b",
    "number": 1633,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8672a88c0a76e0a4eb0c",
    "number": 1632,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8673a88c0a76e0a4eb0d",
    "number": 1631,
    "body": "I used lru_cache a library from python used to make calculation faster in any program that uses high values and inputs. It is very beneficial and efficient for any programmer. I hope You like and everybody else. \r\nnow its up to you make it available for users to know about it.\r\nthank you\r\n\r\n## What is this Python project?\r\n\r\nThis just a showcase For Telling Use Of library That Python Have\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons:\r\nThis Project actually can Calculate infinite series of Fibonacci, i have set that limit to 10000 for now but you can Change It it \r\nInfinite. difference basically is that it is fast than normal program if you create without this library.\r\nthis library is efficient. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Did you merged it or closed... What does closed mean???\n\n\nOn Oct 5, 2020 at 16:37, Vinta Chen <notifications@github.com> wrote:\n\nClosed #1631 <https://github.com/vinta/awesome-python/pull/1631>.\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n<https://github.com/vinta/awesome-python/pull/1631#event-3839851772>, or\nunsubscribe\n<https://github.com/notifications/unsubscribe-auth/ARB3QCFFX46ZZALL6FA7KFDSJGSHPANCNFSM4R7H43WA>\n.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8673a88c0a76e0a4eb0e",
    "number": 1628,
    "body": "A change log is added in the comparison with the readme.md file.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8674a88c0a76e0a4eb0f",
    "number": 1627,
    "body": "## What is this Python project?\r\n\r\n[Pandas_Alive](https://github.com/JackMcKew/pandas_alive) is intended to provide a plotting backend for animated matplotlib charts for Pandas DataFrames, similar to the already [existing Visualization feature of Pandas](https://pandas.pydata.org/pandas-docs/stable/user_guide/visualization.html).\r\n\r\nIt facilitates a wide range of animated plots including bar charts, line charts, pie charts, bubble charts, and geospatial charts.  It also has the ability to animate multiple, related charts at once, which is an extremely nice feature and can be used to create animated dashboards.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Built upon matplotlib (as opposed to libraries like Plotly)\r\n* Monkey patches functionality onto Pandas dataframe to mimic existing static charting functionality\r\n* A very shallow learning curve for people new to python\r\n* It doesn't feature interactive controls but this helps make it simple\r\n* Arbitrary subplots are possible, as opposed to Plotly where subplots are only possible by faceting a data dimension\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8675a88c0a76e0a4eb10",
    "number": 1626,
    "body": "## What is this Python project?\r\n\r\n* already present: [MonkeyType](https://github.com/Instagram/MonkeyType) - A system for Python that generates static type annotations by collecting runtime types\r\n* [x] [pytype](https://github.com/google/pytype) - Pytype checks and infers types for your Python code - without requiring type annotations\r\n* [x] [pyannotate](https://github.com/dropbox/pyannotate) - Insert annotations into your source code based on call arguments and return types observed at runtime\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- https://github.com/google/pytype#how-is-pytype-different-from-other-type-checkers\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Thanks!\n\nOn Sat, Sep 26, 2020, 3:36 AM Vinta Chen <notifications@github.com> wrote:\n\n> Merged #1626 <https://github.com/vinta/awesome-python/pull/1626> into\n> master.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vinta/awesome-python/pull/1626#event-3810373830>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAAMNS3PG7R33PME4UL2GRDSHWKYLANCNFSM4R2RQ2NA>\n> .\n>\n"
    ],
    "commit_messages": [
      "Merge pull request #1626 from westurner/patch-2\n\nStatic Type Annotations Generators > pytype, pyannotate"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8676a88c0a76e0a4eb11",
    "number": 1625,
    "body": "## What is this Python project?\r\n\r\nIt's an attempt to understand Python through the means of counter-intuitive snippets and some lesser-known features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nA lot of learning resources leave certain gaps in understanding. I think this project can complement other learning resources as a test of knowledge and help them fill in their Python gaps.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1625 from satwikkansal/master\n\nAdd wtfpython to Resources section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8677a88c0a76e0a4eb12",
    "number": 1624,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8677a88c0a76e0a4eb13",
    "number": 1623,
    "body": "## What is this Python project?\r\n\r\nxonsh is a Python-powered, cross-platform, Unix-gazing shell language and command prompt. The language is a superset of Python 3.5+ with additional shell primitives. It is time-tested and very well documented project.\r\n\r\n![Screenshot_20200924_144131](https://user-images.githubusercontent.com/1708680/94140537-0dd5d380-fe74-11ea-9f61-c1c8d3284d9a.png)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nXonsh is significantly different from most other shells or shell tools. The following table lists features and capabilities that various tools may or may not share.\r\n\r\n<table class=\"colwidths-given docutils align-default\">\r\n<colgroup>\r\n<col style=\"width: 33%\">\r\n<col style=\"width: 11%\">\r\n<col style=\"width: 11%\">\r\n<col style=\"width: 11%\">\r\n<col style=\"width: 11%\">\r\n<col style=\"width: 11%\">\r\n<col style=\"width: 11%\">\r\n</colgroup>\r\n<thead>\r\n<tr class=\"row-odd\"><th class=\"head stub\"></th>\r\n<th class=\"head\"><p>Bash</p></th>\r\n<th class=\"head\"><p>zsh</p></th>\r\n<th class=\"head\"><p>plumbum</p></th>\r\n<th class=\"head\"><p>fish</p></th>\r\n<th class=\"head\"><p>IPython</p></th>\r\n<th class=\"head\"><p>xonsh</p></th>\r\n</tr>\r\n</thead>\r\n<tbody>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Sane language</p></th>\r\n<td></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n</tr>\r\n<tr class=\"row-odd\"><th class=\"stub\"><p>Easily scriptable</p></th>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n</tr>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Native cross-platform support</p></th>\r\n<td></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n</tr>\r\n<tr class=\"row-odd\"><th class=\"stub\"><p>Meant as a shell</p></th>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n</tr>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Tab completion</p></th>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n</tr>\r\n<tr class=\"row-odd\"><th class=\"stub\"><p>Completion from man-page parsing</p></th>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n</tr>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Large standard library</p></th>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n<td></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n</tr>\r\n<tr class=\"row-odd\"><th class=\"stub\"><p>Typed variables</p></th>\r\n<td></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n<td><p>✓</p></td>\r\n</tr>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Syntax highlighting</p></th>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n<td><p>in notebook</p></td>\r\n<td><p>w/ prompt-toolkit</p></td>\r\n</tr>\r\n<tr class=\"row-odd\"><th class=\"stub\"><p>Pun in name</p></th>\r\n<td><p>✓</p></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n<td></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n</tr>\r\n<tr class=\"row-even\"><th class=\"stub\"><p>Rich history</p></th>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td></td>\r\n<td><p>✓</p></td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta please take a look. The request is approved and liked."
    ],
    "commit_messages": [
      "Merge pull request #1623 from anki-code/patch-1\n\nAdd xonsh shell is a Python-powered, Unix-gazing shell language and command prompt"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8678a88c0a76e0a4eb14",
    "number": 1622,
    "body": "According to the repo:\r\n\r\n`nplusone` is a library for detecting the n+1 queries problem in Python ORMs, including SQLAlchemy, Peewee, and the Django ORM.\r\nMany object-relational mapping (ORM) libraries default to lazy loading for relationships. This pattern can be efficient when related rows are rarely accessed, but quickly becomes inefficient as relationships are accessed more frequently. In these cases, loading related rows eagerly using a JOIN can be vastly more performant. Unfortunately, understanding when to use lazy versus eager loading can be challenging: you might not notice the problem until your app has slowed to a crawl.\r\n\r\nI myself used this tech so many times. It acts like a mid-level layer on the Django apps. It also uses a logging module in order to log every single moment during the process.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8679a88c0a76e0a4eb15",
    "number": 1620,
    "body": "Graphene is the official GraphQL framework for Python. \r\nIt is also an opinionated Python library for building GraphQL schemas/types fast and easily.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1620 from lnxpy/master\n\nAdd graphene"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f867aa88c0a76e0a4eb16",
    "number": 1618,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f867ba88c0a76e0a4eb17",
    "number": 1617,
    "body": "Add ipychart, a new data visualization library for the Jupyter Notebook environment powered by Chart.js, the famous Javascript library, in the backend.\r\n\r\nOfficial documentation: https://nicohlr.github.io/ipychart/\r\nGithub repo: https://github.com/nicohlr/ipychart",
    "head_branch": "ipychart",
    "is_a_fork": true,
    "comments": [
      "Tested and approved !! ;)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f867ca88c0a76e0a4eb18",
    "number": 1616,
    "body": "## What is this Python project?\r\n\r\nA tool for the definition and construction of domain specific languages in Python, using a PEG parser. It features a meta-language which you can use to specify the definition of your language. Using that, textX can parse programs written in your language, giving you all the syntactical elements for you to manipulate as needed.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. The syntax of the meta-language is clear and simple.\r\n2. In contrast to bigger and fully-fledged frameworks like Jetbrains MPS or Eclipse's Xtext (from where textX was inspired), textX is a simple Python library that you can integrate in your project as any other.\r\n3. You can customize the way the parser will handle elements like whitespaces and case-sensitivity. Registered callbacks can be used for post-processing validation. Grammar files for your language can be split into many files.\r\n4. It offers an abstraction over the [Arpeggio](https://github.com/textX/Arpeggio) PEG parser.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f867ca88c0a76e0a4eb19",
    "number": 1615,
    "body": "## What is this Python project?\r\n\r\nShow is a simple one liner to visualize variables e.g. :\r\nimport sho\r\nsho.w(dataframe)\r\n... opens a pivottasble.js webpage viewing the dataframe.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSho is a self contained one liner.  The idea is to be as simple as possible but to maximise the ability for an engineer to explore in memory variables.\r\n\r\nI haven't found a similar package\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@vinta any chance of a merge ?",
      "@vinta Can you merge please ?",
      "Aapka project hogaya\n\nOn Wed, Dec 30, 2020, 8:33 AM davewd <notifications@github.com> wrote:\n\n> @vinta <https://github.com/vinta> Can you merge please ?\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/vinta/awesome-python/pull/1615#issuecomment-752310196>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AQLA42EAOA34FEU6QQO2ZEDSXKKATANCNFSM4Q4GJRJA>\n> .\n>\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f867da88c0a76e0a4eb1a",
    "number": 1613,
    "body": "Since the core of LibreSelery is a command-line tool I put it into this category.\r\n\r\nFind more information on our blog post:\r\nhttps://protontypes.eu/blog/2020/09/02/launch-of-protontypes/\r\n\r\nOur concept worked perfectly for LibreSelery itself:\r\n![](https://raw.githubusercontent.com/wiki/protontypes/libreselery/libreselery/transactions_per_user.png)\r\n\r\n ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f867ea88c0a76e0a4eb1b",
    "number": 1612,
    "body": "## What is this Python project?\r\n\r\nUnified interface in Python for constructing and managing workflows on different workflow engines, such as Argo Workflows, Tekton Pipelines, and Apache Airflow.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPlease see this section in README for details: https://github.com/couler-proj/couler#why-use-couler\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta Could you take a look when you get a chance? Thanks!",
      "@vinta Could you take a look at this when you get a chance?",
      "@terrytangyuan \r\n\r\n[\"Just a gentle reminder: Try not to submit your own project. Instead, wait for someone finds it useful and submits it for you.\"](https://github.com/vinta/awesome-python/blob/master/CONTRIBUTING.md)",
      "I understand and thanks for the reminder. This is a new project and I believe a self-nomination process would be helpful here. We’ve seen great adoption among the community and if the community find this helpful I believe they will upvote the PR by themselves here."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f867fa88c0a76e0a4eb1c",
    "number": 1610,
    "body": "## What is this Python project?\r\n\r\nMagenta is a research project exploring the role of machine learning in the process of creating art and music. Primarily this involves developing new deep learning and reinforcement learning algorithms for generating songs, images, drawings, and other materials. But it's also an exploration in building smart tools and interfaces that allow artists and musicians to extend (not replace!) their processes using these models. Magenta was started by some researchers and engineers from the Google Brain team\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- actively updated and maintained\r\n- has a JavaScript version that runs in the browser\r\n- powered by tensorflow\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-magneta",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1610 from IhebHaboubi/add-magneta\n\nAdd magenta"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8680a88c0a76e0a4eb1d",
    "number": 1609,
    "body": "Include MindsDB to the ML section\r\n\r\n## What is this Python project?\r\nMindsDB is an open-source AI layer for existing databases and provides an Explainable AutoML framework. It enables you to build, train and test state of the art ML models in as simple as one line of code, or one SQL query.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Auto ML\r\n* Explainable AI\r\n* AI Layer for databases\r\n* Self-hosted\r\n* Simplicity (One line of code or one SQL query)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1609 from ZoranPandovski/master\n\nAdd MindsDB to the ML"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8680a88c0a76e0a4eb1e",
    "number": 1608,
    "body": "## What is this Python project?\r\n\r\nRecognize and manipulate faces from Python or from the command line with the world's simplest face recognition library.\r\n\r\nThis also provides a simple face_recognition command line tool that lets you do face recognition on a folder of images from the command line!\r\n\r\nFeatures:\r\n- find and manipulate facial features in pictures\r\n- identify faces in pictures\r\n- you can even use this library with other Python libraries to do real-time face recognition\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- simple to use\r\n- can be used in terminal or in the command line\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-face-recognition",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1608 from IhebHaboubi/add-face-recognition\n\nAdd face_recognition"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8681a88c0a76e0a4eb1f",
    "number": 1606,
    "body": "## What is this Python project?\r\n\r\npybarcode has been dead for many years, and python-barcode is a drop-in\r\nreplacement/fork of it which has been actively maintained all this time.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks!\n\n\n> Op 2020-09-01 om 17:47 heeft Vinta Chen <notifications@github.com> het volgende geschreven:\n> \n> ﻿\n> Merged #1606 into master.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n"
    ],
    "commit_messages": [
      "Merge pull request #1606 from WhyNotHugo/patch-1\n\nReplace pybarcode with python-barcode"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8682a88c0a76e0a4eb20",
    "number": 1605,
    "body": "https://chainer.org/",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8683a88c0a76e0a4eb21",
    "number": 1604,
    "body": "http://cubes.databrewery.org/",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8684a88c0a76e0a4eb22",
    "number": 1603,
    "body": "Added Mahotas library",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8684a88c0a76e0a4eb23",
    "number": 1602,
    "body": "The previous link was returning 404. Updated with current working URL\r\n",
    "head_branch": "PrinceSumberia-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1602 from PrinceSumberia/PrinceSumberia-patch-1\n\nUpdate SimPy Link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8685a88c0a76e0a4eb24",
    "number": 1601,
    "body": "https://github.com/alfiopuglisi/guietta",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8686a88c0a76e0a4eb25",
    "number": 1600,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8687a88c0a76e0a4eb26",
    "number": 1599,
    "body": "added makesite to static site generators\r\n\r\n## What is this Python project?\r\n\r\nSimple, lightweight, and magic-free static site/blog generator.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nVery lightweight. Only 130 lines (excluding comments and empty lines).\r\n\r\nEnumerate comparisons.\r\n\r\n1. No setup required whatsoever. Run the script `makesite`. That's it. \r\n2. Deploys to `github-pages` very easily using Github Workflow\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1599 from kgashok/patch-1\n\nAdded makesite to static site generators"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8687a88c0a76e0a4eb27",
    "number": 1598,
    "body": "## What is this Python project?\r\n\r\n[Ultimate Python study guide](https://github.com/huangsam/ultimate-python/) - Ultimate Python study guide for newcomers and professionals alike.\r\n\r\nI created a GitHub repo to share what I've learned about core Python over the past 5+ years of using it as a college graduate, an employee at large-scale companies and as an open-source contributor of repositories like [Celery](https://github.com/celery/celery) and [Full Stack Python](https://github.com/mattmakai/fullstackpython.com). I look forward to seeing more people learn Python and pursue their passions through it.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n**Serve as a resource** for Python newcomers who prefer to learn hands-on. This repository has a collection of standalone modules which can be run in an IDE or a terminal. Most lines have carefully crafted comments which guide a reader through what the programs are doing step-by-step.\r\n\r\n**Serve as a pure guide** for those who want to revisit core Python concepts. Only builtin libraries are leveraged so that these concepts can be conveyed without the overhead of domain-specific concepts. As such, popular open-source libraries and frameworks (i.e. `sqlalchemy`, `requests`, `pandas`) are not installed.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "task/add-ultimate-python",
    "is_a_fork": true,
    "comments": [
      "This repository has received 500+ stars on GitHub and 1000+ upvotes on Reddit. Cloned 50+ times",
      "Now it has received 1.5k+ stars"
    ],
    "commit_messages": [
      "Merge pull request #1598 from huangsam/task/add-ultimate-python\n\nAdd Ultimate Python study guide"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8688a88c0a76e0a4eb28",
    "number": 1597,
    "body": "## What is this Python project?\r\n\r\nThe Social-Engineer Toolkit (SET) was created and written by Dave Kennedy, the founder of TrustedSec. It is an open-source Python-driven tool aimed at penetration testing around Social-Engineering.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It has a number of custom attack vectors that allow you to make a believable attack quickly\r\n- It has over 2 million downloads\r\n- It has been featured in a number of books including the number one best seller in security books for 12 months since its release, “Metasploit: The Penetrations Tester’s Guide” written by TrustedSec’s founder as well as Devon Kearns, Jim O’Gorman, and Mati Aharoni.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-setoolkit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1597 from IhebHaboubi/add-setoolkit\n\nAdd social-engineer-toolkit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8689a88c0a76e0a4eb29",
    "number": 1596,
    "body": "## What is this Python project?\r\n\r\nsqlmap is an open source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database servers. It comes with a powerful detection engine, many niche features for the ultimate penetration tester, and a broad range of switches including database fingerprinting, over data fetching from the database, accessing the underlying file system, and executing commands on the operating system via out-of-band connections.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n- sqlmap is able to detect and exploit five different SQL injection types : Boolean-based blind, Time-base blind, Error-based, UNION query-based, Stacked queries\r\n- supports many types of databases\r\n- works with other IT security open source projects, Metasploit and w3af ...\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-sqlmap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1596 from IhebHaboubi/add-sqlmap\n\nAdd sqlmap"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f868aa88c0a76e0a4eb2a",
    "number": 1595,
    "body": "Datapane is a great Python libary to share analytics results, but I couldn't find the best category to fit this library. SoI added the data presentation category. Feel free to change it to another category if you think it could fit somewhere better",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I have just added one more library for data validation and moved Datapane to data visualization. Let me know if it looks okay. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f868ba88c0a76e0a4eb2b",
    "number": 1594,
    "body": "## What is this Python project?\r\n\r\nfsociety is a penetration testing system that includes several tools for different uses, among which we find:\r\n- Information gathering\r\n- Password attacks\r\n- Wireless testing\r\n- Exploitation tools\r\n- Sniffing and Spoofing\r\n- Web Hacking\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Runs on Linux, macOS, and Windows\r\n- Can be used with Docker\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-fsociety",
    "is_a_fork": true,
    "comments": [
      "![](https://media.giphy.com/media/kg9fAQryp5fMY/giphy.gif)"
    ],
    "commit_messages": [
      "Merge pull request #1594 from IhebHaboubi/add-fsociety\n\nAdd fsociety"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f868ba88c0a76e0a4eb2c",
    "number": 1593,
    "body": "## What is this Python project?\r\n\r\nPywal is a tool that generates a color palette from the dominant colors in an image. It then applies the colors system-wide and on-the-fly in all of your favourite programs. It also supports predefined themes and has over 250 themes built-in. You can also create your own theme files to share with others.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Fast\r\n- Can be used as a module or a CLI\r\n- Supports 5 color generation backends\r\n- Can be extended to support a wide range of programs and applications\r\n- Requires minimal configuration\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-pywal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1593 from IhebHaboubi/add-pywal\n\nAdd pywal"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f868da88c0a76e0a4eb2d",
    "number": 1592,
    "body": "## What is this Python project?\r\n\r\nisort is a Python utility / library to sort imports alphabetically, and automatically separated into sections and by type. It provides a command line utility, Python library and plugins for various editors to quickly sort all your imports.\r\n(from https://github.com/timothycrosley/isort)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know other similar Python projects, but isort is really useful tool.\r\nWe don't have to take care of imports order anymore by using isort.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "I would 👍 this if `isort` is added under \"Code Formatters\" instead of \"Code Linters\""
    ],
    "commit_messages": [
      "Add isort"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f868ea88c0a76e0a4eb2e",
    "number": 1591,
    "body": "## What is this Python project?\r\n\r\n[Dependency Injector](https://github.com/ets-labs/python-dependency-injector) is a dependency injection framework for Python.\r\n\r\nIt helps implementing the dependency injection principle.\r\n\r\nKey features of the ``Dependency Injector``:\r\n\r\n- **Providers**. Provides ``Factory``, ``Singleton``, ``Callable``, ``Coroutine``, ``Object``, ``List``, ``Dict``, ``Configuration``, ``Resource``, ``Dependency`` and ``Selector`` providers that help assembling your objects. See [Providers](https://python-dependency-injector.ets-labs.org/providers/index.html).\r\n- **Overriding**. Can override any provider by another provider on the fly. This helps in testing and configuring dev / stage environment to replace API clients with stubs etc. See [Provider overriding](https://python-dependency-injector.ets-labs.org/providers/overriding.html).\r\n- **Configuration**. Reads configuration from ``yaml`` & ``ini`` files, environment variables and dictionaries. See [Configuration provider](https://python-dependency-injector.ets-labs.org/providers/configuration.html).\r\n- **Containers**. Provides declarative and dynamic containers. See [Containers](https://python-dependency-injector.ets-labs.org/containers/index.html).\r\n- **Resources**. Helps with initialization and configuring of logging, event loop, thread or process pool, etc. Can be used for per-function execution scope in tandem with wiring. See [Resource provider](https://python-dependency-injector.ets-labs.org/providers/resource.html).\r\n- **Wiring**. Injects dependencies into functions and methods. Helps integrating with other frameworks: Django, Flask, Aiohttp, Sanic, FastAPI, etc. See [Wiring](https://python-dependency-injector.ets-labs.org/wiring.html).\r\n- **Typing**. Provides typing stubs, ``mypy``-friendly. See [Typing and mypy](https://python-dependency-injector.ets-labs.org/providers/typing_mypy.html).\r\n- **Performance**. Fast. Written in ``Cython``.\r\n- **Maturity**. Mature and production-ready. Well-tested, documented and supported.\r\n\r\n```python\r\nfrom dependency_injector import containers, providers\r\nfrom dependency_injector.wiring import inject, Provide\r\n\r\n\r\nclass Container(containers.DeclarativeContainer):\r\n\r\n    config = providers.Configuration()\r\n\r\n    api_client = providers.Singleton(\r\n        ApiClient,\r\n        api_key=config.api_key,\r\n        timeout=config.timeout.as_int(),\r\n    )\r\n\r\n    service = providers.Factory(\r\n        Service,\r\n        api_client=api_client,\r\n    )\r\n\r\n\r\n@inject\r\ndef main(service: Service = Provide[Container.service]):\r\n    ...\r\n\r\n\r\nif __name__ == '__main__':\r\n    container = Container()\r\n    container.config.api_key.from_env('API_KEY')\r\n    container.config.timeout.from_env('TIMEOUT')\r\n    container.wire(modules=[sys.modules[__name__]])\r\n\r\n    main()  # <-- dependency is injected automatically\r\n\r\n    with container.api_client.override(mock.Mock()):\r\n        main()  # <-- overridden dependency is injected automatically\r\n```\r\n\r\n[More samples](https://github.com/ets-labs/python-dependency-injector/tree/master/examples)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. **Fast**. Implemented in Cython.\r\n2. **Documentation**. Has up-to-date [documentation](http://python-dependency-injector.ets-labs.org/index.html) and [tutorials](http://python-dependency-injector.ets-labs.org/tutorials/index.html).\r\n3. **300 000 downloads monthly**. https://pepy.tech/project/dependency-injector\r\n4. **First positions in Google search results for \"python dependency injection\" query**.  https://www.google.com/search?q=python+dependency+injection\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f868fa88c0a76e0a4eb2f",
    "number": 1589,
    "body": "## What is this Python project?\r\n\r\nPrefect is a workflow orchestration framework that takes care of a lot of the \"negative engineering\" aspects of building and scheduling workflows:\r\n- intuitive scheduling interface\r\n- first-class caching\r\n- state management of tasks\r\n- parametrization of workflows\r\n- ability to scale on most platforms\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Pythonic interface\r\n- can actually handle scaling (first-class Dask integrations too!)\r\n- dynamic pipelines (parameters, mapping, looping, etc.)\r\n- lightweight, easy-to-use and flexible\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-prefect",
    "is_a_fork": true,
    "comments": [
      "+1 great!"
    ],
    "commit_messages": [
      "Merge pull request #1589 from karmijo/add-prefect\n\nAdd Prefect"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8690a88c0a76e0a4eb30",
    "number": 1588,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\nA GPU accelerated Python GUI framework. Extremely easy to use.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n* GPU accelerated\r\n* Functional (Not OOP)\r\n* Mostly for developer tools.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "You forgot the change the text in the link.",
      "Sorry about that.",
      "Why has this not been pulled?"
    ],
    "commit_messages": [
      "Merge pull request #1588 from hoffstadt/patch-1\n\nAdded DearPyGui"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8690a88c0a76e0a4eb31",
    "number": 1586,
    "body": "## What is this Python project?\r\n\r\nAn automated decryption tool that intelligently decrypts any encrypted data. Using a custom AI, will analyze and identify the type of encryption and then proceeds to decrypt the data in seconds.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere aren't many automatic decryption tools aside from online tools. Ciphey is designed to be a minimalist command-line tool and does not require almost anything for identifying and cracking encryption aside from the data itself.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Ciphey is a really remarkable tool. Definitely should go on the list."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8691a88c0a76e0a4eb32",
    "number": 1585,
    "body": "This is not a new link of the list.\r\nNoticed the list is not sorted so fixed it and added to CI to be sorted on the docs website.\r\n",
    "head_branch": "sort-readme",
    "is_a_fork": true,
    "comments": [
      "> This is not a new link of the list.\n> \n> Noticed the list is not sorted so fixed it and added to CI to be sorted on the docs website.\n> \n> \n\n",
      "> > This is not a new link of the list.\n> > \n> > Noticed the list is not sorted so fixed it and added to CI to be sorted on the docs website.\n> > \n> > \n> \n> \n\n##- "
    ],
    "commit_messages": [
      "Merge pull request #1585 from look4regev/sort-readme\n\nSort readme and add to docs build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8692a88c0a76e0a4eb33",
    "number": 1582,
    "body": "Makes messaging between distributed and microservice applications easier.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8693a88c0a76e0a4eb34",
    "number": 1581,
    "body": "## What is this Python project?\r\n\r\nPattern is a web mining module for Python. It has tools for:\r\n\r\n1. Data Mining: web services (Google, Twitter, Wikipedia), web crawler, HTML DOM parser\r\n2. Natural Language Processing: part-of-speech taggers, n-gram search, sentiment analysis, WordNet\r\n3. Machine Learning: vector space model, clustering, classification (KNN, SVM, Perceptron)\r\n4. Network Analysis: graph centrality and visualization.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is well documented, thoroughly tested with 350+ unit tests and comes bundled with 50+ examples.\r\n\r\nQuite helpful.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hello, as this PR has been approved for quite a long time. When would it be merged?",
      "Hello, as this PR has been approved for nearly a year. When would it be merged?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8694a88c0a76e0a4eb35",
    "number": 1580,
    "body": "## What is this Python project?\r\n\r\n[PyOxidizer](https://github.com/indygreg/PyOxidizer)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPyOxidizer is capable of producing a single file executable, but also exposes its lower level functionality for embedding self-contained Python interpreters as a tool and software library. PyOxidizer can serve as a bridge between these two languages. PyOxidizer can be used to easily add a Python interpreter to any Rust project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Can someone help me merge this PR?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8695a88c0a76e0a4eb36",
    "number": 1579,
    "body": "**note:** This is a repost of https://github.com/vinta/awesome-python/pull/1101 -- that PR had 21 +1s, but was autoclosed for being stale.\r\n\r\n[pyvips](https://github.com/libvips/pyvips) is a binding for the [libvips image processing library](https://libvips.github.io/libvips/). It's fast and only needs a little memory. \r\n\r\nFor example, on this benchmark:\r\n\r\nhttps://github.com/libvips/libvips/wiki/Speed-and-memory-use\r\n\r\nIt's 5x faster than ImageMagick and needs 10x less memory.\r\n\r\npyvips works on all python versions on all platforms, is LGPL, can be [simply installed with pip](https://pypi.org/project/pyvips/), has [complete documentation](https://libvips.github.io/pyvips), has a large test suite, and has no known memory leaks.",
    "head_branch": "add-pyvips",
    "is_a_fork": true,
    "comments": [
      "Print (\"trying to learn\")"
    ],
    "commit_messages": [
      "Merge pull request #1579 from jcupitt/add-pyvips\n\nAdd pyvips"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8695a88c0a76e0a4eb37",
    "number": 1578,
    "body": "## What is this Python project?\r\n\r\nKite is a plugin extension for autocomplete to assist with faster code development. Its engine is powered by machine learning and it offers a code a co-pilot webapp for real-time documentation on built-in and commonly used libraries.  \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIts recommendation for code autocomplete is usually faster and more accurate than jedi or ms-python in vscode.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8696a88c0a76e0a4eb38",
    "number": 1577,
    "body": "## What is this project?\r\n\r\nOptic automatically documents and tests your APIs. This project integrates seamlessly with Python projects like Flask to build documentation for your project\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOptic documents changes in behavior — not code — and with just one command, Optic gives you the power of a dedicated API team. Optic automatically documents changes, tests every endpoint, and gives you valuable insight into how your APIs are being used.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8697a88c0a76e0a4eb39",
    "number": 1576,
    "body": "## What is this Python project?\r\n\r\nOriginally proposed back in 2015 with #321, the project is much more mature now.\r\n\r\nI will crib some from the [why](https://www.structlog.org/en/stable/why.html) page for `structlog` which summarizes (a) why structured logging is good and (b) why `structlog` is good at structured logging.\r\n\r\n> Structured logging means that you don’t write hard-to-parse and hard-to-keep-consistent prose in your logs but that you log events that happen in a context instead...\r\n\r\n`structlog` provides a handy interface for defining a structure for logging and then emitting log messages. It can also act as a handler for the built in `logging` module. It can handle encoding, capture user-defined elements of a call stack to log a context, pretty-print (including colorized) log messages for local development, format timestamps, filter log messages by level, and many more....\r\n\r\nTesting mechanisms are provided that hook neatly into `pytest`.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nStructured logging! [Here](https://www.youtube.com/watch?v=Y5eyEgyHLLo) is a video about why structured logging is good, and why `structlog` is good at it.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "structlog",
    "is_a_fork": true,
    "comments": [
      "cc @vaal- if you are still there :)"
    ],
    "commit_messages": [
      "Merge pull request #1576 from rpdelaney/structlog\n\nAdd structlog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8698a88c0a76e0a4eb3a",
    "number": 1575,
    "body": "## What is Arcade?\r\n\r\nThe arcade library is a modern Python framework for crafting games with compelling graphics and sound. Object-oriented and built for Python 3.6 and up, arcade provides the programmer with a modern set of tools for crafting great Python game experiences.\r\n\r\n## What's the difference between Arcade and Pygame?\r\n\r\nRuns on top of OpenGL 3+ and Pyglet, rather than the old SDL1 library. (Currently PyGame is in the process of moving to SDL2.)\r\nHas built-in physics engine for platformers.\r\nSupports animated sprites.\r\nEncourages separation of logic and display code. Pygame tends to put both into the same game loop.\r\nWith the use of sprite lists, uses the acceleration of the graphics card to improve performance.\r\nSound support: Pygame uses the old, unsupported Avbin library. Arcade uses SoLoud. Supports panning and volume.\r\n\r\n\r\nHome Page of Arcade - https://arcade.academy/index.html\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1575 from thePrankster/master\n\nAdded Arcade"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8699a88c0a76e0a4eb3b",
    "number": 1574,
    "body": "## What is this Python project?\r\n\r\nQ# language (similar to Python, C#, and F#) libraries for the Quantum Development Kit\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe Quantum Development Kit is provided by Microsoft with several libraries to make it easier to develop quantum applications in Q# and machine learning.\r\n\r\nDocumentation - https://docs.microsoft.com/en-us/quantum/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "@codingCapricorn Wow, this is cool! However, it isn't really about Python I suppose?",
      "> @codingCapricorn Wow, it's cool! However, it isn't really about Python I suppose?\r\n\r\nWell not exactly.... but ,yes.....we can do machine learning stuff using quantum technology and Q# language which is familiar with python."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f869aa88c0a76e0a4eb3c",
    "number": 1573,
    "body": "## What is this Python project?\r\n\r\nCartopy - a cartographic python library with matplotlib support\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCartopy is a Python package designed for geospatial data processing in order to produce maps and other geospatial data analyses.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1573 from codingCapricorn/patch-1\n\nAdd Cartopy - Data Visualization"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f869aa88c0a76e0a4eb3d",
    "number": 1572,
    "body": "## What is this Python project?\r\n\r\nThis is a continuous test runner plugin for PyCharm. \r\n\r\nIt tracks which tests are affected by code change and automatically runs only impacted tests. (Similar to NCrunch for .Net)\r\n\r\n![image](https://user-images.githubusercontent.com/609801/87080935-32d18780-c231-11ea-8181-4e0732ebdf6e.png)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhat covers what - Opposite to simple line coverage, PyCrunch tracks and records coverage for each test individually.\r\n\r\nCoverage markers are added to the editor gutter. Clicking on the coverage marker to overview the tests that are potentially failing on the current line.\r\n\r\nEngine keeps track of dependencies between code and tests - this allows to run only impacted tests.\r\n\r\nCan be used as a drop-in replacement for Django test command. (Also it will not recreate database to further speed up test execution)\r\n\r\nFaster execution - tests will run using multiple processes by default.\r\n\r\nNo need to switch context during writing code. Tests will rerun after saving file and shows coverage immediately\r\n\r\nMore info and documentation: https://pycrunch.com/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.",
    "head_branch": "added-pycrunch-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f869ba88c0a76e0a4eb3e",
    "number": 1571,
    "body": "## What is this Python project?\r\n\r\nPyTrace is a Record and Replay debugging suite. \r\n\r\nIt records code execution and variable values at any point of execution. This allows alternative debugging experience, with the ability to step back in the code.\r\n\r\n![PyTrace UI](https://hsto.org/webt/vp/im/xd/vpimxdvufmcmirahmktwpii79vw.png)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUsually, profilers only show how long the method run was, without the ability to see actual state of execution.\r\n\r\nAlso, when debugging unknown or complex code, it is hard to understand the sequence of events and state of variables in the outer scope. \r\n\r\nIf by some mistake you miss step into some function, you will need to run debugging session again. Using pytrace will allow you to scroll back in time and repeat debugging steps without the need to restart entire thing again. \r\n\r\nThis tool greatly assists me in regular debugging as it is possible to step back and navigate to the interesting functions via call graph.\r\n\r\nAs a side effect, graph provides hints regarding the performance implication of each method executed.\r\n\r\nCall graph is also using color coding, so each time you record session, files and methods will stay the same color.\r\n\r\n[Interactive Demo](https://app.pytrace.com/?open=v0.1-interactive-demo)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "added-pytrace",
    "is_a_fork": true,
    "comments": [
      "@gleb-sevruk - I upvoted your submission but I have also noticed that the PR does not apply cleanly anymore. Just letting you know."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f869ca88c0a76e0a4eb3f",
    "number": 1570,
    "body": "## What is this Python project?\r\n\r\na Python library for pulling data out of HTML and XML files. It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-BeautifulSoup",
    "is_a_fork": true,
    "comments": [
      "They are already on the list.\r\nhttps://github.com/vinta/awesome-python#html-manipulation"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f869da88c0a76e0a4eb40",
    "number": 1569,
    "body": "add kapre that is Keras Audio Preprocessors\r\n\r\n## What is this Python project?\r\nkapre is Keras Audio Preprocessors\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Keras Audio Preprocessors\r\n- Use STFT, Melspectrogram and etc.. in kears model\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1569 from AhnJG/master\n\nUpdate README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f869ea88c0a76e0a4eb41",
    "number": 1568,
    "body": "## What is this Python project?\r\nlibrosa is Python library for audio and music analysis\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- It provides the building blocks necessary to create music information retrieval systems.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1568 from AhnJG/master\n\nAdd librosa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f869ea88c0a76e0a4eb42",
    "number": 1567,
    "body": "ucache is a lightweight and efficient caching library for python.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f869fa88c0a76e0a4eb43",
    "number": 1566,
    "body": "In-memory caching library.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a0a88c0a76e0a4eb44",
    "number": 1565,
    "body": "## What is this Python project?\r\n\r\nAllows to use full features telegram client in terminal: view files, notifications, record and play voice msgs...\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no working telegram client in terminal.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Approve",
      "Ok\r\n\r\n\r\nOn Tue, Nov 19, 2024, 13:27 Nameless ***@***.***> wrote:\r\n\r\n> Closed #1565 <https://github.com/vinta/awesome-python/pull/1565>.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/vinta/awesome-python/pull/1565#event-15344888513>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BMQ7ESXPWXQUAQQNXOFN75D2BLTXXAVCNFSM6AAAAABSBNGSSKVHI2DSMVQWIX3LMV45UABCJFZXG5LFIV3GK3TUJZXXI2LGNFRWC5DJN5XDWMJVGM2DIOBYHA2TCMY>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a1a88c0a76e0a4eb45",
    "number": 1564,
    "body": "## What is this Python project?\r\n\r\nA wrapper to integrate MeiliSearch open-source search engine in your python projects. Easy to integrate search engine, open-source, customizable, free and self-hosted. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Free relevant instant search, with almost no config and typo tolerance\r\n- Official repository, regularly maintained/updated\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_meilisearch_python",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a2a88c0a76e0a4eb46",
    "number": 1563,
    "body": "## What is this Python project?\r\n\r\nIt's a simple, yet highly customizable python package to generate professional keys.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo similar project currently exists in the list.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Review needed.",
      " @Sahith02 Please take a look at [the contribution guidelines](https://github.com/vinta/awesome-python/blob/master/CONTRIBUTING.md)  first.\r\n> Just a gentle reminder: **Try not to submit your own project.** Instead, wait for someone finds it useful and submits it for you."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a2a88c0a76e0a4eb47",
    "number": 1562,
    "body": "## What is this Python project?\r\n\r\nAlpha matting describes the problem of separating the objects in the foreground from the background of an image given only a rough sketch. We introduce the [PyMatting](https://github.com/pymatting/pymatting) library for Python which implements various approaches to solve the alpha matting problem and to perform foreground extraction.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPyMatting is easy to use and implemented very efficiently with minimal dependencies. It provides an easy way to compare multiple alpha matting and foreground estimation methods.\r\n\r\nEdit: Add link to repository.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1562 from tuelwer/master\n\nAdd PyMatting"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a3a88c0a76e0a4eb48",
    "number": 1561,
    "body": "## What is this Python project?\r\n\r\nA CLI tool and a python library to develop infrastructure automation code. `Pyinfra` usage range from running ad-hoc commands on a bunch of servers to maintaining a massive cloud service deploys. \r\n\r\nOfficial docs: https://docs.pyinfra.com/en/latest/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n* Support Linux and Windows Hosts.\r\n* Provide fact gathering about target hosts.\r\n* Allow using different types of connectors (ssh, vagrant, docker, chroot, ...)\r\n* Designed with performance in mind\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add-pyinfa",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1561 from FooBarQuaxx/add-pyinfa\n\nadded pyinfra to README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a4a88c0a76e0a4eb49",
    "number": 1560,
    "body": "## What is this Python project?\r\n\r\nMockito is a Python implementation of the Java Mockito mock / spying framework.  Mockito makes it very easy to write powerful mocks in a readable concise way. \r\n\r\nhttps://github.com/kaste/mockito-python\r\nhttps://mockito-python.readthedocs.io/en/latest/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nMockito implements the Mock definition \"language\" introduced by the Java Library.  It allows precisely injecting mocks in objects as needed rather than having to supply fully dedicated mock objects.  Mocks can be configured with custom behavior based on inputs through argument matchers. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "add_mockito",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a5a88c0a76e0a4eb4a",
    "number": 1559,
    "body": "## What is this Python project?\r\n\r\nFil is a memory profiler aimed at data batch processing applications.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Fil figures out _peak_ memory usage, and then tells you which function stacks were responsible for allocating it.\r\n2. Fil can dump the source of allocations when your program crashes due to lack of memory.\r\n3. Fil can track _any_ allocation made via standard C memory allocation APIs, not just Python-native code.\r\n4. You get lovely flamegraphs, so you can visually see exactly where memory came from (https://pythonspeed.com/products/filmemoryprofiler/memory-graph.svg)\r\n\r\nCompared to other tools:\r\n\r\n* memory-profiler tells you how much a line of code has allocated, and that's it. So you need to manually apply it to each function that gets called, and it can be very easy to miss that one place where memory spiked by 1GB and then immediately dropped, because it's on a single line.\r\n* tracemalloc can't handle non-Python memory allocations.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a6a88c0a76e0a4eb4b",
    "number": 1558,
    "body": "## What is this Python project?\r\n\r\nNox is a tool for automating build and testing in multiple Python environments.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimilar to tox, but uses pure Python configuration files instead of a custom file format. Includes auto-translator from tox files to nox files.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a7a88c0a76e0a4eb4c",
    "number": 1557,
    "body": "Project home site moved to github.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1557 from Tupteq/master\n\nUpdated pyglet site link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a7a88c0a76e0a4eb4d",
    "number": 1556,
    "body": "## What is this Python project?\r\nAn extension for Flask that adds support for quickly building REST APIs. Its a fork of Flask-RESTPlus that is actively maintained by the community. It offers fast, easy and documented API development with Flask\r\n\r\n## What's the difference between this Python project and similar ones?\r\n - It provides a coherent collection of decorators and tools to describe your API and expose its documentation properly (using Swagger).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a8a88c0a76e0a4eb4e",
    "number": 1555,
    "body": "## What is this Python project?\r\n\r\nSchemathesis is a tool for testing web applications built with Open API / Swagger specifications.\r\n\r\nIt reads the application schema, generates, and runs test cases which will ensure that your application is compliant with its schema.\r\n\r\nThe application under test could be written in any language, the only thing you need is a valid API schema in a supported format.\r\n\r\nBased on [Hypothesis](https://github.com/HypothesisWorks/hypothesis)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe project was inspired by [swagger-conformance](https://github.com/olipratt/swagger-conformance), which didn't receive any updates since June 2018. Notable differences:\r\n\r\n- Support for Open API 3.0 (including Open API links);\r\n- More feature complete support for Open API 2.0 / 3.0 specs due to usage of [hypothesis-jsonschema](https://github.com/Zac-HD/hypothesis-jsonschema) under the hood;\r\n- Interactive, pytest-style command-line interface with built-in support for authorization, Hypothesis configuration, endpoints selection, parallel execution, and many other things;\r\n- flexible control over checks to be executed;\r\n- automatic testing of explicit examples defined in the tested schema;\r\n- ability to register custom strategies for string formats;\r\n- Customization via hooks;\r\n- Storing network logs in VCR-compatible format;\r\n- lazy schemas loading support for simpler testing of apps built with tools like [apispec](https://github.com/marshmallow-code/apispec)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-schemathesis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1555 from Stranger6667/add-schemathesis\n\nAdd Schemathesis"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86a9a88c0a76e0a4eb4f",
    "number": 1554,
    "body": "#499   What is this Python project?\r\n\r\nThe powerful python cms wrote by django and python\r\nsample site: boshra.org or faral.tech\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nForm creator\r\nnew context processor \r\nnew stream fields \r\n\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "https://djangopackages.org/grids/g/cms/\r\nhttps://www.linkedin.com/company/faralco/\r\nhttps://www.wappalyzer.com/technologies/cms/farapy",
      "Sorry @Faral-Ghaemi, this list only collects open source projects.",
      "https://github.com/Faral-Ghaemi/FaraPy"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86aaa88c0a76e0a4eb50",
    "number": 1552,
    "body": "## What is this Python project?\r\n\r\nIt's a new kind of progress bar, with real-time throughput, eta and very cool animations!\r\n\r\nIt has now more than 600⭐️, take a look: https://github.com/rsalmei/alive-progress\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project has the following features:\r\n\r\n- a cool live spinner, which makes it clear the process did not hang and your terminal/connection is healthy;\r\n- a visual feedback of the current speed/throughput, as the spinner runs faster or slower according to the actual processing speed;\r\n- an efficient multi-threaded bar, which updates itself at a fraction of the actual speed (1,000,000 iterations per second equates to roughly 60fps refresh rate) to keep CPU usage low and avoid terminal spamming; (📌 new: you can now calibrate this!)\r\n- an expected time of arrival (ETA), that shows the remaining processing time in a friendly way, not anything like eta: 1584s, it will nicely show eta: 0:26:24 as you would expect (but anything less than a minute is indeed eta: 42s);\r\n- a print() hook, which allows print statements in the midst of an alive-bar context without any hassle, automatically cleaning the screen, and even enriching with the current position when it occurred;\r\n- after your processing has finished, a nice receipt is printed with the statistics of that run, including the elapsed time and observed throughput;\r\n- it tracks the actual count to detect under and overflows, so it will look different if you send in less or more than expected;\r\n- it automatically detects if there's an allocated tty, and if there isn't, only the final receipt is printed, so you can safely include the alive-bar in any code, and rest assure your log file won't get 60fps progress lines;\r\n- you can pause the alive-bar! I think that's an unprecedented feature for a progress bar! It's incredible to be able to manually operate on some items while inside a running progress bar context, and get the bar back like it had never stopped whenever you want;\r\n- it is customizable, with a growing smorgasbord of different bar and spinner styles, as well as several factories to easily generate yours!\r\n\r\n![alive-progress](https://raw.githubusercontent.com/rsalmei/alive-progress/master/img/alive-demo.gif)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "rsa-add-alive-progress",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1552 from rsalmei/rsa-add-alive-progress\n\nAdd alive-progress"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86aba88c0a76e0a4eb51",
    "number": 1551,
    "body": "## What is this Python project?\r\n\r\nMiguel Grinberg is the author of book Flask Web Development by O'REILLY. His blog is very informative for both beginners as well as working professionals.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nVery descriptive blog and it covers much complicated but useful parts of various libraries.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86aba88c0a76e0a4eb52",
    "number": 1550,
    "body": "## What is this Python project?\r\n\r\nPython Testing Crawler is a crawler for automated functional testing of a web application.\r\n\r\nCrawling a server-side-rendered web application is a low cost way to get low quality test coverage of your JavaScript-light web application.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike e.g. Scrapy, this crawler is exclusively for use in automated tests, so it\r\n\r\n1. works with existing web framework test clients, and is intended to be a drop-in\r\n2. can be configured for what it accepts or considers an error\r\n3. can collect errors",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86aca88c0a76e0a4eb53",
    "number": 1549,
    "body": "## What is this Python project?\r\n\r\n[Hydra](https://hydra.cc) is the configuration management framework for Python. \r\n\r\n> The main feature is the ability to dynamically create a hierarchical configuration by composition and override it through config files and the command line.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* flexible configuration abilities;\r\n* improved syntax;\r\n* built-in command-line overriding;\r\n* hierarchical configuration;\r\n* more in [repo](https://github.com/facebookresearch/hydra) or [docs](https://hydra.cc).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "adding-hydra-configuration-library",
    "is_a_fork": true,
    "comments": [
      "Hi, I am the author of Hydra.\r\nThanks for adding it!\r\n\r\nA few comments:\r\nI would classify [OmegaConf](https://github.com/omry/omegaconf) as a configuration library, it is  powering Hydra.\r\nHydra itself is much harder to classify:\r\nIt can fit in:\r\n- Command line interface development: It is an alternative to click or argparse\r\n- Configuration: It is an alternative to configuration parsing libraries\r\n- Science: While general purpose, it it geared toward science and especially machine learning through plugins. A few example plugins in the recent release are Submitit (launch jobs to a SLURM cluster), Ax and Nevergrad plugins (Optimize any Hydra application).\r\n\r\nIf I had to pin Hydra under a single category, It would probably be \"Configuration platform\", but it's much more.\r\n",
      "> \r\n> \r\n> Hi, I am the author of Hydra.\r\n> Thanks for adding it!\r\n> \r\n> A few comments:\r\n> I would classify [OmegaConf](https://github.com/omry/omegaconf) as a configuration library, it is powering Hydra.\r\n> Hydra itself is much harder to classify:\r\n> It can fit in:\r\n> \r\n>     * Command line interface development: It is an alternative to click or argparse\r\n> \r\n>     * Configuration: It is an alternative to configuration parsing libraries\r\n> \r\n>     * Science: While general purpose, it it geared toward science and especially machine learning through plugins. A few example plugins in the recent release are Submitit (launch jobs to a SLURM cluster), Ax and Nevergrad plugins (Optimize any Hydra application).\r\n> \r\n> \r\n> If I had to pin Hydra under a single category, It would probably be \"Configuration platform\", but it's much more.\r\n\r\n@omry thanks for your great job, Hydra saves a lot of time during my common workflow."
    ],
    "commit_messages": [
      "Merge pull request #1549 from nikitabarskov/adding-hydra-configuration-library\n\nAdding hydra library"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86ada88c0a76e0a4eb54",
    "number": 1548,
    "body": "This adds the lkpy library.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86aea88c0a76e0a4eb55",
    "number": 1547,
    "body": "\r\n## What is this Python project?\r\n\r\nA Python sampling library for graph-structured data - subsampling for machine learning.\r\n\r\n- Node sampling techniques.\r\n- Edge sampling techniques.\r\n- Exploration sampling techniques.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no similar project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta Could you take a look?",
      "@vinta @53jk1 Hmm? Anyone?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86afa88c0a76e0a4eb56",
    "number": 1545,
    "body": "Folium is an Interactive map visualization library for python. I have added it to Data visualization section",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86afa88c0a76e0a4eb57",
    "number": 1544,
    "body": "## What is this Python project?\r\n\r\nA set of utilities which makes it easier to debug Python code. Pydebug respects Django's config. It checks if the decorator is running within a Django project and DEBUG is set to True. If it's set to False, it simply returns the function.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Allows the debug decorators to be deployed in a Django application\r\n- No need to import pdb on every function, as the decorator takes care of it\r\n- Support for `pdb` and `ipdb` if installed.\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "feat/pydebug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b0a88c0a76e0a4eb58",
    "number": 1543,
    "body": "## What is this Python project?\r\n\r\n[PyOpenAL](https://github.com/Zuzu-Typ/PyOpenAL) for audio playback. It has a lot more features than options like [simpleaudio](https://simpleaudio.readthedocs.io/).\r\n\r\nPyOpenAL includes many great features like:\r\n- [x] Play\r\n- [x] Stop\r\n- [x] Pause\r\n- [x] Rewind\r\n- [x] Scrubbing\r\n- [x] Volume control\r\n- [x] + More!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to [simpleaudio](https://simpleaudio.readthedocs.io) it can play more audio files and has full audio transport control.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b1a88c0a76e0a4eb59",
    "number": 1542,
    "body": "## What is this Python project?\r\n\r\n#### Added link\r\n\r\n- [law](https://github.com/riga/law) - Large-scale luigi workflows on distributed resources with remote storage and container support.\r\n\r\n\r\n#### Description\r\n\r\nThe Luigi Analysis Workflow (law) package is a tool to build complex and large-scale task workflows as found is many scientific applications. It is build on top of [luigi](https://github.com/spotify/luigi) and adds abstractions for run locations, storage locations and software environments. Law strictly disentangles these building blocks and ensures they remain interchangeable and resource-opportunistic.\r\n\r\nMore info can be found at [*J. Phys.: Conf. Ser.* **898** (2017) 072047](https://iopscience.iop.org/article/10.1088/1742-6596/898/7/072047). Law was and is used for several large-scale analysis in the context of high-energy physics research (CERN) and has the potential to serve many applications outside this community.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to other tools such as luigi itself, this key features of this project are:\r\n\r\n- Rich CLI with auto-completion and interactive status and dependency inspection.\r\n- Remote storage of results with automatic retries and local caching. Supports\r\nWebDAV, HTTP, Dropbox, SFTP, S3 and all protocols within the [Worldwide LHC Computing Grid](https://wlcg.web.cern.ch) (srm, xrootd, rfio, dcap, gsiftp, ...)\r\n- Automatic submission of jobs to batch systems from within tasks with error detection and resubmission. Supports HTCondor, LSF, gLite, ARC, Slurm.\r\n- Environment sandboxing configurable on task level. Supports Docker, Singularity, Sub-Shells.\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it or vote for it by adding a 👍 to it, and usually, the maintainer will merge it when votes reach 20.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b2a88c0a76e0a4eb5a",
    "number": 1540,
    "body": "## What is this Python project?\r\n\r\nextend the list of FFI: wrap C++ code into python module\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIn the original list of FFI (Foreign language interface), it is not complete, `pybind11` is the most popular tool/library to wrap C++ code to Python, it is not listed. `Cppyy` is a emerging tool that can directly JIT interpret C++ code as python module. Finally, there is a `python_wrap` project that compare and demonstrate different method and FFI for python.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b3a88c0a76e0a4eb5b",
    "number": 1539,
    "body": "## What is this Python project?\r\n\r\npywasm is a WebAssembly interpreter written in pure Python, It is also one of the first projects to try to implement wasm virtual machine using python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- In pure Python.\r\n- Browser-like APIs.\r\n- Passed all Webassembly testsuits.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "addpywasm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b4a88c0a76e0a4eb5c",
    "number": 1538,
    "body": "## What is this Python project?\r\n\r\n* python-environment\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* There was no environment such as pipenv in this repo.\r\n* There was no extensions info of python-environment in this repo.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b5a88c0a76e0a4eb5d",
    "number": 1536,
    "body": "## What is this Python project?\r\n\r\nPrinty is a **light** and **cross-platform** library that extends the functionalities of the built-in print() and input(). Adding some basic color and format styles to print() and validation to input()\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Easy to use API based on flags instead of color and formats names\r\n* Applies global format or inline format\r\n* Read directly from a file\r\n* Validates user input according to a specific type and returns the value ready to use with that type: 'int', 'bool', 'float', 'str'\r\n* Attaching a list of options to be selected by final users\r\n* More in the [repo](https://github.com/edraobdu/printy)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b5a88c0a76e0a4eb5e",
    "number": 1534,
    "body": "## What is this Python project?\r\n\r\nThis allows the developer to generate image urls that are served by the Imgix CDN, which allows the images to be faster and responsive by default.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt works with the imgix api, and it does cool stuff, like generate srcsets!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b6a88c0a76e0a4eb5f",
    "number": 1532,
    "body": "## What is this Python project?\r\n\r\nAn open-source Python package that extends the power of Pandas library to AWS connecting DataFrames and AWS data related services (Amazon Redshift, AWS Glue, Amazon Athena, Amazon EMR, etc).\r\n\r\nBuilt on top of other open-source projects like Pandas, Apache Arrow, Boto3, s3fs, SQLAlchemy, Psycopg2 and PyMySQL, it offers abstracted functions to execute usual ETL tasks like load/unload data from Data Lakes, Data Warehouses and Databases.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe first one.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1532 from igorborgest/patch-1\n\nAdd aws-data-wrangler"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b7a88c0a76e0a4eb60",
    "number": 1531,
    "body": "## What is this Python project?\r\n\r\nA simple database interface to Microsoft SQL Server.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nJust updating the link since the old link is broken.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1531 from MMeffert/patch-1\n\nFixed broken link for pymssql"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b8a88c0a76e0a4eb61",
    "number": 1530,
    "body": "Hi @vinta I appreciate you merged iredis, but it seems the link with litecli is switched. Merge this PR will resolve this.\r\n\r\nfixup https://github.com/vinta/awesome-python/commit/30ddeab24d5009217b6092ddf0d798828062808e",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1530 from laixintao/patch-1\n\nFix iredis link and litecli link."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b9a88c0a76e0a4eb62",
    "number": 1529,
    "body": "## What is this Python project?\r\n\r\n[RepTate](http://github.com/jorge-ramirez-upm/RepTate) (Rheology of Entangled Polymers: Toolkit for Analysis of Theory & Experiment) is a software package for viewing, exchanging and analysing rheological data. Several of the classical and latest theories of polymer dynamics are included in RepTate, so they can be tested and fitted to the experimental data. The main idea of RepTate is to create a platform which makes comparing theory and experiment much easier than ever before. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't think there is any similar package to RepTate. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "RepTate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86b9a88c0a76e0a4eb63",
    "number": 1528,
    "body": "## What is this Python project?\r\n\r\n[PyArmor](https://github.com/dashingsoft/pyarmor) is a command line tool used to obfuscate python scripts, bind obfuscated scripts to fixed machine or expire obfuscated scripts.\r\n\r\nThe goal of PyArmor is to make Python applied to commercial application easily.\r\n\r\nPyArmor is well [Documentation](https://pyarmor.readthedocs.io/en/latest/)\r\n\r\nThere is also a web-ui package [pyarmor-webui](https://github.com/dashingsoft/pyarmor-webui)\r\n\r\nPyArmor is trusted by many corporations in different countries, for examples, IBM, GE, NEC, Panasonic, Fujitsu, Tencent...   \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Seamless Replacement\r\n  The obfuscated script is a normal python script. With an extra runtime package `pytransform`, the plain Python scripts can be replaced with obfuscated ones seamlessly\r\n\r\n* Runtime Obfuscation\r\n  The byte code of each code object will be obfuscated as soon as code object completed execution, and f_locals of frame is cleared at the same time\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1528 from dashingsoft/master\n\nAdd pyarmor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86baa88c0a76e0a4eb64",
    "number": 1527,
    "body": "## What is this Python project?\r\n\r\n[Real Python](https://realpython.com/) is a repository of free and in-depth Python tutorials created by a team of professional Python developers around the world. \r\n\r\nWe recently launched a new [Python podcast](https://realpython.com/podcasts/rpp/) with community interviews.\r\n\r\nThis PR adds a link to the podcast in the resources section.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1527 from dbader/patch-1\n\nAdd Real Python Podcast"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86bba88c0a76e0a4eb65",
    "number": 1526,
    "body": "Update deprecated repo to the new one.\r\n\r\n\"[Deprecated] This library has been renamed to \"Stanza\". Latest development at: https://github.com/stanfordnlp/stanza\"\r\n",
    "head_branch": "update-stanfordnlp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1526 from iacopy/update-stanfordnlp\n\nUpdate stanfordnlp (repo moved)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86bca88c0a76e0a4eb66",
    "number": 1525,
    "body": "## What is this Python project?\r\n\r\n[dynamic-conf](https://github.com/jnoortheen/dynamic-conf) is very simple script that I find very useful and created after getting frustrated with python-decouple. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- it supports both `.py` and `.env` config files\r\n- the developer has to define the variables under the class to start using it. i.e. no disparity between `.env` and `.env.template`\r\n- cli to create `.env` or `env.py` file during ci or docker image builds. \r\n- automatic value conversion based on type annotation\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "1f3d73ef2fdc77ac34b78390097f1341e50e7612"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86bda88c0a76e0a4eb67",
    "number": 1524,
    "body": "Adds a single one-line about the database module pyDatalog. This module can run logic queries on databases or Python objects, and use logic clauses to define python classes. It displays the final output in a well-formatted and tabulated form.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86bda88c0a76e0a4eb68",
    "number": 1523,
    "body": "## What is this Python project?\r\n\r\nA single Python script that is capable of installing Python packages into environment, primarily designed for containerized Python applications, but not limited to them.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nmicropipenv supports all the well-known locking formats as used by pip-tools, Poetry or Pipenv. It is designed to be a single Python script with one optional dependency that is installing dependencies out of lock files without a need to install or distribute Poetry or Pipenv. Suitable for containerized Python applications where the overall image size and shipped software in the container image matters.\r\n\r\nWhy should I use micropipenv?\r\n\r\n* I would like to have a tool that \"rules them all\" - one lightweight tool to support all Python dependency lock file managers (pip-tools, Poetry, Pipenv) and lets users decide what they want to use when deploying Python applications in containerized environments (e.g. Kubernetes, ...)\r\n\r\n* I would like to have containerized Python applications as small as possible with minimum software shipped and required to build and run a Python application in production.\r\n\r\n* I would like to convert files produced by Pipenv/Poetry to a pip-tools compatible output.\r\nI don't want to install Pipenv/Poetry, but I would like to run a project that uses Pipenv/Poetry for dependency management (e.g. restricted environments).\r\n\r\n* My Pipenv installation is broken and Pipenv upstream did not issue any new Pipenv release.\r\n\r\n* I would like to deploy my application into a production environment and my application dependencies are managed by Pipenv/Poetry (dependencies are already resolved), but I don't want to run Pipenv/Poetry in production.\r\n\r\nSee [README](https://github.com/thoth-station/micropipenv) file or project description on [PyPI](https://pypi.org/project/micropipenv) for more enumerated comparison and key features.",
    "head_branch": "micropipenv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86bea88c0a76e0a4eb69",
    "number": 1522,
    "body": "## What is this Python project?\r\n\r\nDownloads courses from udemy. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIs the only one i know to download from udemy\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86bfa88c0a76e0a4eb6a",
    "number": 1521,
    "body": "GitHub actions offers a more integrated CI/CD service for the Mkdocs site deployment.\r\n\r\nNote: You will need to set your personal access token under the repository settings.",
    "head_branch": "github-actions",
    "is_a_fork": true,
    "comments": [
      "Cool! Thanks! I will try it out later."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c0a88c0a76e0a4eb6b",
    "number": 1518,
    "body": "Current url goest to \"This page does  not exist yet.\" PR with fix. ",
    "head_branch": "fix_profig_url",
    "is_a_fork": true,
    "comments": [
      "@vinta, pls review url fix",
      "hey @xnuinside I forked this repo and added your fix. https://github.com/DoronCohen/awesome-python. thanks"
    ],
    "commit_messages": [
      "Merge pull request #1518 from xnuinside/fix_profig_url\n\nProfig: fix url to documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c1a88c0a76e0a4eb6c",
    "number": 1517,
    "body": "## What is this Python project?\r\n\r\nThis package allows for simple A/B testing of Django projects using Google Optimize.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar projects for Google Optimize.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-django-google-optimize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c1a88c0a76e0a4eb6d",
    "number": 1516,
    "body": "## What is this Python project?\r\n\r\n[AkShare](https://github.com/jindaxiang/akshare) is an **elegant and simple financial data** interface library for Python, built for human beings! It can help people get financial data more easily and just one line code to get the data.\r\n\r\n1. [AkShare](https://github.com/jindaxiang/akshare) has been downloaded for 190,000 times from now and get 1000 + stars, now it is on the GitHub Treading Python Item for 4 days.\r\n\r\n2. [AkShare](https://github.com/jindaxiang/akshare) hava a very detailed docs: https://akshare.readthedocs.io\r\n\r\n3. [AkShare](https://github.com/jindaxiang/akshare) has following features:\r\n- Easy: Just one line to fetch the data;\r\n- Fast: Just copy and paste;\r\n- Extensible: Easy to customize your own code;\r\n- Powerful: Python ecosystem;\r\n\r\n4. Read more: https://github.com/jindaxiang/akshare\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar ones in awesome-python.\r\nthere are some package like: yfinance, wbdata, but those packages are just for single data-source, AkShare provide more generally interface for financial data, for example: stock, futures, option, fx, bond and so on.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1516 from jindaxiang/master\n\nAdd akshare"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c2a88c0a76e0a4eb6e",
    "number": 1515,
    "body": "## What is this Python project?\r\n\r\nPiny is a simple library enabling loading yaml config files. It converts yaml file to dict and supports ${VARIABLE_NAME:-default_value} syntax for rendering environment variables.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI only found libs working with ini configs in Configuration section. This one is unique because it works with yaml and does env variables resolution (feature not available in pyyaml for example) \r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "feature/add_piny_to_configuration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c3a88c0a76e0a4eb6f",
    "number": 1513,
    "body": "## What is this Python project?\r\n\r\nCLI for SQLite Databases with auto-completion and syntax highlighting.\r\n\r\n![Completion](https://raw.githubusercontent.com/dbcli/litecli/master/screenshots/litecli.png)\r\n\r\n## Features\r\n\r\n* SQLite client similar to [mycli](https://github.com/dbcli/mycli) and [pgcli](https://github.com/dbcli/pgcli)\r\n* support for SQLite\r\n* autocompletion\r\n* syntax highlighting\r\n* shortcuts\r\n* color themes\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no other SQLite CLI with autocomplete alternative currently.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-litecli",
    "is_a_fork": true,
    "comments": [
      "hey @kuter I added litecli to my fork of this repo: https://github.com/DoronCohen/awesome-python. thanks"
    ],
    "commit_messages": [
      "Merge pull request #1513 from kuter/add-litecli\n\nadd litecli to Command-line Tools"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c4a88c0a76e0a4eb70",
    "number": 1504,
    "body": "https://github.com/laixintao/iredis\r\n\r\nInteractive Redis: A Terminal Client for Redis with AutoCompletion and Syntax Highlighting.\r\n\r\n<img width=\"806\" alt=\"image\" src=\"https://user-images.githubusercontent.com/9675939/75509878-0c4e4500-5a24-11ea-84cd-44062b65ba82.png\">\r\n\r\n\r\n## Features\r\n\r\n- Advanced code completion. If you run command `KEYS` then run `DEL`, IRedis will auto-complete your command based on `KEYS` result.\r\n- Command validation. E.g. try `CLUSTER MEET IP PORT`, iredis will validate IP and PORT for you.\r\n- Command highlighting, fully based on redis grammar. Any valid command in IRedis shell is a valid redis command.\r\n- Human-friendly result display.\r\n- `peek` command to check the key's type then automatically call `get`/`lrange`/`sscan`, etc, depending on types. You don't need to call the `type` command then type another command to get the value. `peek` will also display the key's length and memory usage.\r\n- <kbd>Ctrl</kbd> + <kbd>C</kbd> to cancel the current typed command, this won't exit iredis, exactly like bash behaviour. Use <kbd>Ctrl</kbd> + <kbd>D</kbd> to send a EOF to exit iredis.\r\n- Says \"Goodbye!\" to you when you exit!\r\n- <kbd>Ctrl</kbd> + <kbd>R</kbd> to open **reverse-i-search** to search through your command history.\r\n- Auto suggestions. (Like [fish shell](http://fishshell.com/).)\r\n- Support `--encode=utf-8`, to decode Redis' bytes responses.\r\n- Command hint on bottom, include command syntax, supported redis version, and time complexity.\r\n- Offcial docs with built-in `HELP` command, try `HELP SET`!\r\n- Written in pure Python, but IRedis was packaged into a single binary with\r\n[PyOxidizer](https://github.com/indygreg/PyOxidizer), you can use cURL to\r\ndownload and run, it just works, even you don't have a Python interpreter.\r\n- For full features, please see: [iredis.io/show](https://www.iredis.io/show/)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no other redis-cli alternative currently.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-iredis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c5a88c0a76e0a4eb71",
    "number": 1496,
    "body": "## What is this Python project?\r\n\r\n[py_cui](https://github.com/jwlodek/py_cui) - A cross platform library for constructing TUI/CUI interfaces.\r\n\r\n[pyautogit](https://github.com/jwlodek/pyautogit) - A terminal user interface for managing multiple git repositories.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n`py_cui` - aimed at beginners, with the simplest possible syntax for constructing TUI interfaces. Can write functional programs like a TODO list in under 100 lines of code\r\n\r\n`pyautogit` - Provides a simple and unique interface for managing multiple git repositories quickly and easily in the terminal\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c5a88c0a76e0a4eb72",
    "number": 1487,
    "body": "PyPy has moved development to https://foss.heptapod.net/pypy/pypy",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1487 from mr-ubik/patch-1\n\nPyPy moved to https://foss.heptapod.net/pypy/pypy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c6a88c0a76e0a4eb73",
    "number": 1481,
    "body": "The current link for Profig returns a 404",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks! Fixed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c7a88c0a76e0a4eb74",
    "number": 1480,
    "body": "## What is this Python project?\r\n\r\n**[Matchering 2.0]** is a novel **Containerized Web Application** and **[Python Library][PyPI]** for audio matching and [mastering].\r\n\r\nIt follows a *simple idea* - you take TWO audio files and feed them into **Matchering**: \r\n- **TARGET** (the track you want to master, you want it to sound like the reference)\r\n- **REFERENCE** (another track, like some kind of \"wet\" popular song, you want your target to sound like it)\r\n\r\nOur algorithm matches both of these tracks and provides you the mastered **TARGET** track with the same [RMS], [FR], [peak amplitude] and [stereo width] as the **REFERENCE** track has.\r\n\r\nRead more: https://github.com/sergree/matchering/blob/master/README.md\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar ones.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n\r\n[Matchering 2.0]: https://github.com/sergree/matchering\r\n[PyPI]: https://pypi.org/project/matchering\r\n[mastering]: https://en.wikipedia.org/wiki/Audio_mastering\r\n[RMS]: https://en.wikipedia.org/wiki/Root_mean_square\r\n[FR]: https://en.wikipedia.org/wiki/Frequency_response\r\n[peak amplitude]: https://en.wikipedia.org/wiki/Amplitude\r\n[stereo width]: https://en.wikipedia.org/wiki/Stereo_imaging",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Irreplaceable program"
    ],
    "commit_messages": [
      "Merge pull request #1480 from sergree/master\n\nAdd matchering"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c8a88c0a76e0a4eb75",
    "number": 1479,
    "body": "## What is this Python project?\r\n\r\nMake Python 3.6 / 3.7 / 3.8 uniformly available on stable and old-stable Ubuntu and Debian (Xenial / Bionic / Stretch / Buster). Either to deploy easily to multiple Debian-based hosts in your ‘classic’ infrastructure, or to run unit tests on *one* host for *several* Python versions.\r\n\r\nDisclaimer: I wrote it.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike pyenv, this is ops-friendly because you get pre-built packages with the Python test suite checked. It's for those cases when a container just doesn't do the job.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c9a88c0a76e0a4eb76",
    "number": 1478,
    "body": "## What is this Python project?\r\n\r\nCreate executable zipapps (PYZ archives) without writing *any* extra configuration.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimpler than PEX, less overhead than common binary-producing tools like pyinstaller.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86c9a88c0a76e0a4eb77",
    "number": 1477,
    "body": "## What is this Python project?\r\n\r\nTwo very useful and time-saving extensions for documenting tools using Click.\r\n\r\n2 links because both are very closely related.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86caa88c0a76e0a4eb78",
    "number": 1476,
    "body": "## What is this Python project?\r\n\r\nTask / project automation, including the ability to add standard workflows to many projects just via a task library package.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBest feature is that function signatures are \"magically\" converted into a full CLI. Makes for very fast task development without spending any thoughts or time on CLI integration.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "+1 Invoke is a must!I use it also for non python projects.",
      "Another plus: invoke's documentation is really good.",
      "Invoke is brilliant! It's actually a spinoff of `frabric` which is already on this list."
    ],
    "commit_messages": [
      "Merge pull request #1476 from jhermann/patch-2\n\nAdd Invoke"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86cba88c0a76e0a4eb79",
    "number": 1475,
    "body": "Many features that make managing projects easier, and a replacement for the unmaintained pipsi (easy installation of scripts into dedicated venvs). It *adds* to existing tools like pip and poetry, instead of doing a bad replacement job.\r\n\r\nhttps://github.com/dephell/dephell#readme\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86cca88c0a76e0a4eb7a",
    "number": 1474,
    "body": "\r\n\r\n## What is this Python project?\r\n\r\nA lightweight, object-oriented finite state machine implementation in Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n_State machine_ is a powerful template for event-based systems. And currently, there are no mentions of any other state machines in **awesome-python** list.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86cda88c0a76e0a4eb7b",
    "number": 1473,
    "body": "## What is this Python project?\r\n\r\nA transparent and symmetric RPC library for python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe only comparison would be zeroRPC which takes a different approach and has a different vision. The core difference is how RPyC allows objects to proxy to another address space and zeroRPC has zero support for such things.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1473 from comrumino/master\n\nAdded RPyC to RPC Servers section of REAME.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86cda88c0a76e0a4eb7c",
    "number": 1472,
    "body": "## What is this Python project?\r\n\r\nRich is a Python library for rich text and beautiful formatting in the terminal.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Easy to use APIs.\r\n- Custom styling with bbcode-like markup.\r\n- Emoji!\r\n- Rich text logger, also a `RichHandler` that [supports](https://github.com/willmcgugan/rich/blob/7b00f0ecb15a4698931d49922a665a6f02782e29/rich/logging.py#L18) HTTP keywords. See [demo](https://www.willmcgugan.com/blog/tech/post/prettier-logging-with-rich/)\r\n-  markdown and code highlighting\r\n- [more](https://rich.readthedocs.io/en/latest/) in documentation.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1472 from xatier/master\n\nAdd rich"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86cea88c0a76e0a4eb7d",
    "number": 1471,
    "body": "## What is this Python project?\r\n\r\nExhaustive, simple, beautiful and concise. A truly pythonic cheat sheet about Python programming language.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Extremely concise and to the point.\r\n* Everything is on one page.\r\n* Available PDF.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86cfa88c0a76e0a4eb7e",
    "number": 1470,
    "body": "## What is this Python project?\r\n\r\nFrom the README of the project:\r\n> Python's `itertools` library is a gem - you can compose elegant solutions for a variety of problems with the functions it provides. In [`more-itertools`](https://github.com/erikrose/more-itertools) we collect additional building blocks, recipes, and routines for working with Python iterables.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n`more-itertools` provides most re-usable functions one would want when working with iterables. By relying on this lightweight package, similarly to what `itertools` provide, one can write more readable and maintainable code, while avoiding having to re-invent the wheel (and introducing bugs by doing so).\r\n\r\nAs simple examples, instead of using raw iterators, one should use `itertools` when appropriate:\r\n```Python\r\n>>> from itertools import repeat\r\n\r\n>>> (10 for _ in range(3))  # Instead of this ...\r\n>>> repeat(10, 3)           # ... use that!\r\n```\r\nand `more-itertools` is based on the same idea and provides many more building blocks:\r\n```Python\r\n>>> from more_itertools import ilen\r\n\r\n>>> sum(1 for _ in iter)  # Instead of this ...\r\n>>> ilen(iter)            # ... use that!\r\n```\r\n\r\nOf course, the project also provides more advanced expressions, hard to express as one-liners. Some of my favourites (notice their high-quality documentation):\r\n- [`all_equal(iterable)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.all_equal)\r\n- [`last(iterable[, default])`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.last)\r\n- [`nth(iterable, n, default=None)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.nth)\r\n- [`consume(iterator, n=None)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.consume)\r\n- [`distribute(n, iterable)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.distribute)\r\n- [`roundrobin(*iterables)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.roundrobin)\r\n- [`windowed(seq, n, fillvalue=None, step=1)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.windowed)\r\n- [`substrings(iterable)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.substrings)\r\n- [`powerset(iterable)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.powerset)\r\n- [`random_permutation(iterable, r=None)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.random_permutation)\r\n- [`with_iter(context_manager)`](https://more-itertools.readthedocs.io/en/stable/api.html#more_itertools.with_iter)\r\n\r\nIn many cases where I wondered \"Why didn't they implement this in `itertools`?!\", `most-itertools` had a single-call solution: there's a reason why the project already has 1.2k :star: on GitHub!\r\n\r\nPlease give `most-itertools` a try and give this PR a :+1: if you find the package useful.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1470 from PiCT0/master\n\nadd more-itertools"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d0a88c0a76e0a4eb7f",
    "number": 1469,
    "body": "## What is this Python project?\r\n\r\nA simple, Pillow-friendly, wrapper around the tesseract-ocr API for Optical Character Recognition (OCR).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTLDR: Speed gains, readability, in memory OCR, no need for sub shell process using file system access.\r\n\r\n**tesserocr** integrates directly with Tesseract's C++ API using Cython which allows for a simple Pythonic and easy-to-read source code. It enables real concurrent execution when used with Python's threading module by releasing the GIL while processing an image in tesseract.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "feature/add-tesserocr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1469 from ghandic/feature/add-tesserocr\n\nAdded tesserocr"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d1a88c0a76e0a4eb80",
    "number": 1468,
    "body": "## What is this Python project?\r\n\r\n* Diagram as Code\r\n* Diagrams lets you draw the cloud system architecture in Python code.\r\n* It  also allows you to tracking the architecture diagram changes on any version control system.\r\n\r\nDetails on https://github.com/mingrammer/diagrams\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo similar ones :)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-diagrams",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1468 from mingrammer/add-diagrams\n\nAdd diagrams"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d2a88c0a76e0a4eb81",
    "number": 1467,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d2a88c0a76e0a4eb82",
    "number": 1466,
    "body": "## What is this Python project?\r\n\r\nThis regex tester allows to test and debug regex for Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- A regex visualizer is integrated.\r\n- It allows to generate a string from RegEx.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Sorry @cyrilbois, a regex testing website seems not be suitable for this list.",
      "Thank you for your reply."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d3a88c0a76e0a4eb83",
    "number": 1465,
    "body": "## What is this Python project?\r\n\r\nA lightweight library for neural networks that runs anywhere.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt runs anywhere (not only in python) and it is compatible across platforms.\r\nhttps://mrdimosthenis.github.io/Synapses\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d4a88c0a76e0a4eb84",
    "number": 1464,
    "body": "## What is this Python project?\r\n\r\nThis repository contains data structures and algorithms concepts and questions useful for interviews in Python, implemented in a clean and simple method. Covers almost every single data structure and algorithms that are asked in coding interviews\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project has the cleanest implementation of data structure and algorithms. It becomes really simple to create mind maps of questions. Also this repository has links to many useful articles and notes that are generally asked in coding interviews\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1464 from prabhupant/patch-1\n\nAdd python-ds"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d5a88c0a76e0a4eb85",
    "number": 1463,
    "body": "## What is this Python project?\r\n\r\npythonprogramming.net for awesome tutorials\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- The coolest programming tutorials with real-world examples. \r\n- One platform for almost everything! \r\n- Great walkthrough of code for better understanding. \r\n- Well classified/organized series of tutorials.  \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Yes. ppnet is great.",
      "@vinta Did you get a chance to look into this?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d6a88c0a76e0a4eb86",
    "number": 1462,
    "body": "My personal favorite datetime module\r\n\r\n## What is this Python project? Another date time library.\r\n\r\nDescribe features. It's dead simple to manipulate dates\r\n\r\n## What's the difference between this Python project and similar ones? I think it's the easiest I've used.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1462 from MingyJ/master\n\nAdded Arrow to Dates & Times"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d6a88c0a76e0a4eb87",
    "number": 1461,
    "body": "Karate Club is an unsupervised machine learning extension library for NetworkX.\r\n\r\nKarate Club consists of state-of-the-art methods to do unsupervised learning on graph structured data. To put it simply it is a Swiss Army knife for small-scale graph mining research. First, it provides network embedding techniques at the node and graph level. Second, it includes a variety of overlapping and non-overlapping community detection methods. Implemented methods cover a wide range of network science (NetSci, Complenet), data mining (ICDM, CIKM, KDD), artificial intelligence (AAAI, IJCAI) and machine learning (NeurIPS, ICML, ICLR) conferences, workshops, and pieces from prominent journals.\r\n\r\n## What is this Python project?\r\n\r\nUnsupervised learning for graph structured data:\r\n  - Node embedding\r\n  - Community detection\r\n  - Graph embedding\r\n\r\nBuilt on NetworkX and has a Scikit-Learn like API.\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no similar project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1461 from benedekrozemberczki/patch-1\n\nAdd Karate Club"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d7a88c0a76e0a4eb88",
    "number": 1460,
    "body": "Python configuration\r\n\r\n## What is this Python project?\r\n\r\n- Reading from remote(consul)\r\n- Reading from YAML or JSON file\r\n- Unmarshal config\r\n\r\nThe next, I want to support multiple config files in different formats.\r\n\r\nSee also the [project](https://github.com/shaneing/python-viper).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      ":+1: ",
      ":+1: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d8a88c0a76e0a4eb89",
    "number": 1458,
    "body": "## What is this Python project?\r\n\r\nDebugger that can open clone of default python interpreter during program execution and then resume. Has ability to step code with various conditions and other magic commands like !where to show current location in code\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no other debuggers that are built around the idea of having python prompt with extra features, rather they have their own features and sometimes the ability to execute arbitary code.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d9a88c0a76e0a4eb8a",
    "number": 1457,
    "body": "I have rename \"sort.py\" to \"tests.py\" for testing purposes. Now, the project is provided with build: passing and Codecov: 92%(for now)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86d9a88c0a76e0a4eb8b",
    "number": 1456,
    "body": "Async friendly http client from the same authors of starlette and uvicorn.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAsync friendly (though sync supporting) http client for use with Starlette based projects with a requests inspired syntax.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1456 from danielloader/patch-1\n\nAdd httpx"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86daa88c0a76e0a4eb8c",
    "number": 1455,
    "body": "## What is this Python project?\r\n\r\n[Pybotics](https://github.com/nnadeau/pybotics) is an open-source Python toolbox for robot kinematics and calibration. \r\nIt was designed to provide a simple, clear, and concise interface to quickly simulate and evaluate common robot concepts, such as kinematics, dynamics, trajectory generations, and calibration. \r\nThe toolbox is specifically designed for use with the Modified Denavit–Hartenberg parameters convention.\r\n\r\n### Applications & Examples\r\n\r\n- [Basic Usage](examples/basic_usage.py)\r\n- [Kinematics](examples/kinematics.ipynb)\r\n- [Calibration](examples/calibration.ipynb)\r\n- [Trajectory and Path Planning](examples/trajectory_generation.ipynb)\r\n- [Machine Learning](examples/machine_learning.ipynb)\r\n- [Dynamics](examples/dynamics.ipynb)\r\n\r\nThis toolbox was featured in the Journal of Open Source Software: https://doi.org/10.21105/joss.01738\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. As MATLAB® is not necessarily readily available outside of academia, `Pybotics` was originally developed as a fully open-source alternative to the `Robotics Toolbox` by Peter Corke.\r\n2. `rospy` is a client for the ROS framework and performs a different function.\r\n3. `PythonRobotics` is a repository of code samples primarily focusing on trajectory planning for mobile robotics. `Pybotics` focuses more on industrial robots and is a framework for modelling robots.\r\n4. `Pybotics` can be integrated with the above two packages as the modelling component. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86dba88c0a76e0a4eb8d",
    "number": 1454,
    "body": "## What is this Python project?\r\n\r\n[Sourcery](https://sourcery.ai) is a tool which enables Python developers to write better code faster. It analyses your code and suggests improvements which you can then apply instantly. It is currently available as a PyCharm plugin, with VS Code and Github integrations coming soon.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSourcery is completely automated - unlike other tools it both identifies the problems and suggests the code changes. It can suggest complex refactorings that dramatically improve code readability in one step. It is also safe - it uses static code analysis to check that all refactoring suggestions won't change the existing functionality.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-sourcery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86dca88c0a76e0a4eb8e",
    "number": 1453,
    "body": "Add docxtpl\r\nAdd loguru\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "👍 on loguru."
    ],
    "commit_messages": [
      "Merge pull request #1453 from eaxcmd/master\n\nAdd docxtpl, loguru"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86dda88c0a76e0a4eb8f",
    "number": 1452,
    "body": "## What is this Python project?\r\n\r\nStores changes to a `JsonStore` object as soon as it is changed, unless a transaction is active. Transactions may use a context manager and be nested, and discard changes if the transaction manager is exited with an exception.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ncompared to pickleDB, python-sonstore:\r\n* has transactions\r\n* appears to have better documentation of use\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-python-jsonstore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86dda88c0a76e0a4eb90",
    "number": 1451,
    "body": "## What is this Python project?\r\n\r\nThe [Datapad](https://github.com/huyng/datapad) library provides a fluent API for processing streams/sequences of data. It is used for loading, cleaning, and manipulating datasets in machine learning and exploratory analysis tasks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nhttps://datapad.readthedocs.io/en/latest/faq.html\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86dea88c0a76e0a4eb91",
    "number": 1450,
    "body": "## What is this Python project?\r\n\r\nA desktop application that is a replacement for Internet Download Manager, a popular desktop downloader program.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNot aware of other downloader Desktop applications that are Python based.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I don't like voting idea.\r\n\r\nIn order to have my project merged I only need to find 20 github accounts?\r\n\r\nalso, your suggestion still have only 7 out of 20",
      "Yea, it's a lengthy process and being voted on isn't the best feeling, it's one way to filter out projects that are good and popular from those that are really great and really popular.  It took a while for me to get listed, but I got there and it helped.\r\n\r\nIt's definitely not a 1-week process, but it doesn't hurt to have it happen while you continue to add features and bring in new users.  It's a building momentum kind of thing.\r\n\r\nI have the same kind of frustration with needing to get a PyCharm bug voted on to be fixed that affects my docstrings in a really negative way.  \r\n\r\n",
      "Hey!!  pyIDM got 20 upvotes!\r\n\r\nCan the maintainer please integrate this change into the master branch?",
      "@vinta Ooops... sorry I didn't tag my previous message with the correct tag (sorry @vinta it's been a while since PySimpleGUI was added and I had forgotten you're da leader of this project).\r\n",
      "@vinta \r\nCan you please merge this one?  It seems to meet the qualifications and I see other merges happening.  If it doesn't measure up or I did the change incorrectly, let me know and I'll fix it.",
      "It looks like the link to the project is no longer correct.  "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86dfa88c0a76e0a4eb92",
    "number": 1449,
    "body": "Repo: https://github.com/PydPiper/pylightxl\r\nDocs: https://pylightxl.readthedocs.io\r\n\r\n## What is this Python project?\r\n\r\npylightxl is a light weight, zero dependency (only standard libs used), to the point (no bells and whistles) Microsoft Excel reader/writer python 2.7-3+ library.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nZero non-standard library dependencies No compatibility/version control issues.\r\n\r\nLight-weight single source code file that supports both Python3 and Python2.7.18. Single source file that can easily be copied directly into a project for true zero-dependency. Great for those that have installation/download restrictions. In addition the library's size and zero dependency makes this library pyinstaller compilation small and easy!\r\n\r\n100% test-driven development for highest reliability/maintainability with 100% coverage on all supported versions\r\n\r\nAPI aimed to be user friendly and intuitive. Structure: database > worksheet > indexing example: db.ws('Sheet1').index(row=1,col=2) or db.ws('Sheet1').address(address='B1')\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hello,\r\n\r\nIs it possible for a maintainer to take a look at possibly adding this package to the awesome list? It just hit 150 stars @vinta ",
      "why is it closed?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e0a88c0a76e0a4eb93",
    "number": 1448,
    "body": "added nosqlmodels\r\n\r\n## What is this Python project?\r\n\r\nnosqlmodel is a first non-relational NoSql ORM framework. Easy way to create models with a nosql backend.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no smilar nosql ORM frameworks with multi backends.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e1a88c0a76e0a4eb94",
    "number": 1447,
    "body": "## What is this Python project?\r\n\r\nAnalyses codebase and finds dead code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Gives probability, in the case that potentially dead code might be used in unexplicit calls.\r\n- Sorts unused classes and functions by size so large classes that are unused can be removed\r\n- Supports python 2 and 3. \r\n- Many other features\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1447 from rerpha/master\n\nAdd Vulture to code analysis tools"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e2a88c0a76e0a4eb95",
    "number": 1446,
    "body": "## What is this Python project?\r\n\r\nBuildbot is the Continuous Integration Framework. 100% Configuration as Code. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI haven't seen any other projects written in Python that do these same tasks that worked as well.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n\r\n## Other notes\r\n\r\nThere have been other attempts to add this to the Awesome list before.\r\n\r\n* https://github.com/vinta/awesome-python/pull/1237\r\n* https://github.com/vinta/awesome-python/pull/835\r\n* https://github.com/vinta/awesome-python/pull/324\r\n\r\nThese just hadn't got the number of votes required to be merged.",
    "head_branch": "awesome/cicd-buildbot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e3a88c0a76e0a4eb96",
    "number": 1445,
    "body": "## What is this Python project?\r\n\r\n**Quart** is a Python ASGI web microframework. It is intended to provide the easiest way to use\r\nasyncio functionality in a web context, especially with existing Flask apps. This is possible as the Quart API is a superset of the Flask API.\r\nQuart aims to be a complete web microframework, as it supports HTTP/1.1, HTTP/2 and websockets. Quart is very extendable and has a number of known extensions and works\r\nwith many of the Flask extensions.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n**Quart** supports the full ASGI 3.0 specification as well as the websocket response and HTTP/2 server push extensions. For those of you familiar with Flask, Quart extends the Flask-API by adding support for\r\n\r\n- HTTP/1.1 request streaming.\r\n- Websockets.\r\n- HTTP/2 server push.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e3a88c0a76e0a4eb97",
    "number": 1443,
    "body": "## What is this Python project?\r\n\r\nPyInquirer is a wrapper around prompt-toolkit it provides a convenient way of creating common command line interactions. It makes it much easier to create some of the common terminal interactions.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe ease of use of of this module over the prompt-toolkit makes it a worthwhile addition to the awesome-python collection.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "feature/PyInquirer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e4a88c0a76e0a4eb98",
    "number": 1442,
    "body": "## What is this Python project?\r\n\r\nSupports parsing configuration values from multiple sources and organizing them in a hierarchy, meaning sources higher-up overwrite values with the same key.\r\n\r\nAvailable sources:\r\n* environment variables\r\n* files\r\n  * json\r\n  * yaml\r\n  * ini\r\n  * custom formats also available\r\n* command line arguments\r\n* key-value pairs (`dict`) directly\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm not aware of anything similar.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e5a88c0a76e0a4eb99",
    "number": 1441,
    "body": "## What is this Python project?\r\n\r\nIt's a framework for scraping HTML sites, and aggregating data from multiple sites from a same category (e.g. banking sites, news sites, video sites, etc.).\r\nThere are ready-made modules for popular websites and ready-apps to interact with them.\r\nThink youtube-dl applied to other domains than video!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It's possible to scrape new websites with declarative-style extraction rules\r\n* It provides a standardized API for categories of sites for dedicated tasks (e.g. banking, web forums, video sites, news sites, music lyrics sites, etc.)\r\n  * Scraped websites are grouped in those categories\r\n* Scraped websites are grouped in categories for a dedicated task: \r\n* The project comes with many existing backends for real-life websites\r\n* It has an internal upgrade system\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Recreating PR because stale-bot closed the old PR https://github.com/vinta/awesome-python/pull/836",
      "I just removed my star from this repository due to the stupid stale bot."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e6a88c0a76e0a4eb9a",
    "number": 1440,
    "body": "Added 'pycodestyle' code checker tool which strictly follows PEP8 conventions.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e7a88c0a76e0a4eb9b",
    "number": 1439,
    "body": "## What is this Python project?\r\n\r\nMake your functions return something meaningful, typed, and safe!\r\n\r\n### Features\r\n\r\n- Provides a bunch of primitives to write declarative business logic\r\n- Enforces better architecture\r\n- Fully typed with annotations and checked with `mypy`, [PEP561 compatible](https://www.python.org/dev/peps/pep-0561/)\r\n- Has a bunch of helpers for better composition\r\n- Pythonic and pleasant to write and to read (!)\r\n- Support functions and coroutines, framework agnostic\r\n- Easy to start: has lots of docs, tests, and tutorials\r\n\r\nLink: https://github.com/dry-python/returns\r\n\r\nRelated:\r\n- https://returns.readthedocs.io/en/latest/\r\n- https://github.com/dry-python/classes\r\n- https://sobolevn.me/2019/02/python-exceptions-considered-an-antipattern\r\n- https://sobolevn.me/2019/03/enforcing-srp\r\n- https://github.com/typeddjango/awesome-python-typing\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCurrently it is the only typed monads implementation I know. Other packages are not typed and not checked with `mypy`\r\n\r\nOther similar projects are listed here: https://returns.readthedocs.io/en/latest/#inspirations\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "@sobolevn I forked this repo and am willing to maintain it. you can find it here: https://github.com/DoronCohen/awesome-python. I would appreciate a pull request. thanks!"
    ],
    "commit_messages": [
      "Merge pull request #1439 from sobolevn/patch-3\n\nAdds dry-python/returns"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e7a88c0a76e0a4eb9c",
    "number": 1438,
    "body": "",
    "head_branch": "add-textblob",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e8a88c0a76e0a4eb9d",
    "number": 1437,
    "body": "## What is this Python project?\r\n\r\nBearer.sh provides an API client in Python, to easily call any APIs.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* There none universal API clients listed on `awesome-python`.\r\n* It's an easy to use API client\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86e9a88c0a76e0a4eb9e",
    "number": 1436,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1436 from euribates/add-refactoring\n\nAdd new section Refactoring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86eaa88c0a76e0a4eb9f",
    "number": 1434,
    "body": "## What is this Python project?\r\n\r\ndramatic is added to Task Queues\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86eba88c0a76e0a4eba0",
    "number": 1433,
    "body": "## What is this Python project?\r\n\r\nSchemathesis is a tool for testing web applications built with Open API / Swagger specifications.\r\n\r\nIt reads the application schema, generates and runs test cases which will ensure that your application is compliant with its schema.\r\n\r\nThe application under test could be written in any language, the only thing you need is a valid API schema in a supported format.\r\n\r\nBased on [Hypothesis](https://github.com/HypothesisWorks/hypothesis)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe project was inspired by [swagger-conformance](https://github.com/olipratt/swagger-conformance), which didn't receive any updates since June 2018. Notable differences:\r\n\r\n- Support for Open API 3.0;\r\n- More feature complete support for Open API 2.0 / 3.0 specs due to usage of [hypothesis-jsonschema](https://github.com/Zac-HD/hypothesis-jsonschema) under the hood;\r\n- Interactive, pytest-style command-line interface with built-in support for authorization, Hypothesis configuration, endpoints selection, and many other things;\r\n- flexible control over checks to be executed;\r\n- automatic testing of explicit examples defined in the tested schema;\r\n- ability to register custom strategies for string formats;\r\n- lazy schemas loading support for simpler testing of apps built with tools like [apispec](https://github.com/marshmallow-code/apispec)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-schemathesis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86eba88c0a76e0a4eba1",
    "number": 1432,
    "body": "## What is this Python project?\r\n\r\nProxyCrawl library allows to bypass captchas and blocks without using proxies which is perfect for crawling and scraping web content.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nProxyCrawl uses a big network of proxies combined with artificial intelligence and machine learning to bypass captchas and IP blocks. With a couple of lines of code you can integrate it into your python project and avoid the usage of proxies when crawling and scraping.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86eca88c0a76e0a4eba2",
    "number": 1431,
    "body": "## What is this Python project?\r\n\r\n- cachetools is a chaching library.\r\n- pyre, pytype and pyright are type checkers\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- cachetools is a library for cached collections which is different from the current items under caching.\r\n- the new typechekers each have different pros and cons compare to mypy so it's valuable to have them all listed so users can decide which one's the best for them\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86eda88c0a76e0a4eba3",
    "number": 1430,
    "body": "## What is this Python project?\r\nTest Junkie is a testing framework, similar to pytest but more intuitive and with more powerful features.\r\n\r\nSome of its features:\r\n- Parallel test execution\r\n- Multi-layer parametrization\r\n- Conditional retries\r\n- Event listeners\r\n- Tagging\r\n- Test metadata\r\n- Prioritization\r\n- Conditional skips\r\n- Group rules\r\n- Auditing\r\n- Reporting\r\n- Code coverage\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Ease of use &  great [documentation](https://www.test-junkie.com/documentation/): JUnit like decorator syntax to define tests. Decorators have properties which allow to configure all possible aspects of a test. This is consistent for all Test Junkie decorators thus low learning curve.\r\n\r\n- Powerful parametrization engine which allow to quickly create tests that cover whole spectrum of permutations.\r\n\r\n- Event listeners allow to easily hook on-to test events such as:\r\non_in_progress\r\non_success\r\non_failure\r\non_error\r\non_ignore\r\non_cancel\r\non_skip\r\non_complete\r\n\r\n- Does not require any modules, things just work out of the box.\r\n- Exposes both programmatic API and full-featured CLI to run tests.\r\n- Modern, beautiful & interactive HTML reports out of the box. JSON/XML also available.\r\n- Group rules allow to define rules such as running something before or after a pre-defined collection of suites.\r\n- Conditional retries allow to retry tests on a specific exceptions\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86eea88c0a76e0a4eba4",
    "number": 1429,
    "body": "## What is this Python project?\n\n\nAn advanced task flow management on top of famous Celery project (a distributed task queue). It allows one to create advanced task flows by creating YAML configuration files which state dependencies between tasks, fallback tasks (run on task failures) or run whole flows (transitively or even recursively). Dependencies between tasks or flows are graphs (without any limitation to DAG). It also enables one to use different storage or database adapters or running only certain tasks in a flow definition - system will automatically compute dependencies between tasks (which tasks needs to be run in order to run desired tasks). Selinon comes with a set of prepared storage/database adapters and support for tracing system actions (easy to integrate with Sentry or other monitoring systems) or logging ELK (Elasticsearch, logstash, Kibana) stack to provide ready-to-be-used system in clusters (using Kubernetes, OpenShift or others). A built in simutor can run your flows by executing CLI.\n\n\n## What's the difference between this Python project and similar ones?\n\nCelery is limited when it comes to modelling more advanced task flows (dependencies between tasks). Selinon offers fine-granted control on how your task flow will work, how it will perform and how it will be traced in distributed environment.\n\n--\n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "selinon",
    "is_a_fork": true,
    "comments": [
      "The project already aggregated 20+ thumbs up in https://github.com/vinta/awesome-python/pull/943 but the PR was closed by the bot. PTAL."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86efa88c0a76e0a4eba5",
    "number": 1428,
    "body": "## What is this Python project?\r\n\r\nImport Linter is a command line tool to check that you are following a self-imposed architecture within your Python project. It does this by analysing the imports between all the modules in one or more Python packages, and compares this against a set of rules that you provide in a configuration file.\r\n\r\nThe configuration file contains one or more 'contracts'. Each contract has a specific type, which determines the sort of rules it will apply. For example, the forbidden contract type allows you to check that certain modules or packages are not imported by parts of your project.\r\n\r\nImport Linter is particularly useful if you are working on a complex codebase within a team, when you want to enforce a particular architectural style. In this case you can add Import Linter to your deployment pipeline, so that any code that does not follow the architecture will fail tests.\r\n\r\nIf there isn't a built in contract type that fits your desired architecture, you can define a custom one.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm not aware of anything similar.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "import-linter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86efa88c0a76e0a4eba6",
    "number": 1427,
    "body": "Add Kite and a bullet for Cross-Editor Plugins.\r\n\r\n## What is this Python project?\r\n\r\n[Kite](http://kite.com) is a free plugin for Atom, VS Code, PyCharm, Sublime, and Vim that uses machine learning to provide advanced autocompletions — up to a full line of code. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe [Kite app](http://kite.com/copilot) shows documentation as you move your cursor, so you don’t have to google search every time you have a question about syntax. Kite removed their cloud processing component earlier this year, and now all code analysis runs on user’s local machines.\r\n\r\n<img width=\"455\" alt=\"Kite\" src=\"https://user-images.githubusercontent.com/37838136/68047940-80aeec80-fcad-11e9-82d8-c3b47a67cc34.png\">\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "kite",
    "is_a_fork": true,
    "comments": [
      "Hi stale-bot, @vinta , I'm hoping we can re-open this one toward merging soon?",
      "Hi Guys (: Just a gentle bump as this change has well over +20, and I'd be pretty excited to see it happen. Any tips @vinta for making this more likely to merge? @dhamaniasad @vndmtrx Any tips on getting re-opened? thanks!!",
      "@vinta any chance of getting this PR reopened? We have many thousands of happy Python users who would vouch for Kite to be added on this list 🙏🏻"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f0a88c0a76e0a4eba7",
    "number": 1426,
    "body": "## What is this Python project?\r\n\r\n[Git me the URL](https://github.com/amykyta3/git-me-the-url/blob/master/README.md) is a simple command line application that converts the path to a file in your Git repository into a public URL for popular Git hosting sites.\r\n\r\nI also provide an API so that users can embed the translator into a larger project, as well as extend the command line tool to add custom path translations.\r\n\r\n![gitmetheurl](https://raw.githubusercontent.com/amykyta3/git-me-the-url/master/docs/cmd-example.gif)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI have not been able to find anything else like it.\r\nThis is a very useful tool if you often share links to your source with co-workers/friends while collaborating on a project.\r\n* Supports URL generation for popular Git hosting sites such as GitHub, GitLab, and Bitbucket.\r\n* Easy to extend for other Git hosting services (public ones or private ones).\r\n* Accurately points to the file under the correct branch or exact commit.\r\n* Reference a line number, or range of lines.\r\n* Copy URL directly to your clipboard.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f1a88c0a76e0a4eba8",
    "number": 1425,
    "body": "## What is this Python project?\r\n\r\nBeautiful Soup is a Python library for pulling data out of HTML and XML files. It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree. It commonly saves programmers hours or days of work. (https://www.crummy.com/software/BeautifulSoup/bs4/doc/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBeautifulSoup is one of the most prolific Python libraries in existence, in some part having shaped the web as we know it. BeautifulSoup is a lightweight, easy-to-learn, and highly effective way to programmatically isolate information on a single webpage at a time. BeautifulSoup is typically paired with the requests library, where requests will fetch a page and BeautifulSoup will extract the resulting data. (https://hackersandslackers.com/scraping-urls-with-beautifulsoup/)\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "It seems that `bs4` is already on the list(https://github.com/vinta/awesome-python/pull/1402):\r\nhttps://github.com/vinta/awesome-python#html-manipulation"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f2a88c0a76e0a4eba9",
    "number": 1424,
    "body": "## What is this Python project?\r\n\r\nA cross-platform CLI downloader tool written in python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can download directly from terminal/cmd (in windows) and store to your defined path. You can configure to open the folder or file when the download is completed.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "getit",
    "is_a_fork": true,
    "comments": [
      "Last updated in 2017, though - I don't think it qualifies as active...",
      "It's maintained by me, no issues as of now."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f3a88c0a76e0a4ebaa",
    "number": 1423,
    "body": "## What is this Python project?\r\n\r\nFrom Phoneinfoga github page: PhoneInfoga is one of the most advanced tools to scan phone numbers using only free resources. The goal is to first gather standard information such as country, area, carrier and line type on any international phone numbers with a very good accuracy. Then search for footprints on search engines to try to find the VoIP provider or identify the owner.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Check if phone number exists and is possible\r\n- Gather standard informations such as country, line type and carrier\r\n- OSINT footprinting using external APIs, Google Hacking, phone books & search engines\r\n- Check for reputation reports, social media, disposable numbers and more\r\n- Scan several numbers at once\r\n- Use custom formatting for more effective OSINT reconnaissance\r\n- Automatic footprinting on several custom formats\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f3a88c0a76e0a4ebab",
    "number": 1422,
    "body": "Add to robotics: ev3dev, used for LEGO EV3 robots\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f4a88c0a76e0a4ebac",
    "number": 1421,
    "body": "## What is this Python project?\r\n\r\nArcade is an easy-to-learn Python library for creating 2D video games. It is ideal for people learning to program, or developers that want to code a 2D game without learning a complex framework. This PR fixes #1329 \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe Python Arcade Library has the same target audience as the well-known Pygame library. So how do they differ? You can see the detailed comparison at http://arcade.academy/pygame_comparison.html\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "arcadeacademy",
    "is_a_fork": true,
    "comments": [
      "There is already an open PR for the same library.",
      "> There is already an open PR for the same library.\r\n\r\nYes, you are right. But I see it's marked as stale and has conflicts to resolve. :(",
      "`Sound support: Pygame uses the old, unsupported Avbin library. Arcade uses ffmpeg. Both are a headache.`\r\n\r\n:)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f5a88c0a76e0a4ebad",
    "number": 1420,
    "body": "## What is this Python project?\r\n\r\nIt's a growingly popular podcast for teaching Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's dedicated to any educator (primary-middle-high school) who uses Python to teach programming.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "teachpythonpodcast",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f6a88c0a76e0a4ebae",
    "number": 1419,
    "body": "## What is this Python project?\r\n\r\nMlxtend (machine learning extensions) is a Python library of useful tools for the day-to-day data science tasks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- Highly active project which receives constant releases\r\n- Well maintained documentation as compared to some other similar projects\r\n- Easy to understand and use\r\n- Relatively easier as compared to other libraries for contributing.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f6a88c0a76e0a4ebaf",
    "number": 1418,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f7a88c0a76e0a4ebb0",
    "number": 1417,
    "body": "## What is this Python project?\r\n\r\nStarlette is a lightweight ASGI framework/toolkit, which is ideal for building high performance asyncio services.\r\n\r\nhttps://github.com/encode/starlette\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It is a well know ASGI server.\r\n- Seriously impressive performance.\r\n- WebSocket support.\r\n- GraphQL support.\r\n- In-process background tasks.\r\n- Test client built on requests.\r\n- Session and Cookie support.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f8a88c0a76e0a4ebb1",
    "number": 1416,
    "body": "## What is this Python project?\r\n\r\nUvicorn is a lightning-fast ASGI server implementation, using uvloop and httptools.\r\n\r\nUntil recently Python has lacked a minimal low-level server/application interface for asyncio frameworks. The ASGI specification fills this gap, and means we're now able to start building a common set of tooling usable across all asyncio frameworks.\r\n\r\nhttps://github.com/encode/uvicorn\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Has great documentation.\r\n- Has a great community support.\r\n- It is fast.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f9a88c0a76e0a4ebb2",
    "number": 1415,
    "body": "## What is this Python project?\r\nDaphne is a HTTP, HTTP2 and WebSocket protocol server for ASGI and ASGI-HTTP, developed to power Django Channels.\r\n\r\nIt supports automatic negotiation of protocols; there's no need for URL prefixing to determine WebSocket endpoints versus HTTP endpoints.\r\n\r\nhttps://github.com/django/daphne\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Support HTTP/2.\r\n- It is easy to use.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86f9a88c0a76e0a4ebb3",
    "number": 1414,
    "body": "## What is this Python project?\r\n\r\nPytype checks and infers types for your Python code - without requiring type annotations.\r\nThousands of projects at Google rely on pytype to keep their Python code well-typed and error-free.\r\n\r\nhttps://github.com/google/pytype\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Supported by Google.\r\n- Lint plain Python code, flagging common mistakes such as misspelled attribute names, incorrect function calls, and much more, even across file boundaries.\r\n- Enforce user-provided type annotations. While annotations are optional for pytype, it will check and apply them where present.\r\n- Generate type annotations in standalone files (\"pyi files\"), which can be merged back into the Python source with a provided merge-pyi tool.\r\n- Pytype is a static analyzer; it does not execute the code it runs on.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86faa88c0a76e0a4ebb4",
    "number": 1413,
    "body": "## What is this Python project?\r\n\r\nPrefect is a new workflow management system, designed for modern infrastructure and powered by the open-source Prefect Core workflow engine. Users organize Tasks into Flows, and Prefect takes care of the rest.\r\n\r\nhttps://github.com/PrefectHQ/prefect\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Has a great documentation.\r\n- Support for plugins.\r\n- Has a simple API.\r\n- Has a great log.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86fba88c0a76e0a4ebb5",
    "number": 1412,
    "body": "## What is this Python project?\r\n\r\nStreamlit lets you create apps for your machine learning projects with deceptively simple Python scripts. It supports hot-reloading, so your app updates live as you edit and save your file. No need to mess with HTTP requests, HTML, JavaScript, etc. All you need is your favorite editor and a browser.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It has a better interface.\r\n- It is simlpe to use.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86fca88c0a76e0a4ebb6",
    "number": 1411,
    "body": "## What is this Python project?\r\n\r\nGive your Sanic API a UI and OpenAPI documentation, all for the price of free.\r\n\r\nhttps://github.com/huge-success/sanic-openapi\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt provides an easy way to create API documentation for Sanic with Swagger.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86fda88c0a76e0a4ebb7",
    "number": 1410,
    "body": "## What is this Python project?\r\n\r\npypette (to be read as pipette) is a module that makes building pipelines ridiculously simple, allowing users to control the flow with minimal instructions.\r\n\r\nhttps://github.com/csurfer/pypette\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Ridiculously simple interface.\r\n- Ability to view pipeline structure within the comfort of a terminal.\r\n- Run pipeline in exception resilient way if needed.\r\n- Create dependencies on pipelines easily.\r\n- Generate an easy to view/understand report within the comfort of a terminal.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86fda88c0a76e0a4ebb8",
    "number": 1409,
    "body": "## What is this Python project?\r\n\r\nPyright is a fast type checker meant for large Python source bases. It can run in a “watch” mode and performs fast incremental updates when files are modified.\r\n\r\nhttps://github.com/microsoft/pyright\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Pyright does not require a Python environment or imported third-party packages to be installed.\r\n- Pyright supports configuration files that provide granular control over settings.\r\n- Different “execution environments” can be associated with subdirectories within a source base.\r\n- Each environment can specify different module search paths, python language versions, and platform targets.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Just checked out pyright.  This is the easiest static type checking experience that I have had in python."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86fea88c0a76e0a4ebb9",
    "number": 1408,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f86ffa88c0a76e0a4ebba",
    "number": 1407,
    "body": "## GUI Development\r\n* [appJar](http://appjar.info/) - The easiest way to create GUIs in Python.\r\n\r\n## Distribution\r\n* [auto-py-to-exe](https://nitratine.net/blog/post/auto-py-to-exe/) - Convert python scripts to executables with a simple interface.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8700a88c0a76e0a4ebbb",
    "number": 1406,
    "body": "## What is this Python project?\r\n\r\nA very fast async http client https://github.com/sonic182/aiosonic\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is very fast, was made to be used in a load test tool\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8701a88c0a76e0a4ebbc",
    "number": 1405,
    "body": "Adds knackpy to Third Party APIs for interacting with Knack apps.\r\n\r\n## What is this Python project?\r\n\r\nA client that interacts with Knack apps. Knack is an online database and business process/workflow automation tool. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCurrently no other entries that work with Knack.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8702a88c0a76e0a4ebbd",
    "number": 1404,
    "body": "#499  What is this Python project?\r\n\r\nHeuristic Algorithms (Genetic Algorithm, Particle Swarm Optimization, Simulated Annealing, Ant Colony Algorithm, Immune Algorithm, Artificial Fish Swarm Algorithm) in Python for optimization.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n1. Collect all mainly used heuristic algorithms\r\n2. The algorithm is well wrapped\r\n3. Easy to use. Fast to run.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8702a88c0a76e0a4ebbe",
    "number": 1403,
    "body": "\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1403 from monujee/patch-1\n\nFixed typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8703a88c0a76e0a4ebbf",
    "number": 1402,
    "body": "## What is this Python project?\r\n\r\nBeautifulSoup/bs4 library:\r\nbs4 — BeautifulSoup 4. Beautiful Soup is a Python library for pulling data out of HTML and XML files. It works with your favorite parser to provide idiomatic ways of navigating, searching, and modifying the parse tree.\r\n\r\n##  What's the difference between this Python project and similar ones?\r\n     *  Best for beginner's\r\n     *  Good scraping functions & features\r\n     *  Provide good parser link: html-parser & lxml\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "It is already there.\r\nhttps://github.com/vinta/awesome-python#html-manipulation"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8704a88c0a76e0a4ebc0",
    "number": 1401,
    "body": "adding a https://news.python.sc/ to news feed section . it is a hacker news clone / look alike website dedicated to python news .\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks a lot for posting this. I already created a PR #1389 ",
      "sorry i didnt see it awesome work bro :+1: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8705a88c0a76e0a4ebc1",
    "number": 1400,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Duplicate of #1296 , please vote on that one :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8705a88c0a76e0a4ebc2",
    "number": 1399,
    "body": "##  What is this Python project?\r\n\r\nKornia is a differentiable computer vision library for PyTorch.\r\n\r\nIt consists of a set of routines and differentiable modules to solve generic computer vision problems. At its core, the package uses PyTorch as its main backend both for efficiency and to take advantage of the reverse-mode auto-differentiation to define and compute the gradient of complex functions.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nInspired by OpenCV, this library is composed by a subset of packages containing operators that can be inserted within neural networks to train models to perform image transformations, epipolar geometry, depth estimation, and low-level image processing such as filtering and edge detection that operate directly on tensors.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1399 from miwojc/patch-1\n\nAdded Kornia to Computer Vision"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8706a88c0a76e0a4ebc3",
    "number": 1398,
    "body": "## What is this Python project?\r\nPympler is a development tool to measure, monitor and analyze the memory behavior of Python objects in a running Python application.\r\nPympler a toolset, that contains: \r\n\r\n**asizeof** - Package, that used to analyze and get information about real object size (include nested objects)\r\n**muppy** - used for on-line monitoring of a Python application\r\n**Class Tracker** - provides off-line analysis of the lifetime of selected Python objects.\r\n\r\nAlso included:  HeapMonitor, summery, obtain detailed insight in the size and the lifetime of Python objects, undesirable or unexpected runtime behavior like memory bloat and etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nI'm not sure, that in list exist any lib that can be compared with Pympler. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8707a88c0a76e0a4ebc4",
    "number": 1397,
    "body": "## What is this Python project?\r\n\r\nModern pure python CouchDB Client. \r\n\r\n - Use requests for HTTP requests (much faster than the standard library)\r\n - Python2 and Python3 compatible with same codebase (with one exception, python view server that uses 2to3)\r\n - Also compatible with pypy.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCurrently, there are several libraries in python to connect to CouchDB. Why one more? It's very simple.\r\n\r\nAll seems not to be maintained, all libraries used standard Python libraries for HTTP requests, and are not compatible with python3.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8708a88c0a76e0a4ebc5",
    "number": 1396,
    "body": "## What is this Python project?\r\n\r\nAdded Chainer under Deep learning section. \r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8709a88c0a76e0a4ebc6",
    "number": 1395,
    "body": "Hello.\r\nThe requests url have been changed. This PR fixes it.\r\nThanks.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1395 from m-alzam/master\n\nFix requests url"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8709a88c0a76e0a4ebc7",
    "number": 1394,
    "body": "Added a repo name is \"Whatsapp Chat Analyzer\"\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\nThis is whatsapp chat analyzer\r\n* Count total messages\r\n* Count total message per head.\r\n* Showing as a graph\r\n* And many more\r\n\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "> Required changes done.\r\n\r\nPlease Marge this if all is right else tell where modification required.\r\nI fill very proud to contribute here (This repo is one of the top  python repo).\r\nThank you!",
      "Could I know what is the problem with this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f870aa88c0a76e0a4ebc8",
    "number": 1393,
    "body": "Ultrafast JSON Serialization - based on this [article](https://medium.com/@shmulikamar/python-serialization-benchmarks-8e5bb700530b) optimistically 3 times faster, I'm working on jupyter notebook about serialization, but so far unfinnished.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f870ba88c0a76e0a4ebc9",
    "number": 1392,
    "body": "Name:-\r\nSignale.py\r\n\r\nDescription:-\r\nElegant Console Logger For Python Command-Line Apps\r\n\r\nInstallation:-\r\nAvailable on PyPi can be installed using the command:-\r\n\r\n    `[sudo] pip install signalepy`\r\nGitHub Repository:-\r\n[Repo](https://github.com/ShardulNalegave/signale.py)\r\n\r\nCreator:-\r\n[Shardul Nalegave](https://shardul.netlify.com/)\r\n[Github Profile Page](https://github.com/ShardulNalegave)",
    "head_branch": "addProject",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f870ca88c0a76e0a4ebca",
    "number": 1391,
    "body": "## What is this Python project?\r\n\r\nAdded Security category to the repo and added Z3 to scientific category\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-security-category",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f870ca88c0a76e0a4ebcb",
    "number": 1390,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f870da88c0a76e0a4ebcc",
    "number": 1389,
    "body": "## What is this Python project?\r\n\r\nA news aggregator for the Python community\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompares to r/Python and other link sharing sites. \r\nOpen Source Django implementation is available: https://github.com/sebst/pythonic-news\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@vinta can this be merged? ",
      "@vinta can this be merged?",
      "Hey @vinta! This has more than 20  👍 now ;)",
      "?",
      "@sebst I forked this repo and am willing to maintain it. you can find it here: https://github.com/DoronCohen/awesome-python. I would appreciate a pull request. thanks!"
    ],
    "commit_messages": [
      "Merge pull request #1389 from sebst/master\n\nAdd news.python.sc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f870ea88c0a76e0a4ebcd",
    "number": 1388,
    "body": "## What is this Python project?\r\n\r\nThe Plotly Python library (plotly.py) is an interactive, open-source plotting library that supports over 40 unique chart types covering a wide range of statistical, financial, geographic, scientific, and 3-dimensional use-cases.\r\n\r\nBuilt on top of the Plotly JavaScript library (plotly.js), plotly.py enables Python users to create beautiful interactive web-based visualizations that can be displayed in Jupyter notebooks, saved to standalone HTML files, or served as part of pure Python-built web applications using Dash.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhen thinking about plotting libraries, there are a few things we want:\r\n1. One-line charts for rapid exploration\r\n2. Interactive elements for subsetting/investigating data\r\n3. Option to dig into details as needed\r\n4. Easy customization for the final presentation.\r\n\r\nAs of right now, the best option for doing all of these in Python is Plotly. Plotly allows us to make visualizations quickly and helps us get a better insight into our data through interactivity. With other libraries, plotting turned into a tedious task, but with Plotly, there is joy in making a great figure!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f870fa88c0a76e0a4ebce",
    "number": 1387,
    "body": "## What is this Python project?\r\n\r\n[**Indico**](https://github.com/indico/indico) is:\r\n * 🗓 a general-purpose **event management** tool;\r\n * 🌍 fully **web-based**;\r\n * 🧩 **feature-rich** but also **extensible** through the use of [plugins](https://docs.getindico.io/en/stable/plugins/);\r\n * ⚖️ **Open-Source** Software under the MIT License;\r\n * <img src=\"https://raw.githubusercontent.com/indico/assets/master/cern_badge.png\" width=\"20\"> **made at CERN**, [the place where the web was born](https://home.cern/science/computing/birth-web)!\r\n\r\n![A sneak peek of Indico](https://raw.githubusercontent.com/pferreir/indico/new-readme/sneakpeek.gif)\r\n\r\n## What does it do?\r\nIndico's **main features** are:\r\n * a powerful and flexible **hierarchical content management** system for events;\r\n * a full-blown **conference organization workflow** with:\r\n   - 📢 **Call for Abstracts** and **abstract reviewing** modules;\r\n   - 📝 flexible **registration form** creation and configuration;\r\n   - 💰 integration with existing **payment systems**;\r\n   - ✅ a **paper reviewing** workflow;\r\n   - 🗓 a **drag and drop timetable management interface**;\r\n   - 🎫 a simple **badge editor** with the possibility to print badges and tickets for participants;\r\n * tools for **meeting management** and archival of presentation materials;\r\n * a powerful **room booking** interface;\r\n * integration with existing **video conferencing solutions**;\r\n\r\nA more detailed list [can be found here](https://getindico.io/features/). There is also a [video](https://www.youtube.com/watch?v=yo8rgg9dOcc)!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm not sure if there are some alternatives written in Python.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "indico",
    "is_a_fork": true,
    "comments": [
      "Hello @vinta,\r\nCan you please review this PR?\r\nThank you!",
      "**Indico 2.2.5** [has been released](https://github.com/indico/indico/releases/tag/v2.2.5) :tada:",
      ":+1: ",
      "@Jamim I forked this repo and am willing to maintain it. you can find it here: https://github.com/DoronCohen/awesome-python. I would appreciate a pull request. thanks!"
    ],
    "commit_messages": [
      "Merge pull request #1387 from Jamim/indico\n\nAdd Indico"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8710a88c0a76e0a4ebcf",
    "number": 1386,
    "body": "I'm suggesting that that you remove a dead resource.  The URL no longer exists.  ",
    "head_branch": "remove_Hackers_link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1386 from c0a3bd/remove_Hackers_link\n\nremoved Resource > Website > Python Hackers due to dead link (status …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8710a88c0a76e0a4ebd0",
    "number": 1385,
    "body": "\r\n\r\n## What is this Python project?\r\n\r\nJet Admin is a SaaS service that automatically generates extendable back office for your application. Jet Bridge is a standalone app which generates REST API thought which your SQL database is connected to Jet Admin. All you need is to install Jet Bridge adapter and connect it to your database.\r\nMore here https://github.com/jet-admin/jet-bridge\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Powerful dashboard out-of-the-box\r\n- Nice and responsive UI\r\n- With WYSIWYG interface customization your can change almost every part of interface\r\n- Flex Features allows you to create your custom Actions, Views, Fields and other\r\n- Works with any technology: the interface is generated automatically based on an analysis of the data and data structure of your database\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "👍🏻",
      "👍🏻👍🏻👍🏻",
      "Nice👍🏻",
      "Awesome 👍🏻"
    ],
    "commit_messages": [
      "Merge pull request #1385 from f1nality/patch-2\n\nAdd jet-bridge"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8711a88c0a76e0a4ebd1",
    "number": 1384,
    "body": "## What is this Python project?\r\n\r\nChatterBot is a machine learning, conversational dialog engine for creating chat bots.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nChatterBot uses Machine Learning features, which increase up your time advantage and quality accuracy\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-chatterbot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8712a88c0a76e0a4ebd2",
    "number": 1383,
    "body": "## What is this Python project?\r\n\r\nPython function cache toolkit.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8713a88c0a76e0a4ebd3",
    "number": 1382,
    "body": "## What is this Python project?\r\n\r\nPython function cache toolkit.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8714a88c0a76e0a4ebd4",
    "number": 1381,
    "body": "[httpx](https://github.com/encode/httpx) is an HTTP client library that provides a mostly requests-compatible API. Some of its notable features can be seen [here](https://github.com/encode/httpx#features). These include supporting both synchronous and asynchronous code.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a 👍 to it.",
    "head_branch": "add-httpx",
    "is_a_fork": true,
    "comments": [
      "Bump."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8714a88c0a76e0a4ebd5",
    "number": 1380,
    "body": "",
    "head_branch": "python",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8715a88c0a76e0a4ebd6",
    "number": 1379,
    "body": "\r\n",
    "head_branch": "new-dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8716a88c0a76e0a4ebd7",
    "number": 1378,
    "body": "## What is this Python project?\r\n\r\n[MLflow](https://github.com/mlflow/mlflow) is an open source platform to streamline machine learning development, including tracking experiments, packaging code into reproducible runs, and sharing and deploying models. \r\n\r\nMLflow is the most comprehensive, platform agnostic project with the aims of encompassing, on a single platform, three main components of the ML lifecycle:  \r\n\r\n* MLflow Tracking: An API to log parameters, code, and results in machine learning experiments and compare them using an interactive UI.\r\n\r\n* MLflow Projects: A code packaging format for reproducible runs using Conda and Docker, so you can share your ML code with others.\r\n\r\n* MLflow Models: A model packaging format and tools that let you easily deploy the same model (from any ML library) to batch and real-time scoring on platforms such as Docker, Apache Spark, Azure ML and AWS SageMaker.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* MLOps is still a domain in its early stages but some tools already exist based on the Kubernetes containerised ecosystem:\r\n  * [Kubeflow](https://github.com/kubeflow/) \r\n  * [Pachyderm](https://github.com/pachyderm/pachyderm) \r\n  * [Polyaxon](https://github.com/polyaxon/polyaxon)  \r\n\r\nThe fact that they're based on Kubernetes appears to be somewhat of a barrier for small scale Data Science teams, whilst with MLflow an individual contributor can easily setup a single tracking server for their own experiments. They also tend to be more Deep Learning oriented. An advantage of Pachyderm is that it provides data reproducibility (apart from the code + model reproducibility provided by MLflow).\r\n\r\n* [Sacred](https://github.com/IDSIA/sacred) provides experimentation logging, but doesn't provide model packaging and sharing or the possibility of creating reproducible projects with your ML code for other people to use. Also you'd need a frontend (see next entry) to visualise and track your experiments, which is already provided by MLflow tracking server.\r\n\r\n* [Ombniboard](https://github.com/vivekratnavel/omniboard) would only provide the frontend.\r\n\r\nSome other nice tools exist but they're library specific, e.g. to track specific frameworks' simulations: [TensorBoard](https://www.tensorflow.org/tensorboard) and in the domain of model deployment [TFX](https://www.tensorflow.org/tfx) for TensorFlow. \r\n\r\n\r\n---- \r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8717a88c0a76e0a4ebd8",
    "number": 1377,
    "body": "## What is this Python project?\r\n\r\nAn agile/flexibel project management platform.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are not many similar project. [Trac](https://trac.edgewall.org/) might be close but Taiga is much more flexible and general.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8718a88c0a76e0a4ebd9",
    "number": 1376,
    "body": "## What is this Python project?\r\n[Inspector Tiger](https://github.com/thg-consulting/inspectortiger) is a modern python code review tool / framework. (thg-consulting/inspectortiger#12)\r\n## What's the difference between this Python project and similar ones?\r\nIt is not a linter that warns you about whitespace nor finds that contains errors. It is a linter that helps you to find out which parts can be improvable and not pythonic. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "hey @vinta , why this PR closed?",
      "@vinta ping\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8718a88c0a76e0a4ebda",
    "number": 1375,
    "body": "## What is this Python project?\r\n\r\nThis project provides higher order functions like map, filter, foldl, sort_by and take_while as simple command-line tools. Following the UNIX philosophy, these commands are designed to be composed via pipes. A large collection of functions such as basename, replace, contains or is_dir are provided as arguments to these commands.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project extends your command line with new higher order functions to easily manipulate text streams.\r\n\r\n## Demo\r\n\r\n<a href=\"https://asciinema.org/a/6zsp3hEPpM7tmWHrjThl7idqh\" target=\"_blank\"><img src=\"https://asciinema.org/a/6zsp3hEPpM7tmWHrjThl7idqh.png\" width=\"600\" /></a>\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "shell-functools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8719a88c0a76e0a4ebdb",
    "number": 1374,
    "body": "## What is this Python project?\r\n\r\nCreate simple repeatable tasks in a Bakefile similar to a Makefile with new features and improvements.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* A Bakefile, which looks and feels like the good parts of a Makefile.\r\n* Except, you can write real bash code!      Any and all syntax is accepted — no magic going on here. ;)\r\n* Unlike Makefile, you may utilize      [ 4 × U+0020 a.k.a. “spaces”] for indentation.\r\n* Environment variables are explicitly passed or whitelisted (--allow), not inherited from the parent shell.\r\n* Tasks can be run safely and reliably. Rest assured that scripts are executed from the project root directory.\r\n* There are many other benefits to this design, that have yet to be expressed in this document.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f871aa88c0a76e0a4ebdc",
    "number": 1373,
    "body": "## What is this Python project?\r\n\r\nPySnooper is a debug/logging Library that logs function execution line by line along with Variable value changes.\r\n[PySnooper on GitHub](https://github.com/cool-RR/PySnooper)\r\n#1285 \r\n## What's the difference between this Python project and similar ones?\r\n\r\nPySnooper Requires almost no setup.\r\nfor example, to log the execution of a function all that would be required is:\r\n\r\n```\r\nimport pysnooper\r\n\r\n@pysnooper.snoop()\r\ndef is_prime(number):\r\n    # function definition ...\r\n```\r\nevery call of the function will get automatically logged.\r\n\r\nit also includes many other features which make life a lot simpler such as:\r\n\r\n- Redirecting output to a file\r\n\r\n- Tracking Variables which aren't local to a function\r\n\r\n- Prefix for lines to make them easily searchable\r\n\r\n- Thread info for multi threadded applications\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Duplicate of #1296 , please vote on that one :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f871ba88c0a76e0a4ebdd",
    "number": 1372,
    "body": "## What is this Python project?\r\n\r\nArrow, date and time handling\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWell designed and convenient API \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f871ba88c0a76e0a4ebde",
    "number": 1371,
    "body": "## What is this Python project?\r\n\r\nThe webbrowser module includes functions to open URLs in interactive browser applications. The module includes a registry of available browsers, in case multiple options are available on the system. It can also be controlled with the BROWSER environment variable.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe URL is opened in a browser window, and that window is raised to the top of the window stack. An existing window will be reused, if possible, but the actual behavior may depend on your browser’s settings.\r\nIf for some reason your application needs to use a specific browser, you can access the set of registered browser controllers using the get() function. The browser controller has methods to open(), open_new(), and open_new_tab().\r\nUsers can control the module from outside your application by setting the environment variable BROWSER to the browser names or commands to try.\r\nAll of the features of the webbrowser module are available via the command line as well as from within your Python program.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "akshgpt7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f871ca88c0a76e0a4ebdf",
    "number": 1370,
    "body": "## What is this Python project?\r\nThe webbrowser module includes functions to open URLs in interactive browser applications. The module includes a registry of available browsers, in case multiple options are available on the system. It can also be controlled with the BROWSER environment variable.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThe URL is opened in a browser window, and that window is raised to the top of the window stack. An existing window will be reused, if possible, but the actual behavior may depend on your browser’s settings.\r\nIf for some reason your application needs to use a specific browser, you can access the set of registered browser controllers using the get() function. The browser controller has methods to open(), open_new(), and open_new_tab().\r\nUsers can control the module from outside your application by setting the environment variable BROWSER to the browser names or commands to try.\r\nAll of the features of the webbrowser module are available via the command line as well as from within your Python program.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "akshgpt7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f871da88c0a76e0a4ebe0",
    "number": 1369,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-jsonbender",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f871ea88c0a76e0a4ebe1",
    "number": 1368,
    "body": "## What is this Python project?\r\n\r\nBinds PortAudio to Python\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f871ea88c0a76e0a4ebe2",
    "number": 1366,
    "body": "## What is this Python project?\r\n\r\nVaex is a python library for lazy Out-of-Core DataFrames (similar to Pandas), to visualize and explore big tabular datasets.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nVaex uses memory mapping, a zero memory copy policy, and lazy computations for best performance.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f871fa88c0a76e0a4ebe3",
    "number": 1365,
    "body": "## What is this Python project?\r\n\r\nDontpady is an simple CLI application to use [dontpad](https://dontpad.com)\r\nIt's possible to save text files and text input using a password to encrypt\r\n\r\nFreatures:\r\n\r\n*Write* from stdin input\r\n*Write* from text file\r\n*Write and read* using a crypt key\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. On dontpady (mine) you can write on repo directly from a file\r\n2. On dontpady you can crypt you repo using a key, the hash is simple but usefull\r\n3. On dontpady you can read or save an repo text easily\r\n\r\nComparisons:\r\n\r\nhttps://github.com/GuilhermeFreire/dontpad (not updated since 10 months)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8720a88c0a76e0a4ebe4",
    "number": 1364,
    "body": "I found this library useful, so hopefully, others can too. :)\r\n\r\n## What is this Python project?\r\n\r\nJust a new library that I found useful.\r\n\r\nDescribe features.\r\n\r\nIt can convert numbers to words and help with grammar and text processing.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDeals with plurals, and all different types of words.\r\n\r\nEnumerate comparisons.\r\n\r\nQuoting its PyPi page, \r\n\r\n- plural plural_noun plural_verb plural_adj singular_noun no num\r\n- compare compare_nouns compare_nouns compare_adjs\r\n- a an\r\n- present_participle\r\n- ordinal number_to_words\r\n- join\r\n- inflect classical gender\r\n- defnoun defverb defadj defa defan\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8721a88c0a76e0a4ebe5",
    "number": 1363,
    "body": "added Django-Kaio - Class based settings for Django projects that can be read from multiple sources.",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8722a88c0a76e0a4ebe6",
    "number": 1362,
    "body": "added Django cachalot - Caches your Django ORM queries and automatically invalidates them.\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8723a88c0a76e0a4ebe7",
    "number": 1361,
    "body": "added Puput, Puput is a powerful and simple Django app to manage a blog. It uses the awesome Wagtail CMS as content management system.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8723a88c0a76e0a4ebe8",
    "number": 1360,
    "body": "This addresses issue #1324 \r\n\r\nFrom PyWin32's [SourceForge page](https://sourceforge.net/projects/pywin32/):\r\n\r\n> This project has been migrated to github - please visit https://github.com/mhammond/pywin32",
    "head_branch": "update-pywin32-link",
    "is_a_fork": true,
    "comments": [
      "This needs to be merged to send people to the correct url.\r\n\r\nPyWin32 moved to github on release 222, Jan 20, 2018\r\nhttps://mail.python.org/pipermail/python-win32/2018-January/013974.html\r\n",
      "I maintain pywin32 and the github URL is the correct URL."
    ],
    "commit_messages": [
      "Merge pull request #1360 from ebogucka/update-pywin32-link\n\nUpdate PyWin32 link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8724a88c0a76e0a4ebe9",
    "number": 1359,
    "body": "This addresses issue #1205 \r\n\r\nThe new podcast location ([Test and Code](https://testandcode.com/)) was already on the list.",
    "head_branch": "remove-testing-python",
    "is_a_fork": true,
    "comments": [
      "The link for `python testing` is still there. It hasn't been removed yet."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8725a88c0a76e0a4ebea",
    "number": 1358,
    "body": "## What is this Python project?\r\n\r\nDynaconf is a friendlier configuration system write in python support by Red Hat members and a good community.\r\n\r\n**dynaconf** a layered configuration system for Python applications -\r\nwith strong support for [12-factor applications](https://12factor.net/config)\r\nand extensions for **Flask** and **Django**.\r\n\r\n# Features\r\n\r\n- Strict separation of settings from code (following [12-factor applications](https://12factor.net/config) Guide).\r\n- Define comprehensive default values.\r\n- Store parameters in multiple file formats (**.toml**, .json, .yaml, .ini and .py).\r\n- Sensitive **secrets** like tokens and passwords can be stored in safe places like `.secrets` file or `vault server`.\r\n- Parameters can optionally be stored in external services like Redis server.\r\n- Simple **feature flag** system.\r\n- Layered **[environment]** system.\r\n- Environment variables can be used to override parameters.\r\n- Support for `.env` files to automate the export of environment variables.\r\n- Correct data types (even for environment variables).\r\n- Have **only one** canonical settings module to rule all your instances.\r\n- Drop in extension for **Flask** `app.config` object.\r\n- Drop in extension for **Django** `conf.settings` object.\r\n- Powerful **$ dynaconf** CLI to help you manage your settings via console.\r\n- Customizable **Validation** System to ensure correct config parameters.\r\n- Allow the change of **dyna**mic parameters on the fly without the need to redeploy your application.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Customization configurations\r\n- Configs Overloading \r\n- Integration with external systems like aws secrets, vault.\r\n- Feature Flags/Toggles\r\n\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Dynaconf is better than all the others listed here, i didn't know it existed until today."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8726a88c0a76e0a4ebeb",
    "number": 1357,
    "body": "## What is this Python project?\r\n\r\nDramatiq is a distributed task processing library for Python with a focus on simplicity, reliability and performance.\r\n\r\n\r\nDramatiq’s driving principles are as follows:\r\n\r\n    high reliability and performance\r\n    simple and easy to understand core\r\n    convention over configuration\r\n\r\nIf you’ve ever had to use Celery in anger, Dramatiq could be the tool for you.\r\n\r\nBy: @Bogdanp\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nHere are some of the main differences between Dramatiq, Celery and RQ:\r\n\r\n\\# | Dramatiq | Celery | Huey  | RQ  \r\n--|----------|--------|-------|---\r\nPython 2 support  | No  | Yes  | Yes | Yes \r\nSimple implementation | Yes | No  | Yes | Yes \r\nAutomatic retries | Yes | No | Yes | No  \r\nReliable delivery | Yes | No  | No  | No  \r\nLocks and rate limiting | Yes | No | Yes | No  \r\nTask prioritization | Yes | No | No  | No  \r\nDelayed tasks | Yes | Yes  | Yes | No  \r\nCronlike scheduling | No  | Yes  | Yes | No  \r\nChaining / Pipelining | Yes | Yes  | Yes | No  \r\nResult storage  | Yes | Yes  | Yes | Yes \r\nCode auto-reload  | Yes | No | No  | No  \r\nRabbitMQ support  | Yes | Yes  | Yes | No  \r\nRedis support | Yes | Yes  | Yes | Yes \r\nIn-memory broker support  | Yes | No | Yes | No  \r\nGreenlet support  | Yes | Yes  | Yes | No  \r\n\r\nFor more: https://dramatiq.io/motivation.html\r\n\r\n## Realted\r\n\r\n- You can integrate with Django: https://github.com/Bogdanp/django_dramatiq\r\n- It has a dashboard: https://github.com/Bogdanp/dramatiq_dashboard\r\n- Schedule tasks with APScheduler: https://defn.io/2018/01/11/dramatiq-cron/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "douglasmiranda-add-dramatiq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8727a88c0a76e0a4ebec",
    "number": 1352,
    "body": "## What is this Python project?\r\n[python-benedict](https://github.com/fabiocaccamo/python-benedict/) is a `dict` subclass with **keypath** support, **I/O methods** *(read/write json, toml, xml, yaml)* and **many utilities**.\r\n\r\n### Features\r\n-   Full **keypath** support *(using the dot syntax by default)*\r\n-   Easy **I/O operations** with most common formats: `json`, `toml`, `xml`, `yaml`\r\n-   Many **utility** and **parse methods** to retrieve data as needed *(all methods listed below)*\r\n-   100% **backward-compatible** *(you can replace existing dicts without pain)*\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know similar projects. This is an all in one solution to perform complex operation with one line of code.\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8727a88c0a76e0a4ebed",
    "number": 1351,
    "body": "## What is this Python project?\r\n\r\n* [cornac](https://cornac.preferred.ai/) - A comparative framework for multimodal recommender systems. It focuses on making it convenient to work with models leveraging auxiliary data (e.g., item descriptive text and image, social network, etc).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8728a88c0a76e0a4ebee",
    "number": 1350,
    "body": "## What is this Python project?\r\n\r\nA library and command-line utility for rendering projects templates. \r\nhttps://github.com/pykong/copier\r\n\r\n* Works with **local** paths and **git URLs** (GitHub, GitLab, etc.)\r\n* Your project can include any kind of file and the text-based files can have placeholders values to be replaced with user's data.\r\n* It can be used as a library and called from your own projects (instant superpower! 🚀).\r\n* It generates a beautiful output and take care of not overwrite existing files, unless instructed to do so:\r\n<img src=\"https://github.com/jpscaletti/copier/raw/master/copier-output.png\" alt=\"Sample output\" width=600>\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. It can partially update an already rendered project.\r\n1. It shows you what fields are being created or updated instead of just overwriting everything.\r\n1. Can be used as a library.\r\n1. Can be customized with any default data, not only what you ask the user.\r\n\r\n---\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "copier",
    "is_a_fork": true,
    "comments": [
      "@vinta Hey, could you plz have a look into this **PR**?",
      "@vinta Ist there any update on this? When can `copier` join the awesome list?",
      "@vinta Could you give us any update on when `copier` is going to join *awesome-python*?",
      "@vinta Hey, could you please have a look here? Thank you.",
      "ping @vinta ",
      "ping @vinta ",
      "Someday in the year 2325: Users post a ping into this thread which has by then grown to more than three million posts. No one remembers anymore where this tradition originated from but it eventually became on the internet's longest prevailing running gags.",
      "Unfortunately vinta has his own opinion - https://github.com/vinta/awesome-python/issues/1444 :-/",
      "@jpscaletti I forked this repo and am willing to maintain it. you can find it here: https://github.com/DoronCohen/awesome-python. I would appreciate a pull request. thanks!",
      "\r\n\r\n@pykong would you do the honors?",
      "I did it in https://github.com/DoronCohen/awesome-python/pull/1",
      "Ping @pykong @Jamim https://github.com/DoronCohen/awesome-python/pull/1",
      "@jpsca Can you change the URL to https://github.com/copier-org/copier plz, as I have moved copier to a dedicated organization by now.",
      "> @jpsca Can you change the URL to https://github.com/copier-org/copier plz, as I have moved copier to a dedicated organization by now.\r\n\r\n@pykong  Sadly, I no longer can edit this PR, since I deleted the old account that made it :disappointed:\r\nIdeally, @vinta could update the URL at merge. :pray: "
    ],
    "commit_messages": [
      "Merge pull request #1350 from ghost/copier\n\nAdd copier"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8729a88c0a76e0a4ebef",
    "number": 1349,
    "body": "## What is this Python project?\r\n\r\n[awesome-python-typing](https://github.com/typeddjango/awesome-python-typing) is a collection of awesome Python types, stubs, plugins, and tools to work with them.\r\n\r\n<img width=\"614\" alt=\"Снимок экрана 2019-09-11 в 16 44 10\" src=\"https://user-images.githubusercontent.com/4660275/64702540-675ea080-d4b3-11e9-9c42-cf8d38325036.png\">\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons: \r\n\r\n- None\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1349 from sobolevn/patch-2\n\nAdds awesome-python-typing link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f872aa88c0a76e0a4ebf0",
    "number": 1348,
    "body": "## What is this Python project?\r\n\r\nThe strictest and most opinionated python linter ever!\r\nRepo: https://github.com/wemake-services/wemake-python-styleguide\r\nDocs: https://wemake-python-stylegui.de/en/latest/\r\nPyPI: https://pypi.org/project/wemake-python-styleguide\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n<img width=\"866\" alt=\"Снимок экрана 2019-09-09 в 14 50 12\" src=\"https://user-images.githubusercontent.com/4660275/64528428-29297b80-d311-11e9-932a-007d89204ab7.png\">\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a 👍 to it, and usually, the maintainer will merge it when votes reach 20.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "> There should be one-- and preferably only one --obvious way to do it.\r\n\r\nThis tool is designed with high respect to Python Zen and it's cool. Like it!",
      "@vinta 20 👍 is reached 🙂 \r\n\r\nThanks everyone!",
      "@vinta friendly ping. How's the status of this PR?"
    ],
    "commit_messages": [
      "Merge pull request #1348 from sobolevn/patch-1\n\nAdds wemake-python-styleguide"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f872ba88c0a76e0a4ebf1",
    "number": 1346,
    "body": "## What is this Python project?\r\n\r\nPyinstrument is a Python profiler. A profiler is a tool to help you 'optimize' your code - make it faster. It sounds obvious, but to get the biggest speed increase you should [focus on the slowest part of your program](https://en.wikipedia.org/wiki/Amdahl%27s_law). Pyinstrument helps you find it!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nProfiler with very good performance and low overhead, several output formats (text, json, html) and ability to profile a specific chunk of code.\r\n\r\n![imagen](https://user-images.githubusercontent.com/1483414/64417137-d3e33500-d098-11e9-901d-09625ed4e4de.png)\r\n\r\nPyinstrument is a statistical profiler - it doesn't track every function call that your program makes. Instead, it's recording the call stack every 1ms.\r\n\r\nThat gives some advantages over other profilers. Firstly, statistical profilers are much lower-overhead than tracing profilers.\r\n\r\n|              | Django template render × 4000                      | Overhead\r\n| -------------|:---------------------------------------------------|---------:\r\n| Base         | `████████████████                       `  0.33s   | \r\n|              |                                                    |\r\n| pyinstrument | `████████████████████                   `  0.43s   |      30%\r\n| cProfile     | `█████████████████████████████          `  0.61s   |      84%\r\n| profile      | `██████████████████████████████████...██`  6.79s   |    2057%\r\n\r\nBut low overhead is also important because it can distort the results. When using a tracing profiler, code that makes a lot of Python function calls invokes the profiler a lot, making it slower. This distorts the results, and might lead you to optimise the wrong part of your program!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "> \r\n> \r\n> This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\r\n\r\nWhat is the period of inactivity to close the PR?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f872ba88c0a76e0a4ebf2",
    "number": 1345,
    "body": "## What is this Python project?\r\n\r\nThe ML workspace is an all-in-one web-based IDE specialized for machine learning and data science with Python. It is simple to deploy and gets you started within minutes to productively built ML solutions on your own machines. This workspace is the ultimate tool for developers preloaded with a variety of popular data science libraries (e.g., Tensorflow, PyTorch, Keras, Sklearn) and dev tools (e.g., Jupyter, VS Code, Tensorboard) perfectly configured, optimized, and integrated.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Combines various common (open-source) development tools (Jupyter, JupyterLab, VS Code, ...) into one integrated Docker container. \r\n- Completely web-based with a high extensibility and lots of features.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f872ca88c0a76e0a4ebf3",
    "number": 1344,
    "body": "## What is this Python project?\r\n\r\nThe ML workspace is an all-in-one web-based IDE specialized for machine learning and data science with Python. It is simple to deploy and gets you started within minutes to productively built ML solutions on your own machines. This workspace is the ultimate tool for developers preloaded with a variety of popular data science libraries (e.g., Tensorflow, PyTorch, Keras, Sklearn) and dev tools (e.g., Jupyter, VS Code, Tensorboard) perfectly configured, optimized, and integrated.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Combines various common (open-source) development tools (Jupyter, JupyterLab, VS Code, ...) into one integrated Docker container. \r\n- Completely web-based with a high extensibility and lots of features.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Duplicate."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f872da88c0a76e0a4ebf4",
    "number": 1343,
    "body": "Add a _Dynamic Analysis_ section and include [`parameters-validation`](https://github.com/allrod5/parameters-validation) lib to it.\r\n\r\n## What is this Python project?\r\n\r\nparameters-validation lib eases function parameters validation regarding type, content and/or any other custom validations one may wish to perform.\r\n\r\nIt leverages type-hint annotations to provide a clean and unobstructive way to adopt the [*Look Before You Leap* principle](https://docs.python.org/3/glossary.html#term-lbyl) when you need to.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar projects currently. Usually, the developer will write their own validation helper functions and manually call'em. While this is fine, the end result pollutes function bodies with validation actions that are not the core responsibility of a function. Nevertheless, there are simple validations (such as checking if a string is not blank or that a number is not negative) that will be kinda frequent and repeated all over different projects while performing exactly the same functionality.\r\n\r\n`parameters-validation` lib enables removing the validation logic from the function body, explicitly stating validations upfront in the function signature and provides ready-to-use common validations.\r\n\r\nHere a simple comparison between runtime validations with and without using `parameters-validation`:\r\n\r\n```python\r\n\"\"\"\r\nUsing parameters-validation lib: clean and explicit way of declaring\r\nand performing runtime validations\r\n\"\"\"\r\n@validate_parameters\r\ndef register(\r\n    token: strongly_typed(AuthToken),\r\n    name: non_blank(str),\r\n    age: non_negative(int),\r\n    nickname: no_whitespaces(non_empty(str)),\r\n    bio: str,\r\n):\r\n    # do register\r\n```\r\n\r\n```python\r\n\"\"\"\r\nAdding validation code directly at the function body: explicit on the\r\nvalidations but pollutes the function body\r\n\"\"\"\r\n@validate_parameters\r\ndef register(\r\n    token: AuthToken,\r\n    name: str,\r\n    age: int,\r\n    nickname: str,\r\n    bio: str,\r\n):\r\n    if not isinstance(token, AuthToken):\r\n        raise TypeError(\"Parameter 'token' must be of type 'AuthToken'\")\r\n    if not bool(name and name.strip()):\r\n        raise ValueError(\"Parameter 'name' cannot be blank nor empty\")\r\n    if age < 0:\r\n        raise ValueError(\"Parameter 'age' cannot be negative\")\r\n    if not nickname:\r\n        raise ValueError(\"Paramater 'nickname' cannot be empty\")\r\n    if \" \" in nickname:\r\n        raise ValueError(\"Parameter 'nickname' cannot contain whitespaces\")\r\n    # do register\r\n```\r\n\r\n```python\r\n\"\"\"\r\nAdding validation code in a helper function: implicit on the\r\nvalidations pollutes outer scope of the function with the companion\r\nhelper function. The companion helper is harder to keep in sync\r\nwith the register function and duplicates parameters declarations\r\n\"\"\"\r\n_validate_register_parameters(\r\n    token: AuthToken,\r\n    name: str,\r\n    age: int,\r\n    nickname: str,\r\n    bio: str,\r\n):\r\n    if not isinstance(token, AuthToken):\r\n        raise TypeError(\"Parameter 'token' must be of type 'AuthToken'\")\r\n    if not bool(name and name.strip()):\r\n        raise ValueError(\"Parameter 'name' cannot be blank nor empty\")\r\n    if age < 0:\r\n        raise ValueError(\"Parameter 'age' cannot be negative\")\r\n    if not nickname:\r\n        raise ValueError(\"Paramater 'nickname' cannot be empty\")\r\n    if \" \" in nickname:\r\n        raise ValueError(\"Parameter 'nickname' cannot contain whitespaces\")\r\n\r\n@validate_parameters\r\ndef register(\r\n    token: AuthToken,\r\n    name: str,\r\n    age: int,\r\n    nickname: str,\r\n    bio: str,\r\n):\r\n    _validate_register_parameters(token, name, age, nickname, bio)\r\n    # do register\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f872ea88c0a76e0a4ebf5",
    "number": 1342,
    "body": "## What is this Python project?\r\n\r\nIt's a new kind of progress bar, with real-time throughput, eta and very cool animations!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt got more than 250⭐️ in less than a month!\r\nTake a look: https://github.com/rsalmei/alive-progress\r\n\r\n![alive-progress](https://raw.githubusercontent.com/rsalmei/alive-progress/master/img/main.gif)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "rsa-add-alive-progress",
    "is_a_fork": true,
    "comments": [
      "Hey @vinta, could we merge this?",
      "Hey @vinta , any news on this one?",
      "Hello? Is there anybody here?",
      "Really?",
      "@vinta could you please take a look at this?",
      "???\r\nYou said 20 was the number, there are already 25 and nothing was done.\r\nPLEASE, could you take a look at this?\r\n@vinta ",
      "So, @vinta ?",
      "Could you @vinta explain why is this closed? 25 👍 ",
      "Hello, could someone reopen and merge this, please? @vinta \r\nMy project [alive-progress](https://github.com/rsalmei/alive-progress) has more than 600⭐ now.",
      "Created a new pull request in #1552."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f872fa88c0a76e0a4ebf6",
    "number": 1341,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f872fa88c0a76e0a4ebf7",
    "number": 1340,
    "body": "## What is this Python project?\r\n\r\nPySnooper lets you print values except instead of carefully crafting the right print lines, you just add one decorator line to the function you're interested in. You'll get a play-by-play log of your function, including which lines ran and when, and exactly when local variables were changed.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nJust slap the decorator on, as shown below, and redirect the output to a dedicated log file by specifying its path as the first argument.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_pysnooper",
    "is_a_fork": true,
    "comments": [
      "See also https://github.com/search?q=topic%3Apython+topic%3Adebug =)",
      "@Jamim sounds good! Thanks for the reminding.\r\n@techtonik really appreciate for the reference."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8730a88c0a76e0a4ebf8",
    "number": 1339,
    "body": "## What is this Python project?\r\nA quick grammar fix.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n--\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "hotfix/grammar-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1339 from koreissm/hotfix/grammar-fix\n\nHotfix/grammar fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8731a88c0a76e0a4ebf9",
    "number": 1338,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8732a88c0a76e0a4ebfa",
    "number": 1337,
    "body": "## What is this Python project?\r\n\r\nThis project provide list of flake8 extensions, which could be used with [flake-8](http://flake8.pycqa.org/en/latest/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1337 from DmytroLitvinov/patch-1\n\nAdd awesome-flake8-extensions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8733a88c0a76e0a4ebfb",
    "number": 1336,
    "body": "# What is this Python project?\r\n\r\nNeuraxle is a Machine Learning (ML) library for building neat pipelines, providing the right abstractions to both ease research, development, and deployment of your ML applications. Features: \r\n- Better hyperparameter space handling\r\n- Composite design pattern for steps in a pipeline\r\n- Streaming pipelines where all data can flow (not just like a block all at once)\r\n- AutoML algorithms to launch hyperparameter search\r\n- Meta pipeline steps as meta-optimizers for AutoML\r\n- (soon) Vizualisation of hyperparameter correlation\r\n- (soon) Automatic REST API serving of models\r\n\r\n# What's the difference between this Python project and similar ones?\r\n\r\n## Production-ready\r\n\r\nMost research projects don't ever get to production. However, you want\r\nyour project to be production-ready and already adaptable (clean) by the\r\ntime you finish it. You also want things to be simple so that you can\r\nget started quickly.\r\n\r\nMost existing machine learning pipeline frameworks are either too simple\r\nor too complicated for medium-scale projects. Neuraxle is balanced for\r\nmedium-scale projects, providing simple, yet powerful abstractions that\r\nare ready to be used.\r\n\r\n## Compatibility\r\n\r\n> Neuraxle is built as a framework that enables you to define your own pipeline steps.\r\n\r\nThis means that you can use [scikit-learn](https://scikit-learn.org/stable/), [Keras](https://keras.io/), [TensorFlow](https://www.tensorflow.org/), [PyTorch](https://pytorch.org/) and/or **any other machine learning library** you like within and throughout your Neuraxle pipelines.\r\n\r\n## Parallel Computing\r\n\r\nNeuraxle offer multiple parallel processing features using [joblib](https://joblib.readthedocs.io/en/latest/parallel.html). Most parallel processing in Neuraxle happens in the [pipeline](https://www.neuraxle.neuraxio.com/stable/api/neuraxle.pipeline.html) and [union](https://www.neuraxle.neuraxio.com/stable/api/neuraxle.union.html) modules, and as such, neuraxle can be easily parallelized on a cluster of computers using [distributed](https://ml.dask.org/joblib.html) as its [joblib backend](https://ml.dask.org/joblib.html).\r\n\r\n## Automatic Machine Learning\r\n\r\nOne of the core goal of this framework is to enable easy automatic\r\nmachine learning, and also meta-learning. It should be easy to train a\r\nmeta-optimizer on many different tasks: the optimizer is a model itself\r\nthat maps features of datasets and features of the hyperparameter space\r\nto a guessed performance score to predict the best hyperparameters.\r\nHyperparameter spaces are easily defined with a range, and are only\r\ncoupled to their respective pipeline steps, rather than being coupled to\r\nthe whole pipeline, which enable class reuse and more modularity.\r\n\r\n## Comparison to Other Machine Learning Pipeline Frameworks\r\n\r\n### scikit-learn\r\n\r\nEverything that works in sklearn is also useable in Neuraxle. Neuraxle\r\nis built in a way that does not replace what already exists. Therefore,\r\nNeuraxle adds more power to scikit-lean by providing neat abstractions,\r\nand neuraxle is even retrocompatible with sklean if it ever needed to be\r\nincluded in an already-existing sklearn pipeline (you can do that by\r\nusing ``.tosklearn()`` on your Neuraxle pipeline). We believe that\r\nNeuraxle helps scikit-learn, and also scikit-learn will help Neuraxle.\r\nNeuraxle is best used with scikit-learn.\r\n\r\nAlso, the top core developers of scikit-learn, Andreas C. Müller, [gave a talk](https://www.youtube.com/embed/Wy6EKjJT79M) in which \r\nhe lists the elements that are yet to be done in scikit-learn. He refers to\r\nbuilding bigger pipelines with automatic machine learning, meta\r\nlearning, improving the abstractions of the search spaces, and he also\r\npoints out that it would be possible do achieve that in another library\r\nwhich could reuse scikit-learn. Neuraxle is here to solve those problems\r\nthat are actually shared by the open-source community in general. Let's\r\nmove forward with Neuraxle: join Neuraxle's [community](https://www.neuraxle.neuraxio.com/stable/Neuraxle/README.html#community).\r\n\r\n[![](http://i3.ytimg.com/vi/Wy6EKjJT79M/maxresdefault.jpg)](https://www.youtube.com/embed/Wy6EKjJT79M?start=1361&amp;end=1528)\r\n[https://www.youtube.com/embed/Wy6EKjJT79M?start=1361&amp;end=1528](https://www.youtube.com/embed/Wy6EKjJT79M?start=1361&amp;end=1528)\r\n\r\n\r\n### Apache Beam\r\n\r\nApache Beam is a big, multi-language project and hence is complicated.\r\nNeuraxle is pythonic and user-friendly: it's easy to get started.\r\n\r\nAlso, it seems that Apache Beam has GPL and MPL dependencies, which\r\nmeans Apache Beam might itself be copyleft (?). Neuraxle doesn't have\r\nsuch copyleft dependencies.\r\n\r\n### spaCy\r\n\r\nspaCy has copyleft dependencies or may download copyleft content, and it\r\nis built only for Natural Language Processing (NLP) projects. Neuraxle\r\nis open to any kind of machine learning projects and isn't an NLP-first\r\nproject.\r\n\r\n### Kubeflow\r\n\r\nKubeflow is cloud-first, using Kubernetes and is more oriented towards\r\ndevops. Neuraxle isn't built as a cloud-first solution and isn't tied to\r\nKubernetes. Neuraxle instead offers many parallel processing features,\r\nsuch as the ability to be scaled on many cores of a computer, and even\r\non a computer cluster (e.g.: in the cloud using any cloud provider) with\r\njoblib, using dask's distributed library as a joblib backend. A Neuraxle\r\nproject is best deployed as a microservice within your software\r\nenvironment, and you can fully control and customize how you deploy your\r\nproject (e.g.: coding yourself a pipeline step that does json conversion\r\nto accept http requests).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach 20.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Bump"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8733a88c0a76e0a4ebfc",
    "number": 1335,
    "body": "## What is this Python project?\r\n\r\n```\r\npip install ab\r\n```\r\n\r\n* Split-bucket testing (control, variant1, variant2, ...)\r\n* Multi-arm bandit testing (explore vs. exploit)\r\n* Test analysis tools (determine winning variants with statistical\r\nsignificance)\r\n\r\nFuture improvements:\r\n* Simple Reinforcement-Learning interface (similar to MAB)\r\n* Visualization tools for on-going and final test analysis\r\n\r\nThanks for considering this addition!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere have been no popular split-bucket or multi-arm bandit testing\r\nframeworks for Python, so I started `ab` and wanted to get more\r\ncontributors! Hoping awesome-python can help add more features!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "ab",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8734a88c0a76e0a4ebfd",
    "number": 1334,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "Web-framework",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8735a88c0a76e0a4ebfe",
    "number": 1331,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1331 from xatier/patch-1\n\nMinor code fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8736a88c0a76e0a4ebff",
    "number": 1330,
    "body": "ggpy is unmaintained since 2016 while plotnine is being actively\r\ndeveloped and more feature complete.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1330 from JarnoRFB/master\n\nReplace ggpy with plotnine"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8737a88c0a76e0a4ec00",
    "number": 1327,
    "body": "## What is this Python project?\r\n\r\nAn ultra fast cross-platform multiple screenshots module in pure Python using ctypes.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- No dependencies, at all.\r\n- Ultra fast (fastest on the market ^^).\r\n- Multiplatform (GNU/Linux, macOS and Windows).\r\n- Clean implementation and API.\r\n\r\nFor example, PIL has no GNU/Linux support for screencapture, and it uses an OS tool on macOS.\r\nIt is way smaller than any alternative as it uses only the ctypes module.\r\n\r\nThe module is already used by several project (computer vision, deep learning), see https://python-mss.readthedocs.io/where.html.\r\n\r\nNote: I do not know if I put the module in the good category, let me know if I need to move it elsewhere.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8738a88c0a76e0a4ec01",
    "number": 1325,
    "body": "## What is this Python project?\r\n[python-codicefiscale](https://github.com/fabiocaccamo/python-codicefiscale/) is a tiny library for encode/decode Italian fiscal code - codifica/decodifica del Codice Fiscale.\r\n\r\nFeatures:\r\n-  **Transliteration** for name/surname\r\n-  **Multiple** birthdate formats (datetime/string) *(you can see all the supported string formats in* `tests/tests.py` *)*\r\n-  **Automatic** birthplace city/foreign-country code detection from name\r\n-  **Omocodia** support\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Datetimes auto-detected from strings\r\n- City/country code autodetected from city/country name\r\n- Well tested and updated\r\n\r\nEnumerate comparisons.\r\n- [pycodicefiscale](https://github.com/ema/pycodicefiscale) (not updated since 3 years)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8738a88c0a76e0a4ec02",
    "number": 1323,
    "body": "## What is this Python project?\r\n[django-maintenance-mode](https://github.com/fabiocaccamo/django-maintenance-mode) shows a 503 error page when maintenance mode is on.\r\n\r\n## Features:\r\n-  Customizable 503 page\r\n-  Can exclude staff\r\n-  Can redirect to another url\r\n-  Can use a custom 503 template\r\n-  Can exclude IP addresses\r\n-  Can exclude superuser\r\n-  Can ignore urls\r\n-  Works at application level\r\n-  Can be activated/deactivated using commands\r\n-  Can be activated/deactivated using urls\r\n-  Works at view level\r\n-  Can work at view level\r\n-  Pluggable backends support\r\n\r\n## What's the difference between this Python project and similar ones?\r\n-  Check comparisons on [django-packages](https://djangopackages.org/grids/g/maintenance-mode/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8739a88c0a76e0a4ec03",
    "number": 1322,
    "body": "## What is this Python project?\r\n[django-admin-interface](https://github.com/fabiocaccamo/django-admin-interface) is a customizable responsive admin interface, based on a modern flat theme, it lets you customize the admin title, logo and colors by the admin itself. Popup windows replaced by modals.\r\n\r\n## Features\r\n- Beautiful default **django-theme**\r\n- Themes management and customization *(you can **customize admin title, logo and colors**)*\r\n- Responsive\r\n- List filter dropdown *(optional)*\r\n- `NEW` **Related modal** *(instead of the old popup window, optional)*\r\n- `NEW` **Environment name/marker**\r\n- Compatibility / Style optimizations for:\r\n  - `django-ckeditor`\r\n  - `django-dynamic-raw-id`\r\n  - `django-modeltranslation`\r\n  - `django-tabbed-admin`\r\n  - `sorl-thumbnail`\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- It is based on the default django admin, templates are not overridden\r\n- Any admin theme can be customized to fit client needs\r\n- Multiple themes support\r\n- Well tested and keep updated\r\n\r\n### Enumerate comparisons\r\n- Check comparisons on [django-packages](https://djangopackages.org/grids/g/admin-interface/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f873aa88c0a76e0a4ec04",
    "number": 1321,
    "body": "## What is this Python project?\r\n\r\n```pdoc (pdoc3)```\r\n\r\n## What's the difference between this Python project and similar ones?\r\nAn improved version of ```pdoc``` documentation generator.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@rednafi 👍",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f873ba88c0a76e0a4ec05",
    "number": 1319,
    "body": "update pyglet address\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f873ca88c0a76e0a4ec06",
    "number": 1318,
    "body": "Hi, I'm making updates for Open Collective. Either you or another core contributor signed this repository up for Open Collective. This pull request adds financial contributors from your Open Collective https://opencollective.com/awesome-python ❤️\n\n  What it does:\n  - adds a badge to show the latest number of financial contributors\n  - adds a banner displaying contributors to the project on GitHub\n  - adds a banner displaying all individuals contributing financially on Open Collective\n  - adds a section displaying all organizations contributing financially on Open Collective, with their logo and a link to their website\n\nP.S: As with any pull request, feel free to comment or suggest changes.\n\n  Thank you for your great contribution to the Open Source community. You are awesome! 🙌\n  And welcome to the Open Collective community! 😊\n\n  Come chat with us in the #opensource channel on https://slack.opencollective.com - great place to ask questions and share best practices with other Open Source sustainers!\n  ",
    "head_branch": "opencollective",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f873ca88c0a76e0a4ec07",
    "number": 1316,
    "body": "Begins makes command interface with help, logging, and subcommands dead simple.\r\n\r\n## What is this Python project?\r\n\r\nCommand line programs for *lazy* humans.\r\n\r\n* Decorate a function to be your programs starting point.\r\n* Generate command line parser based on function signature.\r\n* Search system environment for option default values.\r\n\r\nWhy begins?\r\n\r\nI write a lot of small programs in `Python`_. These programs often accept a small number of simple command line arguments. Having to write command line parsing code in each of these small programs both breaks my train of thought and greatly increases the volume of code I am writing.\r\n\r\nBegins was implemented to remove the boilerplate code from these Python programs. It's not intended to replace the rich command line processing needed for larger applications.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimple and powerful.   Give it a try.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @importpublicusername,\r\n\r\nUnfortunately, there was [no activity](https://github.com/aliles/begins/branches/all) on that repo for the last five years.\r\nIs there any alive fork of this?\r\n\r\n**Update:**\r\nHere is the related issue: https://github.com/aliles/begins/issues/64\r\n\r\nThanks!",
      "Yes, it seems that aliles went dark based on social media activity also.  Though I have not had any problems with the .9 version that he has.  It does seem the agreed upon fork is from  sh0oki - https://github.com/sh0oki/begins\r\nLast commit was from 2017 for this fork also, but it is 22 commits ahead of aliles.  ",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f873da88c0a76e0a4ec08",
    "number": 1314,
    "body": "## What is this Python project?\r\n[python-codicefiscale](https://github.com/fabiocaccamo/python-codicefiscale/) is a tiny library for encode/decode Italian fiscal code - codifica/decodifica del Codice Fiscale.\r\n\r\nFeatures:\r\n-  **Transliteration** for name/surname\r\n-  **Multiple** birthdate formats (datetime/string) *(you can see all the supported string formats in* `tests/tests.py` *)*\r\n-  **Automatic** birthplace city/foreign-country code detection from name\r\n-  **Omocodia** support\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Datetimes auto-detected from strings\r\n- City/country code autodetected from city/country name\r\n- Well tested and updated\r\n\r\nEnumerate comparisons.\r\n- [pycodicefiscale](https://github.com/ema/pycodicefiscale) (not updated since 3 years)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hey @fabiocaccamo,\r\nWhy did you close this PR? :confused:",
      "Because there was an error to fix but I had deleted my fork.\r\nI created a new PR: https://github.com/vinta/awesome-python/pull/1325"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f873ea88c0a76e0a4ec09",
    "number": 1311,
    "body": "## What is this Python project?\r\n\r\nLoad test utility -> https://github.com/sonic182/aioload\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis tool is similar to apache bench, with a plus of drawing charts with matplotlib and pandas.\r\n\r\nThe python similar proyect is locust. The main difference is that locust is a suite for load testing and aioload is very minimal script.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Hi @vinta can this be re-opened..?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f873fa88c0a76e0a4ec0a",
    "number": 1310,
    "body": "Prophet is a time series prediction package in python developed by Facebook. It is very useful in time series analysis and predictions providing a lot of customization options.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "kaddynator-patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8740a88c0a76e0a4ec0b",
    "number": 1309,
    "body": "## What is this Python project?\r\n\r\n[cmd2](https://github.com/python-cmd2/cmd2) library for interactive command-line application development\r\n* The goal of this project is to make it quick and easy for developers to create feature-rich interactive shell applications\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Applications created are full-featured shells in their own right with ability to call shell commands, redirect command output, pipe command output to shell commands, etc.\r\n* Superior tab-completion capabilities, especially when using included `argparse` decorators\r\n* Both Python and ASCII text application scripting is built-in\r\n* Ability to run non-interactively for automation purposes\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "add-cmd2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "@vinta Hey Vinta, first off thank you for creating such a useful service for the Python community.\r\n\r\nMy understanding is that issues usually merge in once the thumbs-up votes reach 20.  This issue has met that criteria.  Is there anything further which needs to be done?\r\n\r\nThanks!",
      "@vinta Can we please re-open this?  We had 23 up-votes.  I think this should have merged other than gone stale.  And I 1 hour time between a stale warning and closing seems a bit tight."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8740a88c0a76e0a4ec0c",
    "number": 1308,
    "body": "## What is this Python project?\r\nIt points to useful Python resources curated by humans, which are easy searchable. You can follow the `python` tag to see the latest additions. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8741a88c0a76e0a4ec0d",
    "number": 1307,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Rebased against latest master."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8742a88c0a76e0a4ec0e",
    "number": 1305,
    "body": "## What is this Python project?\r\n\r\nFrappe is a full-stack, meta driven web framework for building scalable apps very quickly. Frappe is a \"batteries included\" framework which comes with inbuilt support for emails, a Calendar, ToDo list, Newsletters, Notes, File Manager, Website, Permission Control System and more.\r\n\r\nThe tech-stack is made up of:\r\n\r\n- Programming Languages: Python + Javascript\r\n- Databases Supported: MariaDB, Postgres\r\n- Webserver: Werkzeug\r\n- Templating: Jinja\r\n- Job Queues: Python RQ\r\n - CSS Framework: Bootstrap 3\r\n - Caching: Redis\r\n - Realtime: NodeJS + Socketio.js\r\n - Javascript Packaging: Rollup\r\n - Webserver (Production): gunicorn + NGINX\r\n - Process Manager (Production): supervisord\r\n - Process Manager (Develop): Honcho\r\n - Command Line: [Bench](https://github.com/frappe/bench)\r\n\r\nFrappe is the framework on top of which ERPNext, a 100% open source ERP system is built and maintained.\r\n\r\nFor more details about the framework, you can have a look at this [video](https://www.youtube.com/watch?v=Jg3nZYw8FU4)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe closest framework to Frappe would be Django/Django Admin panel.\r\n\r\nA full comparison can be viewed [here](https://www.youtube.com/watch?v=1D2EwdpV7AA).\r\n\r\nSome basic differences are:\r\n\r\n- Frappe has a CLI 'bench' to manage the server and application. Also gives the ability to switch between development and production modes.\r\n- Full-fledged UI is ready as you start the server.\r\n- Inbuilt integration for support, newsletters, email groups, ToDo list, File Manager, Blog, and calendar in ready to ship condition.\r\n- Default website/portal view ready.\r\n- Frappe implements models as Doctypes which can be built via UI instead of being coded.\r\n- Can be used easily for building list-drive business applications and rapidly deploying them. Eg: [ERPNext](https://github.com/frappe/erpnext)\r\n- Updated documentation & website: https://frappeframework.com\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "@vinta can this be reopened and added back? been quite a long time since I've submitted the original period.",
      "@vinta any chance of re-opening this? There are PRs with less 👍which are currently open.",
      "@vinta requesting you to consider opening this PR again.\r\n\r\nMore has been added to the PR description. Again, PRs with less 👍 are still open.",
      "@vinta we have the 20 👍 !",
      "@vinta the project has crossed 34 upvotes. ",
      "@vinta  still looking for an update. The branch is not stale 😅 ",
      "@vinta any timelines when this can get merged? Then criteria has been surpassed long ago and the PR's been open for 2 years+ at this point. ",
      "IMO, I don't think Frappe should be on this list. It's more than a \"framework\", like Wagtail, or Joomla (non-python example), therefore it doesn't fall into the same category as Flask, Django and Masonite. But it doesn't stop there: It tries to manage your environment for both Python and Javascript, and does both in a very poor way that hides many selections/configurations from users. It's not easy to use because it doesn't follow traditional standards followed by Python web frameworks, and also it has very poor documentation and overall support. It looks fancy, but when you actually try to use it you see that it's not exactly a Python framework, it's a weird application container/generator and definitely not something \"awesome\"."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8743a88c0a76e0a4ec0f",
    "number": 1304,
    "body": "## What is this Python project?\r\n\r\nPolyaxon is a platform for building, training, and monitoring deep learning and machine learning models.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n * Scheduling and orchestrating machine learning jobs\r\n * Tracking of hyperparams, metrics, artifacts, logs, data, ...\r\n * AutoML for doing hyperparameters optimization.\r\n * Dashboard for comparing and reproducing machine learning experiments\r\n * A pipeline engine for authoring DAGs.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8744a88c0a76e0a4ec10",
    "number": 1303,
    "body": "## What is this Python project?\r\n\r\nOpen Source book on Python and Algorithms and data structure,  including solutions for every exercise from \"Cracking the Code Interview\".\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNot aware of a similar project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_project",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8744a88c0a76e0a4ec11",
    "number": 1302,
    "body": "## What is this Python project?\r\n\r\nA build system for data science pipelines. It can build model artifacts from version controlled data and code, keep track of dependencies and rerun the necessary parts of the pipeline upon changes.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* You can version both code and data simultaneously.\r\n* Intermediate data, model files, test results are all build targets.\r\n* Build target version hashcodes are precomputed from the dependencies and all results are cached, so Prodmodel only executes what's strictly necessary.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8745a88c0a76e0a4ec12",
    "number": 1301,
    "body": "## What is this Python project?\r\n\r\n> “The centre of your data pipeline.”\r\n\r\nKedro is a workflow development tool that helps you build data pipelines that are robust, scalable, deployable, reproducible and versioned. We provide a standard approach so that you can:\r\n\r\n• spend more time building your data pipeline,\r\n• worry less about how to write production-ready code,\r\n• standardise the way that your team collaborates across your project,\r\n• work more efficiently.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWe explain how Kedro differs from other workflow schedulers and ETL frameworks in [ReadTheDocs](https://kedro.readthedocs.io/en/latest/06_resources/01_faq.html#how-does-kedro-compare-to-other-projects).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hey @vinta , would you consider merging this? We ve also recently surpassed 1.5k ⭐️😊\r\n\r\n\r\nThank you!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8746a88c0a76e0a4ec13",
    "number": 1300,
    "body": "## What is this Python project?\r\n\r\n[FastAPI](https://github.com/tiangolo/fastapi) is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe key features are:\r\n\r\n* Fast: Very high performance, on par with NodeJS and Go (thanks to Starlette and Pydantic). One of the fastest Python frameworks available.\r\n* Fast to code: Increase the speed to develop features by about 200% to 300%.\r\n* Fewer bugs: Reduce about 40% of human (developer) induced errors.\r\n* Intuitive: Great editor support. Completion everywhere. Less time debugging.\r\n* Easy: Designed to be easy to use and learn. Less time reading docs.\r\n* Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\r\n* Robust: Get production-ready code. With automatic interactive documentation.\r\n* Standards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI (previously known as Swagger) and JSON Schema.\r\n\r\nIndependent TechEmpower benchmarks show FastAPI applications running under Uvicorn [as one of the fastest Python frameworks available](https://www.techempower.com/benchmarks/#section=test&runid=7464e520-0dc2-473d-bd34-dbdfd7e85911&hw=ph&test=query&l=zijzen-7), only below [Starlette](https://www.starlette.io/) and [Uvicorn](http://www.uvicorn.org/) themselves (used internally by FastAPI). To understand more about it, see the FastAPI section [Benchmarks](https://fastapi.tiangolo.com/benchmarks/).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8747a88c0a76e0a4ec14",
    "number": 1299,
    "body": "## What is this Python project?\r\n\r\nThis is an article discussing the state of Python and how to build an e-commerce store using the Python framework, Django. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is e-commerce based (which is growing in popularity for devs looking to create their own e-comm sites rather than using traditional CMSs like Shopify or WordPress, but is really more of a resource than a project. As such, I classified it under \"Articles\"\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "nthompson196-django",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8748a88c0a76e0a4ec15",
    "number": 1298,
    "body": "## What is this Python project?\r\n\r\nERPNext is a full-featured business management solution that helps SMEs to record all their business transactions in a single system. With ERPNext, SMEs can make informed, fact-based, timely decisions to remain ahead of the competition. It serves as the backbone of a business adding strength, transparency, and control to your growing enterprise.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-erpnext",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8748a88c0a76e0a4ec16",
    "number": 1297,
    "body": "This is a grammar fix.",
    "head_branch": "fix-cli-apps-articulation",
    "is_a_fork": true,
    "comments": [
      "On Mon, 27 May 2019 04:56:45 -0700\nVinta Chen <notifications@github.com> wrote:\n\n> Merged #1297 into master.\n> \n\nthanks!\n\n-- \n-----------------------------------------------------------------\nShlomi Fish       http://www.shlomifish.org/\nhttp://www.shlomifish.org/humour/bits/New-versions-of-the-GPL/\n\nIf a million Shakespeares had to write together, they would write like a monkey.\n    — based on Stephen Wright, via Nadav Har’El.\n\nPlease reply to list if it's a mailing list post - http://shlom.in/reply .\n"
    ],
    "commit_messages": [
      "Merge pull request #1297 from shlomif/fix-cli-apps-articulation\n\nFix plurality in the CLI apps description."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8749a88c0a76e0a4ec17",
    "number": 1296,
    "body": "## What is this Python project?\r\n\r\nPySnooper is a replacement for debugging prints. Its function decorator automatically shows local variables and lines being executed.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know similar projects.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f874aa88c0a76e0a4ec18",
    "number": 1295,
    "body": "## What is this Python project?\r\n\r\nMaildown is a super simple CLI/Python API for sending emails using Amazon SES. It is the easiest way of implementing transactional emails in any project \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n- Far simpler to use than boto3\r\n- Supports markdown and Jinja syntax out of the box\r\n- Supports Css styling\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f874ba88c0a76e0a4ec19",
    "number": 1294,
    "body": "A Python package to create and modify DXF drawings, independent from the DXF version. You can open/save every DXF file without losing any content (except comments), Unknown tags in the DXF file will be ignored but preserved for saving. With this behavior it is possible to open also DXF drawings that contains data from 3rd party applications.\r\n\r\n[Quick-Info](https://github.com/mozman/ezdxf) \r\n----------\r\n\r\n- ezdxf is a Python package to create new DXF files and read/modify/write existing DXF files\r\n- the intended audience are developers\r\n- requires at least CPython 3.5, for Python 2 support use ezdxf < 0.9\r\n- OS independent\r\n- additional required packages: [pyparsing](https://pypi.org/project/pyparsing/)\r\n- MIT-License\r\n- read/write/new support for DXF versions: R12, R2000, R2004, R2007, R2010, R2013 and R2018\r\n- additional read support for DXF versions R13/R14 (upgraded to R2000)\r\n- additional read support for older DXF versions than R12 (upgraded to R12)\r\n- preserves third-party DXF content\r\n- additional fast DXF R12 writer, that creates just an ENTITIES section with support for the basic DXF entities",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f874ca88c0a76e0a4ec1a",
    "number": 1293,
    "body": "## What is this Python project?\r\n\r\nEasily add progress bars to python and console scripts.\r\n\r\n## What's the difference between this project and similar ones?\r\n\r\n- negligible overhead\r\n- easily extensible/customisable\r\n- displays intelligent estimated time remaining\r\n- works in notebooks as well as raw terminal/console in Linux/Mac/Win\r\n- [#1 trending on GitHub (Dec 2015)](https://github.com/nihey/trending-history/blob/master/histories/Python.md)\r\n- [#1 rated `tag:progressbar` on GitHub](https://github.com/topics/progressbar)\r\n- [![>10k stars](https://img.shields.io/github/stars/tqdm/tqdm.svg?logo=github&logoColor=white)](https://github.com/tqdm/tqdm/stargazers) (more than `scipy`)\r\n- [![sourcerank 22](https://img.shields.io/librariesio/sourcerank/pypi/tqdm.svg?logo=koding&logoColor=white)](https://libraries.io/pypi/tqdm) (similar to `matplotlib`)\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n- closes #662 (over 50 :+1: but `tqdm` maintainer @casperdcl had requested it not to be merged)\r\n- closes #648",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "thanks @vinta - not sure whether putting it under \"Command-line Interface Development\" is fully appropriate though.\r\n\r\nIt could be:\r\n\r\n1. *Command-line Interface Development* or *Debugging Tools*\r\n```python\r\nfrom tqdm import tqdm\r\nfor i in tqdm(range(100)):\r\n  pass\r\n```\r\n2. *Command-line Tools*\r\n```sh\r\ncat *.txt | tqdm | wc -l\r\n```\r\n3. Some other section regarding the fact that it's also usable in Jupyter (displaying a progressbar widget)",
      "@casperdcl What is your suggestion?",
      "@vinta no suggestion really - was wondering if you may have suggestions about what to do about libraries which fall into multiple categories."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f874ca88c0a76e0a4ec1b",
    "number": 1292,
    "body": "## What is this Python project?\r\n\r\n[Pycro][pycro-link] is a python integrated macro preprocessor. It will interpret input texts\r\nand generates a corresponding python code that will generate the intended\r\nresult, if we compile and execute that.\r\n\r\n## usage example\r\n\r\nimagine we have this `main.c` file:\r\n\r\n```c\r\n\r\n#include <stdio.h>\r\n\r\n//# names = ['Oliver', 'Jack', 'Harry', 'James', 'John']\r\n\r\nint main()\r\n{\r\n\t//@ for name in names:\r\n\tprintf(\"Hello ${name}!\\n\");\r\n\t//@ end for\r\n\treturn 0;\r\n}\r\n\r\n```\r\n\r\nwe open this file and pass it to `generate_code` function:\r\n\r\n```python\r\n#!/usr/bin/python3\r\n\r\nimport pycro\r\n\r\nenv = pycro.CompilerEnvironment(language = 'c')\r\n\r\nwith open('main.c') as infile:\r\n    with open('main.c.py', 'w') as outfile:\r\n        pycro.generate_code(infile, outfile, env)\r\n\r\n```\r\n\r\nanother file will be created named `main.c.py`:\r\n\r\n```python\r\n__outfile__.write('\\n');\r\n__outfile__.write('#include <stdio.h>\\n');\r\n__outfile__.write('\\n');\r\nnames = ['Oliver', 'Jack', 'Harry', 'James', 'John']\r\n__outfile__.write('\\n');\r\n__outfile__.write('int main()\\n');\r\n__outfile__.write('{\\n');\r\nfor name in names:\r\n\t__outfile__.write('\\tprintf(\"Hello ');__outfile__.write(str(name));__outfile__.write('!\\\\n\");\\n');\r\n__outfile__.write('\\treturn 0;\\n');\r\n__outfile__.write('}\\n');\r\n__outfile__.write('\\n');\r\n```\r\n\r\nnow we can compile and execute `main.c.py` using the following code:\r\n\r\n```python\r\n#!/usr/bin/python3\r\n\r\nimport pycro\r\n\r\nenv = pycro.ExecutorEnvironment()\r\n\r\nwith open('main.c.py') as infile:\r\n    with open('_main.c', 'w') as outfile:\r\n\r\n        code_object = pycro.compile_generated_code(infile.read(), infile.name)\r\n\r\n        pycro.execute_code_object(code_object, outfile, env)\r\n\r\n```\r\n\r\nthe generated result saved as `_main.c`:\r\n\r\n```c\r\n\r\n#include <stdio.h>\r\n\r\n\r\nint main()\r\n{\r\n\tprintf(\"Hello Oliver!\\n\");\r\n\tprintf(\"Hello Jack!\\n\");\r\n\tprintf(\"Hello Harry!\\n\");\r\n\tprintf(\"Hello James!\\n\");\r\n\tprintf(\"Hello John!\\n\");\r\n\treturn 0;\r\n}\r\n\r\n```\r\n\r\nit's time to compile `_main.c`:\r\n\r\n```\r\n$ gcc _main.c -o main\r\n```\r\n\r\nand run `./main`:\r\n\r\n`$ ./main`:\r\n\r\n```\r\nHello Oliver!\r\nHello Jack!\r\nHello Harry!\r\nHello James!\r\nHello John!\r\n```\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm tired to compare them [here][compare-link], but it's not complete.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n[pycro-link]: https://github.com/mak12776/pycro\r\n[compare-link]: https://github.com/mak12776/tests/tree/master/python/template-engines",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f874da88c0a76e0a4ec1c",
    "number": 1290,
    "body": "## What is this Python project?\r\n\r\nmicropython\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAllows easier development of python on hardware.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@mathdugre We already have it on the list! See https://github.com/vinta/awesome-python#implementations"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f874ea88c0a76e0a4ec1d",
    "number": 1289,
    "body": "## What is this Python project?\r\n\r\npyramid_openapi3 is a Pyramid addon that allows you to validate Pyramid views against an OpenAPI 3.0 document. It also serves the Swagger UI for the OpenAPI document you provide. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to cornice, the main differentiator is that it is based on the fantastic OpenAPI 3.0 specification. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Right, I'll ask people that I know use this library for a vote.",
      "Hey @vinta could you possibly reopen this? Or even better, merge it? It's got 20+ upvotes, so should be good."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f874fa88c0a76e0a4ec1e",
    "number": 1288,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8750a88c0a76e0a4ec1f",
    "number": 1287,
    "body": "## What is this Python project?\r\nfolium is amazing, it allows data visualization on maps!\r\n\r\n\"folium builds on the data wrangling strengths of the Python ecosystem and the mapping strengths of the Leaflet.js library. Manipulate your data in Python, then visualize it in a Leaflet map via folium.\"\r\n\r\nExamples of what can be done using folium:\r\nhttps://nbviewer.jupyter.org/github/python-visualization/folium/tree/master/examples/\r\nhttps://nbviewer.jupyter.org/github/python-visualization/folium_contrib/tree/master/notebooks/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI couldn't find others.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "cf #1064 ",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8750a88c0a76e0a4ec20",
    "number": 1286,
    "body": "## What is this Python project?\r\n\r\nI wrote TemplateMail as a simple solution to sending transactional emails in new projects. Since emails themselves are written in Jinja2, it brings separation between programming and copy editing concerns. It sends email using SMTP or Mailgun, but other backends are possible. Let me know if you have any questions and thanks for the consideration!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe most important distinction is that TemplateMail fully encloses all email content, including mail subjects, inside Jinja2 templates. This means that if you want to change the content or design of an email, you need to only edit the template, not the Python code.\r\n\r\nBy using Jinja2 templates and including Mailgun out of the box, TemplateMail covers the use cases for most new projects. I think it's pretty seful.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8751a88c0a76e0a4ec21",
    "number": 1283,
    "body": "## What is this Python project?\r\n\r\nHi! This PR adds a link to [Cloudsmith](https://cloudsmith.io), which is a package management service SaaS. It's commercial, but it is completely free for open-source and it has generous free tiers otherwise. It has first-class support for Python (and many other package formats, such as Npm), plus org/teams management, granular access controls, private repositories, repository-specific entitlements, a worldwide content distribution network, webhooks, access logs, etc. Thank you. :-)\r\n\r\nFull disclosure: I work at Cloudsmith. \\o/\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the first hosted repository to be listed, but obvious alternatives are PyPi itself. Cloudsmith provides private hosting and is usually used for internal development, distribution of vendored software, or when a secondary proxy to PyPi is required. It can also house many other types of assets.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [
      "@vinta Any comments for consideration? :) ",
      "*poke* @vinta :-)",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "I hear you stale bot. Still looks fresh to me!",
      "@timgates42 Appreciate the review Tim, thank you. 😄 ",
      "*bump* :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8752a88c0a76e0a4ec22",
    "number": 1282,
    "body": "## What is this Python project?\r\n\r\nparse_it is a python library for parsing multiple types of config files, envvars & command line arguments that takes the headache out of setting app configurations. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n-- supports TOML, YAML, JSON, INI, ENVVAR, CLI ARGS to allow enduser to pick how he prefers to configure the app without adding work to the dev.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8753a88c0a76e0a4ec23",
    "number": 1281,
    "body": "## What is this Python project?\r\n\r\nDepHell is a Python project management tool. Manage packages: convert between formats, lock, install, resolve, isolate, test, build graph, show outdated, audit. Manage venvs, build package, bump version.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n+ format agnostic\r\n+ smart dependency resolution\r\n+ security audit\r\n+ all-in-one solution with licenses overview, checking updates, packages isolation, venv management etc.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "dephell",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8754a88c0a76e0a4ec24",
    "number": 1280,
    "body": "## What is this Python project?\r\n\r\nDask provides advanced parallelism for analytics, enabling performance at scale for python libraries NumPy, pandas, scikit-learn\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\nI have not seen any similar ones.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Dask has already added actually.\r\nhttps://github.com/vinta/awesome-python#distributed-computing"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8754a88c0a76e0a4ec25",
    "number": 1277,
    "body": "## What is this Python project?\r\n\r\nBuilt on top of plotly.js, plotly.py is a high-level, declarative charting library. plotly.js ships with over 30 chart types, including scientific charts, 3D graphs, statistical charts, SVG maps, financial charts, and more.\r\n\r\nPlotly graphs can be viewed in Jupyter notebooks, standalone HTML files, or hosted online on plot.ly.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - Seamlessly bring visualizations from your existing code to the browser with few lines of code.\r\n - Compactibility with matplotlib, seaborn and other libraries\r\n - Creates interative plots with tooltip on the go\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-add-plotly",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8755a88c0a76e0a4ec26",
    "number": 1275,
    "body": "## What is this Python project?\r\n\r\nIt an awesome book by **Harry Percival** on Test Driven Development for the web using Django, Selenium, and Javascript. The book has greatly described the whole process of software development in a very interesting way. This book makes learning about TDD a lot easier. You get to know about development from writing simple tests to deploying the whole project to the internet.   \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI feel this is an effective book that covers all the steps you follow in a software development cycle and will give the reader an awesome experience. It makes test driven development so interesting and fun.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-python-tdd-resource",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8756a88c0a76e0a4ec27",
    "number": 1273,
    "body": "added dfply, A library to do R's dplyr-style data manipulation with pipes in python on pandas DataFrames\r\n\r\n## What is this Python project?\r\n\r\ndfply, is a library to do R's dplyr-style data manipulation with pipes in python on pandas DataFrames. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Alternatives are pandas-ply and dplython, both with no recent commits\r\n- Comprehensive  implementation of data science functions \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8757a88c0a76e0a4ec28",
    "number": 1272,
    "body": "## What is this Python project?\r\n\r\nThe [*Atlas* toolkit](http://q37.info/s/c7hfkzvs) is a fast and easy way to add a GUI (a web one) to a Python program. It only requires basic knowledge of HTML. It's **not** a web framework. The point is really to have a way as easy and fast as possible to add a GUI to programs, but, instead of the usual desktop interface, it will be a web interface.\r\n\r\nOnce launched, the program will automatically open a web browser displaying its interface. The program will also display the QR code corresponding to the URL opened by the web browser, so you can easily open this URL on your smartphone. No need to reconfigure the smartphone, or the router on which the computer running the program is connected, to use the program on it.\r\n\r\nBy simply sending the URL to someone, they can immediately use the program on their own smartphone or other device with a modern web browser connected to internet.\r\n\r\nFor electronic/robotic lovers, the *Atlas* toolkit can, without problem, be used on device such a [*Raspberry Pi Zero W*](https://q37.info/s/uthai3us), so you can write your own programs to pilot its *GPIO* from a smartphone.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe *Atlas* toolkit bears some similarities with web frameworks, but the *Atlas* toolkit :\r\n\r\n* does not require the use of JavaScript,\r\n* is very lightweight (less then 10 KB),\r\n* does not require the development of a separate front-end (front-end and back-end are the same Python written program),\r\n* have no dependencies on other packages,\r\n* allows programs to be accessible from all over the internet without having to deploy them on a remote server.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8757a88c0a76e0a4ec29",
    "number": 1271,
    "body": "## What is this Python project?\r\n\r\ndynaconf a layered configuration system for Python applications - with strong support for 12-factor applications and extensions for Flask and Django.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Strict separation of settings from code (following [12-factor applications](https://12factor.net/config) Guide).\r\n- Define comprehensive default values.\r\n- Store parameters in multiple file formats (**.toml**, .json, .yaml, .ini and .py).\r\n- Sensitive **secrets** like tokens and passwords can be stored in safe places like `.secrets` file or `vault server`.\r\n- Parameters can optionally be stored in external services like Redis server.\r\n- Simple **feature flag** system.\r\n- Layered **[environment]** system.\r\n- Environment variables can be used to override parameters.\r\n- Support for `.env` files to automate the export of environment variables.\r\n- Correct data types (even for environment variables).\r\n- Have **only one** canonical settings module to rule all your instances.\r\n- Drop in extension for **Flask** `app.config` object.\r\n- Drop in extension for **Django** `conf.settings` object.\r\n- Powerful **$ dynaconf** CLI to help you manage your settings via console.\r\n- Customizable **Validation** System to ensure correct config parameters.\r\n- Allow the change of **dyna**mic parameters on the fly without the need to redeploy your application.\r\n\r\nSee more in https://dynaconf.readthedocs.io\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "What can I do?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8758a88c0a76e0a4ec2a",
    "number": 1269,
    "body": "## What is this Python project?\r\n\r\ndjango-bootstrap4 library : \r\n- The goal of this project is to seamlessly blend Django and Bootstrap 4.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Support of bootstrap 4.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1269 from koffisani/patch-1\n\nAdded django-bootstrap4 to Forms section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8759a88c0a76e0a4ec2b",
    "number": 1268,
    "body": " please accept the new link\r\n\r\n## What is this Python project?\r\n\r\nOld awesome-django link was down because the maintainer deleted the repo. This is the new link for django-awesome it has a great list of packages which works with Django.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOld repo is no longer available.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1268 from shahraizali/patch-1\n\nawesome-django old link is down"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f875aa88c0a76e0a4ec2c",
    "number": 1267,
    "body": "## What is this Python project?\r\n\r\ntinyrpc is a RPC library containing the usual elements:\r\n- client and server classes\r\n- dispatcher class\r\n- protocol implementation class\r\n- client and server side transport classes\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe distinctive feature is that these components are *loosely coupled*; making it easy to replace them.\r\nTherefore it is easy to:\r\n- implement multiple transports: HTTP, 0MQ, AMQP, even a callback transport.\r\n- implement multiple protocols: JSON-RPC, msgpack-rpc , XMLRPC, ...\r\n- alternate dispatchers etc.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Tinyrpc is a rather specialized library for RPC communication.\r\nIt recently acquired support for MSGPACk RPC in addition to JSON-RPC.\r\nGiven that it is specialized, it is slow to collect votes."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f875ba88c0a76e0a4ec2d",
    "number": 1264,
    "body": "## What is this Python project?\r\n\r\n[ScrapydWeb](https://github.com/my8100/scrapydweb) is a full-featured web UI for Scrapyd cluster management, which supports Scrapy Log Analysis & Visualization, Auto Packaging, Timer Tasks, Email Notice and so on.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n### ScrapydWeb vs SpiderKeeper vs Gerapy:\r\n**ScrapydWeb**\r\n- Scrapy Log Analysis & Visualization (+)\r\n- Auto Packaging (+)\r\n- Timer Tasks (=)\r\n- Email Notice (+)\r\n- **Test coverage > 90%  (+)**\r\n- Active development (+)\r\n- Active handling of issues (+)\r\n\r\n**SpiderKeeper**\r\n- Scrapy Log Analysis & Visualization (-)\r\n- Auto Packaging (-)\r\n- Timer Tasks (=)\r\n- Email Notice (-)\r\n- **Test codes not found  (-)**\r\n- Less active development (-)\r\n- Less active handling of issues (-)\r\n\r\n**Gerapy**\r\n- Scrapy Log Analysis & Visualization (-)\r\n- Auto Packaging (=)\r\n- Timer Tasks (=)\r\n- Email Notice (-)\r\n- **Test codes not found  (-)**\r\n- Less active development (-)\r\n- Less active handling of issues (-)\r\n\r\n--\r\n \r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f875ba88c0a76e0a4ec2e",
    "number": 1263,
    "body": "## What is this Python website?\r\n\r\nThis is one of the most popular sites about Python in Russia.\r\n\r\n## What's the difference between this Python website and similar ones?\r\n\r\nYou have no russian sites listed. The site has interesting articles and lessons for learning the Python programming language.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta all requirements are met. :)",
      "@vinta \r\n\r\n![kid](https://media.giphy.com/media/tXL4FHPSnVJ0A/giphy.gif)",
      "@vinta \r\n\r\n![kid](https://media.giphy.com/media/tXL4FHPSnVJ0A/giphy.gif)"
    ],
    "commit_messages": [
      "Merge pull request #1263 from mowshon/patch-1\n\nPython Programmers Community in Russia [Website]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f875ca88c0a76e0a4ec2f",
    "number": 1262,
    "body": "## What is this Python project?\r\n\r\nFixes syntax for existing project entry\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo addition - only syntax fix\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1262 from dlstadther/patch-1\n\nFix package repositories md link format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f875da88c0a76e0a4ec30",
    "number": 1261,
    "body": "## What is this Python project?\r\n\r\nAsyncSender provides a simple interface to set up a SMTP connection and send email messages asynchronously.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Same interface [Flask-Mail](https://pythonhosted.org/Flask-Mail/)\r\n- AsyncIO support\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f875ea88c0a76e0a4ec31",
    "number": 1260,
    "body": "## What is this Python project?\r\nThis project deals with simple arithmetic operations on date and time based on Gregorian calendar. \r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are two date arithmetic traps in the Gregorian calendar:\r\n (1)   Leap years. Problems arise when adding years to a February 29th gives a result in a non-leap year.\r\n (2)Variable number of days in months. Problems arise when adding months to a 29th, 30th or 31st gives a result in a month where that day doesn't exist.\r\nIn both cases, the result must be changed to the first day of the next month.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "datadelta",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f875fa88c0a76e0a4ec32",
    "number": 1259,
    "body": "## What is this Python project?\r\nA recommendation application using either item-based or user-based approaches.\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no similar project\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "feature/add-recommender",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f875fa88c0a76e0a4ec33",
    "number": 1258,
    "body": "## What is this Python project?\r\n\r\nA web-scraping application to find the minimum number of links between 2 given wiki pages\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no similar project\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "feature/add-wikilink",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8760a88c0a76e0a4ec34",
    "number": 1256,
    "body": "## What is this Python project?\r\n\r\nPEP 8 Speaks is a GitHub app to automatically review Python code style over Pull Requests.\r\n\r\nGitHub - https://github.com/OrkoHunter/pep8speaks\r\nWebsite - https://pep8speaks.com\r\nGitHub Marketplace - https://github.com/marketplace/pep-8-speaks\r\n\r\n### Features\r\n - The app makes a single comment on the Pull Request and keeps updating it on new commits. This reduces noise in the email.\r\n - Easy installation via GitHub app distribution. It starts work instantaneously without the need for any configuration.\r\n - The app can be configured for all of the pycodestyle/flake8 settings like max-line-length, ignoring specific errors, etc. There are additional options available for configuration like choosing the linter and scanning only the diff of the Pull Request.\r\n - The bot can be asked to suggest a diff of the changes to fix code quality issues.\r\n - The bot can be asked to create a Pull Request on the author's branch, so that they can fix all the issues at once just by merging the Pull Request.\r\n\r\nMore miscellaneous features are over [here](https://github.com/OrkoHunter/pep8speaks#main-features).\r\n\r\nThe app is used by organizations like Pandas, Scikit Image, Spyder IDE, Scikit Learn Contrib, Astropy, Sunpy, etc. Check out [the complete list](https://github.com/OrkoHunter/pep8speaks/wiki/List-of-users-and-orgs) of organizations and individual users.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- In other services, style issues get lost in the long build logs and the authors of the Pull Requests are not notified about them. A GitHub comment separates code style issue with the CI build.\r\n- Pleasant experience for the contributors as well as maintainers. It does not cause failed checks to obstruct merging. Nor does it make comment after comment for additional commits. It keeps on editing the first comment for update.\r\n- By default the bot does not make any comment if no Python files are involved. This means, users can install it on an organization with numerous projects, and the app will function only on the ones which involve Python.\r\n- The comment made by the bot is very descriptive with the errors. The line and column numbers are hyperlinked to the files involved in the PR. See [an example](https://github.com/pandas-dev/pandas/pull/24158).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "pep8speaks",
    "is_a_fork": true,
    "comments": [
      "Hello @vinta ! Can you please have a look at this PR and PEP 8 Speaks? It has crossed 20 upvotes.",
      "Sadly @vinta removed this and many other services in a commit called \"[cleanup](https://github.com/vinta/awesome-python/commit/1a578e692658ce472115cde53223bb79da418eae#diff-04c6e90faac2675aa89e2176d2eec7d8)\"."
    ],
    "commit_messages": [
      "Merge pull request #1256 from OrkoHunter/pep8speaks\n\nAdd PEP 8 Speaks to Services -> Code Quality section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8761a88c0a76e0a4ec35",
    "number": 1255,
    "body": "## What is this Python project?\r\n\r\nThis is a helpful resource for developers working with Django for e-commerce. A Wagtail tutorial is included. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAgain, this isn't so much a project as it is a tool to help developers who work with Django in building e-commerce sites. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "nthompson196-django-ecommerce",
    "is_a_fork": true,
    "comments": [
      "@nthompson196 There are really too many great articles about Python/Django on the Internet and this repo is mainly focused on libraries themselves. So sorry, I don't intend to include articles on the list."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8762a88c0a76e0a4ec36",
    "number": 1254,
    "body": "## What is this Python project?\r\n\r\n[RESTEasyCLI](https://resteasycli.readthedocs.io) is a handy command-line tool for anyone who prefers a command-line tool over GUI apps, but when it comes to API testing or doing repetitive queries to an API server, has to give up on their favorite shell.\r\n\r\nThe domain of REST clients doesn't have to be dominated by GUI apps anymore.\r\n\r\nThis tool gives you the power to use advanced features offered by popular REST clients at the convenience of your terminal.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nMost similar projects I could find are httpie, curl etc. Unlike these general purpose HTTP clients, this library dedicates itself to REST API and aims to bring the most useful features of popular GUI based REST clients on your terminal.\r\n\r\nTo try an interactive demo, just copy and paste following commands on your terminal or [download this script from here](https://raw.githubusercontent.com/rapidstack/RESTEasyCLI/master/tools/demo.sh) and execute it.\r\n\r\n```bash\r\ncurl -L https://raw.githubusercontent.com/rapidstack/RESTEasyCLI/master/tools/demo.sh -o demo.sh\r\nchmod +x demo.sh\r\n./demo.sh\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8763a88c0a76e0a4ec37",
    "number": 1253,
    "body": "## What is this Python project?\r\n\r\nAnyone can forget how to make character classes for a regex, slice a list or do a for loop. This cheat sheet tries to provide a basic reference for beginner and advanced developers, lower the entry barrier for newcomers and help veterans refresh the old tricks.\r\n\r\nWebsite: [pythoncheatsheet.org/](https://www.pythoncheatsheet.org/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It has a nice modern frontend.\r\n- Easy to navigate.\r\n- Javascript powered search.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8763a88c0a76e0a4ec38",
    "number": 1252,
    "body": "## What is this Python project?\r\n\r\n* **Tartiflette** is a Python implementation of GraphQL, **SDL First**.\r\n* 100% **Open Source** from day one.\r\n* Compatible only for Python 3.6+ / asyncio.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* This is not a port of GraphQL JS but a brand new implementation built with the Zen of Python in mind.\r\n* Create GraphQL schema **only** with the SDL _(Schema Definition Language)_.\r\n* Build only for python 3.6+ and asyncio.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "For brevity, should tartiflette-aiohttp be kept out of this list? Tartiflette already links to it in its documentation, and I personally think Tartiflette itself is the key highlight here. :) (Also the reason why I’m not advocating for adding tartiflette-asgi here.)",
      "Tartiflette kicks buttocks, please merge."
    ],
    "commit_messages": [
      "Merge pull request #1252 from tsunammis/master\n\nAdd 'tartiflette', 'tartiflette-aiohttp' and 'tartiflette-asgi' for Python 3.6."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8764a88c0a76e0a4ec39",
    "number": 1251,
    "body": "## What is this Python project?\r\n\r\n* About Jet Admin: https://jetadmin.io\r\n* **Live Demo**: https://app.jetadmin.io/demo\r\n* Documentation: https://docs.jetadmin.io/\r\n* Support: support@jetadmin.io\r\n\r\n**Jet Admin** is a SaaS service that automatically generates extendable back office for your application. <br />\r\n**Jet Bridge** is a standalone app which generates REST API thought which your SQL database is connected to **Jet Admin**. <br />\r\nThis project has been designed to fit requirements of small startups and mature companies.\r\n\r\n- **Data Privacy**. Jet does not access your data: its transferred directly from browser to your application.\r\n- **Customizable Interface**. With WYSIWYG interface customization your can change almost every part of interface.\r\n- **Extendable**. Flex Features allows you to create your custom Actions, Views, Fields and other.\r\n- **Works with any technology**. The interface is generated automatically based on an analysis of the data and data structure of your database.\r\n- **Quick installation**. All you need is to install Jet Bridge and connect it to your database.\r\n\r\nThis is a complete remake of our popular [Django Jet](https://github.com/geex-arts/django-jet) admin interface.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Responsive\r\n- Any language support\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8765a88c0a76e0a4ec3a",
    "number": 1250,
    "body": "Small travis change, removed dead css -> Demo [here](https://c0derlint.github.io/awesome-python)",
    "head_branch": "css",
    "is_a_fork": true,
    "comments": [
      "@vinta "
    ],
    "commit_messages": [
      "Merge pull request #1250 from C0derLint/css\n\nCSS Changes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8766a88c0a76e0a4ec3b",
    "number": 1249,
    "body": "## What is this Python project?\r\n\r\nJsons (Json Serialization) is an easy to use Python library for converting Plain Old Python Objects to JSON and back.\r\n\r\n* Just Python, no compromising your models\r\n* Human readable JSON without meta pollution\r\n* Easily extendable and customizable\r\n* Easy to use\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Jsons does not enforce inheritance for your models, like Marshmellow does\r\n* Jsons can serialize and deserialize objects to JSON in much fewer lines of code than the standard `json`\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8766a88c0a76e0a4ec3c",
    "number": 1248,
    "body": "## What is this Python project?\r\n\r\nThis is the official SDK for Square APIs.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt lets you take payments online with Square, which a lot of business want because there are millions of Square in-person sellers.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "👍 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8767a88c0a76e0a4ec3d",
    "number": 1247,
    "body": "I realized that the website was out of date, so configured travis to deploy to gh-pages.\r\n\r\nConfig also had to be slightly changed as I switched to Mkdocs v1 from 0.16\r\n\r\n[Demo](https://c0derlint.github.io/awesome-python/)",
    "head_branch": "travy",
    "is_a_fork": true,
    "comments": [
      "Hey @vinta what do you think?",
      "Note that you'll have to set your Personal Access Token with public_repo access in the Travis CI environment variables page under the name `GITHUB_TOKEN`.",
      "@C0derLint Thank you so much! Done!"
    ],
    "commit_messages": [
      "Merge pull request #1247 from C0derLint/travy\n\nUpdate .travis.yml for automatic deployment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8768a88c0a76e0a4ec3e",
    "number": 1246,
    "body": "## What is this Python project?\r\n\r\n**pycro** is a python integrated macro preprocessor & code generator, such as [m4](https://www.gnu.org/software/m4/) or [filepp](http://www-users.york.ac.uk/~dm26/filepp/) but with more advanced features:\r\n\r\n- You can use any possible value type that can be used in python programming language. (e.g list, tuple, dict, set, ...)\r\n- Fully customizable substitutions prefixes & suffixes.\r\n- There is only one file that can be placed in any individual project. (Python 3 also required.)\r\n\r\n**in the [example](https://github.com/mak12776/pycro/tree/master/examples) folder you can see what can be done with pycro.**\r\n\r\n> It is not stable but will be soon. 😃\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n> I'm lacking some areas of the english language.\r\n\r\nThere are so many preprocessors such as [pcpp](https://github.com/ned14/pcpp) that implemented syntax of other languages preprocessor, but pycro has it's own syntax and is integrated into python. it uses python [eval](https://docs.python.org/3/library/functions.html#eval) function to evaluates expressions.\r\n\r\nbecause it integrated into python, you can do whatever that you can do in python programming language. for example import other python modules. (will be implemented...)\r\n\r\nI tried to implement a well-designed API, so it's easy to extend features.\r\n\r\npycro macros can be extended like filepp.\r\n\r\n--\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi, can someone close or delete this PR. I started writing a faster code [here](https://github.com/mak12776/preprocessor).\r\n\r\nthanks.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8769a88c0a76e0a4ec3f",
    "number": 1244,
    "body": "## What is this Python project?\r\n\r\nAllows adding dividers to the Python console easily (e.g. `---------`)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis seems to be the only one of its kind\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f876aa88c0a76e0a4ec40",
    "number": 1243,
    "body": "## Ludwig\r\n\r\nLudwig is a TensorFlow-based toolbox that allows to train and test deep learning models without the need to write code.\r\n\r\n## Why : \r\n_No coding required_: no coding skills are required to train a model and use it for obtaining predictions.\r\n_Generality_: a new data type-based approach to deep learning model design that makes the tool usable across many different use cases.\r\n_Flexibility_: experienced users have extensive control over model building and training, while newcomers will find it easy to use.\r\n_Extensibility_: easy to add new model architecture and new feature data types.\r\n_Understandability_: deep learning model internals are often considered black boxes, but we provide standard visualizations to understand their performance and compare their predictions.\r\n_Open Source_: Apache License 2.0\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Uber created Ludwig, and it has become a very popular tool. It should be added to the list. \r\nhttps://github.com/uber/ludwig\r\n",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f876aa88c0a76e0a4ec41",
    "number": 1242,
    "body": "RESTPie3 is a REST API starter kit that helps you quickly build a robust REST server. The kit contains all the essential features that are usually needed in a server. Clean, readable codebase.\r\n\r\nI have used this foundation in several production projects over the years so it is quite mature code.\r\n\r\nFeatures from the doc:\r\n\r\n* Simple and flexible server with minimum dependencies\r\n* Process-based request workers, not thread-based nor async\r\n* Secure server-side sessions with Redis storage\r\n* Robust worker management: restarts, timecapping, max life\r\n* Background tasks\r\n* Built-in cron\r\n* Automatic directory page listing the API methods and their docstrings\r\n* Redis as a generic storage with expiring keys, lightweight queues\r\n* Email & password authentication with secure algorithms\r\n* User role model and authorization of API methods via simple decorator\r\n* Logging system with practical data for troubleshooting, detects slow\r\n  requests, warnings&errors colorized\r\n* Server reload on code change\r\n* Database migrations\r\n* Docker image for the \"big cloud\"\r\n* Fast rsync deployment of updates to servers\r\n* Tests for the API\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f876ba88c0a76e0a4ec42",
    "number": 1241,
    "body": "## What is this Python project?\r\n\r\nArrow is a mature drop-in replacement for `datetime` that brings sanity to the timezone madness that comes by default.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nArrow and Maya are somewhat similar, with Maya being more oriented towards natural language parsing and generation, and Arrow more geared to be a fast and feature complete drop-in replacement. Says [Kenneth](https://www.kennethreitz.org/essays/introducing-maya-datetimes-for-humans#yui_3_17_2_1_1550687348228_225):\r\n\r\n> Arrow, for example, is a fantastic library, but isn't what I wanted in a datetime library. In many ways, it's better than Maya for certian [sic] things. In some ways, in my opinion, it's not.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "There's already #1096 open for the same, in case this gets included.\r\n",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f876ca88c0a76e0a4ec43",
    "number": 1240,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f876da88c0a76e0a4ec44",
    "number": 1239,
    "body": "## What is this Python project?\r\n\r\nSubclass of built-in dict adding attribute access in addition to items getting.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimple complete implementation in just over a hundred lines ready for further subclassing.\r\n\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "adding-addict",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f876da88c0a76e0a4ec45",
    "number": 1238,
    "body": "## What is this Python project?\r\n\r\n* Serialization nested `attrs` objects to and from `dict` or `tuple`.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Automatically detects best class to deserialize to among `Union[...]` of types from a type annotation.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f876ea88c0a76e0a4ec46",
    "number": 1237,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f876fa88c0a76e0a4ec47",
    "number": 1236,
    "body": "## What is this Python project?\r\n\r\nViewflow is the library that offers an additional layer of Django web framework, allows explicitly specify people's workflow and extracts collaboration logic from Django views. \r\n\r\nViewflow layer is based on the BPMN - business process management and notation standard. It is the graphical notation readily understandable by all business stakeholders and software developers. Viewflow bridges the gap between a picture as the software specification and the working solution.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nDjango FSM can be used for simple workflow, but Viewflow simplifies in case of complex business logic.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8770a88c0a76e0a4ec48",
    "number": 1235,
    "body": "## What is this Python project?\r\n\r\nPeter Norvig's [pytudes](https://github.com/norvig/pytudes):\r\n\r\n>\"An étude (a French word meaning study) is an instrumental musical composition, usually short, of considerable difficulty, and designed to provide practice material for perfecting a particular musical skill.\" — Wikipedia\r\n\r\n>This project contains pytudes—Python programs for perfecting programming skills.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Honestly, I haven't seen any similar projects out there of the same caliber attempting to teach how to think pythonically. \r\n\r\n2. Peter Norvig is the director of research at Google and has lots of experience in programming, evidenced by his writings in the form of books and blog posts.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8771a88c0a76e0a4ec49",
    "number": 1234,
    "body": "https://github.com/r0f1/datascience\r\n\r\nAdded my own awesome list. Think it would be a good fit :)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8771a88c0a76e0a4ec4a",
    "number": 1232,
    "body": "## What is this Python project?\r\n\r\nFree Asset Management System / Inventory for hardware, written completely in Python 3. \r\nhttp://ralph.allegro.tech\r\n\r\nComplete database for: server hardware, IP addresses, DHCP mac's, server visualization, back office assets (printers, etc), as well as licenses, supports dates and costs etc. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComplete and lightweight. Only 10 MB installation size. Easy to customize (Django based). Good API.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8772a88c0a76e0a4ec4b",
    "number": 1230,
    "body": "## What is this Python project?\r\n\r\nThis project allows Python developers to use Django's ORM and declarative models in any synchronous Python web framework. I've published it to PyPI [here](https://pypi.org/project/DJModels/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm not aware of another effort to excise Django's Models from the entire framework so that it can be used in a pluggable manner (similar to how Active Record can easily be used with Sinatra). \r\n\r\nThat said, DJ-Models definitely competes with SQLAlchemy. Anywhere you would begrudgingly choose Flask/Pyramid + SQLAlchemy, you can now choose Flask/Pyramid + DJ-Models.\r\n\r\n\r\nHere's a [demo app](https://github.com/iMerica/dj-models-demo) using Flask + Dj-Models. \r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8773a88c0a76e0a4ec4c",
    "number": 1229,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Can't this be reopened ?",
      "Unsubscribed\r\n\r\nOn Thu, 27 Mar 2025, 2:09 am Paillat, ***@***.***> wrote:\r\n\r\n> Can't this be reopened ?\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/vinta/awesome-python/pull/1229#issuecomment-2755681816>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AVPUQTUTOXJCGBPZ7R5ILXD2WL65RAVCNFSM6AAAAABZ3JLDP2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDONJVGY4DCOBRGY>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n> [image: Paillat-dev]*Paillat-dev* left a comment\r\n> (vinta/awesome-python#1229)\r\n> <https://github.com/vinta/awesome-python/pull/1229#issuecomment-2755681816>\r\n>\r\n> Can't this be reopened ?\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/vinta/awesome-python/pull/1229#issuecomment-2755681816>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AVPUQTUTOXJCGBPZ7R5ILXD2WL65RAVCNFSM6AAAAABZ3JLDP2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDONJVGY4DCOBRGY>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8774a88c0a76e0a4ec4d",
    "number": 1228,
    "body": "## What is this Python project?\r\n[cupy](https://github.com/cupy/cupy) - NumPy-like API accelerated with CUDA.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nIt's accelerated by CUDA gpu, which makes it faster than original numpy when using gpu programming.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-cupy",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "@vinta Please review this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8775a88c0a76e0a4ec4e",
    "number": 1227,
    "body": "## What is this Python project?\r\n\r\nDjango CRM is opensourse CRM developed on django framework. It has all the basic features of CRM to start with. Django-CRM provides a dashboard where you can manage customers at sales of the organization. It Provides to manage leads information and its activity, track issues from leads, contacts to send emails.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is a salesforce compatable CRM application, aimed to easily migrate to salesforce.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "include_django_crm",
    "is_a_fork": true,
    "comments": [
      "Hi @vinta , can you review and tell us if we are missing anything?",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8776a88c0a76e0a4ec4f",
    "number": 1226,
    "body": "## What is this Python project?\r\n\r\nFunctionShield enables developers to control the security of serverless runtimes environments by enabling or disabling outbound network connectivity, blocking child process execution, disabling read/read operations on /tmp/, and preventing handler source code leakage. It also provides granular function-level logging, which helps to gain visibility on actions inside the function.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is library is first of its kind - there are no alternatives.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8776a88c0a76e0a4ec50",
    "number": 1225,
    "body": "## What is this Python project?\r\n\r\nThe Stanford NLP Group's official Python library, which supports more than 50 languages. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nStanfordNLP is based on a neural network model, and is frequently updated with the latest advancements in natural language processing technology.\r\n\r\n",
    "head_branch": "patch-16",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1225 from dhamaniasad/patch-16\n\nAdd StanfordNLP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8777a88c0a76e0a4ec51",
    "number": 1224,
    "body": "Added a repository under cryptography.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hey @vinta \r\n\r\nCan you please merge this PR ?",
      "Resolved conflicts",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "@vinta can you merge this PR now?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8778a88c0a76e0a4ec52",
    "number": 1223,
    "body": "## What is this Python project?\r\n\r\nPRAW is the \"Python Reddit API Wrapper\". It's used for simple API access to the Reddit API.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPRAW is a Python library used specifically to access the Reddit API and should fit perfectly with the other \"Third Party API's\" in this repo.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "praw",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8779a88c0a76e0a4ec53",
    "number": 1222,
    "body": "## What is this Python project?\r\nIt's an independently maintained library that facilitates work with PostFinance Payment Service Providing. It exposes a convenient interface that allows creating payment forms and validate incoming transaction update statuses.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are currently no Python libraries that support integration with PostFinance PSP. There is only one, unmaintained [django-shop module](https://github.com/chrisglass/django-shop-postfinance).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8779a88c0a76e0a4ec54",
    "number": 1221,
    "body": "## What is this Python project?\r\n\r\nApache Airflow: Use airflow to author workflows as directed acyclic graphs (DAGs) of tasks. The airflow scheduler executes your tasks on an array of workers while following the specified dependencies. Rich command line utilities make performing complex surgeries on DAGs a snap. The rich user interface makes it easy to visualize pipelines running in production, monitor progress, and troubleshoot issues when needed.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n### Airflow vs. Luigi: \r\n**Airflow**\r\n- Easy-to-use UI (+)\r\n- Built in scheduler (+)\r\n- Easy testing of DAGs (+)\r\n- Separates output data and task state (+)\r\n- Strong and active community (+)\r\n**Luigi**\r\n- Creating and testing tasks is difficult (-)\r\n- The UI is challenging to navigate (-)\r\n- Not scalable due to tight coupling with cron jobs; the number of worker processes is bounded by number of cron workers assigned to a job (-)\r\n- Re-running pipelines is not possible\r\n\r\n### Airflow vs. Oozie\r\n**Airflow**\r\n- Python Code for DAGs (+)\r\n- Has connectors for every major service/cloud provider (+)\r\n- More versatile (+)\r\n- Advanced metrics (+)\r\n- Better UI and API (+)\r\n- Capable of creating extremely complex workflows (+)\r\n- Jinja Templating (+)\r\n- Can be parallelized (=)\r\n- Native Connections to HDFS, HIVE, PIG etc.. (=)\r\n- Graph as DAG (=)\r\n\r\n**Oozie**\r\n- Java or XML for DAGs (---)\r\n- Hard to build complex pipelines (-)\r\n- Smaller, less active community (-)\r\n- Worse WEB GUI (-)\r\n- Java API (-)\r\n- Can be parallelized (=)\r\n- Native Connections to HDFS, HIVE, PIG etc.. (=)\r\n- Graph as DAG (=)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1221 from duyetdev/patch-1\n\nAdd Apache Airflow"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f877aa88c0a76e0a4ec55",
    "number": 1220,
    "body": "## What is this Python project?\r\n\r\nThis Pull request is an UPDATE to a request that was previously merged successfully:\r\nhttps://github.com/vinta/awesome-python/pull/1100\r\n\r\nSummary of changes:\r\n* The location of the repository has changed.\r\n* The GUI frameworks supported grew. Previously was only tkinter, now it's tkinter, Qt, WxPython and Web (Remi)\r\n\r\nIt was a single line change to the Readme file.\r\n\r\nDo I need to get votes again in order to merge this change? \r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1220 from MikeTheWatchGuy/master\n\nUpdated PySimpleGUI info (this project was previously merged)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f877ba88c0a76e0a4ec56",
    "number": 1219,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Those are results of personal selection of tools and they're not directly related with the project. I recommend you to add them into your global `.gitignore` file, not into specific projects.",
      "Yeah, I agree with @ulgens."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f877ca88c0a76e0a4ec57",
    "number": 1218,
    "body": "## What is this Python project?\r\n\r\nYou can create reports and dashboard that update dynamically in the browser, using a straightforward consistent pythonic API.\r\n\r\nYou've got charts, you've got tables, you have markdown, and more. What else can you ask for?\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe project may be compared mostly to Dash and bowtie.\r\n\r\n- The API choices made in `awe` are different than those in the projects mentioned above. \r\n- The API is more focused on quickly adding and changing content and is not focused around interactivity at all (which bowtie and Dash focus on greatly). It is supported in `awe` though, but not as convenient or rich.\r\n- Installation and usage are a `pip install` away.\r\n- Export to static html at anytime (directly from the dashboard)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-awe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f877da88c0a76e0a4ec58",
    "number": 1217,
    "body": "## What is this Python project?\r\n\r\nxarray (formerly xray) is an open source project and Python package that makes working with labelled multi-dimensional arrays simple, efficient, and fun!\r\n\r\nMulti-dimensional (a.k.a. N-dimensional, ND) arrays (sometimes called “tensors”) are an essential part of computational science. They are encountered in a wide range of fields, including physics, astronomy, geoscience, bioinformatics, engineering, finance, and deep learning. In Python, NumPy provides the fundamental data structure and API for working with raw ND arrays. However, real-world datasets are usually more than just raw numbers; they have labels which encode information about how the array values map to locations in space, time, etc.\r\n\r\nBy introducing dimensions, coordinates, and attributes on top of raw NumPy-like arrays, xarray is able to understand these labels and use them to provide a more intuitive, more concise, and less error-prone experience. Xarray also provides a large and growing library of functions for advanced analytics and visualization with these data structures. Xarray was inspired by and borrows heavily from pandas, the popular data analysis package focused on labelled tabular data. Xarray can read and write data from most common labeled ND-array storage formats and is particularly tailored to working with netCDF files, which were the source of xarray’s data model.\r\n\r\nCan also auto-parallelize operations using dask.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSimilar to Pandas, but for truly N-dimensional data. Part of the pydata project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_xarray",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f877da88c0a76e0a4ec59",
    "number": 1216,
    "body": "## What is this Python project?\r\n\r\nA list of python libraries which are especially useful for scientists.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar lists specifically for scientific Python users as far as I'm aware.\r\n\r\n(will close #1215)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Lucky man, and best friend "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f877ea88c0a76e0a4ec5a",
    "number": 1214,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_python_chess",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f877fa88c0a76e0a4ec5b",
    "number": 1213,
    "body": "If you like it, feel free to merge it :)",
    "head_branch": "feature_add_visualisation",
    "is_a_fork": true,
    "comments": [
      "It only goes up to 2015 :("
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8780a88c0a76e0a4ec5c",
    "number": 1212,
    "body": "Added line for PySide2 (now that it has been fully released).\r\n\r\n## What is this Python project?\r\n\r\nThis is the new version of PySide which has been ported to Qt 5. It is awesome because 4 < 5, and it uses LGPL license unlike PyQt.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is very similar to PySide but uses Qt 5 instead of the older Qt4\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Resolved conflict resulting from change to PySimpleGui link in vinta:master.",
      "Resolved conflict",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8781a88c0a76e0a4ec5d",
    "number": 1211,
    "body": "## What is this Python project?\r\n\r\nMutation testing for Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSeems to be the most active project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8781a88c0a76e0a4ec5e",
    "number": 1210,
    "body": "Small fix.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Dimanman888 said you best man #1210"
    ],
    "commit_messages": [
      "Merge pull request #1210 from lessneek/master\n\nFixed PySDL2 URL."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8782a88c0a76e0a4ec5f",
    "number": 1209,
    "body": "# What is this project?\r\n\r\n**FastAPI** is a modern, fast (high-performance), web framework for building APIs with Python 3.6+.\r\n\r\n**Documentation**: <a href=\"https://fastapi.tiangolo.com\" target=\"_blank\">https://fastapi.tiangolo.com</a>\r\n\r\n**Source Code**: <a href=\"https://github.com/tiangolo/fastapi\" target=\"_blank\">https://github.com/tiangolo/fastapi</a>\r\n\r\nThe key features are:\r\n\r\n* **Fast**: Very high performance, on par with **NodeJS** and **Go** (thanks to Starlette and Pydantic).\r\n\r\n* **Fast to code**: Increase the speed to develop features by about 200% to 300% *.\r\n* **Less bugs**: Reduce about 40% of human (developer) induced errors. *\r\n* **Intuitive**: Great editor support. <abbr title=\"also known as auto-complete, autocompletion, IntelliSense\">Completion</abbr> everywhere. Less time debugging.\r\n* **Easy**: Designed to be easy to use and learn. Less time reading docs.\r\n* **Short**: Minimize code duplication. Multiple features from each parameter declaration. Less bugs.\r\n* **Robust**: Get production-ready code. With automatic interactive documentation.\r\n* **Standards-based**: Based on (and fully compatible with) the open standards for APIs: <a href=\"https://github.com/OAI/OpenAPI-Specification\" target=\"_blank\">OpenAPI</a> and <a href=\"http://json-schema.org/\" target=\"_blank\">JSON Schema</a>.\r\n\r\n<small>* estimation based on tests on an internal development team, building production applications.</small>\r\n\r\n# Why is it awesome?\r\n\r\nApart from the features above, the fact that with simple, standard Python 3.6+ type declarations, you get:\r\n\r\n* Great editor support (completion everywhere and type checks).\r\n* Data conversion (serialization, parsing).\r\n* Data validation.\r\n* Automatic annotations and documentation using OpenAPI and JSON Schema.\r\n* 2 automatic interactive API documentation user interfaces.\r\n\r\nA block of code is worth a thousand words:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n\r\n\r\n@app.get(\"/items/{item_id}\")\r\ndef read_item(item_id: int, q: str = None):\r\n    return {\"item_id\": item_id, \"q\": q}\r\n```\r\n\r\nAnd you get this, \"for free\":\r\n\r\n![Swagger UI](https://fastapi.tiangolo.com/img/index/index-01-swagger-ui-simple.png)\r\n\r\nAnd the coding experience is great, with completion and type checks everywhere:\r\n\r\n![editor support](https://fastapi.tiangolo.com/img/vscode-completion.png)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "fastapi",
    "is_a_fork": true,
    "comments": [
      "It seems we have more than 20 :+1: :tada: ",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "why not merge?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8783a88c0a76e0a4ec60",
    "number": 1208,
    "body": "## What is this Python project?\r\n\r\n[pdfrw](https://github.com/pmaupin/pdfrw) is a Python library and utility that reads and writes PDF files.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nThe fastest pure Python PDF parser available\r\nHas been used for years by a printer in pre-press production\r\nCan be used with rst2pdf to faithfully reproduce vector images\r\nCan be used either standalone, or in conjunction with reportlab to reuse existing PDFs in new ones\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "pdfrw",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8784a88c0a76e0a4ec61",
    "number": 1206,
    "body": "## What is this Python project?\r\n\r\nVery nice and dead simple logging library.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to [Structlog](http://www.structlog.org/en/stable/), [Logbook](https://logbook.readthedocs.io/en/stable/), [Eliot](https://pypi.org/project/eliot/) and most of the other available third-party logging library in the Python ecosystem, Loguru is extremely simple to use and understand, while still offering a wide range of option and capabilities.\r\n\r\nIt is also two-way compatible with the standard library logging package.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Came across loguru first time on a python bytes podcast. Definitely makes the logging part simple to many folks."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8784a88c0a76e0a4ec62",
    "number": 1204,
    "body": "## What is this Python project?\r\n\r\nSimple library that can read csv and arff files (for now) and convert to one another.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt was hard for me to find something that works with arff and csv interchangeably (that why it is created and will be evolving with different file formats)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "filepyLibrary",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8785a88c0a76e0a4ec63",
    "number": 1201,
    "body": "## What is this Python project?\r\n\r\nKeep huge data in files with round robin algorithm.\r\nAlso creating graphs from these data is possible.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8786a88c0a76e0a4ec64",
    "number": 1199,
    "body": "Add bottle framework",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Duplicate: https://github.com/vinta/awesome-python/pull/1128\r\nIt'd be great to have a few more 👍 there to try to reach 20 :)",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8787a88c0a76e0a4ec65",
    "number": 1197,
    "body": "[dev.to/t/python](https://dev.to/t/python) is growing as one of the best resources for Python news/help/community. Definitely belongs here.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8788a88c0a76e0a4ec66",
    "number": 1196,
    "body": "## What is this Python project?\r\n\r\n[Chartify](https://github.com/spotify/chartify?fbclid=IwAR085ORv3CbFshJ_lRqdQiiD43wZuTVUfmU9RipPkze0yXzXec-LfogA3wo) - A Python library that makes it easy for data scientists to create charts.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8788a88c0a76e0a4ec67",
    "number": 1195,
    "body": "git@github.com:beemerbox/awesome-python.git\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8789a88c0a76e0a4ec68",
    "number": 1193,
    "body": "Fixed broken url for talkbox.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f878aa88c0a76e0a4ec69",
    "number": 1192,
    "body": "Adding interface to the Firebase's REST API\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f878ba88c0a76e0a4ec6a",
    "number": 1190,
    "body": "\r\n\r\n\r\n\r\n## What is this Python project?\r\n\r\nFeaturetools is a library for automated feature engineering. \r\n\r\nIt's awesome because it can save data scientists immense amount of time while preparing their data for automated feature engineering.  More details why in this post on medium: https://medium.com/@williamkoehrsen/5c15bf188b96\r\n\r\nWebsite - [www.featuretools.com](www.featuretools.com)\r\nGithub project - [github.com/featuretools/featuretools/](https://github.com/featuretools/featuretools/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFeaturetools can be used to prepare data for existing machine learning libraries. Here is how it fits into the ecosystem\r\n\r\n![what-is 1](https://user-images.githubusercontent.com/371792/47944148-3c3d1500-ded0-11e8-9358-95816e43c9cc.png)\r\n\r\nThere are many demos for users to get started on our website: https://www.featuretools.com/demos\r\n\r\nIt's currently used by data scientists around the world to power their machine learning systems: https://www.featurelabs.com/blog/predicting-credit-card-fraud/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f878ca88c0a76e0a4ec6b",
    "number": 1189,
    "body": "New URL is to Python 3 compatible port of the original library, blessed by original creator",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1189 from neilsh/patch-1\n\nFix broken URL for ConfigObj library"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f878ca88c0a76e0a4ec6c",
    "number": 1188,
    "body": "Add pydantic\r\n\r\nA library for data validation using type hinting\r\n\r\n## What is this Python project?\r\n\r\nDefine how data should be in pure, canonical python; validate it with pydantic.\r\n\r\nPEP 484 introduced type hinting into python 3.5, PEP 526 extended that with syntax for variable annotation in python 3.6.\r\n\r\npydantic uses those annotations to validate that untrusted data takes the form you want.\r\n\r\nThere’s also support for an extension to dataclasses where the input data is validated.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "`pydantic` should definitely be in the list.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "why not merge?",
      "+1 \r\nwhy not merge?",
      "It is a shame :slightly_frowning_face: \r\n",
      "@vinta "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f878da88c0a76e0a4ec6d",
    "number": 1187,
    "body": "added else to the if else statement to return failure\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f878ea88c0a76e0a4ec6e",
    "number": 1186,
    "body": "## What is this Python project?\r\n\r\nAwesome project for enterprise resource planning.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nseem like SAP,  Kingdee\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f878fa88c0a76e0a4ec6f",
    "number": 1185,
    "body": "Made use of yattag for a personal project where BeautifulSoup just didn't cut it to put simply.\r\n\r\nAllows you full control of the HTML language with python commands. I made use of this in my project to take the output from a range of commands and combined this with Bootstrap for an aesthetically pleasing output. For this reason, I feel it should be added to this list\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8790a88c0a76e0a4ec70",
    "number": 1184,
    "body": "## What is this Python project?\r\n\r\n[Asyncpg](https://github.com/MagicStack/asyncpg) is a fast async client library for PostgreSQL.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n - built for asyncio and Python 3.5+ async / await\r\n - plays well with the asyncio ecosystem e.g. with [Sanic](https://github.com/huge-success/sanic) or [Gino ORM](https://github.com/fantix/gino)\r\n - implements PostgreSQL server protocol natively and exposes its features directly\r\n - written almost entirely in Cython\r\n - [based on creators' benchmarks](https://github.com/magicstack/pgbench)\r\n   - faster than alternatives \r\n   - can be approximately 3x faster than alternative Python libraries such as psycopg2 or aiopg\r\n   - achieved query throughput [1M rows/s](https://magic.io/blog/asyncpg-1m-rows-from-postgres-to-python/)\r\n   - significantly lower latency\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "asyncpg",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8790a88c0a76e0a4ec71",
    "number": 1183,
    "body": "Added pyodbc library link and description to the database driver section.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8791a88c0a76e0a4ec72",
    "number": 1182,
    "body": "\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1182 from Norbinsh/master\n\nUpdated to the (new) github link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8792a88c0a76e0a4ec73",
    "number": 1181,
    "body": "## What is this Python project?\r\n\r\nMedPy is an image processing library and collection of scripts targeted towards medical (i.e. high dimensional) image processing. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis library supports a wide range of medical image formats like \".mha\", \".dicom\". Its simple functions make it very easy to read medical images and work with them. And even convert them to the numpy array. It also retains Image metadata. Standard Image processing libraries such as Pillow or OpenCV either doesn't support some of the formats or they are not built to work with the high dimensional images. Although there are libraries for specific formats such as pydicom, MedPy brings them all together which makes it very convenient.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8793a88c0a76e0a4ec74",
    "number": 1180,
    "body": "## What is this Python project?\r\n\r\nPython ROS Bridge library allows to use Python and IronPython to interact with ROS, the open-source robotic middleware. It uses WebSockets to connect to [rosbridge 2.0 ](http://wiki.ros.org/rosbridge_suite)and provides publishing, subscribing, service calls, actionlib, TF, and other essential ROS functionality.\r\n\r\nUnlike the **rospy** library, this does not require a local ROS environment, allowing usage from platforms other than Linux.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- This is the only Python client for ROS that is cross platforms\r\n- Supports IronPython as well (which means it runs inside Rhino/Grasshopper for 3D/architecture applications)\r\n- The closest package to this would be *rospy*, but it only runs in Linux, and only within a ROS environment\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8794a88c0a76e0a4ec75",
    "number": 1179,
    "body": "## What is this Python project?\r\nThe MDP toolbox provides classes and functions for the resolution of descrete-time Markov Decision Processes. The list of algorithms that have been implemented includes backwards induction, linear programming, policy iteration, q-learning and value iteration along with several variations.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Eight MDP algorithms implemented.\r\n- Fast array manipulation using NumPy.\r\n- Full sparse matrix support using SciPy's sparse package.\r\n- Optional linear programming support using cvxopt.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-python-mdp-toolbox",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8794a88c0a76e0a4ec76",
    "number": 1178,
    "body": "## What is this Python project?\r\n\r\nPyStan provides a Python interface to Stan, a package for Bayesian inference using the No-U-Turn sampler, a variant of Hamiltonian Monte Carlo.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nStan® is a state-of-the-art platform for statistical modeling and high-performance statistical computation. Thousands of users rely on Stan for statistical modeling, data analysis, and prediction in the social, biological, and physical sciences, engineering, and business.\r\n\r\nUsers specify log density functions in Stan’s probabilistic programming language and get:\r\n- full Bayesian statistical inference with MCMC sampling (NUTS, HMC)\r\n- approximate Bayesian inference with variational inference (ADVI)\r\n- penalized maximum likelihood estimation with optimization (L-BFGS)\r\n\r\nStan’s math library provides differentiable probability functions & linear algebra (C++ autodiff). Additional R packages provide expression-based linear modeling, posterior visualization, and leave-one-out cross-validation.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-pystan-to-science",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8795a88c0a76e0a4ec77",
    "number": 1177,
    "body": "## What is this Python project?\r\n\r\n`mechanize` enables automated interaction with HTTP web servers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n- Easy HTML form filling.\r\n- Convenient link parsing and following.\r\n- Browser history (`.back()` and `.reload()` methods).\r\n- Referer HTTP header added properly (optional).\r\n- Automatic observance of `robots.txt`.\r\n- Automatic handling of `HTTP-Equiv` and `Refresh`.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-mechanize-to-web-testing",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8796a88c0a76e0a4ec78",
    "number": 1176,
    "body": "## What is this Python project?\r\n\r\n\"Test and Code\" podcast.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is a podcast which focuses on testing - authored by Brian, a self-proclaimed \"Lean TDD advocate, Agile heckler. Python & pytest flag waver.\"\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-test-and-code-podcast",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1176 from crypto-jeronimo/add-test-and-code-podcast\n\nAdd the \"Test and Code\" podcast."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8797a88c0a76e0a4ec79",
    "number": 1174,
    "body": "## What is this Python project?\r\n\r\nThis PR adds a link to [Cloudsmith](https://cloudsmith.io), which is a package management service SaaS. It's commercial, but it is completely free for open-source and it has generous free tiers otherwise. It has first-class support for Python package repositories (and many other package formats, such as Python/Npm), plus org/teams management, granular access controls, private repositories, repository-specific entitlements, a worldwide content distribution network, webhooks, access logs, etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's similar to [PyPi Warehouse](https://pypi.org), but is a universal packagement service that supports many different technologies beyond just Python package hosting (so would be useful for polygot setups, such as combining with Npm). Cloudsmith has a focus on simplicity and an ethos for being as secure as possible by default, which is seen in the breadth of features offered (e.g. automatic GPG signing, entitlements control, geo/IP control, etc.)\r\n\r\n*Full disclosure:* I work at Cloudsmith.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8798a88c0a76e0a4ec7a",
    "number": 1173,
    "body": "fixing links for talkbox, shuup, pysdl2, joblib, and openpyxl",
    "head_branch": "fix-broken-links",
    "is_a_fork": true,
    "comments": [
      "@mikeaadd Sorry, it conflicts. Could you fix that?",
      "@vinta The conflict has been fixed.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8798a88c0a76e0a4ec7b",
    "number": 1172,
    "body": "fixing the broken link of openPyXL",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1172 from sivu1/master\n\n[#1168] fix broken link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8799a88c0a76e0a4ec7c",
    "number": 1171,
    "body": "Boto3 could be used to send Emails using AWS SES\r\n\r\n## What is this Python project?\r\nBoto3 is complete library which could be used to consume AWS APIs in Python. This could be used to consume AWS SES API as well which can be used to send transnational or promotional emails.\r\n\r\nDescribe features.\r\nThis is the only most widely used library for consuming AWS features in Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nNo other project is there.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "What a hell dude? Sending emails using ses? \r\nBest description for boto3...\r\nIt's entire SDK to use AWS services not just a toy for sending emails",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f879aa88c0a76e0a4ec7d",
    "number": 1170,
    "body": "## What is this Python project?\r\n\r\nRay is a flexible, high-performance distributed execution framework.\r\n\r\n - Achieves parallelism in Python with simple and consistent API.\r\n - Particularly suited for machine learning (agnostic to the machine learning library of choice)\r\n - Forms the base of Ray's own distributed libraries for deep and reinforcement learning, processing of Pandas dataframes, and hyper parameter search.\r\n - Uses Plasma as its object store which allows to efficiently share large numpy arrays (or objects serializable with Apache Arrow) between the processes, avoiding unnecessary data copies and with only minimal deserialization\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - Less overhead and lower latency with bottom up scheduling than similar projects\r\n - Actors - allow sharing mutable state between tasks\r\n - Similar to Dask, for more details see a comparison here:  https://github.com/ray-project/ray/issues/642\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This looks great, shall we merge this?",
      "Нормальный Кент живет обычно ему спокойно а жизнь прилична а если деньги мне подкинет я рифму круче зафуфырю #1170",
      "@vinta, would you be willing to take a look at this? I think this would be a great addition to the cluster computing section."
    ],
    "commit_messages": [
      "Merge pull request #1170 from jmargeta/patch-1\n\nAdd Ray to Cluster computing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f879ba88c0a76e0a4ec7e",
    "number": 1169,
    "body": "## Overview\r\n\r\n- http://pyparsing.wikispaces.com/ is closed.\r\n- Fix link to https://github.com/pyparsing/pyparsing",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1169 from yuokada/patch-1\n\nFix pyparsing link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f879ca88c0a76e0a4ec7f",
    "number": 1166,
    "body": "## What is this Python project?\r\n\r\nModeling and simulation of proton-exchange membrane fuel cells (PEMFC) may work as a powerful tool in the Research & development of renewable energy sources. The Open-Source PEMFC Simulation Tool (OPEM) is a modeling tool for evaluating the performance of proton exchange membrane fuel cells. This package is a combination of models (static/dynamic) that predict the optimum operating parameters of PEMFC. OPEM contained generic models that will accept as input, not only values of the operating variables such as anode and cathode feed gas, pressure and compositions, cell temperature and current density, but also cell parameters including the active area and membrane thickness. In addition, some of the different models of PEMFC that have been proposed in the OPEM, just focus on one particular FC stack, and some others take into account a part or all auxiliaries such as reformers. OPEM is a platform for collaborative development of PEMFC models.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* First PEM fuel cells simulation tool in python\r\n* Support most of static and dynamic models\r\n* Rich documentation.\r\n* Awesome outputs\r\n* User-friendly\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f879ca88c0a76e0a4ec80",
    "number": 1165,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f879da88c0a76e0a4ec81",
    "number": 1164,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f879ea88c0a76e0a4ec82",
    "number": 1163,
    "body": "No new Project. \r\nJust fixing some broken links.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Fixed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f879fa88c0a76e0a4ec83",
    "number": 1162,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f879fa88c0a76e0a4ec84",
    "number": 1161,
    "body": "Added New Python Tutorial Link\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a0a88c0a76e0a4ec85",
    "number": 1160,
    "body": "## What is this Python project?\r\n\r\ndiscord.py is a wrapper for the full Discord API with some extra support for easier bot making.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Active support.\r\n- Recognized by the Discord API official server.\r\n- Extension to the API for easier bot making.\r\n- Supports voice interfacing.\r\n- Rich documentation.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I feel this would be better in the ```Third-party APIs``` catagory",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a1a88c0a76e0a4ec86",
    "number": 1159,
    "body": "## What is this Python project?\r\n\r\ngoatools\r\n\r\nIt is a package for performing enrichment analysis of gene-ontology (GO) terms based on Fisher's exact test. It can detect both over-representation and under-representation of GO terms.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\ngoatools implements several statistical models and procedures for correction of multiple testing.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a2a88c0a76e0a4ec87",
    "number": 1158,
    "body": "## What is this Python project?\r\n\r\nLibrary for functional programming with collections in a data pipeline style.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n* Chained operations with an API inspired from Scala collections, Apache Spark RDDs, and Microsoft LINQ.\r\n* Very easy to parallelize operations like `map`\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "@vinta Could you please merge this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a3a88c0a76e0a4ec88",
    "number": 1157,
    "body": "By making a contribution to this project, I certify that:\r\n\r\n(a) The contribution was created in whole or in part by me and I\r\nhave the right to submit it under the open source license\r\nindicated in the file;\r\n\r\n(b) I understand and agree that this project and the contribution\r\nare public and that a record of the contribution (including all\r\npersonal information I submit with it, including my sign-off) is\r\nmaintained indefinitely and may be redistributed consistent with\r\nthis project or the open source license(s) involved.\r\n\r\nSigned-off-by: William Moreno Reyes williamjmorenor@gmail.com\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a3a88c0a76e0a4ec89",
    "number": 1156,
    "body": "## What is this Python project?\r\nRequestium is a Python library that merges the power of Requests, Selenium, and Parsel into a single integrated tool for automatizing web actions.\r\n\r\nThe library was created for writing web automation scripts that are written using mostly Requests but that are able to seamlessly switch to Selenium for the JavaScript heavy parts of the website, while maintaining the session.\r\n\r\nRequestium adds independent improvements to both Requests and Selenium, and every new feature is lazily evaluated, so its useful even if writing scripts that use only Requests or Selenium.\r\n\r\n**Features:**\r\n * Enables switching between a Requests' Session and a Selenium webdriver while maintaining the current web session.\r\n * Integrates Parsel's parser into the library, making xpath, css, and regex much cleaner to write.\r\n * Improves Selenium's handling of dynamically loading elements.\r\n * Makes cookie handling more flexible in Selenium.\r\n * Makes clicking elements in Selenium more reliable.\r\n * Supports Chrome and PhantomJS.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nCombines two great modules: requests and selenium\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a4a88c0a76e0a4ec8a",
    "number": 1155,
    "body": "added Chaquopy, an SDK for android and BeeWare ,a toolkit \r\n\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a5a88c0a76e0a4ec8b",
    "number": 1154,
    "body": "added kurbenetes to DevOps\r\n\r\n## What is this Python project?\r\n\r\nAdded kurbentes python module to devops\r\n\r\n## What's the difference between this Python project and similar ones?\r\nDifferent opensource project\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "dupe of #1139"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a6a88c0a76e0a4ec8c",
    "number": 1153,
    "body": "## What is this Python project?\r\n\r\nThe module num2words will convert the integer to words with 29 languages.\r\n\r\nUsage:-- \r\n>>> from num2words import num2words\r\n>>> num2words(42)\r\nforty-two\r\n>>> num2words(42, to='ordinal')\r\nforty-second\r\n>>> num2words(42, lang='fr')\r\nquarante-deux\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is available in 29 languages, and counting.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "It would  be great if anyone review this PR?",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a7a88c0a76e0a4ec8d",
    "number": 1152,
    "body": "## What is this Python project?\r\n\r\nProgramiz is the most beginner-friendly tutorials website for learning Python. Our tutorials and library documentation are used as a trustworthy reference by more than 1 million users every month.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* All tutorials on Programiz are written with beginners in mind, the logic is explained using simple examples.\r\n* We have a clean uninstrusive layout.\r\n* We have integrated an online Python interpreter that allows users to execute the commands that we are teaching and see for themselves the output without leaving the website.\r\n* Our goal is to become the most beginner-friendly tutorials website on the planet. Simple is hard, but we are ready for the challenge.\r\n* We are a small team of 3 programming enthusiasts from Nepal, trying to create a global resource we and our users love.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a7a88c0a76e0a4ec8e",
    "number": 1151,
    "body": "## What is this Python project?\r\n\r\nThis python library allows access to the Radare2 reverse-engineering, binary analysis and debugging framework. It can return results in json format and is very useful for automating analysis of binaries.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere aren't really many good options for binary analysis through python, atleast not with the feature-set that Radare2 offers. For this reason I think this library is a great addition to the list.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a8a88c0a76e0a4ec8f",
    "number": 1150,
    "body": "## What is this Python project?\r\n\r\nMolten is a Web Framework for building APIs using Dependency Injection which enables clean decoupled code structure.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Has Dependency Injection \r\n- Has built-in schema validation for incoming request data\r\n- Use type hints\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n                 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87a9a88c0a76e0a4ec90",
    "number": 1148,
    "body": "## What is this Python project?\r\n\r\nplotnine is an implementation of a grammar of graphics in Python, it is based on ggplot2. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is similar to `ggplot` but `ggplot` is no longer maintained. The last commit on that repo was 2 years ago. https://github.com/yhat/ggpy/issues/654.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "👍",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87aaa88c0a76e0a4ec91",
    "number": 1147,
    "body": "Added invoice2data (A modular Python library to extract data from PDF invoices)\r\n\r\n## What is this Python project?\r\nA modular Python library to support your accounting process.\r\n - extracts text from PDF files using different techniques, like pdftotext, pdfminer or tesseract OCR.\r\n - searches for regex in the result using a YAML-based template system\r\n - saves results as CSV, JSON or XML or renames PDF files to match the content.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nI haven't come across any such project in python\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87aba88c0a76e0a4ec92",
    "number": 1146,
    "body": "Awesome Python is a wonderful taxonomy of Python software and PythonLinks.info is doing almost the same thing for Python videos.\r\n\r\n## What is this Python project?\r\nPythonLinks.info organizes Python Videos from the best Python conferences into a tree of categories and ranks them by up votes versus total votes. Browse the tree, and you will find the top level categories of Machine Learning, Data Science, Parallelism, Python in the Organization and in the Community, Python Skills and Python Software. Each category has further sub-categories. It is a taxonomy of Python Videos. \r\n\r\n## Features\r\nYou can search the tree, and the results are displayed as a tree. \r\n\r\nThere are usually no more than about 7 items in any category.   This is very good from a human factors point of view. \r\n\r\nPythonLinks.info works well on cell phones.  Swipe left, right up or down to navigate the tree. \r\n On the desktop,  to navigate the tree, use the arrow keys or the mouse scroll wheel.  \r\n\r\nCurrently 720 videos are indexed, I add about a conference of 50 videos every week.\r\n\r\nNot everyone watches videos, but those who do really like having videos on the same \r\ntopic located in the same category, and ranked by upvotes versus total votes.\r\n\r\nAnd of course, at the root of the tree, PythonLinks.info, you will find the 10 best overall videos.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe three alternatives are youtube search, web search and PyVideo.org\r\n\r\n### YouTube Search\r\nA YouTube search only shows you results from YouTube.  PythonLinks.info is happy to index videos hosted anywhere.  Do a search on Python, and in the top 10 videos you get one video on Monty Python and two videos from 5 years ago. \r\n\r\n### Web Search\r\nWhen you do a web video search on \"Python \", usually 5 of the top 10 are paid courses.   \r\nI prefer the free videos.  With a web search, you often get videos which are out of date.   \r\nThis is particularly a problem  when the technology is changing rapidly.   \r\nPythonLinks has all recent videos.  Worse yet, a web search gives what is effectively an infinite \r\nlist of videos, but a basic principal in human factors is that there should be no more \r\nthan about 7 items in any category.\r\n\r\n### PyVideo.org\r\nPyVideo.org is the well known alternative. They were founded in 2008.  By 2016 they \r\nwere indexing 192 annual conferences, but that has been reducing and in 2018, so far this year they have only indexed 9 conferences, and generally not the major ones.  Do a search on say \"Pandas\", they limit you to 100 results, and all but 2 of them were from last year or before.  They seem to have lost their drive. \r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "The Best Python Lightning Talks\r\n\r\nThe best lightning talks at EuroPython\r\nhttps://pythonlinks.info/europython-2019-lightning-talks\r\n\r\nThe best lightning talks at PyCon US\r\nhttps://pythonlinks.info/the-best-lightning-talks-of-pycon-usa-2019\r\n\r\nSo 13 people up voted this pull request.  But people love my growing catalogue of \r\nlightning talks even more.  Maybe now it can get voted in. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87aba88c0a76e0a4ec93",
    "number": 1145,
    "body": "## What is this Python project?\r\n\r\nThe ultimate Python library in building OAuth and OpenID Connect servers. JWS, JWK, JWA, JWT are included.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nhttps://lepture.com/en/2018/announcement-of-authlib\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87aca88c0a76e0a4ec94",
    "number": 1144,
    "body": "## What is this Python project?\r\n\r\n[Pyfield](https://github.com/Ublimjo/pyfield) is a collection of field for your form\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPyfield is focused more on console form\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87ada88c0a76e0a4ec95",
    "number": 1143,
    "body": "Fix README index.",
    "head_branch": "fix_readme_index",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1143 from kelvins/fix_readme_index\n\nDatabase comes before database driver"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87aea88c0a76e0a4ec96",
    "number": 1142,
    "body": "## What is this Python project?\r\n\r\nAlembic is a lightweight database migration tool for usage with the SQLAlchemy Database Toolkit for Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It works perfectly with SQLAlchemy.\r\n- It is easy to install and easy to use.\r\n- I don't know other tools like this.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_alembic",
    "is_a_fork": true,
    "comments": [
      "(@kelvins you may :+1: your own PRs...)",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87afa88c0a76e0a4ec97",
    "number": 1141,
    "body": "## What is this Python project?\r\n\r\nBlack is the uncompromising Python code formatter. Black gives you speed, determinism, and freedom from `pycodestyle` nagging about formatting. You can save time and mental energy for more important matters.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Black makes code review faster by producing the smallest diffs possible. 🖤 \r\n- It is easy to install and easy to use.\r\n- It is open source (MIT license).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_black",
    "is_a_fork": true,
    "comments": [
      "Added."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b0a88c0a76e0a4ec98",
    "number": 1140,
    "body": "## What is this Python project?\r\n\r\nBetamax is a VCR imitation for requests. This will make mocking out requests much easier.\r\n\r\nBetamax intercepts every request you make and attempts to find a matching request that has already been intercepted and recorded.\r\n\r\n> Betamax records your HTTP interactions so the NSA does not have to.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It is super easy to use.\r\n- It works very well with [requests](http://docs.python-requests.org/en/master/).\r\n- It stores cassettes in JSON format. 💪 \r\n- It is open source. ❤️ \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_betamax",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b0a88c0a76e0a4ec99",
    "number": 1139,
    "body": "## What is this Python project?\r\n\r\nOfficial Python client library for the kubernetes API.\r\nIt provides an easy way to manage (create, delete, update) kubernetes deploys.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI haven't found a similar library for Python yet.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_kubernetes_client",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b1a88c0a76e0a4ec9a",
    "number": 1138,
    "body": "## What is this Python project?\r\n\r\nThis is a Python plugin to measure and generate reports of code coverage.\r\nIt is very simple to use, is MIT licensed and is compatible with coverage package.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to coverage the `pytest-cov` plugin does some extras:\r\n\r\n- Subprocess support: you can fork or run stuff in a subprocess and will get covered without any fuss.\r\n- Xdist support: you can use all of pytest-xdist's features and still get coverage.\r\n- Consistent pytest behavior. If you run coverage run -m pytest you will have slightly different sys.path (CWD will be in it, unlike when running pytest).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_pytest_cov",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b2a88c0a76e0a4ec9b",
    "number": 1137,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b3a88c0a76e0a4ec9c",
    "number": 1136,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b3a88c0a76e0a4ec9d",
    "number": 1135,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b4a88c0a76e0a4ec9e",
    "number": 1134,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b5a88c0a76e0a4ec9f",
    "number": 1133,
    "body": "it can be added under HTTP or Web Framework section too.\r\n\r\n## What is this Python project?\r\nHTTP and Websocket client server implementation for asyncio\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis one works with asyncio\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b6a88c0a76e0a4eca0",
    "number": 1132,
    "body": "## What is this Python project?\r\n\r\n[dynaconf](https://github.com/rochacbruno/dynaconf) is a layered configuration system for Python applications - with strong support for 12-factor applications and extensions for Flask and Django.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- allows to store parameters in multiple file formats (`.toml`, `.json`, `.yaml`, `.ini` and `.py`)\r\n- sensitive secrets like **tokens** and **passwords** can be stored in safe places like` .secrets` file or _vault server_\r\n- has **drop in extensions** for **Flask** and **Django**\r\n- **powerful CLI** to help you manage your settings via console.\r\n- **customizable Validation System** to ensure correct config parameters.\r\n- allows to **access settings** from anywhere within a **single** `dynaconf.settings` module\r\n\r\nIt works like a **magic** and makes managing settings a lot easier.\r\n",
    "head_branch": "add-dynaconf",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b7a88c0a76e0a4eca1",
    "number": 1131,
    "body": "## What is this Python project?\r\n\r\nRemi is a GUI library for Python applications which transpiles an application's interface into HTML to be rendered in a web browser. This removes platform-specific dependencies and lets you easily develop cross-platform applications in Python!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to the other GUIs, this one ca be executed in a remote server and acceded in any device with just a web browser.\r\n\r\n--\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b7a88c0a76e0a4eca2",
    "number": 1130,
    "body": "## What is this Python project?\r\n\r\nIt's a modern parser, easy for beginners and useful for experts. \r\n\r\nIt's competitive with PLY but also adds many more features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nvs PLY:\r\n- EBNF grammar which is easier to read & write\r\n- Earley algorithm support, which is much stronger algorithmically\r\n- Automatic line numbering\r\n- Automatic AST construction\r\n\r\nPlenty more. A longer comparison can be found on Lark's README\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Any chance to re-open this? I got 10 votes just this week, I'll probably pass 20 in another week or two"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b8a88c0a76e0a4eca3",
    "number": 1129,
    "body": "## What is this Python project?\r\n\r\nPyYAML-Tags: [GitHub](https://github.com/meiblorn/pyyaml-tags), [PyPI](https://pypi.org/project/pyyaml-tags/)\r\n\r\n- Custom tags support for the mature PyYAML library\r\n- Simple API\r\n- Extensible \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- There is no alternatives with such functionality for the Python YAML processing.\r\n- Good documentation\r\n- MIT Licence\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87b9a88c0a76e0a4eca4",
    "number": 1128,
    "body": "## What is this Python project?\r\nBottle is a microframework that was originally meant for building APIs. Its default features include routing, templating, utilities, and a basic abstraction over the WGSI, also known as the Web Server Gateway Interface, standard. WGSI is a specification that describes how a web server communicates with web applications, and how web applications can be chained together to process one request.\r\n\r\nBottle is best used for building simple personal apps and for prototyping.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nSome nice aspects of Bottle include: \r\n1. It is distributed as a single file module; everything is implemented in a single source file\r\n2. It has no dependencies other than the Python Standard library\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "good",
      "friendly bump",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87baa88c0a76e0a4eca5",
    "number": 1127,
    "body": "## What is this Python project?\r\n\r\nStream processing framework for Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWallaroo is a  extensible framework that makes it easy to get stateful stream processing and event-driven applications. Wallaroo is was  purpose-built for use cases that require state management, complex workflows, bursty capacity demands, or the need to run anywhere – on-prem, at the edge, or on any cloud.\r\n\r\nWallaroo was built with several high-level goals in mind:\r\n\r\n- Create a dependable and resilient distributed computing framework\r\n- Take care of the complexities of distributed computing \"plumbing,\" allowing developers to focus on their business logic\r\n- Provide high-performance & low-latency data processing\r\n- Be portable and deploy easily (i.e., run on-prem or any cloud)\r\n- Manage in-memory state for the application\r\n- Allow applications to scale as needed, even when they are live and up-and-running\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "wallaroo",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87bba88c0a76e0a4eca6",
    "number": 1126,
    "body": "## What is this Python project?\r\n\r\nAdds functionality to the python debugger, including support for remote debugging\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's easy to configure remote debugging.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87bca88c0a76e0a4eca7",
    "number": 1125,
    "body": "## What is this Python project?\r\n\r\nPythonRobotics is a collection of robotics algorithms with Matplotlib visualizations. The majority of the algorithms are focused on autonomous navigation for mobile robots, and the code is intended to be easily readable to help users understand how the algorithm works. \r\n\r\nSince I created a new section for this, I also added a link to rospy, which is the Python library for ROS (Robot Operating System). ROS is a robotics middleware used by many companies and universities to facilitate the development of robotic systems.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere was not a robotics section prior to this PR, and robotics is awesome. It deserves a place in awesome-python.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1125 from daniel-s-ingram/master\n\nAdded robotics section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87bca88c0a76e0a4eca8",
    "number": 1124,
    "body": "## What is this Python project?\r\n\r\n[Uplink](https://github.com/prkumar/uplink) turns your HTTP API into a Python class.\r\n```python\r\nfrom uplink import Consumer, get, headers, Path, Query\r\n\r\nclass GitHub(Consumer):\r\n    \"\"\"A Python Client for the GitHub API.\"\"\"\r\n\r\n    @get(\"users/{user}/repos\")\r\n    def get_repos(self, user: Path, sort_by: Query(\"sort\")):\r\n        \"\"\"Retrieves the user's public repositories.\"\"\"\r\n```\r\n\r\nUplink is a **Declarative** HTTP Client for Python:\r\n\r\n- Builds Reusable Objects for Consuming Web APIs.\r\n- Works with **Requests**, **asyncio**, and **Twisted**.\r\n- Inspired by [Retrofit](http://square.github.io/retrofit/)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Quickly Define Structured API Clients\r\n- Bring Your Own HTTP Library\r\n- Easy and Transparent Deserialization/Serialization\r\n- Extendable\r\n- Authentication\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87bda88c0a76e0a4eca9",
    "number": 1123,
    "body": "Repo : https://github.com/Scille/umongo\r\nDocs : https://umongo.readthedocs.io\r\n\r\n## What is this Python project?\r\n\r\nA synchronous/asynchronous ODM for MongoDB.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Work with multiple drivers (PyMongo, TxMongo, motor_asyncio and mongomock for the moment)\r\n- Stay close to the standards MongoDB driver to keep the same API when possible: use find({\"field\": \"value\"}) like usual but retrieve your data nicely OO wrapped !\r\n- Tight integration with Marshmallow serialization library to easily dump and load your data with the outside world\r\n- i18n integration to localize validation error messages\r\n- Python3 only\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "add_umongo",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87bea88c0a76e0a4ecaa",
    "number": 1122,
    "body": "Repo: https://github.com/Nobatek/flask-rest-api/\r\nDocs: https://flask-rest-api.readthedocs.io\r\n\r\n## What is this Python project?\r\n\r\nDB agnostic framework to build auto-documented REST APIs with Flask and marshmallow\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is a glue layer on top of great libraries from the marshmallow ecosystem:\r\n\r\n- marshmallow itself for serialization, deserialization and validation\r\n- webargs to parse request arguments\r\n- apispec to generate OpenAPI documentation\r\n\r\nflask-rest-api does not develop its own serialization/deserialization logic, which means less potential errors. It relies on marshmallow, which is a reference library for those tasks. It reduces the boilerplate even more if the application uses an ORM or ODM that can generate marshmallow schemas from the database model (marshmallow-sqlalchemy, umongo or marshmallow-mongoengine,...).\r\n\r\nThe OpenAPI (Swagger) specification is automatically generated, yet customizable, and exposed with ReDoc or Swagger UI.\r\n\r\nIt includes features not found in other similar frameworks:\r\n\r\n- Pagination\r\n- ETag\r\n\r\nflask-rest-api is Python3 only. It supports marshmallow 2 and 3.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "add_flask_rest_api",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87bfa88c0a76e0a4ecab",
    "number": 1121,
    "body": "## What is this Python project?\r\n\r\n[aiochan](https://github.com/zh217/aiochan) is a concurrency library that is used on top of the built-in library [asyncio](https://docs.python.org/3/library/asyncio.html). It provides channels together with `put`, `get` and `select` operations on them as its concurrency primitives, thus enabling CSP-style concurrency programs to be written (like in Go or in Clojure's core.async). In additions to lots of convenient methods and functions which enable easy-to-read and easy-to-write concurrent dataflow, there are also methods provided that can overcome python's GIL restriction in order to fully utilise all CPU cores on a single machine.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNone of the libraries already listed is similar to this one. Compared to those that are not listed (such as [python-csp](https://github.com/futurecore/python-csp), [aiochannel](https://github.com/tbug/aiochannel) and [aiostream](https://github.com/vxgmichel/aiostream)), they do not enable the full CSP-style programming (usually they do not provide `select`, which must be implemented inside the channel), or they are not actively maintained at all and do not work well with the newest python versions.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c0a88c0a76e0a4ecac",
    "number": 1120,
    "body": "## What is this Python project?\r\n\r\n[Yaspin](https://github.com/pavdmyt/yaspin) provides a full-featured terminal spinner to show the progress during long-hanging operations.\r\n\r\n### Features:\r\n\r\n- Lightweight. No external dependencies\r\n- Runs at all major **CPython** versions (*2.7*, *3.4*, *3.5*, *3.6*, *3.7*), **PyPy** and **PyPy3**\r\n- Supports all (60+) spinners from [cli-spinners](https://github.com/sindresorhus/cli-spinners)\r\n- Supports all *colors*, *highlights*, *attributes* and their mixes from [termcolor](https://pypi.org/project/termcolor/) library\r\n- Easy to combine with other command-line libraries, e.g. [prompt-toolkit](https://github.com/jonathanslenders/python-prompt-toolkit/)\r\n- Flexible API, easy to integrate with existing code\r\n- User-friendly API for handling POSIX [signals](https://www.computerhope.com/unix/signals.htm)\r\n- Safe **pipes** and **redirects**:\r\n\r\n```\r\n$ python script_that_uses_yaspin.py > script.log\r\n$ python script_that_uses_yaspin.py | grep ERROR\r\n```\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIntuitive and powerful API:\r\n\r\n```python\r\nimport time\r\nfrom yaspin import yaspin\r\n\r\nwith yaspin().white.bold.shark.on_blue as sp:\r\n    sp.text = \"White bold shark in a blue sea\"\r\n    time.sleep(5)  # time consuming code\r\n```\r\n\r\n![yaspin](https://raw.githubusercontent.com/pavdmyt/yaspin/master/gifs/shark.gif)\r\n\r\nLightweight; Constantly evolving; Flexible and feature-rich API for handling POSIX signals.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "yaspin-cli-spinner",
    "is_a_fork": true,
    "comments": [
      "How is this different from [halo](https://github.com/manrajgrover/halo) which was authored and released before `yaspin` project started?",
      "@manrajgrover I would not compare `halo` and `yaspin`. `halo` is a great project and `yaspin` was greatly inspired by ideas from it. Both projects are constantly evolving and I don't see the reason for feature-to-feature comparison. The motivation behind `yaspin` was to create a terminal-spinner library which reflects my views on what should be considered a *lightweight* and *user-friendly* API. It's more like an experiment or an exercise.\r\n\r\nI'd suggest to add `halo` to **awesome-python** list as well. As of now, there is no progress-bar\\spinner tools in this list (except for [click](https://github.com/pallets/click) which contains some means for that). Even great [tqdm](https://github.com/tqdm/tqdm) is not included!\r\n\r\nI think progress-bar and terminal-spinners would be a great addition to the [CLI tools](https://github.com/vinta/awesome-python#command-line-tools) subsection of the **awesome-python** list.\r\n\r\nP.S. if you create a PR to add `halo` into **awesome-python** list, my supporting vote will be among first ones ;)",
      "@pavdmyt Thanks for sharing. I would have loved a well-written criticism (in a form of an issue) which could have been discussed upon to improve `halo`'s API (which others did and changes were incorporated). However, I do encourage everyone to write a package that serves their purpose, and hopefully will solve others problem. I'm not sure if a parallel effort is worth though.\r\n\r\nI did raise a PR for [adding halo](https://github.com/vinta/awesome-python/pull/972) almost a year back but it still hasn't got enough votes to be merged. Sadly, old PRs don't receive much attention and hence are stagnant.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c0a88c0a76e0a4ecad",
    "number": 1118,
    "body": "## What is this Python project?\r\n\r\nLightweight framework for building command-line applications with Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Interactive mode (see [GIF](https://github.com/facebookincubator/python-nubia/raw/master/docs/interactive.gif?raw=true))\r\n- Simple\r\n- Python 3 (with type support for validation :heart:)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c1a88c0a76e0a4ecae",
    "number": 1116,
    "body": "CCtbx is a comprehensive tool eligible for the most crystallography related projects\r\n\r\nI do not know any other similar project\r\n\r\n--\r\n\r\n",
    "head_branch": "cctbx",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c2a88c0a76e0a4ecaf",
    "number": 1115,
    "body": "[safrs](https://github.com/thomaxxl/safrs/) - Quickly deploy JSON:API services based on SQLAlchemy models with an OpenApi (fka Swagger) UI\r\n\r\n## What is this Python project?\r\n\r\n The purpose of this framework is to help python developers create a self-documenting JSON API for sqlalchemy models\r\n![demo](https://github.com/thomaxxl/safrs/raw/master/docs/images/safrs.gif)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Automatically generate OpenApi-Spec (swagger) documentation\r\n- JSON:API compliant\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c3a88c0a76e0a4ecb0",
    "number": 1114,
    "body": "## What is this Python project?\r\n\r\nManages the remote machines via SSH including a rich set of file operations such as sync and mkdtemp. Built on top of paramiko and spur.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPlease see the github page for details on differences to Spur; the most important ones are:\r\n* type annotations\r\n* pathlib.Path support\r\n* many helper functions to abstract away the tedious work with SFTP client\r\n* sync function to sync a local to a remote directory (similar to rsync)\r\n* computation of MD5 checksums\r\n*  a wrapper around paramiko's SFTP client to automatically reconnect on failures\r\n\r\n--\r\nAnyone who agrees with this pull request could vote for it by adding a :+1:  to it, and usually, the maintainer will merge it when votes reach 20.",
    "head_branch": "mristin/added-spurplus",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c3a88c0a76e0a4ecb1",
    "number": 1113,
    "body": "## What is this Python project?\r\n\r\nRun commands and manipulate files locally or over SSH using the same interface\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is built on top of paramiko, but has a much simpler and more straight-forward interface.\r\n\r\n--\r\nAnyone who agrees with this pull request could vote for it by adding a :+1:  to it, and usually, the maintainer will merge it when votes reach 20.",
    "head_branch": "mristin/added-spur",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c4a88c0a76e0a4ecb2",
    "number": 1112,
    "body": "Added PyXLL to Office section.\r\n\r\n## What is this Python project?\r\nPyXLL.\r\n\r\nA tool for creating Excel add-ins for Excel in Python.\r\n\r\nFeatures include:\r\n- Write Excel user defined functions and macros in Python\r\n- Extend the Excel UI with menu functions and custom ribbons\r\n- Stream real time data to Excel from Python\r\n- Asynchronous and thread safe functions\r\n- Customizable type system for handling Excel <-> Python type conversion\r\n- Reload Python code without restarting Excel\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo other projects embed the Python interpreter into Excel to enable writing full Excel add-ins in Python with the same level of performance that's possible with PyXLL.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "24 votes 👍 ",
      "@vinta please let me know there's anything more you need me to do to get this PR merged, thanks!",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "@vinta please let me know if there's anything else you need before you can merge this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c5a88c0a76e0a4ecb3",
    "number": 1111,
    "body": "## What is this Python project?\r\n\r\nSnips NLU is a natural language understanding library dedicated to *Intent Parsing* and *Entity Extraction*. It is based on machine learning and makes use of [Logistic Regression](https://en.wikipedia.org/wiki/Logistic_regression) and [Conditional Random Fields](https://en.wikipedia.org/wiki/Conditional_random_field).\r\n\r\nConsider the following sentence:\r\n```\r\n    \"What will be the weather in paris at 9pm?\"\r\n```\r\n\r\nAfter proper training, the Snips NLU library allows to extract structured data such as:\r\n\r\n```\r\n    {\r\n       \"intent\": {\r\n          \"intentName\": \"searchWeatherForecast\",\r\n          \"probability\": 0.95\r\n       },\r\n       \"slots\": [\r\n          {\r\n             \"value\": \"paris\",\r\n             \"entity\": \"locality\",\r\n             \"slotName\": \"forecast_locality\"\r\n          },\r\n          {\r\n             \"value\": {\r\n                \"kind\": \"InstantTime\",\r\n                \"value\": \"2018-02-08 20:00:00 +00:00\"\r\n             },\r\n             \"entity\": \"snips/datetime\",\r\n             \"slotName\": \"forecast_start_datetime\"\r\n          }\r\n       ]\r\n    }\r\n```\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- The purpose of Snips NLU is more high-level than libraries such as spaCy or NLTK and can be directly used to build chatbots for instance.\r\n- Snips NLU has been designed to run very fast, with a very low memory footprint, while achieving very good prediction accuracy (cf [this blogpost](https://medium.com/snips-ai/an-introduction-to-snips-nlu-the-open-source-library-behind-snips-embedded-voice-platform-b12b1a60a41a)).\r\n- This library offers an interface with [`snips-nlu-rs`](https://github.com/snipsco/snips-nlu-rs), its Rust equivalent for inference only. It allows to persist the NLU pipeline trained with the python code, and load it with the rust code to perform inference. This offers a great portability.\r\n\r\n----------\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c6a88c0a76e0a4ecb4",
    "number": 1110,
    "body": "## What is this Python project?\r\n\r\nCxFreeze allows you to build python executable for every desktop platform (such as Linux, Windows or Mac).\r\nThis project is like pyinstaller or nuitka but it updates faster than first and builds in python (other than second).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c7a88c0a76e0a4ecb5",
    "number": 1108,
    "body": "Adding a couple of plugins for python in vim.\r\n\r\n## What is this Python project?\r\n\r\nVim plugin for python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOptions for those that don't like pymode's opinionated all-in-one package\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c7a88c0a76e0a4ecb6",
    "number": 1107,
    "body": "## What is this Python project?\r\n\r\nPyecharts is a python interface to [Echarts.js](https://github.com/apache/incubator-echarts) visualization library. It supports [28+ charts ranging from 2D, 3D and geo mapping](http://nbviewer.jupyter.org/github/pyecharts/pyecharts-users-cases/blob/master/notebook-users-cases/notebook-user-cases.ipynb). It supports data scientists using Jupyter, [nteract](http://pyecharts.org/#/zh-cn/jupyter_notebook?id=nteract) and supports web developers with [django ](http://pyecharts.org/#/zh-cn/django)and [flask](http://pyecharts.org/#/zh-cn/flask) integration. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is similar to plotly.py and bokeh. \r\n\r\nComparing with plotly.py, pyecharts offers free exports of svg, pdf and html format whereas plotly.py offer them under a premium version. And pyecharts does not really care about the number of exports to other file formats whereas ploly.py allows up to[100 exports per 24h](https://plot.ly/products/cloud/).\r\n\r\nComparing with bokeh, user group are different. Bokeh serves primarily scientific community whereas pyecharts serves both web developers and data analysts. Bokeh's api emulates matplotlib whereas pyecharts api emulates pygal. \r\n\r\nWhen it comes to geomapping, pyecharts has strong support for [Chinese regions](https://github.com/echarts-maps). \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Pyecharts is a good project.",
      "Pyecharts is great.",
      "Pyecharts无敌",
      "第一个数据可视化使用的工具",
      "@vinta @chfw \r\n\r\nIt will be a great honor if pyecharts became a real `awesome project` in the list.",
      "Such a nice guy.\r\nwhat a genius work",
      "@vinta review this pr pls, the 👍 has reached 69."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c8a88c0a76e0a4ecb7",
    "number": 1106,
    "body": "This is a nit, not a new project.\r\n\r\n## What is this Python project?\r\n\r\nN/A\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nN/A\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1106 from dbieber/patch-1\n\nnit: remove hyphen in \"python-fire\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87c9a88c0a76e0a4ecb8",
    "number": 1105,
    "body": "## What is this Python project?\r\n\r\nhttps://guillotina.io\r\nGuillotina. The fullstack DataFramwork. \r\nGuillotina is the only full-featured Python AsyncIO REST Resource Application Server designed for high-performance, horizontally scaling solutions.\r\n\r\n### Why Guillotina\r\n\r\n- **Performance**: Traditional python web servers limit the number of simultaneous requests to the number of threads running the server. With AsyncIO, you are able to server many simultaneous requests at the same time.\r\n\r\n- **Front-end friendly**: Guillotina is designed to make your JavaScript engineers happy. With things like automatic swagger documentation for endpoints, OOTB CORS and websockets, your front-end team will be happy to work with Guillotina. We speak JSON but can adapt with any Content-Type payload request/response bodies.\r\n \r\n- **AsyncIO**: With AsyncIO, websockets are simple. More interestingly, AsyncIO is an ideal match with micro-service architectures.\r\n    \r\n- **Object model**: Guillotina uses a hierarchial object model. This hierarchy of objects then maps to URLs. The hierarchy model is perfect for managing a large number of objects.\r\n    \r\n- **Security**: Guillotina has a granular, hierarchial, multi-demensional security system that allows you to manage the security of your content at a level not available to other frameworks.\r\n    \r\n- **Scale**: With integrations like Redis, ElasticSearch and Cockroach, you have the tools to scale.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Fast and scalable: Built on AsyncIO, Guillotina scales out of the box by design.\r\n- Simplicity with batteries included: With features like CORS, Websockets and TUS, Guillotina provides just the right amount of \"batteries.\"\r\n- Securely organized data: Guillotina has a granular, hierarchial, multi-demensional security system that allows you to manage the security of your content at a level not available to other frameworks.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Hey, It has more than 20 likes (why it's still not merged?)",
      "Why It has been closed...",
      "+1 for opening this back. ping @vinta "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87caa88c0a76e0a4ecb9",
    "number": 1104,
    "body": "## What is this Python project?\r\n\r\nAs said in its own README\r\n\r\n> Pyxel is a retro game development environment in Python.\r\nThanks to its simple specifications inspired by retro gaming consoles, such as only 16 colors can be displayed and only 4 sounds can be played back at the same time, you can feel free to enjoy making pixel art style games.\r\n\r\nIt's similar to fantasy consoles like PICO-8 or TIC-80.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPyxel differ from the other projects by focusing on developing retro games imposing limitations, like the small sized color palette.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87cba88c0a76e0a4ecba",
    "number": 1103,
    "body": "## What is this Python project?\r\n\r\n[appkernel](https://github.com/accelero-cloud/appkernel) - A beautiful, well tested python framework helping you to deliver REST APIs from zero to production within minutes (no kidding: literally within minutes).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Flask - it provides a lot more functionality out of the box, including security and ORM/ODM;\r\n* Eve - the resource definition is in code, making it very natural for developers to extend it;\r\n* Flask-Restful - more extended feature set, including serialization, validation, security and data encryption;\r\n* Flask-Restless - focuses on MongoDB (instead of SQLAlchemy), provides value generators, fine-grained security features, HATEOAS, REST client with circuit breaker and many other planned features making the development of micro-services much easier;\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87cba88c0a76e0a4ecbb",
    "number": 1101,
    "body": "[pyvips](https://github.com/libvips/pyvips) is a binding for the [libvips image processing library](https://libvips.github.io/libvips/). It's fast and only needs a little memory. \r\n\r\nFor example, on this benchmark:\r\n\r\nhttps://github.com/libvips/libvips/wiki/Speed-and-memory-use\r\n\r\nIt's 5x faster than ImageMagick and needs 10x less memory.\r\n\r\npyvips works on all python versions on all platforms, is LGPL, can be [simply installed with pip](https://pypi.org/project/pyvips/), has [complete documentation](https://libvips.github.io/pyvips), has a large test suite, and has no known memory leaks.\r\n",
    "head_branch": "add-pyvips",
    "is_a_fork": true,
    "comments": [
      "+1 ... just want to say how awesome this package has been for the organization i work for",
      "No problem, glad it's useful!\r\n\r\nYou can vote +1 by clicking on the smiley face at the top-right of a post and selecting the thumbs up.",
      "Thank you!",
      "Oh huh, not merged, sorry. ",
      "I think this is awaiting merge rather than stale. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87cca88c0a76e0a4ecbc",
    "number": 1100,
    "body": "Added PySimpleGUI to the list of GUI frameworks.\r\n\r\nIt's a new package that enables creation of custom GUIs in very few lines of clear, easy to read Python code.\r\n\r\nNone of the other simplified GUI frameworks come close to this kind of design and ease of use.\r\n\r\n## What is this Python project?\r\n\r\nPySimpleGUI provides a way for beginners to build GUIs with little effort.  Customized GUIs can be built using Python lists in a few short minutes.  Results are returned via a list as well.  All typical GUI Widgets are available (checkboxes, radio buttons, buttons, text, etc)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- More Python-like than any other GUI package. Period.\r\n- Same widgets as tkinter but presented in an easy to understand way\r\n- No dependencies on other packages\r\n- Single source file.... copy source PySimpleGUI.py should pip install not be feasable\r\n- Easily understood by beginners (all of the others suck for beginning programmers or are too limited)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Yes!! 28 votes!!!\r\n\r\nHow often do these pull requests get merged?\r\n",
      "Hmmm... is there anything else I need to do in order to get added to the list?  How else can I help?\r\n",
      "Gentle nudge?  This one has been ready to integrate since Sept 4th  Trying to be patient but thought maybe this one was being overlooked.  It has plenty of votes and I sure would appreciate the help being listed here would bring.  '\r\n\r\nThank you for what may seem a thankless task.  I for one am appreciative of the opportunity to be listed.\r\n",
      "Oh WOW!!!\r\n\r\nDang, I cannot thank you enough for doing this merge so quickly!\r\n\r\nYour site matters so much in getting the word out to people that may find this package beneficial.  I appreciate you doing this merge super-fast.\r\n"
    ],
    "commit_messages": [
      "Merge pull request #1100 from MikeTheWatchGuy/patch-1\n\nAdded PySimpleGUI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87cda88c0a76e0a4ecbd",
    "number": 1099,
    "body": "\r\n## What is the Vibora project?\r\nVibora is a Web framework and was designed from scratch to be efficient.\r\n\r\n### Just like Flask\r\nVibora APIs were heavily inspired by the awesome Flask.\r\nBuiltin features were also based on many famous libraries as jinja2, marshmallow, websockets by aaugustin, werkzeug and many others.\r\n\r\nSchemas validation, template engine, sessions and many more features were written from scratch to provide great performance along with an elegant async interface.\r\n\r\n### Asynchronous\r\nVibora is fully asynchronous because web APIs are often IO based and that's exactly where an async architecture shines. \r\n\r\nVibora also take advantage of multiple CPU cores by default thanks to the multi-processed architecture. Uvloop and other C speed-ups are used when available.\r\n\r\n[Source](https://vibora.io/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "👍🏻"
    ],
    "commit_messages": [
      "Merge pull request #1099 from florianwiech/master\n\nadded Vibora, fast, efficient and asynchronous Web framework"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87cea88c0a76e0a4ecbe",
    "number": 1098,
    "body": "I was bummed to find two awesome-looking projects that are unmaintained:\r\n\r\n- code2flow - no code changes in 4 years (last on 30Oct2014) and announcement in README: https://github.com/scottrogowski/code2flow\r\n- pycallgraph - announcement that project was abandoned in README: https://github.com/gak/pycallgraph#project-abandoned\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I think you don't need to remove them if they still work as they should.",
      "Makes sense, I briefly tried code2flow on windows today and ran into some issues, but there are some user comments within the last year suggesting that it still works on UNIX systems\r\n\r\nShould the projects just be updated to say unmaintained?",
      "I set the labels to unmaintained. Let me know if you think this makes sense to merge or if the PR should be closed",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87cea88c0a76e0a4ecbf",
    "number": 1097,
    "body": "## What is this Python project?\r\n\r\n[Acra](https://github.com/cossacklabs/acra) is a network encryption proxy to protect databases and database-based applications from data leaks, allowing greater security for distributed applications via cryptography and intrusion detection.\r\n\r\n[AcraWriter](https://github.com/cossacklabs/acra/wiki/Using-Acra-to-Protect-Your-Django-App) is a part of Acra suite, a client-side library, which integrates into the app flow either through ORM or directly, and provides the means to encrypt the sensitive data.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAcra doesn't have similar projects, however you might think about Vault's Encryption as a Service engine, but deployed in your own infrastructure, without leaking keys anywhere.\r\n\r\n- Acra allows to selectively encrypt sensitive records with strong multi-layer cryptography in client-side application. Client-side app doesn't have _decryption_ key, thus compromising app won't lead to stealing key and decrypting data in the database.\r\n- Sensitive data is encrypted before being transmitted to the database, and decryption key is not stored on client side.\r\n- Data is decrypted in trusted environment (on AcraServer).\r\n- Acra allows to detect potential intrusions and SQL injections (using SQL firewall and poison records).\r\n- Has SIEM integrations.\r\n- Suits for distributed, microservice-rich environments.\r\n- Has numerous examples and tutorials for Python client applications.\r\n- Allows your application to cover GDPR articles 25, 32, 33, 34. \r\n- Tested, supported, audited.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Looks like data security tools are not super-popular ones :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87cfa88c0a76e0a4ecc0",
    "number": 1096,
    "body": "## What is this Python project?\r\n\r\nArrow is a Python library that offers a sensible, human-friendly approach to creating, manipulating, formatting and converting dates, times, and timestamps. It implements and updates the datetime type, plugging gaps in functionality, and provides an intelligent module API that supports many common creation scenarios. Simply put, it helps you work with dates and times with fewer imports and a lot less code. \r\n\r\nIt is widely used and has over 5K stars in github. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFully implemented, drop-in replacement for datetime\r\nSupports Python 2.6, 2.7, 3.3, 3.4 and 3.5\r\nTime zone-aware & UTC by default\r\nProvides super-simple creation options for many common input scenarios\r\nUpdated .replace method with support for relative offsets, including weeks\r\nFormats and parses strings automatically\r\nPartial support for ISO-8601\r\nTimezone conversion\r\nTimestamp available as a property\r\nGenerates time spans, ranges, floors and ceilings in timeframes from year to microsecond\r\nHumanizes and supports a growing list of contributed locales\r\nExtensible for your own Arrow-derived types\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d0a88c0a76e0a4ecc1",
    "number": 1095,
    "body": "## What is this Python project?\r\n\r\nOOP HTML templating system. Build HTML pages without the need to learn a new templating syntax and using all the power of Python's syntax.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- no need to write html in any way to have html\r\n- generation of html dynamically using all the power of python language (not a templating language)\r\n- Inheritance of templates in OOP fashion not \"includes\"\r\n- full reusability of templates\r\n- overall speed (for complex html structures)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d1a88c0a76e0a4ecc2",
    "number": 1094,
    "body": "## What is this Python project?\r\n\r\n[Themis](https://github.com/cossacklabs/themis) framework is cryptography library for making typical encryption schemes easy to use in the real-world use cases like data at rest, authenticated data exchange, transport protection, authentication, and so on.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Most libraries require understanding of how cryptographic algorithms work: what is padding, what is IV, minimum key length. Themis is made by cryptographers from Cossack Labs for applied developers: providing strong security, yet hiding complicated crypto-choices from developers.\r\n- [Strong cryptography inside](https://github.com/cossacklabs/themis/wiki/Cryptosystems), secure default settings.\r\n- \"Pre-baked\" use-cases: special encryption schemes for storing data and for sending data (f.e. no need to rotate transport keys manually, built in forward secrecy).\r\n- High level functions, cryptography details hidden under the hood (developers don't need to know the difference between AES CBC mode and AES GCM mode to encrypt data).\r\n- [Documentation and examples](https://github.com/cossacklabs/themis/wiki/Python-Howto) created for developers, not security experts.\r\n- Based on known vendors of crypto-primitives like OpenSSL, BoringSSL, and LibreSSL, has a C-core with high-level language wrappers available for many popular languages.\r\n- Fits complex client-server architectures; has unified APIs across platforms. One encryption library across all stack. \r\n- Useful for making backends for mobile applications.\r\n- Tested, supported, audited.\r\n- GDPR-friendly.\r\n- Widely used in real-world apps.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Looks like crypto libraries are not very popular"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d2a88c0a76e0a4ecc3",
    "number": 1092,
    "body": "Arguably the best package manager around:\r\n\r\n## What is this Python project?\r\n\r\nPackage Management for the entire operating system.\r\nExtremely feature-rich, handles both Python and non-Python dependencies, library linking, build system options, live software distribution, dependency conditionality (and/or/older/newer/explicit version), version slotting (multiple versions in parallel), and much more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIn contrast to pip it can manage the entire dependency graph of an operating system.\r\nIn contrast to other package managers it is fully implemented in Python and designed for rolling-release, source-based installs, and full freedom of choice for the user. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d2a88c0a76e0a4ecc4",
    "number": 1090,
    "body": "## What is this Python project?\r\n\r\n[H2O](https://github.com/h2oai/h2o-3) is an Open Source Fast Scalable Machine Learning Platform that can used for many tasks (Deep Learning, Gradient Boosting, Random Forest, Generalized Linear Modeling (Logistic Regression, Elastic Net), K-Means, PCA, Stacked Ensembles, Automatic Machine Learning (AutoML), ...).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- in-memory platform for distributed, scalable machine learning\r\n- works seamlessly with big data technologies like Hadoop and Apache Spark\r\n- Models' export in MOJO and POJO\r\n- Many interfaces like R, Python, Scala, Java, JSON and the Flow notebook/web interface\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1090 from fzapfack/patch-1\n\nadd H2O to machine learning section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d3a88c0a76e0a4ecc5",
    "number": 1088,
    "body": "## What is this Python project?\r\n\r\n[Pottery](https://github.com/brainix/pottery) is a Pythonic way to access Redis.  If you know how to use Python dicts, then you already know how to use Pottery.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOther Redis clients stay close to the [Redis command set](https://redis.io/commands), but Pottery provides container classes to access Redis that implement the various Python container APIs.  Under the hood, Pottery uses [redis-py](https://github.com/andymccurdy/redis-py), but Pottery provides:\r\n\r\n- a [dict API](https://github.com/brainix/pottery#dicts) to access [Redis Hashes](https://redis.io/commands#hash)\r\n- a [set API](https://github.com/brainix/pottery#sets) to access [Redis Sets](https://redis.io/commands#set)\r\n- a [list API](https://github.com/brainix/pottery#lists) to access [Redis Lists](https://redis.io/commands#list)\r\n- a [distributed ID generator](https://github.com/brainix/pottery#nextid)\r\n- a [distributed lock](https://github.com/brainix/pottery#redlock) that implements the [`threading.Lock`](https://docs.python.org/3/library/threading.html#lock-objects) API\r\n- a [timer](https://github.com/brainix/pottery#contexttimer) to accurately measure code execution time\r\n- a [Bloom filter](https://github.com/brainix/pottery#bloom-filters) that implements the set API, backed by Redis\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "pottery",
    "is_a_fork": true,
    "comments": [
      "@vinta - Pinging you as this PR has reached 20 votes.  How does this look?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d4a88c0a76e0a4ecc6",
    "number": 1087,
    "body": "## What is this Python project?\r\n\r\nDramatiq is a distributed task processing library with a focus on simplicity, reliability and performance.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can find my motivation for building it [here](http://dramatiq.io/motivation.html).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "dramatiq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d5a88c0a76e0a4ecc7",
    "number": 1086,
    "body": "Update outdated Passlib hyperlink.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1086 from stoksc/patch-1\n\nUpdate Passlib hyperlink in README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d6a88c0a76e0a4ecc8",
    "number": 1085,
    "body": "Telegram Bot API is one of most useful apis for builnding chatbots It's easy to start develope bots on Telegram with this library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-telegram-bot-api",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d7a88c0a76e0a4ecc9",
    "number": 1084,
    "body": "## What is this Python project?\r\n\r\nWhen evaluating a function numerically we would like to sample it more densely in the interesting regions instead of evaluating it on a manually-defined homogeneous grid. \r\nI am going to demonstrate an open-source software package Python Adaptive that evaluates the function at the optimal points by analysing existing data and planning ahead on the fly.\r\nWith a few lines of code you define your goal, evaluate functions on a computing cluster, and live-plot the data.\r\nIt performs averaging of stochastic functions, interpolation of vector-valued one and two-dimensional functions, and one-dimensional integration.\r\nIn my [work](https://quantumtinkerer.tudelft.nl/), using adaptive resulted in a **ten-fold speed increase** over using a homogeneous grid.\r\n\r\n## [Repo link](https://github.com/python-adaptive/adaptive)\r\nhttps://github.com/python-adaptive/adaptive\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are no other Python packages that do the same as `adaptive`. There are some samplers that do high dimensional sampling, but adaptive is aimed at 0D, 1D and 2D. Besides it does:\r\n* sampling in parallel (trivial to switch between your computer and a computing cluster)\r\n* live plotting\r\n* interpolation\r\n\r\n## Examples\r\n<img src=\"https://user-images.githubusercontent.com/6897215/38739170-6ac7c014-3f34-11e8-9e8f-93b3a3a3d61b.gif\" width='20%'> </img>\r\n<img src=\"https://user-images.githubusercontent.com/6897215/35219611-ac8b2122-ff73-11e7-9332-adffab64a8ce.gif\" width='40%'> </img>\r\n\r\nCheck out the `adaptive` [example notebook `learner.ipynb`](learner.ipynb) (or run it [live on Binder](https://mybinder.org/v2/gh/python-adaptive/adaptive/master?filepath=learner.ipynb)) to see examples of how to use `adaptive`.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta, this PR has 24 upvotes ATM! 👍 \r\n\r\nAlso, almost 400 stars on the repo.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Still waiting for @vinta. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d7a88c0a76e0a4ecca",
    "number": 1083,
    "body": "Add easylogging lib in logging\r\nhttps://github.com/AI35/easylogging\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d8a88c0a76e0a4eccb",
    "number": 1081,
    "body": "## What is this Python project?\r\nThe  [Everbug](https://github.com/everhide/everbug) is a debug middleware with browser extensions.\r\nDisplays: Queries with explains, context variables and cProfile\r\n\r\n## What's the difference between this Python project and similar ones?\r\n* Awesome user interface\r\n* Ajax support\r\n* Has no third-party dependencies \r\n* Only needed and useful tools\r\n* Only this app shows context\r\n* The output page remain unchanged\r\n* The Extensions for Chrome & Firefox\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87d9a88c0a76e0a4eccc",
    "number": 1080,
    "body": "## What is this Python project?\r\n\r\nA very simple scripts that animates long screenshots for README. Make it easier to present projects on GitHub.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nHaven't seen direct competition.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87daa88c0a76e0a4eccd",
    "number": 1078,
    "body": "An interactive, browser-based graphing library for Python ✨\r\n\r\n[plotly.py](https://github.com/plotly/plotly.py)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Also Dash if not already present.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Why is this not merged? I don't remember 20 votes being an explicit cut-off..."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87daa88c0a76e0a4ecce",
    "number": 1077,
    "body": "It a tool to download documentation right from the command line.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\nIt a tool to download documentation right from the command line.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87dba88c0a76e0a4eccf",
    "number": 1076,
    "body": "Previous `nryoung/algorithms` project is now deprecated and `keon/algorithms` is the new successor project.\r\n\r\nhttps://github.com/keon/algorithms",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1076 from keon/patch-1\n\nUpdate algorithms project"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87dca88c0a76e0a4ecd0",
    "number": 1075,
    "body": "## What is this Python project?\r\n\r\n[Real Python](https://realpython.com/tutorials/) is a repository of free and in-depth Python tutorials created by a diverse team of professional Python developers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nReal Python's unique angle is releasing several in-depth and peer reviewed tutorials every week. Recent examples:\r\n\r\n* https://realpython.com/python-itertools/\r\n* https://realpython.com/python-data-classes/\r\n* https://realpython.com/pipenv-guide/\r\n* https://realpython.com/python-thinking-recursively/\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Ready to be merged :) 37 upvotes"
    ],
    "commit_messages": [
      "Merge pull request #1075 from dbader/patch-1\n\nAdd Real Python to Resources section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87dda88c0a76e0a4ecd1",
    "number": 1072,
    "body": "## What is this Python project?\r\n\r\nStatic type checker.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Faster\r\n- Actively maintained\r\n- Momentum behind it by a big player in the industry\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1072 from Ferenc-/master\n\nAdd Pyre"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87dea88c0a76e0a4ecd2",
    "number": 1071,
    "body": "Changing  the link for Stackless Python to the new official home at https://github.com/stackless-dev/stackless.\r\n\r\n## What is this Python project?\r\nNot a new project. Just fixing link to the correct one.\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nNA.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Fixed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87dea88c0a76e0a4ecd3",
    "number": 1070,
    "body": "## What is this Python project?\r\n\r\nLomond is a WebSocket client designed for ease of use.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nLomond exposes WebSocket interactions with an iterator of events, which is often easier to reason about than the callback approach taken by most WebSocket libraries.\r\n\r\nThis library is well tested with 100% coverage, and commercially sponsored. \r\n\r\nHere's an example that streams Bitcoin prices.\r\n\r\n```python\r\nfrom lomond import WebSocket\r\nwebsocket = WebSocket('wss://ws-feed.gdax.com')\r\n\r\nfor event in websocket:\r\n    if event.name == \"ready\":\r\n        websocket.send_json(\r\n            type='subscribe',\r\n            product_ids=['BTC-USD'],\r\n            channels=['ticker']\r\n        )\r\n    elif event.name == \"text\":\r\n        print(event.json)\r\n```\r\n\r\nMore information [here](https://www.willmcgugan.com/blog/tech/post/announcing-lomond/)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87dfa88c0a76e0a4ecd4",
    "number": 1069,
    "body": "## What is this Python project?\r\n\r\n`Rebound` is a command-line tool that instantly fetches Stack Overflow results when you get a compiler error.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe only similar ones are `how2` and `socli`, which are command-line clients for browsing Stack Overflow. `Rebound` is different because it automatically pulls an error message and keywords from the stack trace, creates a search query, and displays the most relevant SO results in the terminal. It also has the same functionality as `how2` and `socli`, if the user chooses.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e0a88c0a76e0a4ecd5",
    "number": 1068,
    "body": "## What is this Python project?\r\n\r\n[Awesome Python for Social Good](https://github.com/metakermit/awesome-python-for-social-good) is another awesome list with a focus on listing examples and ideas of using Python for Social Good.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike the other more technical-focused awesome lists, this one focuses more on gathering ideas for how people could use Python to contribute to the community, tackle some pressing issues in the world (climate change, DDoS attacks on the Internet infrastructure, fake news, bots, trolls…). It's a combination of technical examples & datasets and relevant news & knowledge sources that could be used as motivation. I haven't seen another list that tackles these topics here.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1068 from metakermit/patch-1\n\nadd Python for Social Good list"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e1a88c0a76e0a4ecd6",
    "number": 1067,
    "body": "## What is this Python project?\r\n\r\nIt's a library of functions and objects specifically designed to simulate quantum systems.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. it's fast\r\n2. it's extremely versatile\r\n3. it's actively maintained\r\n4. it has a lot of users\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1067 from ziofil/master\n\nUpdate README.md - added QuTiP library in science section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e2a88c0a76e0a4ecd7",
    "number": 1065,
    "body": "## What is this Python project?\r\n\r\nThis is a list of python libraries, implementing schemas, ORMs/ODMs, models, active record patters.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the only such a list I'm aware of :) \r\nBesides, it is complete, neat and with avatars :)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "awesome-python-models",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e2a88c0a76e0a4ecd8",
    "number": 1064,
    "body": "## What is this Python project?\r\n\r\nA visualization lib using leaflet.js\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is really useful to view interactive maps using Python.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e3a88c0a76e0a4ecd9",
    "number": 1063,
    "body": "Edit lines to conform more closely with contribution guidelines:\r\n  * Add periods to some lines to make them more consistent with each other.\r\n  * Correct case in some lines to be more constant with each other.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "grammar",
    "is_a_fork": true,
    "comments": [
      "@seth-stansberry Wow, thank you!"
    ],
    "commit_messages": [
      "Merge pull request #1063 from seth-stansberry/grammar\n\nUpdate README.md Grammar"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e4a88c0a76e0a4ecda",
    "number": 1062,
    "body": "## What is this Python project?\r\n\r\nA high level library which can turn command line scripts from most interpreted languages into a graphical application.\r\nIt requires a single \"usage\" line to be present on the client script. This line is parsed to generate a \"automatic\" gui, while also allowing for more advanced features. Its a new paradigm which is better explained in the project page.\r\nAlso includes a custom window batch file to enable running the script from a shortcut on systems where python is not installed but is available as a \"portable\" distro or embedded on a 3rd party application.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhile the spirit is somewhat similar to Gooey, it can be used with languages other than python.\r\nIts fully data driven, and can be mantained by end users with limited programming skills.\r\nOn a recent market analysis i could not find any other projects that offer this kind of high level funcionally, in python or any other languages.\r\nMost interpreted languages could be supported. The current supported languages are windows batch (.bat/.cmd), windows WSH (.js/.vbs), C-Shell (.csh), Windows powershell and Perl (.pl/.lava).\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e5a88c0a76e0a4ecdb",
    "number": 1061,
    "body": "## What is this Python project?\r\n\r\nRecommendation System library in pytorch. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n1. Only implementation in pytorch\r\n2. Actively managed by top recsys developers\r\n3. Highly configurable\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1061 from harshgupta7/master\n\nAdded Entry to Recommender System"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e6a88c0a76e0a4ecdc",
    "number": 1060,
    "body": "## What is this Python project?\r\n\r\n[TextDistance](https://github.com/orsinium/textdistance) -- Compute distance between sequences.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n30+ algorithms, pure python implementation, common interface, optional external libs usage.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "textdistance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1060 from orsinium/textdistance\n\nAdd TextDistance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e6a88c0a76e0a4ecdd",
    "number": 1059,
    "body": "## What is this Python project?\r\n\r\nNone library were modified.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nChange web crawler section to web crawler & web scraping since the two are used for the same thing however they are different.\r\n\r\nThat's why slightly change how the section was written.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@filipefilardi Thank you!"
    ],
    "commit_messages": [
      "Merge pull request #1059 from filipefilardi/master\n\nImprove web crawler section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e7a88c0a76e0a4ecde",
    "number": 1057,
    "body": "(Added two links because of the necessity of creating a new subsection; hope it's ok)\r\n\r\n## What is this Python project?\r\n\r\nVirgil Security SDK - an SDK which allows developers to add full end-to-end security to their existing digital solutions to become HIPAA and GDPR compliant and more using Virgil API.\r\nVirgil Crypto Library - a high-level cryptographic library that allows to perform all necessary operations for securely storing and transferring data.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- easy to use\r\n- suitable for many tasks related to securely transferring and storing data\r\n- updating regularly\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e8a88c0a76e0a4ecdf",
    "number": 1056,
    "body": "I just added a good package that I use for environment management.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "What do you think?",
      "Really! You put the link to your fork of [poetry](https://github.com/sdispater/poetry) rather than the original one.\r\n\r\nSee #1045 for the correct PR",
      "Already have it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87e9a88c0a76e0a4ece0",
    "number": 1053,
    "body": "## What is this Python project?\r\n\r\nPipenv — the officially recommended Python packaging tool from Python.org, free (as in freedom).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPipenv is a tool that aims to bring the best of all packaging worlds (bundler, composer, npm, cargo, yarn, etc.) to the Python world. Windows is a first-class citizen, in our world.\r\n\r\nIt automatically creates and manages a virtualenv for your projects, as well as adds/removes packages from your Pipfile as you install/uninstall packages. It also generates the ever-important Pipfile.lock, which is used to produce deterministic builds.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Looks like there's currently a merge conflict, but this would be great to add.",
      "I agree on this tool should be included to repo, but \r\n\r\n\"Pipenv — the officially recommended Python packaging tool from Python.org, free (as in freedom).\"\r\n\r\nis not true. This was false marketing, started lots of discussions and changed. It's just a packaging tool mentioned in Python docs, not \"the officially recommended\" one.",
      "Hi @NCNecros,\r\nCould you please update a title of this PR (`pypenv` -> `pipenv`)?\r\nThanks!",
      "I've just checked `README.md` and found that `pipenv` is already there in [Environment Management](https://github.com/vinta/awesome-python#environment-management) section.",
      "Moreover, `pipenv` was there when this PR was created.\r\nCorresponding issue: #846",
      "Thanks, I totally missed that. Guess this should be closed.",
      "> \r\n> \r\n> Hi @NCNecros,\r\n> Could you please update a title of this PR (`pypenv` -> `pipenv`)?\r\n> Thanks!\r\n\r\nupdated.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87eaa88c0a76e0a4ece1",
    "number": 1052,
    "body": "https://hackr.io/tutorials/learn-python\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "dupe of #1025 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87eaa88c0a76e0a4ece2",
    "number": 1051,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-PuLP",
    "is_a_fork": true,
    "comments": [
      "Added PuLP - A Linear Programming Optimization Modeler",
      "So what does this project do? The template is there for a reason...",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87eba88c0a76e0a4ece3",
    "number": 1050,
    "body": "## What is this Python project?\r\n\r\nCleansing, pre-processing, feature engineering, exploratory data analysis and easy ML with PySpark backend. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt implements several handy tools for data wrangling and munging that will make your life much easier. The first obvious advantage over any other public data cleaning library or framework is that it will work on your laptop or your big cluster, and second, it is amazingly easy to install, use and understand.\r\n\r\n## Webpage\r\n\r\nhttps://hioptimus.com\r\n\r\n## Docs\r\n\r\nhttps://docs.hioptimus.com\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks @vinta!! "
    ],
    "commit_messages": [
      "Merge pull request #1050 from FavioVazquez/patch-1\n\nAdd Optimus to Data Analysis section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87eca88c0a76e0a4ece4",
    "number": 1049,
    "body": "## What is this Python project?\r\n\r\nPyTorch-NLP is a toolkit for NLP research built on PyTorch, an up and coming deep learning library. It is also trending on https://github.com/trending/python! \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n### [torchtext](https://github.com/pytorch/text)\r\n\r\ntorchtext and PyTorch-NLP differ in the architecture and feature set; otherwise, they are similar. torchtext and PyTorch-NLP provide pre-trained word vectors, datasets, iterators and text encoders. PyTorch-NLP also provides neural network modules and metrics. From an architecture standpoint, torchtext is object orientated with external coupling while PyTorch-NLP is object orientated with low coupling.\r\n\r\n### [AllenNLP](https://github.com/pytorch/text)\r\n\r\nAllenNLP is designed to be a platform for research. PyTorch-NLP is designed to be a lightweight toolkit.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Proof of traction:\r\n\r\n![image](https://user-images.githubusercontent.com/7424737/38503488-0da3c880-3bc7-11e8-9601-d9750897d5dd.png)\r\n\r\n![image](https://user-images.githubusercontent.com/7424737/38503461-014395de-3bc7-11e8-982c-883276524c7c.png)\r\n\r\n![image](https://user-images.githubusercontent.com/7424737/38503516-1e6f2470-3bc7-11e8-911b-8ccc43bfc158.png)\r\n\r\n",
      "👍 "
    ],
    "commit_messages": [
      "Merge pull request #1049 from PetrochukM/patch-1\n\nAdd PyTorch-NLP"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87eda88c0a76e0a4ece5",
    "number": 1048,
    "body": "## What is this Python project?\r\n\r\n[opencollect](https://github.com/JamesKBowler/opencollect), a fast, robust framework for collecting data from multiple sources and saving it locally to a MySQL database. Just write your client code and send the data over with an SQL statement.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIs there one? If so, please let me know!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87eea88c0a76e0a4ece6",
    "number": 1046,
    "body": "## What is this Python project?\r\n\r\nIt's a command-line tool to lock, upgrade and verify requirements files. It's built on top of pip-tools and enhances it.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's similar to pip-tools, but automates multiple common tasks, like running for multiple files, using compatible releases and such.\r\nPipEnv is another similar tool that is built on top of pip-tools, but that one introduces new format and doesn't support Python < 3.6 and more than two environments.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87eea88c0a76e0a4ece7",
    "number": 1045,
    "body": "## What is this Python project?\r\n\r\nPoetry helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\npoetry is a tool to handle dependencies installation, building and packaging of Python packages. It only needs one file to do all of that: the new, standardized `pyproject.toml`.\r\n\r\nHere are some of the features that make it stand out:\r\n\r\n* Exhaustive dependency resolver\r\n* Intuitive CLI (See https://poetry.eustace.io/docs/cli/)\r\n* Emphasis on semantic versioning and constraint specification so that wildcard dependencies (`*`) will be considered bad practice\r\n* Support for dependencies caret, tilde, wildcard, inequality and multiple requirements.\r\n* Only one file: the standardised pyproject.toml which aims at being readable and clear.\r\n* Mandatory compatible python versions specification.\r\n\r\nFor more information: https://github.com/sdispater/poetry or http://poetry.eustace.io\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-poetry",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Hello @vinta and @sdispater,\r\n`poetry` was added in 9240f179cd16bad389d7623a76731713b2cf6df6, so it looks like this PR can be closed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87efa88c0a76e0a4ece8",
    "number": 1044,
    "body": "## What is this Python project?\r\n\r\n[lupin](https://github.com/holinnn/lupin) helps in serializing python objects (user classes) to native Python types (dict, list, etc.) and loading data to python complex objects.\r\n\r\nIt can also be used to validate incoming data.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can use your existing models (and don't need to modify them) in order to make them work with lupin.\r\nYou just have to define a schema and bind it to your class in order to make it work.\r\n\r\nIt handles polymorphic lists and associations.\r\nFor example if in one list there are a `User` and an `Admin` object, then it will be able to load and dump those objects to native python datatypes or load the list with one instance of the `User` class and the other one with the `Admin` class.\r\n\r\nComplex validators combinations can be made in order to make the data validation process easier \r\nFor example if a field is defined with this validators combination : `Equal(\"Lupin\") | Equal(\"Andrésy\")` then the validation stage will only pass if the data is `Andrésy` or `Lupin`.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_lupin",
    "is_a_fork": true,
    "comments": [
      "Perfectly fits to my [list](https://github.com/grundic/awesome-python-models) ;)\r\nAdded!",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f0a88c0a76e0a4ece9",
    "number": 1043,
    "body": "## What is this Python project?\r\n\r\n[awesome-jupyter](https://github.com/markusschanta/awesome-jupyter) is a curated list of awesome Jupyter projects, libraries and resources. It currently has 55 stars, 43 commits and 73 items on the list. I added it to the category description for \"Interactive Interpreter\" as is the case for other awesome lists that are dedicated to a particular category.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the most comprehensive one in terms of stars/commits and arguably most complete/highest quality (caveat: I'm the author, I'm naturally biased).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@vinta Thanks! 🎉"
    ],
    "commit_messages": [
      "Merge pull request #1043 from markusschanta/master\n\nAdd link to awesome-jupyter in Interactive Interpreter section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f1a88c0a76e0a4ecea",
    "number": 1041,
    "body": "## What is this Python project?\r\n\r\n[Patchify](https://github.com/Kytyzoff/Patchify) converts your image into a patch collage\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no project like this\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "good project\r\n",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f2a88c0a76e0a4eceb",
    "number": 1040,
    "body": "## What is this Python project?\r\n\r\n[ToPy](https://github.com/williamhunter/topy) is a tool for topology optimization\r\n[vkapi](https://github.com/isosnovik/vkapi) is an ultimate sdk for [vk.com](https://vk.com) API\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no projects like this listed in *awesome python*\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f2a88c0a76e0a4ecec",
    "number": 1039,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1039 from andriyor/master\n\nUpdate python version for standard libraries"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f3a88c0a76e0a4eced",
    "number": 1038,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f4a88c0a76e0a4ecee",
    "number": 1037,
    "body": "## What is this Python project?\r\n\r\n[packerlicious](https://github.com/mayn/packerlicious) is a python library to create [packer](https://github.com/hashicorp/packer) templates in python.\r\n\r\nexample usage:\r\n```\r\nfrom packerlicious import builder, provisioner, Template\r\n\r\ntemplate = Template()\r\ntemplate.add_builder(\r\n    builder.AmazonEbs(\r\n        access_key=\"...\",\r\n        secret_key=\"...\",\r\n        region=\"us-east-1\",\r\n        source_ami=\"ami-fce3c696\",\r\n        instance_type=\"t2.micro\",\r\n        ssh_username=\"ubuntu\",\r\n        ami_name=\"packer {{timestamp}}\"\r\n    )\r\n)\r\n\r\ntemplate.add_provisioner(\r\n    provisioner.Shell(\r\n        script=\"setup_things.sh\"\r\n    )\r\n)\r\n\r\nprint(template.to_json())\r\n```\r\n\r\nresulting packer template:\r\n```\r\n    {\r\n      \"builders\": [\r\n        {\r\n          \"access_key\": \"...\",\r\n          \"ami_name\": \"packer {{timestamp}}\",\r\n          \"instance_type\": \"t2.micro\",\r\n          \"region\": \"us-east-1\",\r\n          \"secret_key\": \"...\",\r\n          \"source_ami\": \"ami-fce3c696\",\r\n          \"ssh_username\": \"ubuntu\",\r\n          \"type\": \"amazon-ebs\"\r\n        }\r\n      ],\r\n      \"provisioners\": [\r\n        {\r\n          \"script\": \"setup_things.sh\",\r\n          \"type\": \"shell\"\r\n        }\r\n      ]\r\n    }\r\n```\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- only one that supports expressing packer templates in python\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-packerlicious",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f5a88c0a76e0a4ecef",
    "number": 1036,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1036 from sfermigier/patch-1\n\npipelinedb is not implemented in Python -> removing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f6a88c0a76e0a4ecf0",
    "number": 1035,
    "body": "Added Scoop to algorithms section\r\n\r\n## What is this Python project?\r\n\r\nSCOOP features and advantages over futures, multiprocessing and similar modules are as follows:\r\n\r\nHarness the power of multiple computers over network;\r\nAbility to spawn multiple tasks inside a task;\r\nAPI compatible with PEP-3148;\r\nParallelizing serial code with only minor modifications;\r\nEfficient load-balancing.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\nThe common applications of SCOOP consist but is not limited to:\r\n\r\nEvolutionary Algorithms\r\nMonte Carlo simulations\r\nData mining\r\nData processing\r\nGraph traversal\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1035 from priyankaparikh/patch-1\n\nAdded Scoop"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f6a88c0a76e0a4ecf1",
    "number": 1033,
    "body": "## What is this Python project?\r\n\r\n[django-admin-interface](https://github.com/fabiocaccamo/django-admin-interface) is a customizable responsive admin interface, based on a modern flat theme, it lets you customize the admin title, logo and colors by the admin itself. Popup windows replaced by modals.\r\n\r\n![django-admin-interface-preview](https://user-images.githubusercontent.com/1035294/35631521-64b0cab8-06a4-11e8-8f57-c04fdfbb7e8b.gif)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt improves the default admin interface without replacing it.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f7a88c0a76e0a4ecf2",
    "number": 1032,
    "body": "## What is this Python project?\r\n\r\nIceCream is a small Python library that makes it easy to debug variables,\r\nexpressions, and code execution with a single, simple function: `ic()`. (short\r\nfor IceCream)\r\n\r\nWith arguments, `ic()` inspects itself and prints both its own arguments and\r\nthose argument's values.\r\n\r\n```python\r\nfrom icecream import ic\r\n\r\ndef foo(i):\r\n    return i + 333\r\n\r\nic(foo(123))\r\n```\r\n\r\nPrints\r\n\r\n```\r\nic| foo(123): 456\r\n```\r\n\r\nWithout arguments, `ic()` inspects itself and prints the calling filename and\r\nline number.\r\n\r\n```python\r\nfrom icecream import ic\r\n\r\ndef foo():\r\n    ic()\r\n    return 'bar'\r\n\r\nfoo()\r\n```\r\n\r\nPrints\r\n\r\n```\r\nic| example.py:4 in foo()\r\n```\r\n\r\nSee more IceCream magic and examples in IceCream's docs, [here](https://github.com/gruns/icecream).\r\n\r\nIceCream is well tested, permissively licensed, and supports Python 2, Python 3,\r\nPyPy2, and PyPy3.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIceCream's closest cousin is q (https://github.com/zestyping/q), but IceCream is\r\nsimpler, customizable, and actively maintained.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to\r\nit, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1032 from gruns/master\n\nAdd IceCream to Debugging Tools/Other."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f8a88c0a76e0a4ecf3",
    "number": 1031,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87f9a88c0a76e0a4ecf4",
    "number": 1030,
    "body": "## What is this Python project?\r\n\r\nPyflame allows you to profile an existing Python process. The output is an interactive \"flame graph\":\r\n\r\n![image](https://user-images.githubusercontent.com/167319/36851828-241b7884-1d62-11e8-990a-7e85e304ce4d.png)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou don't need to make any changes to your code. And you don't need to run the command under investigation yourself. So services which are managed by init.d or systemd are able to be profiled. This includes processes with embedded Python interpreters, like your uWSGI and mod_wsgi. And because the overhead is low enough that you can use it to profile live processes in production\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1030 from tomviner/patch-1\n\nAdd Pyflame"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87faa88c0a76e0a4ecf5",
    "number": 1029,
    "body": "Added [Using Python](http://usingpython.com) to list under Websites section. Using Python is a website with plentiful resources and examples of code including cool projects to do in GitHub, among others.",
    "head_branch": "add-using-python",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87faa88c0a76e0a4ecf6",
    "number": 1028,
    "body": "## What is this Python project?\r\n\r\nMasonite is a web framework that is extremely simple and changes what it means for a batteries included Python framework. Intuitive and elegant from installation to deployment.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Uses design patterns to make the framework extremely extendable and easy to maintain\r\n2. Extremely powerful built in IOC container with auto resolving dependency injection\r\n3. Lots of out of the box support and features that other Python frameworks don't have.\r\n4. Intuitive API and elegant code makes your application actually readable months or years later.\r\n5. Very extensive documentation\r\n6. A very powerful command line tool called craft commands\r\n7. Active Record style ORM instead of the clunky Data Mapper that other Python frameworks use\r\n8. Complete separation between models and migrations removing a lot of the magic and finger crossing of migrations\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@vinta Looks like we hit 20 :)",
      "@vinta anything else we need to do, bud? Merging this would be incredible 😍 "
    ],
    "commit_messages": [
      "Merge pull request #1028 from josephmancuso/master\n\nAdds Masonite Python framework to Web Frameworks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87fba88c0a76e0a4ecf7",
    "number": 1025,
    "body": "https://hackr.io/tutorials/learn-python\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87fca88c0a76e0a4ecf8",
    "number": 1023,
    "body": "## What is this Python project?\r\n\r\npython-pptx is a Python library for creating and updating PowerPoint (.pptx) files.\r\n\r\nA typical use would be generating a customized PowerPoint presentation from database content, downloadable by clicking a link in a web application. Several developers have used it to automate production of presentation-ready engineering status reports based on information held in their work management system.\r\n\r\nDocumentation: https://python-pptx.readthedocs.org/en/latest/\r\n\r\n> Note: Found this when making my downloads folder organizer\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNone of the others are for Powerpoint files (.pptx) Haven't seen anything similar and this was quite hard to find the first time around.\r\n\r\n--\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1023 from sushant10/master\n\nAdd python-pptx to Awesome List!"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87fda88c0a76e0a4ecf9",
    "number": 1022,
    "body": "## What is this Python project?\r\n\r\nTrafaret is a validation + conversion library. The main distinct feature of Trafaret is composability.\r\nFrom base Trafaret transformers and simple functions you can construct transformer of any complexity. And dict validation is not corner stone of this library.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no actually similar projects or I don't know about. Trafaret is simple and yet powerful, because of monads inside, sorry. It does not count dict as a only thing that is need care about, offer strong API first and some sugar on top of strong foundation.\r\n\r\nTo combine two trafarets you just do `trafaret1 & trafaret2`, or even `trafaret1 | trafaret2`. And any single argument function can be treated as trafaret if it raises trafaret.DataError or return value.",
    "head_branch": "trafaret",
    "is_a_fork": true,
    "comments": [
      "What I need to do to merge this?",
      "Finally, trafaret library will be at this list :)",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87fea88c0a76e0a4ecfa",
    "number": 1021,
    "body": "## What is this Python project?\r\n\r\nParris is an automated infrastructure setup utility for training machine learning algorithms. With minimal boilerplate, an ML engineer/data scientist can launch a neural network training session on an AWS server stack via CloudFormation, with a single script invocation.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis utility is unique against other libraries in that the list does not include any open source tools specifically tailored toward machine learning practitioners for automating the server setup process and the execution of training jobs. The closest project in the list is SaltStack, which is an infrastructure automation and management system rather than an ML training job automation utility.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Notifying @vinta : Is this PR cleared to be pushed?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87fea88c0a76e0a4ecfb",
    "number": 1020,
    "body": "## What is this Python project?\r\n\r\nauthenticatorpy is a Python library that provide unique keys for 2FA with given secret. It works with Python versions from 2.7+ and Python 3.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo dependency and this is standalone library which developers can use to generate tokens.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f87ffa88c0a76e0a4ecfc",
    "number": 1019,
    "body": "## What is this Python project?\r\n\r\nAnti-spam tools for django apps. Includes honey pot, reCAPTCHA and Akismet.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n * includes several methods of spam protection\r\n * highly customizable\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "django-antispam",
    "is_a_fork": true,
    "comments": [
      "@mixkorshun You may (also) want to add this package to the [awesome-django](https://gitlab.com/rosarior/awesome-django) list.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8800a88c0a76e0a4ecfd",
    "number": 1018,
    "body": "## What is this Python project?\r\n\r\ndjango-carrot: The lightweight task queue for Django\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n- Minimal configuration required\r\n- Task scheduling\r\n- Task prioritization\r\n- Detailed task level monitoring/logging via django-carrot monitor\r\n- Built in daemon\r\n- Supports Django 2.0\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8801a88c0a76e0a4ecfe",
    "number": 1017,
    "body": "Fixed typo complier -> compiler",
    "head_branch": "spelling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1017 from ss18/spelling\n\nSpelling of \"compiler\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8801a88c0a76e0a4ecff",
    "number": 1016,
    "body": "## What is this Python project?\r\n\r\nhttps://github.com/laike9m/pdir2\r\n\r\nPython library to make builtin function `dir()` more pretty and informative.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDifference between builtins `dir()`:\r\n\r\n1. pretty\r\n2. informative\r\n3. structured \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8802a88c0a76e0a4ed00",
    "number": 1014,
    "body": "add toapi project like web content extracting tool\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1014 from moas/patch-1\n\nAPI for every website"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8803a88c0a76e0a4ed01",
    "number": 1013,
    "body": "## What is this Python project?\r\n\r\nThree different projects: URL manipulation (2) and metadata extraction (1).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- htmldate: better overall recall by extraction, metadata extraction and optional text scraping features\r\n- netaddr: specific handling of network addresses (IPv4 and IPv6)\r\n- tldextract: very good coverage of top-level domains, reference can be updated separately\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "👍",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8804a88c0a76e0a4ed02",
    "number": 1012,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8804a88c0a76e0a4ed03",
    "number": 1011,
    "body": "## What is this Python project?\r\n\r\nIt is so awesome.\r\n+ Intelligent Algorithm\r\n+ Logic Programming\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nShow some unwell-known but excellent packages, esp. deap and PyKE.\r\nWhat a pity for the lack of a framework of GA.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "for the sake of DEAP a framework for GA",
      "come on, bro. vote it!",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8805a88c0a76e0a4ed04",
    "number": 1010,
    "body": "## What is this Python project?\r\n\r\nIt generates static type annotations by collecting runtime types. After collection is done it can insert generated stubs into your code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- compared to [pyannotate](https://github.com/dropbox/pyannotate) it has Python3 support;\r\n- compared to [pyannotate](https://github.com/dropbox/pyannotate) it does not need [special pytest plugin](https://github.com/kensho-technologies/pytest-annotate): ```monkeytype run `which pytest` ``` is enough;\r\n- pyannotate is the Dropbox project, MonkeyType is the Instagram project;\r\n- it stores analysis results in sqlite format.\r\n\r\nPS. Neither `pyannotate` nor `pytest-annotate` is in this list, but I follow the contribution rule `1pr == 1 link`.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1010 from night-crawler/master\n\nAdded MonkeyType to 'Code Analysis and Linter'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8806a88c0a76e0a4ed05",
    "number": 1008,
    "body": "<img src=\"https://cosmic-cortex.github.io/modAL/img/modAL_b.png\" alt=\"modAL\" style=\"width: 400px;\">\r\nModular Active Learning framework for Python3  \r\n\r\n[![travis-ci-master](https://travis-ci.org/cosmic-cortex/modAL.svg?branch=master)](https://travis-ci.org/cosmic-cortex/modAL) [![codecov-master](https://codecov.io/gh/cosmic-cortex/modAL/branch/master/graph/badge.svg)](https://codecov.io/gh/cosmic-cortex/modAL)\r\n\r\n# Overview\r\n- [Introduction](#introduction)  \r\n- [Active learning from bird's-eye view](#active-learning)  \r\n- [modAL in action](#modAL-in-action)\r\n  - [From zero to one in a few lines of code](#initialization)  \r\n  - [Replacing parts quickly](#replacing-parts)  \r\n  - [Replacing parts with your own solutions](#replacing-parts-with-your-own-solutions)  \r\n  - [An example with active regression](#active-regression)\r\n  - [Additional examples](#working-examples)  \r\n- [Installation](#installation)  \r\n- [About the developer](#about-the-developer)\r\n\r\n# Introduction<a name=\"introduction\"></a>\r\n\r\n> modal: adjective, relating to structure as opposed to substance  \r\n>  \r\n> (Merriam-Webster Dictionary)\r\n\r\nmodAL is an active learning framework for Python3, designed with *modularity, flexibility* and *extensibility* in mind. Built on top of scikit-learn, it allows you to rapidly create active learning workflows with nearly complete freedom. What is more, you can easily replace parts with your custom built solutions, allowing you to design novel algorithms with ease. modAL is aimed for practicioners and researchers as well, to make the assembly and testing of active learning pipelines quick and easy.\r\n\r\n## Active learning from bird's-eye view<a name=\"active-learning\"></a>\r\nWith the recent explosion of available data, you have can have millions of unlabelled examples with a high cost to obtain labels. For instance, when trying to predict the sentiment of tweets, obtaining a training set can require immense manual labour. But worry not, active learning comes to the rescue! In general, AL is a framework allowing you to increase classification performance by intelligently querying you to label the most informative instances. In general, an active learning workflow looks like the following.\r\n\r\n![active-learning](https://cosmic-cortex.github.io/modAL/img/active_learning.png)\r\n\r\nThe key components of any workflow are the **model** you choose, the **uncertainty** measure you use and the **query** strategy you apply to request labels. With modAL, instead of choosing from a small set of built-in components, you have the freedom to seamlessly integrate scikit-learn or Keras models into your algorithm and easily tailor your custom query strategies and uncertainty measures.\r\n\r\n# modAL in action<a name=\"modAL-in-action\"></a>\r\nLet's see what modAL can do for you!\r\n\r\n## From zero to one in a few lines of code<a name=\"initialization\"></a>\r\nActive learning with a scikit-learn classifier, for instance RandomForestClassifier, can be as simple as the following.\r\n```python\r\nfrom modAL.models import ActiveLearner\r\nfrom sklearn.ensemble import RandomForestClassifier\r\n\r\n# initializing the learner\r\nlearner = ActiveLearner(\r\n    predictor=RandomForestClassifier(),\r\n    X_initial=X_train, y_initial=y_train\r\n)\r\n\r\n# query for labels\r\nquery_idx, query_inst = learner.query(X_pool)\r\n\r\n# ...obtaining new labels from the Oracle...\r\n\r\n# supply label for queried instance\r\nlearner.teach(X_pool[query_idx], y_new)\r\n```\r\n\r\n## Replacing parts quickly<a name=\"replacing-parts\"></a>\r\nIf you would like to use different uncertainty measures and query strategies than the default uncertainty sampling, you can either replace them with several built-in strategies or you can design your own by following a few very simple design principles. For instance, replacing the default uncertainty measure to classification entropy looks the following.\r\n```python\r\nfrom modAL.models import ActiveLearner\r\nfrom modAL.uncertainty import entropy_sampling\r\nfrom sklearn.ensemble import RandomForestClassifier\r\n\r\nlearner = ActiveLearner(\r\n    predictor=RandomForestClassifier(),\r\n    query_strategy=entropy_sampling,\r\n    X_initial=X_train, y_initial=y_train\r\n)\r\n```\r\n\r\n## Replacing parts with your own solutions<a name=\"replacing-parts-with-your-own-solutions\"></a>\r\nmodAL was designed to make it easy for you to implement your own query strategy. For example, implementing and using a simple random sampling strategy is as easy as the following.\r\n```python\r\nimport numpy as np\r\n\r\ndef random_sampling(classifier, X_pool):\r\n    n_samples = len(X_pool)\r\n    query_idx = np.random.choice(range(n_samples))\r\n    return query_idx, X_pool[query_idx]\r\n\r\nlearner = ActiveLearner(\r\n    predictor=RandomForestClassifier(),\r\n    query_strategy=random_sampling,\r\n    X_initial=X_train, y_initial=y_train\r\n)\r\n```\r\n\r\n## An example with active regression<a name=\"active-regression\"></a>\r\nTo see modAL in *real* action, let's consider an active regression problem with Gaussian Processes! In this example, we shall try to learn the *noisy sine* function:\r\n```python\r\nimport numpy as np\r\n\r\nX = np.random.choice(np.linspace(0, 20, 10000), size=200, replace=False).reshape(-1, 1)\r\ny = np.sin(X) + np.random.normal(scale=0.3, size=X.shape)\r\n```\r\nFor active learning, we shall define a custom query strategy tailored to Gaussian processes. In a nutshell, a *query stategy* in modAL is a function taking (at least) two arguments (an estimator object and a pool of examples), outputting the index of the queried instance and the instance itself. In our case, the arguments are ```regressor``` and ```X```.\r\n```python\r\ndef GP_regression_std(regressor, X):\r\n    _, std = regressor.predict(X, return_std=True)\r\n    query_idx = np.argmax(std)\r\n    return query_idx, X[query_idx]\r\n```\r\nAfter setting up the query strategy and the data, the active learner can be initialized.\r\n```python\r\nfrom modAL.models import ActiveLearner\r\nfrom sklearn.gaussian_process import GaussianProcessRegressor\r\nfrom sklearn.gaussian_process.kernels import WhiteKernel, RBF\r\n\r\nn_initial = 5\r\ninitial_idx = np.random.choice(range(len(X)), size=n_initial, replace=False)\r\nX_initial, y_initial = X[initial_idx], y[initial_idx]\r\n\r\nkernel = RBF(length_scale=1.0, length_scale_bounds=(1e-2, 1e3)) \\\r\n         + WhiteKernel(noise_level=1, noise_level_bounds=(1e-10, 1e+1))\r\n\r\nregressor = ActiveLearner(\r\n    predictor=GaussianProcessRegressor(kernel=kernel),\r\n    query_strategy=GP_regression_std,\r\n    X_initial=X_initial.reshape(-1, 1), y_initial=y_initial.reshape(-1, 1)\r\n)\r\n```\r\nThe initial regressor is not very accurate.\r\n\r\n![gp-initial](https://cosmic-cortex.github.io/modAL/img/gp-initial.png)\r\n\r\nThe blue band enveloping the regressor represents the standard deviation of the Gaussian process at the given point. Now we are ready to do active learning!\r\n```python\r\n# active learning\r\nn_queries = 10\r\nfor idx in range(n_queries):\r\n    query_idx, query_instance = regressor.query(X)\r\n    regressor.teach(X[query_idx].reshape(1, -1), y[query_idx].reshape(1, -1))\r\n```\r\nAfter a few queries, we can see that the prediction is much improved.\r\n\r\n![gp-final](https://cosmic-cortex.github.io/modAL/img/gp-final.png)\r\n\r\n## Additional examples<a name=\"additional-examples\"></a>\r\nIncluding this, many examples are available:    \r\n- [Pool-based sampling](https://cosmic-cortex.github.io/modAL/Pool-based-sampling)  \r\n- [Stream-based sampling](https://cosmic-cortex.github.io/modAL/Stream-based-sampling)  \r\n- [Active regression](https://cosmic-cortex.github.io/modAL/Active-regression)  \r\n- [Ensemble regression](https://cosmic-cortex.github.io/modAL/Ensemble-regression)  \r\n- [Query by committee](https://cosmic-cortex.github.io/modAL/Query-by-committee)  \r\n- [Bootstrapping and bagging](https://cosmic-cortex.github.io/modAL/Bootstrapping-and-bagging)  \r\n- [Keras integration](https://cosmic-cortex.github.io/modAL/Keras-integration)\r\n\r\n# Installation<a name=\"installation\"></a>\r\nmodAL requires\r\n- Python >= 3.5\r\n- NumPy >= 1.13\r\n- SciPy >= 0.18\r\n- scikit-learn >= 0.18\r\n\r\nYou can install modAL directly with pip:  \r\n```\r\npip install modAL\r\n```\r\nAlternatively, you can install modAL directly from source:  \r\n```\r\npip install git+https://github.com/cosmic-cortex/modAL.git\r\n```\r\nFor running the examples, Matplotlib >= 2.0 is recommended.\r\n\r\n\r\n# About the developer<a name=\"about-the-developer\">\r\nmodAL is developed by me, [Tivadar Danka](https://www.tivadardanka.com) (aka [cosmic-cortex](https://github.com/cosmic-cortex) in GitHub). I have a PhD in pure mathematics, but I fell in love with biology and machine learning right after I finished my PhD. I have changed fields and now I work in the [Bioimage Analysis and Machine Learning Group of Peter Horvath](http://group.szbk.u-szeged.hu/sysbiol/horvath-peter-lab-index.html), where I am working to develop active learning strategies for intelligent sample analysis in biology. During my work I realized that in Python, creating and prototyping active learning workflows can be made really easy and fast with scikit-learn, so I ended up developing a general framework for this. The result is modAL :) If you have any questions, requests or suggestions, you can contact me at <a href=\"mailto:85a5187a@opayq.com\">85a5187a@opayq.com</a>! I hope you'll find modAL useful!\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-modAL",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8807a88c0a76e0a4ed06",
    "number": 1007,
    "body": "Added [awesomo](https://github.com/lk-geimfari/awesomo) to the section of the list of lists.\r\n\r\n<p align=\"center\"><img src=\"https://raw.githubusercontent.com/lk-geimfari/awesomeo/master/artwork/a.w.e.s.o.m.e_o.png\"></p>\r\n\r\n<p align=\"center\">\r\n  <b>A.W.E.S.O.M. O</b> is an extensive list of interesting open source projects written in various languages (including the great list of active and most popular Python projects.).\r\n</p>\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach 20.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1007 from lk-geimfari/patch-1\n\nAdded awesomo to list of lists"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8808a88c0a76e0a4ed07",
    "number": 1006,
    "body": "## What is this Python project?\r\n\r\nEel is small lightweight library, which wraps your web-based application to run as desktop application.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe closest Python equivalent to Electron is [cefpython](https://github.com/cztomczak/cefpython#install). It is a bit heavy weight, and not simple to install.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1006 from kbakba/patch-1\n\nAdd Eel to GUI section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8808a88c0a76e0a4ed08",
    "number": 1005,
    "body": "## What is this Python project?\r\n\r\nRobot-blocks is a module that allows for rapid creation of code for Raspberry Pi based robots\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- allows rapid development with minimal writing of code\r\n- provides hooks/callbacks to quickly expand functionality\r\n- comprehensive library of classes for handing interactions with common robot components (motors, servos, ultrasounds, etc.)\r\n- provides built-in support for multiple control methods (e.g. autonomous obstacle avoidance, remote control, etc.)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8809a88c0a76e0a4ed09",
    "number": 1004,
    "body": "## What is this Python project?\r\n\r\nA new python web framework project, designed for Python 3.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* API documentation - Interactive API documentation, that's guaranteed to always be in sync with your codebase.\r\n* Client libraries - JavaScript and Python client libraries, driven by the typesystems that API Star generates.\r\n* Schema generation - Support for generating Swagger or RAML API typesystems.\r\n* Expressive - Type annotated views, that make for expressive, testable code.\r\n* Performance - Dynamic behaviour for determining how to run each view makes API Star incredibly efficient.\r\n* Throughput - Support for asyncio to allow for building high-throughput non-blocking applications.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "web-framework-apistar",
    "is_a_fork": true,
    "comments": [
      "`apistar` is already on the list.\r\nSee https://github.com/vinta/awesome-python#restful-api"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f880aa88c0a76e0a4ed0a",
    "number": 1003,
    "body": "Historio is a simple versioning service based on gRPC and MongoDB\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f880ba88c0a76e0a4ed0b",
    "number": 1002,
    "body": "## What is this Python project?\r\n\r\nOSMNames is geocoding tool with rank based on related Wikipedia article popularity\r\n\r\nOpenMapTiles are set of tools for self-hosting OSM maps\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOSMNames - can be self-hosted and run off-line, rank is based on related Wikipedia article popularity\r\n\r\nOpenMapTiles - provides raster as well as vector tiles, map service (WMTS, WMS), can be self-hosted and run off-line\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f880ba88c0a76e0a4ed0c",
    "number": 1001,
    "body": "## What is this Python project?\r\n\r\nPython library to interact with 28K public DNS servers around the world\r\n\r\npubdns is a library for python to have more than 28K public dns servers from 190+ countries at your python script. it works based on the public-dns.info collected data and there is a wrapper based on the dnspython to resolve all type of dns records through these public dns server smoothly.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI haven't seen similar one in python language if exist!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f880ca88c0a76e0a4ed0d",
    "number": 1000,
    "body": "## What is this Python project?\r\n\r\nA client library for the IMAP protocol.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Has been around for about 10 years and is still maintained and being modernized\r\n- More Pythonic than `imaplib` provided in the standard library\r\n- Seems to support more extension RFCs than `imbox`\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Lucky me, I got the PR number #1000 🎈 🎉",
      "@NicolasLM Cool! 24 more for a big-round number! :-P\r\n\r\nhttps://www.xkcd.com/1000/\r\n\r\nPS: Sorry for the off-topic!",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f880da88c0a76e0a4ed0e",
    "number": 999,
    "body": "Remove trailing whitespace from one of the list entries.\r\n\r\nThis was one of the points in contribution guidelines, so I am adding this change.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "remove-trailing-whitespace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #999 from rajaravivarma-r/remove-trailing-whitespace\n\nRemove trailing whitespace"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f880ea88c0a76e0a4ed0f",
    "number": 998,
    "body": "* This plugin allows users to write vim plugins in Python,\r\n  by giving us a wrapper around Vim's `vim` Python module.\r\n\r\n## What is this Python project?\r\nSnake is a Python module for Vim that let's you use Python to its fullest extent to enhance Vim.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are no similar libraries available.\r\n\r\n--\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-snake",
    "is_a_fork": true,
    "comments": [
      "Pasting a snippet from the original `README.md` to show how good this plugin is.\r\n```python\r\nimport snake\r\n\r\n@snake.key_map(\"<leader>c\")\r\ndef toggle_snake_case_camel_case():\r\n    \"\"\" take the word under the cursor and toggle it between snake-case and\r\n    camel-case \"\"\"\r\n\r\n    word = snake.get_word()\r\n\r\n    # is it snake case?\r\n    if \"_\" in word:\r\n        chunks = word.split(\"_\")\r\n        camel_case = chunks[0] + \"\".join([chunk.capitalize() for chunk in\r\n            chunks[1:]])\r\n        snake.replace_word(camel_case)\r\n\r\n    # is it camel case?\r\n    else:\r\n        # split our word on capital letters followed by non-capital letters\r\n        chunks = filter(None, re.split(\"([A-Z][^A-Z]*)\", word))\r\n        snake_case = \"_\".join([chunk.lower() for chunk in chunks])\r\n        snake.replace_word(snake_case)\r\n```",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f880fa88c0a76e0a4ed10",
    "number": 997,
    "body": "## What is this Python project?\r\n\r\nThis quickstart project, built with Python makes use of Metabase library to visualize the datasets from Quandl.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nQuandl offers a set of tools to visualize their datasets (https://www.quandl.com/tools/full-list). [Metabase](https://github.com/metabase/metabase) is open-source, fast, and makes it so easy to share data and analytics. This Hasura quickstart project [hasura/quandl-metabase](https://github.com/anirudhmurali/Quandl-Metabase) makes use of Metabase to visualize quandl's datasets.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8810a88c0a76e0a4ed11",
    "number": 996,
    "body": "* 'deco' library makes parallelizing easy by giving us decorators\r\n  which encapsulates multiprocessing standard library.\r\n\r\n## What is this Python project?\r\nA simplified parallel computing model for Python. DECO automatically parallelizes Python programs, and requires minimal modifications to existing serial programs.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nIt is similar to Tomorrow, but has the following differences.\r\n\r\n1. `Deco` supports Python3, whereas `Tomorrow` supports only up till Python 2.7\r\n2. `Deco` by default uses the Python's **multiprocessing** library, whereas `Tomorrow` uses **threads**\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "A sample script to show it effectiveness,\r\n```python\r\nimport time\r\nfrom deco import concurrent, synchronized\r\nimport requests\r\n\r\nURLS = [\r\n    'https://github.com/requests/requests',\r\n    'https://github.com/vinta/awesome-python',\r\n    'https://github.com/alex-sherman/deco',\r\n    'https://github.com/pypa/pipenv'\r\n]\r\n\r\ndef vowels_and_counts(url):\r\n    vowel_count = {'a': 0, 'e': 0, 'i': 0, 'o': 0, 'u': 0}\r\n    body = requests.get(url).text\r\n    for (vowel, count) in vowel_count.items():\r\n        vowel_count[vowel] = body.count(vowel)\r\n\r\n    return vowel_count\r\n\r\ndef not_a_concurrent_proc(url):\r\n    return vowels_and_counts(url)\r\n\r\ndef call_non_concurrent_proc():\r\n    results = {}\r\n    for url in URLS:\r\n        results[url] = not_a_concurrent_proc(url)\r\n\r\n    return results\r\n\r\n@concurrent\r\ndef a_concurrent_proc(url):\r\n    return vowels_and_counts(url)\r\n\r\n@synchronized\r\ndef call_concurrent_proc():\r\n    results = {}\r\n    for url in URLS:\r\n        results[url] = a_concurrent_proc(url)\r\n\r\n    return results\r\n\r\n\r\nif __name__ == '__main__':\r\n    start_time = time.time()\r\n    call_concurrent_proc()\r\n    print('Multi-process duration: ', time.time() - start_time)\r\n\r\n    start_time = time.time()\r\n    call_non_concurrent_proc()\r\n    print('Single process duration: ', time.time() - start_time)\r\n\r\n```\r\n**Output:**\r\n```bash\r\n(test_deco-mOluZyxw) bash-3.2$ python find_vowels.py\r\nMulti-process duration:  2.1485419273376465\r\nSingle process duration:  8.21031904220581\r\n```\r\nAlmost four times faster.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8810a88c0a76e0a4ed12",
    "number": 995,
    "body": "Maya: Datetimes for Humans™\r\nhttps://travis-ci.org/kennethreitz/maya.svg?branch=master \r\nDatetimes are very frustrating to work with in Python, especially when dealing with different locales on different systems. This library exists to make the simple things much easier, while admitting that time is an illusion (timezones doubly so).\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Is that the correct link? Or did you mean to use https://github.com/kennethreitz/maya?",
      "The correct link is on the committed lines that reference is from the project readme "
    ],
    "commit_messages": [
      "Merge pull request #995 from tjadanel/master\n\nUpdated Date and Time to add Maya"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8811a88c0a76e0a4ed13",
    "number": 994,
    "body": "Replace with link to video showing why many patterns are unnecessary.\r\n\r\nIn my opinion, the linked repos (python-patterns and PyPatterns) are really unhelpful ways of thinking about patterns in Python - they are anti-patterns in Python, and not something that should be promoted.\r\n\r\nBasically, most of the patterns popular in Java world are \"invisible or simpler\" in dynamic languages like Python (according to Peter Norvig - http://www.norvig.com/design-patterns/ ). This is due to:\r\n\r\n* the pattern being built in (e.g. iterator)\r\n* various language features, especially:\r\n  * first class functions (command, strategy,\r\ntemplate-method, visitor)\r\n  * first class types (factory, abstract factory, flyweight, factory method, state, proxy, chain-of-responsibility)\r\n\r\nOf the two links, PyPatterns is the worst, and actually encourages importing a library to get functionality that only increases the amount of code you have to write. I see that it was added because someone wanted something they could actually `import`. However, this comes from people thinking in Java - but [Python is not Java without the compile](https://bitworking.org/news/2006/08/Python_isnt_Java_without_the_compile). There is negative value in using this kind of repo - Python makes the pattern invisible or simpler, by adding an import and base classes you have only made life hard for yourself. \r\n\r\nFor example, Factory and Abstract Factory pattern:\r\n\r\nhttps://github.com/tylerlaberge/PyPattyrn#factory-pattern\r\nhttps://github.com/faif/python-patterns/blob/master/creational/abstract_factory.py\r\n\r\nOnce you understand that Python has first class types, these become totally pointless.\r\n\r\nHere is a class in Python:\r\n\r\n    class A:\r\n        pass\r\n\r\nAnd here is a factory for it:\r\n\r\n    A\r\n\r\n(`A` is it's own factory - when you call it, it produces an object of type A. There is no `new` keyword in Python.)\r\n\r\nAnd here is a factory that you can assign to a variable, or pass as an argument to a function/method:\r\n\r\n    A\r\n\r\n(First class types.)\r\n\r\nAnd here is a factory if you wanted to create `A` in a non-default way:\r\n\r\n    lambda:  A(some_parameter=123)\r\n\r\nOr, in a builtin-standard-but-non-default way\r\n\r\n    class A:\r\n        def __init__(self, enabled=True)\r\n            self.enabled = enabled\r\n\r\n        @classmethod\r\n        def create_disabled(cls):\r\n            return cls(enabled=False)\r\n\r\n    # Factory callable you can pass around:\r\n    A.create_disabled\r\n\r\nThese are the idiomatic ways to do these things. If you are writing anything more than that, you are doing it wrong.\r\n\r\nEven when the pattern is bigger than invisible, its implementation is often massively simpler in Python. The linked repositories often use classes with no state and a single method. This is pointless - we should be deleting such classes and replacing them a single callable - see [Stop Writing Classes](http://pyvideo.org/pycon-us-2012/stop-writing-classes.html)\r\n\r\nPyPatterns even includes an implementation of iterator and iterable - when these are built in to Python!\r\n\r\nI was going to submit PRs to the linked repositories, but most of the PRs would involve deleting 90% of the code, which is unlikely to be accepted, I thought it better to submit this PR first.",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [
      "@spookylukey I'm a few years late on this but as the creator of PyPatterns... I actually agree completely. \r\n\r\nI created the project a long time ago when I was fairly new to programming and only had classroom experience with Java and all the design patterns that come with it. I kind of regret making the repo for exactly the reasons you stated. I might add a deprecated disclaimer to the repo so people stop using it, but yeah I would be in agreement that it should be removed from this list. It promotes python anti-patterns and should never have been added in the first place.",
      "@tylerlaberge kudos to you for a comment like that, especially when I probably should have expressed myself quite a lot gentler than I did! (I couldn't find a decent 'kudos' emoji...) ",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8812a88c0a76e0a4ed14",
    "number": 993,
    "body": "## What is this Python project?\r\n\r\nIt's a parser combinator library for creating text parsers and/or lexers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is similar to pyparsing in terms of approach (i.e. parser combinator), but benefits from:\r\n\r\n* Borrowing from the best of parser combinator libraries from other languages (like Parsec from Haskell) etc.\r\n* Much nicer, smaller and cleaner implementation.\r\n* A focus on generating nicely structured results i.e. your own custom data types, rather list-of-lists that then need further (often fragile) handling.\r\n* Excellent, up to date [documentation](http://parsy.readthedocs.io/en/latest/), including all the different types you want - tutorial, reference and examples - all in once place.\r\n* Modern best practices with everything you'd expect from a modern project on GitHub rather than SourceForge - 100% test coverage, Travis/Codecov/Read The Docs integration etc.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Could this be merged now @vinta ? I can rebase if needed.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "This PR is ready for merging, and has the required votes. What else am I supposed to be doing?",
      "@vinta could you please take a look at this PR? I'd love to see parsy among the other awesome libraries :sunglasses: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8813a88c0a76e0a4ed15",
    "number": 992,
    "body": "## What is this Python project?\r\n\r\nThe libROSA library performs audio and music analysis such as feature extraction, beat detection, spectrogram analysis and so on.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- standardized interfaces\r\n- good backward compatibility\r\n- caching\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8814a88c0a76e0a4ed16",
    "number": 991,
    "body": "## What is this Python project?\r\n\r\n- Fully compatible with the JS, Swift, C++ and Java official Socket.IO clients.\r\n- Both py2.7 and py3.3+\r\n- And [more...](https://github.com/miguelgrinberg/python-socketio#features)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is focused on [socket.io](https://github.com/socketio/socket.io) approach.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8814a88c0a76e0a4ed17",
    "number": 990,
    "body": "## What is this Python project?\r\n\r\n![](https://raw.githubusercontent.com/RDCH106/pycoinmon/master/logo.png)\r\nCheck cryptocurrencies' prices, changes on your console.\r\nBest CLI tool for those who are both **Crypto investors** and **Engineers**.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe project aims to reproduce the behaviour of the original [COINMON](https://github.com/bichenkk/coinmon) project and improve it with more functionalities, all of them powered by Python program language. At this moment [pyCOINMON](https://github.com/RDCH106/pycoinmon) has 100% of the functionality of COINMON and it is ready to the upcoming new features.\r\n\r\n![pycoinmon screenshot](https://raw.githubusercontent.com/RDCH106/pycoinmon/master/pycoinmon.png)\r\n\r\nPyCOINMON is not only a port to Python, it tries to implement good architecture following software engineering and pythonic trends, including also **C**ontinuous **I**ntegration.\r\n\r\n[![PyPI](https://img.shields.io/pypi/v/pycoinmon.svg)](https://pypi.python.org/pypi/pycoinmon)\r\n[![PyPI](https://img.shields.io/pypi/pyversions/pycoinmon.svg)](https://pypi.python.org/pypi/pycoinmon)\r\n[![PyPI](https://img.shields.io/pypi/l/pycoinmon.svg)](https://github.com/RDCH106/pycoinmon/blob/master/LICENSE)\r\n[![Build Status](https://travis-ci.org/RDCH106/pycoinmon.svg?branch=master)](https://travis-ci.org/RDCH106/pycoinmon)\r\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/30fca0e3463649f88584cd89c118eac2)](https://www.codacy.com/app/RDCH106/pycoinmon?utm_source=github.com&utm_medium=referral&utm_content=RDCH106/pycoinmon&utm_campaign=badger)\r\n\r\nAnother interesting feature is the possibility to generate binaries using tools like pyInstaller to produce standalone tool.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "> \r\n> \r\n> This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\r\n\r\nWhat is the period of inactivity to close the PR?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8815a88c0a76e0a4ed18",
    "number": 989,
    "body": "## What is this Python project?\r\n\r\nTweepy is a python wrapper for Twitter API.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTweepy seems to be more popular than twython, as measured by both number of stars in GitHub and number of questions in Stackoverflow.\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "👍 ",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8816a88c0a76e0a4ed19",
    "number": 988,
    "body": "Not adding anything - just fixing an existing entry @vinta \r\n\r\nIt makes more sense to include the Python client to Sentry, `raven`, than include the server software itself. I've made the appropriate change to the link and also updated the description as per https://github.com/getsentry/sentry and https://sentry.io/welcome.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I'm not sure removing the sentry server entry is ok: it is an awesome python project! Sure it could go elsewhere, but I would not have removed it."
    ],
    "commit_messages": [
      "Merge pull request #988 from JoshuaRLi/master\n\nFixed link and description for Sentry."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8817a88c0a76e0a4ed1a",
    "number": 987,
    "body": "## What is this Python project?\r\n\r\nA library that makes it easy to crawl for and scrape articles. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n- It's extremely easy to use.\r\n- Multi-threaded article download framework\r\n- News url identification\r\n- Text extraction from html\r\n- Top image extraction from html\r\n- All image extraction from html\r\n- Keyword extraction from text\r\n- Summary extraction from text\r\n- Author extraction from text\r\n- Google trending terms extraction\r\n- Works in 10+ languages (English, Chinese, German, Arabic, ...)\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "web-crawling",
    "is_a_fork": true,
    "comments": [
      "Hello ",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8818a88c0a76e0a4ed1b",
    "number": 986,
    "body": "## What is this Python project?\r\nIt's a command-line tool, providing scaffolding, workflow automation and best practices for developing and deploying serverless architecture. It's also completely extensible via plugins.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Manages the lifecycle of your serverless architecture (build, deploy, update, delete).\r\n- Safely deploy functions, events and their required resources together via provider resource managers (e.g., AWS CloudFormation).\r\n- Functions can be grouped (\"serverless services\") for easy management of code, resources & processes, across large projects & teams.\r\n- Minimal configuration and scaffolding.\r\n- Built-in support for multiple stages.\r\n- Optimized for CI/CD workflows.\r\n- Loaded with automation, optimization and best practices.\r\n- 100% Extensible: Extend or modify the Framework and its operations via Plugins.\r\n- An ecosystem of serverless services and plugins.\r\n- A passionate and welcoming community!\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "serverless",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8818a88c0a76e0a4ed1c",
    "number": 985,
    "body": "Fixed link for pyparser\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #985 from nnmalex/patch-1\n\nFixed URL for pyparser"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8819a88c0a76e0a4ed1d",
    "number": 984,
    "body": "In Science section\r\n\r\n## What is this Python project?\r\n\r\nIt's a unified backtest and live trading platform\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Write once and easy switch between backtest and live trading\r\n2. Share the same structure and performance measures across languages, making it easier to compare and communicate with traders speaking other languages such as R and Matlab.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f881aa88c0a76e0a4ed1e",
    "number": 983,
    "body": "## What is this Python project?\r\n\r\n![Colour Logo](https://raw.githubusercontent.com/colour-science/colour-branding/master/images/Colour_Logo_Medium_001.png)\r\n\r\n[Colour](http://colour-science.org/) is a Python colour science package implementing a comprehensive number of colour theory transformations and algorithms.\r\n\r\nIt is used by Google, Merck Group and studios of the VFX and Games industries to perform colorimetric computations. It leverages [Numpy](http://www.numpy.org/) and [Scipy](https://www.scipy.org/) to offer vectorised computations.\r\n\r\n``` python\r\n>>> import colour\r\n>>> colour.uv_to_CCT_Ohno2013([0.1978, 0.3122])\r\narray([  6.50751282e+03,   3.22335875e-03])\r\n```\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n[Colour](http://colour-science.org/) is one of the most complete colour science package available across programming languages with a broad set of high quality figures.\r\n\r\n![image](https://user-images.githubusercontent.com/99779/33514445-f9c57178-d7b8-11e7-852b-7ab6dc249f6f.png)\r\n\r\n![image](https://user-images.githubusercontent.com/99779/33514448-047e1084-d7b9-11e7-92bd-e9aa5956ee73.png)\r\n\r\n![image](https://user-images.githubusercontent.com/99779/33514459-31b3993e-d7b9-11e7-8641-97757d7a04f1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/99779/33514475-66df1868-d7b9-11e7-8ff3-4182d72fba84.png)\r\n\r\n### Features\r\n\r\n#### Algebra\r\n\r\n##### Kernel Interpolation\r\n\r\n##### Sprague Interpolation\r\n\r\n#### Biochemistry\r\n\r\n-   Michaelis–Menten kinetics\r\n\r\n#### Colorimetry\r\n\r\n##### Spectral Computation\r\n\r\n-   Wavelength to XYZ\r\n-   Spectral to Tristimulus Values - ASTM E308–15\r\n-   Tristimulus Weighting Factors - ASTM E2022–11\r\n-   Interpolation - Linear, Cubic Spline, Pchip, Sprague (1880)\r\n-   Extrapolation\r\n\r\n##### Spectral Bandpass Correction\r\n\r\n-   Stearns and Stearns (1988)\r\n\r\n##### RGB and XYZ Colour Matching Functions Spectral Dataset\r\n\r\n-   CIE 1931 2° Standard Observer XYZ colour matching functions\r\n-   CIE 1964 10° Standard Observer XYZ colour matching functions\r\n-   CIE 2012 10° Standard Observer XYZ colour matching functions\r\n-   CIE 2012 2° Standard Observer XYZ colour matching functions\r\n-   Stiles & Burch 1955 2° RGB CMFs RGB colour matching functions\r\n-   Stiles & Burch 1959 10° RGB CMFs RGB colour matching functions\r\n-   Wright & Guild 1931 2° RGB CMFs RGB colour matching functions\r\n\r\n##### Cone Fundamentals Spectral Dataset\r\n\r\n-   Stockman & Sharpe 2° Cone Fundamentals\r\n-   Stockman & Sharpe 10° Cone Fundamentals\r\n\r\n##### Photopic & Scotopic Luminous Efficiency Functions Spectral Dataset\r\n\r\n-   CIE 1924 Photopic Standard Observer\r\n-   Judd Modified CIE 1951 Photopic Standard Observer\r\n-   Judd-Vos Modified CIE 1978 Photopic Standard Observer\r\n-   CIE 1964 Photopic 10° Standard Observer\r\n-   CIE 2008 2° Physiologically Relevant LEF\r\n-   CIE 2008 10° Physiologically Relevant LEF\r\n-   CIE 1951 Scotopic Standard Observer\r\n\r\n##### Colour Matching Functions Conversions for Educational Purpose\r\n\r\n-   Wright & Guild 1931 2° RGB CMFs to CIE 1931 2° Standard Observer\r\n-   Stiles & Burch 1959 10° RGB CMFs to CIE 1964 10° Standard Observer\r\n-   Stiles & Burch 1959 10° RGB CMFs to Stockman & Sharpe 10° Cone Fundamentals\r\n-   Stockman & Sharpe 2° Cone Fundamentals to CIE 2012 2° Standard Observer\r\n-   Stockman & Sharpe 10° Cone Fundamentals to CIE 2012 10° Standard Observer\r\n\r\n##### Blackbody Spectral Radiance Computation\r\n\r\n##### Dominant, Complementary Wavelength & Colour Purity Computation\r\n\r\n##### Illuminant Spectral Power Distribution Computation\r\n\r\n- CIE Standard Illuminant A\r\n- CIE Standard Illuminant D Series\r\n\r\n##### Illuminant Spectral Dataset\r\n\r\n-   A\r\n-   B\r\n-   C\r\n-   D50\r\n-   D55\r\n-   [...] 36 more!\r\n\r\n##### Illuminant Chromaticity Coordinates\r\n\r\n##### Hunter Lab Chromaticity Coordinates\r\n\r\n##### Light Source Dataset\r\n\r\n-   3-LED-1 (457/540/605)\r\n-   3-LED-2 (473/545/616)\r\n-   3-LED-2 Yellow\r\n-   3-LED-3 (465/546/614)\r\n-   3-LED-4 (455/547/623)\r\n-   [...] 51 more!\r\n\r\n##### Light Source Chromaticity Coordinates\r\n\r\n##### Lightness Computation\r\n\r\n-   CIE 1976\r\n-   Fairchild and Wyble (2010)\r\n-   Glasser, McKinney, Reilly and Schnelle (1958)\r\n-   Wyszecki (1963)\r\n\r\n##### Luminance Computation\r\n\r\n-   ASTM D1535-08\r\n-   CIE 1976\r\n-   Fairchild and Wyble (2010)\r\n-   Newhall, Nickerson and Judd (1943)\r\n\r\n##### Whiteness Computation\r\n\r\n-   ASTM E313\r\n-   Berger (1959)\r\n-   CIE 2004\r\n-   Ganz and Griesser (1979)\r\n-   Stensby (1968)\r\n-   Taube (1960)\r\n\r\n##### Yellowness Computation\r\n\r\n-   ASTM D1925\r\n-   ASTM E313\r\n\r\n##### Corresponding Chromaticities Computation\r\n\r\n##### Luminous Flux, Efficiency & Efficacy Computation\r\n\r\n#### Colour Temperature & Correlated Colour Temperature\r\n\r\n##### Correlated Colour Temperature Computation Methods\r\n\r\n-   CIE Illuminant D Series\r\n-   Hernández-Andrés, Lee and Romero (1999)\r\n-   Kang et al. (2002)\r\n-   Krystek (1985)\r\n-   McCamy (1992)\r\n-   Ohno (2013)\r\n-   Roberston (1968)\r\n\r\n#### Colour Models\r\n\r\n##### Colourspaces Transformations\r\n\r\n-   CAM02LCD to JMh CIECAM02\r\n-   CAM02SCD to JMh CIECAM02\r\n-   CAM02UCS to JMh CIECAM02\r\n-   CIE LCHab to CIE Lab\r\n-   CIE LCHuv to CIE Luv\r\n-   CIE Lab to CIE LCHab\r\n-   CIE Lab to CIE XYZ\r\n-   CIE Luv to CIE LCHuv\r\n-   CIE Luv to CIE Luv uv\r\n-   CIE Luv to CIE XYZ\r\n-   CIE Luv uv to CIE xy\r\n-   CIE UCS to CIE UCS uv\r\n-   CIE UCS to CIE XYZ\r\n-   CIE UCS uv to CIE xy\r\n-   CIE XYZ to CIE Lab\r\n-   CIE XYZ to CIE Luv\r\n-   CIE XYZ to CIE UCS\r\n-   CIE XYZ to CIE UVW\r\n-   CIE XYZ to CIE xy\r\n-   CIE XYZ to CIE xyY\r\n-   CIE XYZ to Hunter Lab\r\n-   CIE XYZ to Hunter Rdab\r\n-   CIE XYZ to IPT\r\n-   CIE XYZ to RGB\r\n-   CIE XYZ to hdr-CIELab\r\n-   CIE XYZ to hdr-IPT\r\n-   CIE XYZ to sRGB\r\n-   CIE xy to CIE XYZ\r\n-   CIE xyY to CIE XYZ\r\n-   Hunter Lab to CIE XYZ\r\n-   ICTCP to RGB\r\n-   IPT to CIE XYZ\r\n-   JMh CIECAM02 to CAM02LCD\r\n-   JMh CIECAM02 to CAM02SCD\r\n-   JMh CIECAM02 to CAM02UCS\r\n-   Prismatic to RGB\r\n-   RGB to CIE XYZ\r\n-   RGB to ICTCP\r\n-   RGB to Prismatic\r\n-   RGB to RGB\r\n-   RGB to YCbCr\r\n-   RGB to YcCbcCrc\r\n-   YCbCr to RGB\r\n-   YcCbcCrc to RGB\r\n-   hdr-CIELab to CIE XYZ\r\n-   hdr-IPT to CIE XYZ\r\n-   sRGB to CIE XYZ\r\n\r\n##### OETFs\r\n\r\n-   ARIB STD-B67\r\n-   DCI-P3\r\n-   DICOM GSDF\r\n-   ITU-R BT.2020\r\n-   ITU-R BT.2100 HLG\r\n-   ITU-R BT.2100 PQ\r\n-   ITU-R BT.601\r\n-   ITU-R BT.709\r\n-   ProPhoto RGB\r\n-   RIMM RGB\r\n-   ROMM RGB\r\n-   SMPTE 240M\r\n-   ST 2084\r\n-   sRGB\r\n\r\n##### EOTFs\r\n\r\n-   DCI-P3\r\n-   DICOM GSDF\r\n-   ITU-R BT.1886\r\n-   ITU-R BT.2020\r\n-   ITU-R BT.2100 HLG\r\n-   ITU-R BT.2100 PQ\r\n-   ProPhoto RGB\r\n-   RIMM RGB\r\n-   ROMM RGB\r\n-   SMPTE 240M\r\n-   ST 2084\r\n\r\n##### OOTFs\r\n-   ITU-R BT.2100 HLG\r\n-   ITU-R BT.2100 PQ\r\n\r\n##### Log Encoding / Decoding Curves\r\n\r\n-   ACEScc\r\n-   ACEScct\r\n-   ACESproxy\r\n-   ALEXA Log C\r\n-   Canon Log\r\n-   Canon Log 2\r\n-   Canon Log 3\r\n-   Cineon\r\n-   ERIMM RGB\r\n-   Log3G10\r\n-   Log3G12\r\n-   PLog\r\n-   Panalog\r\n-   Protune\r\n-   REDLog\r\n-   REDLogFilm\r\n-   S-Log\r\n-   S-Log2\r\n-   S-Log3\r\n-   V-Log\r\n-   ViperLog\r\n\r\n##### RGB Colourspaces Derivation\r\n\r\n##### RGB Colourspaces Chromatically Adapted Primaries Computation\r\n\r\n##### RGB Colourspaces Primaries Computation\r\n\r\n##### RGB Colourspaces\r\n\r\n-   ACES2065-1\r\n-   ACEScc\r\n-   ACEScct\r\n-   ACEScg\r\n-   ACESproxy\r\n-   ALEXA Wide Gamut\r\n-   Adobe RGB (1998)\r\n-   Adobe Wide Gamut RGB\r\n-   Apple RGB\r\n-   Best RGB\r\n-   Beta RGB\r\n-   CIE RGB\r\n-   Cinema Gamut\r\n-   ColorMatch RGB\r\n-   DCI-P3\r\n-   DCI-P3+\r\n-   DRAGONcolor\r\n-   DRAGONcolor2\r\n-   Don RGB 4\r\n-   ECI RGB v2\r\n-   ERIMM RGB\r\n-   Ekta Space PS 5\r\n-   ITU-R BT.2020\r\n-   ITU-R BT.470 - 525\r\n-   ITU-R BT.470 - 625\r\n-   ITU-R BT.709\r\n-   Max RGB\r\n-   NTSC\r\n-   Pal/Secam\r\n-   ProPhoto RGB\r\n-   Protune Native\r\n-   REDWideGamutRGB\r\n-   REDcolor\r\n-   REDcolor2\r\n-   REDcolor3\r\n-   REDcolor4\r\n-   RIMM RGB\r\n-   ROMM RGB\r\n-   Russell RGB\r\n-   S-Gamut\r\n-   S-Gamut3\r\n-   S-Gamut3.Cine\r\n-   SMPTE 240M\r\n-   V-Gamut\r\n-   Xtreme RGB\r\n-   sRGB\r\n\r\n##### Convenience Deprecated Colourspaces Transformations\r\n\r\n-   RGB to HSV\r\n-   HSV to RGB\r\n-   RGB to HSL\r\n-   HSL to RGB\r\n-   RGB to CMY\r\n-   CMY to RGB\r\n-   CMY to CMYK\r\n-   CMYK to CMY\r\n\r\n#### Chromatic Adaptation\r\n\r\n##### Chromatic Adaptation Models\r\n\r\n-   CIE 1994\r\n-   CMCCAT2000\r\n-   Fairchild (1990)\r\n-   Von Kries\r\n\r\n##### Chromatic Adaptation Transforms\r\n\r\n-   Bianco and Schettini (2010)\r\n-   Bianco and Schettini (2010) PC\r\n-   Bradford\r\n-   Brill and Süsstrunk (2008) corrected CAT02\r\n-   CAT02\r\n-   CMCCAT2000\r\n-   CMCCAT97\r\n-   Fairchild\r\n-   Sharp\r\n-   Von Kries\r\n-   XYZ Scaling\r\n\r\n\r\n#### Colour Appearance Models\r\n\r\n-   ATD95\r\n-   CIECAM02\r\n-   Hunt\r\n-   LLAB\r\n-   Nayatani95\r\n-   RLAB\r\n\r\n#### Colour Difference\r\n\r\n##### Delta E Computation\r\n\r\n-   CIE 1976\r\n-   CIE 1994\r\n-   CIE 2000\r\n-   CMC\r\n-   CAM02LCD\r\n-   CAM02SCD\r\n-   CAM02UCS\r\n\r\n#### Colour Notation Systems\r\n\r\n##### Munsell Value Computation\r\n\r\n-   Priest (1920)\r\n-   Munsell (1933)\r\n-   Moon (1943)\r\n-   Saunderson (1944)\r\n-   Ladd (1955)\r\n-   McCamy (1987)\r\n-   ASTM D1535-08\r\n\r\n##### Munsell Colour Transformations\r\n\r\n-   xyY to Munsell Colour\r\n-   Munsell Colour to xyY\r\n\r\n##### Munsell Colours Dataset\r\n\r\n-   Munsell Colours All\r\n-   Munsell Colours Real\r\n-   Munsell Colours 1929\r\n\r\n##### Hexadecimal\r\n\r\n-   RGB to HEX\r\n-   HEX to RGB\r\n\r\n#### Characterisation\r\n\r\n##### Colour Rendition Charts Spectral Dataset\r\n\r\n-   BabelColor Average\r\n-   ColorChecker N. Ohta\r\n\r\n##### Colour Rendition Charts Chromaticity Coordinates\r\n\r\n-   BabelColor Average\r\n-   ColorChecker 1976\r\n-   ColorChecker 2005\r\n\r\n##### First Order Colour Fit\r\n\r\n#### Light Quality\r\n\r\n-   Colour Rendering Index computation\r\n-   Colour Quality Scale computation\r\n\r\n#### Optical Phenomena\r\n\r\n-   Rayleigh Optical Depth\r\n\r\n#### Reflectance Recovery\r\n\r\n-   Smits (1999)\r\n-   Meng, Simon and Hanika (2015)\r\n\r\n#### Volume\r\n\r\n-   MacAdam Limits - Optimal Colour Stimuli\r\n-   Monte Carlo RGB Colourspace Volume Computation\r\n-   Monte Carlo Pointer's Gamut Colourspace Coverage Computation\r\n-   Monte Carlo Visible Spectrum Colourspace Coverage Computation\r\n\r\n#### Comprehensive Plotting Capabilities\r\n\r\n#### Input & Output\r\n\r\n-   CSV tabular data files\r\n-   IES TM-27-14 spectral data XML files\r\n-   X-Rite spectral data files\r\n-   Image I/O using [OpenImageIO](http://openimageio.org)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "👍",
      "👍",
      "👍",
      "👍",
      "👍",
      "👍 ",
      "👍",
      "Hey @vinta,\r\n\r\nHappy New Year!\r\n\r\nI'm checking on this as I thought 20+ thumbs up were required to get into the list and we have almost 30 :)\r\n\r\nCheers,\r\n\r\nThomas\r\n"
    ],
    "commit_messages": [
      "Merge pull request #983 from KelSolaar/patch-1\n\nAdd \"Colour\"."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f881ba88c0a76e0a4ed1f",
    "number": 982,
    "body": "## What is this Python project?\r\n\r\nSmores leverages pyparsing, jinja and marshmallow to provide a system in which you are able to easily define a hierarchical data structure for your user-created templates.  Marshmallow provides data serialization and jinja provides the templating engine itself.  Pyparsing is used to expose a simpler tag syntax for end users.  Smores comes equipped with a 'tab to complete' style autocomplete method that also provides validation for the passed tag fragment.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSmores isn't a template engine.  It's a library to create hierarchical data structures to expose to an end user in a wysiwyg editor such as tinymce.  Simply pass it the data and the template string and let it go.  It also comes with an autocomplete method for providing users with tag-to-complete options when authoring templates.  Marshmallow provides structure as well as data serialization.  You can define templates for marshmallow schemas right in your class definitions or reference template files. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f881ba88c0a76e0a4ed20",
    "number": 981,
    "body": "Why?\r\n\r\nSimply put it's open-source, easy to use & deploy and first fully functional URL shortener in pure Python 3 which supports MySQL, PostgreSQL and SQLite.\r\n\r\n## What is this Python project?\r\n\r\nIt's an open-source, extensible & easy-to-use URL shortener. It's very also easy to host and run. It's created keeping in mind that it should be easy to have your custom URL shortener up and running without much effort. It's like bit.ly but open source. The code architecture is inspired by GNU Mailman project. It has 3 parts the core program, REST API on top of it and a Django based app to access the web UI. \r\n\r\nThis web app provides custom links, secret links, and auto expiry links.\r\n\r\nOn signing up in the app user can keep track of the shortened links in the dashboard. URL click stats like country, referrer, the timestamp can be accessed by adding + to the short URL.\r\n\r\nIts created entirely in Python and a live version runs at https://pygy.co\r\n\r\nMore design info in Pygmy short link of repo: https://pygy.co/Z and actual link https://github.com/amitt001/pygmy README file\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis is the first Python based fully functional URL shortener web app that targets to be as good as bit.ly while maintaining the privacy of users. Its components can be used separately like URL shortener python library or a REST API.\r\n\r\nIt supports MySQL and Postgresql DB's. SQLite can be used for development.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-pygmy",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f881ca88c0a76e0a4ed21",
    "number": 980,
    "body": "## What is this Python project?\r\n\r\nDash is a productive Python framework for building web applications. Written on top of Flask, Plotly.js, and React.js, Dash is ideal for building data visualization apps with highly custom user interfaces in pure Python. It's particularly suited for anyone who works with data in Python. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis web framework is built on top of React.js, Plotly.js and Dash. It's aiming to be the equivalent for Python of what the [Shiny Web Framework](https://shiny.rstudio.com/) is for R. It enables full stack web application development in a declarative paradigm. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta hello :) just wondering if this PR can be merged into the list.",
      "Thanks 👍 "
    ],
    "commit_messages": [
      "Merge pull request #980 from ucg8j/patch-1\n\nAdd Dash - web app framework"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f881da88c0a76e0a4ed22",
    "number": 979,
    "body": "Improved Podcasts section and added list of podcasts.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #979 from a1Gupta/patch-1\n\nImproved Podcasts info"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f881ea88c0a76e0a4ed23",
    "number": 978,
    "body": "## What is this Python project?\r\n\r\nSaleor is one of the [most popular](https://www.ecommwar.com/) Python e-commerce platforms.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSaleor is designed to be a forkable project template rather than a library that you add to an existing project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-saleor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #978 from patrys/add-saleor\n\nAdd Saleor to e-commerce section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f881fa88c0a76e0a4ed24",
    "number": 977,
    "body": "## What is this Python project?\r\n\r\nWebOOB is a framework for scraping websites and aggregating data from multiple websites.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Routing model of URL patterns to multiple class of Page with all the parsing associated to each of those Pages, for cleaner code\r\n* Scraping is made easy thanks to \"declarative parsing\": each Page can have a few XPaths, configure a few \"filters\" to apply on those XPaths (like parsing int, apply regex, etc.), and you're set!\r\n* Like every high-level feature in WebOOB, this declarative parsing can be disabled locally, when it doesn't fit for a particular site, and it's always possible to fallback to plain-old procedural parsing code\r\n* Pagination handling, supports infinite iterators\r\n* Typed data models to ensure clean scraped data\r\n* Can handle HTML/XML, JSON, and even XLS or PDF\r\n* (Optional) Can aggregate data from multiple websites by grouping them in categories (for example \"video sites\", \"banking sites\", \"public transport sites\", \"event sites\", etc.)\r\n* Comes builtin with a ~250 pre-existing website crawling backends\r\n* Has a few graphical and command-line apps to explore and search the scraped data",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta any news on merging this?",
      "@vinta there are a number of votes on this PR (more than on most PRs you do merge), why is it still not merged?",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f881fa88c0a76e0a4ed25",
    "number": 976,
    "body": "## What is this Python project?\r\n\r\nThe project is meant to allow Django to support HTTP/2, WebSockets or other protocols with ease.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nChannels is an official Django Project. Now actively supported, probably should be in next Django releases.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "websocket-django-channels",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #976 from Vadimkin/websocket-django-channels\n\nAdd Django-channels to WebSocket section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8820a88c0a76e0a4ed26",
    "number": 975,
    "body": "## What is this Python project?\r\nA library to **declare** app's command line interface. Automatically generates help and validates parameters. Has subcommands.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are similar libs, but I have not tried them yet.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "plumbum",
    "is_a_fork": true,
    "comments": [
      "@KOLANICH I suggest you vote for the similar pull request #966 (it was created before, and has some votes already)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8821a88c0a76e0a4ed27",
    "number": 974,
    "body": "## What is this Python project?\r\n\r\nIt's a framework to pake processing pipelines in python.\r\nA pipeline is made of stages, the stages do the same things but in a different way.\r\nIn a pipeline object you create a method where you specify in high level what you want to do. The automagics im metaclass transforms that method to be called for ecery stage in a loop.\r\n\r\nThis framework is suitable only to sequential pipelines, not to graphs with multiple dependencies.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nthere are tons of such frameworks, so I haven't researched that much.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "pipeline_py",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8822a88c0a76e0a4ed28",
    "number": 973,
    "body": "## What is this Python project?\r\nYou construct styled strings as DAG of `RichStr` objects, then the object can be transformed into a sequence of ECMA control codes giving the needed visual effect.\r\n\r\n## What's the difference between this Python project and similar ones\r\n1 I'm not aware of any Python lib doing exactly this, so had to implement.\r\n2 The nearest similar is curses, but curses is drawing-GUI-oriented, not text output.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "RichConsole",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8823a88c0a76e0a4ed29",
    "number": 972,
    "body": "## What is this Python project?\r\n\r\n`Halo` is a beautiful terminal spinner library that allows user to show loaders for async tasks. It provides an API to customize the text and colors, show status of task and over 60+ spinners to choose from. (If there is any feature request, please open an issue. Also, PRs welcome!)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOnly library to compare here would be with `tqdm` which is an amazing library in itself.\r\nIf one has to draw differences, `Halo` provides spinners, whereas `tqdm` provides progress bars which are two different things tackling the similar problem. One can use `Halo` for building a task list like interface which I believe is not possible with `tqdm`. Also,  `Halo` focuses more on asynchronous tasks whereas `tqdm` focuses on synchronous tasks. Finally, `Halo` provides customizations for spinners and `tqdm` does the same for progress bars.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-halo",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8824a88c0a76e0a4ed2a",
    "number": 971,
    "body": "## What is this Python project?\r\n\r\n[Dependency Injector](https://github.com/ets-labs/python-dependency-injector) - Dependency injection microframework for Python.\r\n\r\nDependency Injector key features are:\r\n\r\n+ Easy, smart, pythonic style.\r\n+ Obvious, clear structure.\r\n+ Extensibility and flexibility.\r\n+ High performance.\r\n+ Memory efficiency.\r\n+ Thread safety.\r\n+ Documentation.\r\n+ Semantic versioning.\r\n\r\nOther resources:\r\n\r\n- Documentation - http://python-dependency-injector.ets-labs.org/\r\n- PyPi - https://pypi.python.org/pypi/dependency_injector\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. No decorators like ``@inject`` that enforce polluting of application code.\r\n2. No monkey-patching, just clean overriding.\r\n3. Implemented using Cython.\r\n4. Extensive documentation with diagrams and ready-to-copy-paste examples.\r\n5. Well-tested and supported.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8824a88c0a76e0a4ed2b",
    "number": 969,
    "body": "## What is this Python project?\r\n\r\nTensorRec is a Python recommendation system that allows you to quickly develop recommendation algorithms and customize them using TensorFlow. TensorRec lets you to customize your recommendation system's embedding functions and loss functions while TensorRec handles the data manipulation, scoring, and ranking to generate recommendations.\r\n\r\nYou can read a blog post I wrote about the project here: https://medium.com/@jameskirk1/tensorrec-a-recommendation-engine-framework-in-tensorflow-d85e4f0874e8\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTensorRec gives you a level of customization that other recommendation systems do not. TensorRec allows you to build your own representation functions, which can be anything from simple linear transforms to deep neural networks, and use them to generate recommendations simply within the framework.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #969 from jfkirk/patch-1\n\nAdds TensorRec"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8825a88c0a76e0a4ed2c",
    "number": 968,
    "body": "## What is this Python project?\r\n\r\nEasy REST API generation, automatic documentation, framework agnostic.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's framework agnostic and uses asyncio to optimize for throughput\r\nFixes #941 \r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #968 from gtseres/master\n\nAdding apistar in the REST APIs section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8826a88c0a76e0a4ed2d",
    "number": 967,
    "body": "## What is this Python project?\r\n\r\nA source for deoplete autocompletion engine for vim\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8827a88c0a76e0a4ed2e",
    "number": 966,
    "body": "Plumbum allows you to run shell commands (and pipe them) in a very intuitive and powerful way.\r\n\r\nIt has almost three times more stars on github than delegator.py, so I think it deserves metioning.\r\n\r\nAn example:\r\n\r\n```\r\n>>> chain = ls[\"-a\"] | grep[\"-v\", \"\\\\.py\"] | wc[\"-l\"]\r\n>>> print chain\r\n/bin/ls -a | /bin/grep -v '\\.py' | /usr/bin/wc -l\r\n>>> chain()\r\nu'13\\n'\r\n```\r\n\r\n## What is this Python project?\r\n\r\nPlumbum has very flexible and intuitive way of running shell commands. You can transform them to functions, pipe them etc.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Much more clear syntax than popen and subprocess.\r\n- More pythonic way of piping commands than delegator.py and sarge\r\n- More shell style syntax than `sh`.\r\n- It seems to be developed a bit more actively than `sh`.\r\n- Seamless remote program execution (i.e. ssh)\r\n- Less non-obvious magic than in `sh`.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8828a88c0a76e0a4ed2f",
    "number": 965,
    "body": "## What is this Python project?\r\n\r\nDramatiq is a distributed task processing library with a focus on simplicity, reliability and performance.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can find my motivation for building it [here](http://dramatiq.io/motivation.html).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8828a88c0a76e0a4ed30",
    "number": 964,
    "body": "## What is this Python project?\r\n\r\nAn easy-to-use Python library for displaying Windows 10 Toast Notifications which is useful for windows GUI development.\r\n\r\n\r\n![o7ja4 1](https://cloud.githubusercontent.com/assets/7101452/19763806/75f71ba4-9c5d-11e6-9f16-d0d4bf43e63e.png)\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8829a88c0a76e0a4ed31",
    "number": 963,
    "body": "## What is this Python project?\r\nMake motion interpolated and fluid slow motion videos from the command line\r\n### Features\r\n* Makes **motion interpolated videos** (increase a video's frame rate by rendering intermediate frames based on motion, uses a combination of pixel-warping and blending).\r\n* Makes **smooth motion videos** (simple blending between frames).\r\n* Leverages interpolated frames to make **fluid slow motion videos**.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis project produces a specific effect.   \r\nMoviepy can be used for a wide variety of video editing.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f882aa88c0a76e0a4ed32",
    "number": 962,
    "body": "## What is this Python project?\r\n\r\nThe simplest way to get logger setup.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nLogzero can be as simple as:\r\n``` python\r\nfrom logzero import logger\r\nlogger.info(\"we're good to go\")\r\n```\r\n\r\nWriting to a file is also very simple\r\n``` python\r\nimport logzero\r\nfrom logzero import logger\r\n\r\n# Setup rotating logfile with 3 rotations, each with a maximum filesize of 1MB:\r\nlogzero.logfile(\"/tmp/rotating-logfile.log\", maxBytes=1e6, backupCount=3)\r\n\r\n# Log messages\r\nlogger.info(\"This log message goes to the console and the logfile\")\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Duplicates #901, which already has 9 votes",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f882ba88c0a76e0a4ed33",
    "number": 961,
    "body": "## What is this Python project?\r\n\r\n`natsort` provides functionality to naturally sort a collection of data. In the simplest case this can be done with a drop-in replacement for the built-in `sorted`, but customization is flexible and straightforward.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - Full built-in support over localization and of the definition of a number\r\n - Flexible user-customization\r\n - Built-in support for sorting file paths\r\n - Handling of corner-cases (such as `NaN` and mixed data types)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "natsort-patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f882ba88c0a76e0a4ed34",
    "number": 960,
    "body": "## What is this Python project?\r\n\r\nSatchmo is an e-commerce framework created in Django which allows you to develop unique and robust online stores. The project has an end to end integration from inventory management, multiple payment modules, and shipping providers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike most other e-commerce platforms in Django, it supports inbuild support for digital products which can be downloaded and subscription-based products.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f882ca88c0a76e0a4ed35",
    "number": 959,
    "body": "Disclaimer: I'm the author of the list.\r\n\r\n## What is this Python project?\r\n\r\nThis is a compilation of resources about Python in Education. Useful for teachers and students alike. Although it needs some more curation (better classification and reorganization) I think it is worth as a reference.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know of any other list like it.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "python-in-education",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "So close to 20 votes, it could be merged?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f882da88c0a76e0a4ed36",
    "number": 958,
    "body": "## What is this Python project?\r\n\r\npypandoc provides a thin wrapper for [pandoc](https://pandoc.org/index.html), a universal document converter, which provide various kind of markup format\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIf you need to convert files from one markup format into another, pandoc is your swiss-army knife. Pandoc can convert documents in markdown, reStructuredText, textile, HTML, DocBook, LaTeX, MediaWiki markup, TWiki markup, OPML, Emacs Org-Mode, Txt2Tags, Microsoft Word docx, LibreOffice ODT, EPUB, or Haddock markup to\r\n* HTML formats: XHTML, HTML5, and HTML slide shows using Slidy, reveal.js, Slideous, S5, or DZSlides.\r\n* Word processor formats: Microsoft Word docx, OpenOffice/LibreOffice ODT, OpenDocument XML\r\n* Ebooks: EPUB version 2 or 3, FictionBook2\r\n* Documentation formats: DocBook, TEI Simple, GNU TexInfo, Groff man pages, Haddock markup\r\nPage layout formats: InDesign ICML\r\n* Outline formats: OPML\r\n* TeX formats: LaTeX, ConTeXt, LaTeX Beamer slides\r\n* PDF via LaTeX\r\n* Lightweight markup formats: Markdown (including CommonMark), reStructuredText, AsciiDoc,　MediaWiki markup, DokuWiki markup, Emacs Org-Mode, Textile\r\n*　Custom formats: custom writers can be written in lua.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f882ea88c0a76e0a4ed37",
    "number": 957,
    "body": "## What is this Python project?\r\n\r\n[Serpent.AI](https://github.com/SerpentAI/SerpentAI) is a simple yet powerful, novel framework to assist developers in the creation of game agents. Turn ANY video game you own into a sandbox environment ripe for experimentation, all with familiar Python code. The framework's raison d'être is first and foremost to provide a valuable tool for Machine Learning, Deep Learning & AI research. It also turns out to be ridiculously fun to use as a hobbyist (and dangerously addictive; a fair warning)!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNothing truly compares but a parallel could be drawn with OpenAI [Universe](https://github.com/openai/universe). Just like it, it allows you to run and evaluate deep learning experiments against video games. Some differences with Serpent.AI: \r\n\r\n* Allows you to wrap ANY game you own. It doesn't have a limited catalog.\r\n* Works natively on all 3 major OSes. No VNC or Docker contortions.\r\n* Allows different machine/deep learning approaches. Not only focused on general intelligence.\r\n* Can be used as a core for video game interaction with Python.\r\n* Is plugin-based for portability, reproducibility  and collaboration.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This has been open for 2 months and the framework has over 3300 stars. Any chance of merging it in?"
    ],
    "commit_messages": [
      "Merge pull request #957 from nbrochu/master\n\nAdded Serpent.AI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f882fa88c0a76e0a4ed38",
    "number": 956,
    "body": "## What is this Python project?\r\n\r\nIt’s a framework, actually a socket mock framework, and the proof of its reliability as framework is that both the HTTP mocking module (à la HTTPretty) and the basic Redis mock have been implemented using Mocket, and nothing more than that.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- It has SSL support, and of course HTTPS if we talk about its HTTP mock.\r\n- It works well with others (e.g. pytest fixtures is one example, pook is another).\r\n- It supports PyPy, gevent and asyncio/aiohttp.\r\n- It dumps (as JSON files) everything that calls the sendall function on a true socket (recording functionality à la vcrpy).\r\n- It strongly supports Python 3, since the very beginning. And yes, it’s definitely a big feature (ask HTTPretty users to better understand what does “supporting Py3” mean).\r\n- Its APIs never changed. Frameworks should care about backward compatibility, and Mocket take it seriously.\r\n- ~100% test coverage. Yes, that’s another important feature.\r\n- HTTPretty compatibility layer (regex urls and body as function missing)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @vinta, what about this PR? Are you going to merge it?"
    ],
    "commit_messages": [
      "Merge pull request #956 from mindflayer/master\n\nAdding Mocket"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f882fa88c0a76e0a4ed39",
    "number": 955,
    "body": "## What is this Python project?\r\n\r\nThis project is called [opsdroid](https://opsdroid.github.io/). An open source chat bot framework written in python. It is designed to be extendable, scalable and simple.\r\n\r\nThis application is designed to take messages from chat services and execute python functions (skills) based on their contents. Those functions can be anything you like, from simple conversational responses to running complex tasks. The true power of this project is to act as a glue library to bring the multitude of natural language APIs, chat services and third party APIs together.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Simple to modify and extend\r\n- Add your own skills in under 10 lines of python\r\n- Easy to install\r\n- Designed with Docker in mind for simple deployment\r\n- Configurable with a single YAML file\r\n- Can connect to multiple chat services simultaneously\r\n- No coding necessary if using the official modules\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8830a88c0a76e0a4ed3a",
    "number": 954,
    "body": "## What is this Python project?\r\n\r\nHodor is a configuration driven wrapper on top of lxml and cssselect. It helps extracts information based on the rules it gets. A rule can either be based on xpath, or css.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt is a simple to use wrapper that leverages lxml and cssselect to write simple scrapers based on configuration and has inbuilt support for pagination, robots.txt, grouping results, and proxy. This helps writing web scapers with minimal lines of code.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8831a88c0a76e0a4ed3b",
    "number": 953,
    "body": "## What is this Python project?\r\n\r\nTBone is a RESTful API library for asyncio-based web applications.\r\nIt provides a MongoDB ODM and serializer and tools to easily build real-time RESTful APIs on top of asyncio web frameworks such as Sanic and AioHttp\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nTBone is the first library to provide full-duplex RESTful APIs for nonblocking web applications. Both Sanic and AioHttp only provide the basic http and web socket handlers. TBone builds on top of that and makes it easy to build APIs which are RESTful. In addition, if the app is using MongoDB as a datastore TBone provides an easy-to-use ODM and serializer , which is nonblocking, and integrates well with the API components.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "add_tbone",
    "is_a_fork": true,
    "comments": [
      "+1",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8832a88c0a76e0a4ed3c",
    "number": 952,
    "body": "## What is this Python project?\r\n\r\nmypy uses type hints in code to warn about possible type errors before running the code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- This tool is unique in its ability to detect error that could be only caught during run-time. \r\n- Package is maintained by Dropbox team with Guido van Rossum\r\n- Type hints are introduced in Python 3.5 as official part of the language, making this package stand out. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_mypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #952 from nnikolic72/add_mypy\n\nAdded mypy and Static Type Checker section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8833a88c0a76e0a4ed3d",
    "number": 951,
    "body": "## What is this Python project?\r\n\r\nThis module converts between binary data and Python datatypes on a per bit level.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis module is intended to have a similar interface as the Python struct module, but working on bits instead of primitive data types (char, int, ...). This makes it much more versatile and flexible than the struct module from the standard library. It is a superset of the struct module.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "bitstruct",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8833a88c0a76e0a4ed3e",
    "number": 950,
    "body": "Added django-jetand djadmin into Admin Panels section\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #950 from gunjanmodi/master\n\nUpdated README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8834a88c0a76e0a4ed3f",
    "number": 949,
    "body": "## What is this Python project?\r\n\r\nSpidy is a web crawler - not a data scraper.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWhile most projects are frameworks for creating and deploying web crawlers/spiders, spidy is a ready-to-go web crawler. Simply install via a Python package manager (pip, npm), or clone the project, and it's ready to go without any setup.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8835a88c0a76e0a4ed40",
    "number": 948,
    "body": "**Note**: I'm not sure where I should place it and I'm happy to make any edits!\r\n\r\n## What is this Python project?\r\n\r\nDopyter is a tool to quickly spin up jupyter notebooks that only requires Docker. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know of similar ones,\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8836a88c0a76e0a4ed41",
    "number": 947,
    "body": "## What is this Python project?\r\nStandard library for atomic message queues.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nBuilt-in library -- No need to install additional packages in order to use atomic message queues for inter-thread communication.\r\n\r\n- - -\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8837a88c0a76e0a4ed42",
    "number": 946,
    "body": "## What is this Python project?\r\n\r\nbqplot is one of the leading libraries in using the Jupyter widgets infrastructure to enable seamless interactive plotting!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nbqplot is the first library to provide seamless bi-directional communication between the JavaScript and Python. Any plot that is generated is a full web application, which can be controlled by Python interactively.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@vinta Is this good to merge?",
      "Ping @vinta "
    ],
    "commit_messages": [
      "Merge pull request #946 from dmadeka/patch-1\n\nAdding bqplot to the data visualization section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8837a88c0a76e0a4ed43",
    "number": 945,
    "body": "## What is this Python project?\r\n_django-geojson_ is a set of tools to manipulate GeoJSON with Django\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nKey features of _django-geojson_:\r\n\r\n- (De)Serializer for (Geo)Django objects, querysets and lists\r\n- Base views to serve GeoJSON map layers from models\r\n- GeoJSON model and form fields to avoid spatial database backends (compatible with django-leaflet for map widgets)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8838a88c0a76e0a4ed44",
    "number": 944,
    "body": "## What is this Python project?\r\n\r\nPP is a python module which provides mechanism for parallel execution of python code on SMP (systems with multiple processors or cores) and clusters (computers connected via network).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSo easy to create a cluster, add nodes and execute a python function in parallel using multiple physical machines.  \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8839a88c0a76e0a4ed45",
    "number": 943,
    "body": "## What is this Python project?\r\n\r\nAn advanced task flow management on top of famous Celery project (a distributed task queue). It allows one to create advanced task flows by creating YAML configuration files which state dependencies between tasks, fallback tasks (run on task failures) or run whole flows (transitively or even recursively). Dependencies between tasks or flows are graphs (without any limitation to DAG). It also enables one to use different storage or database adapters or running only certain tasks in a flow definition - system will automatically compute dependencies between tasks (which tasks needs to be run in order to run desired tasks). Selinon comes with a set of prepared storage/database adapters and support for tracing system actions (easy to integrate with Sentry or other monitoring systems) or logging ELK (Elasticsearch, logstash, Kibana) stack to provide ready-to-be-used system in clusters (using Kubernetes, OpenShift or others). A built in simutor can run your flows by executing CLI.\r\n\r\nMore info can be found in [docs](http://selinon.readthedocs.io/en/latest/) and [repo](https://github.com/selinon/selinon).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCelery is limited when it comes to modelling more advanced task flows (dependencies between tasks). Selinon offers fine-granted control on how your task flow will work, how it will perform and how it will be traced in distributed environment.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-selinon",
    "is_a_fork": true,
    "comments": [
      "Votes reached 20. Could this be merged?\r\n",
      "@vinta @fosslinux reached 20, can this be merged? ",
      "@fridex not my call 😃 just a helpful reviewer here",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f883aa88c0a76e0a4ed46",
    "number": 942,
    "body": "## What is this Python project?\r\n\r\nProgress bar for CLI. Also for Jupyter notebooks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEasy to use. Extensible. Active community.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "feature/add-tqdm",
    "is_a_fork": true,
    "comments": [
      "Closing as there is already https://github.com/vinta/awesome-python/pull/662"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f883aa88c0a76e0a4ed47",
    "number": 940,
    "body": "## What is this Python project?\r\n\r\nI'm developing Habu to teach (and learn) some concepts about Python and Network Hacking.\r\n\r\nThese are basic functions that help with some tasks for Ethical Hacking and Penetration Testing.\r\n\r\nMost of them are related with networking, and the implementations are intended to be understandable for who wants to read the source code and learn from that.\r\n\r\nSome techniques implemented in the current version are:\r\n\r\n    ARP Poisoning\r\n    ARP Sniffing\r\n    DHCP Discover\r\n    DHCP Starvation\r\n    LAND Attack\r\n    SNMP Cracking\r\n    SYN Flooding\r\n    TCP Flags Analysis\r\n    TCP ISN Analysis\r\n    TCP Port Scan\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f883ba88c0a76e0a4ed48",
    "number": 939,
    "body": "## What is this Python project?\r\n\r\nPython 2/3 library for doing async http requests with python futures. It's strives to be completely API-compatible with requests, just returning futures objects wrapping the response rather than the response itself.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSuper easy to use, no event loops or anything like that to manage. Uses the new [`concurrent.futures`](https://docs.python.org/3/library/concurrent.futures.html) functionality in Python 3 and it's backport in Python 2.\r\n\r\n```python\r\nfrom requests_futures.sessions import FuturesSession\r\n\r\nsession = FuturesSession()\r\n# first request is started in background\r\nfuture_one = session.get('http://httpbin.org/get')\r\n# second request is started immediately\r\nfuture_two = session.get('http://httpbin.org/get?foo=bar')\r\n# wait for the first request to complete, if it hasn't already\r\nresponse_one = future_one.result()\r\nprint('response one status: {0}'.format(response_one.status_code))\r\nprint(response_one.content)\r\n# wait for the second request to complete, if it hasn't already\r\nresponse_two = future_two.result()\r\nprint('response two status: {0}'.format(response_two.status_code))\r\nprint(response_two.content)\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f883ca88c0a76e0a4ed49",
    "number": 938,
    "body": "## What is this Python project?\r\n\r\n### [github.com/boppreh/keyboard](https://github.com/boppreh/keyboard):\r\n> Take full control of your keyboard with this small Python library. Hook global events, register hotkeys, simulate key presses, and much more.\r\n\r\n### [github.com/boppreh/mouse](https://github.com/boppreh/mouse):\r\n> Take full control of your mouse with this small Python library. Hook global events, simulate mouse movement & clicks, and much more.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis set of libraries offers much more functionality than those currently listed on awesome-python. They allow for complete management of all global key & mouse events.\r\n\r\nSome features:\r\n\r\n- **global hooks**\r\n \\- push all Key/Mouse events to provided callbacks\r\n \\- keyboard[KeyboardEvent], mouse[ButtonEvent, MoveEvent, WheelEvent]\r\n\r\n- **global hotkey registration**\r\n \\- push only defined Key events to provided callbacks\r\n \\- left & right modifier keys are recognized separately\r\n\r\n- **input simulation**\r\n \\- key chords, keypress sequences, mouse click/drag/scroll\r\n \\- allows custom delay\r\n\r\n- **macro recording & playback**\r\n \\- capture keystrokes in realtime, play them back @ custom speed\r\n\r\n- **`wait` event**\r\n \\- blocks thread until defined Key/Mouse events are received\r\n\r\nWhile not fully cross-platform (_OSX is currently listed as experimental_), these are the best choices I've come across for anyone looking for full access to keyboard & mouse functionality on the Windows & Linux platforms.\r\n\r\nBoth libraries are also very well documented.\r\n\r\n&nbsp;  \r\n\r\n-----\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #938 from enteleform-forks/master\n\nadded \"keyboard\" and \"mouse\" by @boppreh to \"Hardware\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f883da88c0a76e0a4ed4a",
    "number": 937,
    "body": "## What is this Python project?\r\n\r\n[Monique Dashboards](https://github.com/monique-dashboards/monique) - a library for creating custom dashboards, coming with full web and API applications.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe library drops the traditional concept of a metric and replaces it with a table. Multiple input types are automatically converted to a table (JSON, ASCII tables, text files) and their data can be instantly visualized on a dashboard.\r\n\r\nOther unique features:\r\n- auto-creation of tiles, for example a tile can be created for each source IP address\r\n- auto-creation of data series (including data from new rows that appeared in a table)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f883ea88c0a76e0a4ed4b",
    "number": 936,
    "body": "## What is this Python project?\r\n\r\nA Pythonic Distributed Data Science Framework\r\nhttps://www.youtube.com/watch?v=RA_2qdipVng\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #936 from mbarkhau/patch-1\n\nAdd Dask to MapReduce Section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f883ea88c0a76e0a4ed4c",
    "number": 935,
    "body": "## What is this Python project?\r\n\r\n[Zeep](https://github.com/mvantellingen/python-zeep) is a painless client for SOAP, that supports Python 3 and is actually maintained.\r\nI know that SOAP is bad, old, etc., but you still need it for some \"enterprise\" APIs that you may find in the wild.\r\n\r\nAlso, I created a category broader than just SOAP for things like Thrift and other protocols that maybe aren't as popular as HTTP.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Has a very nice API that allows you to read and pass SOAP objects without the need of instantiating many Java-like objects. You can simply used (possibly nested) dictionaries.\r\n* I think that only [Rinse](https://github.com/tysonclugg/rinse) supports Python 3, but it hasn't seen commits in some time.\r\n* The rest only supports Python 2.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach 20.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f883fa88c0a76e0a4ed4d",
    "number": 934,
    "body": "## What is this Python project?\r\n\r\n[`atq`](https://github.com/nvdv/atq) is a pure-Python asynchronous task queue built to work with `asyncio`. It is designed to run costly functions outside main event loop using distributed workers.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\natq is designed to work with `asyncio` library and does not require additional infrastructure.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8840a88c0a76e0a4ed4e",
    "number": 933,
    "body": "[PySonar2](http://www.yinwang.org/blog-cn/2017/04/18/close-source) is no longer open source.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #933 from invzhi/patch-1\n\nRemove PySonar2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8841a88c0a76e0a4ed4f",
    "number": 932,
    "body": "## What is this Python project?\r\n\r\ndoubledouble.py is a library for computing with unevaluated sums of two double\r\nprecision floating-point numbers.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8841a88c0a76e0a4ed50",
    "number": 931,
    "body": "## What is this Python project?\r\n\r\nFlat is a library for creating and manipulating digital forms of fine arts.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8842a88c0a76e0a4ed51",
    "number": 930,
    "body": "This is [`awesome-finder`](https://github.com/mingrammer/awesome-finder)\r\n\r\n## What is this Python project?\r\n\r\nA TUI based finder for searching the awesome libraries, resources from awesome series such as awesome-python, awesome-go and so on.\r\n\r\nWith it, you can browse the awesome libraries, resources on your terminal without browser.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo similar one.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8843a88c0a76e0a4ed52",
    "number": 929,
    "body": "## What is this Python project?\r\n\r\nAn enhanced hot reload library based on pydevd_reload.py from https://github.com/fabioz/PyDev.Debugger. The original library is used in PyDev & PyCharm.\r\n\r\nHot reload is quite useful when developing features in complex system; it saves lots of time from restarting target system.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nNo similar one.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8844a88c0a76e0a4ed53",
    "number": 928,
    "body": "Commit 192305d, which merged the \"Implementations\" and \"High Performance\" sections, erroneously merged the CPython and Cython entries into one.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #928 from perey/patch-1\n\nRe-add Cython to the list."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8845a88c0a76e0a4ed54",
    "number": 927,
    "body": "## What is this Python project?\r\n\r\nThere is an impressive list of Python packages providing useful features for Qt under Python, which is why I created the [awesome-python-qt](https://github.com/JulienGrv/awesome-python-qt) list. The list also lists which bindings for Qt are available.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I'm not sure whether linking a list in this list is a good idea. Maybe you should just create pull requests that should keep the contents of GUI section up-to date with your list?",
      "I think mixing Qt things with other GUI will be messy to read in the end. Maybe we should create a subsection for Qt in GUI? Is it possible to do this? ",
      "Markdown definitely allows that. I wonder about the maintainer's thoughts, though."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8845a88c0a76e0a4ed55",
    "number": 926,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Where is the description?",
      "Read about HashLib4Python here https://github.com/ron4fun/HashLib4Python-CPPWrapper/blob/master/README.md",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8846a88c0a76e0a4ed56",
    "number": 925,
    "body": "A tool that logs errors. Has a free tier / is free for open source.\r\n\r\n## What is this Python project?\r\n\r\nIt is an exception reporter for Python with a UI to view and diagnose logged exceptions.\r\nThe python notifier is open source here: https://github.com/bugsnag/bugsnag-python\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere aren't any similar error trackers listed in this repo.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8847a88c0a76e0a4ed57",
    "number": 923,
    "body": "## What is this Python project?\r\n\r\nmistletoe is a fast and extensible Markdown parser implementation.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Compared to [Python-Markdown](https://github.com/waylan/Python-Markdown), it is over 4 times faster. With CPython its speed is on par with mistune.\r\n* Compared to [Mistune](https://github.com/lepture/mistune), it is:\r\n    - more flexible, in that adding parsing rules are formalized, easier and less brittle (see the GitHub Wiki [example](https://github.com/miyuchina/mistletoe#developers-guide) as compared to Mistune);\r\n    - more extensible, in that writing new renderers are trivial (supports transpiling to LaTeX out of the box; also see [this example](https://github.com/miyuchina/mistletoe/blob/master/plugins/mathjax.py) where mathjax support is added to mistletoe);\r\n    - about 2x faster when PyPy is used (see the [performance](https://github.com/miyuchina/mistletoe#performance) section);\r\n\r\nSee also: [why mistletoe?](https://github.com/miyuchina/mistletoe#why-mistletoe)\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8848a88c0a76e0a4ed58",
    "number": 922,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8849a88c0a76e0a4ed59",
    "number": 921,
    "body": "URL for Authomatic has changed, as old one is redirecting to a personal web page",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #921 from andor-pierdelacabeza/patch-2\n\nCorrect Authomatic URL"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8849a88c0a76e0a4ed5a",
    "number": 920,
    "body": "Add link to [`asynccli`](https://github.com/ahopkins/asynccli).\r\n\r\n## What is this Python project?\r\n\r\nA CLI framework based on asyncio. It helps developer create CLI applications that run on Python's `asyncio` library. It is setup to allow for simple single command applications by passing in a single method, a large multi-level nested CLI, and everything in between.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nRuns on `asyncio` event loop, no other existing framework does. It is designed to be able to run along side, for example, an application using an async library like Sanic. Because it runs an `asyncio` loop, you can easily integrate it with another existing code base that already leverages the `asyncio` library.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "👍",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f884aa88c0a76e0a4ed5b",
    "number": 919,
    "body": "## What is this Python project?\r\n\r\nWSGI server, factored out of CherryPy.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nPure-python, fast, production ready.\r\n\r\nP.S. I'm submitting this pull-request to let people know that there's no need to depend on CherryPy if only WSGI is needed.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f884ba88c0a76e0a4ed5c",
    "number": 918,
    "body": "@vinta\r\n\r\n## What is this Python project?\r\n\r\nA pure Python CLI to view projects' download statistics. The supported fields are: project, version, pyversion, percent3, percent2, impl, impl-version, openssl, date, month, year, country, installer, installer-version, setuptools-version, system, system-release, distro, distro-version, and cpu. You can specify how many days in the past to consider or supply a custom date range. Custom ordering and where clauses are also supported.\r\n\r\nExamples: https://github.com/ofek/pypinfo#usage\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nhttps://pypi.python.org/pypi/vanity\r\n\r\nThis uses an outdated (and not guaranteed to work) method of collecting statistics (by scraping PyPI). Also, it can only get the download counts.\r\n\r\nhttps://pypi.python.org/pypi/pypi-download-stats\r\n\r\nThis requires users to write their own queries. It depends on a deprecated library to interface with BigQuery https://github.com/google/google-api-python-client/#library-maintenance. Also, the package depends on https://github.com/bokeh/bokeh which requires a complicated installation of NumPy and its scientific libs, and Tornado and its web server.\r\n\r\nBoth are GPL'd unfortunately while PyPInfo is licensed under MIT.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@ofek  I'm sort of confused by your assessment of my project. I'll admit that it was a quick and dirty solution (and lacks tests), and was intended to bridge a gap until PyPI reintroduced download stats - which I was told would probably be done. \r\n\r\nYour project seems great, but it serves a completely different purpose (CLI vs HTML and SVG badge generation). I don't see that as a reason to make a bunch of incorrect statements about mine.\r\n\r\nI'm not sure what you mean about writing your own queries, as my pypi username is jantman and I just run it as ``pypi-download-stats -U jantman``, certainly no need to write queries. Similarly, I don't understand \"the package depends on https://github.com/bokeh/bokeh which requires a complicated installation of NumPy and its scientific libs, and Tornado and its web server\" ... the installation process, as documented in the README, is ``pip install pypi-download-stats``. Fresh installs work fine for me installing via pip; the issue you opened on my repo is an argument parsing error; you didn't specify a username or a project to generate statistics for, and the bug is that the code doesn't detect that.\r\n\r\nAs to bokeh, the specific goal of my project was to generate graphs like [these](http://jantman-personal-public.s3-website-us-east-1.amazonaws.com/pypi-stats/awslimitchecker/index.html); if it doesn't fit your needs that's fine, but that doesn't mean it should be \"officially deprecated\".\r\n\r\nLastly, if you prefer the MIT license, fine. That's a personal choice, or a moral choice.",
      "I'm sorry, I did indeed misinterpret your use case for that of mine and https://github.com/python-packages/vanity.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f884ca88c0a76e0a4ed5d",
    "number": 917,
    "body": "## What is this Python project?\r\n\r\nIs a usefull mocker to mongodb. Simple and fast.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can use like a MongoClient pymongo object.\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f884da88c0a76e0a4ed5e",
    "number": 916,
    "body": "## What is this Python project?\r\n\r\nDockerface is an easy to install and use deep learning face detection for images and video in a docker container. It is meant for research and open for industry and personal use. It deploys a trained Faster R-CNN network on Caffe through an easy to use docker image. Bring your videos and images, run dockerface and obtain videos and images with bounding boxes of face detections and an easy to use face detection annotation text file.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n[Dlib](https://github.com/davisking/dlib) has a non deep learning face detector with python bindings and a deep learning face detector with no python bindings. Our project has python scripts from a deep learning face detector and a pre-trained face detector. It is also easy to install, just download the docker container and follow the instructions.\r\n[opencv](http://opencv.org/) has python bindings for a non-deep learning face detector.\r\n[face-py-faster-rcnn](https://github.com/playerkk/face-py-faster-rcnn) is the inspiration for this project. We implement their training regime and we deploy it in an easy to use docker container.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "look good",
      "Hi, I'm wondering if you have any questions about this pull request.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Hi, \r\nWhy didn't this get in?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f884da88c0a76e0a4ed5f",
    "number": 915,
    "body": "## What is this Python project?\r\n\r\nPyPika is a programmatic interface that uses a natural, pythonic syntax for creating SQL queries without assumptions. It is intended for querying analytical data and supports analytic queries but is designed as a light-weight wrapper that is extensible to any SQL syntax.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Light-weight wrapper using pythonic syntax\r\n- Uses the builder pattern with immutability for dynamic construction of queries and re-use of query parts\r\n- Supports complex queries with arithmetic, functions, and nested expressions\r\n- Supports analytic queries\r\n- No assumptions made, extensible to any SQL syntax and database\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "pypika-add",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "Why is this not merged yet?",
      "Poking to get it reopened :)",
      "It's still closed 🙁 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f884ea88c0a76e0a4ed60",
    "number": 914,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f884fa88c0a76e0a4ed61",
    "number": 913,
    "body": "Syncing from original",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8850a88c0a76e0a4ed62",
    "number": 912,
    "body": "Bringing fork up to date\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "update to latest version"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8851a88c0a76e0a4ed63",
    "number": 911,
    "body": "Pyoko, A Django-esque NoSQL ORM for Riak KV >= 2.2 added.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "pyoko-add",
    "is_a_fork": true,
    "comments": [
      "hello vinta dayı."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8852a88c0a76e0a4ed64",
    "number": 910,
    "body": "## What is this Python project?\r\n\r\nConvert Chinese hanzi to pinyin.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nMore powerful, more active, more developer-friendly(tests, docs).\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #910 from mozillazg/patch-1\n\nadd pypinyin"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8852a88c0a76e0a4ed65",
    "number": 909,
    "body": "## What is this Python project?\r\n\r\n_taken from their README.md:_\r\n\r\nPySynth is a simple music synthesizer written in Python 3. The goal is not to produce many different sounds, but to have scripts that can turn ABC notation or MIDI files into a WAV file without too much tinkering.\r\n\r\nThis project was created by @mdoege\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe project make great sounds and it's pretty easy to use\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8853a88c0a76e0a4ed66",
    "number": 908,
    "body": "## What is this Python project?\r\n\r\n*from their docs:*\r\n\r\n> Tapioca helps you generating Python clients for APIs. APIs wrapped by Tapioca are explorable and follow a simple interaction pattern that works uniformly so developers don't need to learn how to use a new coding interface/style for each service API.\r\n\r\nIn the end, it helps you out writing wrappers for apis and made then easy and available to be used by other people.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - Well, it wraps any api in a concise, object oriented way.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_tapiocawrapper",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8854a88c0a76e0a4ed67",
    "number": 907,
    "body": "## What is this Python project?\r\n\r\n*taken from their docs:*\r\n\r\n**pyenchant** provides a set of Python language bindings for the **Enchant** spellchecking library.\r\n\r\n> Enchant aims to provide a simple but comprehensive abstraction for dealing with different spell checking libraries in a consistent way. A client, such as a text editor or word processor, need not know anything about a specific spell-checker, and since all back-ends are plugins, new spell-checkers can\r\nbe added without needing any change to the program using Enchant.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - Based on a clib\r\n - Works with different spell-checkers\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_pyenchant",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8855a88c0a76e0a4ed68",
    "number": 905,
    "body": "Relatively small, simple changes. See commit messages for reasoning. Thanks for this wonderful resource, @vinta!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #905 from JoshuaRLi/master\n\nUpdate deprecated envoy -> delegator.py, stale link name church -> mimesis."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8856a88c0a76e0a4ed69",
    "number": 904,
    "body": "## What is this Python project?\r\n\r\nThis Python project provides a high-level interface for parsing, transforming, displaying, and satisfying Boolean expressions, as well as representing them through truth tables. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis library strives to encompass many features of similar libraries such as PyEDA and Pycosat and encapsulate these features in a simpler programming interface using Pythonic features such as iterators, kwargs, and namedtuples. tt also has a greater emphasis on producing REPL-friendly output and has extensive documentation on its project site (http://tt.brianwel.ch), making it an easier tool to use for beginners to learn more about Boolean algebra and manipulation. tt also strives for ease of distribution, with support for Python 2.7 - 3.6 and pre-built wheels for 32-bit and 64-bit Windows Python on all supported interpreter versions (https://pypi.python.org/pypi/ttable/0.6.2). \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "The package looks good on pypi but it looks like tt.bwel.ch is not working.\r\n",
      "@Alexspayne thanks for letting me know, looks like I'm running into some DNS issues with namecheap which I should hopefully resolve soon. The docs can still be accessed at http://tt.readthedocs.io/en/latest/ in the short term.",
      "DNS issues have been resolved, docs are available at http://tt.brianwel.ch",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8856a88c0a76e0a4ed6a",
    "number": 903,
    "body": "### GitHub Corrected URLs \r\nWas | Now \r\n--- | --- \r\nhttps://github.com/ClusterHQ/eliot | https://github.com/ScatterHQ/eliot \r\nhttps://github.com/Widdershin/butterdb | https://github.com/terrible-ideas/butterdb \r\nhttps://github.com/catholabs/esengine | https://github.com/seek-ai/esengine \r\nhttps://github.com/django-debug-toolbar/django-debug-toolbar | https://github.com/jazzband/django-debug-toolbar \r\nhttps://github.com/jflesch/pyocr | https://github.com/openpaperwork/pyocr \r\nhttps://github.com/jkbrzt/httpie | https://github.com/jakubroztocil/httpie \r\nhttps://github.com/jlafon/PynamoDB | https://github.com/pynamodb/PynamoDB \r\nhttps://github.com/klen/python-mode | https://github.com/python-mode/python-mode \r\nhttps://github.com/koenbok/Cactus/ | https://github.com/eudicots/Cactus \r\nhttps://github.com/lk-geimfari/church | https://github.com/lk-geimfari/mimesis \r\nhttps://github.com/maraujop/django-crispy-forms | https://github.com/django-crispy-forms/django-crispy-forms \r\nhttps://github.com/mathcamp/flywheel | https://github.com/stevearc/flywheel \r\nhttps://github.com/mozilla-services/cornice | https://github.com/Cornices/cornice \r\nhttps://github.com/mvantellingen/localshop | https://github.com/jazzband/localshop \r\nhttps://github.com/nicolaiarocci/cerberus/ | https://github.com/pyeve/cerberus \r\nhttps://github.com/nicolaiarocci/eve | https://github.com/pyeve/eve \r\nhttps://github.com/nvie/pip-tools | https://github.com/jazzband/pip-tools \r\nhttps://github.com/platformio/platformio | https://github.com/platformio/platformio-core \r\nhttps://github.com/rbarrois/factory_boy | https://github.com/FactoryBoy/factory_boy \r\nhttps://github.com/ronnix/fabtools | https://github.com/fabtools/fabtools \r\nhttps://github.com/stochastic-technologies/shortuuid | https://github.com/skorokithakis/shortuuid \r\nhttps://github.com/sunlightlabs/django-wordpress/ | https://github.com/istrategylabs/django-wordpress \r\nhttps://github.com/tonioo/modoboa | https://github.com/modoboa/modoboa \r\nhttps://github.com/yhat/ggplot | https://github.com/yhat/ggpy \r\nhttps://github.com/yyuu/pyenv | https://github.com/pyenv/pyenv \r\n\r\n\r\n### HTTPS Corrected URLs \r\nWas | Now \r\n--- | --- \r\nhttp://aws.amazon.com/elastictranscoder/ | https://aws.amazon.com/elastictranscoder/ \r\nhttp://blog.getpelican.com/ | https://blog.getpelican.com/ \r\nhttp://docs.openstack.org/developer/cliff/ | https://docs.openstack.org/developer/cliff/ \r\nhttp://docs.openstack.org/developer/taskflow/ | https://docs.openstack.org/developer/taskflow/ \r\nhttp://docs.pylonsproject.org/projects/colander/en/latest/ | https://docs.pylonsproject.org/projects/colander/en/latest/ \r\nhttp://nedbatchelder.com/code/modules/id3reader.py | https://nedbatchelder.com/code/modules/id3reader.py \r\nhttp://orange.biolab.si/ | https://orange.biolab.si/ \r\nhttp://podcastinit.com/ | https://podcastinit.com/ \r\nhttp://scrapy.org/ | https://scrapy.org/ \r\nhttp://weekly.codetengu.com/ | https://weekly.codetengu.com/ \r\nhttp://www.django-cms.org/en/ | https://www.django-cms.org/en/ \r\nhttp://www.openstack.org/ | https://www.openstack.org/ \r\nhttp://www.qt.io/ | https://www.qt.io/ \r\nhttp://www.scipy.org/ | https://www.scipy.org/ \r\nhttp://wxpython.org/ | https://wxpython.org/ \r\n\r\n\r\n### Other Corrected URLs \r\nWas | Now \r\n--- | --- \r\nhttp://apscheduler.readthedocs.io/ | http://apscheduler.readthedocs.io/en/latest/ \r\nhttp://cloudinit.readthedocs.io/ | http://cloudinit.readthedocs.io/en/latest/ \r\nhttp://coala-analyzer.org/ | http://coala.io/ \r\nhttp://dogpilecache.readthedocs.io/ | http://dogpilecache.readthedocs.io/en/latest/ \r\nhttp://errbot.io/ | http://errbot.io/en/latest/ \r\nhttp://fileconveyor.org/ | http://wimleers.com/fileconveyor \r\nhttp://obspy.org | https://github.com/obspy/obspy/wiki/ \r\nhttp://pynsist.readthedocs.io/ | http://pynsist.readthedocs.io/en/latest/ \r\nhttp://pyparsing.wikispaces.com/ | https://session.wikispaces.com/1/auth/auth?authToken=04a694af95b643a06fcf5716ded01a5f3 \r\nhttp://pysdl2.readthedocs.io/ | http://pysdl2.readthedocs.io/en/rel_0_9_5/ \r\nhttp://pytest.org/latest/ | https://docs.pytest.org/latest/ \r\nhttp://python.ctolib.com | https://www.ctolib.com/python/ \r\nhttp://python.libhunt.com | https://python.libhunt.com/ \r\nhttp://pythonhackers.com/open-source/ | http://www.oss.io/open-source/ \r\nhttp://pythonpaste.org/ | https://web.archive.org/web/http%3A//pythonpaste.org/ \r\nhttp://sarge.readthedocs.io/ | http://sarge.readthedocs.io/en/latest/ \r\nhttp://wercker.com/ | http://www.wercker.com/ \r\nhttp://whoosh.readthedocs.io/ | http://whoosh.readthedocs.io/en/latest/ \r\nhttp://www.cherrypy.org/ | http://cherrypy.org/ \r\nhttp://www.pylonsproject.org/ | https://pylonsproject.org/ \r\nhttp://xlwings.org/ | https://www.xlwings.org \r\nhttps://docs.mongodb.org/ecosystem/drivers/python/ | https://docs.mongodb.com/ecosystem/drivers/python/ \r\nhttps://openpyxl.readthedocs.io/ | https://openpyxl.readthedocs.io/en/default/ \r\nhttps://tox.readthedocs.io/ | https://tox.readthedocs.io/en/latest/ \r\nhttps://uwsgi-docs.readthedocs.io/ | https://uwsgi-docs.readthedocs.io/en/latest/ \r\nhttps://waitress.readthedocs.io/ | https://waitress.readthedocs.io/en/latest/ \r\nhttps://www.djangopackages.com/ | https://djangopackages.org/ \r\nhttps://www.shoop.io/en/ | https://www.shuup.com/en/ \r\nhttps://www.soimort.org/you-get/ | http://you-get.org/ \r\nhttps://xmldataset.readthedocs.io | https://xmldataset.readthedocs.io/en/latest/ \r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@m1guelpf Wow, thank you!"
    ],
    "commit_messages": [
      "Merge pull request #903 from m1guelpf/master\n\nUpdate README URLs based on HTTP redirects"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8857a88c0a76e0a4ed6b",
    "number": 902,
    "body": "## What is this Python project?\r\nIts awesome because it gives you power to manipulate gui using python and we can also control mouse and keyboard Using this.\r\n\r\nDescribe features.\r\n1.Can Automate gui based task(Like Tasker for Android).\r\n2.Can control mouse and keyboard using python also ale to send keystrokes.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere are no similler one's.\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "It's interesting but your issue is wrongly written, your \"it's awesome..\" should go under the \"what is this python project\" heading.",
      "Updated @Zireael07",
      "The project is amazing, but I don't know if the category is fitting. It deals with GUI, but it's not a GUI. Maybe a new section: GUI manipulation should be created?",
      "@butla  why not create pr for that?",
      "@Logan1x because you already have a pr with this tool :-) I'm just wondering whether it's for the food category",
      "food category ??",
      "Oh, sorry :-D it's the motion keyboard on my phone. It was supposed to be \"I'm just wondering whether it's for the GOOD category\". ",
      "oh xD  ask any person for review and then or make a voting like repo owner.",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8858a88c0a76e0a4ed6c",
    "number": 901,
    "body": "## What is this Python project?\r\n\r\n(Mostly quoting from the docs)\r\n\r\n* Easy logging to console and/or (rotating) file, created by @metachris.\r\n* Provides a fully configured standard [Python logger object](https://docs.python.org/2/library/logging.html#module-level-functions).\r\n* Pretty formatting, including level-specific colors in the console.\r\n* Robust against str/bytes encoding problems, works with all kinds of character encodings and special characters.\r\n* Multiple loggers can write to the same logfile (also works across multiple Python files).\r\n* Compatible with Python 2 and 3.\r\n* All contained in a [single file](https://github.com/metachris/logzero/blob/master/logzero/__init__.py)\r\n* No further Python dependencies.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFocusses on simplicity (less than 400 sloc), has no dependencies, and ... it's pretty!\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8859a88c0a76e0a4ed6d",
    "number": 900,
    "body": "## What is this Python project?\r\n\r\ndjango-auditlog (Auditlog) is a reusable app for Django that makes logging object changes a breeze.\r\nAuditlog tries to use as much as Python and Django’s built in functionality to keep the list of dependencies as short as\r\n possible. Also, Auditlog aims to be fast and simple to use.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nUnlike other apps Auditlog is very simplified and precise.\r\n\r\n[Django-Auditlog](https://github.com/gr1d99/django-auditlog) - I think everyone should try this app.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "django-auditlog",
    "is_a_fork": true,
    "comments": [
      "It seems the link is not pointing to the official repo: https://github.com/jjkester/django-auditlog\r\n",
      "sorry I did not realize that, its my first time filling a pull request, the official repository link is [https://github.com/jjkester/django-auditlog](https://github.com/jjkester/django-auditlog)",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8859a88c0a76e0a4ed6e",
    "number": 899,
    "body": "Add Turtle module to Game Development section.\r\n\r\n## What is this Python project?\r\n\r\nTurtle graphics is a popular way for introducing programming to kids. It was part of the original Logo programming language developed by Wally Feurzig and Seymour Papert in 1966.\r\n\r\nImagine a robotic turtle starting at (0, 0) in the x-y plane. After an import turtle, give it the command turtle.forward(15), and it moves (on-screen!) 15 pixels in the direction it is facing, drawing a line as it moves. Give it the command turtle.right(25), and it rotates in-place 25 degrees clockwise.\r\n\r\nBy combining together these and similar commands, intricate shapes and pictures can easily be drawn.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Simple to use.\r\n* Part of the standard library.\r\n* One of the oldest APIs (dating back to 1966)\r\n* Popular library in many different languages.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f885aa88c0a76e0a4ed6f",
    "number": 898,
    "body": "## What is this Python project?\r\n\r\nRexy is a hybrid recommendation system. It's written entirely in python-3.5 with highly optimized and Pythonic codes. It also has a comprehensive and powerful architecture based on the state-of-the-art design patterns in this realm. You can read the a detailed doc [here](https://github.com/kasramvd/Rexy) \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n - The architecture is very comprehensive and specifically focused on 3 major User-Product-Tag entities.\r\n - The modules and provided functionality have unique and in some cases innovative ideas like using [Wipazuka]() as a calendar-based WordNet for event-related recommendations.\r\n - It's written in python-3.5 in a Pythonic manner\r\n - Since it doesn't use complicated machine learning tools, it's easy for any python developer to cooperate in project\r\n - We will involve machine learning and deep learning algorithms and methods in a near feature by using most popular libraries and frameworks such as Numpy, Pandas, Scikit-learn and TensorFlow.\r\n - It's a movie star ;-)\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f885ba88c0a76e0a4ed70",
    "number": 897,
    "body": "## What is this Python project?\r\n\r\nCompressedCrack is a simple tool to help you crack password zip and rar files.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Maybe this should be on https://github.com/sbilly/awesome-security?\r\n",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f885da88c0a76e0a4ed71",
    "number": 896,
    "body": "## What is this Python project?\r\n\r\nSlash is a testing framework intended to test complex project, with emphasis on extensibility.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Slash puts a lot more emphasis on extending the framework -- developers can add plugins, custom configuration, command-line options and more through a simple, documented interface\r\n* Slash has a powerful fixture mechanism (inspired by `pytest`) with many advanced features and more yet to come\r\n* Slash supports an easy-to-use plugin and hook mechanism (powered by the `gossip` library)\r\n* Slash has a built-in exception handling mechanism allowing tests and infrastructure to catch errors early, preserving the test subject state or taking actions when it is needed the most. This is also supported in conjunction with expected exceptions or possible ones\r\n* Slash has a flexible, multi-scoped cleanup mechanism, supporting retroactive test failures and session-scoped cleanups\r\n* Slash supports multiple parametrization schemes, with more features being added each release\r\n* Slash supports customizable logging setups and schemes, allowing finer control over log files and verbosity\r\n* Slash supports test artifacts, details and metadata to be controlled by both tests and plugins\r\n* Slash integrates with the [Backslash test reporting service](http://getslash.github.io/backslash/), allowing test results to be examined an analyzed with ease\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@rmk135 done. Thanks!",
      "@rmk135 we're at 18 👍  - does that count?",
      "@rmk135 This issue reached 20, can it be merged?",
      "Hi guys,\r\n\r\nWell, I don't know could it be merged because I don'maintain this repo :) My pull request https://github.com/vinta/awesome-python/pull/879 also reached ~ 20 votes some time ago after I asked my community to vote on it, but it is still not merged, as well as yours.\r\n\r\nRegarding the comment I left to this pull request, so I watch on what's going on with this project and often review request that people add. Long story short, it was just a peer review.\r\n\r\nThanks,\r\nRoman",
      "@rmk135 I see. Thanks!",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n",
      "We reached 22 votes, can it please be merged (and not stale)?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f885ea88c0a76e0a4ed72",
    "number": 895,
    "body": "## What is this Python project?\r\n\r\nextract and modify IPTC (metadata) information on images - port of IPTCInfo.pm by Josh Carter\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDidn't find a competitor at the same field\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f885ea88c0a76e0a4ed73",
    "number": 894,
    "body": "[auto_ml](https://github.com/ClimbsRocks/auto_ml) democratizes access to machine learning to any engineer or analyst who can write Python. Many standard classification and regression problems follow largely the same set of best practices. Rewriting several hundred lines of largely duplicative code each time is a pain to maintain, and slows down iteration speeds. \r\n\r\nauto_ml is tuned for production, both in prediction speeds, flexibility of inputs, and serializing the trained model to disk. It is the automated machine learning platform that we use for our engineers at a large tech startup, and we're just starting to publicize it a bit and make it more widely available to the community. \r\n\r\nLet me know if you have any questions!\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f885fa88c0a76e0a4ed74",
    "number": 893,
    "body": "## What is this Python project?\r\n\r\n[ModernGL](https://github.com/cprogrammer1994/ModernGL) is a python3 module that encapsulates **OpenGL** in a **pythonic** way\r\n\r\n- [ModernGL on PyPI](https://pypi.python.org/pypi/ModernGL/)\r\n- [Documentation](https://moderngl.readthedocs.io/)\r\n- [Examples](https://github.com/cprogrammer1994/ModernGL/tree/master/examples)\r\n- [Changelog](https://github.com/cprogrammer1994/ModernGL/blob/master/CHANGELOG.md)\r\n\r\nFeatures:\r\n\r\n- Full linting support - (using [vscode](https://code.visualstudio.com/) and [pylint](https://www.pylint.org/))\r\n- Create GLSL shaders with only a few lines of code\r\n- Create framebuffers and validate them with a single call\r\n- Access cool OpenGL features by writing clean and self-explaining code\r\n- [vscode snippets](https://github.com/cprogrammer1994/ModernGL/blob/master/extras/vscode/python.json) for fast prototyping\r\n- Render to pillow image - (no window required)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n### ModernGL - PyOpenGL\r\n\r\n#### Pros\r\n\r\n- Same quality and performance with less code written\r\n- Readable code and no `ctypes` required\r\n- Rendering without a window\r\n- Fully linted\r\n\r\n#### Cons\r\n\r\n- One can mix ModernGL and PyOpenGL so there are no drawbacks.\r\n\r\n## Example\r\n\r\n### Using PyOpenGL\r\n\r\n```py\r\nvbo1 = glGenBuffers(1)\r\nGL.glBindBuffer(GL_ARRAY_BUFFER, vbo1)\r\nGL.glBufferData(GL_ARRAY_BUFFER, b'Hello World!', GL_STATIC_DRAW)\r\n\r\nvbo2 = glGenBuffers(1)\r\nGL.glBindBuffer(GL_ARRAY_BUFFER, vbo2)\r\nGL.glBufferData(GL_ARRAY_BUFFER, b'\\x00' * 1024, GL_DYNAMIC_DRAW)\r\n```\r\n\r\n### Using ModernGL\r\n\r\n```py\r\nvbo1 = ctx.buffer(b'Hello World!')\r\nvbo2 = ctx.buffer(reserve=1024, dynamic=True)\r\n```\r\n\r\n### Some cool features\r\n\r\n```py\r\n# Read the content\r\n>>> vbo1.read()\r\nb'Hello World!'\r\n\r\n# Copy between buffers\r\n>>> ctx.copy_buffer(vbo2, vbo1)\r\n\r\n>>> vbo2.read(5)\r\nb'Hello'\r\n\r\n# Buffer re-specification\r\n>>> vbo2.orphan()\r\n>>> vbo2.write(b'Some other data')\r\n```\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "moderngl",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8860a88c0a76e0a4ed75",
    "number": 892,
    "body": "## What is this Python project?\r\n\r\n[Storyblok](https://www.storyblok.com) is an API-based CMS focusing on content through components. It provides an easy to use interface for content creators and integrates easily in any programming language. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* First API-based CMS in the list\r\n* All functionalities are free to use\r\n* Django Boilerplate to even start faster\r\n* Full tutorial on how to integrate\r\n* No installation required\r\n* Integratable in existing projects\r\n\r\n> “Talk is cheap. Show me the code.” - Linus Torvalds\r\n\r\n(The whole [Django boilerplate is open sourced](https://github.com/storyblok/django-boilerplate) and already comes with a gulp job for JS & SASS)\r\n\r\n(Not sure if we should link to the tutorial or only to the boilerplate? - what do you think?)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8861a88c0a76e0a4ed76",
    "number": 891,
    "body": "The link to pysonar2 404'd, here is a link to a repository that I think hosts the same code.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8862a88c0a76e0a4ed77",
    "number": 890,
    "body": "## What is this Python project?\r\n\r\ngREST (Graph-based REST API Framework) is a RESTful API development framework on top of Python, Flask, Neo4j and Neomodel. Its primary purpose is to ease development of RESTful APIs with little effort and miminum amount of code. It has built-in user input validation, relationship handling and multiple serialization options (JSON, XML & YAML).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar projects built for this specific problem area.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      " :+1:",
      "According to the Google BigQuery from `the-psf ` database, this library has been downloaded more than 57000 times! Isn't it awesome?\r\n\r\n```\r\nSELECT\r\n  COUNT(*) as download_count,\r\nFROM\r\n  TABLE_DATE_RANGE(\r\n    [the-psf:pypi.downloads],\r\n    DATE_ADD(CURRENT_TIMESTAMP(), -365, \"day\"),\r\n    DATE_ADD(CURRENT_TIMESTAMP(), -1, \"day\")\r\n  )\r\nWHERE\r\n  file.project = 'pygrest'\r\n```",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8862a88c0a76e0a4ed78",
    "number": 889,
    "body": "## What is this Python project?\r\nPika is an implementation of the AMQP0-9-1 including RabbitMQ's extensions.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-pika",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8863a88c0a76e0a4ed79",
    "number": 888,
    "body": "## What is this Python project?\r\ncx_Freeze is a set of scripts and modules for freezing Python scripts into executables in much the same way that py2exe and py2app do. Unlike these two tools, cx_Freeze is cross platform and should work on any platform that Python itself works on. It requires Python 2.7 or higher and does work with Python 3.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nI have tried all the similar libraries, but personally This is the one that has worked the best for me. Other libraries are outdated and complicated to work with. This one is a little more simpler. It works with Python 3 pretty easily. That is why I like it. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "You should change the name in pull request name to cx_freeze, not cv_freeze",
      "cx_Freeze",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8864a88c0a76e0a4ed7a",
    "number": 887,
    "body": "![screen shot 2017-05-16 at 21 37 12](https://cloud.githubusercontent.com/assets/470325/26133750/ef5af022-3a7f-11e7-9f9d-1bb70a2e7f7a.png)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Added."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8865a88c0a76e0a4ed7b",
    "number": 886,
    "body": "## What is this Python project?\r\n\r\nAlternative to celery with far less features but simplified\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCelery, or any other task queue library\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8866a88c0a76e0a4ed7c",
    "number": 885,
    "body": "## What is this Python project?\r\n\r\nTorsimany is a JSON to Markdown converter. Scheme-independent. Translate any JSON file to stylish, human-readable Markdown. Completely written in python 💚 \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nComparing to other \"format X to Markdown\" converters, Torsimany is absolutely independent of the input scheme or structure as long as it's a JSON file. This is because it uses a recursive algorithm to navigate through the JSON tree.\r\nIf it's in JSON, Torsimany will output a nice and human-readable markdown. \r\n\r\n💡✏️️ ⬇️\r\n\r\n* name cames from the ancient medieval copyists in the Catalan language, cool enough.\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I tried to run it, but I just found it doesn't work with following error message,\r\n```\r\nTraceback (most recent call last):\r\n  File \"torsimany.py\", line 7, in <module>\r\n    list_tag = list_tag\r\nNameError: name 'list_tag' is not defined\r\n```\r\n\r\nThe reason is from the code from `torsimany.py`\r\n```python\r\n#-*- coding: utf-8 -*-\r\nimport sys\r\nimport json\r\n\r\nmarkdown = \"\"\r\ntab = \"  \"\r\nlist_tag = list_tag\r\nhtag = '#'\r\n```\r\nIt seems the `list_tag` is not defined anywhere. \r\n\r\nIs this project well tested? ",
      "Sorry! Something went wrong there. It's fixed now. Thanks! 👍 ",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8867a88c0a76e0a4ed7d",
    "number": 884,
    "body": "## What is this Python project?\r\n\r\nNLP pipeline, like SpaCy, or NLTK. \r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8867a88c0a76e0a4ed7e",
    "number": 882,
    "body": "## What is this Python project?\r\n\r\n[pip-upgrader](https://github.com/simion/pip-upgrader) is an interactive pip requirements upgrader, which also updates the version in your `requirements.txt` file(s).\r\nIn other words, here's a small demonstration:\r\n![pip-upgrade demo](https://raw.githubusercontent.com/simion/pip-upgrader/master/demo.gif)\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nYou can use pip-tools to upgrade all your packages. But in real life, people don't upgrade ALL packages at one.  You'll probbaly need to upgrade packages one by one, run tests, check compatibility. That's why **pip-upgrader** exists.\r\n\r\n\r\n--\r\n\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8868a88c0a76e0a4ed7f",
    "number": 881,
    "body": "## What is this Python project?\r\n\r\n[pysolr](https://github.com/django-haystack/pysolr/) is a lightweight Python wrapper for Apache Solr. It provides an interface that queries the server and returns results based on the query.\r\n\r\nLatest release on Python package index: https://pypi.python.org/pypi/pysolr/3.6.0\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Active project (see https://wiki.apache.org/solr/SolPython for other Python solr libs)\r\n* Python 3.x support\r\n* \"More Like This\" support\r\n* Support for Spelling correction \r\n* SolrCloud awareness\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "I think there is a certain sense to add links to PyPi and GitHub:\r\n\r\n- https://pypi.python.org/pypi/pysolr/3.6.0\r\n- https://github.com/django-haystack/pysolr/"
    ],
    "commit_messages": [
      "Merge pull request #881 from nikos/patch-1\n\nAdded awesome pysolr library to Search section."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8869a88c0a76e0a4ed80",
    "number": 880,
    "body": "\r\n## What is this Python project?\r\n\r\nSimPy is a process-based discrete-event simulation framework. Processes in SimPy are defined by Python generator functions and can, for example, be used to model active components like customers, vehicles or agents. SimPy also provides various types of shared resources to model limited capacity congestion points (like servers, checkout counters and tunnels).\r\n\r\nSimulations can be performed “as fast as possible”, in real time (wall clock time) or by manually stepping through the events.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI haven't found other python libraries which offer functionality similar to SimPy for Python so I'm not able to offer a comparison. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "simpy",
    "is_a_fork": true,
    "comments": [
      "Repo: https://bitbucket.org/simpy/simpy :+1:\r\n\r\nVideo intro: https://youtu.be/Bk91DoAEcjY"
    ],
    "commit_messages": [
      "Merge pull request #880 from gautamk/simpy\n\nAdding SimPy to the Science section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f886aa88c0a76e0a4ed81",
    "number": 879,
    "body": "## What is this Python project?\r\n\r\nDependency Injector is a dependency injection microframework for Python. It was designed to be unified, developer-friendly tool that helps to implement dependency injection design pattern in formal, pretty, Pythonic way.\r\n\r\nDependency Injector framework key features are:\r\n\r\n* Easy, smart, pythonic style.\r\n* Obvious, clear structure.\r\n* Extensibility and flexibility.\r\n* High performance.\r\n* Memory efficiency.\r\n* Thread safety.\r\n* Documentation.\r\n* Semantic versioning.\r\n\r\nDependency Injector containers and providers are implemented as C extension types using Cython.\r\n\r\nExample code:\r\n\r\n```python\r\n\"\"\"Example of dependency injection in Python.\"\"\"\r\n\r\nimport logging\r\nimport sqlite3\r\n\r\nimport boto3\r\n\r\nimport example.main\r\nimport example.services\r\n\r\nimport dependency_injector.containers as containers\r\nimport dependency_injector.providers as providers\r\n\r\n\r\nclass Core(containers.DeclarativeContainer):\r\n    \"\"\"IoC container of core component providers.\"\"\"\r\n\r\n    config = providers.Configuration('config')\r\n\r\n    logger = providers.Singleton(logging.Logger, name='example')\r\n\r\n\r\nclass Gateways(containers.DeclarativeContainer):\r\n    \"\"\"IoC container of gateway (API clients to remote services) providers.\"\"\"\r\n\r\n    database = providers.Singleton(sqlite3.connect, Core.config.database.dsn)\r\n\r\n    s3 = providers.Singleton(\r\n        boto3.client, 's3',\r\n        aws_access_key_id=Core.config.aws.access_key_id,\r\n        aws_secret_access_key=Core.config.aws.secret_access_key)\r\n\r\n\r\nclass Services(containers.DeclarativeContainer):\r\n    \"\"\"IoC container of business service providers.\"\"\"\r\n\r\n    users = providers.Factory(example.services.UsersService,\r\n                              db=Gateways.database,\r\n                              logger=Core.logger)\r\n\r\n    auth = providers.Factory(example.services.AuthService,\r\n                             db=Gateways.database,\r\n                             logger=Core.logger,\r\n                             token_ttl=Core.config.auth.token_ttl)\r\n\r\n    photos = providers.Factory(example.services.PhotosService,\r\n                               db=Gateways.database,\r\n                               s3=Gateways.s3,\r\n                               logger=Core.logger)\r\n\r\n\r\nclass Application(containers.DeclarativeContainer):\r\n    \"\"\"IoC container of application component providers.\"\"\"\r\n\r\n    main = providers.Callable(example.main.main,\r\n                              users_service=Services.users,\r\n                              auth_service=Services.auth,\r\n                              photos_service=Services.photos)\r\n```\r\n\r\nFor more examples, please, follow https://github.com/ets-labs/python-dependency-injector\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n1. Provides clear and simple structure: Containers -> Providers.\r\n2. Use Python language features, deeply follow Pythonic style and Zen of Python.\r\n3. Does NOT provide ``@inject`` decorator (or any other way of monkey-patching) that pollutes the code. Instead of this, provides feature of clean overriding of providers.\r\n4. Very fast, implemented using Cython.\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @vinta,\r\n\r\nI'm terribly sorry if I bother you too much, but I really appreciate to get your review on this PR. \r\n\r\nThanks,\r\nRoman"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f886ba88c0a76e0a4ed82",
    "number": 878,
    "body": "## What is this Python project?\r\n\r\nhttps://github.com/rsvp/fecon235  - ***Stars:*** 142 (as of 2017-04-20)\r\n\r\nPython tools for financial economics. Code is demonstrated using Jupyter\r\nnotebooks for statistical computations and collection of raw data in\r\nreal-time.  Extensive use of numpy, scipy, pandas, matplotlib especially\r\nfor time-series analysis and econometrics, yet the user interface is\r\nvery friendly.\r\n\r\nAPI to access data include sources such as: U.S. Federal Reserve Bank,\r\nQuandl, Yahoo and Google Finance.\r\n\r\n### Verify theoretical ideas and practical methods interactively\r\n\r\nHere is a rendering of a Jupyter notebook for Housing economy, home prices and affordibility https://git.io/housing If you had executed that notebook locally, it would have also retrieved the latest available data and recomputed the results.\r\n\r\nHow is worker's wage correlated with GDP output? See https://git.io/gdpwage To score the Federal Reserve's performance under its dual mandate for inflation and unemployment, see https://git.io/fed (where tangentially the Phillips curve is discredited by constructing heat map scatter plots). Please see https://git.io/fedfunds to forecast the Fed Funds rate using futures contracts on LIBOR.\r\n\r\nIn https://git.io/gold we make a conjecture that real gold prices is a stationary time-series bound by real interest rates. In https://git.io/xbt we statistically analyze Bitcoin as a financial asset.\r\n\r\nIn https://git.io/equities we examine the separable components of total return for equities, especially due to enterprise earnings and market speculation, using S&P data assembled by Robert Shiller which goes back to the year 1871. In https://git.io/gdpspx we examine the close relationship between the real economy and the equities market, while demonstrating the Holt-Winters time-series model for predictions.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nWe would recommend the Quantitative Economics site by Thomas [Sargent](https://lectures.quantecon.org/py/index.html) for economists interested in theory, whereas [fecon235](https://github.com/rsvp/fecon235) has a more data science emphasis with applications to finance.  Thus the two projects are complementary.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nQuestions? Chat at https://gitter.im/rsvp/fecon235 *Thank you for your consideration.*",
    "head_branch": "dev-fecon235",
    "is_a_fork": true,
    "comments": [
      "Wondering if a new heading, \"**Economics**\", should be introduced...\r\n\r\n```shell\r\n$ grep econo README.md \r\n* [fecon235](https://github.com/rsvp/fecon235) - Computational data tools for financial economics.\r\n* [statsmodels](https://github.com/statsmodels/statsmodels) - Statistical modeling and econometrics in Python.\r\n```\r\n\r\nFYI grep for \"finan\" yields nothing except **fecon235** so it's unique for \"financial\" and \"finance\".",
      "This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contributions.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f886ba88c0a76e0a4ed83",
    "number": 877,
    "body": "* Python Audio Analysis Library: Feature Extraction, Classification, Segmentation and Applications\r\n\r\n* This project uses machine learning to classify and recognize patterns in the audio files.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #877 from abhi18av/patch-1\n\nAdded pyAudioAnalysis"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f886ca88c0a76e0a4ed84",
    "number": 876,
    "body": "Bringing fork up to date",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f886da88c0a76e0a4ed85",
    "number": 875,
    "body": "## What is this Python project?\r\n\r\n`attrs` allows you to declare your class's instance attributes once, and it then takes care of generating the boilerplate `__init__`, `__eq__`, `__repr__`, etc. methods for you, turning this:\r\n\r\n```\r\nfrom functools import total_ordering\r\n@total_ordering\r\nclass Point3D(object):\r\n    def __init__(self, x, y, z):\r\n        self.x = x\r\n        self.y = y\r\n        self.z = z\r\n\r\n    def __repr__(self):\r\n        return (self.__class__.__name__ +\r\n                (\"(x={}, y={}, z={})\".format(self.x, self.y, self.z)))\r\n\r\n    def __eq__(self, other):\r\n        if not isinstance(other, self.__class__):\r\n            return NotImplemented\r\n        return (self.x, self.y, self.z) == (other.x, other.y, other.z)\r\n\r\n    def __lt__(self, other):\r\n        if not isinstance(other, self.__class__):\r\n            return NotImplemented\r\n        return (self.x, self.y, self.z) < (other.x, other.y, other.z)\r\n```\r\n\r\ninto this:\r\n\r\n```\r\nimport attr\r\n@attr.s\r\nclass Point3D(object):\r\n    x = attr.ib()\r\n    y = attr.ib()\r\n    z = attr.ib()\r\n```\r\n\r\nExample taken from [this blog post extolling the virtues of `attrs`](https://glyph.twistedmatrix.com/2016/08/attrs.html) written by the author of [Twisted](https://twistedmatrix.com/trac/).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThe only other project like this that I'm aware of is [`characteristic`](https://github.com/hynek/characteristic), which the author abandoned to create `attrs` instead.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "attrs",
    "is_a_fork": true,
    "comments": [
      " :+1:",
      "Awesoms",
      "This definitely needs to get up there."
    ],
    "commit_messages": [
      "Merge pull request #875 from jwodder/attrs\n\nAdd attrs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f886ea88c0a76e0a4ed86",
    "number": 874,
    "body": "## What is this Python project?\r\n\r\n [AppImage](http://appimage.org/) - Bundles applications into stand-alone executables including the Python runtime, modules, libraries, and resources (Linux)\r\n\r\n## What's the difference between this Python project and similar ones\r\n\r\nProviding an [AppImage](http://appimage.org/) has, among others, these advantages:\r\n- Works for most Linux distributions (including Ubuntu, Fedora, openSUSE, CentOS, elementaryOS, Linux Mint, and others)\r\n- One app = one file = super simple for users: just download one AppImage file, [make it executable](http://discourse.appimage.org/t/how-to-make-an-appimage-executable/80), and run\r\n- No unpacking or installation necessary\r\n- No root needed\r\n- No system libraries changed\r\n- Works out of the box, no installation of runtimes needed\r\n- Optional desktop integration with `appimaged`\r\n- Optional binary delta updates, e.g., for continuous builds (only download the binary diff) using AppImageUpdate\r\n- Can optionally GPG2-sign your AppImages (inside the file)\r\n- Works on Live ISOs\r\n- Can use the same AppImages when dual-booting multiple distributions\r\n\r\n[Here is an overview](https://github.com/probonopd/AppImageKit/wiki/AppImages) of projects that are already distributing upstream-provided, official AppImages. For example, [Ultimaker Cura](https://ultimaker.com/en/products/cura-software) is a PyQt application distributed in AppImage format for Linux.\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f886ea88c0a76e0a4ed87",
    "number": 873,
    "body": "The readme of https://github.com/jcgregorio/httplib2 says that repo is deprecated, and we should be using https://github.com/httplib2/httplib2.",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #873 from pawl/patch-3\n\nUpdate httplib2 link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f886fa88c0a76e0a4ed88",
    "number": 872,
    "body": "Added djsw-wrapper\r\n\r\n## What is this Python project?\r\n\r\nIt allows to create RESTful APIs using Django Rest Framework directly from Swagger schema\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are Swagger bindings for Flask and Pyramid (http://swagger.io/open-source-integrations/#python-18), but none for Django. This tool allows to use Django (DRF) to create RESTful APIs.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8870a88c0a76e0a4ed89",
    "number": 871,
    "body": "Cx_Oracle is awesome because it provides easy access to Oracle 10g, 11g\r\nand 12c databases. Cx_Oracle has been around a long time and lots of\r\npeople use it. It's a great way to start your rdbms day. :fireworks:",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8871a88c0a76e0a4ed8a",
    "number": 870,
    "body": "## What is this Python project?\r\n\r\nObsPy is an open-source project dedicated to provide a Python framework for processing seismological data. It provides parsers for common file formats, clients to access data centers and seismological signal processing routines which allow the manipulation of seismological time series.\r\n\r\nThe goal of the ObsPy project is to facilitate rapid application development for seismology.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no project with the same scope and the size of its user base. It aims to be the standard package to seismological research and data center operations in seismology. In some sense it is similar to the astropy project but for seismology.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #870 from krischer/patch-1\n\nAdding ObsPy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8872a88c0a76e0a4ed8b",
    "number": 869,
    "body": "## What is this Python project?\r\n\r\nThis tool is used to clear merged pull requests ref (branch) on GitHub. Since GitHub have no feature to auto deletion branch on pull request, we usually has been forgotten to delete the branch manually. Useful when we are working on `monorepo` or very large team which a lot of undeleted branches exist within single repository.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's unique and very specific use case\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add-github-clear-merged-pr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8872a88c0a76e0a4ed8c",
    "number": 868,
    "body": "## What is this Python project?\r\n\r\n[Module Linker](http://fiatjaf.alhur.es/module-linker/#/python) is a Chrome Extension that turns `import` declarations into actual `<a href=\"...\">` links to the source code (or standard library documentation) of the package being imported. If what is being imported is a module from the same package, Module Linker links to that file.\r\n\r\n![](https://raw.githubusercontent.com/fiatjaf/module-linker/gh-pages/screenshot/python-screencast.gif)\r\n\r\nIf for some reason you spend some time reading code and browsing source code on GitHub, this extension will make your do your job faster and more pleasantly.\r\n\r\n---\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8873a88c0a76e0a4ed8d",
    "number": 867,
    "body": "## What is this Python project?\r\n\r\nMist.io is a web application that helps you manage and monitor virtual machines across different clouds and infrastructures. Public clouds included are AWS, GCE, Azure, DigitalOcean, SoftLayer, Rackspace, Vultr. OpenStack is also supported, Docker, plus vSphere and KVM\r\n\r\nThe same functionality is offered across all infrastructures (list VMs, create new ones, tag, start/stop/reboot/destroy, associate ssh keys, access web shell, run scripts, schedule scripts). \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBeing a web application it provides graphical management of infrastructure. Also contains an API and cmd to perform same tasks over the console\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "mist.io",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8874a88c0a76e0a4ed8e",
    "number": 866,
    "body": "CPython source officially moved to GitHub, so this URL should probably be updated.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a 👍 to it, and usually, the maintainer will merge it when votes reach 20.\r\n",
    "head_branch": "cpython-repo-move",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #866 from rreynold/cpython-repo-move\n\nUpdated URL for CPython"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8875a88c0a76e0a4ed8f",
    "number": 865,
    "body": "Title says it all: update [furl](https://github.com/gruns/furl)'s description.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #865 from gruns/master\n\nUpdate furl's description."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8876a88c0a76e0a4ed90",
    "number": 864,
    "body": "Add Snapcraft, a universal linux build and update packaging system.\r\n\r\nThe snap format is a single compressed filesystem that is mounted dynamically by the host operating system, together with declarative metadata that is interpreted by the snap system to set up an appropriately shaped secure sandbox or container for that application. File format extension is .snap .\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "stephenbhope-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8877a88c0a76e0a4ed91",
    "number": 863,
    "body": "## What is this Python project?\r\n\r\nA pure Python line-by-line profiler with both statistical and deterministic modes that supports threading. Does not require modification of source code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* pure-python so easy to install and does not need a C compiler.\r\n* Does not require source code modification to select what should be profiled.\r\n* Meaningful output for recursive functions\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8877a88c0a76e0a4ed92",
    "number": 862,
    "body": "Added python-fire library\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8878a88c0a76e0a4ed93",
    "number": 861,
    "body": "merge\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8879a88c0a76e0a4ed94",
    "number": 860,
    "body": "## What is this Python project?\r\n\r\nNanobox is aimed at improving Python development workflow. It created consistent, isolated development environments that can be deployed anywhere.\r\n\r\nThis helps maintain environment consistency across development teams and applications stages (dev, staging, production, etc.)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's different than other projects in its class because it tackles the problem of infrastructure configuration and management as a whole, rather than just pieces of it (development environments, configuration, etc.)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "update/nanobox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f887aa88c0a76e0a4ed95",
    "number": 859,
    "body": "## What is this Python project?\r\n\r\nIt's a very simple to use caching layer for the requests library.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt's similar in scope to the betamax and VCR libraries, but those focus on (gathering data for) testing while CacheControl focuses on working like a real cache.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f887aa88c0a76e0a4ed96",
    "number": 858,
    "body": "solves issue #820 on vinta:awesome-python\r\n\r\n## What is this Python project?\r\n\r\nI'm suggesting removal of pylearn2 as per issue #820 \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI'm advocating for removal:\r\n1. Because the project is depreciated, this warning appears on the projects page:\r\n```\r\nWarning\r\nThis project does not have any current developer. We will continue to review pull requests and merge them when appropriate, but do not expect new development unless someone decides to work on it.\r\nThere are other machine learning frameworks built on top of Theano that could interest you, such as: Blocks, Keras and Lasagne.\r\n```\r\n2. As a full time DS practitioner it's my personal professional opinion that this library should not be recommended and the functionality has been completely replaced by more recent and active projects like Keras, pytorch, and many others. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #858 from thenomemac/master\n\nUpdate README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f887ba88c0a76e0a4ed97",
    "number": 857,
    "body": "## What is this Python project?\r\n\r\nA modern, browser-based frontend to gdb (gnu debugger). Add breakpoints, view stack traces, and more in C, C++, Go, and Rust. Simply run gdbgui from the terminal and a new tab will open in your browser.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no similar Python projects, but this project is unique in that it is the most feature-complete gdb frontend in a browser at the time of this PR.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f887ca88c0a76e0a4ed98",
    "number": 856,
    "body": "## What is this Python project?\r\n[https://github.com/gaojiuli/xweb](https://github.com/gaojiuli/xweb)\r\nWeb framework for the zen of python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Xweb has very simple api.\r\n- Xweb did not use any third-party dependency.\r\n- Xweb does not have any redundant code for python2.\r\n- Source code is easy to understand.\r\n- It is easy to write xweb's middleware.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f887da88c0a76e0a4ed99",
    "number": 855,
    "body": "## What is this Python project?\r\n\r\nThe main idea is to simplify managemet of binary drivers for different browsers.\r\n\r\nFor now support:\r\n\r\nChromeDriver\r\n\r\nGeckoDriver\r\n\r\nEdgeDriver\r\n\r\nIEDriver\r\n\r\nPhantomJS\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere is no similar projects. \r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f887ea88c0a76e0a4ed9a",
    "number": 854,
    "body": "This project has been moved to an org account.",
    "head_branch": "python-mode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f887ea88c0a76e0a4ed9b",
    "number": 853,
    "body": "## What is this Python project?\r\n\r\nhttps://github.com/google/python-fire\r\n\r\n- Python Fire is a simple way to create a CLI in Python.\r\n- Python Fire is a helpful tool for developing and debugging Python code.\r\n- Python Fire helps with exploring existing code or turning other people's code\r\ninto a CLI.\r\n- Python Fire makes transitioning between Bash and Python easier.\r\n- Python Fire makes using a Python REPL easier by setting up the REPL with the\r\nmodules and variables you'll need already imported and created.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFire is not as flexible as [click](https://github.com/pallets/click), yet it provides an easier way to start a simple CLI program. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a 👍 to it, and usually, the maintainer will merge it when votes reach 20.",
    "head_branch": "python-fire",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #853 from houjunchen/python-fire\n\nAdd python fire"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f887fa88c0a76e0a4ed9c",
    "number": 852,
    "body": "## What is this Python project?\r\n\r\nSideCI is an automated code reviewing tool with GitHub. Codes are analyzed by Flake8.\r\nIt enables developers to speed up their code review and development cycle to improve productivity without requiring their to spend valuable time.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nDevelopers can execute Flake8 without setting files and receive feedback from their pull requests.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "add_sideci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8880a88c0a76e0a4ed9d",
    "number": 851,
    "body": "## What is this Python project?\r\nA python library for url minification.\r\n[Documentation](http://microurl.readthedocs.io/en/latest/)\r\n\r\n## What's the difference between this Python project and similar ones?\r\nFeatures\r\n--------\r\n- Google\r\n    - URL Minifier\r\n    - QR Generator\r\n- Bitly\r\n    - URL Minifier\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8881a88c0a76e0a4ed9e",
    "number": 850,
    "body": "…e interfaces` section\r\n\r\n## What is this Python project?\r\n\r\nDjango-Smart-AutoRegister (DSA) is a Django tool that automatically configure the ModelAdmin classes of your application using some good patterns:\r\n\r\n- The default behavior is to protect your application against reading without intention the entire data table because some foreign key relationship.\r\n- It search by all pertinent fields.\r\n- It create filter for all pertinent fields.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n-- Configure your django admin interface with 2 lines of code\r\n-- There is no other tool like this\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "dsa",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8882a88c0a76e0a4ed9f",
    "number": 849,
    "body": "Added django-dynamic-fixture in Object Factories section\r\n\r\n## What is this Python project?\r\n\r\nDjango Dynamic Fixture (DDF) is a complete and simple library to create dynamic model instances for testing purposes.\r\n\r\nIt lets you focus on your tests, instead of focusing on generating some dummy data which is boring and polutes the test source code.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n-- simple and clean\r\n-- full of features (including exclusive features like nose plugin, filesystem helpers etc)\r\n-- support all Django versions\r\n-- great support of the community\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "ddf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8882a88c0a76e0a4eda0",
    "number": 848,
    "body": "## What is this Python project?\r\n\r\nJasper is an asynchronous behavior-driven development framework.  \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nJasper's main points that separate it from other BDD frameworks are:\r\n\r\n- Tests are run asynchronously, making it very easy and intuitive to write tests for asynchronous code.\r\n- Features are described within .py files, exactly how you would write normal python code. No need to learn the syntax of a domain-specific language in order to define your features like other frameworks require.\r\n- Small and simple built-in optional assertion library allows for easy to write and easy to read assertions.\r\n- The structure of your features, scenarios, and steps is very nonrestrictive. No requirements for any specific directory structures in order for Jasper to run you tests.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8883a88c0a76e0a4eda1",
    "number": 847,
    "body": "## What is this Python project?\r\n\r\nThe Language Technology Platform (LTP), is an open-sourced Chinese natural language processing system developed in the Research Center for Social Computing and Information Retrieval, HIT. LTP has developed an XML-based natural language processing results expression, and on this basis provides a rich set of bottom-up, efficient, high-precision Chinese natural language processing modules including lexical, syntactic, semantic analysis and other five Chinese processing core technology.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nLTP has obtained excellent results in serveral Chinese and international bake-offs. Especially it won the first place in the CoNLL 2009 international joint evaluation of syntactic and semantic analysis. LTP also provides well-documented web service, programming interface and visualization tools.\r\n\r\n\r\n---\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "nlp.ltp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8884a88c0a76e0a4eda2",
    "number": 846,
    "body": "## What is this Python project?\r\n\r\nSacred Marriage of Pipfile, Pip, & Virtualenv. from kennethreitz\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\neasy to use  \r\n\r\nPipfile is useful ",
    "head_branch": "add-link-for-pipenv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8885a88c0a76e0a4eda3",
    "number": 845,
    "body": "## What is this Python project?\r\n\r\nThis library allows you to interact between multiple distributed services using AMQP. They can call each other's methods via RPC, broadcast cluster-wide messages and perform periodic tasks.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis library is similar to [Nameko](https://github.com/onefinestay/nameko) but is built using `gevent` and offers a more narrow set of functions. It's aimed to be used alone or together with Django and be as lightweight as possible.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8886a88c0a76e0a4eda4",
    "number": 844,
    "body": "I've added links for the **Splinter** framework (web scraping) and **coursera-dl** which is much like youtube-dl but for coursera courses.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8886a88c0a76e0a4eda5",
    "number": 843,
    "body": "## What is this Python project?\r\n\r\n`elasticpypi` provides a private PyPI \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Uses completely managed services (serverless)\r\n- Costs less than one dollar a month (of course it depends on your usage but from what I've seen on a small team)\r\n- Able to have separate PyPIs for production, testing, etc.\r\n- Add new eggs/wheels by adding file to S3 bucket\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8887a88c0a76e0a4eda6",
    "number": 842,
    "body": "## What is this Python project?\r\nPythonBuddy is an online Python Syntax Editor with live syntax checking. It is also open source. \r\n\r\nI made this so that MOOCs like edX or codecademy could easily embed and use this on their courses. Also, PythonBuddy could help alleviate the frustrations with setting up a programming environment.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere has never been a live syntax checker for python online. Similar projects that are not \"live\" are http://pep8online.com/ and http://antares.sip.ucm.es/cesar/pylint/\r\n\r\nMore info here: https://github.com/ethanchewy/OnlinePythonLinterSyntaxChecker\r\n\r\nEnumerate comparisons.\r\nCurrent Features:\r\n\r\n- Search ability (Ctrl+F)\r\n- Syntax Highlighting\r\n- Live Syntax Checking with Pylint\r\n- Easy to Host on any Server \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8888a88c0a76e0a4eda7",
    "number": 840,
    "body": "## Automate Translation of one Natural Language to another w/o paying money\r\n\r\nGoogle Translation APIs are paid. Businesses usually pay for **i18n** of their Apps and Websites.\r\nWhile one could write a Scrapper (probably using Selenium because of AJAX) to translate each String to targeted language. But that would tiresome. It uses a specific Google Translate API to translate, as described in Project.\r\n\r\nDisclaimer:\r\nI have written this.",
    "head_branch": "i18n_ieighteen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8889a88c0a76e0a4eda8",
    "number": 839,
    "body": "## What is this Python project?\r\n\r\nIt can make format() in Python more fexiable and convenient to use.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* The syntax looks more human readable.\r\n* The format specifier ( such as `%s`, `%d` ... ) can be omited, and will be repalced with `{}` .\r\n* Padding and aligning strings.\r\n* Support named placeholders, mean it can format the string with dict data structure as parameter of format().\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f888aa88c0a76e0a4eda9",
    "number": 838,
    "body": "fix lint to Ajenti",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #838 from green16/master\n\nfix Ajenti"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f888ba88c0a76e0a4edaa",
    "number": 837,
    "body": "Forex Python is a real time Free Foreign exchange rates, currency conversion and Bit Coin to currency conversion. check [Docs](http://forex-python.readthedocs.io/en/latest/usage.html)\r\n\r\n## What is this Python project?\r\n### forex-python Features\r\n* List all currency rates.\r\n* BitCoin price for all curuncies.\r\n* Converting amount to BitCoins.\r\n* Get historical rates for any day since 1999.\r\n* Conversion rate for one currency(ex; USD to INR).\r\n* Convert amount from one currency to other.(‘USD 10$’ to INR)\r\n* Currency Symbols\r\n* Currency names\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis package provides free real-time currency conversion rates. Uses http://fixer.io and http://www.coindesk.com/api/ to fetch conversion rates.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #837 from ravigadila/patch-1\n\nAdded forex-python"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f888ba88c0a76e0a4edab",
    "number": 836,
    "body": "## What is this Python project?\r\n\r\nIt's a framework for scraping HTML sites, and aggregating data from multiple sites from a same category (e.g. banking sites, news sites, video sites, etc.).\r\nThere are ready-made modules for popular websites and ready-apps to interact with them.\r\nThink youtube-dl applied to other domains than video!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* It's possible to scrape new websites with declarative-style extraction rules\r\n* It provides a standardized API for categories of sites for dedicated tasks (e.g. banking, web forums, video sites, news sites, music lyrics sites, etc.)\r\n  * Scraped websites are grouped in those categories\r\n* Scraped websites are grouped in categories for a dedicated task: \r\n* The project comes with many existing backends for real-life websites\r\n* It has an internal upgrade system\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f888ca88c0a76e0a4edac",
    "number": 835,
    "body": "## What is this Python project?\r\n\r\nAdded Buildbot: The Continuous Integration Framework\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nAdd individual entry.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f888da88c0a76e0a4edad",
    "number": 834,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f888ea88c0a76e0a4edae",
    "number": 832,
    "body": "I added https://github.com/muatik/flask-profiler\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f888fa88c0a76e0a4edaf",
    "number": 831,
    "body": "HARFANG 3D is a 3D framework, created to deliver applications that needs a (GPU accelerated) 3D display.\r\n\r\nIt takes charge of : \r\n* 3D scenegraph (objects, geometries, lights, cameras, ...)\r\n* Multimedia resources (geometries, textures, images, video, audio)\r\n* Access to OpenGL and SteamVR (support the HTC Vive, Oculus Rift and Lenovo Explorer VR headsets)\r\n* Fully multithreaded (content processing is automatically distributed)\r\n* Realtime rigid bodies physics simulation (using the Bullet library with a seamless integration)\r\n* Pathfinding on any 3D geometry (using the Recast library)\r\n* 2D debug GUI (using Dear Im Gui)\r\n* Builds & runs on Windows 32 & 64, Linux 64 and (Yocto) Poky Linux 64\r\n* Ships with a 3D conversion pipeline (interoperability with any 3D package)\r\n* Embeds Lua for extended multi-core VM\r\n* Integrated debugger (to explore & modify the current state of your scenegraph)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* Fully Multicore\r\n* SteamVR compatible (as of 2017). A VR application can be built in less than a 100 lines of code\r\n* Built & actively maintained by a core team of game developpers with a track record on Wii, PC, PS2, PS3, Android and iOS games.\r\n* Seamless API & assets format among the various subsystems. For ex, the very same geometry can be sent to the 3D display, to the navigation system and to the physics system.\r\n* Written in modern C++ \r\n\r\nA demo of the framework can be seen here : \r\nhttps://www.youtube.com/watch?v=LN6Mnc4-Uzg\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #831 from astrofra/master\n\nAdding Harfang3D to Game development section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f888fa88c0a76e0a4edb0",
    "number": 830,
    "body": "## What is this Python project?\r\n\r\nFramework for Neutral Network\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nCompared to \"Caffe\" you can write code very concisely\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8890a88c0a76e0a4edb1",
    "number": 829,
    "body": "## What is this Python project?\r\nXGBoost is a gradient boosting library. It's one of the most popular GB libraries used among Kaggle users because it's yielded some of the highest scores. And its also a favorite with some of the champions. \r\nHere's an example of its use with an Otto dataset: https://www.kaggle.com/tqchen/otto-group-product-classification-challenge/understanding-xgboost-model-on-otto-data\r\nHere is a Kaggle first place team winner, showing their love for it: http://blog.kaggle.com/2015/12/03/dato-winners-interview-1st-place-mad-professors/\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThis library is solely for gradient boosting.\r\nThis resolves issue #821.\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #829 from jonmhong/master\n\nXGBoost is a Kaggle favorite!"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8891a88c0a76e0a4edb2",
    "number": 828,
    "body": "## What is this Python project?\r\n\r\nJapronto (from Portuguese \"já pronto\" /ˈʒa pɾõtu/ meaning \"already done\") is a screaming-fast, scalable, asynchronous Python 3.5+ web micro-framework integrated with pipelining HTTP server based on uvloop and picohttpparser.\r\n\r\nFeatures:\r\n\r\n- HTTP 1.x implementation with support for chunked uploads.\r\n\r\n- Full support for HTTP pipelining.\r\n\r\n- Keep-alive connections with configurable reaper.\r\n\r\n- Support for synchronous and asynchronous views.\r\n\r\n- Master-multiworker model based on forking.\r\n\r\n- Support for code reloading on changes.\r\n\r\n- Simple routing.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n\r\n- Performance (1214440 Req/Sec).\r\n\r\n![alt Performance](https://github.com/squeaky-pl/japronto/raw/master/benchmarks/results.png \"Japronto 0.1\")\r\n\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8892a88c0a76e0a4edb3",
    "number": 827,
    "body": "## What is this Python project?\r\n\r\nCoconut is a functional programming language that compiles to Python. Coconut is strictly an enhancement to Python, as all valid Python is valid Coconut. Learn more at <http://coconut-lang.org/>. Coconut is already rather popular, with over 800 stars on [GitHub](https://github.com/evhub/coconut).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOther functional programming tools linked are libraries or utilities. Coconut is an entire programming language, with support for much more advanced features such as algebraic data types and pattern-matching, as well as features that rely on new syntax, such as better lambdas and partial application.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #827 from evhub/master\n\nAdds Coconut"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8893a88c0a76e0a4edb4",
    "number": 826,
    "body": "## What is this Python project?\r\n\r\nPyTorch is a deep learning framework that puts Python first with two level features:\r\n\r\n- Tensor computation (like numpy) with strong GPU acceleration.\r\n\r\n- Deep Neural Networks built on a tape-based autograd system.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. It uses dynamic graph creation, which enables more flexibility in computation.\r\n\r\n2. Extensions without pain: you can reuse your favorite python packages such as numpy, scipy and Cython to extend PyTorch when needed.\r\n\r\n3. Fast and Lean.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #826 from yeisonvargasf/master\n\nAdding Pytorch: deep learning framework that puts Python first."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8893a88c0a76e0a4edb5",
    "number": 825,
    "body": "Disclaimer: I'm the author of surprise ;)\r\n\r\n## What is this Python project?                                                \r\n                                                                                  \r\n                                                                                  \r\n[Surprise](http://surpriselib.com) is a Python [scikit](https://www.scipy.org/scikits.html) building and analysing recommender systems.\r\n                                                                                  \r\n**Main features**:\r\n                                                                                  \r\n- Give the user perfect control over his experiments. To this end, a strong  emphasis is laid on   [documentation](http://surprise.readthedocs.io/en/latest/index.html), which we  have tried to make as clear and precise as possible by pointing out every  details of the algorithms.\r\n- Alleviate the pain of [Dataset  handling](http://surprise.readthedocs.io/en/latest/getting_started.html#load-a-custom-dataset).   Users can use both *built-in* datasets\r\n  ([Movielens](http://grouplens.org/datasets/movielens/),  [Jester](http://eigentaste.berkeley.edu/dataset/)), and their own *custom*  datasets.\r\n- Provide various ready-to-use [prediction  algorithms](http://surprise.readthedocs.io/en/latest/prediction_algorithms_package.html)  such as [baseline  algorithms](http://surprise.readthedocs.io/en/latest/basic_algorithms.html),  [neighborhood  methods](http://surprise.readthedocs.io/en/latest/knn_inspired.html), matrix  factorization-based (  [SVD](http://surprise.readthedocs.io/en/latest/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVD),  [PMF](http://surprise.readthedocs.io/en/latest/matrix_factorization.html#unbiased-note),  [SVD++](http://surprise.readthedocs.io/en/latest/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.SVDpp),  [NMF](http://surprise.readthedocs.io/en/latest/matrix_factorization.html#surprise.prediction_algorithms.matrix_factorization.NMF)),  and [many  others](http://surprise.readthedocs.io/en/latest/prediction_algorithms_package.html).  Also, various [similarity \r\n  measures](http://surprise.readthedocs.io/en/latest/similarities.html)  (cosine, MSD, pearson...) are built-in.\r\n- Make it easy to implement [new algorithm  ideas](http://surprise.readthedocs.io/en/latest/building_custom_algo.html).\r\n- Provide tools to [evaluate](http://surprise.readthedocs.io/en/latest/evaluate.html),  [analyse](http://nbviewer.jupyter.org/github/NicolasHug/Surprise/tree/master/examples/notebooks/KNNBasic_analysis.ipynb/)  and  [compare](http://nbviewer.jupyter.org/github/NicolasHug/Surprise/blob/master/examples/notebooks/Compare.ipynb)  the algorithms performance. Cross-validation procedures can be run very  easily, as well as [exhaustive search over a set of  parameters](http://surprise.readthedocs.io/en/latest/getting_started.html#tune-algorithm-parameters-with-gridsearch).\r\n                                                                                  \r\n## What's the difference between this Python project and similar ones?            \r\n                                                                                  \r\n- According to any google search, [crab](https://muricoca.github.io/crab/) is the go-to package for RS. But it actually only has one prediction algorithm (k-NN), no evaluation tools, no doc, and has been dead for three years.\r\n- The second most popular package I think is [Recsys](https://github.com/ocelma/python-recsys). Provides with two prediction algorithms (k-NN and SVD) but is also unmaintained. Evaluation tools are very minimal.\r\n- There's [GraphLab](https://turi.com/), which is not free and needs license registration. I've heard good feedback about it, but never used it.\r\n- [LightFM](http://lyst.github.io/lightfm/docs/index.html). This package is focused on a specific set of algorithms (all Boolean-valued) and does not provide with other classical approaches.\r\n\r\nI think what makes [Surprise](http://surpriselib.com) is it's doc, the variety of prediction algorithms and the ability to evaluate the performances of algorithms easily (cross-validation, GridSearch, etc.). This makes it a useful tool to get your hands dirty quickly with recommender systems.                                 \r\n                                                                                  \r\n--                                                                                \r\n                                                                                  \r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #825 from NicolasHug/master\n\nAdd surprise"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8894a88c0a76e0a4edb6",
    "number": 824,
    "body": "## What is this Python project?\r\n\r\nCode with circular imports in python often raises an obscure Exception (ImportError: Cannot import name X) which tells nothing about the cycle.\r\n\r\nI have come across this problem several times, and depending on the project size it becomes problematic to identify where the problem is. This tool shows you the chain of the imports that are causing the problem, after that is up to developer to fix it e.g. move the imports to the bottom, or move the imports inside some function.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are none.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8895a88c0a76e0a4edb7",
    "number": 823,
    "body": "It appears pycrypto is no longer maintained and has known vulnerabilities, see:\r\ndlitz/pycrypto#176\r\ndlitz/pycrypto#173\r\n\r\nAppears that larger projects (paramiko, ansible, twisted) have moved over to PyCA's cryptography, which is already on the list.\r\n\r\n## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #823 from conradlink/master\n\nRemove pycrypto (vinta/awesome-python#819)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8896a88c0a76e0a4edb8",
    "number": 822,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8897a88c0a76e0a4edb9",
    "number": 817,
    "body": "because I am facing this issue and the solution is still not there, I think others might encounter that too.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8898a88c0a76e0a4edba",
    "number": 816,
    "body": "This amends #815 per https://circleci.com/integrations/bitbucket/ and other links on the site.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8898a88c0a76e0a4edbb",
    "number": 814,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #814 from robinxb/patch-1\n\nlogbook url change"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8899a88c0a76e0a4edbc",
    "number": 813,
    "body": "mutagen moved from Bitbucket (https://bitbucket.org/lazka/mutagen) to Github (https://github.com/quodlibet/mutagen)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #813 from zn/patch-1\n\nFix mutagen link to Github"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f889aa88c0a76e0a4edbd",
    "number": 811,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f889ba88c0a76e0a4edbe",
    "number": 810,
    "body": "## What is this Python project?\r\n\r\nhttps://github.com/r0x0r/pywebview\r\n\r\npywebview is a lightweight cross-platform wrapper around a webview component that allows to display HTML content in its own native GUI window. It gives you power of web technologies in your desktop application, eliminating the need of launching a web browser. Combined with a lightweight web framework like Flask, Bottle or web.py, you can create beautiful cross-platform HTML5 user interfaces targeting WebKit, while hiding implementation details from the end user.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nUnlike other GUI solutions for Python, pywebview is lightweight and has a very low learning curve. Furthermore, pywebview uses a native GUI toolkit for each platform eliminating the need of bundling a heavy GUI library with your program. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #810 from r0x0r/master\n\nAdd pywebview"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f889ba88c0a76e0a4edbf",
    "number": 809,
    "body": "## What is this Python project?\r\n\r\nuncompyle6 translates Python bytecode back into equivalent Python source code. It accepts bytecodes from Python version 2.1 to 3.6 or so, including PyPy bytecode and Dropbox’s Python 2.5 bytecode.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere were a number of decompyle, uncompile, uncompyle2, uncompyle3 forks around. All of them came basically from the same code base, and almost all of them no were no longer actively maintained. Only one handled Python 3, and even there, only 3.2 or 3.3 depending on which code is used. This code pulls these together and moves forward. It also addresses a number of open issues in the previous forks.\r\n\r\nWhat makes this different from other CPython bytecode decompilers?: its ability to deparse just fragments and give source-code information around a given bytecode offset.\r\n\r\nI use this to deparse fragments of code inside my trepan debuggers. For that, I need to record text fragments for all bytecode offsets (of interest). This purpose although largely compatible with the original intention is yet a little bit different. \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "uncompyle6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f889ca88c0a76e0a4edc0",
    "number": 808,
    "body": "A Python library for creating fast, repeatable and self-documenting data analysis pipelines.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f889da88c0a76e0a4edc1",
    "number": 805,
    "body": "Adding moto library as it's a great way to mock AWS boto requests.\r\n\r\n## What is this Python project?\r\n\r\nMock framework for AWS boto.\r\nXonsh shell - linux bash like shell with python mixed in.\r\n\r\n## What's the difference between this Python project and similar ones?\r\nThere aren't similar libraries on this list.\r\nThe other mocking tools that are on the list aren't focused on AWS.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f889ea88c0a76e0a4edc2",
    "number": 804,
    "body": "## What is this Python project?\r\nFlask-Ask \r\nFlask-Ask makes it easier and much more fun to rapidly build high-quality Alexa skills for Amazon Echo Devices.\r\n\r\nDescribe features.\r\nFlask-Ask:\r\nHas decorators to map Alexa requests and intent slots to view functions\r\nHelps construct ask and tell responses, reprompts and cards\r\nMakes session management easy\r\nAllows for the separation of code and speech through Jinja templates\r\nVerifies Alexa request signatures\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f889fa88c0a76e0a4edc3",
    "number": 802,
    "body": "only fix a broken link.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #802 from kiseok7/master\n\nfix a broken link."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f889fa88c0a76e0a4edc4",
    "number": 801,
    "body": "## What is this Python project?\r\n\r\nThemis provides high-level cryptosystems for socket protection, general asymmetric protection, symmetric container for various use-cases (length preserving encryption, auth-tagged encryption, encryption with additional context), zero-knowledge proof system for secure authentication.\r\n\r\nThemis works on ~10 platforms, originally a C library, with Python being one of first and most frequently used high-level interfaces to it.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThere are no directly similar ones, yet Themis provides high-level security services similar to LibSodium (apart from ZKP, which LibSodium does not aim to provide, focusing on novel takes on traditional auth schemes). However, Themis bases it on more classic cryptography and aims it's cryptosystems to be easilty integrateable into any workflows (various call models for interactive protocols, key-based ciphersuite choice, etc.). \r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a0a88c0a76e0a4edc5",
    "number": 800,
    "body": "Ajenti has changed its repo to https://github.com/ajenti/ajenti",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a1a88c0a76e0a4edc6",
    "number": 799,
    "body": "This commit adds the Pyjion implementation headed by the Microsoft team. Hope you add this one soon :+1:\r\n\r\n## What is this Python project?\r\n\r\nThis one is an attempt to speed up python, similar to the one by Numba team. \r\n\r\nThis effort is headed by the Microsoft team and is based on the CoreCLR framework.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nFrom the README\r\n\r\n```\r\nIs there a Python Enhancement Proposal (PEP) for this?\r\n\r\nWe have written a PEP, it was accepted by the Python development team, and will be implemented in Python 3.6.\r\n```\r\n\r\nSeems like a good idea to include what has already been accepted by the Python dev team.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #799 from abhi18av/patch-1\n\nUpdated the High Performance node"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a2a88c0a76e0a4edc7",
    "number": 798,
    "body": "## What is this Python project?\r\n\r\nvprof is a Python package providing rich and interactive visualizations for various Python program characteristics such as running time and memory usage. \r\n\r\n## What's the difference between this Python project and similar ones?\r\nvprof allows tracking various program characteristics in one easy-to-use package.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #798 from nvdv/patch-1\n\nAdd vprof to profilers section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a3a88c0a76e0a4edc8",
    "number": 797,
    "body": "## What is this Python project?\r\n\r\nAIEngine is a next generation interactive/programmable Python/Ruby/Java/Lua packet inspection engine with capabilities of learning without any human intervention, NIDS(Network Intrusion Detection System) functionality, DNS domain classification, network collector, network forensics and many others.\r\nAIEngine also helps network/security professionals to identify traffic and develop signatures for use them on NIDS, Firewalls, Traffic classifiers and so on\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSupports the following features:\r\n\r\n- Support for interacting/programing with the user while the engine is running (Embeded interpreter)\r\n- Support for PCRE JIT for regex matching.\r\n- Support for regex graphs (complex detection patterns).\r\n- Support five types of NetworkStacks (lan,mobile,lan6,virtual(VXLan) and oflow(OpenFlow)).\r\n- Support Sets and Bloom filters for IP searches.\r\n- Supports x86_64, ARM and MIPS architecture over operating systems such as Linux, FreeBSD and MacOS.\r\n- Support for HTTP,DNS and SSL Domains matching.\r\n- Support for banned domains and hosts for HTTP, DNS, SMTP and SSL.\r\n- Frequency analysis for unknown traffic and auto-regex generation.\r\n- Generation of Yara signatures.\r\n- Easy integration with databases (MySQL, Redis, Cassandra, Hadoop, etc...) for data correlation.\r\n- Easy integration with other packet engines (Netfilter).\r\n- Support memory clean caches for refresh stored memory information.\r\n- Support for detect DDoS at network/application layer.\r\n- Support for rejecting TCP/UDP connections.\r\n- Support for network forensics on real time.\r\n- Supports protocols such as Bitcoin,CoAP,DHCP,DNS,GPRS,GRE,HTTP,ICMPv4/ICMPv6,IMAP,IPv4/v6,Modbus, MPLS,MQTT,Netbios,NTP,OpenFlow,POP,Quic,RTP,SIP,SMTP,SSDP,SSL,TCP,UDP,VLAN,VXLAN.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a3a88c0a76e0a4edc9",
    "number": 796,
    "body": "## What is this Python project?\r\n\r\nKivEnt is a framework for building performant, dynamic real-time scenes in Kivy. While not as powerful as something like the Unreal engine or Unity3d, KivEnt is capable of creating games that handle several thousands to tens of thousands of entities, depending on what type of processing we are doing on them.\r\nKivEnt is built with a modular architecture and designed to have both a python api and a c-level cython api that allows more performant access to your game data.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "kivent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a4a88c0a76e0a4edca",
    "number": 795,
    "body": "## What is this Python project?\r\n\r\n[`ntfy`](https://github.com/dschep/ntfy) brings desktop & push notifications to your shell. It can send notifications immediately or wrap a command and send you a notification when it's done. It can even do so automatically!\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI don't know of any similar Python projects.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a5a88c0a76e0a4edcb",
    "number": 794,
    "body": "Template doesn't really make sense for this change...\r\n\r\nBoto3 is the current up to date version of boto. Despite what the name implies, it is also python 2.6 and 2.7 compatible.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #794 from dschep/patch-1\n\nSwitch boto to boto3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a6a88c0a76e0a4edcc",
    "number": 793,
    "body": "## What is this Python project?\r\n\r\nGoogle Material Design for Django Forms and Admin\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. Forms \r\n   - New way to render django forms\r\n   - Strong Python/HTML code separation\r\n   - Easy redefinition of particular fields rendering\r\n   - Complex form layout support\r\n2. Frontend\r\n  - Django Admin replacement build with django class-bases-views \r\n3. Admin\r\n   - Material-designed django admin\r\n\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a7a88c0a76e0a4edcd",
    "number": 792,
    "body": "## What is this Python project?\r\n\r\nThe most popular 3D creation package - and it comes with Python3 as Scripting language.\r\n\r\nIt supports the entirety of the 3D pipeline—modeling, rigging, animation, simulation, rendering, compositing and motion tracking, even video editing and game creation.\r\n\r\n* [blender docs](https://www.blender.org/manual/)\r\n* [python docs](https://www.blender.org/api/blender_python_api_2_78a_release/) \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nBlender covers all aspects of image/video/game creation and \r\nis the most complete open source package available in this area.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a7a88c0a76e0a4edce",
    "number": 791,
    "body": "## What is this Python project?\r\n\r\nMicroPython is a lean and efficient implementation of the Python 3 programming language that includes a small subset of the Python standard library and is optimised to run on microcontrollers and in constrained environments.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nno need for an OS, just use python\r\nnow also runs on the \r\n* [ESP8266 WiFi chip](https://www.kickstarter.com/projects/214379695/micropython-on-the-esp8266-beautifully-easy-iot)\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a8a88c0a76e0a4edcf",
    "number": 790,
    "body": "## What is this Python project?\r\n\r\nIt is the official Neo4j NoSQL GraphDB Driver which utilizes the binary Bolt Protocol instead of the Restful API\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOfficially supported by Neo Technologies, uses binary protocol (dubbed: Bolt) instead of REST API\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88a9a88c0a76e0a4edd0",
    "number": 788,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88aaa88c0a76e0a4edd1",
    "number": 787,
    "body": "## What is this Python project?\r\n\r\nWeb2py: Free open source full-stack framework for rapid development of fast, scalable, secure and portable database-driven web-based applications. \r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nhttp://www.web2py.com/examples/static/web2py_vs_others.pdf\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #787 from preactive/patch-1\n\nAdded Web2py to Web Frameworks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88aba88c0a76e0a4edd2",
    "number": 786,
    "body": "## What is this Python project?\r\n\r\nConfigure is a thin wrapper around PyYAML which extends already readable and powerful YAML with inheritance, composition and (so called) “object-graph configuration” features.\r\n\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n1. This package works with any of YAML, JSON or a mix of both formats\r\n2. It has inheritance, composition and object-graph refrences features\r\n3. Flexible configuration loading. Can be load from file, dictionary or string\r\n4. A separate method for logging configuration\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nThis package works with any of YAML, JSON or a mix of both formats",
    "head_branch": "svlasov-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88aba88c0a76e0a4edd3",
    "number": 784,
    "body": "Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88aca88c0a76e0a4edd4",
    "number": 783,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nUpdate",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88ada88c0a76e0a4edd5",
    "number": 782,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nUpdate",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88ada88c0a76e0a4edd6",
    "number": 781,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nUpdate",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88aea88c0a76e0a4edd7",
    "number": 780,
    "body": "## What is this Python project?\r\n\r\nLibrary for performing concurrent I/O and common system programming tasks\r\n\r\nHome page: [https://github.com/dabeaz/curio](https://github.com/dabeaz/curio)\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Python 3.5 or newer only\r\n- OS-like architecture\r\n- Simple and fast\r\n- Pure ```async/await```, no futures or callbacks\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nAdd link to curio",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88afa88c0a76e0a4edd8",
    "number": 779,
    "body": "## What is this Python project?\r\n\r\nThe goal of this project is to be independent from any other solution like IFTTT, CloudWork or others.\r\n\r\nThus you could host your own solution and manage your own triggers without depending on any non-free solution.\r\n\r\nWith this project you can host triggers for you.\r\n\r\nAll you need is to have a hosting provider (or simply your own server ;) ) who permits to use a manager of tasks like \"cron\" and, of course Python.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI couldn't spot a similar project.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "feature/th",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b0a88c0a76e0a4edd9",
    "number": 778,
    "body": "## What is this Python project?\r\n\r\nAirflow is a platform to programmatically author, schedule and monitor workflows.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nIt could be considered similar to Luigi, but it allows distributed tasks and it is not linked to specific technologies.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "feature/airflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b1a88c0a76e0a4edda",
    "number": 776,
    "body": "MOOCs are resources for methodology and domain specific python packages.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b1a88c0a76e0a4eddb",
    "number": 775,
    "body": "## What is this Python project?\r\n\r\nRows is a package to work with tabular data\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nRows works in a way that automatically recognize the file type without orientation, making very easy to work with the data\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b2a88c0a76e0a4eddc",
    "number": 774,
    "body": "## What is this Python project?\r\n\r\nI added more details about Talk Python To Me.\r\nAdded Python Bytes podcast, a new weekly podcast for Python devs.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOne is existing, the other is another podcast but the only weekly headlines one.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #774 from mikeckennedy/master\n\nAdded talk python twitter, and python bytes podcast"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b3a88c0a76e0a4eddd",
    "number": 773,
    "body": "## What is this Python project?\r\n\r\nSupports VS Code, Sublime, and Atom. **MagicPython has been included into the github/linguist, a library used by GitHub.com to process languages.**\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nThis project supports all major IDEs, and is **used by GitHub** for Python syntax highlighting.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #773 from rogersachan/patch-1\n\nAdds MagicPython"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b4a88c0a76e0a4edde",
    "number": 772,
    "body": "## What is this Python project?\r\n\r\nAdds Python support to VSCode\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nOnly available for VS Code and includes major features like debugging, unit tests, jupyter, and linting.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #772 from rogersachan/patch-1\n\nAdds Visual Studio Code Python extension"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b5a88c0a76e0a4eddf",
    "number": 771,
    "body": "Hi there,\r\nThis PR is related to PR https://github.com/vinta/awesome-python/pull/768.\r\nThis is a simple script to do the sorting stuff.\r\nThanks.\r\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #771 from hulk9914/patch-5\n\nUpdate sort.py to make the list \"alphabetically sorted\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b5a88c0a76e0a4ede0",
    "number": 770,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n\r\nAdd hybrid recommender system repo.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b6a88c0a76e0a4ede1",
    "number": 769,
    "body": "Append two graph database",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b7a88c0a76e0a4ede2",
    "number": 768,
    "body": "Hi guys,\r\nI noticed that blocks are not sorted alphabetically, and that's not user-friendly.\r\nso, I wrote a script to sort the list alphabetically and updated the README file directly, so please tell me if you want the sorting script to be merged to the existing sort.py file in a different PR or submit it this PR.\r\nthanks",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b8a88c0a76e0a4ede3",
    "number": 767,
    "body": "Autosub - Command-line utility for auto-generating subtitles for any video file.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b8a88c0a76e0a4ede4",
    "number": 766,
    "body": "## What is this Python project?\r\n\r\nSmall utility library for coroutine-driven, asynchronous-based concurrent generic programming in Python +3.4.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nI wasn't able to found other similar projects.\r\nThere are not too much asynchronous Python libraries out there.\r\n\r\npaco was selected by Python Weekly and PyCoders for the weekly email list on 10/27 and I've received positive feedback from multiple users in the past week.",
    "head_branch": "feat/add-paco",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88b9a88c0a76e0a4ede5",
    "number": 765,
    "body": "## What is this Python project?\r\n\r\nHprose is a very newbility RPC Library for Python 2 and 3, and it support 25+ languages now.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n* lightweight\r\n* cross-language\r\n* cross-platform\r\n* high performance\r\n* no dependence\r\n* standard WSGI app\r\n* no IDL\r\n* no code generation\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88baa88c0a76e0a4ede6",
    "number": 763,
    "body": "## What is this Python project?\r\n\r\nPDB++ is a drop-in replacement for [pdb](https://docs.python.org/2/library/pdb.html).\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n  * colorful TAB completion of Python expressions (through fancycompleter).\r\n  * optional syntax highlighting of code listings (through pygments).\r\n  * sticky mode.\r\n  * several new commands to be used from the interactive (Pdb++) prompt.\r\n  * smart command parsing (hint: have you ever typed r or c at the prompt to print the value of some variable?)\r\n  * additional convenience functions in the pdb module, to be used from your program.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88bba88c0a76e0a4ede7",
    "number": 762,
    "body": "## What is this Python project?\r\n\r\nDescribe features.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\nEnumerate comparisons.\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88bca88c0a76e0a4ede8",
    "number": 761,
    "body": "There were a few projects using en dashes for their descriptions instead of hyphens like everywhere else.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #761 from ericdwang/master\n\nFix minor en dash/hyphen inconsistencies"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88bca88c0a76e0a4ede9",
    "number": 760,
    "body": "## What is this Python project?\n\nFrom pyflakes readme.md:\n\"A simple program which checks Python source files for errors.\n\nPyflakes analyzes programs and detects various errors. It works by parsing the source file, not importing it, so it is safe to use on modules with side effects. It's also much faster.\"\n## What's the difference between this Python project and similar ones?\n\nPyflakes is much faster than other linters since it doesn't complain about style. Rather, it focuses on only important issues.\n\nAs said in pyflakes documentation, \"Pyflakes only examines the syntax tree of each file individually. As a consequence, Pyflakes is more limited in the types of things it can check.\"\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n\nPyflakes is much faster than other linters since it doesn't complain about style. Rather, it focuses on only important issues.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88bda88c0a76e0a4edea",
    "number": 759,
    "body": "# What is this Python project?\n\nAn easy-to-use Python library for displaying Windows 10 Toast Notifications which is useful for windows GUI development.\n\n![o7ja4 1](https://cloud.githubusercontent.com/assets/7101452/19763806/75f71ba4-9c5d-11e6-9f16-d0d4bf43e63e.png)\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "jithurjacob-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88bea88c0a76e0a4edeb",
    "number": 758,
    "body": "## What is this Python project?\n\nDescribe features.\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88bfa88c0a76e0a4edec",
    "number": 757,
    "body": "## What is this Python project?\n- CFFI/native-C bindings for ultra-fast OpenLDAP's LMDB.\n- memory mapped B-tree\n- Works on pretty much all versions of python\n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c0a88c0a76e0a4eded",
    "number": 756,
    "body": "# What is this Python project?\n\nOdoo (formerly known as OpenERP and before that, TinyERP) is a suite of enterprise management applications. Targeting companies of all sizes, the application suite includes billing, accounting, manufacturing, purchasing, warehouse management, and project management.\nOdoo uses Python scripting and Postgres database. A development repo is on [GitHub](https://github.com/odoo/odoo)\n# What makes Odoo different?\n\nA smooth and friendly user's experience that has been built to ensure the user seamless adoption.\n\nFluidity and full integration cover the needs of even the most complex companies. The flexibility of Odoo is such that apps can be added according to the growth of your company, adding one app at a time as your needs evolve and your customer base grows.\n\nThanks to the open source community, Odoo is actively maintained by a large base of developers to meet evolving customer needs and provide new, innovative applications. \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach 20.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c1a88c0a76e0a4edee",
    "number": 755,
    "body": "**expynent** is a tinny library that provides RegEx patterns. This can be useful if you don't want to write regular expression manually.\r\n#### Usage\r\n\r\nJust import the pattern that you want:\r\n\r\n``` python\r\nimport re\r\nimport expynent.patterns as expas\r\n\r\nif re.match(expas.ZIP_CODE['RU'], '43134'):\r\n    print('match')\r\nelse:\r\n    print('not match')\r\n\r\n# Output: 'not match'\r\n\r\n```\r\n\r\nalso you can use compiled patterns:\r\n\r\n``` python\r\nfrom expynent.compiled import username\r\n\r\nu = input('Enter username: ')\r\n\r\nif username.match(u):\r\n    print('valid')\r\nelse:\r\n    print('invalid')\r\n```\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c1a88c0a76e0a4edef",
    "number": 754,
    "body": "\"Psyco\" and \"Unladen Swallow\" not added, because seemed deprecated\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #754 from fkromer/master\n\nadd: implementations of python"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c2a88c0a76e0a4edf0",
    "number": 753,
    "body": "## What is this Python project?\n\nDescribe features.\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #753 from ctolib/patch-1\n\nUpdate README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c3a88c0a76e0a4edf1",
    "number": 752,
    "body": "Proposing to update the pagan description, the previous version had grammar issues. Focusing on the functionality rather than the name now.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #752 from daboth/patch-1\n\nUpdating pagan description"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c4a88c0a76e0a4edf2",
    "number": 751,
    "body": "## What is this Python project?\n\nThis package provides geo data from [GeoNames](http://www.geonames.org/) loaded from local files. The [package is on pypi](https://pypi.python.org/pypi/geonamescache) and can be installed using pip.\n## What's the difference between this Python project and similar ones?\n\nNo external HTTP requests, only file io for quick access to data such as country information including iso codes, city data for cities with a population greater than 15000, as well as US states and counties including FIPS codes.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n\nHope you appreciate this suggestion. In any case thanks for this awesome list.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c5a88c0a76e0a4edf3",
    "number": 750,
    "body": "## What is this Python project?\n\nAutomatron is an open source framework designed to detect and remediate IT systems issues. Meaning, it can be used to monitor systems and when it detects issues; correct them.\n\nFeatures:\n- Automatically detect and add new systems to monitor\n- Monitoring is executed over SSH and completely agent-less\n- Policy based Runbooks allow for monitoring policies rather than server specific configurations\n- Supports Nagios compliant health check scripts\n- Allows arbitrary shell commands for both checks and actions\n- Runbook flexibility with Jinja2 templating support\n- Pluggable Architecture that simplifies customization\n## What's the difference between this Python project and similar ones?\n\nThere are a few other projects that are focused on Automated Remediation but as far as I know none of those support using existing Nagios checks. Another important thing with Automatron is the ability to use Jinja and Runbooks to configure monitoring in a similar way you would use Salt or Ansible. A policy based approach that is very customizable.\n\nThe biggest difference in Automatron is that it's not designed to show you errors from a GUI, it's designed to give you the tools to correct the error. Hands free without notifying someone first.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c5a88c0a76e0a4edf4",
    "number": 749,
    "body": "## What is this Python project?\n\nNinja-IDE is a cross-platform integrated development environment (IDE) that allows developers to create applications for any purpose making the task of writing software easier and more enjoyable. It's also a secret ninja agency but this doesn't matter right now.\n## What's the difference between this Python project and similar ones?\n\nBasically we want to explore and find new features that would improve the performance of any Python Developer, always maintaining Ninja-IDE fast and lightweight for anyone to use it, and compete with the current commercial IDEs out there, and when we say \"compete\" we mean: to demonstrate that you can have a beautiful application with the most popular features, plus the ones that the ninja-team researches and implements, without the need to pay for any license or use a product where you can't play with the source code.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c6a88c0a76e0a4edf5",
    "number": 748,
    "body": "This only fixes a minor typo, as \"poweres\" is not a word.\n",
    "head_branch": "typo-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #748 from krmaxwell/typo-fix\n\nFix minor typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c7a88c0a76e0a4edf6",
    "number": 747,
    "body": "## What is this Python project?\n\nSanic is a Flask-like Python 3.5+ web server that's written to go fast. It's based off the work done by the amazing folks at magicstack, and was inspired by this article: https://magic.io/blog/uvloop-blazing-fast-python-networking/.\n## What's the difference between this Python project and similar ones?\n\nBenchmarks. It looks like it runs blazingly faster than competition.  :zap:\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "add-sanic-web-server",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #747 from mfin/add-sanic-web-server\n\nadd Sanic web server"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c8a88c0a76e0a4edf7",
    "number": 746,
    "body": "## What is this Python project?\n\nAn easy-to-use Python library for accessing the Twitter API\n## What's the difference between this Python project and similar ones?\n\nSupports oauth, streaming, cursors, as good as Twython.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "add-tweepy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c9a88c0a76e0a4edf8",
    "number": 744,
    "body": "## What is this Python project?\n\nKeras is a neural networks library which acts like a wrapper, enabling developers to write code which can run on top of either Tensorflow or Theano (using them as backend)\n## What's the difference between this Python project and similar ones?\n\nTheano makes the construction of a neural network much easier and portable. A piece of code written another library requires setting-up the same library on another machine. Howeevr, the same piece of code which ultimately uses Tensorflow on one machine, can run on another machine while using Theano.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #744 from iamgroot42/master\n\nAdding Keras."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88c9a88c0a76e0a4edf9",
    "number": 743,
    "body": "Just a fix for warehouse url. Now it is on own domain name: https://pypi.org\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "pypi_url_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #743 from amureki/pypi_url_fix\n\nFixed pypi url (warehouse)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88caa88c0a76e0a4edfa",
    "number": 741,
    "body": "## What is this Python project?\n\nsched is a module in the standard lib that implements a general purpose event scheduler.\n## What's the difference between this Python project and similar ones?\n\nI think that it would be great to let people know about an already baked in module for event or job scheduling in python before recommending 3rd party libraries. At least especially when starting out.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n\nThe sched module is a part of the standard library and not many people\nmay know about it.\n",
    "head_branch": "adding-standard-lib-sched",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88cba88c0a76e0a4edfb",
    "number": 740,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88cca88c0a76e0a4edfc",
    "number": 739,
    "body": "## What is this Python project?\n\nCryptography library for Python\n## What's the difference between this Python project and similar ones?\n\nPython SWIG bindings of OpenSSL.\nStandard crypto algorithms. \n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88cca88c0a76e0a4edfd",
    "number": 738,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88cda88c0a76e0a4edfe",
    "number": 736,
    "body": "## What is this Python project?\n\nA simple,fast,extensible python library for data validation.\n- Simple and readable schema\n- 20%~40% speed compare with json.loads\n- Can serialize any object\n- Easy to create custom validators\n- Accurate error messages, include reason and position\n## What's the difference between this Python project and similar ones?\n- More simple and readable schema than jsonschema and schema\n- Can serialize any object, like schematics\n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88cea88c0a76e0a4edff",
    "number": 735,
    "body": "## What is this Python project?\n\nDescribe features.\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n\nUpdate\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88cfa88c0a76e0a4ee00",
    "number": 734,
    "body": "First off thank you for maintaining this list! It's one of the best references around for all things Python.\n\nHere is a small PR to add the [awesome-wagtail](https://github.com/springload/awesome-wagtail) list underneath the \"Wagtail\" entry. The list is quite new (2 months old), but already helpful to the Wagtail community.\n\nCheers,\n\nThibaud\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88cfa88c0a76e0a4ee01",
    "number": 733,
    "body": "## What is this Python project?\n## What's the difference between this Python project and similar ones?\n\nRemember those good old days when your own imagination was a big part of the computer gaming experience? All the limitations of the hardware forced you to fill the void left by poorly pixelated images by yourself. Well, pagan tries to give back some of those nostalgic feelings by providing identicons in an oldschool look that are inspired from retro roleplaying adventure games.\n\nEach string input will be hashed and generates a unique avatar image. The purpose of pagan is to use it for generating a user image in any web application. It is is meant to replace default user images when creating new accounts or to enhance comment sections, e.g. visualizing the authors ip address or username.\n\n![](https://raw.githubusercontent.com/daboth/pagan/master/images/pagan.png)\n![](https://raw.githubusercontent.com/daboth/pagan/master/images/python.png)\n![](https://raw.githubusercontent.com/daboth/pagan/master/images/retro.png)\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #733 from lk-geimfari/patch-2\n\nAdded 'pagan' to Imagery"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d0a88c0a76e0a4ee02",
    "number": 731,
    "body": "## What is this Python project?\n\nSimPy is a pure Python and mature framework for building models of discrete-event dynamical systems. The list of useful examples could be found [here](https://simpy.readthedocs.io/en/latest/examples/index.html). \n## What's the difference between this Python project and similar ones?\n\nIt seems to be the best (mature, easy-to-use and well-documented) tool for discrete dynamical system modelling... I cann't imagine why it isn't listed here?!\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d1a88c0a76e0a4ee03",
    "number": 730,
    "body": "`Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.`\n\nI reordered the contents menu to alphabetical order because I think this will make it easier for people to look for things they want (also easier just to eyeball)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d2a88c0a76e0a4ee04",
    "number": 729,
    "body": "## What is this Python project?\n\nThe Minio Python Client SDK provides simple APIs to access any Amazon S3 compatible object storage server.\n## What's the difference between this Python project and similar ones?\n\nIt is simple, lightweight and does one thing perfectly.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n\nStorage.\n",
    "head_branch": "001",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d3a88c0a76e0a4ee05",
    "number": 728,
    "body": "Added several interesting projects related to data analysis and machine learning, which I used or tested lately and which were missing from the list (remove them if them exist in late contributions, or move to other sections, if necessary):\n\nSeaborn - data visualization library;\nKeras - deep learning library for ANN;\nRapydTk - Tk GUI builder tool. Haven't used it, but there aren't many similar tools, so I included it\nbcolz - a young project but interesting for big data in-memory storage and analysis\nparatext - a library for reading text files over multiple cores\ncaravel - AirBnB's data exploration platform written in Python\nbrew - ensemble learning methods in Python\nFukuML-  simple machine learning library, with focus on kernel methods\njubakit - Python bindings for a Jubatus distributed online machine learning framework\nXGBoost - implementation of scalable, portable and distributed gradient boosting algorithm; considering its relevance, just ask any Kaggler :)\nPyGMO - evolutionary computing for Python (might be moved to scientific computing section as well)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d3a88c0a76e0a4ee06",
    "number": 727,
    "body": "## What is this Python project?\n\nA more advanced regular expression engine. \n## What's the difference between this Python project and similar ones?\n\nBesides fully compatible with re in standard library, the new regular expression engine adds many more regular expression features previously only supported by implementations of other languages.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d4a88c0a76e0a4ee07",
    "number": 726,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #726 from ypyf/master\n\nfix typo in README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d5a88c0a76e0a4ee08",
    "number": 725,
    "body": "## What is this Python project?\n\nPyPattyrn is a python package aiming to make it easier and faster to implement design patterns into your own projects. Containing over 15 of the most common design patterns, you no longer have to write the same boilerplate code between all your projects when you wish to use a design pattern. This package captures that boilerplate code and makes it easy to use.\n\nExample:\n\n``` python\nfrom pypattyrn.creational.singleton import Singleton\n\nclass DummyClass(object, metaclass=Singleton):\n    ... \n```\n\nDummyClass is now a Singleton. \n## What's the difference between this Python project and similar ones?\n\nEvery other design pattern repo I've found simply provides examples for how to implement design patterns in python. PyPattyrn is something you would actually import into your project to speed up development process because the boilerplate code necessary for the design pattern is already written and provided for you by the package. I have not found another package that does the same thing.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #725 from tylerlaberge/master\n\nadded PyPattyrn to design patterns section."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d6a88c0a76e0a4ee09",
    "number": 724,
    "body": "## What is this Python project?\n\nDescribe features.\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d6a88c0a76e0a4ee0a",
    "number": 723,
    "body": "## What is this Python project?\n\n[Church](https://github.com/lk-geimfari/church) is a Python library that help you generate fake data. It's very useful if you need bootstrap your database.\n## What's the difference between this Python project and similar ones?\n\nNo requirements, no dependencies. Big database with fake data.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #723 from lk-geimfari/patch-1\n\nAdded \"church\" to Testing[voices reached 20]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d7a88c0a76e0a4ee0b",
    "number": 722,
    "body": "## What is this Python project?\n\nWeasyPrint is a visual rendering engine for HTML and CSS that can export to PDF. It aims to support web standards for printing.\n## What's the difference between this Python project and similar ones?\n\n`xhtml2pdf` is now deprecated. I made this PR to keep things up-to-date.\nThis PR is a result of conversation appeared in #680.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #722 from nilfalse/master\n\nxhtml2pdf is officially deprecated in favor of WeasyPrint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d8a88c0a76e0a4ee0c",
    "number": 721,
    "body": "## What is this Python project?\n\n[Clastic](https://github.com/mahmoud/clastic) is a wonderful WSGI web server which embodies the principle \"explicit is better than implicit\" by eliminating the global state which complicates most web servers.\n\nYou can read more about how larger companies like PayPal use this tool [here](https://www.paypal-engineering.com/2015/03/17/introducing-support/).\n## What's the difference between this Python project and similar ones?\n- Better URL route checking.\n- Better control of how the app initializes, e.g. ability to force middleware to load so even the first request is fast.\n- No global state. Explicit is better than implicit.\n- Lightweight. Lots of web servers try to solve every possible problem. This one keeps it simple.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88d9a88c0a76e0a4ee0d",
    "number": 720,
    "body": "## What is this Python project?\r\n\r\nA library that adds auto-update functionality to a PyInstaller compiled app.\r\n## What's the difference between this Python project and similar ones?\r\n\r\nSo far PyUpdater is the only library that supports PyInstaller\r\n## \r\n\r\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\r\n\r\nEnables a PyInstaller compiled app to auto update itself with very minimal work from the developer.\r\n\r\n[PyUpdater Docs](https://www.pyupdater.org)",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88daa88c0a76e0a4ee0e",
    "number": 719,
    "body": "Append a database for lazy people.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #719 from yanchick/master\n\nAdd dataset database."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88daa88c0a76e0a4ee0f",
    "number": 718,
    "body": "## What is this Python project?\n\nFlast-restplus \n## What's the difference between this Python project and similar ones?\n\nIts like flask-restful but it provides swagger docs and isn't tied to an ORM\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88dba88c0a76e0a4ee10",
    "number": 717,
    "body": "## What is this Python project?\n\nnetaddr\n\n```\nThis is a really handy module that I have used several times over the past few years. It simplifies\nipv4/ipv6 address manipulation in addition to other things like subnet calculations etc.\n```\n\npyodbc\n\n```\nThis is a very handy module that simplifies a variety of database connections/interactions\n over ODBC.  It implements the PEP 249 Python Database API Specification.\n```\n## What's the difference between this Python project and similar ones?\n\nEnumerate comparisons.\n\nnetaddr\n\n```\nRight now there isn't any library listed that simplify IP address manipulation.  I've used this library\nto determine if the http requests have come from Gmail proxy servers when adding linked images\nin email messages (HTML).\n```\n\npyodbc\n\n```\nMany of the database modules are specific to a certain technology.  Pyodbc works with a variety\nof database technologies via different ODBC drivers.  I have used it for SQL Server, and MySQL in\nthe past.\n```\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88dca88c0a76e0a4ee11",
    "number": 716,
    "body": "## What is this Python project?\n\nA tiny tool to create standard python project, especially Falcon and Flask\n## What's the difference between this Python project and similar ones?\n\nActually I didn't see any kind of tool to do the same thing, so I create this project. Inspired by `Pastescript`, I use the feature of template to create a standard WSGI project and add some DevOp features to easily deploy your project.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88dda88c0a76e0a4ee12",
    "number": 713,
    "body": "## What is this Python project?\n\nSeaborn is a Python visualization library based on matplotlib. It provides a high-level interface for drawing attractive statistical graphics.\n## What's the difference between this Python project and similar ones?\n- Several built-in themes that improve on the default matplotlib aesthetics\n- Tools for choosing color palettes to make beautiful plots that reveal patterns in your data\n- Functions for visualizing univariate and bivariate distributions or for comparing them between subsets of data\n- Tools that fit and visualize linear regression models for different kinds of independent and dependent variables\n- Functions that visualize matrices of data and use clustering algorithms to discover structure in those matrices\n- A function to plot statistical timeseries data with flexible estimation and representation of uncertainty around the estimate\n- High-level abstractions for structuring grids of plots that let you easily build complex visualizations\n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #713 from sojin/master\n\nAdd seaborn"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88dea88c0a76e0a4ee13",
    "number": 712,
    "body": "Mention that it is pure Python.\n\n---\n\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n",
    "head_branch": "tinydb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88dea88c0a76e0a4ee14",
    "number": 711,
    "body": "---\n\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n",
    "head_branch": "reorganize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88dfa88c0a76e0a4ee15",
    "number": 710,
    "body": "---\n\n README.md | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n",
    "head_branch": "geo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e0a88c0a76e0a4ee16",
    "number": 709,
    "body": "Envelopes deals with outgoing mails.\n\n---\n\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n",
    "head_branch": "email",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e1a88c0a76e0a4ee17",
    "number": 708,
    "body": "Beaker supports session caching, while dogpile.cache not.\n\n---\n\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n",
    "head_branch": "dogpile.cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e2a88c0a76e0a4ee18",
    "number": 707,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e2a88c0a76e0a4ee19",
    "number": 704,
    "body": "## What is this Python project?\n\nInjector is a dependency injection framework for Python. \n## What's the difference between this Python project and similar ones?\n- Injector is maintained unlike most of the other DI framework for Python\n- Provides scopes (e.g. `@singleton`) which restrict the lifetime of your dependencies. You can also implement your own scopes, suitable for your problem.\n- Easy to configure, and has several ways of providing dependencies, so you can choose the most suitable one for your problem\n- Exploits Python 3 type annotations which makes injection syntax natural and removes a lot of boilerplate, you just have to annotate the constructor\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "kmaster",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e3a88c0a76e0a4ee1a",
    "number": 703,
    "body": "## What is this Python project?\n\nRepository management and code collaboration platform for Git, SVN, and Mercurial.\n## What's the difference between this Python project and similar ones?\n\nRhodeCode uses [Pyramid Web Framework](https://trypyramid.com/) and has no performance issues handling large code repositories. RhodeCode allows for _unified_ user management since it supports multiple version control systems.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e4a88c0a76e0a4ee1b",
    "number": 702,
    "body": "Fixed link for the Faker library\n\nCloses https://github.com/vinta/awesome-python/issues/700\n",
    "head_branch": "linkfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #702 from swrj/linkfix\n\nReadme: Fix link for faker"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e5a88c0a76e0a4ee1c",
    "number": 701,
    "body": "Added three schema migration tools to a \"database migration\" section.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e5a88c0a76e0a4ee1d",
    "number": 699,
    "body": "## What is this Python project?\n- A very easy library to automate Windows GUI.\n- Comes with a tool called [SWAPY](https://github.com/pywinauto/SWAPY) to find GUI objects to automate (and generate some pywinauto code).\n## Why this framework/library/software/resource is awesome?\n\nVery easy to automate with, therefore coding the automation process is made quicker.\nSWAPY makes it even easier.\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "pywinauto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e6a88c0a76e0a4ee1e",
    "number": 698,
    "body": "[Fakeredis](https://github.com/jamesls/fakeredis) makes it easy to unit test any project using the Redis client [redis-py](https://github.com/andymccurdy/redis-py), it simulates interacting with a Redis server so you don't have to manually mock calls and return values.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e7a88c0a76e0a4ee1f",
    "number": 697,
    "body": "## What is this Python project?\n\nTop layer to make authentication, resource ownership and permission management fast, simple and easy. In summary, Ziggurat Foundations is a set of framework agnostic set of sqlalchemy classes that help working with users,groups, permissions and resources together.\n\nZF has been used for very large implementations (millions of real users) and has been extended for custom applications such as geo-location applications that rely on pin-point accuracy for a users location. Zigg has been designed to work for high end environments, where the user(s) are at the main focus of the application (for example ZF could become the backbone for a social media style application).\n## What's the difference between this Python project and similar ones?\n\nThere are no maintained cross-framework solutions based on sqlalchemy that solve this problem with mixins.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e8a88c0a76e0a4ee20",
    "number": 696,
    "body": "## Why this framework/library/software/resource is awesome?\n\nPendulum aims at making Python datetimes easy. It fixes the flaw of the existing libraries (especially Arrow) while providing a more explicit API. Here are some examples:\n\n``` python\nimport pendulum\n\nnow = pendulum.now('Europe/Paris')\n\n# Changing timezone\nnow.in_timezone('America/Toronto')\n\n# Default support for common datetime formats\nnow.to_iso8601_string()\n\n# Shifting time\nnow.add(days=2)\n```\n\nIt improves the native `timedelta` type:\n\n```\nit = pendulum.interval(days=15)\n\n# More properties\nit.weeks\nit.hours\n\n# Handy methods\nit.in_hours()\n360\nit.in_words(locale='en_us')\n'2 weeks 1 day'\n```\n\nIt brings its own `Period` class, which is a datetime-ware `timedelta`:\n\n``` python\ndt1 = pendulum.now()\ndt2 = dt1.add(days=3)\n\n# A period is the difference between 2 instances\nperiod = dt2 - dt1\n\nperiod.in_weekdays()\nperiod.in_weekend_days()\n\n# A period is iterable\nfor dt in period:\n    print(dt)\n```\n\nAnd finally, it improves timezones manipulation by handling normalization properly and shifting time around DST transition time:\n\n``` python\nimport pendulum\n\npendulum.create(2013, 3, 31, 2, 30, 0, 0, 'Europe/Paris')\n#2:30 for the 31th of March 2013 does not exist\n# so pendulum will return the actual time which is 3:30+02:00\n'2013-03-31T03:30:00+02:00'\n\nin_utc = pendulum.create(2013, 3, 31, 0, 59, 59, 999999)\ntz = pendulum.timezone('Europe/Paris')\nin_paris = tz.convert(in_utc)\n'2013-03-31T01:59:59.999999+01:00'\n\n# Shifting time\nin_paris = in_paris.add(microseconds=1)\n'2013-03-31T03:00:00+02:00'\nin_paris.subtract(microseconds=1)\n'2013-03-31T01:59:59.999999+01:00'\n```\n\nFor the rest you can check out the official documentation: https://pendulum.eustace.io/docs/\n## \n\nAnyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.\n",
    "head_branch": "add-pendulum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #696 from sdispater/add-pendulum\n\nAdd Pendulum to Date and Time libraries"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e9a88c0a76e0a4ee21",
    "number": 695,
    "body": "## Why this framework/library/software/resource is awesome?\n\nMakes spinning up a microservice in aws lambda practically feel native. Handles the creation of aws api gateways better than any of the serverless frameworks I've used previously. Feels just like Flask.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "task/adding-chalice",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88e9a88c0a76e0a4ee22",
    "number": 694,
    "body": "## Why this framework/library/software/resource is awesome?\n\nNAPALM (Network Automation and Programmability Abstraction Layer with Multivendor support) is a Python library that implements a set of functions to interact with different router vendor devices using a unified API. \n\nMore at: https://github.com/napalm-automation/napalm\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "CF-ADD-NAPALM",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #694 from mirceaulinic/CF-ADD-NAPALM\n\nAdding NAPALM"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88eaa88c0a76e0a4ee23",
    "number": 693,
    "body": "## Why this framework/library/software/resource is awesome?\n\nObjectPath is an advanced query language for JSON and Python's nested structures based on Lists and Dicts. It's used by thousands of Python programmers and helps scientists in understanding and transforming complex data.\n\nMore at http://objectpath.org/\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88eba88c0a76e0a4ee24",
    "number": 692,
    "body": "## Why this framework/library/software/resource is awesome?\n\nDjango module to easily send emails/push/sms/tts using django templates stored on database.\nFrom box you can use it with django-celery for send background messages.\nAlso you have opportunity to create reports from logs by mail categories and slug.\nGroups with Recipients and send by model signal also available by default.\nCan be used without any depends from programming language as a external service.\nThat app very simple to install and use on your projects.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "dbmail",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88eca88c0a76e0a4ee25",
    "number": 691,
    "body": "## Why this framework/library/software/resource is awesome?\n\nMatterBot - A chat bot for MatterMost (http://www.mattermost.org). \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88eda88c0a76e0a4ee26",
    "number": 690,
    "body": "Added a reference to Pluralsight's Python courses.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88eda88c0a76e0a4ee27",
    "number": 689,
    "body": "This PR replaces the https://coolgithubprojects.com website (which doesn't appear to exist anymore) with a fairly active subreddit that isn't just a mirror of the trending page.\nIt also has language specific views of projects that people submit; so if you are only interested in python projects you can easily filter projects in other languages out.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #689 from Oliver2213/master\n\nReplace broken Cool github projects link with subreddit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88eea88c0a76e0a4ee28",
    "number": 688,
    "body": "## Why this framework/library/software/resource is awesome?\n\nReally handy tool to run your scripts in virtual envs or to try a new library\n## Vote for this pull request\n\n@facundobatista\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88efa88c0a76e0a4ee29",
    "number": 687,
    "body": "## Why this framework/library/software/resource is awesome?\n\nRethinkDB is the first open-source, scalable JSON database built from the ground up for the realtime web. It inverts the traditional database architecture by exposing an exciting new access model – instead of polling for changes, the developer can tell RethinkDB to continuously push updated query results to applications in realtime. RethinkDB’s realtime push architecture dramatically reduces the time and effort necessary to build scalable realtime apps.\n\nI don't see any reason why this shouldn't be on the list.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f0a88c0a76e0a4ee2a",
    "number": 686,
    "body": "## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nAdded PythonVSCode to \"Plugins for editors and IDEs\"\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f0a88c0a76e0a4ee2b",
    "number": 685,
    "body": "fix 404 \n",
    "head_branch": "404",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #685 from zhulongcheng/404\n\nFix a link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f2a88c0a76e0a4ee2c",
    "number": 684,
    "body": "## Why this framework/library/software/resource is awesome?\n\n[Awesome] imbalanced-learn is part of [scikit-learn-contrib](https://github.com/scikit-learn-contrib), fully compatible with scikit-learn, and provides several techniques for handling imbalanced data, including under sampling, over sampling, and ensembling.\n\nOn the (github page)[https://github.com/scikit-learn-contrib/imbalanced-learn] it has (to this date):\n- 359 Stargazers\n- 125 Forks\n- 30 Watchers\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "imblearn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f2a88c0a76e0a4ee2d",
    "number": 683,
    "body": "## Why this framework/library/software/resource is awesome?\n\nConnexion is awesome because it's a free and open-source framework on top of Flask that automagically handles HTTP requests based on OpenAPI 2.0 Specification (formerly known as Swagger Spec) of your API described in YAML format. Connexion allows you to write a Swagger specification, then maps the endpoints to your Python functions; this makes it unique, as many tools generate the specification based on your Python code. It has 262 stars and 28 contributors as of this writing, and the creator of the Swagger spec has talked about it at at least one conference. \nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f3a88c0a76e0a4ee2e",
    "number": 682,
    "body": "## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nExpAn is awesome because it's a free and open-source A/B testing tool used in production by data scientists. It can be useful to data scientists working in companies or academia.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f4a88c0a76e0a4ee2f",
    "number": 681,
    "body": "## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f5a88c0a76e0a4ee30",
    "number": 679,
    "body": "## Why this framework/library/software/resource is awesome?\n\n[pymorphy2](https://github.com/kmike/pymorphy2) is a morphological analyzer and generator for\nRussian and Ukrainian languages. It uses large efficiently encoded lexicons\nbuilt from OpenCorpora and LanguageTool data. A set of linguistically\nmotivated rules is developed to enable morphological analysis and\ngeneration of out-of-vocabulary words observed in real-world documents.\nFor Russian pymorphy2 provides state-of-the-arts morphological analysis\nquality. The analyzer is implemented in Python programming language\nwith optional C++ extensions. Emphasis is put on ease of use, documentation\nand extensibility. The package is distributed under a permissive\nopen-source license, encouraging its use in both academic and commercial\nsetting.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nMorphological analyzer / inflection engine for Russian and Ukrainian languages\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f5a88c0a76e0a4ee31",
    "number": 678,
    "body": "## Why this framework/library/software/resource is awesome?\n\nUltra is fast implementation of asyncio event loop on top of libuv.\n\nhttp://magic.io/blog/uvloop-blazing-fast-python-networking/\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nUltra fast implementation of asyncio event loop on top of libuv.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #678 from xiaopeng163/master\n\nadd uvloop the fast implementation of asyncio event loop on top of libuv."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f6a88c0a76e0a4ee32",
    "number": 677,
    "body": "## Why this framework/library/software/resource is awesome?\n\nMahotas is a library of fast computer vision algorithms (all implemented in C++) operates over numpy arrays for convenience. Since, it operates over numpy array, it is very useful in implementing in Machine Learning framework like SciKit Learn.\n## Vote for this pull request\n\n+1\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f7a88c0a76e0a4ee33",
    "number": 676,
    "body": "## Why this framework/library/software/resource is awesome?\n### Pyan:\n\nThis library is one of the first call-graph tools and is still maintained. More information:\nhttp://stackoverflow.com/a/34905687\n\nA few sentences describing the reason.\n\nDescriptions by author:\n1) https://ejrh.wordpress.com/2011/12/23/call-graphs-in-python/\n2) https://ejrh.wordpress.com/2012/01/31/call-graphs-in-python-part-2/\n3) https://ejrh.wordpress.com/2012/08/18/coloured-call-graphs/\nImprovements:\n1) https://yousource.it.jyu.fi/jjrandom2/miniprojects/trees/master/refactoring\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/vinta/awesome-python/676)\n\n<!-- Reviewable:end -->\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f8a88c0a76e0a4ee34",
    "number": 675,
    "body": "## Why this framework/library/software/resource is awesome?\n- This is programmable zipcode database support very advanced filter, sort: http://pythonhosted.org/uszipcode/index.html#advance-search\n- It provides fuzzy city, state name search: http://pythonhosted.org/uszipcode/index.html#search-by-city-and-state\n- Up-to-date dataset, merged from google geocoding, census, federal government, rich properties are available. http://pythonhosted.org/uszipcode/index.html#welcome-to-uszipcode-documentation\n- Other zipcode library in Python `zipcode`, `pyzipcode` is either hard to use and low quality data.\n## Vote for this pull request\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f9a88c0a76e0a4ee35",
    "number": 674,
    "body": "## Why this framework/library/software/resource is awesome?\n\nAn OpenStack project that injects some useful and sensible default behaviors into your setuptools run.\n\nThe name (_Python Build Reasonableness_) describes it well. It makes your setuptools config declarative, manages versioning via git tags, generates AUTHORS and CHANGELOG files from git log, picks up requirements.txt as dependencies, [etc](http://docs.openstack.org/developer/pbr/#what-it-does).\nVery useful as a one-stop solution to packaging-related things; an alternative to combining multiple other projects (such as `setuptools_scm` + sh scripts interfacing with git + ...).\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88f9a88c0a76e0a4ee36",
    "number": 673,
    "body": "Ultimate Python snippet solution for Vim\n",
    "head_branch": "patches",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88faa88c0a76e0a4ee37",
    "number": 672,
    "body": "## Why this framework/library/software/resource is awesome?\n\nA library that simplifies the extraction of datasets from XML content.\n\nXML is a simple markup format. Whilst simple, extracting data of interest is often more complicated than it needs to be.\n\nxmldataset addresses this through an easy to use plaintext declaration that follows the structure of the XML document. The declaration is indented, matching the XML structure, the data we are interested in is tagged against a dataset.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nTo 'Libraries for working with HTML and XML'\n\nhttps://xmldataset.readthedocs.io\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #672 from spurin/patch-1\n\nAdd xmldataset"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88fba88c0a76e0a4ee38",
    "number": 671,
    "body": "## Why this framework/library/software/resource is awesome?\n\nIt is another Python podcast but this time about testing.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "test_podcast",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88fca88c0a76e0a4ee39",
    "number": 669,
    "body": "## Why this framework/library/software/resource is awesome?\n\nThese two podcasts are an awesome source of weekly information.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "podcasts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #669 from quobit/podcasts\n\nAdded two podcasts to Weekly Resources"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88fda88c0a76e0a4ee3a",
    "number": 667,
    "body": "## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88fda88c0a76e0a4ee3b",
    "number": 666,
    "body": "## Why this framework/library/software/resource is awesome?\n\npyuv is a Python interface to libuv, a high-performance, portable library for asynchronous network communications and more. libuv is the platform layer for the well known [NodeJS](https://nodejs.org/).\n\npyuv implements the following features:\n- Asynchronous TCP\n- UDP\n- Named pipes\n- Asynchronous DNS resolver\n- Timers\n- Running operations in a ThreadPool\n- Async handle\n- Prepare, idle and check handles\n- Signal handle\n- System memory information\n- System load information\n- Getting executable path\n- Asynchronous filesystem operations (stat, lstat)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "feature/pyuv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88fea88c0a76e0a4ee3c",
    "number": 665,
    "body": "Fix a link\n",
    "head_branch": "404",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #665 from zhulongcheng/404\n\nFix a link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f88ffa88c0a76e0a4ee3d",
    "number": 664,
    "body": "## Why this framework/library/software/resource is awesome?\n\nThis PR proposes a new section called VUI for Voice User Interface technologies related to Amazon Echo, Apple Siri, Google Home, and the like.\n\nThis PR also proposes adding Flask-Ask to that section. Flask-Ask is a framework for developing Alexa Skills on the Amazon Echo. \n- Flask-Ask made front page on HackerNews Jun 10, 2016. Well received in comments. https://news.ycombinator.com/item?id=11871554\n- Flask-Ask made front page on Reddit's /r/Python. Not many comments. May 10, 2016. https://www.reddit.com/comments/4k972p\n- Full Sphinx documentation for Flask-Ask is available at https://johnwheeler.org/flask-ask\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8900a88c0a76e0a4ee3e",
    "number": 663,
    "body": "## Why this framework/library/software/resource is awesome?\n\nHTTPie and python-prompt-toolkit alone are already awesome. HTTP Prompt combines the two. Double awesomeness!\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8901a88c0a76e0a4ee3f",
    "number": 662,
    "body": "## Why this framework/library/software/resource is awesome?\n\nAdd a progress meter to your loops in a second\n\nClosing issue #648 Add tqdm \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nNew library added \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8901a88c0a76e0a4ee40",
    "number": 661,
    "body": "## Why this framework/library/software/resource is awesome?\n\nAgent-based modeling is very useful for researchers to create and simulate models of all types, this can helps to do experience based on agents theory, and Mesa is the first framework in python that allows agent-based modeling.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nA new category was added for agent-based modeling in Python3 which is new.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8902a88c0a76e0a4ee41",
    "number": 660,
    "body": "## Why this framework/library/software/resource is awesome?\n\nMicroPython is a very small (ten times smaller) implementation of a large subset of Python3 language, which works everywhere from modest microcontroller systems (16K RAM, 128K ROM) to normal desktop systems (where it still offers benefits of a smaller size, faster startup time, better self-containment).\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nTODO: There actually should be a separate section \"Alternative\nImplementations\" for things like PyPy, Stackless Python, MicroPython,\netc.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8903a88c0a76e0a4ee42",
    "number": 659,
    "body": "## Why this framework/library/software/resource is awesome?\n\nThe Awesome Python collection + ordering by popularity, additional metadata including dev activity and package comparisons.\n\nAwesome Python @LibHunt has already been well received at reddit.com/r/python. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #659 from StanBright/master\n\nAdd 'Awesome Ptyhon @LibHunt' to the Resources/Websites section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8904a88c0a76e0a4ee43",
    "number": 658,
    "body": "## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8905a88c0a76e0a4ee44",
    "number": 657,
    "body": "Chris, I added the code you asked me to. \nPC\n## Why this framework/library/software/resource is awesome?\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "newbranch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8906a88c0a76e0a4ee45",
    "number": 656,
    "body": "## Why this framework/library/software/resource is awesome?\n\nMost Python Visualization tools are not good-looking. However, Seaborn is the most beautiful data visualization library I ever seen in Python, almost as good as d3.js. The APIs are well designed for developers to create informative and attractive statistical graphs.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "add_Seaborn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8906a88c0a76e0a4ee46",
    "number": 655,
    "body": "## Why this framework/library/software/resource is awesome?\n\nI think it is a best web framework with most reusability, configurability, and replaceability.\n## Vote for this pull request\n\n@vinta \ncc @limodou\n",
    "head_branch": "add_uliweb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8907a88c0a76e0a4ee47",
    "number": 654,
    "body": "## Why this framework/library/software/resource is awesome?\n\nSpecifically intended for handling large text collections, using efficient online, incremental algorithms.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8908a88c0a76e0a4ee48",
    "number": 653,
    "body": "An open source financial library to backtest trading strategies,\nplot charts, seamlessly download market data, analyse market patterns\n",
    "head_branch": "python-financial-library",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8909a88c0a76e0a4ee49",
    "number": 652,
    "body": "",
    "head_branch": "python-TensorFlow-Examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8909a88c0a76e0a4ee4a",
    "number": 651,
    "body": "## Why this framework/library/software/resource is awesome?\n\nWith this library you can make an cli-application with interactive command line user interfaces like in [Yeoman](http://yeoman.io/)\nFor example:\n![alt text](https://raw.githubusercontent.com/lk-geimfari/kolkrabba/master/screenshots/initer-interactive.png)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f890aa88c0a76e0a4ee4b",
    "number": 650,
    "body": "## Why this framework/library/software/resource is awesome?\n\nPla helps you automate workflows in a very simple way. You only have to define your commands in a yaml-file.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "add-pla",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f890ba88c0a76e0a4ee4c",
    "number": 647,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #647 from lovincyrus/master\n\nMissing space - pydeep, ML"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f890ca88c0a76e0a4ee4d",
    "number": 646,
    "body": "## Why this framework/library/software/resource is awesome?\n\nAdded NSenter under DevOps tools. It's awesome because it is free/open-source, makes entering Linux kernel namespaces simple and is open to contributions.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f890da88c0a76e0a4ee4e",
    "number": 645,
    "body": "## captcha\n\nA captcha library that generates audio and image CAPTCHAs.\n## python-ldap\n\nProvides an object-oriented API to access LDAP directory servers from Python programs\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f890da88c0a76e0a4ee4f",
    "number": 644,
    "body": "## Why this framework/library/software/resource is awesome?\n\n[Dryscrape](https://github.com/niklasb/dryscrape) is a lightweight Python library that uses Webkit to enable easy scraping of dynamic, Javascript-heavy web pages.\nIt supports browsing JavaScript web pages! That's why it's awesome!\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "dryscrape",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f890ea88c0a76e0a4ee50",
    "number": 643,
    "body": "## Why this framework/library/software/resource is awesome?\n\nThe easiest and most popular chatbot to implement ChatOps in Python.\nVery gentle learning curve but very powerful once you start to master\nthe tool (conversation flows, security, markdown formatting and\ntemplate, ...). It comes with developer friendly text and graphical\nconsoles to debug your plugins easily.\n\nIt is compatible out of the box with Slack, Hipchat, XMPP, IRC and lot\nmore. But you can also extend it easily to support a custom chat system.\n\nAlready 300+ public plugins are available !\nCheck out the list here: https://github.com/errbotio/errbot/wiki\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #643 from errbotio/master\n\nErrbot chatbot (http://errbot.io)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f890fa88c0a76e0a4ee51",
    "number": 642,
    "body": "Updated README.md file\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8910a88c0a76e0a4ee52",
    "number": 641,
    "body": "## Why this framework/library/software/resource is awesome?\n\n`aeries` allows you to view your grades directly from your desktop with this application without having to log onto the Aeries website and navigate the confusing portal. Note: This only works for students whose schools use the Aeries Student Information System by Eagle Software.\n\n<img src=\"http://i.imgur.com/crRFbSQ.png\">\n<img src=\"http://i.imgur.com/FXQIZJ9.png\">\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8911a88c0a76e0a4ee53",
    "number": 640,
    "body": "## Why this framework/library/software/resource is awesome?\n\nBecause you can search, start, pause, go next/prev and play songs from your terminal.  \n\nIn action:\n![Image of terminal](http://i.imgur.com/1n4UP60.gif)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "pytify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8911a88c0a76e0a4ee54",
    "number": 639,
    "body": "## Why this framework/library/software/resource is awesome?\n\n![](http://i.imgur.com/0SXZ90y.gif)\n### Git and GitHub Autocompleter with Interactive Help\n\n`gitsome` provides direct integration with GitHub.  It also autocompletes:\n- Git commands\n- Git options\n- Git branches, tags, etc\n- [Git-Extras commands](https://github.com/tj/git-extras/blob/master/Commands.md)\n- [GitHub integration commands](https://github.com/donnemartin/gitsome/blob/master/COMMANDS.md)\n- Shell commands\n- Files and directories\n- Environment variables\n- Man pages\n- Python (REPL included)\n\n![Imgur](http://i.imgur.com/sG09AJH.png)\n\n![Imgur](http://i.imgur.com/08OMNjz.png)\n\n![Imgur](http://i.imgur.com/fHjMwlh.png)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8912a88c0a76e0a4ee55",
    "number": 638,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8913a88c0a76e0a4ee56",
    "number": 637,
    "body": "Fix a link\n",
    "head_branch": "xlsxwriter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #637 from zhulongcheng/xlsxwriter\n\nFix broken link for xlsxwriter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8914a88c0a76e0a4ee57",
    "number": 636,
    "body": "## Why this framework/library/software/resource is awesome?\n\nDependency Injector is a Python dependency injection framework. It was designed to be unified, developer-friendly tool for managing any kind of Python objects and their dependencies in formal, pretty way.\n\nDependency Injector framework key features are:\n- Easy, smart, pythonic style.\n- Obvious, clear structure.\n- Extensibility and flexibility.\n- Memory efficiency.\n- Thread safety.\n- Documentation.\n- Semantic versioning.\n\nFew links:\n- PyPi - https://pypi.python.org/pypi/dependency_injector\n- Documentation - http://python-dependency-injector.ets-labs.org/en/stable/\n- One of the most extensive examples - https://github.com/ets-labs/python-dependency-injector/tree/master/examples/miniapps/movie_lister\n- And its description in docs - http://python-dependency-injector.ets-labs.org/en/stable/examples/movie_lister.html\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8915a88c0a76e0a4ee58",
    "number": 635,
    "body": "## Why this framework/library/software/resource is awesome?\n\npybluez is awesome python library to access system bluetooth resources. Supports Windows / linux and all versions of python 2.3 + including python 3.x.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8915a88c0a76e0a4ee59",
    "number": 634,
    "body": "## Why this framework/library/software/resource is awesome?\n\n![68747470733a2f2f7261772e6769746875622e636f6d2f746f6e792f76637370756c6c2f6d61737465722f646f632f5f7374617469632f76637370756c6c2d64656d6f2e676966](https://cloud.githubusercontent.com/assets/26336/14935567/c33bd274-0e9b-11e6-8565-b3f8aabb5c84.gif)\n- Supports synchronizing git, svn and mercurial repositories\n- Makes it easy to restore project layouts on newly formatted systems\n- Makes it easy to see updates to your favorite open source projects. Type `vcspull` in the morning to grab all the latest code\n- Supports adding git remotes (upstream repo + your fork)\n- Declaratively set your projects via JSON or YAML configuration ([Example configurations](https://vcspull.readthedocs.io/en/latest/examples.html))\n- Supports Python 2.7, 3.3+\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8916a88c0a76e0a4ee5a",
    "number": 633,
    "body": "## Why this software + library is awesome?\n\n![68747470733a2f2f7261772e6769746875622e636f6d2f746f6e792f746d7578702f6d61737465722f646f632f5f7374617469632f746d7578702d64656d6f2e676966](https://cloud.githubusercontent.com/assets/26336/14935573/d52b86aa-0e9b-11e6-9682-276a11592842.gif)\n- load and [tmux](https://tmux.github.io/) sessions via JSON/YAML configuration (like [teamocil](https://github.com/remiprev/teamocil) and [tmuxinator](https://github.com/tmuxinator/tmuxinator))\n- manage tmux servers, sessions, windows and panes live via [Python API](https://tmuxp.readthedocs.io/en/latest/api.html) (see [quickstart](https://tmuxp.readthedocs.io/en/latest/quickstart_python.html))\n- lots of [examples](https://tmuxp.readthedocs.io/en/latest/examples.html)\n- Extensive [documentation](https://tmuxp.readthedocs.io/en/latest/index.html)\n- Compatible with Python 2.6+, 3.3+\n- Supports tmux 1.8, 1.9a, 2.0, 2.1\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8917a88c0a76e0a4ee5b",
    "number": 632,
    "body": "## Why this library is awesome?\n- Works with JSON, YAML, INI, python dicts and python objects\n- Permissively licensed (BSD)\n- Its relatively mature (turning 3 years old in May 2016)\n- Packaged on [FreeBSD](http://portsmon.freebsd.org/portoverview.py?category=devel&portname=py-kaptan) and [ArchLinux](https://aur.archlinux.org/packages/python-kaptan/)\n- Well-documented [with many examples](https://github.com/emre/kaptan/blob/master/README.rst)\n- Used as a dependency in production software [tmuxp](https://github.com/tony/tmuxp)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8918a88c0a76e0a4ee5c",
    "number": 631,
    "body": "## Why this framework/library/software/resource is awesome?\n\nQuick.py is a property-based testing library based on type annotations. The library shows an interesting approach how to use type annotation for writing random value generators and ensure in properties and behaviors of your code. It's fully compatible with unit-tests library and nose/pytest test runners. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "quickcheck",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8918a88c0a76e0a4ee5d",
    "number": 630,
    "body": "## Why this framework/library/software/resource is awesome?\n\nBiggest plus that this format is language-independent, more details: https://blog.rstudio.org/2016/03/29/feather/\n\nA few sentences describing the reason.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8919a88c0a76e0a4ee5e",
    "number": 628,
    "body": "- [pywinauto](https://github.com/pywinauto/pywinauto) is a very pythonic Windows GUI automation library having native windows/controls manipulation functionality (that PyAutoGUI doesn't have for now). UI Automation API support is on the way.\n- [pyatom](https://github.com/pyatom/pyatom) is a quite popular GUI automation library for OS X.\n- [AppVeyor](https://ci.appveyor.com) is the most popular Windows CI service, well-supported and free for open source projects.\n- [Landscape.io](https://landscape.io) is one more very popular Code Health check tool that is missed in the list somehow.\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f891aa88c0a76e0a4ee5f",
    "number": 627,
    "body": "add Oracle driver\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f891ba88c0a76e0a4ee60",
    "number": 626,
    "body": "Added links to 2 graph databases. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f891ca88c0a76e0a4ee61",
    "number": 624,
    "body": "## Why this framework/library/software/resource is awesome?\n- Great way to acquire open source thermodynamical data.\n- Pure and pseudo-pure fluid equations of state and transport properties for 118 components (and mixtures).\n- Highest accuracy psychrometric routines.\n- Optional: Call NIST REFPROP proprietary database (If available)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f891ca88c0a76e0a4ee62",
    "number": 623,
    "body": "## Why this framework/library/software/resource is awesome?\n\nRxPY is pretty sweet. You get all the benefits of reactive programming in Python, namely:\n- Asynchronous data streams with observables\n- LINQ-style query operators\n- Schedulers for modular streams\n\nIn short, it gives you the ability to program in a declarative style utilizing composition, as opposed to an imperative style utilizing inheritance. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "jerodestapa-RxPY",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f891da88c0a76e0a4ee63",
    "number": 622,
    "body": "## Why this framework/library/software/resource is awesome?\n- Provides built-in language independent checking routines (named bears in coala).\n- You can easily write your own checks.\n- Provides user-friendly interfaces like json, formatted and interactive output in the CLI. Plugins for various editors are available as well.\n- Manages parallelizing the checking-routines without you having to worry.\n- Unifies interfaces for various checking routines.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "coala",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #622 from Uran198/coala\n\nAdd coala"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f891ea88c0a76e0a4ee64",
    "number": 621,
    "body": "## Why this framework/library/software/resource is awesome?\n\nThis IDE is awesome because it is an powerful open source IDE. This IDE is easy to use. Available for all the platforms.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f891fa88c0a76e0a4ee65",
    "number": 620,
    "body": "## Why is PyPrinter is awesome?\n\nPyPrinter provides a very easy and quick way to print with colors, which is great for any command-line or interpreter based Python app (or script). It also supports unicode letters printing, recursive indentation support, and automatic wrapping based on the window size.\nIt is written in pure-python, so installing it is easy as well!\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8920a88c0a76e0a4ee66",
    "number": 619,
    "body": "Added a separate file that is a complete clone of the original README.md file, adding the number of stars as well as last pushed date for each GitHub repositories included in the curated list. The date was collected through GitHub API (just now). And I can update the file regularly or as needed.\n\nLet me know if you find it interesting. Thanks!\n\nView the file directly at:\nhttps://github.com/chaconnewu/awesome-python/blob/master/awesome_python_with_repo_info.md \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8920a88c0a76e0a4ee67",
    "number": 618,
    "body": "## Why this framework/library/software/resource is awesome?\n\nQuick.py is a property-based testing library based on type annotations. The library shows an interesting approach how to use type annotation for writing random value generators and ensure in properties and behaviors of your code. It's fully compatible with unit-tests library and nose/pytest test runners. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "quick.py",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8921a88c0a76e0a4ee68",
    "number": 617,
    "body": "## Why this framework/library/software/resource is awesome?\n\nDeep Learning library for Python. ConvNets, recurrent neural networks, and more. Runs on Theano and TensorFlow. http://keras.io/\n\nKeras is a minimalist, highly modular neural networks library, written in Python and capable of running on top of either TensorFlow or Theano. It was developed with a focus on enabling fast experimentation. Being able to go from idea to result with the least possible delay is key to doing good research.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "keras",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8922a88c0a76e0a4ee69",
    "number": 616,
    "body": "## Why this framework/library/software/resource is awesome?\n\nDeep learning library featuring a higher-level API for TensorFlow. http://tflearn.org.\nI think **tflearn** was on the homepage of HackerNews, recently.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "tflearn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8923a88c0a76e0a4ee6a",
    "number": 615,
    "body": "## Why this framework/library/software/resource is awesome?\n\nSimple and rapid application development framework, built on top of Flask. includes detailed security, auto CRUD generation for your models, google charts and much more.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "flask-app-builder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8924a88c0a76e0a4ee6b",
    "number": 614,
    "body": "## Why this framework/library/software/resource is awesome?\n\nJavascript for refined palates: a Python 3 to ES6 Javascript translator. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "metapensiero.pj",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8924a88c0a76e0a4ee6c",
    "number": 613,
    "body": "## Why this framework/library/software/resource is awesome?\n\nEasy to use Python library for creating 2D arcade games.\nThis one was suggested to me on Reddit, when I presented to the community there python.libhunt.com. \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "arcade",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8925a88c0a76e0a4ee6d",
    "number": 611,
    "body": "This also fixes the Travis CI build \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8926a88c0a76e0a4ee6e",
    "number": 610,
    "body": "## Why this framework/library/software/resource is awesome?\n\nPolyglot is a pretty standard NLP pipeline, but its awesomeness is due to the fact that it supports hundreds of different languages. It also does morphology, and has a pretty darn good probabilistic language detection algorithm.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8927a88c0a76e0a4ee6f",
    "number": 609,
    "body": "### Why this framework/library/software/resource is awesome?\n\nThis script makes it easier to batch download lecture resources (e.g., videos, ppt, etc) for Coursera classes.\n### Who agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8927a88c0a76e0a4ee70",
    "number": 608,
    "body": "# Why this framework/library/software/resource is awesome?\n\nThis script makes it easier to batch download lecture resources (e.g., videos, ppt, etc) for Coursera classes.\n# Who agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8928a88c0a76e0a4ee71",
    "number": 607,
    "body": "## Why this framework/library/software/resource is awesome?\n\nhug is the fastest growing framework for microservices on Python3 and as such clearly deserves placement on this list.\n## Vote for this pull request\n\n+1\n\nAdds hug, the fastest growing micro-service framework for Python\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #607 from timothycrosley/patch-1\n\nAdd hug to REST frameworks list"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8929a88c0a76e0a4ee72",
    "number": 606,
    "body": "## Why this framework/library/software/resource is awesome?\n\nYou don't need to request web site headers manually or look into the page sources to see what framework or library was used to create the website.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f892aa88c0a76e0a4ee73",
    "number": 605,
    "body": "Added an entry in NLP for polyglot, which have support for hundreds of language for most of its features, and boasts a particularly good language detection module.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f892ba88c0a76e0a4ee74",
    "number": 604,
    "body": "## Why this framework/library/software/resource is awesome?\n\nSlash is a complex testing framework enabling developers to customize it into their own in-house infrastructure. \n\nIt leverages several concepts found in other frameworks (e.g. fixtures and assertion rewriting from py.test) and adds a robust plugin mechanism, configuration and logging management, consistent session states and error handling, as well as reporting to a centralized result collection service (Backslash)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f892ba88c0a76e0a4ee75",
    "number": 603,
    "body": "## Why this framework/library/software/resource is awesome?\n\nIt provides a way to write CLIs that can also be interactive (and thus have great tab completion).  There is a fairly nice layout library too for doing dynamically sized tables in a terminal with good unicode and vt100 support.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nAdd my library to the list.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f892ca88c0a76e0a4ee76",
    "number": 602,
    "body": "## Why this framework/library/software/resource is awesome?\n\nMNE-python is pretty comprehensive library for data analysis and visualization for electrophysiology data in neuroscience. Electroencephalograpy (EEG), Magnetoencephalography (MEG), and Electrocorticography (ECoG) are a large part of the field of cognitive neuroscience. This package is the most comprehensive collection of tools in python to analyze these types of data. Check out their website [here](http://martinos.org/mne/stable/index.html).\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f892da88c0a76e0a4ee77",
    "number": 601,
    "body": "## Why this framework/library/software/resource is awesome?\n\nCaravel's main goal is to make it easy to slice, dice and visualize data. It empowers users to perform analytics at the speed of thought.\n\n![caravel](https://camo.githubusercontent.com/47e9ca019ba596a4255f2ff7b6b81ee7689b67e9/687474703a2f2f692e696d6775722e636f6d2f4a5262546e54782e706e67)\n\nIt supports many-many data sources and really easy to use.\n\n![caravel](https://camo.githubusercontent.com/c5ff4a221adfd6331d0f20582dfc8ed4933e1bb2/687474703a2f2f692e696d6775722e636f6d2f4d41465a5474552e706e67)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f892ea88c0a76e0a4ee78",
    "number": 600,
    "body": "## Why this framework/library/software/resource is awesome?\n\nPython for everyone.\n\n\"Everyone should learn to code, but not everyone needs to become a software engineer or computer scientist. Automate the Boring Stuff with Python is written for office workers, students, administrators, and anyone who uses a computer to learn how to code small, practical programs to automate tasks on their computer.\" -- from this website\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f892ea88c0a76e0a4ee79",
    "number": 598,
    "body": "## Why this framework/library/software/resource is awesome?\n\n[Directree](https://github.com/shreydesai/directree) is a lightweight application that recursively identifies the files and folders in your path. You can view your folder structures on the console or export them to a `txt` file for inclusion in a GitHub project. It's **super** easy to use and always open for contributions.\n\n<img src=\"http://i.imgur.com/EcDqnZx.png\">\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f892fa88c0a76e0a4ee7a",
    "number": 596,
    "body": "## Why this framework/library/software/resource is awesome?\n\nIt enables patching Django's user model Manager or QuerySet with a fast in-memory equivalent, to make testing easier and unit tests more concise/maintainable.\n\nFeatures:\n- QuerySet style support for method chaining\n- Filtering with Q objects\n- Aggregates generation\n- CRUD functions\n- Field lookups\n- django-rest-framework serializer asserts\n\n[Info & examples](https://github.com/stphivos/django-mock-queries)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8930a88c0a76e0a4ee7b",
    "number": 595,
    "body": "Yesterday Armin Ronacher aka mitsuhiko announced the creation of Pallets project: \"a Github organization which will be the home of Flask and all the associated projects\". \n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "jinja_reallocated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #595 from quobit/jinja_reallocated\n\nJinja2 repo reallocated to Pallets project"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8931a88c0a76e0a4ee7c",
    "number": 594,
    "body": "## Why this framework/library/software/resource is awesome?\n\nThis specific REPL is available for all major platforms (Linux, OS X, Windows) and provides nice features, such as:\n- Features automatic completion of attributes and file names.\n- Automatically displays function arguments and documentation.\n- Keeps your recent results in the result history, for later use.\n- Can automatically fold long outputs, so you can concentrate on what's important.\n- Lets you save the history of the session as an HTML file, for future reference. You can then load the history file into DreamPie, and quickly redo previous commands.\n- Automatically adds parentheses and optionally quotes when you press space after functions and methods. For example, type execfile fn and get execfile(\"fn\").\n- Supports interactive plotting with matplotlib.\n- Supports virtually all Python implementations: 2.5+, 3.1+, Jython, IronPython and PyPy.\n- Extremely fast and responsive.\n\n(Taken from the official DreamPie website http://www.dreampie.org/)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8931a88c0a76e0a4ee7d",
    "number": 593,
    "body": "[Travis-CI Build #106](https://travis-ci.org/vinta/awesome-python/builds/119307253) has two issues:\n\n> Links \n> 1. 301 https://github.com/mitsuhiko/markupsafe → https://github.com/pallets/markupsafe\n> 2. 301 https://github.com/mitsuhiko/itsdangerous → https://github.com/pallets/itsdangerous\n",
    "head_branch": "two_repos_redir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #593 from quobit/two_repos_redir\n\nUpdate two repos redirections - this commit fixes #592"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8932a88c0a76e0a4ee7e",
    "number": 591,
    "body": "## Why this framework/library/software/resource is awesome?\n\nThey comply with the Resources section aim: _where to discover new Python libraries_. The two podcasts have a high quality and have a complete year of sustained weekly episodes.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "podcasts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8933a88c0a76e0a4ee7f",
    "number": 590,
    "body": "Simply put, diff-so-fancy makes your git diffs beautiful and easy on eyes.  \n\n![](https://cloud.githubusercontent.com/assets/39191/13622719/7cc7c54c-e555-11e5-86c4-7045d91af041.png)\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8934a88c0a76e0a4ee80",
    "number": 589,
    "body": "## Why this library is awesome?\n\n[Sciter](http://sciter.com) is an embeddable multiplatform HTML/CSS/script engine with GPU accelerated rendering designed to render modern desktop application UI. It's a compact, single dll/dylib/so file (4-8 mb), engine without any additional dependencies.\n\nSciter has bindings for C++, Delphi, D, Go, .NET, Python and Rust languages.\n\nThis one allows you easily create the multiplatform desktop GUI with HTML/CSS and writing application logic at Python.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "pravic-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8935a88c0a76e0a4ee81",
    "number": 588,
    "body": "## Why this framework/library/software/resource is awesome?\n\n[`try`](https://github.com/timofurrer/try) makes it very easy to try out python packages.\nIt will automatically create a virtual environment and launch a python interpreter with the already imported package. It supports PyPI and GitHub including pulling different versions of the package into different python version environments.\nIn addition to that there is the option to fire up an editor instead of an interpreter.\n\n... It's never been easier to try out python packages!\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #588 from timofurrer/master\n\nAdd try - It's never been easier to try a package"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8936a88c0a76e0a4ee82",
    "number": 587,
    "body": "## Why this framework/library/software/resource is awesome?\n\nDiskCache is awesome for many reasons:\n- Django-compatible cache backend replaces the essentially broken filebased cache backend that ships in Django core. Read more [details and benchmarks](http://www.grantjenks.com/docs/diskcache/djangocache-benchmarks.html).\n- [Cache benchmark comparison](http://www.grantjenks.com/docs/diskcache/cache-benchmarks.html) shows key lookups are faster than memcached and redis.\n- Built atop SQLite and the file system, it's thread-safe and multiprocess-safe.\n- Supports multiple eviction policies including least-recently-used, least-frequently-used, and least-recently-stored.\n- Supports \"tag\" metadata and eviction by \"tag\".\n- 100% test coverage and hours of heavy stress in production.\n- Fully documented with benchmark comparisons.\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n\nAdded DiskCache reference under Caching.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #587 from grantjenks/patch-1\n\nAdded DiskCache reference under Caching"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8936a88c0a76e0a4ee83",
    "number": 586,
    "body": "## Why this library is awesome?\n\nProviding several communication patterns, it aims to make the networking layer fast, scalable, and easy to use. Implemented in C, it works on a wide range of operating systems with no further dependencies.\n\nIt supports following communication modes:\n- PAIR - simple one-to-one communication\n- BUS - simple many-to-many communication\n- REQREP - allows to build clusters of stateless services to process user requests\n- PUBSUB - distributes messages to large sets of interested subscribers\n- PIPELINE - aggregates messages from multiple sources and load balances them among many destinations\n- SURVEY - allows to query state of multiple applications in a single go\n\nAlso it works for:\n- in-process\n- IPC\n- over tcp\n## Vote for this pull request\n\nWho agrees that this change should be merged could add your reactions (e.g. :+1:) to this pull request.\n",
    "head_branch": "add-nanomsg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8937a88c0a76e0a4ee84",
    "number": 585,
    "body": "It is awesome and you know. It is used by most projects.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8938a88c0a76e0a4ee85",
    "number": 584,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8939a88c0a76e0a4ee86",
    "number": 583,
    "body": "Add [Pomp](https://github.com/estin/pomp) to web-crawling section\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f893aa88c0a76e0a4ee87",
    "number": 582,
    "body": "Also fix Travis build :white_check_mark: \n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f893aa88c0a76e0a4ee88",
    "number": 581,
    "body": "Fast, simple packet creation / parsing, with definitions for the basic\nTCP/IP protocols.\n\nSigned-off-by: Peng Xiao xiaoquwl@gmail.com\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f893ba88c0a76e0a4ee89",
    "number": 580,
    "body": "Updated Readme.md. Added a section for challenge sites. Added Kaggle in that section.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f893ca88c0a76e0a4ee8a",
    "number": 578,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f893da88c0a76e0a4ee8b",
    "number": 577,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f893ea88c0a76e0a4ee8c",
    "number": 576,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f893ea88c0a76e0a4ee8d",
    "number": 575,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f893fa88c0a76e0a4ee8e",
    "number": 574,
    "body": "Was lost in a86340dd1a8e8cf86866cb44d3c10cded4d63f7f\n",
    "head_branch": "pew",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8940a88c0a76e0a4ee8f",
    "number": 573,
    "body": "lightweight, language-independent software stack with an associated code generation mechanism for RPC\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8941a88c0a76e0a4ee90",
    "number": 572,
    "body": "I'd like to suggest the addition of my `little_pger` library, as a very simple way to build Postgres queries using plain data structures:\n\nhttps://github.com/cjauvin/little_pger\n",
    "head_branch": "little_pger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8942a88c0a76e0a4ee91",
    "number": 571,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8942a88c0a76e0a4ee92",
    "number": 570,
    "body": "Added twitter handle of importpython @importpython\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8943a88c0a76e0a4ee93",
    "number": 569,
    "body": "Records is awesome because it provides a simple API for running raw SQL and integrates with Tablib ... and it has a bonus CLI! And it's from @kennethreitz so you know it's good!\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8944a88c0a76e0a4ee94",
    "number": 568,
    "body": "The `sql` library is awesome because it makes the basic Postgres.py API available for any DB-API 2.0-compliant database driver!\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8945a88c0a76e0a4ee95",
    "number": 567,
    "body": "Postgres.py is awesome because it's well-designed, well-tested, well-documented, portable between Python 2 and 3, and proven in production on Gratipay. Write SQL and map the return types to Python objects!\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8945a88c0a76e0a4ee96",
    "number": 566,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8946a88c0a76e0a4ee97",
    "number": 565,
    "body": "Caught from Travis.\n\nhttps://travis-ci.org/vinta/awesome-python/builds/108621195#L842\n",
    "head_branch": "fix_301",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8947a88c0a76e0a4ee98",
    "number": 564,
    "body": "NIPY is a set of libraries for working with neuroimaging data, including standard algorithms and data structures for fMRI, DTI, EEG, MEG, and other modalities.\n",
    "head_branch": "nipy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8948a88c0a76e0a4ee99",
    "number": 563,
    "body": "Placed at the end of the list to respect any sorting method that might be in place. Probably better placed near the `pip` entry.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8948a88c0a76e0a4ee9a",
    "number": 562,
    "body": "Watson is a CLI to track your time. Pretty neat :)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8949a88c0a76e0a4ee9b",
    "number": 561,
    "body": "Created with https://github.com/dkhamsing/frankenstein\n### GitHub Corrected URLs\n\n| Was | Now |\n| --- | --- |\n| https://github.com/avelino/mining | https://github.com/mining/mining |\n| https://github.com/marrow/marrow.mailer | https://github.com/marrow/mailer |\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f894aa88c0a76e0a4ee9c",
    "number": 560,
    "body": "Really nice package which allows very simple creation of Python packages in the wheel format, which then upload directly to PyPi.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f894ba88c0a76e0a4ee9d",
    "number": 559,
    "body": "subj\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f894ca88c0a76e0a4ee9e",
    "number": 557,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f894ca88c0a76e0a4ee9f",
    "number": 556,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f894da88c0a76e0a4eea0",
    "number": 555,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f894ea88c0a76e0a4eea1",
    "number": 554,
    "body": "Use repo url instead of pypi\n",
    "head_branch": "dateutil",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f894fa88c0a76e0a4eea2",
    "number": 553,
    "body": "This is a postgres client that does auto-completion and syntax highlighting.\n",
    "head_branch": "pgcli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8950a88c0a76e0a4eea3",
    "number": 551,
    "body": "Lektor is a very easy to use static CMS and blog engine developed by @mitsuhiko. For more info here is a link to the project's [GitHub Page](https://github.com/lektor/lektor).\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8950a88c0a76e0a4eea4",
    "number": 550,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8951a88c0a76e0a4eea5",
    "number": 549,
    "body": "Orator is a brand new ORM for Python following the ActiveRecord pattern with a pinch of magic in it.\n\nIts main goal is simplicity and to be really easy to read and write with useful features out of the box (relationships decorators, timestampable models, soft deletes, protection against mass assigment, model events, caching).\n\nAn example of a simple model:\n\n``` python\nfrom orator import Model\n\n\nclass User(Model):\n\n    __fillable__ = ['name', 'email']\n\n    @has_many\n    def posts(self):\n        return Post\n```\n",
    "head_branch": "add-orator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #549 from sdispater/add-orator\n\nAdding Orator ORM"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8952a88c0a76e0a4eea6",
    "number": 547,
    "body": "`sqlite3` is a small lightweight database that is used on local storage devices during development phase. it doesn't handle many requests at a time so it is not fit for deployment, but awesome for testing for developers. Why isn't it mentioned here!\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8953a88c0a76e0a4eea7",
    "number": 546,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8953a88c0a76e0a4eea8",
    "number": 544,
    "body": "> loxun is a Python module to write large output in XML using unicode and\n> namespaces.\n> For more information, visit http://pypi.python.org/pypi/loxun/\n\nAwesome library to write large XML files, I test it with file larger than 1Gb and works like a charm\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8954a88c0a76e0a4eea9",
    "number": 543,
    "body": "[hustcc/wrapcache](https://github.com/hustcc/wrapcache) is a simple and easy-usage cache system based on python decorator, supported lru, redis and memcached.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8955a88c0a76e0a4eeaa",
    "number": 542,
    "body": "I use petl every day for ETL.  I have no affiliation with the project other than being a very happy user.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8956a88c0a76e0a4eeab",
    "number": 541,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8956a88c0a76e0a4eeac",
    "number": 540,
    "body": "Flask-admin moved from mrjoes/flask-admin to a new organization (flask-admin/flask-admin). This pull request corrects the URL.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8957a88c0a76e0a4eead",
    "number": 539,
    "body": "ispy is a python tool for monitoring the output of terminals and\nprocesses.\n",
    "head_branch": "add-ispy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8958a88c0a76e0a4eeae",
    "number": 538,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8959a88c0a76e0a4eeaf",
    "number": 537,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f895aa88c0a76e0a4eeb0",
    "number": 535,
    "body": "mycli is a Terminal Client for MySQL with AutoCompletion and Syntax\nHighlighting.\n",
    "head_branch": "mycli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f895aa88c0a76e0a4eeb1",
    "number": 534,
    "body": "I have used Yowsup a couple of times, it is well written and useful.  \nAlso Sample project, guides and docs helped me get started in half an hour, I think it has a place on the awesome python list.  \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f895ba88c0a76e0a4eeb2",
    "number": 533,
    "body": "Fixes #532\n",
    "head_branch": "feature/awesome-bot",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge a7d0dd65b122a19b887605a37484099739f3ea3d into 7e6928bb9a2ba9185d0ce9a868fb62967dfe9a77"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f895ca88c0a76e0a4eeb3",
    "number": 531,
    "body": "@vinta Added korean nlp\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f895da88c0a76e0a4eeb4",
    "number": 530,
    "body": "The Weboob project is a mature scraping project with capabilities for banking sites, video viewing sites, public transport info, etc. It comes with a number of plugins for actual sites and usable client apps for the aforementioned capabilities.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f895ea88c0a76e0a4eeb5",
    "number": 529,
    "body": "@vinta Added one library as you said\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 33d1b19e87c873143d42de34be0033df66b4a985 into e47b00e4a2695fbb35777e840046157632fe9c38"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f895ea88c0a76e0a4eeb6",
    "number": 528,
    "body": "- mycli is a very handy MySQL terminal client with autocompletion and syntax highlighting.\n- ultramysql is yet another mysql driver.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f895fa88c0a76e0a4eeb7",
    "number": 527,
    "body": "Pygrok is a python library to parse strings and extract information from structured/unstructured data.It's a implementation of jordansissel's grok regular expression library.\n\nWith pygrok, you can easily:\n-    parsing and matching patterns in a string(log, message etc.)\n-    relieving from complex regular expressions.\n-    extracting information from structured/unstructured data\n## Getting Started\n\n``` Python\n>>> import pygrok\n>>> text = 'gary is male, 25 years old and weighs 68.5 kilograms'\n>>> pattern = '%{WORD:name} is %{WORD:gender}, %{NUMBER:age} years old and weighs %{NUMBER:weight} kilograms'\n>>> print pygrok.grok_match(text, pattern)\n{'gender': 'male', 'age': '25', 'name': 'gary', 'weight': '68.5'}\n```\n\nPretty Cool !\nSome of the pattern you can use are listed here:\n\n```\n`WORD` means \\b\\w+\\b in regular expression.\n`NUMBER` means (?:%{BASE10NUM})\n`BASE10NUM` means (?<![0-9.+-])(?>[+-]?(?:(?:[0-9]+(?:\\.[0-9]+)?)|(?:\\.[0-9]+)))\n\nother patterns such as `IP`, `HOSTNAME`, `URIPATH`, `DATE`, `TIMESTAMP_ISO8601`, `COMMONAPACHELOG`..\n```\n\nSee All patterns [here](https://github.com/garyelephant/pygrok/blob/master/pygrok/patterns/grok-patterns).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8960a88c0a76e0a4eeb8",
    "number": 526,
    "body": "@vinta Added few libraries in Machine learning,Data analysis and Visualization and Natural Language processing\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8961a88c0a76e0a4eeb9",
    "number": 525,
    "body": "I have been using this since a few months now. This is super easy to use and gives amazing recommendations. Free for open source projects and one free private repository. It has an autofix option as well! It you choose to autofix, it will create a new pull request. Isn't this amazing.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8962a88c0a76e0a4eeba",
    "number": 524,
    "body": "The list has provided links to Theano and Vowpal Wabbit. It'd be nice to have a link to TensorFlow, too.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8962a88c0a76e0a4eebb",
    "number": 523,
    "body": "I think it's the best ORM for neo4j database\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8963a88c0a76e0a4eebc",
    "number": 522,
    "body": "Add [howdoi](https://github.com/gleitz/howdoi) - Instant coding answers via the command line.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fe19cd1d34c21d7fe0184be8c052a1d38ca43edb into 84e602b7c72063009c7c699a1596c5eb9455b886"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8964a88c0a76e0a4eebd",
    "number": 520,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8965a88c0a76e0a4eebe",
    "number": 519,
    "body": "radish is awesome because it provides additionally to all `gherkin` syntax feature and some other features like:\n- Scenario Preconditions\n- Scenario Loops\n- Constants\n- Expressions\n\nThese features are usually not implemented in other BDD tools which makes radish awesome and unique!\n",
    "head_branch": "add-radish-bdd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8965a88c0a76e0a4eebf",
    "number": 518,
    "body": "`sure` is an awesome testing library which provides powerful and flexible assertions.\n\nThis library is awesome because it monkey-patches all python objects with methods like `should` or `when` or `to`:\n\n``` python\nimport sure\n\n(2 + 2).should.be.equal(4)\n(3.4 + 4).should.eql(7.5)\n\n{'foo': 'bar'}.should.equal({'foo': 'bar'})\n{'foo': 'bar'}.should.have.key('foo').which.should.equal('bar')\n\nstep.run.when.called_with(some_id=1).should.return_value(Step.PASSED)\n```\n\nIt makes it really easy to use and the the test cases are super readable and maintainable.\n",
    "head_branch": "add-sure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8966a88c0a76e0a4eec0",
    "number": 517,
    "body": "update from original\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8967a88c0a76e0a4eec1",
    "number": 516,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8968a88c0a76e0a4eec2",
    "number": 515,
    "body": "Imapy is an awesome library for dealing with Imap because it has:\n- simple and powerful syntax\n- features not present in any other lib\n- py2/3 support\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8968a88c0a76e0a4eec3",
    "number": 514,
    "body": "",
    "head_branch": "patch-15",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8969a88c0a76e0a4eec4",
    "number": 513,
    "body": "# Text to update\n\n```\n* [Jupyter Notebook (IPython)](https://jupyter.org) -  A rich toolkit to help you make the most out of using Python interactively.\n```\n- [Jupyter Notebook (IPython)](https://jupyter.org) -  A rich toolkit to help you make the most out of using Python interactively.\n\n**Note**: We should keep IPython on this line to avoid confusion.  Jupyter is essentially the newest version of IPython, but IPython is probably still a more widely recognized name.\n# Reason for change:\n\nFrom https://ipython.org/\n\n> Jupyter and the future of IPython\n> \n> IPython is a growing project, with increasingly language-agnostic components. IPython 3.x was the last monolithic release of IPython, containing the notebook server, qtconsole, etc. As of IPython 4.0, the language-agnostic parts of the project: the notebook format, message protocol, qtconsole, notebook web application, etc. have moved to new projects under the name Jupyter. IPython itself is focused on interactive Python, part of which is providing a Python kernel for Jupyter.\n\nFrom https://jupyter.org/about.html\n\n> About Project Jupyter\n> \n> Project Jupyter was born out of the IPython Project in 2014 as it evolved to support interactive data science and scientific computing across all programming languages.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f896aa88c0a76e0a4eec5",
    "number": 512,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f896ba88c0a76e0a4eec6",
    "number": 511,
    "body": "One library that implements cache system for redis in Python.  It is for use\nwith web applications and Python scripts.  It comes with really handy apis\nfor easy drop-in use with common tasks, including caching decorators.  It\ncan be used to build a cache cluster which has a routing system that allows\nyou to automatically set cache on different servers, sharding can be really\neasy now.  You can use it to batch fetch multiple cache results back, for\na cluster, it even does the job in parallel, we fetch results from all servers\nconcurrently, which means much higher performance.\n\nIt uses the redis server, which is a in-memory key-value data structure\nserver.  It does not implement any other backends like filesystem and does not\nintend to do so.  Mostly we want to use a key-value server like redis, if you\nhave special needs, it is easy to write one cache decorator that stores\neverything in memory using a dict or you can check out other libraries.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f896ca88c0a76e0a4eec7",
    "number": 510,
    "body": " Ralph - Data center infrastructure management tool.\n",
    "head_branch": "ralph",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f896ca88c0a76e0a4eec8",
    "number": 509,
    "body": "solrpy was moved to GitHub by one of the owners of the project on Google Code\n",
    "head_branch": "patch-14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f896da88c0a76e0a4eec9",
    "number": 508,
    "body": "pgmpy is the only library in python for probabilistic graphical models  and has participated in gsoc for past 2 years . So I think we can add it.\n[pgmpy](http://pgmpy.org/)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f896ea88c0a76e0a4eeca",
    "number": 507,
    "body": "Created with https://github.com/dkhamsing/frankenstein\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f896fa88c0a76e0a4eecb",
    "number": 506,
    "body": "Extension of the pdb, fully compatible with its predecessor, introduces a number of new features for nice debugging.\n",
    "head_branch": "pdbpp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8970a88c0a76e0a4eecc",
    "number": 505,
    "body": "Extension of the pdb, fully compatible with its predecessor, introduces a number of new features for nice debugging.\n",
    "head_branch": "pdbpp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8970a88c0a76e0a4eecd",
    "number": 504,
    "body": "I believe that [asciimatics](https://github.com/peterbrittain/asciimatics) is the terminal API that Python should have always had.  It is a more human way to program curses and also provides a drop-in replacement API for non-curses environments - all of which can be `pip` installed.\n\nIn more details, it provides a single, cross-platform API for all terminals/consoles with the following features: \n- Coloured/styled text - including 256 colours (terminal support permitting)\n- Cursor positioning\n- Keyboard input (without blocking or echoing)\n- Mouse input (terminal support permitting)\n- Detecting and handling when the console resizes\n- Screen scraping\n- Anti-aliased ASCII line-drawing\n- Image to ASCII conversion - including JPEG and GIF formats\n- Many animation effects - e.g. sprites, particle systems, banners, etc.\n\nIt has been proven to work on Windows, Linux and OSX and supports Python versions 2 and 3.  \n\nFor an idea of the sorts of things it can do, see the [gallery](https://github.com/peterbrittain/asciimatics/wiki).\n\nIt wasn't obvious to me whether this should be in the command-line tools or GUI section given that it straddles both.  I'd happily be guided by your views if you feel it is worth taking.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8971a88c0a76e0a4eece",
    "number": 503,
    "body": "Awesome because it saves you lots of time when playing Capture The Flag (CTF) games.\n",
    "head_branch": "pwntools",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8972a88c0a76e0a4eecf",
    "number": 502,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8973a88c0a76e0a4eed0",
    "number": 501,
    "body": "Tornado is mainly a web framework, not a networking library.\nChanged from old pull request where it was in both sections.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8974a88c0a76e0a4eed1",
    "number": 500,
    "body": "Closes #382 \n",
    "head_branch": "circuits",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8974a88c0a76e0a4eed2",
    "number": 499,
    "body": "Can turn a function into a command-line interface, saving code and effort\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8975a88c0a76e0a4eed3",
    "number": 498,
    "body": "Tornado is more than a networking framework: it is a web framework and should be in the web framework section.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8976a88c0a76e0a4eed4",
    "number": 497,
    "body": "Tweaked the description of Pylint\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8977a88c0a76e0a4eed5",
    "number": 496,
    "body": "The old link for blaze (http://blaze.pydata.org/en/latest/) are broken, just replace for the new (http://blaze.readthedocs.org/en/latest/index.html)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8978a88c0a76e0a4eed6",
    "number": 495,
    "body": "Frog is an integration of memory-based natural language processing (NLP) modules developed for Dutch. All NLP modules are based on Timbl. Tokenisation is performed by ucto. Frog does PoS-tagging, lemmatisation, morphological analysis, dependency parsing, named-entity recognition, and shallow parsing, all for the Dutch language. This is the Python binding to Frog, enabling direct use of all functionality from Python.\n",
    "head_branch": "frog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8978a88c0a76e0a4eed7",
    "number": 494,
    "body": "Colibri Core is software for the efficient modelling of n-grams and skipgram on large text corpora. It is  written in C++ but comes with a Python interface (through Cython). Python tutorials and documentation are available as well: http://proycon.github.io/colibri-core/ \n",
    "head_branch": "coco",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8979a88c0a76e0a4eed8",
    "number": 493,
    "body": "FoLiA-tools are CLI tools and Python libraries to work with documents in the FoLiA (Format for Linguistic Annotation) format. FoLiA is an XML-based file format capable of storing a wide variety of linguistic annotation types, see https://proycon.github.io/folia . FoLiA is used in the academic Natural Language Processing community by various large corpora, mainly in The Netherlands and Flanders.\n\nThe FoLiA-tools are part of the folia github repo, the actual FoLiA library is part of PyNLPl (https://github.com/proycon/pynlpl), which is a mandatory dependency. I therefore combined the two in this single pull request, I hope you don't mind. However, PyNLPl contains more than just a FoLiA library. It contains various specialised modules, such as for parsing other specialized formats (Moses, GIZA++), clients for interfacing with certain NLP servers, a module for handling Corpus Query Language, and generic functionality for text processing and basic corpus statistics.\n\nMy work on FoLiA & CLAM was awarded the CLARIN Young Scientist Award 2015 (last week).\n",
    "head_branch": "folia",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f897aa88c0a76e0a4eed9",
    "number": 492,
    "body": "CLAM (https://proycon.github.io/clam) is a high-level tool to quickly build RESTful webservices and web applications for command-line tools. The tools themselves can be considered black boxes. The webservice is RESTful, the interface for human end-users is entirely produced client-side (through XSLT). Various CLAM-based services by our university are available here: http://webservices-lst.science.ru.nl/\n\nThe webservices are suited for batch processing and large data, and are typically employed in Natural Language Processing settings. CLAM is build upon flask. A tutorial video is available here: https://www.youtube.com/watch?v=GyRvaO6omEo\n\nMy work on CLAM & FoLiA was awarded the CLARIN Young Scientist Award 2015 (last week).\n",
    "head_branch": "clam",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f897ba88c0a76e0a4eeda",
    "number": 491,
    "body": "Ucto is an advanced regular-expression based tokeniser and sentence splitter, with configurations for various languages, support for FoLiA XML. Ucto itself is written in C++, this is the Python binding to ucto.\n",
    "head_branch": "python-ucto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f897ca88c0a76e0a4eedb",
    "number": 490,
    "body": "Added python-timbl, Python binding for Timbl (http://ilk.uvt.nl/timbl), a memory-based machine learning toolkit (kNN,IB1,IGTree) often used in Natural Language Processing and well-known in the academic community.\n",
    "head_branch": "python-timbl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f897ca88c0a76e0a4eedc",
    "number": 488,
    "body": "I think it's the most advanced one now. And, of course, it is awesome ;)\n\nhttps://github.com/MagicStack/MagicPython\n\n<img width=\"761\" alt=\"68747470733a2f2f6d61676963737461636b2e6769746875622e696f2f4d61676963507974686f6e2f6578616d706c652e706e67\" src=\"https://cloud.githubusercontent.com/assets/239003/10626932/d6773eac-7781-11e5-82c6-fb3bc9093dbc.png\">\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f897da88c0a76e0a4eedd",
    "number": 487,
    "body": "spaCy is an awesome NLP API. It is much faster than NLTK and, at least for my tests, was able to identify named entities with a better accuracy.\n\nbrew is an Multiple Classifier Systems API. At this time, there is no Dynamic Classifier Ensemble Selection API available in Python (except for brew), developed by me and some fellow researchers at UFPE. I believe it is worth mentioning specially for scientific/research purposes\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f897ea88c0a76e0a4eede",
    "number": 486,
    "body": "Prettyconf allow developers split configurations from code as described in \"[The Twelve-Factor App](http://www.12factor.net)\" methodology . It's API compatible and highly inspired in the project python-decouple but it implementation is more extensible and flexible than the later.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f897fa88c0a76e0a4eedf",
    "number": 485,
    "body": "In contrast to the Mock package, it provides a clear, expressive syntax and better safety guarantees to prevent API drift and to improve confidence in tests using doubles. It comes with drop-in support for test suites run by Pytest, Nose, or standard unittest.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f897fa88c0a76e0a4eee0",
    "number": 484,
    "body": "Continually updated Data Science Python Notebooks: Spark, Hadoop MapReduce, HDFS, AWS, Kaggle, scikit-learn, matplotlib, pandas, NumPy, SciPy, and various command lines.\n\n<br/>\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/data-science-ipython-notebooks/master/images/README_1200x800.gif\">\n</p>\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8980a88c0a76e0a4eee1",
    "number": 483,
    "body": "<br/>\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/cover_challenge.gif\">\n</p>\n\n# interactive-coding-challenges\n\n**Continually updated, interactive and test-driven coding challenges**.\n\nChallenges focus on **algorithms** and **data structures** that are typically found in **coding interviews** or **coding competitions**.\n\nEach challenge has one or more reference solutions that are:\n- Fully functional\n- Unit tested\n- Easy-to-understand\n\nChallenges will soon provide on-demand [incremental hints](https://github.com/donnemartin/interactive-coding-challenges/issues/22) to help you arrive at the optimal solution.\n\nNotebooks also detail:\n- Constraints\n- Test cases\n- Algorithms\n- Big-O time and space complexities\n## Challenge Solutions\n\n<br/>\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/donnemartin/interactive-coding-challenges/master/images/cover_solution.gif\">\n</p>\n\n<br/>\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8981a88c0a76e0a4eee2",
    "number": 482,
    "body": "![](http://i.imgur.com/vzC5zmA.gif)\n\n`SAWS` aims to **supercharge** the AWS CLI with features focusing on:\n- **Improving ease-of-use**\n- **Increasing productivity**\n\nUnder the hood, `SAWS` is **powered by the AWS CLI** and supports the **same commands** and **command structure**.\n\n`SAWS` and `AWS CLI` Usage:\n\n```\naws <command> <subcommand> [parameters] [options]\n```\n\n`SAWS` features:\n- Auto-completion of:\n  - Commands\n  - Subcommands\n  - Options\n- Auto-completion of resources:\n  - Bucket names\n  - Instance ids\n  - Instance tags\n  - [More coming soon!](%28#todo-add-more-resources%29)\n- Customizable shortcuts\n- Fuzzy completion of resources and shortcuts\n- Syntax and output highlighting\n- Execution of shell commands\n- Command history\n- Contextual help\n- Toolbar options\n\n`SAWS` is available for Mac, Linux, Unix, and [Windows](#windows-support).\n\n![](http://i.imgur.com/Eo12q9T.png)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8982a88c0a76e0a4eee3",
    "number": 481,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8983a88c0a76e0a4eee4",
    "number": 480,
    "body": "Becoming more popular, shares similarities with RoR's orm.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8983a88c0a76e0a4eee5",
    "number": 479,
    "body": "Gearman is popular Job server for distributed application development. http://gearman.org/\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8984a88c0a76e0a4eee6",
    "number": 478,
    "body": "Podcasts are also a valuable resource! :)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8985a88c0a76e0a4eee7",
    "number": 477,
    "body": "Awesome because it comes with useful tools such as methods for making hinton diagrams\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8986a88c0a76e0a4eee8",
    "number": 476,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6bc86601b49a48d0f5285ce1f3d4e5222f2ae887 into 621e20edb58ba1997eeaeedc2dead3686cb5766f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8987a88c0a76e0a4eee9",
    "number": 475,
    "body": "Added [ramses](https://ramses.readthedocs.org/en/stable/) to the restful apis section, because it is a really useful project that allows one to create a restful api just by specifying a yaml file in the RAML format.\n",
    "head_branch": "adding_ramses",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8987a88c0a76e0a4eeea",
    "number": 474,
    "body": "Many of the \"Selenium official\" users writes own helpers in order to hiding low-level details of using Selenium API. SST provides many of such [helpers/actions](http://testutils.org/sst/actions.html) ensuring clean, simple and uniform API across all projects.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8988a88c0a76e0a4eeeb",
    "number": 472,
    "body": "https://github.com/rubik/radon\n\nI found this package in this [reddit discussion](https://www.reddit.com/r/Python/comments/3nctlm/what_python_tools_should_i_be_using_on_every/cvn6tdv).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8989a88c0a76e0a4eeec",
    "number": 471,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f898aa88c0a76e0a4eeed",
    "number": 470,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f898aa88c0a76e0a4eeee",
    "number": 469,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f898ba88c0a76e0a4eeef",
    "number": 468,
    "body": "Some third-party evidence to justify why PeachPy belongs here:\n- [Lambda the Ultimate](http://lambda-the-ultimate.org/node/5251)\n- [Hacker News](https://news.ycombinator.com/item?id=10232025)\n- [Reddit's /r/programming/](https://www.reddit.com/r/programming/comments/3la3lw/peachpy_assembly_code_generation_in_highlevel/)\n- [Reddit's /r/python/](https://www.reddit.com/r/Python/comments/3lavrf/peachpy_assembly_code_generation_in_highlevel/)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f898ca88c0a76e0a4eef0",
    "number": 467,
    "body": "Adding joe, the .gitignore magician,  to the Command-line Productivity\nTools section.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f898da88c0a76e0a4eef1",
    "number": 465,
    "body": "This kind of library is not presented in the list. I didn't find it here when I need it, so I thought it would be helpful for other developers. Many people are not aware of all capabilities of standard library, including me.\n",
    "head_branch": "amezhenin-cmd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f898ea88c0a76e0a4eef2",
    "number": 464,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f0a29aab9cb92fb2742873698c0d6380a25d2b77 into f7fd3593fc63c2b87ed46ac4d81f023c7aea1e09"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f898ea88c0a76e0a4eef3",
    "number": 463,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f898fa88c0a76e0a4eef4",
    "number": 462,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8990a88c0a76e0a4eef5",
    "number": 461,
    "body": "",
    "head_branch": "patch-13",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8991a88c0a76e0a4eef6",
    "number": 460,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8992a88c0a76e0a4eef7",
    "number": 459,
    "body": "mingus is an advanced, cross-platform music theory and notation package for Python with MIDI file and playback support. It can be used to play around with music theory, to build editors, educational tools and other applications that need to process and/or play music. It can also be used to create sheet music with LilyPond.\n",
    "head_branch": "mingus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8992a88c0a76e0a4eef8",
    "number": 455,
    "body": "[SortedContainers](http://www.grantjenks.com/docs/sortedcontainers/) is a fast, pure-Python implementation of SortedList, SortedDict and SortedSet types. The package includes complete documentation, 100% code coverage with days of stress testing, and [extensive benchmarks](http://www.grantjenks.com/docs/sortedcontainers/performance.html).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8993a88c0a76e0a4eef9",
    "number": 454,
    "body": "Hi,\n\nThank you for this awesome and useful list!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8994a88c0a76e0a4eefa",
    "number": 453,
    "body": "This library is not much known but I have used it in my work and is quite useful.\n\n> DEAP is a novel evolutionary computation framework for rapid prototyping and testing of ideas. It seeks to make algorithms explicit and data structures transparent.\n\nAlso PythonXY has moved to GitHub and I added seaborn.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8995a88c0a76e0a4eefb",
    "number": 452,
    "body": "Tryton and its related project are useful for people that want to do business related python development.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8996a88c0a76e0a4eefc",
    "number": 451,
    "body": "Two widely used tools in functional neuroimaging.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8996a88c0a76e0a4eefd",
    "number": 450,
    "body": "https://github.com/nvie/pip-tools\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8997a88c0a76e0a4eefe",
    "number": 449,
    "body": "- CSV: add unicodecsv and csvstudio\n- Tabular data: add rows, messytables and pdftables\n- NLP: add pypln\n- Fix missing dots\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8998a88c0a76e0a4eeff",
    "number": 448,
    "body": "I used this library in a project recently.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8999a88c0a76e0a4ef00",
    "number": 447,
    "body": "New library (spaCy) added under Natural Language Processing section.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f899aa88c0a76e0a4ef01",
    "number": 445,
    "body": "Suggestion to add link to [Python Packaging User Guide](https://python-packaging-user-guide.readthedocs.org/en/latest/).\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f899aa88c0a76e0a4ef02",
    "number": 444,
    "body": "A custom lightweight logging library with email notifications.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f899ba88c0a76e0a4ef03",
    "number": 443,
    "body": "…2 projects\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f899ca88c0a76e0a4ef04",
    "number": 442,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f899da88c0a76e0a4ef05",
    "number": 441,
    "body": "Add this section, because it's very important part of modern development.\n",
    "head_branch": "add-CI-services",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f899ea88c0a76e0a4ef06",
    "number": 440,
    "body": "Thanks for the great list!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f899fa88c0a76e0a4ef07",
    "number": 439,
    "body": "In response to #405\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f899fa88c0a76e0a4ef08",
    "number": 438,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a0a88c0a76e0a4ef09",
    "number": 437,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a1a88c0a76e0a4ef0a",
    "number": 434,
    "body": "",
    "head_branch": "google_code_urls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a2a88c0a76e0a4ef0b",
    "number": 433,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a2a88c0a76e0a4ef0c",
    "number": 432,
    "body": "",
    "head_branch": "typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a3a88c0a76e0a4ef0d",
    "number": 431,
    "body": "[PyAutoGUI](https://github.com/asweigart/pyautogui) - \nA cross-platform GUI automation Python module for human beings. Used to programmatically control the mouse & keyboard. Eventually it would be great to offer the same type of features that [Sikuli](http://www.sikuli.org) offers.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a4a88c0a76e0a4ef0e",
    "number": 430,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a5a88c0a76e0a4ef0f",
    "number": 429,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a6a88c0a76e0a4ef10",
    "number": 428,
    "body": "**yagmail** -- Easy mail sending by doing all the magic for you (attachments, html, passwordless scripts).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a6a88c0a76e0a4ef11",
    "number": 427,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a7a88c0a76e0a4ef12",
    "number": 426,
    "body": "[iso4217](https://github.com/spoqa/iso4217) is a currency data package for Python.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a8a88c0a76e0a4ef13",
    "number": 425,
    "body": "d3py links to vincent\nKartography.py links to mapshaper (node.js)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89a9a88c0a76e0a4ef14",
    "number": 424,
    "body": "Never too late! :P\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89aaa88c0a76e0a4ef15",
    "number": 423,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89aaa88c0a76e0a4ef16",
    "number": 422,
    "body": "Hello, I would like to suggest adding `line_profiler` project to Debugging Tools.\n",
    "head_branch": "add_line_profiler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 30eac33231642e4a5540d35cdef984ead612b88a into cb41fcbfd2b802a688bd79c3a7f2545ebf1e4614"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89aba88c0a76e0a4ef17",
    "number": 421,
    "body": "Updatig list of Buildtools.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89aca88c0a76e0a4ef18",
    "number": 420,
    "body": "Project url for reference: https://github.com/swistakm/graceful\n",
    "head_branch": "add-graceful",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89ada88c0a76e0a4ef19",
    "number": 419,
    "body": "Added SQLObject and Storm to ORM list.\nAdded Muffin and Falcon to Web Framework list.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89aea88c0a76e0a4ef1a",
    "number": 418,
    "body": "Added SQLObject and Storm to ORM list.\nAdded Muffin and Falcon to Web Framework list.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89aea88c0a76e0a4ef1b",
    "number": 417,
    "body": "disclaimer: i recently contributed to the project. and i still think it's awesome.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89afa88c0a76e0a4ef1c",
    "number": 416,
    "body": "Removed the section I previously created, and just added to command line tools\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b0a88c0a76e0a4ef1d",
    "number": 415,
    "body": "Added link to useful package for graphing stuff like histograms\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b1a88c0a76e0a4ef1e",
    "number": 414,
    "body": "Updated list of PDF based tools to include the excellent Pdfkit for generating PDF files from HTML. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b2a88c0a76e0a4ef1f",
    "number": 413,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 360594135dab7943b7f1c8798e0b24cb46ce1aa8 into eba29d94bf2b8b1136b85f9e8b020078afaed02b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b2a88c0a76e0a4ef20",
    "number": 412,
    "body": "hre is an API to make it easier to use regex\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b3a88c0a76e0a4ef21",
    "number": 411,
    "body": "I think this is very useful\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b4a88c0a76e0a4ef22",
    "number": 410,
    "body": "The development version of PyMC (version 3) has been moved to its own repository called pymc3.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b5a88c0a76e0a4ef23",
    "number": 409,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge badc21efd9cadd418a38359de2f512491bfd6638 into f17817979434a32c7a9e836ff7a7efdb99b38f82"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b6a88c0a76e0a4ef24",
    "number": 408,
    "body": "Verify the remote debugging capability by my self, great tool for someone need a free remote debugging tool :P\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b6a88c0a76e0a4ef25",
    "number": 407,
    "body": "Added some more ~~propaganda~~ features and used a https link to the website.\n\n_disclaimer: co-maintainer of Nikola_\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b7a88c0a76e0a4ef26",
    "number": 406,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #406 from ionelmc/patch-1\n\nAdd few more debugging tools."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b8a88c0a76e0a4ef27",
    "number": 404,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b9a88c0a76e0a4ef28",
    "number": 403,
    "body": "Add Visual Studio Community 2013 in the IDEs section.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89b9a88c0a76e0a4ef29",
    "number": 402,
    "body": "",
    "head_branch": "slacker",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89baa88c0a76e0a4ef2a",
    "number": 401,
    "body": "A logging library for distributed systems: https://github.com/ClusterHQ/eliot\n",
    "head_branch": "eliot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89bba88c0a76e0a4ef2b",
    "number": 400,
    "body": "Closes #375.\n",
    "head_branch": "patch-12",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89bca88c0a76e0a4ef2c",
    "number": 399,
    "body": "",
    "head_branch": "bandersnatch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89bda88c0a76e0a4ef2d",
    "number": 398,
    "body": "This is in reference to issue #385. Feedback is welcome.\n",
    "head_branch": "patch-11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89bda88c0a76e0a4ef2e",
    "number": 397,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89bea88c0a76e0a4ef2f",
    "number": 396,
    "body": "Hi all.\n\nI did run README.md through aspell and noticed couple of typos to be amended - these are now fixed.\n\nThank you for a great list! :)\n",
    "head_branch": "TypoFixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89bfa88c0a76e0a4ef30",
    "number": 395,
    "body": "",
    "head_branch": "patch-10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c0a88c0a76e0a4ef31",
    "number": 393,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c0a88c0a76e0a4ef32",
    "number": 392,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c1a88c0a76e0a4ef33",
    "number": 391,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c2a88c0a76e0a4ef34",
    "number": 390,
    "body": "The core of Tryton (also called Tryton kernel) provides all the necessary\nfunctionalities for a complete application framework: data persistence,\nextensive modularity, users management (authentication, fine grained control for\ndata access, handling of concurrent access of resources), workflow and report\nengines, web services and internationalisation. Thus constituting a complete\napplication platform which can be used for any relevant purpose.\n\nhttp://www.tryton.org/\nhttps://github.com/tryton/tryton\nhttps://code.google.com/p/tryton/wiki/TableOfContents?tm=6\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c3a88c0a76e0a4ef35",
    "number": 389,
    "body": "add new project to Queue section\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c4a88c0a76e0a4ef36",
    "number": 388,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c4a88c0a76e0a4ef37",
    "number": 387,
    "body": "Eve support natively MongoDB but it can also be used with SQLAlchemy thanks to eve-sqlalchemy.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c5a88c0a76e0a4ef38",
    "number": 386,
    "body": "SublimeAutoPEP8 helps a lot when I first use python to do something.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c6a88c0a76e0a4ef39",
    "number": 383,
    "body": "",
    "head_branch": "msbanik-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c7a88c0a76e0a4ef3a",
    "number": 381,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c8a88c0a76e0a4ef3b",
    "number": 380,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c8a88c0a76e0a4ef3c",
    "number": 379,
    "body": "see: https://github.com/realpython/list-of-python-api-wrappers\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89c9a88c0a76e0a4ef3d",
    "number": 378,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89caa88c0a76e0a4ef3e",
    "number": 377,
    "body": "",
    "head_branch": "add_validata_to_data_validation_section",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89cba88c0a76e0a4ef3f",
    "number": 376,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89cca88c0a76e0a4ef40",
    "number": 373,
    "body": "This pull request contains the following changes:\n- Added a `boilerplates` section. \n- Added Django Hackathon Starter to `boilerplates` section. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89cca88c0a76e0a4ef41",
    "number": 372,
    "body": "<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/vinta/awesome-python/372)\n\n<!-- Reviewable:end -->\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89cda88c0a76e0a4ef42",
    "number": 371,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89cea88c0a76e0a4ef43",
    "number": 370,
    "body": "Added Seaborn data viz library to data viz section. Organized section in alphabetical order.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89cfa88c0a76e0a4ef44",
    "number": 369,
    "body": "Also update section title Database -> Databases to clarify what goes in each section.\n",
    "head_branch": "yoyo-migrations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89cfa88c0a76e0a4ef45",
    "number": 368,
    "body": "",
    "head_branch": "briefly",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d0a88c0a76e0a4ef46",
    "number": 367,
    "body": "",
    "head_branch": "s4cmd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b5c756f1dc0371baf0db234633b58eb7384ba0dc into 8810d07de17929421d1ed92d6e47154f2b6528e5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d1a88c0a76e0a4ef47",
    "number": 366,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d2a88c0a76e0a4ef48",
    "number": 365,
    "body": "It's not limited to data validation, but is similar to other libraries in this section.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d3a88c0a76e0a4ef49",
    "number": 364,
    "body": "added two projects to \"extracting web contents\" section\n",
    "head_branch": "hardikvasa-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d4a88c0a76e0a4ef4a",
    "number": 360,
    "body": "[Openpyxl](https://openpyxl.readthedocs.org/en/latest/) is a wonderful library for parsing excel 2007+. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d4a88c0a76e0a4ef4b",
    "number": 359,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d5a88c0a76e0a4ef4c",
    "number": 358,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d6a88c0a76e0a4ef4d",
    "number": 357,
    "body": "An Unofficial Alipay API for Python\n",
    "head_branch": "alipay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d7a88c0a76e0a4ef4e",
    "number": 356,
    "body": "Pingo is Generic API for controlling boards with programmable IO pins - Pingo provides a uniform API to program devices like the Raspberry Pi, pcDuino, Intel Galileo etc. just like the Python DBAPI provides an uniform API for database programming in Python. http://pingo.io\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d8a88c0a76e0a4ef4f",
    "number": 355,
    "body": "",
    "head_branch": "patch-9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5fababb1d351d5b8571ad01cb38413090341628a into bdf44b27471dfea4d0bd01f79950429ce45a4550"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d8a88c0a76e0a4ef50",
    "number": 354,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89d9a88c0a76e0a4ef51",
    "number": 353,
    "body": "",
    "head_branch": "morepath",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89daa88c0a76e0a4ef52",
    "number": 352,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89dba88c0a76e0a4ef53",
    "number": 351,
    "body": "",
    "head_branch": "add-ryu-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89dca88c0a76e0a4ef54",
    "number": 350,
    "body": "A lot of test automation libs added\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89dca88c0a76e0a4ef55",
    "number": 349,
    "body": "Added Soupy\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89dda88c0a76e0a4ef56",
    "number": 348,
    "body": "- lettuce\n  Lettuce is a BDD tool for python, 100% inspired on cucumber.\n- paver\n  A Python-based software project scripting tool along the lines of Make or Rake.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89dea88c0a76e0a4ef57",
    "number": 347,
    "body": "Add RobotFramework, a very extensive test framework.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bc362b6e1df0f7e4a5cebc9887e9322e7ecec435 into 5683d146c3142d3e79585dd7d63a0cff41bdb897"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89dfa88c0a76e0a4ef58",
    "number": 346,
    "body": "This is a pure Python library for high-performance scientific visualization. Based on OpenGL, it is GPU-accelerated.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e0a88c0a76e0a4ef59",
    "number": 345,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e0a88c0a76e0a4ef5a",
    "number": 344,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e1a88c0a76e0a4ef5b",
    "number": 343,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e2a88c0a76e0a4ef5c",
    "number": 342,
    "body": "The old link pointed to nowhere.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e3a88c0a76e0a4ef5d",
    "number": 341,
    "body": "Add FuckingAwesomeDeploy\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e4a88c0a76e0a4ef5e",
    "number": 340,
    "body": "another redis monitor by using flask, angular, socket.io\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e4a88c0a76e0a4ef5f",
    "number": 339,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e5a88c0a76e0a4ef60",
    "number": 338,
    "body": "Pointing to nowhere http://tags.brace.io\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e6a88c0a76e0a4ef61",
    "number": 336,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e7a88c0a76e0a4ef62",
    "number": 335,
    "body": "Green is a great alternative to nose, pytest, or trial for unit testing.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e7a88c0a76e0a4ef63",
    "number": 334,
    "body": "The project was removed from GitHub.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e8a88c0a76e0a4ef64",
    "number": 333,
    "body": "",
    "head_branch": "winpython",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 220fcfa38959cd3157f5c206723c05d417808832 into 8a5fa76de1e44ddea17fdacd1e7fb7b863b37422"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89e9a88c0a76e0a4ef65",
    "number": 332,
    "body": "",
    "head_branch": "django-(py)mssql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89eaa88c0a76e0a4ef66",
    "number": 331,
    "body": "[HoloViews](https://ioam.github.io/holoviews/) is a newly released library that is rapidly generating interest:\n-  Winner in its category at this years UK Open Source Awards (2015)\n-  Already available as part of [SageMathCloud](https://cloud.sagemath.com/projects).\n-  Supports multiple backends including matplotlib and mpld3 (not on this list but should be!)\n-  [Currently trending](https://github.com/trending?l=python)\n\nAs one of the main authors, I know it is _awesome_ so please check it out! :-)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89eba88c0a76e0a4ef67",
    "number": 330,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89eba88c0a76e0a4ef68",
    "number": 329,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89eca88c0a76e0a4ef69",
    "number": 327,
    "body": "PynamoDB is a Pythonic interface to Amazon’s DynamoDB. By using simple, yet powerful abstractions over the DynamoDB API, PynamoDB allows you to start developing immediately.\n\nFeatures:\n- Python 3 support\n- Python 2 support\n- Support for Unicode, Binary, JSON, Number, Set, and UTC Datetime attributes\n- Support for DynamoDB Local\n- Support for all of the DynamoDB API\n- Support for Global and Local Secondary Indexes\n- Batch operations with automatic pagination\n- Iterators for working with Query and Scan operations\n- Fully tested\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89eda88c0a76e0a4ef6a",
    "number": 326,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89eea88c0a76e0a4ef6b",
    "number": 325,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89efa88c0a76e0a4ef6c",
    "number": 324,
    "body": "Hello, I would like to add **Buildbot** project to the list. Not sure about category, but I think **DevOps Tools** section would be quite right for it.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89efa88c0a76e0a4ef6d",
    "number": 323,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f0a88c0a76e0a4ef6e",
    "number": 322,
    "body": "There are many projects to run PyPI server but this one is really minimal and easy to install and manage.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f1a88c0a76e0a4ef6f",
    "number": 321,
    "body": "",
    "head_branch": "structlog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f2a88c0a76e0a4ef70",
    "number": 320,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f2a88c0a76e0a4ef71",
    "number": 319,
    "body": "One is for downloading, and another is for language processing.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f3a88c0a76e0a4ef72",
    "number": 318,
    "body": "Both these modules provide a much better way of interacting with Microsoft Windows. PyWin32 provides access to Win32 APIs and PythonNet provides access to the Microsoft .NET Common Language Runtime (CLR).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f4a88c0a76e0a4ef73",
    "number": 317,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f5a88c0a76e0a4ef74",
    "number": 315,
    "body": "https://github.com/ITCase/awesome-pyramid\n",
    "head_branch": "awesome-pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f6a88c0a76e0a4ef75",
    "number": 314,
    "body": "add yolk3k - https://github.com/myint/yolk\nCommand-line tool for querying PyPI and Python packages installed on your system (with Python 3 support).\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f6a88c0a76e0a4ef76",
    "number": 313,
    "body": "Add Pypsi, the Python Pluggable Shell Interface library. Develop extensible and powerful command line interface shells with minimal code and maximum reuse.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f7a88c0a76e0a4ef77",
    "number": 312,
    "body": "It's a bit strange that Supervisor was not added previously to this awesome list. I saw `honcho` in DevOps section, so I added Supervisor here.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f8a88c0a76e0a4ef78",
    "number": 311,
    "body": "added ptpython - advanced Python REPL built on top of the prompt_toolkit library\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3d2f029cae69e72d23955ccac42fa5483c23f86e into 4206dee6232aeceb818d76224f78f2d721c23ecb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89f9a88c0a76e0a4ef79",
    "number": 310,
    "body": "There are many projects to run PyPI server but this one is really minimal and easy to install and manage.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89faa88c0a76e0a4ef7a",
    "number": 309,
    "body": "In my biased opinion, trepan has features that I am not aware of in other debuggers. Namely: \n- extensive documentation in RestructuredText so it looks nice on pypy  as well as inside the debugger using terminal highlighting\n- context-sensitive command completion\n-  debugger macros that can be written in python\n-  source-code syntax highlighting\n-  stepping and filtering by event (call, return, c_call, c_return, line, exception ...)\n-  a smart \"eval\" command\n\nand more... See https://pypi.python.org/pypi/trepan/0.4.1\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89fba88c0a76e0a4ef7b",
    "number": 308,
    "body": "In my biased opinion, trepan has features that I am not aware of in other debuggers. Namely: \n- extensive documentation in RestructuredText so it looks nice on pypy  as well as inside the debugger using terminal highlighting\n- context-sensitive command completion\n-  debugger macros that can be written in python\n-  source-code syntax highlighting\n-  stepping and filtering by event (call, return, c_call, c_return, line, exception ...)\n-  a smart \"eval\" command\n\nand more... See https://pypi.python.org/pypi/trepan/0.4.1\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89fba88c0a76e0a4ef7c",
    "number": 307,
    "body": "and remove some trailing whitespace.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89fca88c0a76e0a4ef7d",
    "number": 306,
    "body": "As mentioned in #283, tox is a good tool to run tests on multiple python versions. Lets include it in the list.\n",
    "head_branch": "add_tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89fda88c0a76e0a4ef7e",
    "number": 305,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89fea88c0a76e0a4ef7f",
    "number": 304,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89fea88c0a76e0a4ef80",
    "number": 303,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f89ffa88c0a76e0a4ef81",
    "number": 302,
    "body": "Add secretary (https://github.com/christopher-ramirez/secretary) into the Template Engine section.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a00a88c0a76e0a4ef82",
    "number": 301,
    "body": "fMBT framework added to the testing section\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a01a88c0a76e0a4ef83",
    "number": 300,
    "body": "add a very excellent item in static web generator\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a01a88c0a76e0a4ef84",
    "number": 298,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a02a88c0a76e0a4ef85",
    "number": 297,
    "body": "Adding [viper](https://github.com/nestorsalceda/viper) as PyPI server\n\n/cc @nestorsalceda\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a03a88c0a76e0a4ef86",
    "number": 296,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a04a88c0a76e0a4ef87",
    "number": 295,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a05a88c0a76e0a4ef88",
    "number": 294,
    "body": "I _think_ devops is the correct section, devops scripting is where they've been used and developed at least...\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 33de12ea61b70f1520d786b6e5e5fc03087ccda1 into ae1336f4e92020292a4f38571a8f3e8dab055489"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a05a88c0a76e0a4ef89",
    "number": 293,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a06a88c0a76e0a4ef8a",
    "number": 291,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a07a88c0a76e0a4ef8b",
    "number": 290,
    "body": "More details on PyPi https://pypi.python.org/pypi/caniusepython3\n",
    "head_branch": "add/caniusepython3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cf5d12935021589f5db046b158748d3d18ddc94f into d26cdd2546ab620bbc20c29dbd52a3870e2c151e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a08a88c0a76e0a4ef8c",
    "number": 289,
    "body": "Automated corrections from https://github.com/dawsonbotsford/spellingBee . If the correction is correct, star the repo, if it is wrong, report an issue!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ffc665ee683f519df048fdd0c3ffe9b0edf6877c into f3fb6cbbdb767c9ba9d60b304937ad2ca7e02f98"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a08a88c0a76e0a4ef8d",
    "number": 288,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5126afd20ce9b7e3a637fb48bea6aa3e3ecc6c1a into 3c1ee14c046b99808ac3bfa284b58622d607205e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a09a88c0a76e0a4ef8e",
    "number": 287,
    "body": "The cement Tool is found at builtoncement.com, not builtoncement.org. :-)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3524dba0035d84b2f918f038e16b4dbe5c6b4267 into c99269cd0541ee0a34a7db4c52cf35cecf34f20f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a0aa88c0a76e0a4ef8f",
    "number": 286,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3cee8501ec78a3ea38d0fb52bfe20e8361a5c42a into f690e699f1728f72b51602fe158d0a254dd702a2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a0ba88c0a76e0a4ef90",
    "number": 285,
    "body": "webargs library for parsing HTTP request arguments\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9579017b22c4b4aa6088bd647e39acd771686c89 into 3baca9f232a2ab6dc0bf3832279b1f06276a4aa2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a0ca88c0a76e0a4ef91",
    "number": 284,
    "body": "From [here](http://nuitka.net/pages/overview.html)\n\n> Right now Nuitka is a good replacement for the Python interpreter and compiles every construct that CPython 2.6, 2.7, 3.2 and 3.3 offer. It translates the Python into a C++ program that then uses \"libpython\" to execute in the same way as CPython does, in a very compatible way.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a0ca88c0a76e0a4ef92",
    "number": 280,
    "body": "Since the default system encoding of my Win7 x64(simplified Chinese) is not utf-8, but GBK; sort.py doesn't work in Python 3.4.2. \n\nThe traceback message is:\n\n> Traceback (most recent call last):\n>  File \"E:\\GitHub\\sort.py\", line 52, in <module>\n>    main()\n>  File \"E:\\GitHub\\sort.py\", line 22, in main\n>    read_me = read_me_file.readlines()\n> UnicodeDecodeError: 'gbk' codec can't decode byte 0x93 in position 6947: illegal multibyte sequence\n\nSo I just specify the encoding explicitly by passing the keyword argument  'encoding'. (Otherwise, Python 3.x will use the system's default encoding.)\n\nThe builtin 'open' function in Python 2.7.8 doesn't provide such a parameter, however. So I use codecs.open instead.\n\nThe modified version has already been tested on Win7 x64 with both Python 2.7.8 and Python 3.4.2.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a0da88c0a76e0a4ef93",
    "number": 279,
    "body": "",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a0ea88c0a76e0a4ef94",
    "number": 278,
    "body": "Zwei Einträge geändert\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a0fa88c0a76e0a4ef95",
    "number": 277,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a10a88c0a76e0a4ef96",
    "number": 276,
    "body": "Pex is used to create executable zip files which contain all distributions needed to run a program or bootstrap an environment.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a10a88c0a76e0a4ef97",
    "number": 275,
    "body": "",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a11a88c0a76e0a4ef98",
    "number": 274,
    "body": "Please remove `oauth2`package from Authentication section. It's abandoned project https://github.com/simplegeo/python-oauth2 with no activity since 2011. \n\nIt can't be an recommended awesome package as it is now. \n",
    "head_branch": "remove_oauth2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d5f0d9b4117e2bf9bee0240386f4fc9bd0a523bb into 419c4ff1bc43fc8c5307924f3061335b8cbc1e4f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a12a88c0a76e0a4ef99",
    "number": 273,
    "body": "added neomodel(https://github.com/robinedwards/neomodel) Object-Graph-Mapper for neo4j graph database\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e5707243ef96d6765a35f78eb13b652f1379c418 into 34164b9386494878bfcec38eae4fbef3afbe1e5e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a13a88c0a76e0a4ef9a",
    "number": 272,
    "body": "[virtualenv-mgr](https://github.com/arteria/virtualenv-mgr) is a CLI to manage multiple virtualenvs at once. The tool give you the ability to upgrade packages in all your projects and much more. \n\nI am not sure where to add it, Environment Management or Package Management. I have to put it under Environment Management because of the name of the tool.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a14a88c0a76e0a4ef9b",
    "number": 271,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7038a2db77eb88b4d8b67c03e3daed6bada70d86 into 2ff7b4d510bc22ccfec3c895e6d0d17caf62e284"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a14a88c0a76e0a4ef9c",
    "number": 270,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a15a88c0a76e0a4ef9d",
    "number": 269,
    "body": "Includes a subsection on Imagery section with wrapper OCR in Python\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a16a88c0a76e0a4ef9e",
    "number": 268,
    "body": "1.0.0 release of Feedly has been rename to Stream Framework\n",
    "head_branch": "patch1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c8a157b40ef79b206a5e6c1e7dadc3145c4f7f64 into 7f3cd486cc57f2b49fd8742a07bdb8c3c236ae3a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a17a88c0a76e0a4ef9f",
    "number": 267,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a18a88c0a76e0a4efa0",
    "number": 266,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a19a88c0a76e0a4efa1",
    "number": 265,
    "body": "`pdb` from standard library is not awesome (especially with all these alternatives)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a19a88c0a76e0a4efa2",
    "number": 264,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7ed44f42f2a5318ed999f8fa0709c5b09c15f8a6 into d878a2cc367926296ee4c31409b95f9c389fa803"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a1aa88c0a76e0a4efa3",
    "number": 263,
    "body": "Mutagen has moved to bitbucket\n",
    "head_branch": "mutagen_url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge af2c58ccddcef9882a2c616bb4bce432d9c86107 into 142ebee967abe1f49eb4f6bebc66286c1eacbaa6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a1ba88c0a76e0a4efa4",
    "number": 261,
    "body": "Closes #257\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a1ca88c0a76e0a4efa5",
    "number": 260,
    "body": "Added pefile to files section in README.md. \nIt is a module to read and work with PE executable files.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a1da88c0a76e0a4efa6",
    "number": 259,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a1da88c0a76e0a4efa7",
    "number": 258,
    "body": "Extensible validation for Python dictionaries used inside EVE Python REST API Framework\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6ba1578a620c5083229f51254599b554fb557bc9 into 7f3cd486cc57f2b49fd8742a07bdb8c3c236ae3a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a1ea88c0a76e0a4efa8",
    "number": 256,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2c42a93857d4a4a77e14ab90a02a057cbbdbc02e into d8fc0a48f475eb86f56092fcc11f397ef05e2286"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a1fa88c0a76e0a4efa9",
    "number": 255,
    "body": "added pyelftools to debugging section\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3b68b868ee990fe2bb76eac1537e643a9910b645 into 613f296fc1b4eb896587cc8d963c8ae7e9fd3b5f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a20a88c0a76e0a4efaa",
    "number": 254,
    "body": "Add [pythonpy](https://github.com/Russell91/pythonpy) - python -c, with tab completion and shorthand.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a20a88c0a76e0a4efab",
    "number": 253,
    "body": "Access and manipulate Oracle databases in 10g, 11g and 12c.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a21a88c0a76e0a4efac",
    "number": 252,
    "body": "Requesting a pull to vinta:master from kbknapp:clapp\n\nI added kbknapp/clapp-py to the Command-line Tools section of the list\n",
    "head_branch": "clapp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a22a88c0a76e0a4efad",
    "number": 251,
    "body": "Added a nice validation and (de)serialization library. I have switched to it from schematics in one of my projects and it seems more pretty to me.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a23a88c0a76e0a4efae",
    "number": 250,
    "body": "Py2Docx is another options for someone who wants more features when creating a .docx file using Python.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a24a88c0a76e0a4efaf",
    "number": 249,
    "body": "[Flask-Restless](https://flask-restless.readthedocs.org/en/latest/) provides simple generation of ReSTful APIs for database models defined using SQLAlchemy (or Flask-SQLAlchemy). The generated APIs send and receive messages in JSON format.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 509507655ceaf05ee6d9a85dfc757cbafde1657f into 9dcc3141a8db50f4661cc3296b92d09a306400e8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a24a88c0a76e0a4efb0",
    "number": 248,
    "body": "Addressing #153.\nVersion only added for packages/libraries which state their version on their PyPI page. \nFor instance, the PyPI page for [virtualenv](https://pypi.python.org/pypi/virtualenv) has this text:\n\n```\nProgramming Language :: Python :: 2\nProgramming Language :: Python :: 2.6\nProgramming Language :: Python :: 2.7\nProgramming Language :: Python :: 3\nProgramming Language :: Python :: 3.1\nProgramming Language :: Python :: 3.2\n```\n\nOnly added versions to libraries/packages that list support for both 2 & 3.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a25a88c0a76e0a4efb1",
    "number": 247,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a26a88c0a76e0a4efb2",
    "number": 246,
    "body": "Python codec for converting between a string of ASCII and non-ASCII\nchars maintaining readability. It reduces the friction for developers\nto test with non-ASCII strings.\n",
    "head_branch": "rotunicode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a27a88c0a76e0a4efb3",
    "number": 245,
    "body": "Genty, pronounced \"gen-tee\", stands for \"generate tests\". It promotes generative testing, where a single test can execute over a variety of input.\n",
    "head_branch": "genty",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a27a88c0a76e0a4efb4",
    "number": 244,
    "body": "....\n",
    "head_branch": "flaky",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a28a88c0a76e0a4efb5",
    "number": 243,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a29a88c0a76e0a4efb6",
    "number": 242,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a2aa88c0a76e0a4efb7",
    "number": 241,
    "body": "Added [Korean](https://korean.readthedocs.org/en/latest/): A library for Korean morphology.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2b8b2beb88220a266535387a9a3f32791c17cb37 into b9ff19243f7ce7a6662254b4f83c8f8ec7e64006"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a2ba88c0a76e0a4efb8",
    "number": 240,
    "body": "Added [Sider](https://sider.readthedocs.org).\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a2ba88c0a76e0a4efb9",
    "number": 239,
    "body": "Added pycurl to the list of HTTP libraries\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a2ca88c0a76e0a4efba",
    "number": 238,
    "body": "This related [repository](https://github.com/yoloseem/awesome-sphinxdoc).\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a2da88c0a76e0a4efbb",
    "number": 237,
    "body": "JWT is an authentication standard that Google has been pushing lately. They support a few of these libraries in their developer documentation. \n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a2ea88c0a76e0a4efbc",
    "number": 236,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a2fa88c0a76e0a4efbd",
    "number": 235,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a2fa88c0a76e0a4efbe",
    "number": 234,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6e121611d2efd699ae365bc3049e9513a703fe85 into 01467cd77266250f6149fcf3506bff0316a794e4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a30a88c0a76e0a4efbf",
    "number": 232,
    "body": "prompt_toolkit is a Library for building powerful interactive command lines in Python. It ships with a nice interactive Python shell (called ptpython) built on top of the library.\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a31a88c0a76e0a4efc0",
    "number": 231,
    "body": "Add following awesome python packages:\n- python-stop-words: Get list of common stop words in various languages in Python.\n- python-currencies: Display money format and its filthy currencies, for all money lovers out there.\n- django-markwhat: A collection of template filters that implement common markup languages.\n- short_url: Python implementation for generating Tiny URL- and bit.ly-like URLs.\n- sanitize: Bringing sanity to world of messed-up data.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a32a88c0a76e0a4efc1",
    "number": 230,
    "body": "Added xlwings in Specific Formats Processing section.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cc17e950e8646eca938c99c76f37965e3f9f474f into b817783281bb44d3d00d5a2b7b95958d07f47676"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a33a88c0a76e0a4efc2",
    "number": 229,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a33a88c0a76e0a4efc3",
    "number": 228,
    "body": "not sure if I put `pex` to the right section.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a34a88c0a76e0a4efc4",
    "number": 227,
    "body": "Add PLY project\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d6806d1d863c328b8766d5933b8de9e0dcf10c3c into 2739e4abdec978d30093a9c32bec0f95e5603d1c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a35a88c0a76e0a4efc5",
    "number": 226,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a36a88c0a76e0a4efc6",
    "number": 225,
    "body": "key-value store\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1636caa03a22bbf11b9baf0243e1d04cce864800 into f9ea39769e99444654e0d3a785535a2f9be4a10a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a37a88c0a76e0a4efc7",
    "number": 224,
    "body": "I just thought this list would benefit from links to some educational resources, Python Koans being the best one out there. Thanks for creating this list and considering my request!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a37a88c0a76e0a4efc8",
    "number": 223,
    "body": "NoseOfYeti is a nose plugin I made that provides an RSpec inspired dsl for python.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a38a88c0a76e0a4efc9",
    "number": 222,
    "body": "Wasn't any sections for programming languages written in Python. So added that along with Hylang!\nhttps://github.com/hylang/hy\n\n:shipit:\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a39a88c0a76e0a4efca",
    "number": 221,
    "body": "Added link to Gunnery in DevOps section.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 26502a1450b0c0d766e38c66d668e4ce7a4a8267 into 5779472820672472c70c1956bccdbd1034902fb4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a3aa88c0a76e0a4efcb",
    "number": 220,
    "body": "SimpleCV added\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a3ba88c0a76e0a4efcc",
    "number": 219,
    "body": "scrapping microframework\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 04fff3ae2ff9e3285b51d506d40ad4269ca7b6a4 into d033207406407be077aa37a9f17b5146817acf9b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a3ba88c0a76e0a4efcd",
    "number": 218,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a3ca88c0a76e0a4efce",
    "number": 217,
    "body": "",
    "head_branch": "newbranch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a3da88c0a76e0a4efcf",
    "number": 216,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 439f1b233599d5dac278a67c66144b6d54e15219 into f8ea6a142bff5c35e9b7d8790b4b11c450453d80"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a3ea88c0a76e0a4efd0",
    "number": 215,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a3fa88c0a76e0a4efd1",
    "number": 214,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a3fa88c0a76e0a4efd2",
    "number": 213,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a40a88c0a76e0a4efd3",
    "number": 212,
    "body": "Old repository has moved.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a41a88c0a76e0a4efd4",
    "number": 211,
    "body": "Due to Github Atom editor's rising popularity, I decided to add the basic packages that you'll need for your everyday Python coding.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a42a88c0a76e0a4efd5",
    "number": 210,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a43a88c0a76e0a4efd6",
    "number": 209,
    "body": "Added: orange, RDKit, Open Babel, cclib and Biopython\n",
    "head_branch": "bio_and_chemo_inf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a43a88c0a76e0a4efd7",
    "number": 208,
    "body": "WeChat is one of the most popular IM app, this helps people to build a Service Account on the WeChat's Media Platform quickly\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a44a88c0a76e0a4efd8",
    "number": 207,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 39a10d856cd74cd9bb8c2d888b2f43a63ade282f into 0306e9eb559bd72e51e5b126ea63d3b58fd61810"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a45a88c0a76e0a4efd9",
    "number": 206,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a46a88c0a76e0a4efda",
    "number": 205,
    "body": "Hey, I added two of my projects to the list as well :smiley: \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a46a88c0a76e0a4efdb",
    "number": 204,
    "body": "What do you think about this?\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a47a88c0a76e0a4efdc",
    "number": 203,
    "body": "",
    "head_branch": "pypi-repos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a48a88c0a76e0a4efdd",
    "number": 202,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a49a88c0a76e0a4efde",
    "number": 201,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a4aa88c0a76e0a4efdf",
    "number": 200,
    "body": "",
    "head_branch": "pyvows",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a0e766019a503140c02c316df639d4443e738dc1 into 9fe51a1d38b5a7ea605df618af2bfdcc67ec3708"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a4aa88c0a76e0a4efe0",
    "number": 199,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a4ba88c0a76e0a4efe1",
    "number": 197,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e94c0bd5cabf7884991a2571c69e37844af3f091 into 9fe51a1d38b5a7ea605df618af2bfdcc67ec3708"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a4ca88c0a76e0a4efe2",
    "number": 196,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 061beb65d3a1340a5fa892cefe4ea6a209ef5440 into 7a2675df092f2282c410b879d475224235b3fe13"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a4da88c0a76e0a4efe3",
    "number": 195,
    "body": "First commit has added Sage software and its description.\n\nSecond commit has the results of sort.py executed which includes the addition of Sage software and its description.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a4ea88c0a76e0a4efe4",
    "number": 194,
    "body": "Both HappyBase (for HBase) and Plyvel (for LevelDB) are established (widely used, well tested, extensively documented) database libraries for Python.\n\n(Full disclosure: I maintain both libraries.)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a4ea88c0a76e0a4efe5",
    "number": 193,
    "body": "Added \"pyzmail\" for \"Email\" category\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a4fa88c0a76e0a4efe6",
    "number": 192,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a50a88c0a76e0a4efe7",
    "number": 191,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a51a88c0a76e0a4efe8",
    "number": 190,
    "body": "Another command-line library and a fake-data generator library.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e8005feaf8f24f2d3df399a715de82821092b184 into fb3cc07462dd134271eae608ef3f43bf7764019d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a51a88c0a76e0a4efe9",
    "number": 189,
    "body": "A nice library that merges gevent and requests to enable asynchronous HTTP requests, at the same time.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e83dedda11328cd0cde9086ba86dc04f362e8772 into d75d27ebc1d169afc1ae49f003462191e537236d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a52a88c0a76e0a4efea",
    "number": 188,
    "body": "Add m3u8 to the Audio Section\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a53a88c0a76e0a4efeb",
    "number": 187,
    "body": "Its under Third-party APIs where I found another facebook api tool.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a54a88c0a76e0a4efec",
    "number": 186,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a55a88c0a76e0a4efed",
    "number": 185,
    "body": "pdoc is a library and a command line program to discover the public interface of a Python module or package. The pdoc script can be used to generate plain text or HTML of a module's public interface, or it can be used to run an HTTP server that serves generated HTML for installed modules. It is intended that pdoc will be a replacement for the unmaintained epydoc. \n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a55a88c0a76e0a4efee",
    "number": 184,
    "body": "Savory Pie is an API building library, we give you the pieces to build the API you need. Currently Django is the main target, but the only dependencies on Django are a single view and Resources and Fields that understand Django's ORM.\n",
    "head_branch": "savory-pie",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 07982306eba99f8ced65cef4aadf98e074af2f4e into abff3e563bfc59eb04dda1e225b7abb44e24a0b2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a56a88c0a76e0a4efef",
    "number": 183,
    "body": "",
    "head_branch": "honcho",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a57a88c0a76e0a4eff0",
    "number": 182,
    "body": "Mailgun library to extract message quotations and signatures.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d0fc47f71c7d4b142929505fb0f4f9d120c3089f into d52ea10139e6a9f3e7d3c8d3afeb530f906dfc53"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a58a88c0a76e0a4eff1",
    "number": 181,
    "body": "A mocking library for requests for Python 2.6, 2.7 and 3.2, 3.3. added\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a59a88c0a76e0a4eff2",
    "number": 180,
    "body": "- Add valideer\n- Move schema \n- Remove dictshield\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 79ea15af5d79d161f83e55862449362b09cb7aa9 into 2460cd4e4f1c5678b605fd6ec05b8863ccc948c6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a59a88c0a76e0a4eff3",
    "number": 179,
    "body": "A python port of the JavaScript hashids implementation. It generates YouTube-like hashes from one or many numbers. Use hashids when you do not want to expose your database ids to the user. Website: http://www.hashids.org/\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 48c4f34ed2e8163814a5cbd2fb657ab6bf06d211 into 2a9c9ae5944692a99cc0a52af7248cc587358890"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a5aa88c0a76e0a4eff4",
    "number": 178,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2262fdce776bb1f1bb49cb1635eb9a1ae3550386 into fb9b2d516ccc7d164d25f20eff58c985b6368ac7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a5ba88c0a76e0a4eff5",
    "number": 177,
    "body": "https://github.com/ambitioninc/kmatch - A language for matching/validating/filtering Python dictionaries.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a5ca88c0a76e0a4eff6",
    "number": 176,
    "body": "",
    "head_branch": "downloader-subliminal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a5da88c0a76e0a4eff7",
    "number": 175,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a5da88c0a76e0a4eff8",
    "number": 174,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a5ea88c0a76e0a4eff9",
    "number": 173,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 15ecb729ed9fd903033316d633c33c8190f94bf1 into 05797fe9d1ca6b10eefb244940ad5861a6f33a0d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a5fa88c0a76e0a4effa",
    "number": 172,
    "body": "Insert CherryPy to web development, CMS are Plone and Opps CMS and resources to books open source \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a60a88c0a76e0a4effb",
    "number": 171,
    "body": "Hello. I think Widgy CMS and Fein CMS you can add to great CMS list :)\n",
    "head_branch": "new_cms",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a60a88c0a76e0a4effc",
    "number": 170,
    "body": "Paramiko is a Python (2.6+, 3.3+) implementation of the SSHv2 protocol, providing both client and server functionality.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a61a88c0a76e0a4effd",
    "number": 168,
    "body": "Add zipa, a magic pythonic REST client \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a62a88c0a76e0a4effe",
    "number": 167,
    "body": "Schematics\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cc91d709c1e27490d8c11e813fb70fa9cf4b057b into 8e8278421a77cd379309c4be3f8be3ef54df33a3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a63a88c0a76e0a4efff",
    "number": 166,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a63a88c0a76e0a4f000",
    "number": 165,
    "body": "I've directed alot of people to this page for python libraries, some of them asked me for the simplest meta-data reader for mp3, I just added the one I use to try to get my 2-cents in. Thanks\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a64a88c0a76e0a4f001",
    "number": 163,
    "body": "features more readable tests like\n\n1 | should.be_a_number\nstatement | should.be_truthy\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a65a88c0a76e0a4f002",
    "number": 162,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bc7aec3bf97dc7d0cd4360db1e4f6462d8ab140f into 8f89e715d0490cbd5695d1fc265d3a41f78e5fde"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a66a88c0a76e0a4f003",
    "number": 161,
    "body": "Change Crossbar from websocket to networking category according to the author.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8eab5a18e178b36f701f51810ca6f769ab8ac7d5 into fb56c2be35d46755d2ddda29d3c323d802f16f60"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a67a88c0a76e0a4f004",
    "number": 160,
    "body": "Cookiecutter is a popular command-line utility that creates projects from cookiecutters (project templates).  E.g. Python package projects, jQuery plugin projects, Haskell projects, Lisp Projects, LaTeX templates)\n",
    "head_branch": "add-awesome-slugify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 06900e1ac3ad2ba94e071bd328ba21e1b56736b7 into 98384e031092c43a3e856611f709f55b1dd101d4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a67a88c0a76e0a4f005",
    "number": 158,
    "body": "from dev page: \"Unofficial Windows Binaries for Python Extension Packages. This page provides 32- and 64-bit Windows binaries of many scientific open-source extension packages for the official CPython distribution of the Python programming language. The files are unofficial (meaning: informal, unrecognized, personal, unsupported, no warranty, no liability, provided \"as is\") and made available for testing and evaluation purposes.\"\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a68a88c0a76e0a4f006",
    "number": 157,
    "body": "from home page: \"Python(x,y) is a scientific-oriented Python Distribution based on Qt and Spyder - see the Plugins page. Its purpose is to help scientific programmers used to interpreted languages (such as MATLAB or IDL) or compiled languages (C/C++ or Fortran) to switch to Python. C/C++ or Fortran programmers should appreciate to reuse their code \"as is\" by wrapping it so it can be called directly from Python scripts.\"\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a69a88c0a76e0a4f007",
    "number": 156,
    "body": "Added scapy(packet manipulation) and pycuda (for high performance computing)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3482ec88e8d7b11fef55a86cc042e3b1b9327d18 into 8e8278421a77cd379309c4be3f8be3ef54df33a3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a6aa88c0a76e0a4f008",
    "number": 155,
    "body": "Add APScheduler to the job scheduler section.\n\nhttp://apscheduler.readthedocs.org/\n",
    "head_branch": "APScheduler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c0e904fbfd589e4e5dc8e539537522d6b825f9c0 into 8e8278421a77cd379309c4be3f8be3ef54df33a3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a6aa88c0a76e0a4f009",
    "number": 154,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a6ba88c0a76e0a4f00a",
    "number": 152,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d9591336e22c8bf8a60b849735faf1794b4a8525 into c34cd6c46203c6b74062aec73f90f7cbcdc847d9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a6ca88c0a76e0a4f00b",
    "number": 151,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a6da88c0a76e0a4f00c",
    "number": 150,
    "body": "http://builtoncement.org/\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a6ea88c0a76e0a4f00d",
    "number": 149,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 011845103f4354ba008b0b98e5637df31376bea1 into 3f70cacfdf0cfb50a3e9a56d79c7fea3cff21115"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a6ea88c0a76e0a4f00e",
    "number": 148,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a6fa88c0a76e0a4f00f",
    "number": 147,
    "body": "add crossbar.io\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a70a88c0a76e0a4f010",
    "number": 146,
    "body": "Top Open-Source Python Static Site Generators like Pelican, Cactus, Hyde, Nikola, Tags, Tinkerer.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a71a88c0a76e0a4f011",
    "number": 145,
    "body": "",
    "head_branch": "add-txzmq",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b622fd0d59b17618b0b995f9016bc17a43e75516 into 0b8420a23c1436e632995e229b07ee80a79c5a22"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a72a88c0a76e0a4f012",
    "number": 144,
    "body": "Added some research and development tools / libraries for Virtual Networking and SDN (Software Defined Networking).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a72a88c0a76e0a4f013",
    "number": 143,
    "body": "Added 'Flask-Assets' to Asset Management\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 806503f2bec9cda56820d5f2fd773f7982abae89 into 43e8a84e939f360b9785bdae6d4a86ca105a47ef"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a73a88c0a76e0a4f014",
    "number": 142,
    "body": "admin-plus for web2py\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a74a88c0a76e0a4f015",
    "number": 141,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a75a88c0a76e0a4f016",
    "number": 140,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3e1245a4a48cb66447d903b06b533ce017b61836 into 9a1edde64ccfa2238e4e89d0b1e7094a918bc1d5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a75a88c0a76e0a4f017",
    "number": 139,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4b01654212d0b686fd4f91005472de66bd897333 into 750d3e2a8e0f639d000720ab28fa6bbfa4fa010d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a76a88c0a76e0a4f018",
    "number": 138,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a77a88c0a76e0a4f019",
    "number": 135,
    "body": "add Capstone disassembly framework\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a78a88c0a76e0a4f01a",
    "number": 134,
    "body": "- [dh-virtualenv](http://dh-virtualenv.readthedocs.org/en/latest/) - Build and distribute a virtualenv as a Debian package.\n",
    "head_branch": "dh-virtualenv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 034329cf5fd08dbee4882d29be7bfb739a3a0a8d into 033bb5a1c3580f946c49fa6be305cf8b9a73d4df"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a79a88c0a76e0a4f01b",
    "number": 133,
    "body": "Added a new package manager - Curdling,  which can be found at [Curdling](http://clarete.li/curdling/).\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a79a88c0a76e0a4f01c",
    "number": 132,
    "body": "https://github.com/sindresorhus/awesome\n\nMight be a good way for people to discover other lists.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a7aa88c0a76e0a4f01d",
    "number": 131,
    "body": "Added conda to the environment management section as conda does _both_ package management and environment management.  \n\nAdded nucleic / enaml to the GUI section.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a7ba88c0a76e0a4f01e",
    "number": 130,
    "body": "Just some small spelling and grammatical improvements that I found while reading through.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2a1bc5549c4ae5d60d2f245afef1ed07ae87855b into 542d644db34ad7960559cd3cc0f8f1deae677f83"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a7ca88c0a76e0a4f01f",
    "number": 129,
    "body": "- awesome-slugify is unique in that it can preserve unicode during slugification.\n- python-slugify turns unicode into ASCII\n- unicode-slugify requires Django as a dependency.\n",
    "head_branch": "add-awesome-slugify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 311a5f6bcb8f707c80c967b0625dadb77446284b into 81c24a8552651c7bcbd8a6598220200e9baf580a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a7ca88c0a76e0a4f020",
    "number": 128,
    "body": "",
    "head_branch": "add-py2neo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge baeb0103f64681654248eea40afa0c114413d8f1 into 542d644db34ad7960559cd3cc0f8f1deae677f83"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a7da88c0a76e0a4f021",
    "number": 127,
    "body": "",
    "head_branch": "add-pyparsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a7ea88c0a76e0a4f022",
    "number": 126,
    "body": "Adding the restless library to the API packages list and Full Stack Python to the website resources list.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a7fa88c0a76e0a4f023",
    "number": 125,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a80a88c0a76e0a4f024",
    "number": 124,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a80a88c0a76e0a4f025",
    "number": 123,
    "body": "It's a stable non blocking async server in pure python. Works with both python 2 and 3.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cfc27dac7e2b19f6b1f74471b1082904f6fe1212 into f3fec4c11b4b5bc25737185c990b2cf63c6a7171"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a81a88c0a76e0a4f026",
    "number": 122,
    "body": "Added link to the [Authomatic](http://peterhudec.github.io/authomatic/) authentication/authotrization package.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3321f4078ff13395bedc28e1558b6fd068b3f607 into d7a51a3f0826a2bb0e87906c41d7d591f71749e0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a82a88c0a76e0a4f027",
    "number": 120,
    "body": "",
    "head_branch": "awesome-awesomeness",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a83a88c0a76e0a4f028",
    "number": 119,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a84a88c0a76e0a4f029",
    "number": 118,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a84a88c0a76e0a4f02a",
    "number": 117,
    "body": "http://pygal.org/\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a85a88c0a76e0a4f02b",
    "number": 116,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a86a88c0a76e0a4f02c",
    "number": 115,
    "body": "Add django-formapi to the RESTful API section. Create JSON API:s with HMAC authentication and Django form-validation.\n",
    "head_branch": "django-formapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a87a88c0a76e0a4f02d",
    "number": 114,
    "body": "Add django-viewlet to the Caching section\n",
    "head_branch": "django-viewlet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a87a88c0a76e0a4f02e",
    "number": 113,
    "body": "Add djedi-cms to the CMS section, a lightweight content management system for Django\n",
    "head_branch": "djedi-cms",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a88a88c0a76e0a4f02f",
    "number": 112,
    "body": "Add the djedi-cms, a lightweight content management system for Django\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a89a88c0a76e0a4f030",
    "number": 111,
    "body": "Added a pretty popular library called Toolz (a collection of functional utilities).\nAnd CyToolz (Cython implementation of Toolz).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9173c9daf1d0275c6ab9e45031e54e820c11e312 into edb8b46fec8779bfdcad2307afe7d09babd7b6af"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a8aa88c0a76e0a4f031",
    "number": 110,
    "body": "A smart and nice Twitter Client on terminal.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a8aa88c0a76e0a4f032",
    "number": 109,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a8ba88c0a76e0a4f033",
    "number": 108,
    "body": "Add libsass-python binding library.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 64b46b89696880c031b337334722d37ff6f033e7 into 90f5c29a174522d3249126929a065d703cc0591e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a8ca88c0a76e0a4f034",
    "number": 107,
    "body": "Just add the module HTTPretty for mock http\n",
    "head_branch": "module_HTTPretty",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 165ad1c9a404f0a81e493edffe210118328890d5 into f1c32b8dc1c7d8332345be8e410781e1a84f73d7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a8da88c0a76e0a4f035",
    "number": 106,
    "body": "Just add the module freezegun for mock datetime\n",
    "head_branch": "module_freezegun",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a8ea88c0a76e0a4f036",
    "number": 105,
    "body": "Added PEW to README.md, a python environment tool.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d2362ad1db66da5bf70704cb0e73c195de2d9bb9 into f1c32b8dc1c7d8332345be8e410781e1a84f73d7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a8ea88c0a76e0a4f037",
    "number": 104,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a8fa88c0a76e0a4f038",
    "number": 101,
    "body": "Add glue command line utility\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a90a88c0a76e0a4f039",
    "number": 100,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a91a88c0a76e0a4f03a",
    "number": 98,
    "body": "awesome doc generator\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 28c3e88a3a29e7e3e695dfb42625d2164e9f83e4 into c437a7622488fdec4bf04e34c20af13eb9dca90d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a92a88c0a76e0a4f03b",
    "number": 97,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a92a88c0a76e0a4f03c",
    "number": 96,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a93a88c0a76e0a4f03d",
    "number": 95,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d39891f7d94fc49d5540ec5941f67f694150acf0 into c437a7622488fdec4bf04e34c20af13eb9dca90d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a94a88c0a76e0a4f03e",
    "number": 94,
    "body": "",
    "head_branch": "logging-logbook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a95a88c0a76e0a4f03f",
    "number": 93,
    "body": "",
    "head_branch": "vim-jedi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0764fd397fc9b3d8fd0eb2d76a616bde2bf6daf0 into 31ef68d142e08b587711bafdb9f624a65303c8cf"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a95a88c0a76e0a4f040",
    "number": 92,
    "body": "Added 'conda' to Package Management section.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3381499cc6bf103f790e7da0e7c3df7e63c908c2 into bcdd67c314e1a6b9f95a8196e074f4467a22b0c7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a96a88c0a76e0a4f041",
    "number": 91,
    "body": "develop by @heynemann @diogobaeder @rafaelcaricio ...\n",
    "head_branch": "proxy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a97a88c0a76e0a4f042",
    "number": 90,
    "body": "- [mixer](https://mixer.readthedocs.org)\n- [pylama](https://pylama.readthedocs.org/)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a98a88c0a76e0a4f043",
    "number": 89,
    "body": "Adding scikits.talkbox (speech/voice proc.) in the Audio Section.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f1574217b5293fa1bd446f62ec2e6d1168fccf05 into 9314dc9a309c52c6252e7bfa3c7474c9fa1c4c16"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a99a88c0a76e0a4f044",
    "number": 88,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b0cbd81f66b03a3d11dbfef6b3c778c05c68883a into c75a1096e759b9f23a5c5e37ea278f5de83e726b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a99a88c0a76e0a4f045",
    "number": 87,
    "body": "add mysql-connector-python - pure-python MySQL driver from Oracle (in case you don't want or can't install system MySQL library)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1c56c0b2362fed7790c3b76aed2ef4ba5950aa96 into 9314dc9a309c52c6252e7bfa3c7474c9fa1c4c16"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a9aa88c0a76e0a4f046",
    "number": 86,
    "body": "develop by @danilobellini\n",
    "head_branch": "audio-audiolazy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 067f09d3e861513344dbc5ed0b25a232fe457f68 into 6ac0baa179a1c3eb828d028822f2f003962eb80e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a9ba88c0a76e0a4f047",
    "number": 85,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a9ca88c0a76e0a4f048",
    "number": 84,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a9ca88c0a76e0a4f049",
    "number": 83,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a9da88c0a76e0a4f04a",
    "number": 82,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a9ea88c0a76e0a4f04b",
    "number": 81,
    "body": "",
    "head_branch": "sanction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a9fa88c0a76e0a4f04c",
    "number": 80,
    "body": "Adding some very useful python libraries that I use. My 2 cents to awesome-python\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8a9fa88c0a76e0a4f04d",
    "number": 79,
    "body": "Really nice and powerful replacement for default admin interface.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa0a88c0a76e0a4f04e",
    "number": 78,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa1a88c0a76e0a4f04f",
    "number": 77,
    "body": "Reliable, performant and robust workflow execution is\na key part of many python applications, as such this\nadds a list of libraries that can help make this possible.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa2a88c0a76e0a4f050",
    "number": 76,
    "body": "An implementation of figlet written in python.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa3a88c0a76e0a4f051",
    "number": 75,
    "body": ":)\n\nThanks for this list btw, it's great.\n",
    "head_branch": "added_wifi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa3a88c0a76e0a4f052",
    "number": 74,
    "body": "Small fix in pypy line.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa4a88c0a76e0a4f053",
    "number": 73,
    "body": "I'm not sure what your criteria for awesome is, but added pycallgraph as it is pretty cool.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa5a88c0a76e0a4f054",
    "number": 72,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa6a88c0a76e0a4f055",
    "number": 71,
    "body": "Hi!\nVery useful library, consider adding it to list.\nRegards\nRadek\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa7a88c0a76e0a4f056",
    "number": 69,
    "body": "Just added carteblanche to the new permissions category!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa7a88c0a76e0a4f057",
    "number": 68,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4338356991d85a766a509d32b5d5a694f0b0c4c1 into 61d5876bd4f694e21a3a5b34f691be55da6f6cdf"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa8a88c0a76e0a4f058",
    "number": 67,
    "body": "to make wording more consistent with \"Natural Language Processing\", \"Text Processing\" etc.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aa9a88c0a76e0a4f059",
    "number": 66,
    "body": "adding \"cliff\" for crafting multi-level command for command-line applications\ndoc_home: https://cliff.readthedocs.org/en/latest/introduction.html\n\nfrom dev:\n\n> The cliff framework is meant to be used to create multi-level commands such as subversion and git, where the main program handles some basic argument parsing and then invokes a sub-command to do the work.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aaaa88c0a76e0a4f05a",
    "number": 65,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aaba88c0a76e0a4f05b",
    "number": 64,
    "body": "Adding link to WikiTeam project, which has scripts for downloading wikis, mostly MediaWiki https://github.com/WikiTeam/wikiteam\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aaba88c0a76e0a4f05c",
    "number": 63,
    "body": "pyPDF2 is under active maintenance and can be complementary to PDFMiner\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aaca88c0a76e0a4f05d",
    "number": 62,
    "body": "Added pycassa - Python Thrift driver for Apache Cassandra.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f10b7eacbff7c8a3c72dc7ab907cf7b89012832f into 5dbd7ef7e0e52fa8e021833aa521bae4b34d16fa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aada88c0a76e0a4f05e",
    "number": 61,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0a5d9ab9b477dc2befd5f621664dd6d529fabd8d into a80b931fe9946abfe9625e215c4f1602167c4dd6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aaea88c0a76e0a4f05f",
    "number": 60,
    "body": "Clime (command line tool)\nGrappelli (admin panel)\npudb (debugging tool)\nbpython (miscellaneous)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge df0eaeef8add28e49d05c825277cd7dfea8e940f into 48d2026d11334bdf367f8d2320b6f18d161353c4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aaea88c0a76e0a4f060",
    "number": 59,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8aafa88c0a76e0a4f061",
    "number": 58,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e9b1acbe38b60531cfa355ec71955c68632af985 into e6e8b21382a8035f613899f6102ae3f7492a37ab"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab0a88c0a76e0a4f062",
    "number": 56,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 80afa69c82588150ee605299e842882473799aff into 40ac968c094fe9636b1c8cce3e1f8ebb7a5c912f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab1a88c0a76e0a4f063",
    "number": 55,
    "body": "New maintainer since:\nhttps://github.com/aaronsw/html2text/issues/91\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab2a88c0a76e0a4f064",
    "number": 54,
    "body": "I wrote a small script that sorts the entries at the lowest level. I've explained how it's being done in the sort.py file. This is by no means an ideal solution - it is quite limited. In any case, for now, it is functional.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab2a88c0a76e0a4f065",
    "number": 53,
    "body": "requesting to add in \"Environment Management\" section\n\nabout from dev-site:\n\"eGenix PyRun™ is our open source, one file, no installation version of Python, making the distribution of a Python interpreter to run based scripts and applications to Unix based systems as simple as copying a single file. eGenix PyRun's executable only needs 11MB for Python 2 and 13MB for Python 3, but still supports most Python applications and scripts - and it can be compressed to just 3-4MB using upx, if needed.\"\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab3a88c0a76e0a4f066",
    "number": 52,
    "body": "All important to Python development. I also added ctypes to the FFI section.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d31d7af6a1996c952e6b3df608fb89363650d547 into 4c50d9e2027c06930b339b3a4d77a57b96763229"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab4a88c0a76e0a4f067",
    "number": 51,
    "body": "",
    "head_branch": "Branch_pybarcode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab5a88c0a76e0a4f068",
    "number": 50,
    "body": "",
    "head_branch": "Branch_pyqt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 45fb3a83699bca843c1a6ffd45559f9777b5a38a into 84315457a8605c87e748d2cc8e2c5c7cf65a71ee"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab5a88c0a76e0a4f069",
    "number": 49,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab6a88c0a76e0a4f06a",
    "number": 47,
    "body": "Added percol, an interactive selection to the traditional pipe concept on UNIX and pywk, a python awk-like line processing tool\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab7a88c0a76e0a4f06b",
    "number": 46,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge face1d9eb73e7c2a1f5c3203792fa4737a3bf65b into 4f19dee6df6cd320caa1e4911638e9e0c4c2efd0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab8a88c0a76e0a4f06c",
    "number": 45,
    "body": "Added voluptuous, dictshield and colander.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab9a88c0a76e0a4f06d",
    "number": 44,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ab9a88c0a76e0a4f06e",
    "number": 42,
    "body": "I'm the author of Contexts, a testing framework which I think is sufficiently awesome to be included in this list! :wink: \n",
    "head_branch": "contexts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8abaa88c0a76e0a4f06f",
    "number": 41,
    "body": "I'm part of Plotly, and we'd love to be added to the list. Thanks!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8abba88c0a76e0a4f070",
    "number": 40,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 79c0ecab62bc847f563a1453d1257ea117407b43 into bd6f8b4b8be4330c0efd821de9e5673bbf13f8d7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8abca88c0a76e0a4f071",
    "number": 39,
    "body": "Add Mistune for Markdown.\n\nAdd OAuthLib and Flask-OAuthlib for Authentication section.\n",
    "head_branch": "libraries",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8abca88c0a76e0a4f072",
    "number": 38,
    "body": "Python-mode by Klen is the all in one tool that I use everyday for Python development in Vim. It is fully featured with linting, auto-refactoring, autocomplete, custom motions and more.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f4aa0e70c4e0e9c698f53bed5cf982146b02d921 into da3be0ae991fb18a1aa2890ebd47b51f17abc000"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8abda88c0a76e0a4f073",
    "number": 37,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8abea88c0a76e0a4f074",
    "number": 36,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8abfa88c0a76e0a4f075",
    "number": 35,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8adbc1272ed8a45fac46255dbef3233cf246b987 into 960ffad2c8f0883d17ebd2ef80cf3e8092bfc2fb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac0a88c0a76e0a4f076",
    "number": 34,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac0a88c0a76e0a4f077",
    "number": 33,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac1a88c0a76e0a4f078",
    "number": 32,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac2a88c0a76e0a4f079",
    "number": 31,
    "body": "[webassets](https://github.com/miracle2k/webassets) is a pretty kickass asset management solution and should be included.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac3a88c0a76e0a4f07a",
    "number": 30,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fd4252c5ec2d3623cd5ed5a36e4f3eaceaeb8f44 into 960ffad2c8f0883d17ebd2ef80cf3e8092bfc2fb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac3a88c0a76e0a4f07b",
    "number": 29,
    "body": "Proposed tools: SCons and PlatformIO\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8c233b2232a3f82cd7838aa0ffd7d9102bf24f30 into bd6f8b4b8be4330c0efd821de9e5673bbf13f8d7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac4a88c0a76e0a4f07c",
    "number": 28,
    "body": "Added scikit-image and scikit-video in the science module. As new modules are submitted, it would be probably better create a signal processing category.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d56c7f629c9ae1ce3010dec5a453e7bd6710705d into e6e8b21382a8035f613899f6102ae3f7492a37ab"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac5a88c0a76e0a4f07d",
    "number": 27,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac6a88c0a76e0a4f07e",
    "number": 26,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7efb14819980acf2f635f8e25505c5f7fabc56f4 into 184b7eecbfda179962ae9ec907913450c83ed5b7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac6a88c0a76e0a4f07f",
    "number": 25,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac7a88c0a76e0a4f080",
    "number": 23,
    "body": "Added Genshi, Mako, Cheetah and webstring.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac8a88c0a76e0a4f081",
    "number": 22,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1eef1eb1d3ee3be2d208336a47a4d038bb2ad547 into 12478e0128c9068187b5984740fc3f09869e9b9a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ac9a88c0a76e0a4f082",
    "number": 21,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8acaa88c0a76e0a4f083",
    "number": 20,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8acaa88c0a76e0a4f084",
    "number": 19,
    "body": "Edited readme file, added more package\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9aa9c38506026e555422135c1061f8a6efd60be0 into 0846aeb5c763fcb9773bb6c36a5754854a064290"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8acba88c0a76e0a4f085",
    "number": 18,
    "body": "excellent API for growth hackers & sales sleuths.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8acca88c0a76e0a4f086",
    "number": 17,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ef410f9d32e4a9457e9e20b6da5a993945594a66 into 12478e0128c9068187b5984740fc3f09869e9b9a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8acda88c0a76e0a4f087",
    "number": 16,
    "body": "Trivial addition\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8acda88c0a76e0a4f088",
    "number": 15,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8acea88c0a76e0a4f089",
    "number": 13,
    "body": "Adding MkDocs in Documentation section, a (future ?) markdown based sphinx alternative.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1f5ef7759c4a3e04fb2b3c86a198c36ac22a4733 into 985b8ea0cabaa7318c60e6668364e2898e6e6386"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8acfa88c0a76e0a4f08a",
    "number": 12,
    "body": "Added TurboGears, Grok and CherryPy.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad0a88c0a76e0a4f08b",
    "number": 11,
    "body": "Another new section, wasn't sure what else to call it.\n",
    "head_branch": "melignus-high-performance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8a486f3ca465092c30f518cc7d22ed2cb5351e6d into 985b8ea0cabaa7318c60e6668364e2898e6e6386"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad1a88c0a76e0a4f08c",
    "number": 10,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad1a88c0a76e0a4f08d",
    "number": 9,
    "body": "Ended up adding more than I had anticipated. I can break this up into pulls for the various headings if it matters?\n",
    "head_branch": "melignus-additions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a949a5e18993c2b3f0dd6dde8ac139722a16267e into 448fa7680390e153713bd2fab6cd87c975c0156a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad2a88c0a76e0a4f08e",
    "number": 8,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c03720e214388f93fab6cd25bf124b8354f8d073 into 33adea70e864491697df39c33ef7aa9062a8ad8e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad3a88c0a76e0a4f08f",
    "number": 7,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 13fd9a39b1d665bfa28679f23d376ead91d8439b into bb7ffc906c1342299649dd553a3fad64e1ee0a2c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad4a88c0a76e0a4f090",
    "number": 6,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad5a88c0a76e0a4f091",
    "number": 5,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 24a2062a2c3076d1df6ed6e907e775d22f04271e into 28cb7e2a6c3e4f3959e15216237f9cdc7dcbee93"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad5a88c0a76e0a4f092",
    "number": 4,
    "body": "beaker library for caching and sessions.\n",
    "head_branch": "caching_links_contrib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad6a88c0a76e0a4f093",
    "number": 3,
    "body": "Pattern is also a great tool for NPL task and not only to machine learning. So I added to NLP section too and I updated the Textblob description that is a nice \"interface\" for NLTK and Pattern.\nBesides, I added the awesome and growing web2py web framework.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad7a88c0a76e0a4f094",
    "number": 2,
    "body": "- Quokka is a small and flexible CMS powered by Flask and MongoDB\n- web2py is a full stack framework and platform focused in the ease of use\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cefe281d90500ec391dfb3ca8b12846a500ed1b5 into c62a2049197be4dc714fd999130de4ff09a7461b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f8ad8a88c0a76e0a4f095",
    "number": 1,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b900fda388de33816944a9638942cc0f5c4decae into ce7838a74cd355fa3d0375f4d0a2a25f1535d671"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fbd5944ee515ce6a4a446",
    "number": 2580,
    "body": "adding dynaconf\r\n\r\nhttps://dynaconf.com\r\n\r\n## What is this Python project?\r\n\r\n12 factor app inspired configuration library for any kind of Python project.\r\n\r\n## What's the difference between this Python project and similar ones?\r\n\r\n- Support multiple file formats\r\n- Allow to customize the sources for configuration\r\n- Frictionless (integrate well with existing configuration)\r\n- Plugin for Django, Flask, FastAPI\r\n\r\n--\r\n\r\nAnyone who agrees with this pull request could submit an *Approve* review to it.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  }
]